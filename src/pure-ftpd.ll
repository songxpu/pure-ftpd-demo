; ModuleID = 'pure-ftpd.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct._code = type { i8*, i32 }
%struct.AuthResult_ = type { i32, i32, i32, i8*, i32, i8* }
%struct.sockaddr_storage = type { i16, [118 x i8], i64 }
%struct.__sigset_t = type { [16 x i64] }
%struct.reply = type { %struct.reply*, [1 x i8] }
%struct.Authentications_ = type { %struct.Authentication_*, i8*, %struct.Authentications_* }
%struct.Authentication_ = type { i8*, void (i8*)*, void (%struct.AuthResult_*, i8*, i8*, %struct.sockaddr_storage*, %struct.sockaddr_storage*)*, void ()* }
%struct.SimpleConfEntry_ = type { i8*, i8* }
%struct.option = type { i8*, i32, i32*, i32 }
%struct.timespec = type { i64, i64 }
%struct.userid = type { %struct.userid*, i32, i8* }
%struct.groupid = type { %struct.groupid*, i32, i8* }
%struct.filename = type { %struct.filename*, %struct.filename*, i32, [1 x i8] }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.rng_state = type { i32, i32, i64, [32 x i8], [512 x i8] }
%struct.DirAlias_ = type { i8*, i8*, %struct.DirAlias_* }
%struct.IPTrack_ = type { %struct.sockaddr_storage, i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.pollfd = type { i32, i16, i16 }
%struct.sockaddr_in = type { i16, i16, %struct.in_addr, [8 x i8] }
%struct.in_addr = type { i32 }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.in6_addr = type { %union.anon }
%union.anon = type { [4 x i32] }
%union.__SOCKADDR_ARG = type { %struct.sockaddr* }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.statvfs64 = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [6 x i32] }
%struct.passwd = type { i8*, i8*, i32, i32, i8*, i8*, i8* }
%struct.DLHandler_ = type { i32, i8*, i32, i32, i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i8*, i8*, i32, double, double, i64, %struct.pollfd }
%struct.timezone = type { i32, i32 }
%struct.ULHandler_ = type { i8*, i64, i32, i8*, i32, i8*, i32, i64, i64, i64, i64, i64, i64, i32, double, double, i64, i64, i64, [2 x %struct.pollfd], %struct.pollfd }
%struct.SimpleConfConfig_ = type { i8*, i32 (i8**, i8*, i8*)* }
%struct.sigaction = type { %union.anon.0, %struct.__sigset_t, i32, void ()* }
%union.anon.0 = type { void (i32)* }
%struct.addrinfo = type { i32, i32, i32, i32, i32, %struct.sockaddr*, i8*, %struct.addrinfo* }
%struct.sockaddr_in6 = type { i16, i16, i32, %struct.in6_addr, i32 }
%struct.spwd = type { i8*, i8*, i64, i64, i64, i64, i64, i64, i64 }
%struct.group = type { i8*, i8*, i32, i8** }
%struct.glob_t = type { i64, i32, i32, i32, i32, i32, i8**, %struct.stat**, i32 (i8*, i32)*, void (i8*)*, %struct.dirent* (i8*)*, i8* (i8*)*, i32 (i8*, %struct.stat*)*, i32 (i8*, %struct.stat*)* }
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%struct.PureFileInfo_ = type { i8**, i64, i64, i64, i32, i64, i32, i32 }
%struct.__dirstream = type opaque
%struct.Match_ = type { i8*, i64 }
%struct.glob_lim = type { i64, i64, i64 }
%struct.glob_path_stat = type { i8*, %struct.stat* }

@prioritynames = dso_local global [13 x %struct._code] [%struct._code { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0), i32 1 }, %struct._code { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i32 2 }, %struct._code { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i32 0, i32 0), i32 7 }, %struct._code { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i32 0, i32 0), i32 0 }, %struct._code { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i32 0, i32 0), i32 3 }, %struct._code { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), i32 3 }, %struct._code { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0), i32 6 }, %struct._code { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i32 0, i32 0), i32 16 }, %struct._code { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i32 0, i32 0), i32 5 }, %struct._code { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i32 0, i32 0), i32 0 }, %struct._code { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i32 0, i32 0), i32 4 }, %struct._code { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i32 0, i32 0), i32 4 }, %struct._code { i8* null, i32 -1 }], align 16, !dbg !0
@.str = private unnamed_addr constant [6 x i8] c"alert\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"crit\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"emerg\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"err\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"info\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.8 = private unnamed_addr constant [7 x i8] c"notice\00", align 1
@.str.9 = private unnamed_addr constant [6 x i8] c"panic\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"warn\00", align 1
@.str.11 = private unnamed_addr constant [8 x i8] c"warning\00", align 1
@facilitynames = dso_local global [23 x %struct._code] [%struct._code { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i32 0, i32 0), i32 32 }, %struct._code { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i32 0, i32 0), i32 80 }, %struct._code { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i32 0, i32 0), i32 72 }, %struct._code { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i32 0, i32 0), i32 24 }, %struct._code { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i32 0, i32 0), i32 88 }, %struct._code { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i32 0, i32 0), i32 0 }, %struct._code { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i32 0, i32 0), i32 48 }, %struct._code { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i32 0, i32 0), i32 16 }, %struct._code { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i32 0, i32 0), i32 192 }, %struct._code { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i32 0, i32 0), i32 56 }, %struct._code { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.22, i32 0, i32 0), i32 32 }, %struct._code { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i32 0, i32 0), i32 40 }, %struct._code { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i32 0, i32 0), i32 8 }, %struct._code { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i32 0, i32 0), i32 64 }, %struct._code { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26, i32 0, i32 0), i32 128 }, %struct._code { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.27, i32 0, i32 0), i32 136 }, %struct._code { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i32 0, i32 0), i32 144 }, %struct._code { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i32 0, i32 0), i32 152 }, %struct._code { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i32 0, i32 0), i32 160 }, %struct._code { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i32 0, i32 0), i32 168 }, %struct._code { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.32, i32 0, i32 0), i32 176 }, %struct._code { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i32 0, i32 0), i32 184 }, %struct._code { i8* null, i32 -1 }], align 16, !dbg !400
@.str.12 = private unnamed_addr constant [5 x i8] c"auth\00", align 1
@.str.13 = private unnamed_addr constant [9 x i8] c"authpriv\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"cron\00", align 1
@.str.15 = private unnamed_addr constant [7 x i8] c"daemon\00", align 1
@.str.16 = private unnamed_addr constant [4 x i8] c"ftp\00", align 1
@.str.17 = private unnamed_addr constant [5 x i8] c"kern\00", align 1
@.str.18 = private unnamed_addr constant [4 x i8] c"lpr\00", align 1
@.str.19 = private unnamed_addr constant [5 x i8] c"mail\00", align 1
@.str.20 = private unnamed_addr constant [5 x i8] c"mark\00", align 1
@.str.21 = private unnamed_addr constant [5 x i8] c"news\00", align 1
@.str.22 = private unnamed_addr constant [9 x i8] c"security\00", align 1
@.str.23 = private unnamed_addr constant [7 x i8] c"syslog\00", align 1
@.str.24 = private unnamed_addr constant [5 x i8] c"user\00", align 1
@.str.25 = private unnamed_addr constant [5 x i8] c"uucp\00", align 1
@.str.26 = private unnamed_addr constant [7 x i8] c"local0\00", align 1
@.str.27 = private unnamed_addr constant [7 x i8] c"local1\00", align 1
@.str.28 = private unnamed_addr constant [7 x i8] c"local2\00", align 1
@.str.29 = private unnamed_addr constant [7 x i8] c"local3\00", align 1
@.str.30 = private unnamed_addr constant [7 x i8] c"local4\00", align 1
@.str.31 = private unnamed_addr constant [7 x i8] c"local5\00", align 1
@.str.32 = private unnamed_addr constant [7 x i8] c"local6\00", align 1
@.str.33 = private unnamed_addr constant [7 x i8] c"local7\00", align 1
@default_tz_for_putenv = dso_local global [13 x i8] c"TZ=UTC+00:00\00", align 1, !dbg !411
@fd_inputFile = dso_local global i32 0, align 4, !dbg !417
@clientfd = dso_local global i32 0, align 4, !dbg !419
@datafd = dso_local global i32 -1, align 4, !dbg !421
@cmdsize = dso_local constant i64 4112, align 8, !dbg !423
@noopidle = dso_local global i64 -1, align 8, !dbg !426
@firstport = dso_local global i32 1024, align 4, !dbg !428
@lastport = dso_local global i32 65535, align 4, !dbg !430
@dot_write_ok = dso_local global i8 1, align 1, !dbg !432
@dot_read_ok = dso_local global i8 1, align 1, !dbg !434
@type = dso_local global i8 1, align 1, !dbg !436
@idletime = dso_local global i64 900, align 8, !dbg !438
@resolve_hostnames = dso_local global i8 1, align 1, !dbg !440
@max_ls_files = dso_local global i32 10000, align 4, !dbg !442
@max_ls_depth = dso_local global i32 5, align 4, !dbg !444
@maxusers = dso_local global i32 50, align 4, !dbg !446
@xferfd = dso_local global i32 -1, align 4, !dbg !448
@u_mask = dso_local global i32 91, align 4, !dbg !451
@u_mask_d = dso_local global i32 18, align 4, !dbg !453
@state_needs_update = dso_local global i8 1, align 1, !dbg !455
@syslog_facility = dso_local global i32 88, align 4, !dbg !457
@months = dso_local global [12 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.45, i32 0, i32 0)], align 16, !dbg !459
@.str.34 = private unnamed_addr constant [4 x i8] c"Jan\00", align 1
@.str.35 = private unnamed_addr constant [4 x i8] c"Feb\00", align 1
@.str.36 = private unnamed_addr constant [4 x i8] c"Mar\00", align 1
@.str.37 = private unnamed_addr constant [4 x i8] c"Apr\00", align 1
@.str.38 = private unnamed_addr constant [4 x i8] c"May\00", align 1
@.str.39 = private unnamed_addr constant [4 x i8] c"Jun\00", align 1
@.str.40 = private unnamed_addr constant [4 x i8] c"Jul\00", align 1
@.str.41 = private unnamed_addr constant [4 x i8] c"Aug\00", align 1
@.str.42 = private unnamed_addr constant [4 x i8] c"Sep\00", align 1
@.str.43 = private unnamed_addr constant [4 x i8] c"Oct\00", align 1
@.str.44 = private unnamed_addr constant [4 x i8] c"Nov\00", align 1
@.str.45 = private unnamed_addr constant [4 x i8] c"Dec\00", align 1
@pid_file = dso_local global i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.46, i32 0, i32 0), align 8, !dbg !464
@.str.46 = private unnamed_addr constant [23 x i8] c"/var/run/pure-ftpd.pid\00", align 1
@logging = common dso_local global i8 0, align 1, !dbg !577
@no_syslog = common dso_local global i8 0, align 1, !dbg !681
@loggedin = common dso_local global i8 0, align 1, !dbg !611
@account = common dso_local global [128 x i8] zeroinitializer, align 16, !dbg !613
@host = common dso_local global [1025 x i8] zeroinitializer, align 16, !dbg !652
@replycode = common dso_local global i32 0, align 4, !dbg !657
@passive = common dso_local global i8 0, align 1, !dbg !591
@v6ready = common dso_local global i8 0, align 1, !dbg !595
@broken_client_compat = common dso_local global i8 0, align 1, !dbg !628
@guest = common dso_local global i8 0, align 1, !dbg !634
@wd = common dso_local global [4097 x i8] zeroinitializer, align 16, !dbg !604
@dot_read_anon_ok = common dso_local global i8 0, align 1, !dbg !642
@anon_only = common dso_local global i8 0, align 1, !dbg !572
@chrooted = common dso_local global i8 0, align 1, !dbg !624
@root_directory = common dso_local global i8* null, align 8, !dbg !609
@authresult = common dso_local global %struct.AuthResult_ zeroinitializer, align 8, !dbg !703
@ctrlconn = common dso_local global %struct.sockaddr_storage zeroinitializer, align 8, !dbg !593
@peer = common dso_local global %struct.sockaddr_storage zeroinitializer, align 8, !dbg !661
@useruid = common dso_local global i32 0, align 4, !dbg !636
@userchroot = common dso_local global i8 0, align 1, !dbg !622
@keepallfiles = common dso_local global i8 0, align 1, !dbg !689
@candownload = common dso_local global i8 0, align 1, !dbg !638
@allowfxp = common dso_local global i8 0, align 1, !dbg !589
@cwd_failures = common dso_local global i64 0, align 8, !dbg !715
@force_passive_ip = common dso_local global %struct.sockaddr_storage zeroinitializer, align 8, !dbg !663
@epsv_all = common dso_local global i8 0, align 1, !dbg !675
@peerdataport = common dso_local global i16 0, align 2, !dbg !667
@nochmod = common dso_local global i8 0, align 1, !dbg !687
@be_customer_proof = common dso_local global i8 0, align 1, !dbg !707
@load = common dso_local global double 0.000000e+00, align 8, !dbg !640
@restartat = common dso_local global i64 0, align 8, !dbg !644
@warez = common dso_local global i32 0, align 4, !dbg !630
@tls_cnx = common dso_local global i8* null, align 8, !dbg !711
@tls_data_cnx = common dso_local global i8* null, align 8, !dbg !713
@throttling_bandwidth_dl = common dso_local global i64 0, align 8, !dbg !585
@downloaded = common dso_local global i64 0, align 8, !dbg !568
@allow_anon_mkdir = common dso_local global i32 0, align 4, !dbg !648
@disallow_passive = common dso_local global i8 0, align 1, !dbg !679
@maxdiskusagepct = common dso_local global double 0.000000e+00, align 8, !dbg !677
@anon_noupload = common dso_local global i8 0, align 1, !dbg !685
@no_truncate = common dso_local global i8 0, align 1, !dbg !697
@throttling_bandwidth_ul = common dso_local global i64 0, align 8, !dbg !587
@uploaded = common dso_local global i64 0, align 8, !dbg !570
@disallow_rename = common dso_local global i8 0, align 1, !dbg !695
@renamefrom = common dso_local global i8* null, align 8, !dbg !618
@page_size = common dso_local global i64 0, align 8, !dbg !699
@log_pid = common dso_local global i32 0, align 4, !dbg !701
@no_ipv4 = common dso_local global i8 0, align 1, !dbg !597
@force_ls_a = common dso_local global i8 0, align 1, !dbg !659
@chroot_trustedgid = common dso_local global i32 0, align 4, !dbg !626
@daemonize = common dso_local global i8 0, align 1, !dbg !691
@maxip = common dso_local global i32 0, align 4, !dbg !671
@maxload = common dso_local global double 0.000000e+00, align 8, !dbg !669
@force_passive_ip_s = common dso_local global i8* null, align 8, !dbg !665
@autorename = common dso_local global i8 0, align 1, !dbg !683
@create_home = common dso_local global i8 0, align 1, !dbg !693
@idletime_noop = common dso_local global double 0.000000e+00, align 8, !dbg !646
@inputFile = common dso_local global [1024 x i8] zeroinitializer, align 16, !dbg !580
@trustedip = common dso_local global %struct.sockaddr_storage* null, align 8, !dbg !574
@cmd = common dso_local global [4128 x i8] zeroinitializer, align 16, !dbg !599
@serverport = common dso_local global i16 0, align 2, !dbg !620
@debug = common dso_local global i8 0, align 1, !dbg !632
@fortunes_file = common dso_local global i8* null, align 8, !dbg !650
@standalone = common dso_local global i8 0, align 1, !dbg !673
@session_start_time = common dso_local global i64 0, align 8, !dbg !705
@atomic_prefix = common dso_local global i8* null, align 8, !dbg !709
@llvm.used = appending global [1 x i8*] [i8* bitcast (i8** @pureftpd_start._A to i8*)], section "llvm.metadata"
@pureftpd_start._A = internal global i8* null, align 8, !dbg !488
@old_sigmask = internal global %struct.__sigset_t zeroinitializer, align 8, !dbg !498
@get_atomic_file.res = internal global [4096 x i8] zeroinitializer, align 16, !dbg !736
@.str.47 = private unnamed_addr constant [3 x i8] c"//\00", align 1
@.str.48 = private unnamed_addr constant [4 x i8] c"/./\00", align 1
@.str.49 = private unnamed_addr constant [4 x i8] c"../\00", align 1
@.str.50 = private unnamed_addr constant [5 x i8] c"/../\00", align 1
@replybuf_pos = internal global i8* getelementptr inbounds ([16584 x i8], [16584 x i8]* @replybuf, i32 0, i32 0), align 8, !dbg !724
@replybuf = internal global [16584 x i8] zeroinitializer, align 16, !dbg !717
@replybuf_left = internal global i64 0, align 8, !dbg !722
@.str.51 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.53 = private unnamed_addr constant [8 x i8] c"[INFO] \00", align 1
@.str.54 = private unnamed_addr constant [11 x i8] c"[WARNING] \00", align 1
@.str.55 = private unnamed_addr constant [9 x i8] c"[ERROR] \00", align 1
@.str.56 = private unnamed_addr constant [10 x i8] c"[NOTICE] \00", align 1
@.str.57 = private unnamed_addr constant [9 x i8] c"[DEBUG] \00", align 1
@.str.58 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.60 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.59 = private unnamed_addr constant [13 x i8] c"(%s@%s) %s%s\00", align 1
@firstreply = internal global %struct.reply* null, align 8, !dbg !564
@.str.61 = private unnamed_addr constant [10 x i8] c"%3d%c%s\0D\0A\00", align 1
@.str.62 = private unnamed_addr constant [8 x i8] c"%3d%c%s\00", align 1
@lastreply = internal global %struct.reply* null, align 8, !dbg !566
@.str.52 = private unnamed_addr constant [14 x i8] c"Out of memory\00", align 1
@argv0 = internal global i8** null, align 8, !dbg !508
@argv_lth = internal global i64 0, align 8, !dbg !510
@.str.63 = private unnamed_addr constant [24 x i8] c"Active mode is disabled\00", align 1
@.str.64 = private unnamed_addr constant [29 x i8] c"Can't create the data socket\00", align 1
@.str.65 = private unnamed_addr constant [10 x i8] c"127.0.0.1\00", align 1
@.str.66 = private unnamed_addr constant [5 x i8] c"6326\00", align 1
@.str.67 = private unnamed_addr constant [28 x i8] c"Connected from (|%c|%s|%s|)\00", align 1
@.str.141 = private unnamed_addr constant [19 x i8] c"No data connection\00", align 1
@.str.142 = private unnamed_addr constant [38 x i8] c"Timeout (no new data for %lu seconds)\00", align 1
@.str.143 = private unnamed_addr constant [8 x i8] c"Logout.\00", align 1
@.str.144 = private unnamed_addr constant [36 x i8] c"The connection couldn't be accepted\00", align 1
@.str.145 = private unnamed_addr constant [25 x i8] c"Accepted data connection\00", align 1
@.str.146 = private unnamed_addr constant [22 x i8] c"Connecting to port %d\00", align 1
@.str.216 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.68 = private unnamed_addr constant [36 x i8] c"Unable to open a passive connection\00", align 1
@.str.69 = private unnamed_addr constant [41 x i8] c"Unable to identify the local data socket\00", align 1
@.str.70 = private unnamed_addr constant [26 x i8] c"Connected to (|%c|%s|%s|)\00", align 1
@.str.71 = private unnamed_addr constant [27 x i8] c"Syntax error in IP address\00", align 1
@.str.72 = private unnamed_addr constant [39 x i8] c"Only IPv4 and IPv6 are supported (1,2)\00", align 1
@.str.73 = private unnamed_addr constant [27 x i8] c"Only IPv4 is supported (1)\00", align 1
@.str.74 = private unnamed_addr constant [12 x i8] c"%u,%u,%u,%u\00", align 1
@.str.75 = private unnamed_addr constant [12 x i8] c"%u.%u.%u.%u\00", align 1
@.str.76 = private unnamed_addr constant [13 x i8] c"0123456789.,\00", align 1
@.str.128 = private unnamed_addr constant [21 x i8] c"You aren't logged in\00", align 1
@.str.137 = private unnamed_addr constant [43 x i8] c"Sorry, but I won't connect to ports < 1024\00", align 1
@.str.138 = private unnamed_addr constant [45 x i8] c"I won't open a connection to %s (only to %s)\00", align 1
@.str.139 = private unnamed_addr constant [28 x i8] c"FXP transfer: from %s to %s\00", align 1
@.str.140 = private unnamed_addr constant [24 x i8] c"PORT command successful\00", align 1
@doport3.portlist = internal constant [10 x i16] [i16 20, i16 2, i16 3, i16 4, i16 5, i16 6, i16 10, i16 14, i16 16, i16 0], align 16, !dbg !726
@.str.239 = private unnamed_addr constant [24 x i8] c"0123456789abcdefABCDEF:\00", align 1
@.str.77 = private unnamed_addr constant [8 x i8] c".banner\00", align 1
@.str.78 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.79 = private unnamed_addr constant [9 x i8] c".message\00", align 1
@.str.80 = private unnamed_addr constant [5 x i8] c"file\00", align 1
@.str.81 = private unnamed_addr constant [4 x i8] c"dir\00", align 1
@.str.82 = private unnamed_addr constant [5 x i8] c"pdir\00", align 1
@.str.83 = private unnamed_addr constant [5 x i8] c"cdir\00", align 1
@.str.84 = private unnamed_addr constant [16 x i8] c"OS.unix=symlink\00", align 1
@.str.85 = private unnamed_addr constant [4 x i8] c"\0D\0A;\00", align 1
@.str.86 = private unnamed_addr constant [15 x i8] c"OS.unix=slink:\00", align 1
@.str.87 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.88 = private unnamed_addr constant [88 x i8] c"%stype=%s%s;siz%c=%llu;modify=%04d%02d%02d%02d%02d%02d;UNIX.mode=0%o;unique=%xg%llx; %s\00", align 1
@.str.89 = private unnamed_addr constant [114 x i8] c"%stype=%s;siz%c=%llu;modify=%04d%02d%02d%02d%02d%02d;UNIX.mode=0%o;UNIX.uid=%lld;UNIX.gid=%lld;unique=%xg%llx; %s\00", align 1
@__const.domlst.line = private unnamed_addr constant [4352 x i8] c"Beginalign 16
@.str.90 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.91 = private unnamed_addr constant [31 x i8] c"Can't check for file existence\00", align 1
@.str.92 = private unnamed_addr constant [5 x i8] c"End.\00", align 1
@.str.93 = private unnamed_addr constant [7 x i8] c"Zzz...\00", align 1
@.str.94 = private unnamed_addr constant [10 x i8] c"A L'HUILE\00", align 1
@.str.95 = private unnamed_addr constant [32 x i8] c"Disk full - please upload later\00", align 1
@.str.96 = private unnamed_addr constant [7 x i8] c"time()\00", align 1
@.str.97 = private unnamed_addr constant [18 x i8] c"%Y-%m-%d %H:%M:%S\00", align 1
@.str.98 = private unnamed_addr constant [25 x i8] c"You're already logged in\00", align 1
@.str.99 = private unnamed_addr constant [23 x i8] c"Any password will work\00", align 1
@.str.100 = private unnamed_addr constant [25 x i8] c"Anonymous user logged in\00", align 1
@.str.101 = private unnamed_addr constant [10 x i8] c"anonymous\00", align 1
@.str.102 = private unnamed_addr constant [30 x i8] c"User %s OK. Password required\00", align 1
@.str.103 = private unnamed_addr constant [46 x i8] c"This is a private system - No anonymous login\00", align 1
@.str.104 = private unnamed_addr constant [40 x i8] c"We can't do that in the current session\00", align 1
@.str.105 = private unnamed_addr constant [5 x i8] c"_ftp\00", align 1
@.str.106 = private unnamed_addr constant [38 x i8] c"Unable to set up secure anonymous FTP\00", align 1
@.str.107 = private unnamed_addr constant [4 x i8] c"%s/\00", align 1
@.str.108 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.109 = private unnamed_addr constant [34 x i8] c"Can't change directory to %s [%s]\00", align 1
@.str.110 = private unnamed_addr constant [27 x i8] c"Please tell me who you are\00", align 1
@.str.111 = private unnamed_addr constant [14 x i8] c"Line too long\00", align 1
@dopass.tapping = internal global i32 0, align 4, !dbg !466
@.str.112 = private unnamed_addr constant [28 x i8] c"Login authentication failed\00", align 1
@.str.113 = private unnamed_addr constant [33 x i8] c"Too many authentication failures\00", align 1
@.str.114 = private unnamed_addr constant [36 x i8] c"Authentication failed for user [%s]\00", align 1
@.str.115 = private unnamed_addr constant [50 x i8] c"Can't login as [%s]: account disabled (uid < %lu)\00", align 1
@.str.116 = private unnamed_addr constant [29 x i8] c"Sorry, but I can't trust you\00", align 1
@.str.117 = private unnamed_addr constant [40 x i8] c"Home directory not available - aborting\00", align 1
@.str.118 = private unnamed_addr constant [35 x i8] c"This server supports FXP transfers\00", align 1
@.str.119 = private unnamed_addr constant [40 x i8] c"Unable to set up a secure chroot() jail\00", align 1
@.str.120 = private unnamed_addr constant [39 x i8] c"OK. Current restricted directory is %s\00", align 1
@.str.121 = private unnamed_addr constant [28 x i8] c"OK. Current directory is %s\00", align 1
@.str.122 = private unnamed_addr constant [20 x i8] c"%s is now logged in\00", align 1
@first_authentications = internal global %struct.Authentications_* null, align 8, !dbg !512
@.str.123 = private unnamed_addr constant [2 x i8] c"~\00", align 1
@.str.124 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@.str.125 = private unnamed_addr constant [25 x i8] c"Prohibited file name: %s\00", align 1
@.str.126 = private unnamed_addr constant [33 x i8] c"Can't change directory to %s: %s\00", align 1
@.str.127 = private unnamed_addr constant [14 x i8] c"Path too long\00", align 1
@.str.129 = private unnamed_addr constant [59 x i8] c"You cannot use PASV on IPv6 connections. Use EPSV instead.\00", align 1
@.str.130 = private unnamed_addr constant [11 x i8] c"setsockopt\00", align 1
@.str.131 = private unnamed_addr constant [32 x i8] c"All reserved TCP ports are busy\00", align 1
@.str.132 = private unnamed_addr constant [55 x i8] c"Please use an IPv6-conformant client with EPSV support\00", align 1
@.str.133 = private unnamed_addr constant [46 x i8] c"Entering Passive Mode (%lu,%lu,%lu,%lu,%u,%u)\00", align 1
@.str.134 = private unnamed_addr constant [34 x i8] c"Extended Passive mode OK (|||%u|)\00", align 1
@.str.135 = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@.str.136 = private unnamed_addr constant [18 x i8] c"%u,%u,%u,%u,%u,%u\00", align 1
@.str.147 = private unnamed_addr constant [29 x i8] c"Could not change perms on %s\00", align 1
@.str.148 = private unnamed_addr constant [37 x i8] c"Anonymous users can not change perms\00", align 1
@.str.149 = private unnamed_addr constant [13 x i8] c"No file name\00", align 1
@dochmod.root_st_dev = internal global i64 0, align 8, !dbg !472
@dochmod.root_st_ino = internal global i64 0, align 8, !dbg !479
@.str.150 = private unnamed_addr constant [33 x i8] c"Could not change perms on %s: %s\00", align 1
@.str.151 = private unnamed_addr constant [26 x i8] c"Permissions changed on %s\00", align 1
@.str.152 = private unnamed_addr constant [19 x i8] c"%4d%2d%2d%2d%2d%2d\00", align 1
@.str.153 = private unnamed_addr constant [23 x i8] c"Can't get a time stamp\00", align 1
@.str.154 = private unnamed_addr constant [14 x i8] c"utime(%s): %s\00", align 1
@.str.155 = private unnamed_addr constant [9 x i8] c"UTIME OK\00", align 1
@.str.156 = private unnamed_addr constant [37 x i8] c"Anonymous users can not delete files\00", align 1
@.str.157 = private unnamed_addr constant [17 x i8] c"Deleted %s%s%s%s\00", align 1
@.str.158 = private unnamed_addr constant [24 x i8] c"Could not delete %s: %s\00", align 1
@.str.159 = private unnamed_addr constant [140 x i8] c"The load was %3.2f when you connected. We do not allow downloads\0Aby anonymous users when the load is that high. Uploads are always\0Aallowed.\00", align 1
@.str.160 = private unnamed_addr constant [53 x i8] c"ASCII resume is unsafe, please delete the file first\00", align 1
@.str.161 = private unnamed_addr constant [21 x i8] c"Can't find file size\00", align 1
@.str.162 = private unnamed_addr constant [79 x i8] c"Restart offset %lld is too large for file size %lld.\0ARestart offset reset to 0\00", align 1
@.str.163 = private unnamed_addr constant [34 x i8] c"I can only retrieve regular files\00", align 1
@.str.164 = private unnamed_addr constant [123 x i8] c"This file has been uploaded by an anonymous user. It has not\0Ayet been approved for downloading by the site administrators.\00", align 1
@.str.165 = private unnamed_addr constant [48 x i8] c"The computer is your friend. Trust the computer\00", align 1
@.str.166 = private unnamed_addr constant [24 x i8] c"%.1f kbytes to download\00", align 1
@.str.167 = private unnamed_addr constant [21 x i8] c"pure-ftpd (DOWNLOAD)\00", align 1
@.str.168 = private unnamed_addr constant [30 x i8] c"File successfully transferred\00", align 1
@.str.169 = private unnamed_addr constant [11 x i8] c"downloaded\00", align 1
@.str.249 = private unnamed_addr constant [53 x i8] c"%.3f seconds (measured here), %.2f Mbytes per second\00", align 1
@.str.250 = private unnamed_addr constant [53 x i8] c"%.3f seconds (measured here), %.2f Kbytes per second\00", align 1
@.str.251 = private unnamed_addr constant [52 x i8] c"%.3f seconds (measured here), %.2f bytes per second\00", align 1
@.str.252 = private unnamed_addr constant [26 x i8] c" (%llu bytes, %.2fKB/sec)\00", align 1
@.str.253 = private unnamed_addr constant [15 x i8] c"%s%s%s%s %s %s\00", align 1
@.str.243 = private unnamed_addr constant [15 x i8] c"gettimeofday()\00", align 1
@.str.246 = private unnamed_addr constant [5 x i8] c"ABOR\00", align 1
@.str.247 = private unnamed_addr constant [5 x i8] c"QUIT\00", align 1
@.str.215 = private unnamed_addr constant [16 x i8] c"Unknown command\00", align 1
@.str.248 = private unnamed_addr constant [6 x i8] c"ABORT\00", align 1
@.str.188 = private unnamed_addr constant [17 x i8] c"Transfer aborted\00", align 1
@.str.245 = private unnamed_addr constant [39 x i8] c"Error during read from data connection\00", align 1
@.str.244 = private unnamed_addr constant [6 x i8] c"remap\00", align 1
@.str.241 = private unnamed_addr constant [25 x i8] c"Nothing left to download\00", align 1
@.str.242 = private unnamed_addr constant [27 x i8] c"fcntl(F_SETFL, O_NONBLOCK)\00", align 1
@.str.240 = private unnamed_addr constant [14 x i8] c"Can't open %s\00", align 1
@.str.170 = private unnamed_addr constant [57 x i8] c"REST needs a numeric parameter\0ARestart offset reset to 0\00", align 1
@.str.171 = private unnamed_addr constant [44 x i8] c"Restarting at %lld. But we're in ASCII mode\00", align 1
@.str.172 = private unnamed_addr constant [19 x i8] c"Restarting at %lld\00", align 1
@.str.173 = private unnamed_addr constant [61 x i8] c"Sorry, anonymous users are not allowed to create directories\00", align 1
@.str.174 = private unnamed_addr constant [26 x i8] c"Prohibited directory name\00", align 1
@.str.175 = private unnamed_addr constant [23 x i8] c"Can't create directory\00", align 1
@.str.176 = private unnamed_addr constant [46 x i8] c"\22%s\22 : The directory was successfully created\00", align 1
@.str.177 = private unnamed_addr constant [61 x i8] c"Sorry, anonymous users are not allowed to remove directories\00", align 1
@.str.178 = private unnamed_addr constant [39 x i8] c"The directory was successfully removed\00", align 1
@__const.dofeat.feat = private unnamed_addr constant [207 x i8] c"Extensions supported:\0D\0A UTF8\0D\0A EPRT\0D\0A IDLE\0D\0A MDTM\0D\0A SIZE\0D\0A MFMT\0D\0A REST STREAM\0D\0A MLST type*;size*;sizd*;modify*;UNIX.mode*;UNIX.uid*;UNIX.gid*;unique*;\0D\0A MLSD\0D\0A PRET\0D\0A TVFS\0D\0A ESTA\0D\0A PASV\0D\0A EPSV\0D\0A SPSV\0D\0A ESTP\00", align 16
@dostou.seq = internal global i32 0, align 4, !dbg !483
@.str.179 = private unnamed_addr constant [26 x i8] c"pureftpd.%08lx.%02lx.%04x\00", align 1
@.str.180 = private unnamed_addr constant [9 x i8] c"FILE: %s\00", align 1
@.str.181 = private unnamed_addr constant [49 x i8] c"Anonymous users may not overwrite existing files\00", align 1
@.str.182 = private unnamed_addr constant [20 x i8] c"Rename/move failure\00", align 1
@.str.183 = private unnamed_addr constant [21 x i8] c"Can't open that file\00", align 1
@.str.184 = private unnamed_addr constant [5 x i8] c"seek\00", align 1
@.str.185 = private unnamed_addr constant [10 x i8] c"ftruncate\00", align 1
@.str.186 = private unnamed_addr constant [19 x i8] c"pure-ftpd (UPLOAD)\00", align 1
@.str.187 = private unnamed_addr constant [36 x i8] c"Quota exceeded: [%s] won't be saved\00", align 1
@.str.189 = private unnamed_addr constant [9 x i8] c"uploaded\00", align 1
@tryautorename.name2 = internal global [4096 x i8] zeroinitializer, align 16, !dbg !744
@.str.257 = private unnamed_addr constant [6 x i8] c"%s.%u\00", align 1
@.str.254 = private unnamed_addr constant [8 x i8] c"Timeout\00", align 1
@.str.255 = private unnamed_addr constant [25 x i8] c"Transfer aborted (quota)\00", align 1
@.str.256 = private unnamed_addr constant [27 x i8] c"Error during write to file\00", align 1
@.str.190 = private unnamed_addr constant [17 x i8] c"Missing argument\00", align 1
@.str.191 = private unnamed_addr constant [28 x i8] c"Couldn't get the local time\00", align 1
@.str.192 = private unnamed_addr constant [25 x i8] c"%04d%02d%02d%02d%02d%02d\00", align 1
@.str.193 = private unnamed_addr constant [5 x i8] c"%llu\00", align 1
@.str.194 = private unnamed_addr constant [41 x i8] c"Missing argument\0AA(scii) I(mage) L(ocal)\00", align 1
@.str.195 = private unnamed_addr constant [55 x i8] c"Only 8-bit bytes are supported, we're not 10 years ago\00", align 1
@.str.196 = private unnamed_addr constant [17 x i8] c"Unknown TYPE: %s\00", align 1
@.str.198 = private unnamed_addr constant [13 x i8] c"8-bit binary\00", align 1
@.str.199 = private unnamed_addr constant [6 x i8] c"ASCII\00", align 1
@.str.197 = private unnamed_addr constant [15 x i8] c"TYPE is now %s\00", align 1
@.str.200 = private unnamed_addr constant [2 x i8] c"F\00", align 1
@.str.201 = private unnamed_addr constant [25 x i8] c"Only F(ile) is supported\00", align 1
@.str.202 = private unnamed_addr constant [5 x i8] c"F OK\00", align 1
@.str.203 = private unnamed_addr constant [2 x i8] c"S\00", align 1
@.str.204 = private unnamed_addr constant [25 x i8] c"Please use S(tream) mode\00", align 1
@.str.205 = private unnamed_addr constant [5 x i8] c"S OK\00", align 1
@.str.206 = private unnamed_addr constant [53 x i8] c"Anonymous users are not allowed to move/rename files\00", align 1
@.str.207 = private unnamed_addr constant [35 x i8] c"Aborting previous rename operation\00", align 1
@.str.208 = private unnamed_addr constant [51 x i8] c"RNFR accepted - file exists, ready for destination\00", align 1
@.str.209 = private unnamed_addr constant [35 x i8] c"Sorry, but that file doesn't exist\00", align 1
@.str.210 = private unnamed_addr constant [22 x i8] c"Need RNFR before RNTO\00", align 1
@.str.211 = private unnamed_addr constant [35 x i8] c"File successfully renamed or moved\00", align 1
@.str.212 = private unnamed_addr constant [47 x i8] c"File successfully renamed or moved: [%s]->[%s]\00", align 1
@.str.213 = private unnamed_addr constant [6 x i8] c"mlst \00", align 1
@.str.214 = private unnamed_addr constant [69 x i8] c" MLST OPTS type;size;sizd;modify;UNIX.mode;UNIX.uid;UNIX.gid;unique;\00", align 1
@.str.217 = private unnamed_addr constant [6 x i8] c"en_GB\00", align 1
@.str.218 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.219 = private unnamed_addr constant [10 x i8] c"pure-ftpd\00", align 1
@simpleconf_options = internal constant [65 x %struct.SimpleConfEntry_] [%struct.SimpleConfEntry_ { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.260, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.261, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.262, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.263, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.264, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.265, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.266, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.267, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.268, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.269, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.270, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.271, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.272, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.273, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.274, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.275, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.276, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.277, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.278, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.279, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.280, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.281, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.282, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.283, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.284, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.285, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.286, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.288, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.289, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.290, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.291, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.292, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.293, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.294, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.295, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.296, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.297, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.298, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.299, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.300, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.301, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.302, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.303, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.304, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.305, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.306, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.307, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.308, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.309, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.310, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.311, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.312, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.313, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.314, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.315, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.316, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.317, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.318, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.319, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.320, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.321, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.322, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.323, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.324, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.325, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.326, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.327, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.328, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.329, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.330, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.331, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.332, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.333, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.334, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.335, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.336, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.337, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.338, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.339, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.340, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.341, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.342, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.343, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.344, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.345, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.346, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.347, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.348, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.349, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.350, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.351, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.352, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.353, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.354, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.355, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.356, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.357, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.358, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.359, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.360, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.361, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.362, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.363, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.364, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.365, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.366, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.367, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.368, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.369, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.370, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.371, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.372, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.373, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.374, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.375, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.376, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.377, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.378, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.379, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.380, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.381, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.382, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.383, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.384, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.385, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.386, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.387, i32 0, i32 0) }, %struct.SimpleConfEntry_ { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.388, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.389, i32 0, i32 0) }], align 16, !dbg !765
@.str.220 = private unnamed_addr constant [20 x i8] c"Configuration error\00", align 1
@GETOPT_OPTIONS = internal global i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.390, i32 0, i32 0), align 8, !dbg !778
@long_options = internal global [47 x %struct.option] [%struct.option { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.391, i32 0, i32 0), i32 0, i32* null, i32 48 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.392, i32 0, i32 0), i32 0, i32* null, i32 49 }, %struct.option { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.393, i32 0, i32 0), i32 0, i32* null, i32 52 }, %struct.option { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.394, i32 0, i32 0), i32 0, i32* null, i32 54 }, %struct.option { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.395, i32 0, i32 0), i32 0, i32* null, i32 65 }, %struct.option { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.396, i32 0, i32 0), i32 1, i32* null, i32 97 }, %struct.option { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.397, i32 0, i32 0), i32 0, i32* null, i32 98 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.398, i32 0, i32 0), i32 0, i32* null, i32 66 }, %struct.option { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.399, i32 0, i32 0), i32 1, i32* null, i32 67 }, %struct.option { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.400, i32 0, i32 0), i32 1, i32* null, i32 99 }, %struct.option { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.401, i32 0, i32 0), i32 0, i32* null, i32 100 }, %struct.option { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.402, i32 0, i32 0), i32 0, i32* null, i32 68 }, %struct.option { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.403, i32 0, i32 0), i32 0, i32* null, i32 101 }, %struct.option { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.404, i32 0, i32 0), i32 0, i32* null, i32 69 }, %struct.option { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.405, i32 0, i32 0), i32 1, i32* null, i32 102 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.406, i32 0, i32 0), i32 1, i32* null, i32 103 }, %struct.option { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.407, i32 0, i32 0), i32 0, i32* null, i32 71 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.408, i32 0, i32 0), i32 0, i32* null, i32 104 }, %struct.option { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.409, i32 0, i32 0), i32 0, i32* null, i32 72 }, %struct.option { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.410, i32 0, i32 0), i32 1, i32* null, i32 73 }, %struct.option { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.411, i32 0, i32 0), i32 0, i32* null, i32 105 }, %struct.option { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.412, i32 0, i32 0), i32 0, i32* null, i32 106 }, %struct.option { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.413, i32 0, i32 0), i32 0, i32* null, i32 75 }, %struct.option { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.414, i32 0, i32 0), i32 1, i32* null, i32 107 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.415, i32 0, i32 0), i32 1, i32* null, i32 108 }, %struct.option { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.416, i32 0, i32 0), i32 1, i32* null, i32 76 }, %struct.option { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.417, i32 0, i32 0), i32 0, i32* null, i32 77 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.418, i32 0, i32 0), i32 1, i32* null, i32 109 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.419, i32 0, i32 0), i32 0, i32* null, i32 78 }, %struct.option { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.420, i32 0, i32 0), i32 1, i32* null, i32 112 }, %struct.option { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.421, i32 0, i32 0), i32 1, i32* null, i32 80 }, %struct.option { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.422, i32 0, i32 0), i32 0, i32* null, i32 114 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.423, i32 0, i32 0), i32 0, i32* null, i32 82 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.424, i32 0, i32 0), i32 0, i32* null, i32 115 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.425, i32 0, i32 0), i32 1, i32* null, i32 83 }, %struct.option { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.426, i32 0, i32 0), i32 1, i32* null, i32 116 }, %struct.option { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.427, i32 0, i32 0), i32 1, i32* null, i32 84 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.428, i32 0, i32 0), i32 1, i32* null, i32 85 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.429, i32 0, i32 0), i32 1, i32* null, i32 117 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.430, i32 0, i32 0), i32 1, i32* null, i32 86 }, %struct.option { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.431, i32 0, i32 0), i32 0, i32* null, i32 119 }, %struct.option { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.432, i32 0, i32 0), i32 0, i32* null, i32 87 }, %struct.option { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.433, i32 0, i32 0), i32 0, i32* null, i32 120 }, %struct.option { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.434, i32 0, i32 0), i32 0, i32* null, i32 88 }, %struct.option { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.435, i32 0, i32 0), i32 0, i32* null, i32 122 }, %struct.option { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.436, i32 0, i32 0), i32 0, i32* null, i32 90 }, %struct.option zeroinitializer], align 16, !dbg !780
@.str.221 = private unnamed_addr constant [33 x i8] c"Unable to find the 'ftp' account\00", align 1
@optarg = external global i8*, align 8
@standalone_ip = internal global i8* null, align 8, !dbg !496
@standalone_port = internal global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.437, i32 0, i32 0), align 8, !dbg !793
@.str.222 = private unnamed_addr constant [56 x i8] c"Configuration error: Illegal trusted gid for chroot: %s\00", align 1
@.str.223 = private unnamed_addr constant [44 x i8] c"Configuration error: Illegal user limit: %s\00", align 1
@.str.224 = private unnamed_addr constant [47 x i8] c"Configuration error: Unknown facility name: %s\00", align 1
@auth_list = internal global [2 x %struct.Authentication_] [%struct.Authentication_ { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.438, i32 0, i32 0), void (i8*)* null, void (%struct.AuthResult_*, i8*, i8*, %struct.sockaddr_storage*, %struct.sockaddr_storage*)* @pw_unix_check, void ()* null }, %struct.Authentication_ zeroinitializer], align 16, !dbg !795
@last_authentications = internal global %struct.Authentications_* null, align 8, !dbg !562
@.str.225 = private unnamed_addr constant [34 x i8] c"Unknown authentication method: %s\00", align 1
@.str.226 = private unnamed_addr constant [44 x i8] c"Configuration error: Illegal load limit: %s\00", align 1
@.str.227 = private unnamed_addr constant [6 x i8] c"%u:%u\00", align 1
@.str.228 = private unnamed_addr constant [45 x i8] c"Configuration error: Illegal ports range: %s\00", align 1
@.str.229 = private unnamed_addr constant [45 x i8] c"Configuration error: Illegal 'ls' limits: %s\00", align 1
@.str.230 = private unnamed_addr constant [43 x i8] c"Configuration error: Illegal uid limit: %s\00", align 1
@.str.231 = private unnamed_addr constant [39 x i8] c"Configuration error: Invalid umask: %s\00", align 1
@.str.232 = private unnamed_addr constant [19 x i8] c"pure-ftpd v1.0.49\0A\00", align 1
@.str.234 = private unnamed_addr constant [6 x i8] c"<opt>\00", align 1
@.str.233 = private unnamed_addr constant [13 x i8] c"-%c\09--%s\09%s\0A\00", align 1
@.str.235 = private unnamed_addr constant [24 x i8] c"Unknown run-time option\00", align 1
@optind = external global i32, align 4
@.str.236 = private unnamed_addr constant [23 x i8] c"Invalid argument: \22%s\22\00", align 1
@.str.237 = private unnamed_addr constant [21 x i8] c"Damaged aliases file\00", align 1
@.str.238 = private unnamed_addr constant [26 x i8] c"##SIG_AFL_DEFER_FORKSRV##\00", align 1
@.str.453 = private unnamed_addr constant [29 x i8] c"Sorry, invalid address given\00", align 1
@.str.454 = private unnamed_addr constant [23 x i8] c"New connection from %s\00", align 1
@nb_children = internal global i32 0, align 4, !dbg !752
@.str.455 = private unnamed_addr constant [53 x i8] c"%lu users (the maximum) are already logged in, sorry\00", align 1
@.str.456 = private unnamed_addr constant [42 x i8] c"--------- Welcome to Pure-FTPd ----------\00", align 1
@.str.457 = private unnamed_addr constant [38 x i8] c"You are user number %u of %u allowed.\00", align 1
@.str.458 = private unnamed_addr constant [46 x i8] c"Local time is now %02d:%02d. Server port: %u.\00", align 1
@.str.459 = private unnamed_addr constant [35 x i8] c"Only anonymous FTP is allowed here\00", align 1
@.str.460 = private unnamed_addr constant [50 x i8] c"IPv6 connections are also welcome on this server.\00", align 1
@.str.461 = private unnamed_addr constant [58 x i8] c"You will be disconnected after %lu minutes of inactivity.\00", align 1
@.str.462 = private unnamed_addr constant [58 x i8] c"You will be disconnected after %lu seconds of inactivity.\00", align 1
@.str.463 = private unnamed_addr constant [42 x i8] c"Illegal forced IP for passive connections\00", align 1
@.str.464 = private unnamed_addr constant [16 x i8] c"%s%lx.%x.%lx.%x\00", align 1
@.str.465 = private unnamed_addr constant [18 x i8] c".pureftpd-upload.\00", align 1
@fixlimits.lim = internal global %struct.timespec zeroinitializer, align 8, !dbg !805
@listenfd = internal global i32 -1, align 4, !dbg !761
@.str.446 = private unnamed_addr constant [36 x i8] c"Unable to start a standalone server\00", align 1
@.str.447 = private unnamed_addr constant [42 x i8] c"Unable to start a standalone server: [%s]\00", align 1
@listenfd6 = internal global i32 -1, align 4, !dbg !763
@.str.448 = private unnamed_addr constant [19 x i8] c"pure-ftpd (SERVER)\00", align 1
@stop_server = internal global i32 0, align 4, !dbg !755
@.str.450 = private unnamed_addr constant [59 x i8] c"421 %lu users (the maximum) are already logged in, sorry\0D\0A\00", align 1
@.str.451 = private unnamed_addr constant [46 x i8] c"421 Too many connections (%lu) from this IP\0D\0A\00", align 1
@accept_client.old_sa = internal global %struct.sockaddr_storage zeroinitializer, align 8, !dbg !800
@.str.452 = private unnamed_addr constant [46 x i8] c"Too many connections (%lu) from this IP: [%s]\00", align 1
@.str.449 = private unnamed_addr constant [5 x i8] c"%lu\0A\00", align 1
@environ = external global i8**, align 8
@.str.439 = private unnamed_addr constant [43 x i8] c"Unable to start a standalone server - fork\00", align 1
@.str.440 = private unnamed_addr constant [48 x i8] c"Unable to start a standalone server: [fork: %s]\00", align 1
@.str.441 = private unnamed_addr constant [45 x i8] c"Unable to start a standalone server - setsid\00", align 1
@.str.442 = private unnamed_addr constant [6 x i8] c"chdir\00", align 1
@.str.443 = private unnamed_addr constant [60 x i8] c"Unable to start a standalone server - /dev/null duplication\00", align 1
@.str.445 = private unnamed_addr constant [10 x i8] c"/dev/null\00", align 1
@.str.444 = private unnamed_addr constant [13 x i8] c"_SC_OPEN_MAX\00", align 1
@.str.438 = private unnamed_addr constant [5 x i8] c"unix\00", align 1
@.str.437 = private unnamed_addr constant [3 x i8] c"21\00", align 1
@.str.391 = private unnamed_addr constant [11 x i8] c"notruncate\00", align 1
@.str.392 = private unnamed_addr constant [7 x i8] c"logpid\00", align 1
@.str.393 = private unnamed_addr constant [9 x i8] c"ipv4only\00", align 1
@.str.394 = private unnamed_addr constant [9 x i8] c"ipv6only\00", align 1
@.str.395 = private unnamed_addr constant [15 x i8] c"chrooteveryone\00", align 1
@.str.396 = private unnamed_addr constant [11 x i8] c"trustedgid\00", align 1
@.str.397 = private unnamed_addr constant [27 x i8] c"brokenclientscompatibility\00", align 1
@.str.398 = private unnamed_addr constant [10 x i8] c"daemonize\00", align 1
@.str.399 = private unnamed_addr constant [16 x i8] c"maxclientsperip\00", align 1
@.str.400 = private unnamed_addr constant [17 x i8] c"maxclientsnumber\00", align 1
@.str.401 = private unnamed_addr constant [11 x i8] c"verboselog\00", align 1
@.str.402 = private unnamed_addr constant [16 x i8] c"displaydotfiles\00", align 1
@.str.403 = private unnamed_addr constant [14 x i8] c"anonymousonly\00", align 1
@.str.404 = private unnamed_addr constant [12 x i8] c"noanonymous\00", align 1
@.str.405 = private unnamed_addr constant [15 x i8] c"syslogfacility\00", align 1
@.str.406 = private unnamed_addr constant [8 x i8] c"pidfile\00", align 1
@.str.407 = private unnamed_addr constant [9 x i8] c"norename\00", align 1
@.str.408 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.409 = private unnamed_addr constant [12 x i8] c"dontresolve\00", align 1
@.str.410 = private unnamed_addr constant [12 x i8] c"maxidletime\00", align 1
@.str.411 = private unnamed_addr constant [20 x i8] c"anonymouscantupload\00", align 1
@.str.412 = private unnamed_addr constant [14 x i8] c"createhomedir\00", align 1
@.str.413 = private unnamed_addr constant [13 x i8] c"keepallfiles\00", align 1
@.str.414 = private unnamed_addr constant [16 x i8] c"maxdiskusagepct\00", align 1
@.str.415 = private unnamed_addr constant [6 x i8] c"login\00", align 1
@.str.416 = private unnamed_addr constant [15 x i8] c"limitrecursion\00", align 1
@.str.417 = private unnamed_addr constant [23 x i8] c"anonymouscancreatedirs\00", align 1
@.str.418 = private unnamed_addr constant [8 x i8] c"maxload\00", align 1
@.str.419 = private unnamed_addr constant [8 x i8] c"natmode\00", align 1
@.str.420 = private unnamed_addr constant [17 x i8] c"passiveportrange\00", align 1
@.str.421 = private unnamed_addr constant [15 x i8] c"forcepassiveip\00", align 1
@.str.422 = private unnamed_addr constant [11 x i8] c"autorename\00", align 1
@.str.423 = private unnamed_addr constant [8 x i8] c"nochmod\00", align 1
@.str.424 = private unnamed_addr constant [10 x i8] c"antiwarez\00", align 1
@.str.425 = private unnamed_addr constant [5 x i8] c"bind\00", align 1
@.str.426 = private unnamed_addr constant [19 x i8] c"anonymousbandwidth\00", align 1
@.str.427 = private unnamed_addr constant [14 x i8] c"userbandwidth\00", align 1
@.str.428 = private unnamed_addr constant [6 x i8] c"umask\00", align 1
@.str.429 = private unnamed_addr constant [7 x i8] c"minuid\00", align 1
@.str.430 = private unnamed_addr constant [10 x i8] c"trustedip\00", align 1
@.str.431 = private unnamed_addr constant [13 x i8] c"allowuserfxp\00", align 1
@.str.432 = private unnamed_addr constant [18 x i8] c"allowanonymousfxp\00", align 1
@.str.433 = private unnamed_addr constant [22 x i8] c"prohibitdotfileswrite\00", align 1
@.str.434 = private unnamed_addr constant [21 x i8] c"prohibitdotfilesread\00", align 1
@.str.435 = private unnamed_addr constant [14 x i8] c"allowdotfiles\00", align 1
@.str.436 = private unnamed_addr constant [14 x i8] c"customerproof\00", align 1
@.str.390 = private unnamed_addr constant [61 x i8] c"0146Aa:bc:BC:dDeEf:g:GhHiI:jk:Kl:L:Mm:Np:P:rRsS:u:U:V:wWxXzZ\00", align 1
@.str.260 = private unnamed_addr constant [26 x i8] c"AllowAnonymousFXP? <bool>\00", align 1
@.str.261 = private unnamed_addr constant [20 x i8] c"--allowanonymousfxp\00", align 1
@.str.262 = private unnamed_addr constant [22 x i8] c"AllowDotFiles? <bool>\00", align 1
@.str.263 = private unnamed_addr constant [16 x i8] c"--allowdotfiles\00", align 1
@.str.264 = private unnamed_addr constant [21 x i8] c"AllowUserFXP? <bool>\00", align 1
@.str.265 = private unnamed_addr constant [15 x i8] c"--allowuserfxp\00", align 1
@.str.266 = private unnamed_addr constant [16 x i8] c"AltLog (<any*>)\00", align 1
@.str.267 = private unnamed_addr constant [12 x i8] c"--altlog=$0\00", align 1
@.str.268 = private unnamed_addr constant [41 x i8] c"AnonymousBandwidth (<digits>) (<digits>)\00", align 1
@.str.269 = private unnamed_addr constant [27 x i8] c"--anonymousbandwidth=$0:$1\00", align 1
@.str.270 = private unnamed_addr constant [30 x i8] c"AnonymousBandwidth (<digits>)\00", align 1
@.str.271 = private unnamed_addr constant [24 x i8] c"--anonymousbandwidth=$0\00", align 1
@.str.272 = private unnamed_addr constant [31 x i8] c"AnonymousCanCreateDirs? <bool>\00", align 1
@.str.273 = private unnamed_addr constant [25 x i8] c"--anonymouscancreatedirs\00", align 1
@.str.274 = private unnamed_addr constant [28 x i8] c"AnonymousCantUpload? <bool>\00", align 1
@.str.275 = private unnamed_addr constant [22 x i8] c"--anonymouscantupload\00", align 1
@.str.276 = private unnamed_addr constant [22 x i8] c"AnonymousOnly? <bool>\00", align 1
@.str.277 = private unnamed_addr constant [16 x i8] c"--anonymousonly\00", align 1
@.str.278 = private unnamed_addr constant [37 x i8] c"AnonymousRatio (<digits>) (<digits>)\00", align 1
@.str.279 = private unnamed_addr constant [23 x i8] c"--anonymousratio=$0:$1\00", align 1
@.str.280 = private unnamed_addr constant [18 x i8] c"AntiWarez? <bool>\00", align 1
@.str.281 = private unnamed_addr constant [12 x i8] c"--antiwarez\00", align 1
@.str.282 = private unnamed_addr constant [19 x i8] c"AutoRename? <bool>\00", align 1
@.str.283 = private unnamed_addr constant [13 x i8] c"--autorename\00", align 1
@.str.284 = private unnamed_addr constant [17 x i8] c"Bind (<nospace>)\00", align 1
@.str.285 = private unnamed_addr constant [10 x i8] c"--bind=$0\00", align 1
@.str.286 = private unnamed_addr constant [35 x i8] c"BrokenClientsCompatibility? <bool>\00", align 1
@.str.287 = private unnamed_addr constant [29 x i8] c"--brokenclientscompatibility\00", align 1
@.str.288 = private unnamed_addr constant [31 x i8] c"CertFileAndKey (<any>) (<any>)\00", align 1
@.str.289 = private unnamed_addr constant [17 x i8] c"--certfile=$0,$1\00", align 1
@.str.290 = private unnamed_addr constant [18 x i8] c"CertFile (<any*>)\00", align 1
@.str.291 = private unnamed_addr constant [14 x i8] c"--certfile=$0\00", align 1
@.str.292 = private unnamed_addr constant [23 x i8] c"ChrootEveryone? <bool>\00", align 1
@.str.293 = private unnamed_addr constant [17 x i8] c"--chrooteveryone\00", align 1
@.str.294 = private unnamed_addr constant [22 x i8] c"CreateHomeDir? <bool>\00", align 1
@.str.295 = private unnamed_addr constant [16 x i8] c"--createhomedir\00", align 1
@.str.296 = private unnamed_addr constant [22 x i8] c"CustomerProof? <bool>\00", align 1
@.str.297 = private unnamed_addr constant [16 x i8] c"--customerproof\00", align 1
@.str.298 = private unnamed_addr constant [18 x i8] c"Daemonize? <bool>\00", align 1
@.str.299 = private unnamed_addr constant [12 x i8] c"--daemonize\00", align 1
@.str.300 = private unnamed_addr constant [24 x i8] c"DisplayDotFiles? <bool>\00", align 1
@.str.301 = private unnamed_addr constant [18 x i8] c"--displaydotfiles\00", align 1
@.str.302 = private unnamed_addr constant [20 x i8] c"DontResolve? <bool>\00", align 1
@.str.303 = private unnamed_addr constant [14 x i8] c"--dontresolve\00", align 1
@.str.304 = private unnamed_addr constant [17 x i8] c"ExtCert (<any*>)\00", align 1
@.str.305 = private unnamed_addr constant [13 x i8] c"--extcert=$0\00", align 1
@.str.306 = private unnamed_addr constant [27 x i8] c"ForcePassiveIP (<nospace>)\00", align 1
@.str.307 = private unnamed_addr constant [20 x i8] c"--forcepassiveip=$0\00", align 1
@.str.308 = private unnamed_addr constant [22 x i8] c"FortunesFile (<any*>)\00", align 1
@.str.309 = private unnamed_addr constant [18 x i8] c"--fortunesfile=$0\00", align 1
@.str.310 = private unnamed_addr constant [17 x i8] c"IPV4Only? <bool>\00", align 1
@.str.311 = private unnamed_addr constant [11 x i8] c"--ipv4only\00", align 1
@.str.312 = private unnamed_addr constant [17 x i8] c"IPV6Only? <bool>\00", align 1
@.str.313 = private unnamed_addr constant [11 x i8] c"--ipv6only\00", align 1
@.str.314 = private unnamed_addr constant [21 x i8] c"KeepAllFiles? <bool>\00", align 1
@.str.315 = private unnamed_addr constant [15 x i8] c"--keepallfiles\00", align 1
@.str.316 = private unnamed_addr constant [37 x i8] c"LimitRecursion (<digits>) (<digits>)\00", align 1
@.str.317 = private unnamed_addr constant [23 x i8] c"--limitrecursion=$0:$1\00", align 1
@.str.318 = private unnamed_addr constant [17 x i8] c"ExtAuth (<any*>)\00", align 1
@.str.319 = private unnamed_addr constant [19 x i8] c"--login=extauth:$0\00", align 1
@.str.320 = private unnamed_addr constant [24 x i8] c"LDAPConfigFile (<any*>)\00", align 1
@.str.321 = private unnamed_addr constant [16 x i8] c"--login=ldap:$0\00", align 1
@.str.322 = private unnamed_addr constant [25 x i8] c"MySQLConfigFile (<any*>)\00", align 1
@.str.323 = private unnamed_addr constant [17 x i8] c"--login=mysql:$0\00", align 1
@.str.324 = private unnamed_addr constant [26 x i8] c"PAMAuthentication? <bool>\00", align 1
@.str.325 = private unnamed_addr constant [12 x i8] c"--login=pam\00", align 1
@.str.326 = private unnamed_addr constant [25 x i8] c"PGSQLConfigFile (<any*>)\00", align 1
@.str.327 = private unnamed_addr constant [17 x i8] c"--login=pgsql:$0\00", align 1
@.str.328 = private unnamed_addr constant [16 x i8] c"PureDB (<any*>)\00", align 1
@.str.329 = private unnamed_addr constant [18 x i8] c"--login=puredb:$0\00", align 1
@.str.330 = private unnamed_addr constant [27 x i8] c"UnixAuthentication? <bool>\00", align 1
@.str.331 = private unnamed_addr constant [13 x i8] c"--login=unix\00", align 1
@.str.332 = private unnamed_addr constant [15 x i8] c"LogPID? <bool>\00", align 1
@.str.333 = private unnamed_addr constant [9 x i8] c"--logpid\00", align 1
@.str.334 = private unnamed_addr constant [28 x i8] c"MaxClientsNumber (<digits>)\00", align 1
@.str.335 = private unnamed_addr constant [22 x i8] c"--maxclientsnumber=$0\00", align 1
@.str.336 = private unnamed_addr constant [27 x i8] c"MaxClientsPerIP (<digits>)\00", align 1
@.str.337 = private unnamed_addr constant [21 x i8] c"--maxclientsperip=$0\00", align 1
@.str.338 = private unnamed_addr constant [24 x i8] c"MaxDiskUsage (<digits>)\00", align 1
@.str.339 = private unnamed_addr constant [21 x i8] c"--maxdiskusagepct=$0\00", align 1
@.str.340 = private unnamed_addr constant [23 x i8] c"MaxIdleTime (<digits>)\00", align 1
@.str.341 = private unnamed_addr constant [17 x i8] c"--maxidletime=$0\00", align 1
@.str.342 = private unnamed_addr constant [19 x i8] c"MaxLoad (<digits>)\00", align 1
@.str.343 = private unnamed_addr constant [13 x i8] c"--maxload=$0\00", align 1
@.str.344 = private unnamed_addr constant [18 x i8] c"MinUID (<digits>)\00", align 1
@.str.345 = private unnamed_addr constant [12 x i8] c"--minuid=$0\00", align 1
@.str.346 = private unnamed_addr constant [16 x i8] c"NATmode? <bool>\00", align 1
@.str.347 = private unnamed_addr constant [10 x i8] c"--natmode\00", align 1
@.str.348 = private unnamed_addr constant [20 x i8] c"NoAnonymous? <bool>\00", align 1
@.str.349 = private unnamed_addr constant [14 x i8] c"--noanonymous\00", align 1
@.str.350 = private unnamed_addr constant [16 x i8] c"NoChmod? <bool>\00", align 1
@.str.351 = private unnamed_addr constant [10 x i8] c"--nochmod\00", align 1
@.str.352 = private unnamed_addr constant [17 x i8] c"NoRename? <bool>\00", align 1
@.str.353 = private unnamed_addr constant [11 x i8] c"--norename\00", align 1
@.str.354 = private unnamed_addr constant [19 x i8] c"NoTruncate? <bool>\00", align 1
@.str.355 = private unnamed_addr constant [13 x i8] c"--notruncate\00", align 1
@.str.356 = private unnamed_addr constant [39 x i8] c"PassivePortRange (<digits>) (<digits>)\00", align 1
@.str.357 = private unnamed_addr constant [25 x i8] c"--passiveportrange=$0:$1\00", align 1
@.str.358 = private unnamed_addr constant [36 x i8] c"PerUserLimits (<digits>):(<digits>)\00", align 1
@.str.359 = private unnamed_addr constant [22 x i8] c"--peruserlimits=$0:$1\00", align 1
@.str.360 = private unnamed_addr constant [17 x i8] c"PIDFile (<any*>)\00", align 1
@.str.361 = private unnamed_addr constant [13 x i8] c"--pidfile=$0\00", align 1
@.str.362 = private unnamed_addr constant [30 x i8] c"ProhibitDotFilesWrite? <bool>\00", align 1
@.str.363 = private unnamed_addr constant [24 x i8] c"--prohibitdotfileswrite\00", align 1
@.str.364 = private unnamed_addr constant [29 x i8] c"ProhibitDotFilesRead? <bool>\00", align 1
@.str.365 = private unnamed_addr constant [23 x i8] c"--prohibitdotfilesread\00", align 1
@.str.366 = private unnamed_addr constant [28 x i8] c"Quota (<digits>):(<digits>)\00", align 1
@.str.367 = private unnamed_addr constant [14 x i8] c"--quota=$0:$1\00", align 1
@.str.368 = private unnamed_addr constant [25 x i8] c"SyslogFacility (<alnum>)\00", align 1
@.str.369 = private unnamed_addr constant [20 x i8] c"--syslogfacility=$0\00", align 1
@.str.370 = private unnamed_addr constant [27 x i8] c"TLSCipherSuite (<nospace>)\00", align 1
@.str.371 = private unnamed_addr constant [20 x i8] c"--tlsciphersuite=$0\00", align 1
@.str.372 = private unnamed_addr constant [15 x i8] c"TLS (<digits>)\00", align 1
@.str.373 = private unnamed_addr constant [9 x i8] c"--tls=$0\00", align 1
@.str.374 = private unnamed_addr constant [22 x i8] c"TrustedGID (<digits>)\00", align 1
@.str.375 = private unnamed_addr constant [16 x i8] c"--trustedgid=$0\00", align 1
@.str.376 = private unnamed_addr constant [22 x i8] c"TrustedIP (<nospace>)\00", align 1
@.str.377 = private unnamed_addr constant [15 x i8] c"--trustedip=$0\00", align 1
@.str.378 = private unnamed_addr constant [28 x i8] c"Umask (<digits>):(<digits>)\00", align 1
@.str.379 = private unnamed_addr constant [14 x i8] c"--umask=$0:$1\00", align 1
@.str.380 = private unnamed_addr constant [25 x i8] c"CallUploadScript? <bool>\00", align 1
@.str.381 = private unnamed_addr constant [15 x i8] c"--uploadscript\00", align 1
@.str.382 = private unnamed_addr constant [36 x i8] c"UserBandwidth (<digits>) (<digits>)\00", align 1
@.str.383 = private unnamed_addr constant [22 x i8] c"--userbandwidth=$0:$1\00", align 1
@.str.384 = private unnamed_addr constant [25 x i8] c"UserBandwidth (<digits>)\00", align 1
@.str.385 = private unnamed_addr constant [19 x i8] c"--userbandwidth=$0\00", align 1
@.str.386 = private unnamed_addr constant [32 x i8] c"UserRatio (<digits>) (<digits>)\00", align 1
@.str.387 = private unnamed_addr constant [18 x i8] c"--userratio=$0:$1\00", align 1
@.str.388 = private unnamed_addr constant [19 x i8] c"VerboseLog? <bool>\00", align 1
@.str.389 = private unnamed_addr constant [13 x i8] c"--verboselog\00", align 1
@.str.258 = private unnamed_addr constant [3 x i8] c"%z\00", align 1
@.str.259 = private unnamed_addr constant [18 x i8] c"TZ=UTC%c%c%c:%c%c\00", align 1
@.str.466 = private unnamed_addr constant [4 x i8] c"ftp\00", align 1
@opt_S = common dso_local global i32 0, align 4, !dbg !815
@opt_t = common dso_local global i32 0, align 4, !dbg !870
@opt_r = common dso_local global i32 0, align 4, !dbg !868
@opt_R = common dso_local global i32 0, align 4, !dbg !866
@opt_F = common dso_local global i32 0, align 4, !dbg !862
@opt_d = common dso_local global i32 0, align 4, !dbg !860
@opt_C = common dso_local global i32 0, align 4, !dbg !858
@opt_a = common dso_local global i32 0, align 4, !dbg !856
@opt_l = common dso_local global i32 0, align 4, !dbg !864
@user_head = internal global %struct.userid* null, align 8, !dbg !840
@.str.469 = private unnamed_addr constant [9 x i8] c"%-10.10s\00", align 1
@.str.1.470 = private unnamed_addr constant [6 x i8] c"%-10d\00", align 1
@group_head = internal global %struct.groupid* null, align 8, !dbg !848
@matches = internal global i32 0, align 4, !dbg !837
@.str.2.473 = private unnamed_addr constant [11 x i8] c"213-STAT\0D\0A\00", align 1
@.str.3.474 = private unnamed_addr constant [5 x i8] c"\0D\0A\0D\0A\00", align 1
@.str.4.475 = private unnamed_addr constant [6 x i8] c":\0D\0A\0D\0A\00", align 1
@.str.5.476 = private unnamed_addr constant [10 x i8] c"chdir: %s\00", align 1
@.str.6.477 = private unnamed_addr constant [36 x i8] c"Out of memory during globbing of %s\00", align 1
@.str.7.478 = private unnamed_addr constant [42 x i8] c"(This probably means \22Permission denied\22)\00", align 1
@.str.8.479 = private unnamed_addr constant [33 x i8] c"Read error during globbing of %s\00", align 1
@.str.9.480 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.10.481 = private unnamed_addr constant [5 x i8] c"End.\00", align 1
@.str.12.482 = private unnamed_addr constant [4 x i8] c"-a \00", align 1
@.str.13.483 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.14.484 = private unnamed_addr constant [4 x i8] c"-C \00", align 1
@.str.15.485 = private unnamed_addr constant [4 x i8] c"-d \00", align 1
@.str.16.486 = private unnamed_addr constant [4 x i8] c"-F \00", align 1
@.str.17.487 = private unnamed_addr constant [4 x i8] c"-l \00", align 1
@.str.18.488 = private unnamed_addr constant [4 x i8] c"-r \00", align 1
@.str.19.489 = private unnamed_addr constant [4 x i8] c"-R \00", align 1
@.str.20.490 = private unnamed_addr constant [4 x i8] c"-S \00", align 1
@.str.21.491 = private unnamed_addr constant [3 x i8] c"-t\00", align 1
@.str.11.492 = private unnamed_addr constant [28 x i8] c"Options: %s%s%s%s%s%s%s%s%s\00", align 1
@.str.22.493 = private unnamed_addr constant [31 x i8] c"Output truncated to %u matches\00", align 1
@.str.23.494 = private unnamed_addr constant [17 x i8] c"%u matches total\00", align 1
@.str.35.495 = private unnamed_addr constant [35 x i8] c"Sorry, we were unable to read [%s]\00", align 1
@.str.36.496 = private unnamed_addr constant [6 x i8] c"%s/%s\00", align 1
@.str.37.497 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@wrstr.outcnt = internal global i64 0, align 8, !dbg !896
@wrstr.outbuf = internal global [65536 x i8] zeroinitializer, align 16, !dbg !887
@head = internal global %struct.filename* null, align 8, !dbg !883
@tail = internal global %struct.filename* null, align 8, !dbg !874
@colwidth = internal global i32 0, align 4, !dbg !872
@filenames = internal global i32 0, align 4, !dbg !885
@.str.27.498 = private unnamed_addr constant [27 x i8] c"{gm,local}gtime() for [%s]\00", align 1
@.str.28.499 = private unnamed_addr constant [11 x i8] c" ---------\00", align 1
@.str.29.500 = private unnamed_addr constant [4 x i8] c"%5d\00", align 1
@.str.30.501 = private unnamed_addr constant [10 x i8] c"%02d:%02d\00", align 1
@.str.31.502 = private unnamed_addr constant [33 x i8] c"%s %4u %s %s %10llu %s %2d %s %s\00", align 1
@.str.32.503 = private unnamed_addr constant [33 x i8] c"%s %4u %s %s %18llu %s %2d %s %s\00", align 1
@.str.33.504 = private unnamed_addr constant [7 x i8] c" -> %s\00", align 1
@.str.34.505 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@.str.24.506 = private unnamed_addr constant [31 x i8] c"Can't check for file existence\00", align 1
@.str.25.507 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.26.508 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@stderr = external global %struct._IO_FILE*, align 8
@.str.513 = private unnamed_addr constant [36 x i8] c"[%s]: too many levels of recursion\0A\00", align 1
@.str.1.514 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.2.515 = private unnamed_addr constant [25 x i8] c"Unable to open [%s]: %s\0A\00", align 1
@.str.3.516 = private unnamed_addr constant [18 x i8] c"Bogus rule: [%s]\0A\00", align 1
@.str.4.517 = private unnamed_addr constant [39 x i8] c"%s:%u:%u: syntax error line %u: [%s].\0A\00", align 1
@.str.5.518 = private unnamed_addr constant [38 x i8] c"%s:%u:1: syntax error line %u: [%s].\0A\00", align 1
@.str.6.519 = private unnamed_addr constant [40 x i8] c"Undefined handler for special keywords\0A\00", align 1
@.str.7.520 = private unnamed_addr constant [44 x i8] c"%s:%u:1: property not found line %u: [%s].\0A\00", align 1
@.str.8.521 = private unnamed_addr constant [8 x i8] c"<alpha>\00", align 1
@.str.9.522 = private unnamed_addr constant [8 x i8] c"<alnum>\00", align 1
@.str.10.523 = private unnamed_addr constant [9 x i8] c"<digits>\00", align 1
@.str.11.524 = private unnamed_addr constant [10 x i8] c"<xdigits>\00", align 1
@.str.12.525 = private unnamed_addr constant [10 x i8] c"<nospace>\00", align 1
@.str.13.526 = private unnamed_addr constant [6 x i8] c"<any>\00", align 1
@.str.14.527 = private unnamed_addr constant [7 x i8] c"<any*>\00", align 1
@.str.15.528 = private unnamed_addr constant [7 x i8] c"<bool>\00", align 1
@.str.16.529 = private unnamed_addr constant [4 x i8] c"yes\00", align 1
@.str.17.530 = private unnamed_addr constant [3 x i8] c"on\00", align 1
@.str.18.531 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.19.532 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.20.533 = private unnamed_addr constant [3 x i8] c"no\00", align 1
@.str.21.534 = private unnamed_addr constant [4 x i8] c"off\00", align 1
@.str.22.535 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.23.536 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@rng_state = internal global %struct.rng_state zeroinitializer, align 8, !dbg !898
@.str.551 = private unnamed_addr constant [14 x i8] c"/proc/net/tcp\00", align 1
@.str.1.552 = private unnamed_addr constant [15 x i8] c"/proc/net/tcp6\00", align 1
@.str.555 = private unnamed_addr constant [26 x i8] c"/etc/pureftpd-dir-aliases\00", align 1
@.str.1.556 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@head.557 = internal global %struct.DirAlias_* null, align 8, !dbg !916
@tail.558 = internal global %struct.DirAlias_* null, align 8, !dbg !922
@aliases_up = internal global i8 0, align 1, !dbg !933
@.str.2.559 = private unnamed_addr constant [49 x i8] c"Damaged aliases file [/etc/pureftpd-dir-aliases]\00", align 1
@.str.3.562 = private unnamed_addr constant [20 x i8] c"Configuration error\00", align 1
@.str.4.563 = private unnamed_addr constant [38 x i8] c"The following aliases are available :\00", align 1
@.str.5.564 = private unnamed_addr constant [7 x i8] c" %s %s\00", align 1
@.str.6.565 = private unnamed_addr constant [2 x i8] c" \00", align 1
@iptrack_list = internal global %struct.IPTrack_* null, align 8, !dbg !935
@scanned = internal global i64 0, align 8, !dbg !963
@readnbd = internal global i64 0, align 8, !dbg !969
@.str.574 = private unnamed_addr constant [14 x i8] c"Line too long\00", align 1
@.str.1.577 = private unnamed_addr constant [17 x i8] c"pure-ftpd (IDLE)\00", align 1
@.str.2.578 = private unnamed_addr constant [47 x i8] c"Timeout - try typing a little faster next time\00", align 1
@.str.4.579 = private unnamed_addr constant [5 x i8] c"pass\00", align 1
@.str.5.580 = private unnamed_addr constant [4 x i8] c"<*>\00", align 1
@.str.3.581 = private unnamed_addr constant [18 x i8] c"Command [%s] [%s]\00", align 1
@.str.6.582 = private unnamed_addr constant [5 x i8] c"noop\00", align 1
@.str.7.583 = private unnamed_addr constant [5 x i8] c"user\00", align 1
@.str.8.584 = private unnamed_addr constant [5 x i8] c"acct\00", align 1
@.str.9.585 = private unnamed_addr constant [27 x i8] c"Please tell me who you are\00", align 1
@.str.10.586 = private unnamed_addr constant [5 x i8] c"quit\00", align 1
@.str.11.587 = private unnamed_addr constant [55 x i8] c"Goodbye. You uploaded %llu and downloaded %llu kbytes.\00", align 1
@.str.12.588 = private unnamed_addr constant [5 x i8] c"syst\00", align 1
@.str.13.589 = private unnamed_addr constant [14 x i8] c"UNIX Type: L8\00", align 1
@.str.14.590 = private unnamed_addr constant [5 x i8] c"auth\00", align 1
@.str.15.591 = private unnamed_addr constant [5 x i8] c"adat\00", align 1
@.str.16.592 = private unnamed_addr constant [40 x i8] c"This security scheme is not implemented\00", align 1
@.str.17.593 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.18.594 = private unnamed_addr constant [5 x i8] c"mode\00", align 1
@.str.19.595 = private unnamed_addr constant [5 x i8] c"feat\00", align 1
@.str.20.596 = private unnamed_addr constant [5 x i8] c"opts\00", align 1
@.str.21.597 = private unnamed_addr constant [5 x i8] c"stru\00", align 1
@.str.22.598 = private unnamed_addr constant [8 x i8] c"connect\00", align 1
@.str.23.599 = private unnamed_addr constant [7 x i8] c"delete\00", align 1
@.str.24.600 = private unnamed_addr constant [4 x i8] c"get\00", align 1
@.str.25.601 = private unnamed_addr constant [5 x i8] c"head\00", align 1
@.str.26.602 = private unnamed_addr constant [8 x i8] c"options\00", align 1
@.str.27.603 = private unnamed_addr constant [5 x i8] c"post\00", align 1
@.str.28.604 = private unnamed_addr constant [4 x i8] c"put\00", align 1
@.str.29.605 = private unnamed_addr constant [19 x i8] c"HTTP command: [%s]\00", align 1
@.str.30.606 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.31.607 = private unnamed_addr constant [21 x i8] c"You aren't logged in\00", align 1
@.str.32.608 = private unnamed_addr constant [4 x i8] c"cwd\00", align 1
@.str.33.609 = private unnamed_addr constant [5 x i8] c"xcwd\00", align 1
@.str.34.610 = private unnamed_addr constant [5 x i8] c"port\00", align 1
@.str.35.611 = private unnamed_addr constant [5 x i8] c"eprt\00", align 1
@.str.36.612 = private unnamed_addr constant [5 x i8] c"esta\00", align 1
@.str.37.613 = private unnamed_addr constant [5 x i8] c"estp\00", align 1
@.str.38.614 = private unnamed_addr constant [5 x i8] c"pasv\00", align 1
@.str.39.615 = private unnamed_addr constant [5 x i8] c"p@sw\00", align 1
@.str.40.616 = private unnamed_addr constant [5 x i8] c"epsv\00", align 1
@.str.41.617 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.42.618 = private unnamed_addr constant [24 x i8] c"Active mode is disabled\00", align 1
@.str.43.619 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str.44.620 = private unnamed_addr constant [27 x i8] c"Only IPv4 is supported (1)\00", align 1
@.str.45.621 = private unnamed_addr constant [5 x i8] c"pret\00", align 1
@.str.46.622 = private unnamed_addr constant [6 x i8] c"RETR \00", align 1
@.str.47.623 = private unnamed_addr constant [35 x i8] c"Sorry, but that file doesn't exist\00", align 1
@.str.48.624 = private unnamed_addr constant [17 x i8] c"Ready to proceed\00", align 1
@.str.49.625 = private unnamed_addr constant [5 x i8] c"spsv\00", align 1
@.str.50.626 = private unnamed_addr constant [5 x i8] c"allo\00", align 1
@.str.51.627 = private unnamed_addr constant [21 x i8] c"Can't find file size\00", align 1
@.str.52.628 = private unnamed_addr constant [4 x i8] c"pwd\00", align 1
@.str.53.629 = private unnamed_addr constant [5 x i8] c"xpwd\00", align 1
@.str.54.630 = private unnamed_addr constant [30 x i8] c"\22%s\22 is your current location\00", align 1
@.str.55.631 = private unnamed_addr constant [5 x i8] c"cdup\00", align 1
@.str.56.632 = private unnamed_addr constant [5 x i8] c"xcup\00", align 1
@.str.57.633 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@.str.58.634 = private unnamed_addr constant [5 x i8] c"retr\00", align 1
@.str.59.635 = private unnamed_addr constant [13 x i8] c"No file name\00", align 1
@.str.60.636 = private unnamed_addr constant [5 x i8] c"rest\00", align 1
@.str.61.637 = private unnamed_addr constant [17 x i8] c"No restart point\00", align 1
@.str.62.638 = private unnamed_addr constant [5 x i8] c"dele\00", align 1
@.str.63.639 = private unnamed_addr constant [5 x i8] c"stor\00", align 1
@.str.64.640 = private unnamed_addr constant [5 x i8] c"appe\00", align 1
@.str.65.641 = private unnamed_addr constant [5 x i8] c"stou\00", align 1
@.str.66.642 = private unnamed_addr constant [4 x i8] c"mkd\00", align 1
@.str.67.643 = private unnamed_addr constant [5 x i8] c"xmkd\00", align 1
@.str.68.644 = private unnamed_addr constant [18 x i8] c"No directory name\00", align 1
@.str.69.645 = private unnamed_addr constant [4 x i8] c"rmd\00", align 1
@.str.70.646 = private unnamed_addr constant [5 x i8] c"xrmd\00", align 1
@.str.71.647 = private unnamed_addr constant [5 x i8] c"stat\00", align 1
@.str.72.648 = private unnamed_addr constant [26 x i8] c"https://www.pureftpd.org/\00", align 1
@.str.73.649 = private unnamed_addr constant [5 x i8] c"list\00", align 1
@.str.74.650 = private unnamed_addr constant [5 x i8] c"nlst\00", align 1
@.str.75.651 = private unnamed_addr constant [5 x i8] c"mfmt\00", align 1
@.str.76.652 = private unnamed_addr constant [5 x i8] c"mlst\00", align 1
@.str.77.653 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.78.654 = private unnamed_addr constant [5 x i8] c"mlsd\00", align 1
@.str.79.655 = private unnamed_addr constant [5 x i8] c"abor\00", align 1
@.str.80.656 = private unnamed_addr constant [42 x i8] c"Since you see this ABOR must've succeeded\00", align 1
@.str.81.657 = private unnamed_addr constant [5 x i8] c"site\00", align 1
@.str.82.658 = private unnamed_addr constant [5 x i8] c"idle\00", align 1
@.str.83.659 = private unnamed_addr constant [28 x i8] c"SITE IDLE: Missing argument\00", align 1
@.str.84.660 = private unnamed_addr constant [31 x i8] c"Garbage found after value : %s\00", align 1
@.str.85.661 = private unnamed_addr constant [16 x i8] c"Value too large\00", align 1
@.str.86.662 = private unnamed_addr constant [29 x i8] c"Idle time set to %lu seconds\00", align 1
@.str.87.663 = private unnamed_addr constant [5 x i8] c"time\00", align 1
@.str.88.664 = private unnamed_addr constant [74 x i8] c"The following SITE commands are recognized\0D\0A ALIAS\0D\0A CHMOD\0D\0A IDLE\0D\0A UTIME\00", align 1
@.str.89.665 = private unnamed_addr constant [33 x i8] c"Pure-FTPd - http://pureftpd.org/\00", align 1
@.str.90.666 = private unnamed_addr constant [6 x i8] c"chmod\00", align 1
@.str.91.667 = private unnamed_addr constant [17 x i8] c"Missing argument\00", align 1
@.str.92.668 = private unnamed_addr constant [20 x i8] c"Invalid permissions\00", align 1
@.str.93.669 = private unnamed_addr constant [6 x i8] c"utime\00", align 1
@.str.94.670 = private unnamed_addr constant [5 x i8] c" UTC\00", align 1
@.str.95.671 = private unnamed_addr constant [6 x i8] c"alias\00", align 1
@.str.96.672 = private unnamed_addr constant [23 x i8] c"%s is an alias for %s.\00", align 1
@.str.97.673 = private unnamed_addr constant [18 x i8] c"Unknown alias %s.\00", align 1
@.str.98.674 = private unnamed_addr constant [32 x i8] c"SITE %s is an unknown extension\00", align 1
@.str.99.675 = private unnamed_addr constant [23 x i8] c"SITE: Missing argument\00", align 1
@.str.100.676 = private unnamed_addr constant [5 x i8] c"mdtm\00", align 1
@.str.101.677 = private unnamed_addr constant [5 x i8] c"size\00", align 1
@.str.102.678 = private unnamed_addr constant [5 x i8] c"rnfr\00", align 1
@.str.103.679 = private unnamed_addr constant [5 x i8] c"rnto\00", align 1
@.str.104.680 = private unnamed_addr constant [16 x i8] c"Unknown command\00", align 1
@.str.105.681 = private unnamed_addr constant [39 x i8] c"Timeout (no operation for %lu seconds)\00", align 1

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local i32 @main(i32 %argc, i8** %argv) #0 !dbg !1132 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  store i32 0, i32* %retval, align 4
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !1135, metadata !DIExpression()), !dbg !1136
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !1137, metadata !DIExpression()), !dbg !1138
  %0 = load i32, i32* %argc.addr, align 4, !dbg !1139
  %1 = load i8**, i8*** %argv.addr, align 8, !dbg !1140
  %call = call i32 @pureftpd_start(i32 %0, i8** %1, i8* null), !dbg !1141
  ret i32 %call, !dbg !1142
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @disablesignals() #0 !dbg !1143 {
entry:
  %sigs = alloca %struct.__sigset_t, align 8
  call void @llvm.dbg.declare(metadata %struct.__sigset_t* %sigs, metadata !1144, metadata !DIExpression()), !dbg !1145
  %call = call i32 @sigfillset(%struct.__sigset_t* %sigs) #7, !dbg !1146
  %call1 = call i32 @sigprocmask(i32 0, %struct.__sigset_t* %sigs, %struct.__sigset_t* @old_sigmask) #7, !dbg !1147
  %cmp = icmp slt i32 %call1, 0, !dbg !1149
  br i1 %cmp, label %if.then, label %if.end, !dbg !1150

if.then:                                          ; preds = %entry
  call void @_EXIT(i32 1) #11, !dbg !1151
  unreachable, !dbg !1151

if.end:                                           ; preds = %entry
  ret void, !dbg !1153
}

; Function Attrs: nounwind
declare i32 @sigfillset(%struct.__sigset_t*) #2

; Function Attrs: nounwind
declare i32 @sigprocmask(i32, %struct.__sigset_t*, %struct.__sigset_t*) #2

; Function Attrs: noinline noreturn nounwind optnone sspreq uwtable
define dso_local void @_EXIT(i32 %status) #3 !dbg !1154 {
entry:
  %status.addr = alloca i32, align 4
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !1155, metadata !DIExpression()), !dbg !1156
  call void @delete_atomic_file(), !dbg !1157
  %0 = load i32, i32* %status.addr, align 4, !dbg !1158
  call void @_exit(i32 %0) #11, !dbg !1159
  unreachable, !dbg !1159
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @delete_atomic_file() #0 !dbg !1160 {
entry:
  %atomic_file = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %atomic_file, metadata !1161, metadata !DIExpression()), !dbg !1162
  %call = call i8* @get_atomic_file(i8* null), !dbg !1163
  store i8* %call, i8** %atomic_file, align 8, !dbg !1165
  %cmp = icmp eq i8* %call, null, !dbg !1166
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !1167

lor.lhs.false:                                    ; preds = %entry
  %0 = load i8*, i8** %atomic_file, align 8, !dbg !1168
  %1 = load i8, i8* %0, align 1, !dbg !1169
  %conv = sext i8 %1 to i32, !dbg !1169
  %cmp1 = icmp eq i32 %conv, 0, !dbg !1170
  br i1 %cmp1, label %if.then, label %if.end, !dbg !1171

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !1172

if.end:                                           ; preds = %lor.lhs.false
  store i8* null, i8** %atomic_file, align 8, !dbg !1174
  br label %return, !dbg !1175

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !1175
}

; Function Attrs: noreturn
declare void @_exit(i32) #4

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i8* @get_atomic_file(i8* %file) #0 !dbg !738 {
entry:
  %retval = alloca i8*, align 8
  %file.addr = alloca i8*, align 8
  %z = alloca i8*, align 8
  %orig_len = alloca i64, align 8
  %slash = alloca i64, align 8
  %sizeof_atomic_prefix = alloca i64, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !1176, metadata !DIExpression()), !dbg !1177
  call void @llvm.dbg.declare(metadata i8** %z, metadata !1178, metadata !DIExpression()), !dbg !1179
  call void @llvm.dbg.declare(metadata i64* %orig_len, metadata !1180, metadata !DIExpression()), !dbg !1181
  call void @llvm.dbg.declare(metadata i64* %slash, metadata !1182, metadata !DIExpression()), !dbg !1183
  call void @llvm.dbg.declare(metadata i64* %sizeof_atomic_prefix, metadata !1184, metadata !DIExpression()), !dbg !1185
  %0 = load i8*, i8** %file.addr, align 8, !dbg !1186
  %cmp = icmp eq i8* %0, null, !dbg !1188
  br i1 %cmp, label %if.then, label %if.end, !dbg !1189

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @get_atomic_file.res, i64 0, i64 0), i8** %retval, align 8, !dbg !1190
  br label %return, !dbg !1190

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %file.addr, align 8, !dbg !1192
  %call = call i8* @strrchr(i8* %1, i32 47) #12, !dbg !1194
  store i8* %call, i8** %z, align 8, !dbg !1195
  %cmp1 = icmp eq i8* %call, null, !dbg !1196
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !1197

if.then2:                                         ; preds = %if.end
  store i8 0, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @get_atomic_file.res, i64 0, i64 0), align 16, !dbg !1198
  store i64 0, i64* %orig_len, align 8, !dbg !1200
  br label %if.end13, !dbg !1201

if.else:                                          ; preds = %if.end
  %2 = load i8*, i8** %z, align 8, !dbg !1202
  %3 = load i8*, i8** %file.addr, align 8, !dbg !1204
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !1205
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !1205
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !1205
  store i64 %sub.ptr.sub, i64* %slash, align 8, !dbg !1206
  %4 = load i64, i64* %slash, align 8, !dbg !1207
  %cmp3 = icmp uge i64 %4, 4095, !dbg !1209
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !1210

if.then4:                                         ; preds = %if.else
  store i8* null, i8** %retval, align 8, !dbg !1211
  br label %return, !dbg !1211

if.end5:                                          ; preds = %if.else
  %5 = load i64, i64* %slash, align 8, !dbg !1213
  %inc = add i64 %5, 1, !dbg !1213
  store i64 %inc, i64* %slash, align 8, !dbg !1213
  %6 = load i8*, i8** %file.addr, align 8, !dbg !1214
  %7 = load i64, i64* %slash, align 8, !dbg !1216
  %arrayidx = getelementptr i8, i8* %6, i64 %7, !dbg !1214
  %8 = load i8, i8* %arrayidx, align 1, !dbg !1214
  %conv = sext i8 %8 to i32, !dbg !1214
  %cmp6 = icmp eq i32 %conv, 0, !dbg !1217
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !1218

if.then8:                                         ; preds = %if.end5
  store i8* null, i8** %retval, align 8, !dbg !1219
  br label %return, !dbg !1219

if.end9:                                          ; preds = %if.end5
  %9 = load i8*, i8** %file.addr, align 8, !dbg !1221
  %10 = load i64, i64* %slash, align 8, !dbg !1222
  %call10 = call i8* @strncpy(i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @get_atomic_file.res, i64 0, i64 0), i8* %9, i64 %10) #7, !dbg !1223
  %11 = load i64, i64* %slash, align 8, !dbg !1224
  %arrayidx11 = getelementptr [4096 x i8], [4096 x i8]* @get_atomic_file.res, i64 0, i64 %11, !dbg !1225
  store i8 0, i8* %arrayidx11, align 1, !dbg !1226
  %call12 = call i64 @strlen(i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @get_atomic_file.res, i64 0, i64 0)) #12, !dbg !1227
  store i64 %call12, i64* %orig_len, align 8, !dbg !1228
  br label %if.end13

if.end13:                                         ; preds = %if.end9, %if.then2
  %12 = load i8*, i8** @atomic_prefix, align 8, !dbg !1229
  %call14 = call i64 @strlen(i8* %12) #12, !dbg !1230
  %add = add i64 %call14, 1, !dbg !1231
  store i64 %add, i64* %sizeof_atomic_prefix, align 8, !dbg !1232
  %13 = load i64, i64* %orig_len, align 8, !dbg !1233
  %sub = sub i64 4096, %13, !dbg !1235
  %14 = load i64, i64* %sizeof_atomic_prefix, align 8, !dbg !1236
  %cmp15 = icmp ult i64 %sub, %14, !dbg !1237
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !1238

if.then17:                                        ; preds = %if.end13
  store i8* null, i8** %retval, align 8, !dbg !1239
  br label %return, !dbg !1239

if.end18:                                         ; preds = %if.end13
  %15 = load i64, i64* %orig_len, align 8, !dbg !1241
  %add.ptr = getelementptr i8, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @get_atomic_file.res, i64 0, i64 0), i64 %15, !dbg !1242
  %16 = load i8*, i8** @atomic_prefix, align 8, !dbg !1243
  %17 = load i64, i64* %sizeof_atomic_prefix, align 8, !dbg !1244
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 1 %16, i64 %17, i1 false), !dbg !1245
  store i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @get_atomic_file.res, i64 0, i64 0), i8** %retval, align 8, !dbg !1246
  br label %return, !dbg !1246

return:                                           ; preds = %if.end18, %if.then17, %if.then8, %if.then4, %if.then
  %18 = load i8*, i8** %retval, align 8, !dbg !1247
  ret i8* %18, !dbg !1247
}

; Function Attrs: nounwind readonly
declare i8* @strrchr(i8*, i32) #5

; Function Attrs: nounwind
declare i8* @strncpy(i8*, i8*, i64) #2

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #5

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @usleep2(i64 %microsec) #0 !dbg !1248 {
entry:
  %microsec.addr = alloca i64, align 8
  store i64 %microsec, i64* %microsec.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %microsec.addr, metadata !1252, metadata !DIExpression()), !dbg !1253
  ret void, !dbg !1254
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @simplify(i8* %subdir) #0 !dbg !1255 {
entry:
  %subdir.addr = alloca i8*, align 8
  %a = alloca i8*, align 8
  %nextcomponent = alloca i8*, align 8
  store i8* %subdir, i8** %subdir.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %subdir.addr, metadata !1256, metadata !DIExpression()), !dbg !1257
  call void @llvm.dbg.declare(metadata i8** %a, metadata !1258, metadata !DIExpression()), !dbg !1259
  %0 = load i8*, i8** %subdir.addr, align 8, !dbg !1260
  %cmp = icmp eq i8* %0, null, !dbg !1262
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !1263

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %subdir.addr, align 8, !dbg !1264
  %2 = load i8, i8* %1, align 1, !dbg !1265
  %conv = sext i8 %2 to i32, !dbg !1265
  %cmp1 = icmp eq i32 %conv, 0, !dbg !1266
  br i1 %cmp1, label %if.then, label %if.end, !dbg !1267

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !1268

if.end:                                           ; preds = %lor.lhs.false
  br label %while.cond, !dbg !1270

while.cond:                                       ; preds = %while.body, %if.end
  %3 = load i8*, i8** %subdir.addr, align 8, !dbg !1271
  %call = call i8* @strstr(i8* %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.47, i64 0, i64 0)) #12, !dbg !1272
  store i8* %call, i8** %a, align 8, !dbg !1273
  %cmp3 = icmp ne i8* %call, null, !dbg !1274
  br i1 %cmp3, label %while.body, label %while.end, !dbg !1270

while.body:                                       ; preds = %while.cond
  %4 = load i8*, i8** %a, align 8, !dbg !1275
  %5 = load i8*, i8** %a, align 8, !dbg !1277
  %add.ptr = getelementptr i8, i8* %5, i64 1, !dbg !1278
  call void @overlapcpy(i8* %4, i8* %add.ptr), !dbg !1279
  br label %while.cond, !dbg !1270, !llvm.loop !1280

while.end:                                        ; preds = %while.cond
  br label %while.cond5, !dbg !1282

while.cond5:                                      ; preds = %while.body9, %while.end
  %6 = load i8*, i8** %subdir.addr, align 8, !dbg !1283
  %call6 = call i8* @strstr(i8* %6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48, i64 0, i64 0)) #12, !dbg !1284
  store i8* %call6, i8** %a, align 8, !dbg !1285
  %cmp7 = icmp ne i8* %call6, null, !dbg !1286
  br i1 %cmp7, label %while.body9, label %while.end11, !dbg !1282

while.body9:                                      ; preds = %while.cond5
  %7 = load i8*, i8** %a, align 8, !dbg !1287
  %8 = load i8*, i8** %a, align 8, !dbg !1289
  %add.ptr10 = getelementptr i8, i8* %8, i64 2, !dbg !1290
  call void @overlapcpy(i8* %7, i8* %add.ptr10), !dbg !1291
  br label %while.cond5, !dbg !1282, !llvm.loop !1292

while.end11:                                      ; preds = %while.cond5
  br label %while.cond12, !dbg !1294

while.cond12:                                     ; preds = %while.body16, %while.end11
  %9 = load i8*, i8** %subdir.addr, align 8, !dbg !1295
  %call13 = call i32 @strncmp(i8* %9, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.49, i64 0, i64 0), i64 3) #12, !dbg !1296
  %cmp14 = icmp eq i32 %call13, 0, !dbg !1297
  br i1 %cmp14, label %while.body16, label %while.end18, !dbg !1294

while.body16:                                     ; preds = %while.cond12
  %10 = load i8*, i8** %subdir.addr, align 8, !dbg !1298
  %add.ptr17 = getelementptr i8, i8* %10, i64 3, !dbg !1298
  store i8* %add.ptr17, i8** %subdir.addr, align 8, !dbg !1298
  br label %while.cond12, !dbg !1294, !llvm.loop !1300

while.end18:                                      ; preds = %while.cond12
  %11 = load i8*, i8** %subdir.addr, align 8, !dbg !1302
  %call19 = call i8* @strstr(i8* %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50, i64 0, i64 0)) #12, !dbg !1303
  store i8* %call19, i8** %a, align 8, !dbg !1304
  %12 = load i8*, i8** %a, align 8, !dbg !1305
  %cmp20 = icmp ne i8* %12, null, !dbg !1307
  br i1 %cmp20, label %if.then22, label %if.end64, !dbg !1308

if.then22:                                        ; preds = %while.end18
  %13 = load i8*, i8** %a, align 8, !dbg !1309
  %14 = load i8*, i8** %subdir.addr, align 8, !dbg !1312
  %cmp23 = icmp eq i8* %13, %14, !dbg !1313
  br i1 %cmp23, label %if.then25, label %if.end34, !dbg !1314

if.then25:                                        ; preds = %if.then22
  br label %while.cond26, !dbg !1315

while.cond26:                                     ; preds = %while.body30, %if.then25
  %15 = load i8*, i8** %subdir.addr, align 8, !dbg !1317
  %call27 = call i32 @strncmp(i8* %15, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50, i64 0, i64 0), i64 4) #12, !dbg !1318
  %cmp28 = icmp eq i32 %call27, 0, !dbg !1319
  br i1 %cmp28, label %while.body30, label %while.end32, !dbg !1315

while.body30:                                     ; preds = %while.cond26
  %16 = load i8*, i8** %subdir.addr, align 8, !dbg !1320
  %17 = load i8*, i8** %subdir.addr, align 8, !dbg !1322
  %add.ptr31 = getelementptr i8, i8* %17, i64 3, !dbg !1323
  call void @overlapcpy(i8* %16, i8* %add.ptr31), !dbg !1324
  br label %while.cond26, !dbg !1315, !llvm.loop !1325

while.end32:                                      ; preds = %while.cond26
  %18 = load i8*, i8** %subdir.addr, align 8, !dbg !1327
  %call33 = call i8* @strstr(i8* %18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50, i64 0, i64 0)) #12, !dbg !1328
  store i8* %call33, i8** %a, align 8, !dbg !1329
  br label %if.end34, !dbg !1330

if.end34:                                         ; preds = %while.end32, %if.then22
  br label %while.cond35, !dbg !1331

while.cond35:                                     ; preds = %if.end61, %if.end34
  %19 = load i8*, i8** %a, align 8, !dbg !1332
  %cmp36 = icmp ne i8* %19, null, !dbg !1333
  br i1 %cmp36, label %while.body38, label %while.end63, !dbg !1331

while.body38:                                     ; preds = %while.cond35
  call void @llvm.dbg.declare(metadata i8** %nextcomponent, metadata !1334, metadata !DIExpression()), !dbg !1336
  %20 = load i8*, i8** %a, align 8, !dbg !1337
  %add.ptr39 = getelementptr i8, i8* %20, i64 4, !dbg !1338
  store i8* %add.ptr39, i8** %nextcomponent, align 8, !dbg !1336
  %21 = load i8*, i8** %a, align 8, !dbg !1339
  %22 = load i8*, i8** %subdir.addr, align 8, !dbg !1341
  %cmp40 = icmp ne i8* %21, %22, !dbg !1342
  br i1 %cmp40, label %land.lhs.true, label %if.end46, !dbg !1343

land.lhs.true:                                    ; preds = %while.body38
  %23 = load i8*, i8** %a, align 8, !dbg !1344
  %24 = load i8, i8* %23, align 1, !dbg !1345
  %conv42 = sext i8 %24 to i32, !dbg !1345
  %cmp43 = icmp eq i32 %conv42, 47, !dbg !1346
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !1347

if.then45:                                        ; preds = %land.lhs.true
  %25 = load i8*, i8** %a, align 8, !dbg !1348
  %incdec.ptr = getelementptr i8, i8* %25, i32 -1, !dbg !1348
  store i8* %incdec.ptr, i8** %a, align 8, !dbg !1348
  br label %if.end46, !dbg !1350

if.end46:                                         ; preds = %if.then45, %land.lhs.true, %while.body38
  br label %while.cond47, !dbg !1351

while.cond47:                                     ; preds = %while.body53, %if.end46
  %26 = load i8*, i8** %a, align 8, !dbg !1352
  %27 = load i8*, i8** %subdir.addr, align 8, !dbg !1353
  %cmp48 = icmp ne i8* %26, %27, !dbg !1354
  br i1 %cmp48, label %land.rhs, label %land.end, !dbg !1355

land.rhs:                                         ; preds = %while.cond47
  %28 = load i8*, i8** %a, align 8, !dbg !1356
  %29 = load i8, i8* %28, align 1, !dbg !1357
  %conv50 = sext i8 %29 to i32, !dbg !1357
  %cmp51 = icmp ne i32 %conv50, 47, !dbg !1358
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond47
  %30 = phi i1 [ false, %while.cond47 ], [ %cmp51, %land.rhs ], !dbg !1359
  br i1 %30, label %while.body53, label %while.end55, !dbg !1351

while.body53:                                     ; preds = %land.end
  %31 = load i8*, i8** %a, align 8, !dbg !1360
  %incdec.ptr54 = getelementptr i8, i8* %31, i32 -1, !dbg !1360
  store i8* %incdec.ptr54, i8** %a, align 8, !dbg !1360
  br label %while.cond47, !dbg !1351, !llvm.loop !1362

while.end55:                                      ; preds = %land.end
  %32 = load i8*, i8** %a, align 8, !dbg !1364
  %33 = load i8, i8* %32, align 1, !dbg !1366
  %conv56 = sext i8 %33 to i32, !dbg !1366
  %cmp57 = icmp eq i32 %conv56, 47, !dbg !1367
  br i1 %cmp57, label %if.then59, label %if.end61, !dbg !1368

if.then59:                                        ; preds = %while.end55
  %34 = load i8*, i8** %a, align 8, !dbg !1369
  %incdec.ptr60 = getelementptr i8, i8* %34, i32 1, !dbg !1369
  store i8* %incdec.ptr60, i8** %a, align 8, !dbg !1369
  br label %if.end61, !dbg !1371

if.end61:                                         ; preds = %if.then59, %while.end55
  %35 = load i8*, i8** %a, align 8, !dbg !1372
  %36 = load i8*, i8** %nextcomponent, align 8, !dbg !1373
  call void @overlapcpy(i8* %35, i8* %36), !dbg !1374
  %37 = load i8*, i8** %subdir.addr, align 8, !dbg !1375
  %call62 = call i8* @strstr(i8* %37, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50, i64 0, i64 0)) #12, !dbg !1376
  store i8* %call62, i8** %a, align 8, !dbg !1377
  br label %while.cond35, !dbg !1331, !llvm.loop !1378

while.end63:                                      ; preds = %while.cond35
  br label %if.end64, !dbg !1380

if.end64:                                         ; preds = %while.end63, %while.end18
  %38 = load i8*, i8** %subdir.addr, align 8, !dbg !1381
  store i8* %38, i8** %a, align 8, !dbg !1382
  %39 = load i8*, i8** %a, align 8, !dbg !1383
  %40 = load i8, i8* %39, align 1, !dbg !1385
  %conv65 = sext i8 %40 to i32, !dbg !1385
  %cmp66 = icmp eq i32 %conv65, 46, !dbg !1386
  br i1 %cmp66, label %if.then68, label %if.end87, !dbg !1387

if.then68:                                        ; preds = %if.end64
  %41 = load i8*, i8** %a, align 8, !dbg !1388
  %incdec.ptr69 = getelementptr i8, i8* %41, i32 1, !dbg !1388
  store i8* %incdec.ptr69, i8** %a, align 8, !dbg !1388
  %42 = load i8*, i8** %a, align 8, !dbg !1390
  %43 = load i8, i8* %42, align 1, !dbg !1392
  %conv70 = sext i8 %43 to i32, !dbg !1392
  %cmp71 = icmp eq i32 %conv70, 0, !dbg !1393
  br i1 %cmp71, label %if.then73, label %if.end74, !dbg !1394

if.then73:                                        ; preds = %if.then68
  br label %return, !dbg !1395

if.end74:                                         ; preds = %if.then68
  %44 = load i8*, i8** %a, align 8, !dbg !1397
  %45 = load i8, i8* %44, align 1, !dbg !1399
  %conv75 = sext i8 %45 to i32, !dbg !1399
  %cmp76 = icmp eq i32 %conv75, 47, !dbg !1400
  br i1 %cmp76, label %if.then78, label %if.end86, !dbg !1401

if.then78:                                        ; preds = %if.end74
  br label %while.cond79, !dbg !1402

while.cond79:                                     ; preds = %while.body83, %if.then78
  %46 = load i8*, i8** %a, align 8, !dbg !1404
  %47 = load i8, i8* %46, align 1, !dbg !1405
  %conv80 = sext i8 %47 to i32, !dbg !1405
  %cmp81 = icmp eq i32 %conv80, 47, !dbg !1406
  br i1 %cmp81, label %while.body83, label %while.end85, !dbg !1402

while.body83:                                     ; preds = %while.cond79
  %48 = load i8*, i8** %a, align 8, !dbg !1407
  %incdec.ptr84 = getelementptr i8, i8* %48, i32 1, !dbg !1407
  store i8* %incdec.ptr84, i8** %a, align 8, !dbg !1407
  br label %while.cond79, !dbg !1402, !llvm.loop !1409

while.end85:                                      ; preds = %while.cond79
  %49 = load i8*, i8** %subdir.addr, align 8, !dbg !1411
  %50 = load i8*, i8** %a, align 8, !dbg !1412
  call void @overlapcpy(i8* %49, i8* %50), !dbg !1413
  br label %if.end86, !dbg !1414

if.end86:                                         ; preds = %while.end85, %if.end74
  br label %if.end87, !dbg !1415

if.end87:                                         ; preds = %if.end86, %if.end64
  %51 = load i8*, i8** %a, align 8, !dbg !1416
  %52 = load i8, i8* %51, align 1, !dbg !1418
  %conv88 = sext i8 %52 to i32, !dbg !1418
  %cmp89 = icmp eq i32 %conv88, 0, !dbg !1419
  br i1 %cmp89, label %if.then91, label %if.end92, !dbg !1420

if.then91:                                        ; preds = %if.end87
  br label %return, !dbg !1421

if.end92:                                         ; preds = %if.end87
  %53 = load i8*, i8** %subdir.addr, align 8, !dbg !1423
  %54 = load i8*, i8** %subdir.addr, align 8, !dbg !1424
  %call93 = call i64 @strlen(i8* %54) #12, !dbg !1425
  %add.ptr94 = getelementptr i8, i8* %53, i64 %call93, !dbg !1426
  %add.ptr95 = getelementptr i8, i8* %add.ptr94, i64 -1, !dbg !1427
  store i8* %add.ptr95, i8** %a, align 8, !dbg !1428
  %55 = load i8*, i8** %a, align 8, !dbg !1429
  %56 = load i8, i8* %55, align 1, !dbg !1431
  %conv96 = sext i8 %56 to i32, !dbg !1431
  %cmp97 = icmp ne i32 %conv96, 46, !dbg !1432
  br i1 %cmp97, label %if.then102, label %lor.lhs.false99, !dbg !1433

lor.lhs.false99:                                  ; preds = %if.end92
  %57 = load i8*, i8** %a, align 8, !dbg !1434
  %58 = load i8*, i8** %subdir.addr, align 8, !dbg !1435
  %cmp100 = icmp eq i8* %57, %58, !dbg !1436
  br i1 %cmp100, label %if.then102, label %if.end103, !dbg !1437

if.then102:                                       ; preds = %lor.lhs.false99, %if.end92
  br label %return, !dbg !1438

if.end103:                                        ; preds = %lor.lhs.false99
  %59 = load i8*, i8** %a, align 8, !dbg !1440
  %incdec.ptr104 = getelementptr i8, i8* %59, i32 -1, !dbg !1440
  store i8* %incdec.ptr104, i8** %a, align 8, !dbg !1440
  %60 = load i8*, i8** %a, align 8, !dbg !1441
  %61 = load i8, i8* %60, align 1, !dbg !1443
  %conv105 = sext i8 %61 to i32, !dbg !1443
  %cmp106 = icmp eq i32 %conv105, 47, !dbg !1444
  br i1 %cmp106, label %if.then111, label %lor.lhs.false108, !dbg !1445

lor.lhs.false108:                                 ; preds = %if.end103
  %62 = load i8*, i8** %a, align 8, !dbg !1446
  %63 = load i8*, i8** %subdir.addr, align 8, !dbg !1447
  %cmp109 = icmp eq i8* %62, %63, !dbg !1448
  br i1 %cmp109, label %if.then111, label %if.end112, !dbg !1449

if.then111:                                       ; preds = %lor.lhs.false108, %if.end103
  %64 = load i8*, i8** %a, align 8, !dbg !1450
  %arrayidx = getelementptr i8, i8* %64, i64 1, !dbg !1450
  store i8 0, i8* %arrayidx, align 1, !dbg !1452
  br label %return, !dbg !1453

if.end112:                                        ; preds = %lor.lhs.false108
  %65 = load i8*, i8** %a, align 8, !dbg !1454
  %66 = load i8, i8* %65, align 1, !dbg !1456
  %conv113 = sext i8 %66 to i32, !dbg !1456
  %cmp114 = icmp ne i32 %conv113, 46, !dbg !1457
  br i1 %cmp114, label %if.then119, label %lor.lhs.false116, !dbg !1458

lor.lhs.false116:                                 ; preds = %if.end112
  %67 = load i8*, i8** %a, align 8, !dbg !1459
  %68 = load i8*, i8** %subdir.addr, align 8, !dbg !1460
  %cmp117 = icmp eq i8* %67, %68, !dbg !1461
  br i1 %cmp117, label %if.then119, label %if.end120, !dbg !1462

if.then119:                                       ; preds = %lor.lhs.false116, %if.end112
  br label %return, !dbg !1463

if.end120:                                        ; preds = %lor.lhs.false116
  %69 = load i8*, i8** %a, align 8, !dbg !1465
  %incdec.ptr121 = getelementptr i8, i8* %69, i32 -1, !dbg !1465
  store i8* %incdec.ptr121, i8** %a, align 8, !dbg !1465
  %70 = load i8*, i8** %a, align 8, !dbg !1466
  %71 = load i8, i8* %70, align 1, !dbg !1468
  %conv122 = sext i8 %71 to i32, !dbg !1468
  %cmp123 = icmp ne i32 %conv122, 47, !dbg !1469
  br i1 %cmp123, label %if.then125, label %if.end126, !dbg !1470

if.then125:                                       ; preds = %if.end120
  br label %return, !dbg !1471

if.end126:                                        ; preds = %if.end120
  %72 = load i8*, i8** %a, align 8, !dbg !1473
  store i8 0, i8* %72, align 1, !dbg !1474
  %73 = load i8*, i8** %subdir.addr, align 8, !dbg !1475
  %call127 = call i8* @strrchr(i8* %73, i32 47) #12, !dbg !1477
  store i8* %call127, i8** %a, align 8, !dbg !1478
  %cmp128 = icmp eq i8* %call127, null, !dbg !1479
  br i1 %cmp128, label %if.then130, label %if.end132, !dbg !1480

if.then130:                                       ; preds = %if.end126
  %74 = load i8*, i8** %subdir.addr, align 8, !dbg !1481
  store i8 47, i8* %74, align 1, !dbg !1483
  %75 = load i8*, i8** %subdir.addr, align 8, !dbg !1484
  %arrayidx131 = getelementptr i8, i8* %75, i64 1, !dbg !1484
  store i8 0, i8* %arrayidx131, align 1, !dbg !1485
  br label %return, !dbg !1486

if.end132:                                        ; preds = %if.end126
  %76 = load i8*, i8** %a, align 8, !dbg !1487
  %arrayidx133 = getelementptr i8, i8* %76, i64 1, !dbg !1487
  store i8 0, i8* %arrayidx133, align 1, !dbg !1488
  br label %return, !dbg !1489

return:                                           ; preds = %if.end132, %if.then130, %if.then125, %if.then119, %if.then111, %if.then102, %if.then91, %if.then73, %if.then
  ret void, !dbg !1489
}

; Function Attrs: nounwind readonly
declare i8* @strstr(i8*, i8*) #5

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal void @overlapcpy(i8* %d, i8* %s) #0 !dbg !1490 {
entry:
  %d.addr = alloca i8*, align 8
  %s.addr = alloca i8*, align 8
  store i8* %d, i8** %d.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %d.addr, metadata !1493, metadata !DIExpression()), !dbg !1494
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !1495, metadata !DIExpression()), !dbg !1496
  br label %while.cond, !dbg !1497

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i8*, i8** %s.addr, align 8, !dbg !1498
  %1 = load i8, i8* %0, align 1, !dbg !1499
  %conv = sext i8 %1 to i32, !dbg !1499
  %cmp = icmp ne i32 %conv, 0, !dbg !1500
  br i1 %cmp, label %while.body, label %while.end, !dbg !1497

while.body:                                       ; preds = %while.cond
  %2 = load i8*, i8** %s.addr, align 8, !dbg !1501
  %incdec.ptr = getelementptr i8, i8* %2, i32 1, !dbg !1501
  store i8* %incdec.ptr, i8** %s.addr, align 8, !dbg !1501
  %3 = load i8, i8* %2, align 1, !dbg !1503
  %4 = load i8*, i8** %d.addr, align 8, !dbg !1504
  %incdec.ptr2 = getelementptr i8, i8* %4, i32 1, !dbg !1504
  store i8* %incdec.ptr2, i8** %d.addr, align 8, !dbg !1504
  store i8 %3, i8* %4, align 1, !dbg !1505
  br label %while.cond, !dbg !1497, !llvm.loop !1506

while.end:                                        ; preds = %while.cond
  %5 = load i8*, i8** %d.addr, align 8, !dbg !1508
  store i8 0, i8* %5, align 1, !dbg !1509
  ret void, !dbg !1510
}

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8*, i8*, i64) #5

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local i32 @checkprintable(i8* %s) #0 !dbg !1511 {
entry:
  %s.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  %c = alloca i8, align 1
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !1514, metadata !DIExpression()), !dbg !1515
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !1516, metadata !DIExpression()), !dbg !1517
  store i32 0, i32* %ret, align 4, !dbg !1517
  call void @llvm.dbg.declare(metadata i8* %c, metadata !1518, metadata !DIExpression()), !dbg !1519
  br label %while.cond, !dbg !1520

while.cond:                                       ; preds = %if.end, %entry
  %0 = load i8*, i8** %s.addr, align 8, !dbg !1521
  %1 = load i8, i8* %0, align 1, !dbg !1522
  store i8 %1, i8* %c, align 1, !dbg !1523
  %conv = zext i8 %1 to i32, !dbg !1524
  %cmp = icmp ne i32 %conv, 0, !dbg !1525
  br i1 %cmp, label %while.body, label %while.end, !dbg !1520

while.body:                                       ; preds = %while.cond
  %2 = load i8, i8* %c, align 1, !dbg !1526
  %conv2 = zext i8 %2 to i32, !dbg !1526
  %cmp3 = icmp eq i32 %conv2, 127, !dbg !1526
  br i1 %cmp3, label %if.then, label %lor.lhs.false, !dbg !1526

lor.lhs.false:                                    ; preds = %while.body
  %3 = load i8, i8* %c, align 1, !dbg !1526
  %conv5 = zext i8 %3 to i32, !dbg !1526
  %cmp6 = icmp ult i32 %conv5, 32, !dbg !1526
  br i1 %cmp6, label %if.then, label %if.end, !dbg !1529

if.then:                                          ; preds = %lor.lhs.false, %while.body
  %4 = load i32, i32* %ret, align 4, !dbg !1530
  %dec = add i32 %4, -1, !dbg !1530
  store i32 %dec, i32* %ret, align 4, !dbg !1530
  br label %while.end, !dbg !1532

if.end:                                           ; preds = %lor.lhs.false
  %5 = load i8*, i8** %s.addr, align 8, !dbg !1533
  %incdec.ptr = getelementptr i8, i8* %5, i32 1, !dbg !1533
  store i8* %incdec.ptr, i8** %s.addr, align 8, !dbg !1533
  br label %while.cond, !dbg !1520, !llvm.loop !1534

while.end:                                        ; preds = %if.then, %while.cond
  %6 = load i32, i32* %ret, align 4, !dbg !1536
  ret i32 %6, !dbg !1537
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local i8* @skip_telnet_controls(i8* %str) #0 !dbg !1538 {
entry:
  %retval = alloca i8*, align 8
  %str.addr = alloca i8*, align 8
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !1541, metadata !DIExpression()), !dbg !1542
  %0 = load i8*, i8** %str.addr, align 8, !dbg !1543
  %cmp = icmp eq i8* %0, null, !dbg !1545
  br i1 %cmp, label %if.then, label %if.end, !dbg !1546

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !1547
  br label %return, !dbg !1547

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !1549

while.cond:                                       ; preds = %while.body, %if.end
  %1 = load i8*, i8** %str.addr, align 8, !dbg !1550
  %2 = load i8, i8* %1, align 1, !dbg !1551
  %conv = sext i8 %2 to i32, !dbg !1551
  %cmp1 = icmp ne i32 %conv, 0, !dbg !1552
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !1553

land.rhs:                                         ; preds = %while.cond
  %3 = load i8*, i8** %str.addr, align 8, !dbg !1554
  %4 = load i8, i8* %3, align 1, !dbg !1555
  %conv3 = zext i8 %4 to i32, !dbg !1556
  %cmp4 = icmp uge i32 %conv3, 240, !dbg !1557
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %5 = phi i1 [ false, %while.cond ], [ %cmp4, %land.rhs ], !dbg !1558
  br i1 %5, label %while.body, label %while.end, !dbg !1549

while.body:                                       ; preds = %land.end
  %6 = load i8*, i8** %str.addr, align 8, !dbg !1559
  %incdec.ptr = getelementptr i8, i8* %6, i32 1, !dbg !1559
  store i8* %incdec.ptr, i8** %str.addr, align 8, !dbg !1559
  br label %while.cond, !dbg !1549, !llvm.loop !1561

while.end:                                        ; preds = %land.end
  %7 = load i8*, i8** %str.addr, align 8, !dbg !1563
  store i8* %7, i8** %retval, align 8, !dbg !1564
  br label %return, !dbg !1564

return:                                           ; preds = %while.end, %if.then
  %8 = load i8*, i8** %retval, align 8, !dbg !1565
  ret i8* %8, !dbg !1565
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @client_fflush() #0 !dbg !1566 {
entry:
  %0 = load i8*, i8** @replybuf_pos, align 8, !dbg !1567
  %cmp = icmp eq i8* %0, getelementptr inbounds ([16584 x i8], [16584 x i8]* @replybuf, i64 0, i64 0), !dbg !1569
  br i1 %cmp, label %if.then, label %if.end, !dbg !1570

if.then:                                          ; preds = %entry
  br label %return, !dbg !1571

if.end:                                           ; preds = %entry
  %1 = load i32, i32* @clientfd, align 4, !dbg !1573
  %2 = load i8*, i8** @replybuf_pos, align 8, !dbg !1574
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !1575
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, ptrtoint ([16584 x i8]* @replybuf to i64), !dbg !1575
  %call = call i64 @safe_write(i32 %1, i8* getelementptr inbounds ([16584 x i8], [16584 x i8]* @replybuf, i64 0, i64 0), i64 %sub.ptr.sub, i32 -1), !dbg !1576
  call void @client_init_reply_buf(), !dbg !1577
  br label %return, !dbg !1578

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !1578
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal void @client_init_reply_buf() #0 !dbg !1579 {
entry:
  store i8* getelementptr inbounds ([16584 x i8], [16584 x i8]* @replybuf, i64 0, i64 0), i8** @replybuf_pos, align 8, !dbg !1580
  store i64 16583, i64* @replybuf_left, align 8, !dbg !1581
  ret void, !dbg !1582
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @client_printf(i8* %format, ...) #0 !dbg !1583 {
entry:
  %format.addr = alloca i8*, align 8
  %va = alloca [1 x %struct.__va_list_tag], align 16
  %buf = alloca [4146 x i8], align 16
  %len = alloca i64, align 8
  %vlen = alloca i32, align 4
  store i8* %format, i8** %format.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !1586, metadata !DIExpression()), !dbg !1587
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %va, metadata !1588, metadata !DIExpression()), !dbg !1600
  call void @llvm.dbg.declare(metadata [4146 x i8]* %buf, metadata !1601, metadata !DIExpression()), !dbg !1605
  call void @llvm.dbg.declare(metadata i64* %len, metadata !1606, metadata !DIExpression()), !dbg !1607
  call void @llvm.dbg.declare(metadata i32* %vlen, metadata !1608, metadata !DIExpression()), !dbg !1609
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %va, i64 0, i64 0, !dbg !1610
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !1610
  call void @llvm.va_start(i8* %arraydecay1), !dbg !1610
  %arraydecay2 = getelementptr inbounds [4146 x i8], [4146 x i8]* %buf, i64 0, i64 0, !dbg !1611
  %0 = load i8*, i8** %format.addr, align 8, !dbg !1612
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %va, i64 0, i64 0, !dbg !1613
  %call = call i32 @vsnprintf(i8* %arraydecay2, i64 4146, i8* %0, %struct.__va_list_tag* %arraydecay3) #7, !dbg !1614
  store i32 %call, i32* %vlen, align 4, !dbg !1615
  %1 = load i32, i32* %vlen, align 4, !dbg !1616
  %cmp = icmp slt i32 %1, 0, !dbg !1618
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !1619

lor.lhs.false:                                    ; preds = %entry
  %2 = load i32, i32* %vlen, align 4, !dbg !1620
  %conv = sext i32 %2 to i64, !dbg !1621
  %cmp4 = icmp uge i64 %conv, 4146, !dbg !1622
  br i1 %cmp4, label %if.then, label %if.else, !dbg !1623

if.then:                                          ; preds = %lor.lhs.false, %entry
  %arrayidx = getelementptr [4146 x i8], [4146 x i8]* %buf, i64 0, i64 4145, !dbg !1624
  store i8 0, i8* %arrayidx, align 1, !dbg !1626
  %arraydecay6 = getelementptr inbounds [4146 x i8], [4146 x i8]* %buf, i64 0, i64 0, !dbg !1627
  %call7 = call i64 @strlen(i8* %arraydecay6) #12, !dbg !1628
  store i64 %call7, i64* %len, align 8, !dbg !1629
  br label %if.end, !dbg !1630

if.else:                                          ; preds = %lor.lhs.false
  %3 = load i32, i32* %vlen, align 4, !dbg !1631
  %conv8 = sext i32 %3 to i64, !dbg !1633
  store i64 %conv8, i64* %len, align 8, !dbg !1634
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load i64, i64* %len, align 8, !dbg !1635
  %5 = load i64, i64* @replybuf_left, align 8, !dbg !1637
  %cmp9 = icmp uge i64 %4, %5, !dbg !1638
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !1639

if.then11:                                        ; preds = %if.end
  call void @client_fflush(), !dbg !1640
  br label %if.end12, !dbg !1642

if.end12:                                         ; preds = %if.then11, %if.end
  %6 = load i64, i64* %len, align 8, !dbg !1643
  %7 = load i64, i64* @replybuf_left, align 8, !dbg !1645
  %cmp13 = icmp ugt i64 %6, %7, !dbg !1646
  br i1 %cmp13, label %if.then15, label %if.end18, !dbg !1647

if.then15:                                        ; preds = %if.end12
  %arraydecay16 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %va, i64 0, i64 0, !dbg !1648
  %arraydecay1617 = bitcast %struct.__va_list_tag* %arraydecay16 to i8*, !dbg !1648
  call void @llvm.va_end(i8* %arraydecay1617), !dbg !1648
  call void @abort() #13, !dbg !1650
  unreachable, !dbg !1650

if.end18:                                         ; preds = %if.end12
  %8 = load i8*, i8** @replybuf_pos, align 8, !dbg !1651
  %arraydecay19 = getelementptr inbounds [4146 x i8], [4146 x i8]* %buf, i64 0, i64 0, !dbg !1652
  %9 = load i64, i64* %len, align 8, !dbg !1653
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* align 16 %arraydecay19, i64 %9, i1 false), !dbg !1652
  %10 = load i64, i64* %len, align 8, !dbg !1654
  %11 = load i8*, i8** @replybuf_pos, align 8, !dbg !1655
  %add.ptr = getelementptr i8, i8* %11, i64 %10, !dbg !1655
  store i8* %add.ptr, i8** @replybuf_pos, align 8, !dbg !1655
  %12 = load i64, i64* %len, align 8, !dbg !1656
  %13 = load i64, i64* @replybuf_left, align 8, !dbg !1657
  %sub = sub i64 %13, %12, !dbg !1657
  store i64 %sub, i64* @replybuf_left, align 8, !dbg !1657
  %arraydecay20 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %va, i64 0, i64 0, !dbg !1658
  %arraydecay2021 = bitcast %struct.__va_list_tag* %arraydecay20 to i8*, !dbg !1658
  call void @llvm.va_end(i8* %arraydecay2021), !dbg !1658
  ret void, !dbg !1659
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #7

; Function Attrs: nounwind
declare i32 @vsnprintf(i8*, i64, i8*, %struct.__va_list_tag*) #2

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #7

; Function Attrs: noreturn nounwind
declare void @abort() #8

; Function Attrs: noinline noreturn nounwind optnone sspreq uwtable
define dso_local void @die(i32 %err, i32 %priority, i8* %format, ...) #3 !dbg !1660 {
entry:
  %err.addr = alloca i32, align 4
  %priority.addr = alloca i32, align 4
  %format.addr = alloca i8*, align 8
  %va = alloca [1 x %struct.__va_list_tag], align 16
  %line = alloca [4608 x i8], align 16
  store i32 %err, i32* %err.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !1663, metadata !DIExpression()), !dbg !1664
  store i32 %priority, i32* %priority.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %priority.addr, metadata !1665, metadata !DIExpression()), !dbg !1666
  store i8* %format, i8** %format.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !1667, metadata !DIExpression()), !dbg !1668
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %va, metadata !1669, metadata !DIExpression()), !dbg !1670
  call void @llvm.dbg.declare(metadata [4608 x i8]* %line, metadata !1671, metadata !DIExpression()), !dbg !1675
  call void @disablesignals(), !dbg !1676
  store volatile i8 0, i8* @logging, align 1, !dbg !1677
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %va, i64 0, i64 0, !dbg !1678
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !1678
  call void @llvm.va_start(i8* %arraydecay1), !dbg !1678
  %arraydecay2 = getelementptr inbounds [4608 x i8], [4608 x i8]* %line, i64 0, i64 0, !dbg !1679
  %0 = load i8*, i8** %format.addr, align 8, !dbg !1680
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %va, i64 0, i64 0, !dbg !1681
  %call = call i32 @vsnprintf(i8* %arraydecay2, i64 4608, i8* %0, %struct.__va_list_tag* %arraydecay3) #7, !dbg !1682
  %1 = load i32, i32* %err.addr, align 4, !dbg !1683
  %arraydecay4 = getelementptr inbounds [4608 x i8], [4608 x i8]* %line, i64 0, i64 0, !dbg !1684
  call void (i32, i8*, ...) @addreply(i32 %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.51, i64 0, i64 0), i8* %arraydecay4), !dbg !1685
  %arraydecay5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %va, i64 0, i64 0, !dbg !1686
  %arraydecay56 = bitcast %struct.__va_list_tag* %arraydecay5 to i8*, !dbg !1686
  call void @llvm.va_end(i8* %arraydecay56), !dbg !1686
  call void @doreply(), !dbg !1687
  %2 = load i32, i32* %priority.addr, align 4, !dbg !1688
  %arraydecay7 = getelementptr inbounds [4608 x i8], [4608 x i8]* %line, i64 0, i64 0, !dbg !1689
  call void (i32, i8*, ...) @logfile(i32 %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.51, i64 0, i64 0), i8* %arraydecay7), !dbg !1690
  %3 = load i32, i32* %priority.addr, align 4, !dbg !1691
  %sub = sub i32 0, %3, !dbg !1692
  %sub8 = sub i32 %sub, 1, !dbg !1693
  call void @_EXIT(i32 %sub8) #11, !dbg !1694
  unreachable, !dbg !1694
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @addreply(i32 %code, i8* %line, ...) #0 !dbg !1695 {
entry:
  %code.addr = alloca i32, align 4
  %line.addr = alloca i8*, align 8
  %a = alloca i8*, align 8
  %b = alloca i8*, align 8
  %ap = alloca [1 x %struct.__va_list_tag], align 16
  %last = alloca i32, align 4
  %buf = alloca [4146 x i8], align 16
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !1698, metadata !DIExpression()), !dbg !1699
  store i8* %line, i8** %line.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %line.addr, metadata !1700, metadata !DIExpression()), !dbg !1701
  call void @llvm.dbg.declare(metadata i8** %a, metadata !1702, metadata !DIExpression()), !dbg !1703
  call void @llvm.dbg.declare(metadata i8** %b, metadata !1704, metadata !DIExpression()), !dbg !1705
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !1706, metadata !DIExpression()), !dbg !1707
  call void @llvm.dbg.declare(metadata i32* %last, metadata !1708, metadata !DIExpression()), !dbg !1709
  call void @llvm.dbg.declare(metadata [4146 x i8]* %buf, metadata !1710, metadata !DIExpression()), !dbg !1711
  %0 = load i32, i32* %code.addr, align 4, !dbg !1712
  %cmp = icmp ne i32 %0, 0, !dbg !1714
  br i1 %cmp, label %if.then, label %if.end, !dbg !1715

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %code.addr, align 4, !dbg !1716
  store i32 %1, i32* @replycode, align 4, !dbg !1718
  br label %if.end, !dbg !1719

if.end:                                           ; preds = %if.then, %entry
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !1720
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !1720
  call void @llvm.va_start(i8* %arraydecay1), !dbg !1720
  %arraydecay2 = getelementptr inbounds [4146 x i8], [4146 x i8]* %buf, i64 0, i64 0, !dbg !1721
  %2 = load i8*, i8** %line.addr, align 8, !dbg !1722
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !1723
  %call = call i32 @vsnprintf(i8* %arraydecay2, i64 4146, i8* %2, %struct.__va_list_tag* %arraydecay3) #7, !dbg !1724
  %arraydecay4 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !1725
  %arraydecay45 = bitcast %struct.__va_list_tag* %arraydecay4 to i8*, !dbg !1725
  call void @llvm.va_end(i8* %arraydecay45), !dbg !1725
  store i32 0, i32* %last, align 4, !dbg !1726
  %arraydecay6 = getelementptr inbounds [4146 x i8], [4146 x i8]* %buf, i64 0, i64 0, !dbg !1727
  store i8* %arraydecay6, i8** %a, align 8, !dbg !1728
  br label %for.cond, !dbg !1729

for.cond:                                         ; preds = %if.end16, %if.end
  %3 = load i8*, i8** %a, align 8, !dbg !1730
  %call7 = call i8* @strchr(i8* %3, i32 10) #12, !dbg !1734
  store i8* %call7, i8** %b, align 8, !dbg !1735
  %4 = load i8*, i8** %b, align 8, !dbg !1736
  %cmp8 = icmp ne i8* %4, null, !dbg !1738
  br i1 %cmp8, label %if.then9, label %if.else, !dbg !1739

if.then9:                                         ; preds = %for.cond
  %5 = load i8*, i8** %b, align 8, !dbg !1740
  store i8 0, i8* %5, align 1, !dbg !1742
  br label %if.end12, !dbg !1743

if.else:                                          ; preds = %for.cond
  %6 = load i8*, i8** %a, align 8, !dbg !1744
  store i8* %6, i8** %b, align 8, !dbg !1746
  br label %while.cond, !dbg !1747

while.cond:                                       ; preds = %while.body, %if.else
  %7 = load i8*, i8** %b, align 8, !dbg !1748
  %8 = load i8, i8* %7, align 1, !dbg !1749
  %conv = sext i8 %8 to i32, !dbg !1749
  %cmp10 = icmp ne i32 %conv, 0, !dbg !1750
  br i1 %cmp10, label %while.body, label %while.end, !dbg !1747

while.body:                                       ; preds = %while.cond
  %9 = load i8*, i8** %b, align 8, !dbg !1751
  %incdec.ptr = getelementptr i8, i8* %9, i32 1, !dbg !1751
  store i8* %incdec.ptr, i8** %b, align 8, !dbg !1751
  br label %while.cond, !dbg !1747, !llvm.loop !1753

while.end:                                        ; preds = %while.cond
  %10 = load i32, i32* %last, align 4, !dbg !1755
  %inc = add i32 %10, 1, !dbg !1755
  store i32 %inc, i32* %last, align 4, !dbg !1755
  br label %if.end12

if.end12:                                         ; preds = %while.end, %if.then9
  %11 = load i8*, i8** %a, align 8, !dbg !1756
  %12 = load i8*, i8** %b, align 8, !dbg !1757
  %13 = load i8*, i8** %a, align 8, !dbg !1758
  %sub.ptr.lhs.cast = ptrtoint i8* %12 to i64, !dbg !1759
  %sub.ptr.rhs.cast = ptrtoint i8* %13 to i64, !dbg !1759
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !1759
  %add = add i64 %sub.ptr.sub, 1, !dbg !1760
  call void @addreply_newline(i8* %11, i64 %add), !dbg !1761
  %14 = load i32, i32* %last, align 4, !dbg !1762
  %cmp13 = icmp ne i32 %14, 0, !dbg !1764
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !1765

if.then15:                                        ; preds = %if.end12
  br label %for.end, !dbg !1766

if.end16:                                         ; preds = %if.end12
  %15 = load i8*, i8** %b, align 8, !dbg !1768
  %add.ptr = getelementptr i8, i8* %15, i64 1, !dbg !1769
  store i8* %add.ptr, i8** %a, align 8, !dbg !1770
  br label %for.cond, !dbg !1771, !llvm.loop !1772

for.end:                                          ; preds = %if.then15
  ret void, !dbg !1775
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @doreply() #0 !dbg !1776 {
entry:
  %scannedentry = alloca %struct.reply*, align 8
  %nextentry = alloca %struct.reply*, align 8
  call void @llvm.dbg.declare(metadata %struct.reply** %scannedentry, metadata !1777, metadata !DIExpression()), !dbg !1778
  call void @llvm.dbg.declare(metadata %struct.reply** %nextentry, metadata !1779, metadata !DIExpression()), !dbg !1780
  %0 = load %struct.reply*, %struct.reply** @firstreply, align 8, !dbg !1781
  store %struct.reply* %0, %struct.reply** %scannedentry, align 8, !dbg !1783
  %cmp = icmp eq %struct.reply* %0, null, !dbg !1784
  br i1 %cmp, label %if.then, label %if.end, !dbg !1785

if.then:                                          ; preds = %entry
  br label %return, !dbg !1786

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !1788

do.body:                                          ; preds = %do.cond, %if.end
  %1 = load %struct.reply*, %struct.reply** %scannedentry, align 8, !dbg !1789
  %next = getelementptr inbounds %struct.reply, %struct.reply* %1, i32 0, i32 0, !dbg !1791
  %2 = load %struct.reply*, %struct.reply** %next, align 8, !dbg !1791
  store %struct.reply* %2, %struct.reply** %nextentry, align 8, !dbg !1792
  %3 = load i32, i32* @replycode, align 4, !dbg !1793
  %4 = load %struct.reply*, %struct.reply** %nextentry, align 8, !dbg !1795
  %cmp1 = icmp eq %struct.reply* %4, null, !dbg !1796
  %5 = zext i1 %cmp1 to i64, !dbg !1795
  %cond = select i1 %cmp1, i32 32, i32 45, !dbg !1795
  %6 = load %struct.reply*, %struct.reply** %scannedentry, align 8, !dbg !1797
  %line = getelementptr inbounds %struct.reply, %struct.reply* %6, i32 0, i32 1, !dbg !1798
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %line, i64 0, i64 0, !dbg !1797
  call void (i8*, ...) @client_printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.61, i64 0, i64 0), i32 %3, i32 %cond, i8* %arraydecay), !dbg !1799
  %7 = load volatile i8, i8* @logging, align 1, !dbg !1800
  %conv = sext i8 %7 to i32, !dbg !1800
  %cmp2 = icmp sgt i32 %conv, 1, !dbg !1802
  br i1 %cmp2, label %if.then4, label %if.end10, !dbg !1803

if.then4:                                         ; preds = %do.body
  %8 = load i32, i32* @replycode, align 4, !dbg !1804
  %9 = load %struct.reply*, %struct.reply** %nextentry, align 8, !dbg !1806
  %cmp5 = icmp eq %struct.reply* %9, null, !dbg !1807
  %10 = zext i1 %cmp5 to i64, !dbg !1806
  %cond7 = select i1 %cmp5, i32 32, i32 45, !dbg !1806
  %11 = load %struct.reply*, %struct.reply** %scannedentry, align 8, !dbg !1808
  %line8 = getelementptr inbounds %struct.reply, %struct.reply* %11, i32 0, i32 1, !dbg !1809
  %arraydecay9 = getelementptr inbounds [1 x i8], [1 x i8]* %line8, i64 0, i64 0, !dbg !1808
  call void (i32, i8*, ...) @logfile(i32 7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.62, i64 0, i64 0), i32 %8, i32 %cond7, i8* %arraydecay9), !dbg !1810
  br label %if.end10, !dbg !1811

if.end10:                                         ; preds = %if.then4, %do.body
  br label %do.cond, !dbg !1812

do.cond:                                          ; preds = %if.end10
  %12 = load %struct.reply*, %struct.reply** %nextentry, align 8, !dbg !1813
  store %struct.reply* %12, %struct.reply** %scannedentry, align 8, !dbg !1814
  %cmp11 = icmp ne %struct.reply* %12, null, !dbg !1815
  br i1 %cmp11, label %do.body, label %do.end, !dbg !1812, !llvm.loop !1816

do.end:                                           ; preds = %do.cond
  call void @client_fflush(), !dbg !1818
  %13 = load %struct.reply*, %struct.reply** @firstreply, align 8, !dbg !1819
  store %struct.reply* %13, %struct.reply** %scannedentry, align 8, !dbg !1820
  br label %do.body13, !dbg !1821

do.body13:                                        ; preds = %do.cond15, %do.end
  %14 = load %struct.reply*, %struct.reply** %scannedentry, align 8, !dbg !1822
  %next14 = getelementptr inbounds %struct.reply, %struct.reply* %14, i32 0, i32 0, !dbg !1824
  %15 = load %struct.reply*, %struct.reply** %next14, align 8, !dbg !1824
  store %struct.reply* %15, %struct.reply** %nextentry, align 8, !dbg !1825
  %16 = load %struct.reply*, %struct.reply** %scannedentry, align 8, !dbg !1826
  %17 = bitcast %struct.reply* %16 to i8*, !dbg !1826
  call void @free(i8* %17) #7, !dbg !1827
  br label %do.cond15, !dbg !1828

do.cond15:                                        ; preds = %do.body13
  %18 = load %struct.reply*, %struct.reply** %nextentry, align 8, !dbg !1829
  store %struct.reply* %18, %struct.reply** %scannedentry, align 8, !dbg !1830
  %cmp16 = icmp ne %struct.reply* %18, null, !dbg !1831
  br i1 %cmp16, label %do.body13, label %do.end18, !dbg !1828, !llvm.loop !1832

do.end18:                                         ; preds = %do.cond15
  store %struct.reply* null, %struct.reply** @lastreply, align 8, !dbg !1834
  store %struct.reply* null, %struct.reply** @firstreply, align 8, !dbg !1835
  br label %return, !dbg !1836

return:                                           ; preds = %do.end18, %if.then
  ret void, !dbg !1836
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @logfile(i32 %crit, i8* %format, ...) #0 !dbg !1837 {
entry:
  %crit.addr = alloca i32, align 4
  %format.addr = alloca i8*, align 8
  %urgency = alloca i8*, align 8
  %va = alloca [1 x %struct.__va_list_tag], align 16
  %line = alloca [4608 x i8], align 16
  store i32 %crit, i32* %crit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %crit.addr, metadata !1840, metadata !DIExpression()), !dbg !1841
  store i8* %format, i8** %format.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !1842, metadata !DIExpression()), !dbg !1843
  call void @llvm.dbg.declare(metadata i8** %urgency, metadata !1844, metadata !DIExpression()), !dbg !1845
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %va, metadata !1846, metadata !DIExpression()), !dbg !1847
  call void @llvm.dbg.declare(metadata [4608 x i8]* %line, metadata !1848, metadata !DIExpression()), !dbg !1849
  %0 = load i8, i8* @no_syslog, align 1, !dbg !1850
  %conv = sext i8 %0 to i32, !dbg !1850
  %cmp = icmp ne i32 %conv, 0, !dbg !1852
  br i1 %cmp, label %if.then, label %if.end, !dbg !1853

if.then:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %va, i64 0, i64 0, !dbg !1854
  %arraydecay2 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !1854
  call void @llvm.va_end(i8* %arraydecay2), !dbg !1854
  br label %return, !dbg !1856

if.end:                                           ; preds = %entry
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %va, i64 0, i64 0, !dbg !1857
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !1857
  call void @llvm.va_start(i8* %arraydecay34), !dbg !1857
  %arraydecay5 = getelementptr inbounds [4608 x i8], [4608 x i8]* %line, i64 0, i64 0, !dbg !1858
  %1 = load i8*, i8** %format.addr, align 8, !dbg !1859
  %arraydecay6 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %va, i64 0, i64 0, !dbg !1860
  %call = call i32 @vsnprintf(i8* %arraydecay5, i64 4608, i8* %1, %struct.__va_list_tag* %arraydecay6) #7, !dbg !1861
  %arraydecay7 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %va, i64 0, i64 0, !dbg !1862
  %arraydecay78 = bitcast %struct.__va_list_tag* %arraydecay7 to i8*, !dbg !1862
  call void @llvm.va_end(i8* %arraydecay78), !dbg !1862
  %2 = load i32, i32* %crit.addr, align 4, !dbg !1863
  switch i32 %2, label %sw.default [
    i32 6, label %sw.bb
    i32 4, label %sw.bb9
    i32 3, label %sw.bb10
    i32 5, label %sw.bb11
    i32 7, label %sw.bb12
  ], !dbg !1864

sw.bb:                                            ; preds = %if.end
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.53, i64 0, i64 0), i8** %urgency, align 8, !dbg !1865
  br label %sw.epilog, !dbg !1867

sw.bb9:                                           ; preds = %if.end
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.54, i64 0, i64 0), i8** %urgency, align 8, !dbg !1868
  br label %sw.epilog, !dbg !1869

sw.bb10:                                          ; preds = %if.end
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.55, i64 0, i64 0), i8** %urgency, align 8, !dbg !1870
  br label %sw.epilog, !dbg !1871

sw.bb11:                                          ; preds = %if.end
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.56, i64 0, i64 0), i8** %urgency, align 8, !dbg !1872
  br label %sw.epilog, !dbg !1873

sw.bb12:                                          ; preds = %if.end
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57, i64 0, i64 0), i8** %urgency, align 8, !dbg !1874
  br label %sw.epilog, !dbg !1875

sw.default:                                       ; preds = %if.end
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.58, i64 0, i64 0), i8** %urgency, align 8, !dbg !1876
  br label %sw.epilog, !dbg !1877

sw.epilog:                                        ; preds = %sw.default, %sw.bb12, %sw.bb11, %sw.bb10, %sw.bb9, %sw.bb
  %3 = load i32, i32* %crit.addr, align 4, !dbg !1878
  %4 = load i8, i8* @loggedin, align 1, !dbg !1879
  %conv13 = sext i8 %4 to i32, !dbg !1879
  %cmp14 = icmp ne i32 %conv13, 0, !dbg !1880
  br i1 %cmp14, label %land.rhs, label %land.end, !dbg !1881

land.rhs:                                         ; preds = %sw.epilog
  %5 = load i8, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @account, i64 0, i64 0), align 16, !dbg !1882
  %conv16 = sext i8 %5 to i32, !dbg !1882
  %cmp17 = icmp ne i32 %conv16, 0, !dbg !1883
  br label %land.end

land.end:                                         ; preds = %land.rhs, %sw.epilog
  %6 = phi i1 [ false, %sw.epilog ], [ %cmp17, %land.rhs ], !dbg !1884
  %7 = zext i1 %6 to i64, !dbg !1885
  %cond = select i1 %6, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @account, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.60, i64 0, i64 0), !dbg !1885
  %8 = load i8, i8* getelementptr inbounds ([1025 x i8], [1025 x i8]* @host, i64 0, i64 0), align 16, !dbg !1886
  %conv19 = sext i8 %8 to i32, !dbg !1886
  %cmp20 = icmp ne i32 %conv19, 0, !dbg !1887
  %9 = zext i1 %cmp20 to i64, !dbg !1886
  %cond22 = select i1 %cmp20, i8* getelementptr inbounds ([1025 x i8], [1025 x i8]* @host, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.60, i64 0, i64 0), !dbg !1886
  %10 = load i8*, i8** %urgency, align 8, !dbg !1888
  %arraydecay23 = getelementptr inbounds [4608 x i8], [4608 x i8]* %line, i64 0, i64 0, !dbg !1889
  call void (i32, i8*, ...) @syslog(i32 %3, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.59, i64 0, i64 0), i8* %cond, i8* %cond22, i8* %10, i8* %arraydecay23), !dbg !1890
  br label %return, !dbg !1891

return:                                           ; preds = %land.end, %if.then
  ret void, !dbg !1891
}

declare void @syslog(i32, i8*, ...) #9

; Function Attrs: nounwind
declare void @free(i8*) #2

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) #5

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal void @addreply_newline(i8* %str, i64 %size) #0 !dbg !1892 {
entry:
  %str.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %newline = alloca %struct.reply*, align 8
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !1895, metadata !DIExpression()), !dbg !1896
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !1897, metadata !DIExpression()), !dbg !1898
  call void @llvm.dbg.declare(metadata %struct.reply** %newline, metadata !1899, metadata !DIExpression()), !dbg !1900
  %0 = load i64, i64* %size.addr, align 8, !dbg !1901
  %add = add i64 8, %0, !dbg !1903
  %call = call noalias i8* @malloc(i64 %add) #7, !dbg !1904
  %1 = bitcast i8* %call to %struct.reply*, !dbg !1905
  store %struct.reply* %1, %struct.reply** %newline, align 8, !dbg !1906
  %cmp = icmp eq %struct.reply* %1, null, !dbg !1907
  br i1 %cmp, label %if.then, label %if.end, !dbg !1908

if.then:                                          ; preds = %entry
  call void @die_mem() #11, !dbg !1909
  unreachable, !dbg !1909

if.end:                                           ; preds = %entry
  %2 = load %struct.reply*, %struct.reply** @firstreply, align 8, !dbg !1911
  %cmp1 = icmp eq %struct.reply* %2, null, !dbg !1913
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !1914

if.then2:                                         ; preds = %if.end
  %3 = load %struct.reply*, %struct.reply** %newline, align 8, !dbg !1915
  store %struct.reply* %3, %struct.reply** @firstreply, align 8, !dbg !1917
  br label %if.end3, !dbg !1918

if.else:                                          ; preds = %if.end
  %4 = load %struct.reply*, %struct.reply** %newline, align 8, !dbg !1919
  %5 = load %struct.reply*, %struct.reply** @lastreply, align 8, !dbg !1921
  %next = getelementptr inbounds %struct.reply, %struct.reply* %5, i32 0, i32 0, !dbg !1922
  store %struct.reply* %4, %struct.reply** %next, align 8, !dbg !1923
  br label %if.end3

if.end3:                                          ; preds = %if.else, %if.then2
  %6 = load %struct.reply*, %struct.reply** %newline, align 8, !dbg !1924
  %next4 = getelementptr inbounds %struct.reply, %struct.reply* %6, i32 0, i32 0, !dbg !1925
  store %struct.reply* null, %struct.reply** %next4, align 8, !dbg !1926
  %7 = load %struct.reply*, %struct.reply** %newline, align 8, !dbg !1927
  store %struct.reply* %7, %struct.reply** @lastreply, align 8, !dbg !1928
  %8 = load %struct.reply*, %struct.reply** %newline, align 8, !dbg !1929
  %line = getelementptr inbounds %struct.reply, %struct.reply* %8, i32 0, i32 1, !dbg !1930
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %line, i64 0, i64 0, !dbg !1931
  %9 = load i8*, i8** %str.addr, align 8, !dbg !1932
  %10 = load i64, i64* %size.addr, align 8, !dbg !1933
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %arraydecay, i8* align 1 %9, i64 %10, i1 false), !dbg !1931
  ret void, !dbg !1934
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #2

; Function Attrs: noinline noreturn nounwind optnone sspreq uwtable
define dso_local void @die_mem() #3 !dbg !1935 {
entry:
  call void (i32, i32, i8*, ...) @die(i32 421, i32 3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.52, i64 0, i64 0)) #11, !dbg !1936
  unreachable, !dbg !1936
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @setprocessname(i8* %title) #0 !dbg !1937 {
entry:
  %title.addr = alloca i8*, align 8
  store i8* %title, i8** %title.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %title.addr, metadata !1938, metadata !DIExpression()), !dbg !1939
  %0 = load i8**, i8*** @argv0, align 8, !dbg !1940
  %cmp = icmp ne i8** %0, null, !dbg !1942
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !1943

land.lhs.true:                                    ; preds = %entry
  %1 = load i64, i64* @argv_lth, align 8, !dbg !1944
  %2 = load i8*, i8** %title.addr, align 8, !dbg !1945
  %call = call i64 @strlen(i8* %2) #12, !dbg !1946
  %sub = sub i64 %call, 2, !dbg !1947
  %cmp1 = icmp ugt i64 %1, %sub, !dbg !1948
  br i1 %cmp1, label %if.then, label %if.end, !dbg !1949

if.then:                                          ; preds = %land.lhs.true
  %3 = load i8**, i8*** @argv0, align 8, !dbg !1950
  %arrayidx = getelementptr i8*, i8** %3, i64 0, !dbg !1950
  %4 = load i8*, i8** %arrayidx, align 8, !dbg !1950
  %5 = load i64, i64* @argv_lth, align 8, !dbg !1952
  call void @llvm.memset.p0i8.i64(i8* align 1 %4, i8 0, i64 %5, i1 false), !dbg !1953
  %6 = load i8**, i8*** @argv0, align 8, !dbg !1954
  %arrayidx2 = getelementptr i8*, i8** %6, i64 0, !dbg !1954
  %7 = load i8*, i8** %arrayidx2, align 8, !dbg !1954
  %8 = load i8*, i8** %title.addr, align 8, !dbg !1955
  %9 = load i64, i64* @argv_lth, align 8, !dbg !1956
  %sub3 = sub i64 %9, 2, !dbg !1957
  %call4 = call i8* @strncpy(i8* %7, i8* %8, i64 %sub3) #7, !dbg !1958
  %10 = load i8**, i8*** @argv0, align 8, !dbg !1959
  %arrayidx5 = getelementptr i8*, i8** %10, i64 1, !dbg !1959
  store i8* null, i8** %arrayidx5, align 8, !dbg !1960
  br label %if.end, !dbg !1961

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %11 = load i8*, i8** %title.addr, align 8, !dbg !1962
  ret void, !dbg !1963
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @addreply_noformat(i32 %code, i8* %line) #0 !dbg !1964 {
entry:
  %code.addr = alloca i32, align 4
  %line.addr = alloca i8*, align 8
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !1967, metadata !DIExpression()), !dbg !1968
  store i8* %line, i8** %line.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %line.addr, metadata !1969, metadata !DIExpression()), !dbg !1970
  %0 = load i32, i32* %code.addr, align 4, !dbg !1971
  %cmp = icmp ne i32 %0, 0, !dbg !1973
  br i1 %cmp, label %if.then, label %if.end, !dbg !1974

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %code.addr, align 4, !dbg !1975
  store i32 %1, i32* @replycode, align 4, !dbg !1977
  br label %if.end, !dbg !1978

if.end:                                           ; preds = %if.then, %entry
  %2 = load i8*, i8** %line.addr, align 8, !dbg !1979
  %3 = load i8*, i8** %line.addr, align 8, !dbg !1980
  %call = call i64 @strlen(i8* %3) #12, !dbg !1981
  %add = add i64 %call, 1, !dbg !1982
  call void @addreply_newline(i8* %2, i64 %add), !dbg !1983
  ret void, !dbg !1984
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @doesta() #0 !dbg !1985 {
entry:
  %dataconn = alloca %struct.sockaddr_storage, align 8
  %socksize = alloca i32, align 4
  %hbuf = alloca [1025 x i8], align 16
  %pbuf = alloca [32 x i8], align 16
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage* %dataconn, metadata !1986, metadata !DIExpression()), !dbg !1987
  call void @llvm.dbg.declare(metadata i32* %socksize, metadata !1988, metadata !DIExpression()), !dbg !1989
  call void @llvm.dbg.declare(metadata [1025 x i8]* %hbuf, metadata !1990, metadata !DIExpression()), !dbg !1991
  call void @llvm.dbg.declare(metadata [32 x i8]* %pbuf, metadata !1992, metadata !DIExpression()), !dbg !1994
  %0 = load i8, i8* @passive, align 1, !dbg !1995
  %conv = sext i8 %0 to i32, !dbg !1995
  %cmp = icmp ne i32 %conv, 0, !dbg !1997
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !1998

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* @datafd, align 4, !dbg !1999
  %cmp2 = icmp eq i32 %1, -1, !dbg !2000
  br i1 %cmp2, label %if.then, label %if.end, !dbg !2001

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @addreply_noformat(i32 520, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.63, i64 0, i64 0)), !dbg !2002
  br label %return, !dbg !2004

if.end:                                           ; preds = %lor.lhs.false
  %2 = load volatile i32, i32* @xferfd, align 4, !dbg !2005
  %cmp4 = icmp eq i32 %2, -1, !dbg !2007
  br i1 %cmp4, label %if.then6, label %if.end11, !dbg !2008

if.then6:                                         ; preds = %if.end
  call void @opendata(), !dbg !2009
  %3 = load volatile i32, i32* @xferfd, align 4, !dbg !2011
  %cmp7 = icmp eq i32 %3, -1, !dbg !2013
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !2014

if.then9:                                         ; preds = %if.then6
  call void @addreply_noformat(i32 425, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.64, i64 0, i64 0)), !dbg !2015
  br label %return, !dbg !2017

if.end10:                                         ; preds = %if.then6
  br label %if.end11, !dbg !2018

if.end11:                                         ; preds = %if.end10, %if.end
  store i32 128, i32* %socksize, align 4, !dbg !2019
  %arraydecay = getelementptr inbounds [1025 x i8], [1025 x i8]* %hbuf, i64 0, i64 0, !dbg !2020
  %call = call i8* @strcpy(i8* %arraydecay, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.65, i64 0, i64 0)) #7, !dbg !2021
  %arraydecay12 = getelementptr inbounds [32 x i8], [32 x i8]* %pbuf, i64 0, i64 0, !dbg !2022
  %call13 = call i8* @strcpy(i8* %arraydecay12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.66, i64 0, i64 0)) #7, !dbg !2023
  %ss_family = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %dataconn, i32 0, i32 0, !dbg !2024
  %4 = load i16, i16* %ss_family, align 8, !dbg !2024
  %conv14 = zext i16 %4 to i32, !dbg !2024
  %cmp15 = icmp eq i32 %conv14, 10, !dbg !2025
  %5 = zext i1 %cmp15 to i64, !dbg !2024
  %cond = select i1 %cmp15, i32 50, i32 49, !dbg !2024
  %arraydecay17 = getelementptr inbounds [1025 x i8], [1025 x i8]* %hbuf, i64 0, i64 0, !dbg !2026
  %arraydecay18 = getelementptr inbounds [32 x i8], [32 x i8]* %pbuf, i64 0, i64 0, !dbg !2027
  call void (i32, i8*, ...) @addreply(i32 225, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.67, i64 0, i64 0), i32 %cond, i8* %arraydecay17, i8* %arraydecay18), !dbg !2028
  br label %return, !dbg !2029

return:                                           ; preds = %if.end11, %if.then9, %if.then
  ret void, !dbg !2029
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @opendata() #0 !dbg !2030 {
entry:
  %dataconn = alloca %struct.sockaddr_storage, align 8
  %fd = alloca i32, align 4
  %socksize = alloca i32, align 4
  %pfds = alloca [2 x %struct.pollfd], align 16
  %pfd = alloca %struct.pollfd*, align 8
  %pollret = alloca i32, align 4
  %peer_addr = alloca %struct.sockaddr_in, align 4
  %peer2 = alloca %struct.sockaddr_storage, align 8
  %tries = alloca i64, align 8
  %fodder = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage* %dataconn, metadata !2031, metadata !DIExpression()), !dbg !2032
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !2033, metadata !DIExpression()), !dbg !2034
  call void @llvm.dbg.declare(metadata i32* %socksize, metadata !2035, metadata !DIExpression()), !dbg !2036
  %0 = load volatile i32, i32* @xferfd, align 4, !dbg !2037
  %cmp = icmp ne i32 %0, -1, !dbg !2039
  br i1 %cmp, label %if.then, label %if.end, !dbg !2040

if.then:                                          ; preds = %entry
  call void @closedata(), !dbg !2041
  br label %if.end, !dbg !2043

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32, i32* @datafd, align 4, !dbg !2044
  %cmp1 = icmp eq i32 %1, -1, !dbg !2046
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !2047

if.then2:                                         ; preds = %if.end
  call void @addreply_noformat(i32 425, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.141, i64 0, i64 0)), !dbg !2048
  br label %return, !dbg !2050

if.end3:                                          ; preds = %if.end
  %2 = load i8, i8* @passive, align 1, !dbg !2051
  %conv = sext i8 %2 to i32, !dbg !2051
  %cmp4 = icmp ne i32 %conv, 0, !dbg !2053
  br i1 %cmp4, label %if.then6, label %if.else71, !dbg !2054

if.then6:                                         ; preds = %if.end3
  call void @llvm.dbg.declare(metadata [2 x %struct.pollfd]* %pfds, metadata !2055, metadata !DIExpression()), !dbg !2064
  call void @llvm.dbg.declare(metadata %struct.pollfd** %pfd, metadata !2065, metadata !DIExpression()), !dbg !2067
  call void @llvm.dbg.declare(metadata i32* %pollret, metadata !2068, metadata !DIExpression()), !dbg !2069
  %arrayidx = getelementptr [2 x %struct.pollfd], [2 x %struct.pollfd]* %pfds, i64 0, i64 0, !dbg !2070
  store %struct.pollfd* %arrayidx, %struct.pollfd** %pfd, align 8, !dbg !2071
  %3 = load i32, i32* @clientfd, align 4, !dbg !2072
  %4 = load %struct.pollfd*, %struct.pollfd** %pfd, align 8, !dbg !2073
  %fd7 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %4, i32 0, i32 0, !dbg !2074
  store i32 %3, i32* %fd7, align 4, !dbg !2075
  %5 = load %struct.pollfd*, %struct.pollfd** %pfd, align 8, !dbg !2076
  %events = getelementptr inbounds %struct.pollfd, %struct.pollfd* %5, i32 0, i32 1, !dbg !2077
  store i16 24, i16* %events, align 4, !dbg !2078
  %6 = load %struct.pollfd*, %struct.pollfd** %pfd, align 8, !dbg !2079
  %revents = getelementptr inbounds %struct.pollfd, %struct.pollfd* %6, i32 0, i32 2, !dbg !2080
  store i16 0, i16* %revents, align 2, !dbg !2081
  %arrayidx8 = getelementptr [2 x %struct.pollfd], [2 x %struct.pollfd]* %pfds, i64 0, i64 1, !dbg !2082
  store %struct.pollfd* %arrayidx8, %struct.pollfd** %pfd, align 8, !dbg !2083
  %7 = load i32, i32* @datafd, align 4, !dbg !2084
  %8 = load %struct.pollfd*, %struct.pollfd** %pfd, align 8, !dbg !2085
  %fd9 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %8, i32 0, i32 0, !dbg !2086
  store i32 %7, i32* %fd9, align 4, !dbg !2087
  %9 = load %struct.pollfd*, %struct.pollfd** %pfd, align 8, !dbg !2088
  %events10 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %9, i32 0, i32 1, !dbg !2089
  store i16 25, i16* %events10, align 4, !dbg !2090
  %10 = load %struct.pollfd*, %struct.pollfd** %pfd, align 8, !dbg !2091
  %revents11 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %10, i32 0, i32 2, !dbg !2092
  store i16 0, i16* %revents11, align 2, !dbg !2093
  br label %for.cond, !dbg !2094

for.cond:                                         ; preds = %if.end70, %if.then40, %if.then6
  %arrayidx12 = getelementptr [2 x %struct.pollfd], [2 x %struct.pollfd]* %pfds, i64 0, i64 1, !dbg !2095
  %revents13 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %arrayidx12, i32 0, i32 2, !dbg !2099
  store i16 0, i16* %revents13, align 2, !dbg !2100
  %arrayidx14 = getelementptr [2 x %struct.pollfd], [2 x %struct.pollfd]* %pfds, i64 0, i64 0, !dbg !2101
  %revents15 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %arrayidx14, i32 0, i32 2, !dbg !2102
  store i16 0, i16* %revents15, align 2, !dbg !2103
  %arraydecay = getelementptr inbounds [2 x %struct.pollfd], [2 x %struct.pollfd]* %pfds, i64 0, i64 0, !dbg !2104
  %11 = load i64, i64* @idletime, align 8, !dbg !2105
  %mul = mul i64 %11, 1000, !dbg !2106
  %conv16 = trunc i64 %mul to i32, !dbg !2105
  %call = call i32 @Fuzz_poll(%struct.pollfd* %arraydecay, i64 2, i32 %conv16), !dbg !2107
  store i32 %call, i32* %pollret, align 4, !dbg !2108
  %12 = load i32, i32* %pollret, align 4, !dbg !2109
  %cmp17 = icmp sle i32 %12, 0, !dbg !2111
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !2112

if.then19:                                        ; preds = %for.cond
  %13 = load i64, i64* @idletime, align 8, !dbg !2113
  call void (i32, i32, i8*, ...) @die(i32 421, i32 6, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.142, i64 0, i64 0), i64 %13) #11, !dbg !2115
  unreachable, !dbg !2115

if.end20:                                         ; preds = %for.cond
  %arrayidx21 = getelementptr [2 x %struct.pollfd], [2 x %struct.pollfd]* %pfds, i64 0, i64 0, !dbg !2116
  %revents22 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %arrayidx21, i32 0, i32 2, !dbg !2118
  %14 = load i16, i16* %revents22, align 2, !dbg !2118
  %conv23 = sext i16 %14 to i32, !dbg !2116
  %and = and i32 %conv23, 56, !dbg !2119
  %cmp24 = icmp ne i32 %and, 0, !dbg !2120
  br i1 %cmp24, label %if.then32, label %lor.lhs.false, !dbg !2121

lor.lhs.false:                                    ; preds = %if.end20
  %arrayidx26 = getelementptr [2 x %struct.pollfd], [2 x %struct.pollfd]* %pfds, i64 0, i64 1, !dbg !2122
  %revents27 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %arrayidx26, i32 0, i32 2, !dbg !2123
  %15 = load i16, i16* %revents27, align 2, !dbg !2123
  %conv28 = sext i16 %15 to i32, !dbg !2122
  %and29 = and i32 %conv28, 56, !dbg !2124
  %cmp30 = icmp ne i32 %and29, 0, !dbg !2125
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !2126

if.then32:                                        ; preds = %lor.lhs.false, %if.end20
  call void (i32, i32, i8*, ...) @die(i32 221, i32 6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.143, i64 0, i64 0)) #11, !dbg !2127
  unreachable, !dbg !2127

if.end33:                                         ; preds = %lor.lhs.false
  %arrayidx34 = getelementptr [2 x %struct.pollfd], [2 x %struct.pollfd]* %pfds, i64 0, i64 1, !dbg !2129
  %revents35 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %arrayidx34, i32 0, i32 2, !dbg !2131
  %16 = load i16, i16* %revents35, align 2, !dbg !2131
  %conv36 = sext i16 %16 to i32, !dbg !2129
  %and37 = and i32 %conv36, 1, !dbg !2132
  %cmp38 = icmp eq i32 %and37, 0, !dbg !2133
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !2134

if.then40:                                        ; preds = %if.end33
  br label %for.cond, !dbg !2135, !llvm.loop !2137

if.end41:                                         ; preds = %if.end33
  store i32 128, i32* %socksize, align 4, !dbg !2140
  %17 = bitcast %struct.sockaddr_storage* %dataconn to i8*, !dbg !2141
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 128, i1 false), !dbg !2141
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in* %peer_addr, metadata !2142, metadata !DIExpression()), !dbg !2152
  %18 = bitcast %struct.sockaddr_in* %peer_addr to i8*, !dbg !2153
  call void @llvm.memset.p0i8.i64(i8* align 4 %18, i8 48, i64 16, i1 false), !dbg !2153
  %sin_family = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %peer_addr, i32 0, i32 0, !dbg !2154
  store i16 2, i16* %sin_family, align 4, !dbg !2155
  %call42 = call i32 @htonl(i32 2130706433) #14, !dbg !2156
  %sin_addr = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %peer_addr, i32 0, i32 2, !dbg !2157
  %s_addr = getelementptr inbounds %struct.in_addr, %struct.in_addr* %sin_addr, i32 0, i32 0, !dbg !2158
  store i32 %call42, i32* %s_addr, align 4, !dbg !2159
  %call43 = call zeroext i16 @htons(i16 zeroext 6326) #14, !dbg !2160
  %sin_port = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %peer_addr, i32 0, i32 1, !dbg !2161
  store i16 %call43, i16* %sin_port, align 2, !dbg !2162
  %19 = bitcast %struct.sockaddr_storage* %dataconn to %struct.sockaddr*, !dbg !2163
  %20 = bitcast %struct.sockaddr* %19 to i8*, !dbg !2163
  %21 = bitcast %struct.sockaddr_in* %peer_addr to i8*, !dbg !2163
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 4 %21, i64 16, i1 false), !dbg !2163
  store i32 2, i32* %fd, align 4, !dbg !2164
  %ss_family = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %dataconn, i32 0, i32 0, !dbg !2165
  %22 = load i16, i16* %ss_family, align 8, !dbg !2165
  %conv44 = zext i16 %22 to i32, !dbg !2165
  %cmp45 = icmp ne i32 %conv44, 2, !dbg !2167
  br i1 %cmp45, label %land.lhs.true, label %if.end52, !dbg !2168

land.lhs.true:                                    ; preds = %if.end41
  %ss_family47 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %dataconn, i32 0, i32 0, !dbg !2169
  %23 = load i16, i16* %ss_family47, align 8, !dbg !2169
  %conv48 = zext i16 %23 to i32, !dbg !2169
  %cmp49 = icmp ne i32 %conv48, 10, !dbg !2170
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !2171

if.then51:                                        ; preds = %land.lhs.true
  call void @error(i32 421, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.144, i64 0, i64 0)), !dbg !2172
  br label %return, !dbg !2174

if.end52:                                         ; preds = %land.lhs.true, %if.end41
  call void @fourinsix(%struct.sockaddr_storage* %dataconn), !dbg !2175
  %call53 = call i32 @addrcmp(%struct.sockaddr_storage* @peer, %struct.sockaddr_storage* %dataconn), !dbg !2176
  %cmp54 = icmp eq i32 %call53, 0, !dbg !2178
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !2179

if.then56:                                        ; preds = %if.end52
  br label %for.end, !dbg !2180

if.end57:                                         ; preds = %if.end52
  %24 = load i8, i8* @allowfxp, align 1, !dbg !2182
  %conv58 = sext i8 %24 to i32, !dbg !2182
  %cmp59 = icmp eq i32 %conv58, 0, !dbg !2184
  br i1 %cmp59, label %if.then69, label %lor.lhs.false61, !dbg !2185

lor.lhs.false61:                                  ; preds = %if.end57
  %25 = load i8, i8* @allowfxp, align 1, !dbg !2186
  %conv62 = sext i8 %25 to i32, !dbg !2186
  %cmp63 = icmp eq i32 %conv62, 1, !dbg !2187
  br i1 %cmp63, label %land.lhs.true65, label %if.else, !dbg !2188

land.lhs.true65:                                  ; preds = %lor.lhs.false61
  %26 = load i8, i8* @guest, align 1, !dbg !2189
  %conv66 = sext i8 %26 to i32, !dbg !2189
  %cmp67 = icmp ne i32 %conv66, 0, !dbg !2190
  br i1 %cmp67, label %if.then69, label %if.else, !dbg !2191

if.then69:                                        ; preds = %land.lhs.true65, %if.end57
  br label %if.end70, !dbg !2192

if.else:                                          ; preds = %land.lhs.true65, %lor.lhs.false61
  br label %for.end, !dbg !2194

if.end70:                                         ; preds = %if.then69
  br label %for.cond, !dbg !2196, !llvm.loop !2137

for.end:                                          ; preds = %if.else, %if.then56
  call void @addreply_noformat(i32 150, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.145, i64 0, i64 0)), !dbg !2197
  br label %if.end83, !dbg !2198

if.else71:                                        ; preds = %if.end3
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage* %peer2, metadata !2199, metadata !DIExpression()), !dbg !2201
  call void @llvm.dbg.declare(metadata i64* %tries, metadata !2202, metadata !DIExpression()), !dbg !2203
  %27 = load i64, i64* @idletime, align 8, !dbg !2204
  %div = udiv i64 %27, 2, !dbg !2205
  %add = add i64 1, %div, !dbg !2206
  store i64 %add, i64* %tries, align 8, !dbg !2203
  %28 = bitcast %struct.sockaddr_storage* %peer2 to i8*, !dbg !2207
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 bitcast (%struct.sockaddr_storage* @peer to i8*), i64 128, i1 false), !dbg !2207
  %29 = load i16, i16* getelementptr inbounds (%struct.sockaddr_storage, %struct.sockaddr_storage* @peer, i32 0, i32 0), align 8, !dbg !2208
  %conv72 = zext i16 %29 to i32, !dbg !2208
  %cmp73 = icmp eq i32 %conv72, 10, !dbg !2210
  br i1 %cmp73, label %if.then75, label %if.else78, !dbg !2211

if.then75:                                        ; preds = %if.else71
  %30 = load i16, i16* @peerdataport, align 2, !dbg !2212
  %call76 = call zeroext i16 @htons(i16 zeroext %30) #14, !dbg !2214
  %call77 = call i16* @storage_port6(%struct.sockaddr_storage* %peer2), !dbg !2215
  store i16 %call76, i16* %call77, align 2, !dbg !2216
  br label %if.end81, !dbg !2217

if.else78:                                        ; preds = %if.else71
  %31 = load i16, i16* @peerdataport, align 2, !dbg !2218
  %call79 = call zeroext i16 @htons(i16 zeroext %31) #14, !dbg !2220
  %call80 = call i16* @storage_port(%struct.sockaddr_storage* %peer2), !dbg !2221
  store i16 %call79, i16* %call80, align 2, !dbg !2222
  br label %if.end81

if.end81:                                         ; preds = %if.else78, %if.then75
  br label %again, !dbg !2223

again:                                            ; preds = %if.end81
  call void @llvm.dbg.label(metadata !2224), !dbg !2225
  %32 = load i32, i32* @datafd, align 4, !dbg !2226
  store i32 %32, i32* %fd, align 4, !dbg !2227
  store i32 -1, i32* @datafd, align 4, !dbg !2228
  %33 = load i16, i16* @peerdataport, align 2, !dbg !2229
  %conv82 = zext i16 %33 to i32, !dbg !2229
  call void (i32, i8*, ...) @addreply(i32 150, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.146, i64 0, i64 0), i32 %conv82), !dbg !2230
  br label %if.end83

if.end83:                                         ; preds = %again, %for.end
  call void @llvm.dbg.declare(metadata i32* %fodder, metadata !2231, metadata !DIExpression()), !dbg !2233
  store i32 8, i32* %fodder, align 4, !dbg !2234
  %34 = load i32, i32* %fd, align 4, !dbg !2235
  %35 = bitcast i32* %fodder to i8*, !dbg !2236
  %call84 = call i32 @setsockopt(i32 %34, i32 0, i32 1, i8* %35, i32 4) #7, !dbg !2237
  %36 = load i32, i32* %fd, align 4, !dbg !2238
  call void @keepalive(i32 %36, i32 1), !dbg !2239
  %37 = load i32, i32* %fd, align 4, !dbg !2240
  store volatile i32 %37, i32* @xferfd, align 4, !dbg !2241
  br label %return, !dbg !2242

return:                                           ; preds = %if.end83, %if.then51, %if.then2
  ret void, !dbg !2242
}

; Function Attrs: nounwind
declare i8* @strcpy(i8*, i8*) #2

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @closedata() #0 !dbg !2243 {
entry:
  %tmp_xferfd = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %tmp_xferfd, metadata !2244, metadata !DIExpression()), !dbg !2245
  %0 = load volatile i32, i32* @xferfd, align 4, !dbg !2246
  store volatile i32 %0, i32* %tmp_xferfd, align 4, !dbg !2245
  store volatile i32 -1, i32* @xferfd, align 4, !dbg !2247
  %1 = load volatile i32, i32* %tmp_xferfd, align 4, !dbg !2248
  %cmp = icmp ne i32 %1, 1, !dbg !2250
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !2251

land.lhs.true:                                    ; preds = %entry
  %2 = load volatile i32, i32* %tmp_xferfd, align 4, !dbg !2252
  %cmp1 = icmp ne i32 %2, 2, !dbg !2253
  br i1 %cmp1, label %if.then, label %if.end, !dbg !2254

if.then:                                          ; preds = %land.lhs.true
  %3 = load volatile i32, i32* %tmp_xferfd, align 4, !dbg !2255
  %call = call i32 @close(i32 %3), !dbg !2257
  br label %if.end, !dbg !2258

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !2259
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @Fuzz_poll(%struct.pollfd* %fds, i64 %nfds, i32 %timeout) #0 !dbg !2260 {
entry:
  %fds.addr = alloca %struct.pollfd*, align 8
  %nfds.addr = alloca i64, align 8
  %timeout.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  %num = alloca i32, align 4
  store %struct.pollfd* %fds, %struct.pollfd** %fds.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pollfd** %fds.addr, metadata !2263, metadata !DIExpression()), !dbg !2264
  store i64 %nfds, i64* %nfds.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nfds.addr, metadata !2265, metadata !DIExpression()), !dbg !2266
  store i32 %timeout, i32* %timeout.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timeout.addr, metadata !2267, metadata !DIExpression()), !dbg !2268
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2269, metadata !DIExpression()), !dbg !2270
  store i32 0, i32* %ret, align 4, !dbg !2270
  call void @llvm.dbg.declare(metadata i32* %num, metadata !2271, metadata !DIExpression()), !dbg !2272
  %call = call i64 @random() #7, !dbg !2273
  %conv = trunc i64 %call to i32, !dbg !2273
  store i32 %conv, i32* %num, align 4, !dbg !2272
  %0 = load i32, i32* %num, align 4, !dbg !2274
  %cmp = icmp sgt i32 %0, 214748364, !dbg !2276
  br i1 %cmp, label %if.then, label %if.end, !dbg !2277

if.then:                                          ; preds = %entry
  %1 = load %struct.pollfd*, %struct.pollfd** %fds.addr, align 8, !dbg !2278
  %arrayidx = getelementptr %struct.pollfd, %struct.pollfd* %1, i64 0, !dbg !2278
  %revents = getelementptr inbounds %struct.pollfd, %struct.pollfd* %arrayidx, i32 0, i32 2, !dbg !2280
  %2 = load i16, i16* %revents, align 2, !dbg !2281
  %inc = add i16 %2, 1, !dbg !2281
  store i16 %inc, i16* %revents, align 2, !dbg !2281
  %3 = load i32, i32* %ret, align 4, !dbg !2282
  %inc2 = add i32 %3, 1, !dbg !2282
  store i32 %inc2, i32* %ret, align 4, !dbg !2282
  br label %if.end, !dbg !2283

if.end:                                           ; preds = %if.then, %entry
  %call3 = call i64 @random() #7, !dbg !2284
  %conv4 = trunc i64 %call3 to i32, !dbg !2284
  store i32 %conv4, i32* %num, align 4, !dbg !2285
  %4 = load i64, i64* %nfds.addr, align 8, !dbg !2286
  %cmp5 = icmp ugt i64 %4, 1, !dbg !2288
  br i1 %cmp5, label %if.then7, label %if.end16, !dbg !2289

if.then7:                                         ; preds = %if.end
  %5 = load i32, i32* %num, align 4, !dbg !2290
  %cmp8 = icmp slt i32 %5, 429496729, !dbg !2293
  br i1 %cmp8, label %if.then10, label %if.end15, !dbg !2294

if.then10:                                        ; preds = %if.then7
  %6 = load %struct.pollfd*, %struct.pollfd** %fds.addr, align 8, !dbg !2295
  %arrayidx11 = getelementptr %struct.pollfd, %struct.pollfd* %6, i64 1, !dbg !2295
  %revents12 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %arrayidx11, i32 0, i32 2, !dbg !2297
  %7 = load i16, i16* %revents12, align 2, !dbg !2298
  %inc13 = add i16 %7, 1, !dbg !2298
  store i16 %inc13, i16* %revents12, align 2, !dbg !2298
  %8 = load i32, i32* %ret, align 4, !dbg !2299
  %inc14 = add i32 %8, 1, !dbg !2299
  store i32 %inc14, i32* %ret, align 4, !dbg !2299
  br label %if.end15, !dbg !2300

if.end15:                                         ; preds = %if.then10, %if.then7
  br label %if.end16, !dbg !2301

if.end16:                                         ; preds = %if.end15, %if.end
  %9 = load i32, i32* %ret, align 4, !dbg !2302
  ret i32 %9, !dbg !2303
}

; Function Attrs: nounwind readnone
declare i32 @htonl(i32) #10

; Function Attrs: nounwind readnone
declare zeroext i16 @htons(i16 zeroext) #10

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @error(i32 %n, i8* %msg) #0 !dbg !2304 {
entry:
  %n.addr = alloca i32, align 4
  %msg.addr = alloca i8*, align 8
  %e = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !2307, metadata !DIExpression()), !dbg !2308
  store i8* %msg, i8** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %msg.addr, metadata !2309, metadata !DIExpression()), !dbg !2310
  call void @llvm.dbg.declare(metadata i8** %e, metadata !2311, metadata !DIExpression()), !dbg !2312
  %call = call i32* @__errno_location() #14, !dbg !2313
  %0 = load i32, i32* %call, align 4, !dbg !2313
  %call1 = call i8* @strerror(i32 %0) #7, !dbg !2314
  store i8* %call1, i8** %e, align 8, !dbg !2312
  %1 = load i8*, i8** %msg.addr, align 8, !dbg !2315
  %2 = load i8*, i8** %e, align 8, !dbg !2316
  call void (i32, i8*, ...) @logfile(i32 3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.216, i64 0, i64 0), i8* %1, i8* %2), !dbg !2317
  %3 = load i32, i32* %n.addr, align 4, !dbg !2318
  %4 = load i8*, i8** %msg.addr, align 8, !dbg !2319
  %5 = load i8*, i8** %e, align 8, !dbg !2320
  call void (i32, i8*, ...) @addreply(i32 %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.216, i64 0, i64 0), i8* %4, i8* %5), !dbg !2321
  ret void, !dbg !2322
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal void @fourinsix(%struct.sockaddr_storage* %v6) #0 !dbg !2323 {
entry:
  %v6.addr = alloca %struct.sockaddr_storage*, align 8
  %v4 = alloca %struct.sockaddr_storage, align 8
  %__a = alloca %struct.in6_addr*, align 8
  %tmp = alloca i32, align 4
  store %struct.sockaddr_storage* %v6, %struct.sockaddr_storage** %v6.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage** %v6.addr, metadata !2326, metadata !DIExpression()), !dbg !2327
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage* %v4, metadata !2328, metadata !DIExpression()), !dbg !2329
  %0 = load i8, i8* @v6ready, align 1, !dbg !2330
  %conv = sext i8 %0 to i32, !dbg !2330
  %cmp = icmp eq i32 %conv, 0, !dbg !2332
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2333

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %v6.addr, align 8, !dbg !2334
  %ss_family = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %1, i32 0, i32 0, !dbg !2334
  %2 = load i16, i16* %ss_family, align 8, !dbg !2334
  %conv2 = zext i16 %2 to i32, !dbg !2334
  %cmp3 = icmp ne i32 %conv2, 10, !dbg !2335
  br i1 %cmp3, label %if.then, label %lor.lhs.false5, !dbg !2336

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata %struct.in6_addr** %__a, metadata !2337, metadata !DIExpression()), !dbg !2339
  %3 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %v6.addr, align 8, !dbg !2339
  %call = call %struct.in6_addr* @storage_sin_addr6_const(%struct.sockaddr_storage* %3), !dbg !2339
  store %struct.in6_addr* %call, %struct.in6_addr** %__a, align 8, !dbg !2339
  %4 = load %struct.in6_addr*, %struct.in6_addr** %__a, align 8, !dbg !2339
  %__in6_u = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %4, i32 0, i32 0, !dbg !2339
  %__u6_addr32 = bitcast %union.anon* %__in6_u to [4 x i32]*, !dbg !2339
  %arrayidx = getelementptr [4 x i32], [4 x i32]* %__u6_addr32, i64 0, i64 0, !dbg !2339
  %5 = load i32, i32* %arrayidx, align 4, !dbg !2339
  %cmp6 = icmp eq i32 %5, 0, !dbg !2339
  br i1 %cmp6, label %land.lhs.true, label %land.end, !dbg !2339

land.lhs.true:                                    ; preds = %lor.lhs.false5
  %6 = load %struct.in6_addr*, %struct.in6_addr** %__a, align 8, !dbg !2339
  %__in6_u8 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %6, i32 0, i32 0, !dbg !2339
  %__u6_addr329 = bitcast %union.anon* %__in6_u8 to [4 x i32]*, !dbg !2339
  %arrayidx10 = getelementptr [4 x i32], [4 x i32]* %__u6_addr329, i64 0, i64 1, !dbg !2339
  %7 = load i32, i32* %arrayidx10, align 4, !dbg !2339
  %cmp11 = icmp eq i32 %7, 0, !dbg !2339
  br i1 %cmp11, label %land.rhs, label %land.end, !dbg !2339

land.rhs:                                         ; preds = %land.lhs.true
  %8 = load %struct.in6_addr*, %struct.in6_addr** %__a, align 8, !dbg !2339
  %__in6_u13 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %8, i32 0, i32 0, !dbg !2339
  %__u6_addr3214 = bitcast %union.anon* %__in6_u13 to [4 x i32]*, !dbg !2339
  %arrayidx15 = getelementptr [4 x i32], [4 x i32]* %__u6_addr3214, i64 0, i64 2, !dbg !2339
  %9 = load i32, i32* %arrayidx15, align 4, !dbg !2339
  %call16 = call i32 @htonl(i32 65535) #14, !dbg !2339
  %cmp17 = icmp eq i32 %9, %call16, !dbg !2339
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %lor.lhs.false5
  %10 = phi i1 [ false, %land.lhs.true ], [ false, %lor.lhs.false5 ], [ %cmp17, %land.rhs ], !dbg !2340
  %land.ext = zext i1 %10 to i32, !dbg !2339
  store i32 %land.ext, i32* %tmp, align 4, !dbg !2339
  %11 = load i32, i32* %tmp, align 4, !dbg !2339
  %cmp19 = icmp eq i32 %11, 0, !dbg !2341
  br i1 %cmp19, label %if.then, label %if.end, !dbg !2342

if.then:                                          ; preds = %land.end, %lor.lhs.false, %entry
  br label %return, !dbg !2343

if.end:                                           ; preds = %land.end
  %12 = bitcast %struct.sockaddr_storage* %v4 to i8*, !dbg !2345
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 128, i1 false), !dbg !2345
  %ss_family21 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %v4, i32 0, i32 0, !dbg !2346
  store i16 2, i16* %ss_family21, align 8, !dbg !2347
  %call22 = call %struct.in_addr* @storage_sin_addr(%struct.sockaddr_storage* %v4), !dbg !2348
  %s_addr = getelementptr inbounds %struct.in_addr, %struct.in_addr* %call22, i32 0, i32 0, !dbg !2348
  %13 = bitcast i32* %s_addr to i8*, !dbg !2349
  %14 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %v6.addr, align 8, !dbg !2350
  %call23 = call %struct.in6_addr* @storage_sin_addr6_const(%struct.sockaddr_storage* %14), !dbg !2350
  %__in6_u24 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %call23, i32 0, i32 0, !dbg !2350
  %__u6_addr8 = bitcast %union.anon* %__in6_u24 to [16 x i8]*, !dbg !2350
  %15 = bitcast [16 x i8]* %__u6_addr8 to i8*, !dbg !2351
  %add.ptr = getelementptr i8, i8* %15, i64 12, !dbg !2352
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 1 %add.ptr, i64 4, i1 false), !dbg !2349
  %16 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %v6.addr, align 8, !dbg !2353
  %call25 = call i16* @storage_port6_const(%struct.sockaddr_storage* %16), !dbg !2353
  %17 = load i16, i16* %call25, align 2, !dbg !2353
  %call26 = call i16* @storage_port(%struct.sockaddr_storage* %v4), !dbg !2354
  store i16 %17, i16* %call26, align 2, !dbg !2355
  %18 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %v6.addr, align 8, !dbg !2356
  %19 = bitcast %struct.sockaddr_storage* %18 to i8*, !dbg !2357
  %20 = bitcast %struct.sockaddr_storage* %v4 to i8*, !dbg !2357
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 128, i1 false), !dbg !2357
  br label %return, !dbg !2358

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !2358
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @addrcmp(%struct.sockaddr_storage* %s1, %struct.sockaddr_storage* %s2) #0 !dbg !2359 {
entry:
  %retval = alloca i32, align 4
  %s1.addr = alloca %struct.sockaddr_storage*, align 8
  %s2.addr = alloca %struct.sockaddr_storage*, align 8
  %__a = alloca %struct.in6_addr*, align 8
  %__b = alloca %struct.in6_addr*, align 8
  %tmp = alloca i32, align 4
  store %struct.sockaddr_storage* %s1, %struct.sockaddr_storage** %s1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage** %s1.addr, metadata !2362, metadata !DIExpression()), !dbg !2363
  store %struct.sockaddr_storage* %s2, %struct.sockaddr_storage** %s2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage** %s2.addr, metadata !2364, metadata !DIExpression()), !dbg !2365
  %0 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %s1.addr, align 8, !dbg !2366
  %ss_family = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %0, i32 0, i32 0, !dbg !2366
  %1 = load i16, i16* %ss_family, align 8, !dbg !2366
  %conv = zext i16 %1 to i32, !dbg !2366
  %cmp = icmp eq i32 %conv, 10, !dbg !2368
  br i1 %cmp, label %if.then, label %if.else39, !dbg !2369

if.then:                                          ; preds = %entry
  %2 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %s2.addr, align 8, !dbg !2370
  %ss_family2 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %2, i32 0, i32 0, !dbg !2370
  %3 = load i16, i16* %ss_family2, align 8, !dbg !2370
  %conv3 = zext i16 %3 to i32, !dbg !2370
  %cmp4 = icmp ne i32 %conv3, 10, !dbg !2373
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !2374

if.then6:                                         ; preds = %if.then
  store i32 1, i32* %retval, align 4, !dbg !2375
  br label %return, !dbg !2375

if.end:                                           ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.in6_addr** %__a, metadata !2377, metadata !DIExpression()), !dbg !2380
  %4 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %s1.addr, align 8, !dbg !2380
  %call = call %struct.in6_addr* @storage_sin_addr6_const(%struct.sockaddr_storage* %4), !dbg !2380
  store %struct.in6_addr* %call, %struct.in6_addr** %__a, align 8, !dbg !2380
  call void @llvm.dbg.declare(metadata %struct.in6_addr** %__b, metadata !2381, metadata !DIExpression()), !dbg !2380
  %5 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %s2.addr, align 8, !dbg !2380
  %call7 = call %struct.in6_addr* @storage_sin_addr6_const(%struct.sockaddr_storage* %5), !dbg !2380
  store %struct.in6_addr* %call7, %struct.in6_addr** %__b, align 8, !dbg !2380
  %6 = load %struct.in6_addr*, %struct.in6_addr** %__a, align 8, !dbg !2380
  %__in6_u = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %6, i32 0, i32 0, !dbg !2380
  %__u6_addr32 = bitcast %union.anon* %__in6_u to [4 x i32]*, !dbg !2380
  %arrayidx = getelementptr [4 x i32], [4 x i32]* %__u6_addr32, i64 0, i64 0, !dbg !2380
  %7 = load i32, i32* %arrayidx, align 4, !dbg !2380
  %8 = load %struct.in6_addr*, %struct.in6_addr** %__b, align 8, !dbg !2380
  %__in6_u8 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %8, i32 0, i32 0, !dbg !2380
  %__u6_addr329 = bitcast %union.anon* %__in6_u8 to [4 x i32]*, !dbg !2380
  %arrayidx10 = getelementptr [4 x i32], [4 x i32]* %__u6_addr329, i64 0, i64 0, !dbg !2380
  %9 = load i32, i32* %arrayidx10, align 4, !dbg !2380
  %cmp11 = icmp eq i32 %7, %9, !dbg !2380
  br i1 %cmp11, label %land.lhs.true, label %land.end, !dbg !2380

land.lhs.true:                                    ; preds = %if.end
  %10 = load %struct.in6_addr*, %struct.in6_addr** %__a, align 8, !dbg !2380
  %__in6_u13 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %10, i32 0, i32 0, !dbg !2380
  %__u6_addr3214 = bitcast %union.anon* %__in6_u13 to [4 x i32]*, !dbg !2380
  %arrayidx15 = getelementptr [4 x i32], [4 x i32]* %__u6_addr3214, i64 0, i64 1, !dbg !2380
  %11 = load i32, i32* %arrayidx15, align 4, !dbg !2380
  %12 = load %struct.in6_addr*, %struct.in6_addr** %__b, align 8, !dbg !2380
  %__in6_u16 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %12, i32 0, i32 0, !dbg !2380
  %__u6_addr3217 = bitcast %union.anon* %__in6_u16 to [4 x i32]*, !dbg !2380
  %arrayidx18 = getelementptr [4 x i32], [4 x i32]* %__u6_addr3217, i64 0, i64 1, !dbg !2380
  %13 = load i32, i32* %arrayidx18, align 4, !dbg !2380
  %cmp19 = icmp eq i32 %11, %13, !dbg !2380
  br i1 %cmp19, label %land.lhs.true21, label %land.end, !dbg !2380

land.lhs.true21:                                  ; preds = %land.lhs.true
  %14 = load %struct.in6_addr*, %struct.in6_addr** %__a, align 8, !dbg !2380
  %__in6_u22 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %14, i32 0, i32 0, !dbg !2380
  %__u6_addr3223 = bitcast %union.anon* %__in6_u22 to [4 x i32]*, !dbg !2380
  %arrayidx24 = getelementptr [4 x i32], [4 x i32]* %__u6_addr3223, i64 0, i64 2, !dbg !2380
  %15 = load i32, i32* %arrayidx24, align 4, !dbg !2380
  %16 = load %struct.in6_addr*, %struct.in6_addr** %__b, align 8, !dbg !2380
  %__in6_u25 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %16, i32 0, i32 0, !dbg !2380
  %__u6_addr3226 = bitcast %union.anon* %__in6_u25 to [4 x i32]*, !dbg !2380
  %arrayidx27 = getelementptr [4 x i32], [4 x i32]* %__u6_addr3226, i64 0, i64 2, !dbg !2380
  %17 = load i32, i32* %arrayidx27, align 4, !dbg !2380
  %cmp28 = icmp eq i32 %15, %17, !dbg !2380
  br i1 %cmp28, label %land.rhs, label %land.end, !dbg !2380

land.rhs:                                         ; preds = %land.lhs.true21
  %18 = load %struct.in6_addr*, %struct.in6_addr** %__a, align 8, !dbg !2380
  %__in6_u30 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %18, i32 0, i32 0, !dbg !2380
  %__u6_addr3231 = bitcast %union.anon* %__in6_u30 to [4 x i32]*, !dbg !2380
  %arrayidx32 = getelementptr [4 x i32], [4 x i32]* %__u6_addr3231, i64 0, i64 3, !dbg !2380
  %19 = load i32, i32* %arrayidx32, align 4, !dbg !2380
  %20 = load %struct.in6_addr*, %struct.in6_addr** %__b, align 8, !dbg !2380
  %__in6_u33 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %20, i32 0, i32 0, !dbg !2380
  %__u6_addr3234 = bitcast %union.anon* %__in6_u33 to [4 x i32]*, !dbg !2380
  %arrayidx35 = getelementptr [4 x i32], [4 x i32]* %__u6_addr3234, i64 0, i64 3, !dbg !2380
  %21 = load i32, i32* %arrayidx35, align 4, !dbg !2380
  %cmp36 = icmp eq i32 %19, %21, !dbg !2380
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true21, %land.lhs.true, %if.end
  %22 = phi i1 [ false, %land.lhs.true21 ], [ false, %land.lhs.true ], [ false, %if.end ], [ %cmp36, %land.rhs ], !dbg !2382
  %land.ext = zext i1 %22 to i32, !dbg !2380
  store i32 %land.ext, i32* %tmp, align 4, !dbg !2380
  %23 = load i32, i32* %tmp, align 4, !dbg !2380
  %tobool = icmp ne i32 %23, 0, !dbg !2383
  br i1 %tobool, label %if.then38, label %if.else, !dbg !2384

if.then38:                                        ; preds = %land.end
  store i32 0, i32* %retval, align 4, !dbg !2385
  br label %return, !dbg !2385

if.else:                                          ; preds = %land.end
  store i32 1, i32* %retval, align 4, !dbg !2387
  br label %return, !dbg !2387

if.else39:                                        ; preds = %entry
  %24 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %s1.addr, align 8, !dbg !2389
  %ss_family40 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %24, i32 0, i32 0, !dbg !2389
  %25 = load i16, i16* %ss_family40, align 8, !dbg !2389
  %conv41 = zext i16 %25 to i32, !dbg !2389
  %cmp42 = icmp eq i32 %conv41, 2, !dbg !2391
  br i1 %cmp42, label %if.then44, label %if.end58, !dbg !2392

if.then44:                                        ; preds = %if.else39
  %26 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %s2.addr, align 8, !dbg !2393
  %ss_family45 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %26, i32 0, i32 0, !dbg !2393
  %27 = load i16, i16* %ss_family45, align 8, !dbg !2393
  %conv46 = zext i16 %27 to i32, !dbg !2393
  %cmp47 = icmp ne i32 %conv46, 2, !dbg !2396
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !2397

if.then49:                                        ; preds = %if.then44
  store i32 1, i32* %retval, align 4, !dbg !2398
  br label %return, !dbg !2398

if.end50:                                         ; preds = %if.then44
  %28 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %s1.addr, align 8, !dbg !2400
  %call51 = call %struct.in_addr* @storage_sin_addr_const(%struct.sockaddr_storage* %28), !dbg !2400
  %s_addr = getelementptr inbounds %struct.in_addr, %struct.in_addr* %call51, i32 0, i32 0, !dbg !2400
  %29 = load i32, i32* %s_addr, align 4, !dbg !2400
  %30 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %s2.addr, align 8, !dbg !2402
  %call52 = call %struct.in_addr* @storage_sin_addr_const(%struct.sockaddr_storage* %30), !dbg !2402
  %s_addr53 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %call52, i32 0, i32 0, !dbg !2402
  %31 = load i32, i32* %s_addr53, align 4, !dbg !2402
  %cmp54 = icmp eq i32 %29, %31, !dbg !2403
  br i1 %cmp54, label %if.then56, label %if.else57, !dbg !2404

if.then56:                                        ; preds = %if.end50
  store i32 0, i32* %retval, align 4, !dbg !2405
  br label %return, !dbg !2405

if.else57:                                        ; preds = %if.end50
  store i32 1, i32* %retval, align 4, !dbg !2407
  br label %return, !dbg !2407

if.end58:                                         ; preds = %if.else39
  br label %if.end59

if.end59:                                         ; preds = %if.end58
  store i32 -1, i32* %retval, align 4, !dbg !2409
  br label %return, !dbg !2409

return:                                           ; preds = %if.end59, %if.else57, %if.then56, %if.then49, %if.else, %if.then38, %if.then6
  %32 = load i32, i32* %retval, align 4, !dbg !2410
  ret i32 %32, !dbg !2410
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: nounwind
declare i32 @setsockopt(i32, i32, i32, i8*, i32) #2

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal void @keepalive(i32 %fd, i32 %keep) #0 !dbg !2411 {
entry:
  %fd.addr = alloca i32, align 4
  %keep.addr = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !2414, metadata !DIExpression()), !dbg !2415
  store i32 %keep, i32* %keep.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %keep.addr, metadata !2416, metadata !DIExpression()), !dbg !2417
  %0 = load i32, i32* %fd.addr, align 4, !dbg !2418
  %1 = bitcast i32* %keep.addr to i8*, !dbg !2420
  %call = call i32 @setsockopt(i32 %0, i32 1, i32 9, i8* %1, i32 4) #7, !dbg !2421
  ret void, !dbg !2422
}

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #10

; Function Attrs: nounwind
declare i8* @strerror(i32) #2

; Function Attrs: nounwind
declare i64 @random() #2

declare i32 @close(i32) #9

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @doestp() #0 !dbg !2423 {
entry:
  %dataconn = alloca %struct.sockaddr_storage, align 8
  %socksize = alloca i32, align 4
  %hbuf = alloca [1025 x i8], align 16
  %pbuf = alloca [32 x i8], align 16
  %agg.tmp = alloca %union.__SOCKADDR_ARG, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage* %dataconn, metadata !2424, metadata !DIExpression()), !dbg !2425
  call void @llvm.dbg.declare(metadata i32* %socksize, metadata !2426, metadata !DIExpression()), !dbg !2427
  call void @llvm.dbg.declare(metadata [1025 x i8]* %hbuf, metadata !2428, metadata !DIExpression()), !dbg !2429
  call void @llvm.dbg.declare(metadata [32 x i8]* %pbuf, metadata !2430, metadata !DIExpression()), !dbg !2431
  %0 = load i8, i8* @passive, align 1, !dbg !2432
  %conv = sext i8 %0 to i32, !dbg !2432
  %cmp = icmp eq i32 %conv, 0, !dbg !2434
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2435

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* @datafd, align 4, !dbg !2436
  %cmp2 = icmp eq i32 %1, -1, !dbg !2437
  br i1 %cmp2, label %if.then, label %if.end, !dbg !2438

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @addreply_noformat(i32 520, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.68, i64 0, i64 0)), !dbg !2439
  br label %return, !dbg !2441

if.end:                                           ; preds = %lor.lhs.false
  %2 = load volatile i32, i32* @xferfd, align 4, !dbg !2442
  %cmp4 = icmp eq i32 %2, -1, !dbg !2444
  br i1 %cmp4, label %if.then6, label %if.end11, !dbg !2445

if.then6:                                         ; preds = %if.end
  call void @opendata(), !dbg !2446
  %3 = load volatile i32, i32* @xferfd, align 4, !dbg !2448
  %cmp7 = icmp eq i32 %3, -1, !dbg !2450
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !2451

if.then9:                                         ; preds = %if.then6
  call void @addreply_noformat(i32 425, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.64, i64 0, i64 0)), !dbg !2452
  br label %return, !dbg !2454

if.end10:                                         ; preds = %if.then6
  br label %if.end11, !dbg !2455

if.end11:                                         ; preds = %if.end10, %if.end
  store i32 128, i32* %socksize, align 4, !dbg !2456
  %4 = load volatile i32, i32* @xferfd, align 4, !dbg !2457
  %__sockaddr__ = bitcast %union.__SOCKADDR_ARG* %agg.tmp to %struct.sockaddr**, !dbg !2459
  %5 = bitcast %struct.sockaddr_storage* %dataconn to %struct.sockaddr*, !dbg !2459
  store %struct.sockaddr* %5, %struct.sockaddr** %__sockaddr__, align 8, !dbg !2459
  %coerce.dive = getelementptr inbounds %union.__SOCKADDR_ARG, %union.__SOCKADDR_ARG* %agg.tmp, i32 0, i32 0, !dbg !2460
  %6 = load %struct.sockaddr*, %struct.sockaddr** %coerce.dive, align 8, !dbg !2460
  %call = call i32 @getpeername(i32 %4, %struct.sockaddr* %6, i32* %socksize) #7, !dbg !2460
  %cmp12 = icmp slt i32 %call, 0, !dbg !2461
  br i1 %cmp12, label %if.then23, label %lor.lhs.false14, !dbg !2462

lor.lhs.false14:                                  ; preds = %if.end11
  %7 = bitcast %struct.sockaddr_storage* %dataconn to %struct.sockaddr*, !dbg !2463
  %ss_family = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %dataconn, i32 0, i32 0, !dbg !2464
  %8 = load i16, i16* %ss_family, align 8, !dbg !2464
  %conv15 = zext i16 %8 to i32, !dbg !2464
  %cmp16 = icmp eq i32 %conv15, 2, !dbg !2464
  %9 = zext i1 %cmp16 to i64, !dbg !2464
  %cond = select i1 %cmp16, i64 16, i64 28, !dbg !2464
  %conv18 = trunc i64 %cond to i32, !dbg !2464
  %arraydecay = getelementptr inbounds [1025 x i8], [1025 x i8]* %hbuf, i64 0, i64 0, !dbg !2465
  %arraydecay19 = getelementptr inbounds [32 x i8], [32 x i8]* %pbuf, i64 0, i64 0, !dbg !2466
  %call20 = call i32 @getnameinfo(%struct.sockaddr* %7, i32 %conv18, i8* %arraydecay, i32 1025, i8* %arraydecay19, i32 32, i32 3), !dbg !2467
  %cmp21 = icmp ne i32 %call20, 0, !dbg !2468
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !2469

if.then23:                                        ; preds = %lor.lhs.false14, %if.end11
  call void @addreply_noformat(i32 425, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.69, i64 0, i64 0)), !dbg !2470
  call void @closedata(), !dbg !2472
  br label %return, !dbg !2473

if.end24:                                         ; preds = %lor.lhs.false14
  %ss_family25 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %dataconn, i32 0, i32 0, !dbg !2474
  %10 = load i16, i16* %ss_family25, align 8, !dbg !2474
  %conv26 = zext i16 %10 to i32, !dbg !2474
  %cmp27 = icmp eq i32 %conv26, 10, !dbg !2475
  %11 = zext i1 %cmp27 to i64, !dbg !2474
  %cond29 = select i1 %cmp27, i32 50, i32 49, !dbg !2474
  %arraydecay30 = getelementptr inbounds [1025 x i8], [1025 x i8]* %hbuf, i64 0, i64 0, !dbg !2476
  %arraydecay31 = getelementptr inbounds [32 x i8], [32 x i8]* %pbuf, i64 0, i64 0, !dbg !2477
  call void (i32, i8*, ...) @addreply(i32 225, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.70, i64 0, i64 0), i32 %cond29, i8* %arraydecay30, i8* %arraydecay31), !dbg !2478
  br label %return, !dbg !2479

return:                                           ; preds = %if.end24, %if.then23, %if.then9, %if.then
  ret void, !dbg !2479
}

; Function Attrs: nounwind
declare i32 @getpeername(i32, %struct.sockaddr*, i32*) #2

declare i32 @getnameinfo(%struct.sockaddr*, i32, i8*, i32, i8*, i32, i32) #9

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @doeprt(i8* %p) #0 !dbg !2480 {
entry:
  %p.addr = alloca i8*, align 8
  %delim = alloca i8, align 1
  %family = alloca i32, align 4
  %a1 = alloca i32, align 4
  %a2 = alloca i32, align 4
  %a3 = alloca i32, align 4
  %a4 = alloca i32, align 4
  %port = alloca i32, align 4
  %a = alloca %struct.sockaddr_storage, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !2481, metadata !DIExpression()), !dbg !2482
  call void @llvm.dbg.declare(metadata i8* %delim, metadata !2483, metadata !DIExpression()), !dbg !2484
  call void @llvm.dbg.declare(metadata i32* %family, metadata !2485, metadata !DIExpression()), !dbg !2486
  %0 = load i8*, i8** %p.addr, align 8, !dbg !2487
  %incdec.ptr = getelementptr i8, i8* %0, i32 1, !dbg !2487
  store i8* %incdec.ptr, i8** %p.addr, align 8, !dbg !2487
  %1 = load i8, i8* %0, align 1, !dbg !2488
  store i8 %1, i8* %delim, align 1, !dbg !2489
  %2 = load i8*, i8** %p.addr, align 8, !dbg !2490
  %call = call i32 @atoi(i8* %2) #12, !dbg !2491
  store i32 %call, i32* %family, align 4, !dbg !2492
  br label %while.cond, !dbg !2493

while.cond:                                       ; preds = %while.body, %entry
  %call1 = call i16** @__ctype_b_loc() #14, !dbg !2494
  %3 = load i16*, i16** %call1, align 8, !dbg !2494
  %4 = load i8*, i8** %p.addr, align 8, !dbg !2494
  %5 = load i8, i8* %4, align 1, !dbg !2494
  %conv = zext i8 %5 to i32, !dbg !2494
  %idxprom = sext i32 %conv to i64, !dbg !2494
  %arrayidx = getelementptr i16, i16* %3, i64 %idxprom, !dbg !2494
  %6 = load i16, i16* %arrayidx, align 2, !dbg !2494
  %conv2 = zext i16 %6 to i32, !dbg !2494
  %and = and i32 %conv2, 2048, !dbg !2494
  %tobool = icmp ne i32 %and, 0, !dbg !2493
  br i1 %tobool, label %while.body, label %while.end, !dbg !2493

while.body:                                       ; preds = %while.cond
  %7 = load i8*, i8** %p.addr, align 8, !dbg !2495
  %incdec.ptr3 = getelementptr i8, i8* %7, i32 1, !dbg !2495
  store i8* %incdec.ptr3, i8** %p.addr, align 8, !dbg !2495
  br label %while.cond, !dbg !2493, !llvm.loop !2497

while.end:                                        ; preds = %while.cond
  %8 = load i8*, i8** %p.addr, align 8, !dbg !2499
  %9 = load i8, i8* %8, align 1, !dbg !2501
  %conv4 = sext i8 %9 to i32, !dbg !2501
  %10 = load i8, i8* %delim, align 1, !dbg !2502
  %conv5 = sext i8 %10 to i32, !dbg !2502
  %cmp = icmp eq i32 %conv4, %conv5, !dbg !2503
  br i1 %cmp, label %if.then, label %if.else, !dbg !2504

if.then:                                          ; preds = %while.end
  %11 = load i8*, i8** %p.addr, align 8, !dbg !2505
  %incdec.ptr7 = getelementptr i8, i8* %11, i32 1, !dbg !2505
  store i8* %incdec.ptr7, i8** %p.addr, align 8, !dbg !2505
  br label %if.end, !dbg !2507

if.else:                                          ; preds = %while.end
  call void @addreply_noformat(i32 501, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.71, i64 0, i64 0)), !dbg !2508
  br label %if.end98, !dbg !2510

if.end:                                           ; preds = %if.then
  %12 = load i32, i32* %family, align 4, !dbg !2511
  %cmp8 = icmp eq i32 %12, 2, !dbg !2513
  br i1 %cmp8, label %land.lhs.true, label %if.end13, !dbg !2514

land.lhs.true:                                    ; preds = %if.end
  %13 = load i8, i8* @v6ready, align 1, !dbg !2515
  %conv10 = sext i8 %13 to i32, !dbg !2515
  %tobool11 = icmp ne i32 %conv10, 0, !dbg !2515
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !2516

if.then12:                                        ; preds = %land.lhs.true
  %14 = load i8*, i8** %p.addr, align 8, !dbg !2517
  %15 = load i8, i8* %delim, align 1, !dbg !2519
  call void @do_ipv6_port(i8* %14, i8 signext %15), !dbg !2520
  br label %if.end98, !dbg !2521

if.end13:                                         ; preds = %land.lhs.true, %if.end
  %16 = load i32, i32* %family, align 4, !dbg !2522
  %cmp14 = icmp ne i32 %16, 1, !dbg !2524
  br i1 %cmp14, label %if.then16, label %if.end21, !dbg !2525

if.then16:                                        ; preds = %if.end13
  %17 = load i8, i8* @v6ready, align 1, !dbg !2526
  %tobool17 = icmp ne i8 %17, 0, !dbg !2526
  br i1 %tobool17, label %if.then18, label %if.else19, !dbg !2529

if.then18:                                        ; preds = %if.then16
  call void @addreply_noformat(i32 522, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.72, i64 0, i64 0)), !dbg !2530
  br label %if.end20, !dbg !2532

if.else19:                                        ; preds = %if.then16
  call void @addreply_noformat(i32 522, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.73, i64 0, i64 0)), !dbg !2533
  br label %if.end20

if.end20:                                         ; preds = %if.else19, %if.then18
  br label %if.end98, !dbg !2535

if.end21:                                         ; preds = %if.end13
  call void @llvm.dbg.declare(metadata i32* %a1, metadata !2536, metadata !DIExpression()), !dbg !2538
  call void @llvm.dbg.declare(metadata i32* %a2, metadata !2539, metadata !DIExpression()), !dbg !2540
  call void @llvm.dbg.declare(metadata i32* %a3, metadata !2541, metadata !DIExpression()), !dbg !2542
  call void @llvm.dbg.declare(metadata i32* %a4, metadata !2543, metadata !DIExpression()), !dbg !2544
  call void @llvm.dbg.declare(metadata i32* %port, metadata !2545, metadata !DIExpression()), !dbg !2546
  store i32 0, i32* %port, align 4, !dbg !2546
  %18 = load i8*, i8** %p.addr, align 8, !dbg !2547
  %call22 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %18, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.74, i64 0, i64 0), i32* %a1, i32* %a2, i32* %a3, i32* %a4) #7, !dbg !2549
  %cmp23 = icmp ne i32 %call22, 4, !dbg !2550
  br i1 %cmp23, label %land.lhs.true25, label %lor.lhs.false, !dbg !2551

land.lhs.true25:                                  ; preds = %if.end21
  %19 = load i8*, i8** %p.addr, align 8, !dbg !2552
  %call26 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %19, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.75, i64 0, i64 0), i32* %a1, i32* %a2, i32* %a3, i32* %a4) #7, !dbg !2553
  %cmp27 = icmp ne i32 %call26, 4, !dbg !2554
  br i1 %cmp27, label %if.then45, label %lor.lhs.false, !dbg !2555

lor.lhs.false:                                    ; preds = %land.lhs.true25, %if.end21
  %20 = load i32, i32* %a1, align 4, !dbg !2556
  %cmp29 = icmp ugt i32 %20, 255, !dbg !2557
  br i1 %cmp29, label %if.then45, label %lor.lhs.false31, !dbg !2558

lor.lhs.false31:                                  ; preds = %lor.lhs.false
  %21 = load i32, i32* %a2, align 4, !dbg !2559
  %cmp32 = icmp ugt i32 %21, 255, !dbg !2560
  br i1 %cmp32, label %if.then45, label %lor.lhs.false34, !dbg !2561

lor.lhs.false34:                                  ; preds = %lor.lhs.false31
  %22 = load i32, i32* %a3, align 4, !dbg !2562
  %cmp35 = icmp ugt i32 %22, 255, !dbg !2563
  br i1 %cmp35, label %if.then45, label %lor.lhs.false37, !dbg !2564

lor.lhs.false37:                                  ; preds = %lor.lhs.false34
  %23 = load i32, i32* %a4, align 4, !dbg !2565
  %cmp38 = icmp ugt i32 %23, 255, !dbg !2566
  br i1 %cmp38, label %if.then45, label %lor.lhs.false40, !dbg !2567

lor.lhs.false40:                                  ; preds = %lor.lhs.false37
  %24 = load i32, i32* %a1, align 4, !dbg !2568
  %25 = load i32, i32* %a2, align 4, !dbg !2569
  %or = or i32 %24, %25, !dbg !2570
  %26 = load i32, i32* %a3, align 4, !dbg !2571
  %or41 = or i32 %or, %26, !dbg !2572
  %27 = load i32, i32* %a4, align 4, !dbg !2573
  %or42 = or i32 %or41, %27, !dbg !2574
  %cmp43 = icmp eq i32 %or42, 0, !dbg !2575
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !2576

if.then45:                                        ; preds = %lor.lhs.false40, %lor.lhs.false37, %lor.lhs.false34, %lor.lhs.false31, %lor.lhs.false, %land.lhs.true25
  call void @addreply_noformat(i32 501, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.71, i64 0, i64 0)), !dbg !2577
  br label %if.end98, !dbg !2579

if.end46:                                         ; preds = %lor.lhs.false40
  br label %while.cond47, !dbg !2580

while.cond47:                                     ; preds = %while.body53, %if.end46
  %28 = load i8*, i8** %p.addr, align 8, !dbg !2581
  %29 = load i8, i8* %28, align 1, !dbg !2582
  %conv48 = sext i8 %29 to i32, !dbg !2582
  %tobool49 = icmp ne i32 %conv48, 0, !dbg !2582
  br i1 %tobool49, label %land.rhs, label %land.end, !dbg !2583

land.rhs:                                         ; preds = %while.cond47
  %30 = load i8*, i8** %p.addr, align 8, !dbg !2584
  %31 = load i8, i8* %30, align 1, !dbg !2585
  %conv50 = sext i8 %31 to i32, !dbg !2585
  %call51 = call i8* @strchr(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.76, i64 0, i64 0), i32 %conv50) #12, !dbg !2586
  %tobool52 = icmp ne i8* %call51, null, !dbg !2583
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond47
  %32 = phi i1 [ false, %while.cond47 ], [ %tobool52, %land.rhs ], !dbg !2587
  br i1 %32, label %while.body53, label %while.end55, !dbg !2580

while.body53:                                     ; preds = %land.end
  %33 = load i8*, i8** %p.addr, align 8, !dbg !2588
  %incdec.ptr54 = getelementptr i8, i8* %33, i32 1, !dbg !2588
  store i8* %incdec.ptr54, i8** %p.addr, align 8, !dbg !2588
  br label %while.cond47, !dbg !2580, !llvm.loop !2590

while.end55:                                      ; preds = %land.end
  %34 = load i8*, i8** %p.addr, align 8, !dbg !2592
  %35 = load i8, i8* %34, align 1, !dbg !2594
  %conv56 = sext i8 %35 to i32, !dbg !2594
  %36 = load i8, i8* %delim, align 1, !dbg !2595
  %conv57 = sext i8 %36 to i32, !dbg !2595
  %cmp58 = icmp eq i32 %conv56, %conv57, !dbg !2596
  br i1 %cmp58, label %if.then60, label %if.end78, !dbg !2597

if.then60:                                        ; preds = %while.end55
  %37 = load i8*, i8** %p.addr, align 8, !dbg !2598
  %incdec.ptr61 = getelementptr i8, i8* %37, i32 1, !dbg !2598
  store i8* %incdec.ptr61, i8** %p.addr, align 8, !dbg !2598
  %call62 = call i32 @atoi(i8* %incdec.ptr61) #12, !dbg !2600
  store i32 %call62, i32* %port, align 4, !dbg !2601
  br label %while.cond63, !dbg !2602

while.cond63:                                     ; preds = %while.body75, %if.then60
  %38 = load i8*, i8** %p.addr, align 8, !dbg !2603
  %39 = load i8, i8* %38, align 1, !dbg !2604
  %conv64 = sext i8 %39 to i32, !dbg !2604
  %tobool65 = icmp ne i32 %conv64, 0, !dbg !2604
  br i1 %tobool65, label %land.rhs66, label %land.end74, !dbg !2605

land.rhs66:                                       ; preds = %while.cond63
  %call67 = call i16** @__ctype_b_loc() #14, !dbg !2606
  %40 = load i16*, i16** %call67, align 8, !dbg !2606
  %41 = load i8*, i8** %p.addr, align 8, !dbg !2606
  %42 = load i8, i8* %41, align 1, !dbg !2606
  %conv68 = zext i8 %42 to i32, !dbg !2606
  %idxprom69 = sext i32 %conv68 to i64, !dbg !2606
  %arrayidx70 = getelementptr i16, i16* %40, i64 %idxprom69, !dbg !2606
  %43 = load i16, i16* %arrayidx70, align 2, !dbg !2606
  %conv71 = zext i16 %43 to i32, !dbg !2606
  %and72 = and i32 %conv71, 2048, !dbg !2606
  %tobool73 = icmp ne i32 %and72, 0, !dbg !2605
  br label %land.end74

land.end74:                                       ; preds = %land.rhs66, %while.cond63
  %44 = phi i1 [ false, %while.cond63 ], [ %tobool73, %land.rhs66 ], !dbg !2607
  br i1 %44, label %while.body75, label %while.end77, !dbg !2602

while.body75:                                     ; preds = %land.end74
  %45 = load i8*, i8** %p.addr, align 8, !dbg !2608
  %incdec.ptr76 = getelementptr i8, i8* %45, i32 1, !dbg !2608
  store i8* %incdec.ptr76, i8** %p.addr, align 8, !dbg !2608
  br label %while.cond63, !dbg !2602, !llvm.loop !2610

while.end77:                                      ; preds = %land.end74
  br label %if.end78, !dbg !2612

if.end78:                                         ; preds = %while.end77, %while.end55
  %46 = load i8*, i8** %p.addr, align 8, !dbg !2613
  %47 = load i8, i8* %46, align 1, !dbg !2615
  %conv79 = sext i8 %47 to i32, !dbg !2615
  %48 = load i8, i8* %delim, align 1, !dbg !2616
  %conv80 = sext i8 %48 to i32, !dbg !2616
  %cmp81 = icmp ne i32 %conv79, %conv80, !dbg !2617
  br i1 %cmp81, label %if.then89, label %lor.lhs.false83, !dbg !2618

lor.lhs.false83:                                  ; preds = %if.end78
  %49 = load i32, i32* %port, align 4, !dbg !2619
  %cmp84 = icmp ugt i32 %49, 65535, !dbg !2620
  br i1 %cmp84, label %if.then89, label %lor.lhs.false86, !dbg !2621

lor.lhs.false86:                                  ; preds = %lor.lhs.false83
  %50 = load i32, i32* %port, align 4, !dbg !2622
  %cmp87 = icmp ule i32 %50, 0, !dbg !2623
  br i1 %cmp87, label %if.then89, label %if.else90, !dbg !2624

if.then89:                                        ; preds = %lor.lhs.false86, %lor.lhs.false83, %if.end78
  call void @addreply_noformat(i32 501, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.71, i64 0, i64 0)), !dbg !2625
  br label %if.end98, !dbg !2627

if.else90:                                        ; preds = %lor.lhs.false86
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage* %a, metadata !2628, metadata !DIExpression()), !dbg !2630
  %51 = bitcast %struct.sockaddr_storage* %a to i8*, !dbg !2631
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 128, i1 false), !dbg !2631
  %ss_family = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %a, i32 0, i32 0, !dbg !2632
  store i16 2, i16* %ss_family, align 8, !dbg !2633
  %52 = load i32, i32* %a1, align 4, !dbg !2634
  %shl = shl i32 %52, 24, !dbg !2635
  %53 = load i32, i32* %a2, align 4, !dbg !2636
  %shl91 = shl i32 %53, 16, !dbg !2637
  %or92 = or i32 %shl, %shl91, !dbg !2638
  %54 = load i32, i32* %a3, align 4, !dbg !2639
  %shl93 = shl i32 %54, 8, !dbg !2640
  %or94 = or i32 %or92, %shl93, !dbg !2641
  %55 = load i32, i32* %a4, align 4, !dbg !2642
  %or95 = or i32 %or94, %55, !dbg !2643
  %call96 = call i32 @htonl(i32 %or95) #14, !dbg !2644
  %call97 = call %struct.in_addr* @storage_sin_addr(%struct.sockaddr_storage* %a), !dbg !2645
  %s_addr = getelementptr inbounds %struct.in_addr, %struct.in_addr* %call97, i32 0, i32 0, !dbg !2645
  store i32 %call96, i32* %s_addr, align 4, !dbg !2646
  %56 = load i32, i32* %port, align 4, !dbg !2647
  call void @doport2(%struct.sockaddr_storage* byval(%struct.sockaddr_storage) align 8 %a, i32 %56), !dbg !2648
  br label %if.end98

if.end98:                                         ; preds = %if.else, %if.then12, %if.end20, %if.then45, %if.then89, %if.else90
  ret void, !dbg !2649
}

; Function Attrs: nounwind readonly
declare i32 @atoi(i8*) #5

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() #10

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal void @do_ipv6_port(i8* %p, i8 signext %delim) #0 !dbg !2650 {
entry:
  %p.addr = alloca i8*, align 8
  %delim.addr = alloca i8, align 1
  %deb = alloca i8*, align 8
  %a = alloca %struct.sockaddr_storage, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !2653, metadata !DIExpression()), !dbg !2654
  store i8 %delim, i8* %delim.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %delim.addr, metadata !2655, metadata !DIExpression()), !dbg !2656
  call void @llvm.dbg.declare(metadata i8** %deb, metadata !2657, metadata !DIExpression()), !dbg !2658
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage* %a, metadata !2659, metadata !DIExpression()), !dbg !2660
  %0 = load i8*, i8** %p.addr, align 8, !dbg !2661
  store i8* %0, i8** %deb, align 8, !dbg !2662
  br label %while.cond, !dbg !2663

while.cond:                                       ; preds = %while.body, %entry
  %1 = load i8*, i8** %p.addr, align 8, !dbg !2664
  %2 = load i8, i8* %1, align 1, !dbg !2665
  %conv = sext i8 %2 to i32, !dbg !2665
  %tobool = icmp ne i32 %conv, 0, !dbg !2665
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !2666

land.rhs:                                         ; preds = %while.cond
  %3 = load i8*, i8** %p.addr, align 8, !dbg !2667
  %4 = load i8, i8* %3, align 1, !dbg !2668
  %conv1 = sext i8 %4 to i32, !dbg !2668
  %call = call i8* @strchr(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.239, i64 0, i64 0), i32 %conv1) #12, !dbg !2669
  %cmp = icmp ne i8* %call, null, !dbg !2670
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %5 = phi i1 [ false, %while.cond ], [ %cmp, %land.rhs ], !dbg !2671
  br i1 %5, label %while.body, label %while.end, !dbg !2663

while.body:                                       ; preds = %land.end
  %6 = load i8*, i8** %p.addr, align 8, !dbg !2672
  %incdec.ptr = getelementptr i8, i8* %6, i32 1, !dbg !2672
  store i8* %incdec.ptr, i8** %p.addr, align 8, !dbg !2672
  br label %while.cond, !dbg !2663, !llvm.loop !2674

while.end:                                        ; preds = %land.end
  %7 = load i8*, i8** %p.addr, align 8, !dbg !2676
  %8 = load i8, i8* %7, align 1, !dbg !2678
  %conv3 = sext i8 %8 to i32, !dbg !2678
  %9 = load i8, i8* %delim.addr, align 1, !dbg !2679
  %conv4 = sext i8 %9 to i32, !dbg !2679
  %cmp5 = icmp ne i32 %conv3, %conv4, !dbg !2680
  br i1 %cmp5, label %if.then, label %lor.lhs.false, !dbg !2681

lor.lhs.false:                                    ; preds = %while.end
  %10 = load i8*, i8** %p.addr, align 8, !dbg !2682
  %add.ptr = getelementptr i8, i8* %10, i64 1, !dbg !2683
  %call7 = call i32 @atoi(i8* %add.ptr) #12, !dbg !2684
  %cmp8 = icmp eq i32 %call7, 0, !dbg !2685
  br i1 %cmp8, label %if.then, label %if.end, !dbg !2686

if.then:                                          ; preds = %lor.lhs.false, %while.end
  br label %nope, !dbg !2687

nope:                                             ; preds = %if.then15, %if.then
  call void @llvm.dbg.label(metadata !2688), !dbg !2690
  %11 = load i32, i32* @datafd, align 4, !dbg !2691
  %call10 = call i32 @close(i32 %11), !dbg !2692
  store i32 -1, i32* @datafd, align 4, !dbg !2693
  call void @addreply_noformat(i32 501, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.71, i64 0, i64 0)), !dbg !2694
  br label %return, !dbg !2695

if.end:                                           ; preds = %lor.lhs.false
  %12 = load i8*, i8** %p.addr, align 8, !dbg !2696
  %incdec.ptr11 = getelementptr i8, i8* %12, i32 1, !dbg !2696
  store i8* %incdec.ptr11, i8** %p.addr, align 8, !dbg !2696
  store i8 0, i8* %12, align 1, !dbg !2697
  %13 = load i8*, i8** %deb, align 8, !dbg !2698
  %call12 = call i32 @generic_aton(i8* %13, %struct.sockaddr_storage* %a), !dbg !2700
  %cmp13 = icmp ne i32 %call12, 0, !dbg !2701
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !2702

if.then15:                                        ; preds = %if.end
  br label %nope, !dbg !2703

if.end16:                                         ; preds = %if.end
  %14 = load i8*, i8** %p.addr, align 8, !dbg !2705
  %call17 = call i32 @atoi(i8* %14) #12, !dbg !2706
  call void @doport2(%struct.sockaddr_storage* byval(%struct.sockaddr_storage) align 8 %a, i32 %call17), !dbg !2707
  br label %return, !dbg !2708

return:                                           ; preds = %if.end16, %nope
  ret void, !dbg !2708
}

; Function Attrs: nounwind
declare i32 @__isoc99_sscanf(i8*, i8*, ...) #2

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @doport2(%struct.sockaddr_storage* byval(%struct.sockaddr_storage) align 8 %a, i32 %p) #0 !dbg !2709 {
entry:
  %p.addr = alloca i32, align 4
  %hbuf = alloca [1025 x i8], align 16
  %peerbuf = alloca [1025 x i8], align 16
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage* %a, metadata !2712, metadata !DIExpression()), !dbg !2713
  store i32 %p, i32* %p.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr, metadata !2714, metadata !DIExpression()), !dbg !2715
  %0 = load i8, i8* @loggedin, align 1, !dbg !2716
  %conv = sext i8 %0 to i32, !dbg !2716
  %cmp = icmp eq i32 %conv, 0, !dbg !2718
  br i1 %cmp, label %if.then, label %if.end, !dbg !2719

if.then:                                          ; preds = %entry
  call void @addreply_noformat(i32 530, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.128, i64 0, i64 0)), !dbg !2720
  br label %return, !dbg !2722

if.end:                                           ; preds = %entry
  %1 = load i8, i8* @epsv_all, align 1, !dbg !2723
  %conv2 = sext i8 %1 to i32, !dbg !2723
  %cmp3 = icmp ne i32 %conv2, 0, !dbg !2725
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !2726

if.then5:                                         ; preds = %if.end
  call void @addreply_noformat(i32 501, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.63, i64 0, i64 0)), !dbg !2727
  br label %return, !dbg !2729

if.end6:                                          ; preds = %if.end
  %2 = load i32, i32* @datafd, align 4, !dbg !2730
  %cmp7 = icmp ne i32 %2, -1, !dbg !2732
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !2733

if.then9:                                         ; preds = %if.end6
  %3 = load i32, i32* @datafd, align 4, !dbg !2734
  %call = call i32 @close(i32 %3), !dbg !2736
  store i32 -1, i32* @datafd, align 4, !dbg !2737
  br label %if.end10, !dbg !2738

if.end10:                                         ; preds = %if.then9, %if.end6
  %4 = load i32, i32* %p.addr, align 4, !dbg !2739
  %cmp11 = icmp ult i32 %4, 1024, !dbg !2741
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !2742

if.then13:                                        ; preds = %if.end10
  call void @addreply_noformat(i32 501, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.137, i64 0, i64 0)), !dbg !2743
  br label %return, !dbg !2745

if.end14:                                         ; preds = %if.end10
  %ss_family = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %a, i32 0, i32 0, !dbg !2746
  %5 = load i16, i16* %ss_family, align 8, !dbg !2746
  %conv15 = zext i16 %5 to i32, !dbg !2746
  %cmp16 = icmp eq i32 %conv15, 10, !dbg !2748
  %6 = zext i1 %cmp16 to i64, !dbg !2746
  %cond = select i1 %cmp16, i32 10, i32 2, !dbg !2746
  %call18 = call i32 @doport3(i32 %cond), !dbg !2749
  %cmp19 = icmp ne i32 %call18, 0, !dbg !2750
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !2751

if.then21:                                        ; preds = %if.end14
  br label %return, !dbg !2752

if.end22:                                         ; preds = %if.end14
  %7 = load i32, i32* %p.addr, align 4, !dbg !2754
  %conv23 = trunc i32 %7 to i16, !dbg !2755
  store i16 %conv23, i16* @peerdataport, align 2, !dbg !2756
  %call24 = call i32 @addrcmp(%struct.sockaddr_storage* %a, %struct.sockaddr_storage* @peer), !dbg !2757
  %cmp25 = icmp ne i32 %call24, 0, !dbg !2759
  br i1 %cmp25, label %if.then27, label %if.end65, !dbg !2760

if.then27:                                        ; preds = %if.end22
  call void @llvm.dbg.declare(metadata [1025 x i8]* %hbuf, metadata !2761, metadata !DIExpression()), !dbg !2763
  call void @llvm.dbg.declare(metadata [1025 x i8]* %peerbuf, metadata !2764, metadata !DIExpression()), !dbg !2765
  %8 = bitcast %struct.sockaddr_storage* %a to %struct.sockaddr*, !dbg !2766
  %ss_family28 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %a, i32 0, i32 0, !dbg !2768
  %9 = load i16, i16* %ss_family28, align 8, !dbg !2768
  %conv29 = zext i16 %9 to i32, !dbg !2768
  %cmp30 = icmp eq i32 %conv29, 2, !dbg !2768
  %10 = zext i1 %cmp30 to i64, !dbg !2768
  %cond32 = select i1 %cmp30, i64 16, i64 28, !dbg !2768
  %conv33 = trunc i64 %cond32 to i32, !dbg !2768
  %arraydecay = getelementptr inbounds [1025 x i8], [1025 x i8]* %hbuf, i64 0, i64 0, !dbg !2769
  %call34 = call i32 @getnameinfo(%struct.sockaddr* %8, i32 %conv33, i8* %arraydecay, i32 1025, i8* null, i32 0, i32 1), !dbg !2770
  %cmp35 = icmp ne i32 %call34, 0, !dbg !2771
  br i1 %cmp35, label %if.then46, label %lor.lhs.false, !dbg !2772

lor.lhs.false:                                    ; preds = %if.then27
  %11 = load i16, i16* getelementptr inbounds (%struct.sockaddr_storage, %struct.sockaddr_storage* @peer, i32 0, i32 0), align 8, !dbg !2773
  %conv37 = zext i16 %11 to i32, !dbg !2773
  %cmp38 = icmp eq i32 %conv37, 2, !dbg !2773
  %12 = zext i1 %cmp38 to i64, !dbg !2773
  %cond40 = select i1 %cmp38, i64 16, i64 28, !dbg !2773
  %conv41 = trunc i64 %cond40 to i32, !dbg !2773
  %arraydecay42 = getelementptr inbounds [1025 x i8], [1025 x i8]* %peerbuf, i64 0, i64 0, !dbg !2774
  %call43 = call i32 @getnameinfo(%struct.sockaddr* bitcast (%struct.sockaddr_storage* @peer to %struct.sockaddr*), i32 %conv41, i8* %arraydecay42, i32 1025, i8* null, i32 0, i32 1), !dbg !2775
  %cmp44 = icmp ne i32 %call43, 0, !dbg !2776
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !2777

if.then46:                                        ; preds = %lor.lhs.false, %if.then27
  br label %hu, !dbg !2778

if.end47:                                         ; preds = %lor.lhs.false
  %13 = load i8, i8* @allowfxp, align 1, !dbg !2780
  %conv48 = sext i8 %13 to i32, !dbg !2780
  %cmp49 = icmp eq i32 %conv48, 0, !dbg !2782
  br i1 %cmp49, label %if.then58, label %lor.lhs.false51, !dbg !2783

lor.lhs.false51:                                  ; preds = %if.end47
  %14 = load i8, i8* @allowfxp, align 1, !dbg !2784
  %conv52 = sext i8 %14 to i32, !dbg !2784
  %cmp53 = icmp eq i32 %conv52, 1, !dbg !2785
  br i1 %cmp53, label %land.lhs.true, label %if.else, !dbg !2786

land.lhs.true:                                    ; preds = %lor.lhs.false51
  %15 = load i8, i8* @guest, align 1, !dbg !2787
  %conv55 = sext i8 %15 to i32, !dbg !2787
  %cmp56 = icmp ne i32 %conv55, 0, !dbg !2788
  br i1 %cmp56, label %if.then58, label %if.else, !dbg !2789

if.then58:                                        ; preds = %land.lhs.true, %if.end47
  br label %hu, !dbg !2790

hu:                                               ; preds = %if.then58, %if.then46
  call void @llvm.dbg.label(metadata !2791), !dbg !2793
  %16 = load i32, i32* @datafd, align 4, !dbg !2794
  %call59 = call i32 @close(i32 %16), !dbg !2795
  store i32 -1, i32* @datafd, align 4, !dbg !2796
  %arraydecay60 = getelementptr inbounds [1025 x i8], [1025 x i8]* %hbuf, i64 0, i64 0, !dbg !2797
  %arraydecay61 = getelementptr inbounds [1025 x i8], [1025 x i8]* %peerbuf, i64 0, i64 0, !dbg !2798
  call void (i32, i8*, ...) @addreply(i32 500, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.138, i64 0, i64 0), i8* %arraydecay60, i8* %arraydecay61), !dbg !2799
  br label %return, !dbg !2800

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false51
  %arraydecay62 = getelementptr inbounds [1025 x i8], [1025 x i8]* %peerbuf, i64 0, i64 0, !dbg !2801
  %arraydecay63 = getelementptr inbounds [1025 x i8], [1025 x i8]* %hbuf, i64 0, i64 0, !dbg !2803
  call void (i32, i8*, ...) @addreply(i32 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.139, i64 0, i64 0), i8* %arraydecay62, i8* %arraydecay63), !dbg !2804
  %17 = bitcast %struct.sockaddr_storage* %a to i8*, !dbg !2805
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%struct.sockaddr_storage* @peer to i8*), i8* align 8 %17, i64 128, i1 false), !dbg !2805
  br label %if.end64

if.end64:                                         ; preds = %if.else
  br label %if.end65, !dbg !2806

if.end65:                                         ; preds = %if.end64, %if.end22
  store i8 0, i8* @passive, align 1, !dbg !2807
  call void @addreply_noformat(i32 200, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.140, i64 0, i64 0)), !dbg !2808
  br label %return, !dbg !2809

return:                                           ; preds = %if.end65, %hu, %if.then21, %if.then13, %if.then5, %if.then
  ret void, !dbg !2810
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @doport3(i32 %protocol) #0 !dbg !728 {
entry:
  %retval = alloca i32, align 4
  %protocol.addr = alloca i32, align 4
  %dataconn = alloca %struct.sockaddr_storage, align 8
  %portlistpnt = alloca i16*, align 8
  %on = alloca i32, align 4
  %agg.tmp = alloca %union.__SOCKADDR_ARG, align 8
  store i32 %protocol, i32* %protocol.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %protocol.addr, metadata !2811, metadata !DIExpression()), !dbg !2812
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage* %dataconn, metadata !2813, metadata !DIExpression()), !dbg !2814
  call void @llvm.dbg.declare(metadata i16** %portlistpnt, metadata !2815, metadata !DIExpression()), !dbg !2817
  store i16* getelementptr inbounds ([10 x i16], [10 x i16]* @doport3.portlist, i64 0, i64 0), i16** %portlistpnt, align 8, !dbg !2817
  call void @llvm.dbg.declare(metadata i32* %on, metadata !2818, metadata !DIExpression()), !dbg !2819
  call void @disablesignals(), !dbg !2820
  %call = call i32 @seteuid(i32 0) #7, !dbg !2821
  %0 = load i32, i32* %protocol.addr, align 4, !dbg !2822
  %call1 = call i32 @socket(i32 %0, i32 1, i32 6) #7, !dbg !2824
  store i32 %call1, i32* @datafd, align 4, !dbg !2825
  %cmp = icmp eq i32 %call1, -1, !dbg !2826
  br i1 %cmp, label %if.then, label %if.end6, !dbg !2827

if.then:                                          ; preds = %entry
  br label %data_socket_error, !dbg !2828

data_socket_error:                                ; preds = %if.then29, %if.then
  call void @llvm.dbg.label(metadata !2829), !dbg !2831
  %1 = load i32, i32* getelementptr inbounds (%struct.AuthResult_, %struct.AuthResult_* @authresult, i32 0, i32 1), align 4, !dbg !2832
  %call2 = call i32 @seteuid(i32 %1) #7, !dbg !2834
  %cmp3 = icmp ne i32 %call2, 0, !dbg !2835
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !2836

if.then4:                                         ; preds = %data_socket_error
  call void @_EXIT(i32 1) #11, !dbg !2837
  unreachable, !dbg !2837

if.end:                                           ; preds = %data_socket_error
  call void @enablesignals(), !dbg !2839
  %2 = load i32, i32* @datafd, align 4, !dbg !2840
  %call5 = call i32 @close(i32 %2), !dbg !2841
  store i32 -1, i32* @datafd, align 4, !dbg !2842
  call void @error(i32 425, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.64, i64 0, i64 0)), !dbg !2843
  store i32 -1, i32* %retval, align 4, !dbg !2844
  br label %return, !dbg !2844

if.end6:                                          ; preds = %entry
  store i32 1, i32* %on, align 4, !dbg !2845
  %3 = load i32, i32* @datafd, align 4, !dbg !2846
  %4 = bitcast i32* %on to i8*, !dbg !2847
  %call7 = call i32 @setsockopt(i32 %3, i32 1, i32 15, i8* %4, i32 4) #7, !dbg !2848
  %5 = bitcast %struct.sockaddr_storage* %dataconn to i8*, !dbg !2849
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 bitcast (%struct.sockaddr_storage* @ctrlconn to i8*), i64 128, i1 false), !dbg !2849
  br label %for.cond, !dbg !2850

for.cond:                                         ; preds = %if.end30, %if.end6
  %ss_family = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %dataconn, i32 0, i32 0, !dbg !2851
  %6 = load i16, i16* %ss_family, align 8, !dbg !2851
  %conv = zext i16 %6 to i32, !dbg !2851
  %cmp8 = icmp eq i32 %conv, 10, !dbg !2856
  br i1 %cmp8, label %if.then10, label %if.else, !dbg !2857

if.then10:                                        ; preds = %for.cond
  %7 = load i16*, i16** %portlistpnt, align 8, !dbg !2858
  %8 = load i16, i16* %7, align 2, !dbg !2860
  %call11 = call zeroext i16 @htons(i16 zeroext %8) #14, !dbg !2861
  %call12 = call i16* @storage_port6(%struct.sockaddr_storage* %dataconn), !dbg !2862
  store i16 %call11, i16* %call12, align 2, !dbg !2863
  br label %if.end15, !dbg !2864

if.else:                                          ; preds = %for.cond
  %9 = load i16*, i16** %portlistpnt, align 8, !dbg !2865
  %10 = load i16, i16* %9, align 2, !dbg !2867
  %call13 = call zeroext i16 @htons(i16 zeroext %10) #14, !dbg !2868
  %call14 = call i16* @storage_port(%struct.sockaddr_storage* %dataconn), !dbg !2869
  store i16 %call13, i16* %call14, align 2, !dbg !2870
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then10
  %11 = load i32, i32* @datafd, align 4, !dbg !2871
  %__sockaddr__ = bitcast %union.__SOCKADDR_ARG* %agg.tmp to %struct.sockaddr**, !dbg !2873
  %12 = bitcast %struct.sockaddr_storage* %dataconn to %struct.sockaddr*, !dbg !2873
  store %struct.sockaddr* %12, %struct.sockaddr** %__sockaddr__, align 8, !dbg !2873
  %ss_family16 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %dataconn, i32 0, i32 0, !dbg !2874
  %13 = load i16, i16* %ss_family16, align 8, !dbg !2874
  %conv17 = zext i16 %13 to i32, !dbg !2874
  %cmp18 = icmp eq i32 %conv17, 2, !dbg !2874
  %14 = zext i1 %cmp18 to i64, !dbg !2874
  %cond = select i1 %cmp18, i64 16, i64 28, !dbg !2874
  %conv20 = trunc i64 %cond to i32, !dbg !2874
  %coerce.dive = getelementptr inbounds %union.__SOCKADDR_ARG, %union.__SOCKADDR_ARG* %agg.tmp, i32 0, i32 0, !dbg !2875
  %15 = load %struct.sockaddr*, %struct.sockaddr** %coerce.dive, align 8, !dbg !2875
  %call21 = call i32 @bind(i32 %11, %struct.sockaddr* %15, i32 %conv20) #7, !dbg !2875
  %cmp22 = icmp eq i32 %call21, 0, !dbg !2876
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !2877

if.then24:                                        ; preds = %if.end15
  br label %for.end, !dbg !2878

if.end25:                                         ; preds = %if.end15
  %16 = load i16*, i16** %portlistpnt, align 8, !dbg !2880
  %17 = load i16, i16* %16, align 2, !dbg !2882
  %conv26 = zext i16 %17 to i32, !dbg !2882
  %cmp27 = icmp eq i32 %conv26, 0, !dbg !2883
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !2884

if.then29:                                        ; preds = %if.end25
  br label %data_socket_error, !dbg !2885

if.end30:                                         ; preds = %if.end25
  %18 = load i16*, i16** %portlistpnt, align 8, !dbg !2887
  %incdec.ptr = getelementptr i16, i16* %18, i32 1, !dbg !2887
  store i16* %incdec.ptr, i16** %portlistpnt, align 8, !dbg !2887
  br label %for.cond, !dbg !2888, !llvm.loop !2889

for.end:                                          ; preds = %if.then24
  %19 = load i32, i32* getelementptr inbounds (%struct.AuthResult_, %struct.AuthResult_* @authresult, i32 0, i32 1), align 4, !dbg !2892
  %call31 = call i32 @seteuid(i32 %19) #7, !dbg !2894
  %cmp32 = icmp ne i32 %call31, 0, !dbg !2895
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !2896

if.then34:                                        ; preds = %for.end
  call void @_EXIT(i32 1) #11, !dbg !2897
  unreachable, !dbg !2897

if.end35:                                         ; preds = %for.end
  call void @enablesignals(), !dbg !2899
  store i32 0, i32* %retval, align 4, !dbg !2900
  br label %return, !dbg !2900

return:                                           ; preds = %if.end35, %if.end
  %20 = load i32, i32* %retval, align 4, !dbg !2901
  ret i32 %20, !dbg !2901
}

; Function Attrs: nounwind
declare i32 @seteuid(i32) #2

; Function Attrs: nounwind
declare i32 @socket(i32, i32, i32) #2

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal void @enablesignals() #0 !dbg !2902 {
entry:
  %call = call i32 @sigprocmask(i32 2, %struct.__sigset_t* @old_sigmask, %struct.__sigset_t* null) #7, !dbg !2903
  %cmp = icmp slt i32 %call, 0, !dbg !2905
  br i1 %cmp, label %if.then, label %if.end, !dbg !2906

if.then:                                          ; preds = %entry
  call void @_EXIT(i32 1) #11, !dbg !2907
  unreachable, !dbg !2907

if.end:                                           ; preds = %entry
  ret void, !dbg !2909
}

; Function Attrs: nounwind
declare i32 @bind(i32, %struct.sockaddr*, i32) #2

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @generic_aton(i8* %src, %struct.sockaddr_storage* %a) #0 !dbg !2910 {
entry:
  %retval = alloca i32, align 4
  %src.addr = alloca i8*, align 8
  %a.addr = alloca %struct.sockaddr_storage*, align 8
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !2913, metadata !DIExpression()), !dbg !2914
  store %struct.sockaddr_storage* %a, %struct.sockaddr_storage** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage** %a.addr, metadata !2915, metadata !DIExpression()), !dbg !2916
  %0 = load i8*, i8** %src.addr, align 8, !dbg !2917
  %1 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %a.addr, align 8, !dbg !2919
  %call = call %struct.in6_addr* @storage_sin_addr6(%struct.sockaddr_storage* %1), !dbg !2919
  %__in6_u = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %call, i32 0, i32 0, !dbg !2919
  %__u6_addr8 = bitcast %union.anon* %__in6_u to [16 x i8]*, !dbg !2919
  %2 = bitcast [16 x i8]* %__u6_addr8 to i8*, !dbg !2920
  %call1 = call i32 @inet_pton(i32 10, i8* %0, i8* %2) #7, !dbg !2921
  %cmp = icmp sgt i32 %call1, 0, !dbg !2922
  br i1 %cmp, label %if.then, label %if.end, !dbg !2923

if.then:                                          ; preds = %entry
  %3 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %a.addr, align 8, !dbg !2924
  %ss_family = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %3, i32 0, i32 0, !dbg !2924
  store i16 10, i16* %ss_family, align 8, !dbg !2926
  store i32 0, i32* %retval, align 4, !dbg !2927
  br label %return, !dbg !2927

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %src.addr, align 8, !dbg !2928
  %5 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %a.addr, align 8, !dbg !2930
  %call2 = call %struct.in_addr* @storage_sin_addr(%struct.sockaddr_storage* %5), !dbg !2930
  %s_addr = getelementptr inbounds %struct.in_addr, %struct.in_addr* %call2, i32 0, i32 0, !dbg !2930
  %6 = bitcast i32* %s_addr to i8*, !dbg !2931
  %call3 = call i32 @inet_pton(i32 2, i8* %4, i8* %6) #7, !dbg !2932
  %cmp4 = icmp sgt i32 %call3, 0, !dbg !2933
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !2934

if.then5:                                         ; preds = %if.end
  %7 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %a.addr, align 8, !dbg !2935
  %ss_family6 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %7, i32 0, i32 0, !dbg !2935
  store i16 2, i16* %ss_family6, align 8, !dbg !2937
  store i32 0, i32* %retval, align 4, !dbg !2938
  br label %return, !dbg !2938

if.end7:                                          ; preds = %if.end
  %8 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %a.addr, align 8, !dbg !2939
  %9 = bitcast %struct.sockaddr_storage* %8 to i8*, !dbg !2940
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 128, i1 false), !dbg !2940
  store i32 -1, i32* %retval, align 4, !dbg !2941
  br label %return, !dbg !2941

return:                                           ; preds = %if.end7, %if.then5, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !2942
  ret i32 %10, !dbg !2942
}

; Function Attrs: nounwind
declare i32 @inet_pton(i32, i8*, i8*) #2

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @stripctrl(i8* %buf, i64 %len) #0 !dbg !2943 {
entry:
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !2946, metadata !DIExpression()), !dbg !2947
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !2948, metadata !DIExpression()), !dbg !2949
  %0 = load i64, i64* %len.addr, align 8, !dbg !2950
  %cmp = icmp ule i64 %0, 0, !dbg !2952
  br i1 %cmp, label %if.then, label %if.end, !dbg !2953

if.then:                                          ; preds = %entry
  br label %do.end, !dbg !2954

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !2956

do.body:                                          ; preds = %do.cond, %if.end
  %1 = load i64, i64* %len.addr, align 8, !dbg !2957
  %dec = add i64 %1, -1, !dbg !2957
  store i64 %dec, i64* %len.addr, align 8, !dbg !2957
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !2959
  %3 = load i64, i64* %len.addr, align 8, !dbg !2959
  %arrayidx = getelementptr i8, i8* %2, i64 %3, !dbg !2959
  %4 = load i8, i8* %arrayidx, align 1, !dbg !2959
  %conv = sext i8 %4 to i32, !dbg !2959
  %cmp1 = icmp eq i32 %conv, 127, !dbg !2959
  br i1 %cmp1, label %land.lhs.true, label %lor.lhs.false, !dbg !2959

lor.lhs.false:                                    ; preds = %do.body
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !2959
  %6 = load i64, i64* %len.addr, align 8, !dbg !2959
  %arrayidx3 = getelementptr i8, i8* %5, i64 %6, !dbg !2959
  %7 = load i8, i8* %arrayidx3, align 1, !dbg !2959
  %conv4 = zext i8 %7 to i32, !dbg !2959
  %cmp5 = icmp ult i32 %conv4, 32, !dbg !2959
  br i1 %cmp5, label %land.lhs.true, label %if.end18, !dbg !2961

land.lhs.true:                                    ; preds = %lor.lhs.false, %do.body
  %8 = load i8*, i8** %buf.addr, align 8, !dbg !2962
  %9 = load i64, i64* %len.addr, align 8, !dbg !2963
  %arrayidx7 = getelementptr i8, i8* %8, i64 %9, !dbg !2962
  %10 = load i8, i8* %arrayidx7, align 1, !dbg !2962
  %conv8 = sext i8 %10 to i32, !dbg !2962
  %cmp9 = icmp ne i32 %conv8, 0, !dbg !2964
  br i1 %cmp9, label %land.lhs.true11, label %if.end18, !dbg !2965

land.lhs.true11:                                  ; preds = %land.lhs.true
  %11 = load i8*, i8** %buf.addr, align 8, !dbg !2966
  %12 = load i64, i64* %len.addr, align 8, !dbg !2967
  %arrayidx12 = getelementptr i8, i8* %11, i64 %12, !dbg !2966
  %13 = load i8, i8* %arrayidx12, align 1, !dbg !2966
  %conv13 = sext i8 %13 to i32, !dbg !2966
  %cmp14 = icmp ne i32 %conv13, 10, !dbg !2968
  br i1 %cmp14, label %if.then16, label %if.end18, !dbg !2969

if.then16:                                        ; preds = %land.lhs.true11
  %14 = load i8*, i8** %buf.addr, align 8, !dbg !2970
  %15 = load i64, i64* %len.addr, align 8, !dbg !2972
  %arrayidx17 = getelementptr i8, i8* %14, i64 %15, !dbg !2970
  store i8 95, i8* %arrayidx17, align 1, !dbg !2973
  br label %if.end18, !dbg !2974

if.end18:                                         ; preds = %if.then16, %land.lhs.true11, %land.lhs.true, %lor.lhs.false
  br label %do.cond, !dbg !2975

do.cond:                                          ; preds = %if.end18
  %16 = load i64, i64* %len.addr, align 8, !dbg !2976
  %cmp19 = icmp ne i64 %16, 0, !dbg !2977
  br i1 %cmp19, label %do.body, label %do.end, !dbg !2975, !llvm.loop !2978

do.end:                                           ; preds = %if.then, %do.cond
  ret void, !dbg !2980
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @dobanner(i32 %type) #0 !dbg !2981 {
entry:
  %type.addr = alloca i32, align 4
  %buffer = alloca [512 x i8], align 16
  %msg = alloca %struct._IO_FILE*, align 8
  %buflen = alloca i64, align 8
  %nblines = alloca i32, align 4
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !2982, metadata !DIExpression()), !dbg !2983
  call void @llvm.dbg.declare(metadata [512 x i8]* %buffer, metadata !2984, metadata !DIExpression()), !dbg !2986
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %msg, metadata !2987, metadata !DIExpression()), !dbg !3036
  call void @llvm.dbg.declare(metadata i64* %buflen, metadata !3037, metadata !DIExpression()), !dbg !3038
  call void @llvm.dbg.declare(metadata i32* %nblines, metadata !3039, metadata !DIExpression()), !dbg !3040
  store i32 100, i32* %nblines, align 4, !dbg !3040
  %0 = load i32, i32* %type.addr, align 4, !dbg !3041
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ], !dbg !3042

sw.bb:                                            ; preds = %entry
  %call = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.77, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.78, i64 0, i64 0)), !dbg !3043
  store %struct._IO_FILE* %call, %struct._IO_FILE** %msg, align 8, !dbg !3046
  %cmp = icmp eq %struct._IO_FILE* %call, null, !dbg !3047
  br i1 %cmp, label %if.then, label %if.end, !dbg !3048

if.then:                                          ; preds = %sw.bb
  br label %return, !dbg !3049

if.end:                                           ; preds = %sw.bb
  br label %sw.epilog, !dbg !3051

sw.bb1:                                           ; preds = %entry
  %call2 = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.79, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.78, i64 0, i64 0)), !dbg !3052
  store %struct._IO_FILE* %call2, %struct._IO_FILE** %msg, align 8, !dbg !3054
  %cmp3 = icmp eq %struct._IO_FILE* %call2, null, !dbg !3055
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !3056

if.then4:                                         ; preds = %sw.bb1
  br label %return, !dbg !3057

if.end5:                                          ; preds = %sw.bb1
  br label %sw.epilog, !dbg !3059

sw.default:                                       ; preds = %entry
  br label %return, !dbg !3060

sw.epilog:                                        ; preds = %if.end5, %if.end
  br label %while.cond, !dbg !3061

while.cond:                                       ; preds = %if.end29, %sw.epilog
  %arraydecay = getelementptr inbounds [512 x i8], [512 x i8]* %buffer, i64 0, i64 0, !dbg !3062
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %msg, align 8, !dbg !3063
  %call6 = call i8* @fgets(i8* %arraydecay, i32 512, %struct._IO_FILE* %1), !dbg !3064
  %cmp7 = icmp ne i8* %call6, null, !dbg !3065
  br i1 %cmp7, label %land.rhs, label %land.end, !dbg !3066

land.rhs:                                         ; preds = %while.cond
  %2 = load i32, i32* %nblines, align 4, !dbg !3067
  %cmp8 = icmp ugt i32 %2, 0, !dbg !3068
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %3 = phi i1 [ false, %while.cond ], [ %cmp8, %land.rhs ], !dbg !3069
  br i1 %3, label %while.body, label %while.end31, !dbg !3061

while.body:                                       ; preds = %land.end
  %4 = load i32, i32* %nblines, align 4, !dbg !3070
  %dec = add i32 %4, -1, !dbg !3070
  store i32 %dec, i32* %nblines, align 4, !dbg !3070
  %arraydecay9 = getelementptr inbounds [512 x i8], [512 x i8]* %buffer, i64 0, i64 0, !dbg !3072
  %call10 = call i64 @strlen(i8* %arraydecay9) #12, !dbg !3074
  store i64 %call10, i64* %buflen, align 8, !dbg !3075
  %cmp11 = icmp ugt i64 %call10, 0, !dbg !3076
  br i1 %cmp11, label %if.then12, label %if.end29, !dbg !3077

if.then12:                                        ; preds = %while.body
  %5 = load i64, i64* %buflen, align 8, !dbg !3078
  %dec13 = add i64 %5, -1, !dbg !3078
  store i64 %dec13, i64* %buflen, align 8, !dbg !3078
  br label %while.cond14, !dbg !3080

while.cond14:                                     ; preds = %if.end26, %if.then12
  %6 = load i64, i64* %buflen, align 8, !dbg !3081
  %arrayidx = getelementptr [512 x i8], [512 x i8]* %buffer, i64 0, i64 %6, !dbg !3082
  %7 = load i8, i8* %arrayidx, align 1, !dbg !3082
  %conv = sext i8 %7 to i32, !dbg !3082
  %cmp15 = icmp eq i32 %conv, 10, !dbg !3083
  br i1 %cmp15, label %lor.end, label %lor.rhs, !dbg !3084

lor.rhs:                                          ; preds = %while.cond14
  %8 = load i64, i64* %buflen, align 8, !dbg !3085
  %arrayidx17 = getelementptr [512 x i8], [512 x i8]* %buffer, i64 0, i64 %8, !dbg !3086
  %9 = load i8, i8* %arrayidx17, align 1, !dbg !3086
  %conv18 = sext i8 %9 to i32, !dbg !3086
  %cmp19 = icmp eq i32 %conv18, 13, !dbg !3087
  br label %lor.end, !dbg !3084

lor.end:                                          ; preds = %lor.rhs, %while.cond14
  %10 = phi i1 [ true, %while.cond14 ], [ %cmp19, %lor.rhs ]
  br i1 %10, label %while.body21, label %while.end, !dbg !3080

while.body21:                                     ; preds = %lor.end
  %11 = load i64, i64* %buflen, align 8, !dbg !3088
  %arrayidx22 = getelementptr [512 x i8], [512 x i8]* %buffer, i64 0, i64 %11, !dbg !3090
  store i8 0, i8* %arrayidx22, align 1, !dbg !3091
  %12 = load i64, i64* %buflen, align 8, !dbg !3092
  %cmp23 = icmp eq i64 %12, 0, !dbg !3094
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !3095

if.then25:                                        ; preds = %while.body21
  br label %while.end, !dbg !3096

if.end26:                                         ; preds = %while.body21
  %13 = load i64, i64* %buflen, align 8, !dbg !3098
  %dec27 = add i64 %13, -1, !dbg !3098
  store i64 %dec27, i64* %buflen, align 8, !dbg !3098
  br label %while.cond14, !dbg !3080, !llvm.loop !3099

while.end:                                        ; preds = %if.then25, %lor.end
  %arraydecay28 = getelementptr inbounds [512 x i8], [512 x i8]* %buffer, i64 0, i64 0, !dbg !3101
  %14 = load i64, i64* %buflen, align 8, !dbg !3102
  call void @stripctrl(i8* %arraydecay28, i64 %14), !dbg !3103
  br label %if.end29, !dbg !3104

if.end29:                                         ; preds = %while.end, %while.body
  %arraydecay30 = getelementptr inbounds [512 x i8], [512 x i8]* %buffer, i64 0, i64 0, !dbg !3105
  call void @addreply_noformat(i32 0, i8* %arraydecay30), !dbg !3106
  br label %while.cond, !dbg !3061, !llvm.loop !3107

while.end31:                                      ; preds = %land.end
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %msg, align 8, !dbg !3109
  %call32 = call i32 @fclose(%struct._IO_FILE* %15), !dbg !3110
  br label %return, !dbg !3111

return:                                           ; preds = %while.end31, %sw.default, %if.then4, %if.then
  ret void, !dbg !3111
}

declare %struct._IO_FILE* @fopen(i8*, i8*) #9

declare i8* @fgets(i8*, i32, %struct._IO_FILE*) #9

declare i32 @fclose(%struct._IO_FILE*) #9

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local i32 @modernformat(i8* %file, i8* %target, i64 %target_size, i8* %prefix) #0 !dbg !3112 {
entry:
  %retval = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %target.addr = alloca i8*, align 8
  %target_size.addr = alloca i64, align 8
  %prefix.addr = alloca i8*, align 8
  %link_target = alloca [4097 x i8], align 16
  %ft = alloca i8*, align 8
  %ftx = alloca i8*, align 8
  %t = alloca %struct.tm*, align 8
  %st = alloca %struct.stat, align 8
  %ret = alloca i32, align 4
  %sts = alloca %struct.stat, align 8
  %sx = alloca i64, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !3115, metadata !DIExpression()), !dbg !3116
  store i8* %target, i8** %target.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %target.addr, metadata !3117, metadata !DIExpression()), !dbg !3118
  store i64 %target_size, i64* %target_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %target_size.addr, metadata !3119, metadata !DIExpression()), !dbg !3120
  store i8* %prefix, i8** %prefix.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %prefix.addr, metadata !3121, metadata !DIExpression()), !dbg !3122
  call void @llvm.dbg.declare(metadata [4097 x i8]* %link_target, metadata !3123, metadata !DIExpression()), !dbg !3124
  call void @llvm.dbg.declare(metadata i8** %ft, metadata !3125, metadata !DIExpression()), !dbg !3126
  call void @llvm.dbg.declare(metadata i8** %ftx, metadata !3127, metadata !DIExpression()), !dbg !3128
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.58, i64 0, i64 0), i8** %ftx, align 8, !dbg !3128
  call void @llvm.dbg.declare(metadata %struct.tm** %t, metadata !3129, metadata !DIExpression()), !dbg !3145
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !3146, metadata !DIExpression()), !dbg !3168
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3169, metadata !DIExpression()), !dbg !3170
  store i32 0, i32* %ret, align 4, !dbg !3170
  %0 = load i8*, i8** %file.addr, align 8, !dbg !3171
  %call = call i32 @lstat(i8* %0, %struct.stat* %st) #7, !dbg !3173
  %cmp = icmp ne i32 %call, 0, !dbg !3174
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3175

lor.lhs.false:                                    ; preds = %entry
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 12, !dbg !3176
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim, i32 0, i32 0, !dbg !3176
  %call1 = call %struct.tm* @gmtime(i64* %tv_sec) #7, !dbg !3177
  store %struct.tm* %call1, %struct.tm** %t, align 8, !dbg !3178
  %tobool = icmp ne %struct.tm* %call1, null, !dbg !3178
  br i1 %tobool, label %if.end, label %if.then, !dbg !3179

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1, i32* %retval, align 4, !dbg !3180
  br label %return, !dbg !3180

if.end:                                           ; preds = %lor.lhs.false
  %1 = load i8, i8* @broken_client_compat, align 1, !dbg !3182
  %conv = sext i8 %1 to i32, !dbg !3182
  %cmp2 = icmp ne i32 %conv, 0, !dbg !3184
  br i1 %cmp2, label %land.lhs.true, label %if.end17, !dbg !3185

land.lhs.true:                                    ; preds = %if.end
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !3186
  %2 = load i32, i32* %st_mode, align 8, !dbg !3186
  %and = and i32 %2, 61440, !dbg !3186
  %cmp4 = icmp eq i32 %and, 40960, !dbg !3186
  br i1 %cmp4, label %if.then6, label %if.end17, !dbg !3187

if.then6:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.stat* %sts, metadata !3188, metadata !DIExpression()), !dbg !3190
  %3 = load i8*, i8** %file.addr, align 8, !dbg !3191
  %call7 = call i32 @stat(i8* %3, %struct.stat* %sts) #7, !dbg !3193
  %cmp8 = icmp eq i32 %call7, 0, !dbg !3194
  br i1 %cmp8, label %land.lhs.true10, label %if.end16, !dbg !3195

land.lhs.true10:                                  ; preds = %if.then6
  %st_mode11 = getelementptr inbounds %struct.stat, %struct.stat* %sts, i32 0, i32 3, !dbg !3196
  %4 = load i32, i32* %st_mode11, align 8, !dbg !3196
  %and12 = and i32 %4, 61440, !dbg !3196
  %cmp13 = icmp eq i32 %and12, 40960, !dbg !3196
  br i1 %cmp13, label %if.end16, label %if.then15, !dbg !3197

if.then15:                                        ; preds = %land.lhs.true10
  %5 = bitcast %struct.stat* %st to i8*, !dbg !3198
  %6 = bitcast %struct.stat* %sts to i8*, !dbg !3198
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 144, i1 false), !dbg !3198
  br label %if.end16, !dbg !3200

if.end16:                                         ; preds = %if.then15, %land.lhs.true10, %if.then6
  br label %if.end17, !dbg !3201

if.end17:                                         ; preds = %if.end16, %land.lhs.true, %if.end
  %st_mode18 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !3202
  %7 = load i32, i32* %st_mode18, align 8, !dbg !3202
  %and19 = and i32 %7, 61440, !dbg !3202
  %cmp20 = icmp eq i32 %and19, 32768, !dbg !3202
  br i1 %cmp20, label %if.then22, label %if.else, !dbg !3204

if.then22:                                        ; preds = %if.end17
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.80, i64 0, i64 0), i8** %ft, align 8, !dbg !3205
  br label %if.end83, !dbg !3207

if.else:                                          ; preds = %if.end17
  %st_mode23 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !3208
  %8 = load i32, i32* %st_mode23, align 8, !dbg !3208
  %and24 = and i32 %8, 61440, !dbg !3208
  %cmp25 = icmp eq i32 %and24, 16384, !dbg !3208
  br i1 %cmp25, label %if.then27, label %if.else61, !dbg !3210

if.then27:                                        ; preds = %if.else
  store i32 1, i32* %ret, align 4, !dbg !3211
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.81, i64 0, i64 0), i8** %ft, align 8, !dbg !3213
  %9 = load i8*, i8** %file.addr, align 8, !dbg !3214
  %10 = load i8, i8* %9, align 1, !dbg !3216
  %conv28 = sext i8 %10 to i32, !dbg !3216
  %cmp29 = icmp eq i32 %conv28, 46, !dbg !3217
  br i1 %cmp29, label %if.then31, label %if.else49, !dbg !3218

if.then31:                                        ; preds = %if.then27
  %11 = load i8*, i8** %file.addr, align 8, !dbg !3219
  %arrayidx = getelementptr i8, i8* %11, i64 1, !dbg !3219
  %12 = load i8, i8* %arrayidx, align 1, !dbg !3219
  %conv32 = sext i8 %12 to i32, !dbg !3219
  %cmp33 = icmp eq i32 %conv32, 46, !dbg !3222
  br i1 %cmp33, label %land.lhs.true35, label %if.else41, !dbg !3223

land.lhs.true35:                                  ; preds = %if.then31
  %13 = load i8*, i8** %file.addr, align 8, !dbg !3224
  %arrayidx36 = getelementptr i8, i8* %13, i64 2, !dbg !3224
  %14 = load i8, i8* %arrayidx36, align 1, !dbg !3224
  %conv37 = sext i8 %14 to i32, !dbg !3224
  %cmp38 = icmp eq i32 %conv37, 0, !dbg !3225
  br i1 %cmp38, label %if.then40, label %if.else41, !dbg !3226

if.then40:                                        ; preds = %land.lhs.true35
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.82, i64 0, i64 0), i8** %ft, align 8, !dbg !3227
  br label %if.end48, !dbg !3229

if.else41:                                        ; preds = %land.lhs.true35, %if.then31
  %15 = load i8*, i8** %file.addr, align 8, !dbg !3230
  %arrayidx42 = getelementptr i8, i8* %15, i64 1, !dbg !3230
  %16 = load i8, i8* %arrayidx42, align 1, !dbg !3230
  %conv43 = sext i8 %16 to i32, !dbg !3230
  %cmp44 = icmp eq i32 %conv43, 0, !dbg !3232
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !3233

if.then46:                                        ; preds = %if.else41
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.83, i64 0, i64 0), i8** %ft, align 8, !dbg !3234
  br label %if.end47, !dbg !3236

if.end47:                                         ; preds = %if.then46, %if.else41
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.then40
  br label %if.end60, !dbg !3237

if.else49:                                        ; preds = %if.then27
  %17 = load i8*, i8** %file.addr, align 8, !dbg !3238
  %18 = load i8, i8* %17, align 1, !dbg !3240
  %conv50 = sext i8 %18 to i32, !dbg !3240
  %cmp51 = icmp eq i32 %conv50, 47, !dbg !3241
  br i1 %cmp51, label %land.lhs.true53, label %if.end59, !dbg !3242

land.lhs.true53:                                  ; preds = %if.else49
  %19 = load i8*, i8** %file.addr, align 8, !dbg !3243
  %arrayidx54 = getelementptr i8, i8* %19, i64 1, !dbg !3243
  %20 = load i8, i8* %arrayidx54, align 1, !dbg !3243
  %conv55 = sext i8 %20 to i32, !dbg !3243
  %cmp56 = icmp eq i32 %conv55, 0, !dbg !3244
  br i1 %cmp56, label %if.then58, label %if.end59, !dbg !3245

if.then58:                                        ; preds = %land.lhs.true53
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.82, i64 0, i64 0), i8** %ft, align 8, !dbg !3246
  br label %if.end59, !dbg !3248

if.end59:                                         ; preds = %if.then58, %land.lhs.true53, %if.else49
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.end48
  br label %if.end82, !dbg !3249

if.else61:                                        ; preds = %if.else
  %st_mode62 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !3250
  %21 = load i32, i32* %st_mode62, align 8, !dbg !3250
  %and63 = and i32 %21, 61440, !dbg !3250
  %cmp64 = icmp eq i32 %and63, 40960, !dbg !3250
  br i1 %cmp64, label %if.then66, label %if.else80, !dbg !3252

if.then66:                                        ; preds = %if.else61
  call void @llvm.dbg.declare(metadata i64* %sx, metadata !3253, metadata !DIExpression()), !dbg !3255
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.84, i64 0, i64 0), i8** %ft, align 8, !dbg !3256
  %22 = load i8*, i8** %file.addr, align 8, !dbg !3257
  %arraydecay = getelementptr inbounds [4097 x i8], [4097 x i8]* %link_target, i64 0, i64 0, !dbg !3259
  %call67 = call i64 @readlink(i8* %22, i8* %arraydecay, i64 4096) #7, !dbg !3260
  store i64 %call67, i64* %sx, align 8, !dbg !3261
  %cmp68 = icmp sgt i64 %call67, 0, !dbg !3262
  br i1 %cmp68, label %if.then70, label %if.end79, !dbg !3263

if.then70:                                        ; preds = %if.then66
  %23 = load i64, i64* %sx, align 8, !dbg !3264
  %arrayidx71 = getelementptr [4097 x i8], [4097 x i8]* %link_target, i64 0, i64 %23, !dbg !3266
  store i8 0, i8* %arrayidx71, align 1, !dbg !3267
  %arraydecay72 = getelementptr inbounds [4097 x i8], [4097 x i8]* %link_target, i64 0, i64 0, !dbg !3268
  %call73 = call i8* @strpbrk(i8* %arraydecay72, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.85, i64 0, i64 0)) #12, !dbg !3270
  %cmp74 = icmp eq i8* %call73, null, !dbg !3271
  br i1 %cmp74, label %if.then76, label %if.end78, !dbg !3272

if.then76:                                        ; preds = %if.then70
  %arraydecay77 = getelementptr inbounds [4097 x i8], [4097 x i8]* %link_target, i64 0, i64 0, !dbg !3273
  store i8* %arraydecay77, i8** %ftx, align 8, !dbg !3275
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.86, i64 0, i64 0), i8** %ft, align 8, !dbg !3276
  br label %if.end78, !dbg !3277

if.end78:                                         ; preds = %if.then76, %if.then70
  br label %if.end79, !dbg !3278

if.end79:                                         ; preds = %if.end78, %if.then66
  br label %if.end81, !dbg !3279

if.else80:                                        ; preds = %if.else61
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.87, i64 0, i64 0), i8** %ft, align 8, !dbg !3280
  br label %if.end81

if.end81:                                         ; preds = %if.else80, %if.end79
  br label %if.end82

if.end82:                                         ; preds = %if.end81, %if.end60
  br label %if.end83

if.end83:                                         ; preds = %if.end82, %if.then22
  %24 = load i8, i8* @guest, align 1, !dbg !3282
  %conv84 = sext i8 %24 to i32, !dbg !3282
  %cmp85 = icmp ne i32 %conv84, 0, !dbg !3284
  br i1 %cmp85, label %if.then87, label %if.else99, !dbg !3285

if.then87:                                        ; preds = %if.end83
  %25 = load i8*, i8** %target.addr, align 8, !dbg !3286
  %26 = load i64, i64* %target_size.addr, align 8, !dbg !3286
  %27 = load i8*, i8** %prefix.addr, align 8, !dbg !3286
  %28 = load i8*, i8** %ft, align 8, !dbg !3286
  %29 = load i8*, i8** %ftx, align 8, !dbg !3286
  %30 = load i32, i32* %ret, align 4, !dbg !3286
  %tobool88 = icmp ne i32 %30, 0, !dbg !3286
  %31 = zext i1 %tobool88 to i64, !dbg !3286
  %cond = select i1 %tobool88, i32 100, i32 101, !dbg !3286
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 8, !dbg !3286
  %32 = load i64, i64* %st_size, align 8, !dbg !3286
  %33 = load %struct.tm*, %struct.tm** %t, align 8, !dbg !3286
  %tm_year = getelementptr inbounds %struct.tm, %struct.tm* %33, i32 0, i32 5, !dbg !3286
  %34 = load i32, i32* %tm_year, align 4, !dbg !3286
  %add = add i32 %34, 1900, !dbg !3286
  %35 = load %struct.tm*, %struct.tm** %t, align 8, !dbg !3286
  %tm_mon = getelementptr inbounds %struct.tm, %struct.tm* %35, i32 0, i32 4, !dbg !3286
  %36 = load i32, i32* %tm_mon, align 8, !dbg !3286
  %add89 = add i32 %36, 1, !dbg !3286
  %37 = load %struct.tm*, %struct.tm** %t, align 8, !dbg !3286
  %tm_mday = getelementptr inbounds %struct.tm, %struct.tm* %37, i32 0, i32 3, !dbg !3286
  %38 = load i32, i32* %tm_mday, align 4, !dbg !3286
  %39 = load %struct.tm*, %struct.tm** %t, align 8, !dbg !3286
  %tm_hour = getelementptr inbounds %struct.tm, %struct.tm* %39, i32 0, i32 2, !dbg !3286
  %40 = load i32, i32* %tm_hour, align 8, !dbg !3286
  %41 = load %struct.tm*, %struct.tm** %t, align 8, !dbg !3286
  %tm_min = getelementptr inbounds %struct.tm, %struct.tm* %41, i32 0, i32 1, !dbg !3286
  %42 = load i32, i32* %tm_min, align 4, !dbg !3286
  %43 = load %struct.tm*, %struct.tm** %t, align 8, !dbg !3286
  %tm_sec = getelementptr inbounds %struct.tm, %struct.tm* %43, i32 0, i32 0, !dbg !3286
  %44 = load i32, i32* %tm_sec, align 8, !dbg !3286
  %st_mode90 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !3286
  %45 = load i32, i32* %st_mode90, align 8, !dbg !3286
  %and91 = and i32 %45, 4095, !dbg !3286
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 0, !dbg !3286
  %46 = load i64, i64* %st_dev, align 8, !dbg !3286
  %conv92 = trunc i64 %46 to i32, !dbg !3286
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 1, !dbg !3286
  %47 = load i64, i64* %st_ino, align 8, !dbg !3286
  %48 = load i8*, i8** %file.addr, align 8, !dbg !3286
  %call93 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %25, i64 %26, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.88, i64 0, i64 0), i8* %27, i8* %28, i8* %29, i32 %cond, i64 %32, i32 %add, i32 %add89, i32 %38, i32 %40, i32 %42, i32 %44, i32 %and91, i32 %conv92, i64 %47, i8* %48) #7, !dbg !3286
  %49 = load i64, i64* %target_size.addr, align 8, !dbg !3286
  %conv94 = trunc i64 %49 to i32, !dbg !3286
  %cmp95 = icmp sge i32 %call93, %conv94, !dbg !3286
  br i1 %cmp95, label %if.then97, label %if.end98, !dbg !3289

if.then97:                                        ; preds = %if.then87
  call void @_EXIT(i32 1) #11, !dbg !3290
  unreachable, !dbg !3290

if.end98:                                         ; preds = %if.then87
  br label %if.end124, !dbg !3292

if.else99:                                        ; preds = %if.end83
  %50 = load i8*, i8** %target.addr, align 8, !dbg !3293
  %51 = load i64, i64* %target_size.addr, align 8, !dbg !3293
  %52 = load i8*, i8** %prefix.addr, align 8, !dbg !3293
  %53 = load i8*, i8** %ft, align 8, !dbg !3293
  %54 = load i32, i32* %ret, align 4, !dbg !3293
  %tobool100 = icmp ne i32 %54, 0, !dbg !3293
  %55 = zext i1 %tobool100 to i64, !dbg !3293
  %cond101 = select i1 %tobool100, i32 100, i32 101, !dbg !3293
  %st_size102 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 8, !dbg !3293
  %56 = load i64, i64* %st_size102, align 8, !dbg !3293
  %57 = load %struct.tm*, %struct.tm** %t, align 8, !dbg !3293
  %tm_year103 = getelementptr inbounds %struct.tm, %struct.tm* %57, i32 0, i32 5, !dbg !3293
  %58 = load i32, i32* %tm_year103, align 4, !dbg !3293
  %add104 = add i32 %58, 1900, !dbg !3293
  %59 = load %struct.tm*, %struct.tm** %t, align 8, !dbg !3293
  %tm_mon105 = getelementptr inbounds %struct.tm, %struct.tm* %59, i32 0, i32 4, !dbg !3293
  %60 = load i32, i32* %tm_mon105, align 8, !dbg !3293
  %add106 = add i32 %60, 1, !dbg !3293
  %61 = load %struct.tm*, %struct.tm** %t, align 8, !dbg !3293
  %tm_mday107 = getelementptr inbounds %struct.tm, %struct.tm* %61, i32 0, i32 3, !dbg !3293
  %62 = load i32, i32* %tm_mday107, align 4, !dbg !3293
  %63 = load %struct.tm*, %struct.tm** %t, align 8, !dbg !3293
  %tm_hour108 = getelementptr inbounds %struct.tm, %struct.tm* %63, i32 0, i32 2, !dbg !3293
  %64 = load i32, i32* %tm_hour108, align 8, !dbg !3293
  %65 = load %struct.tm*, %struct.tm** %t, align 8, !dbg !3293
  %tm_min109 = getelementptr inbounds %struct.tm, %struct.tm* %65, i32 0, i32 1, !dbg !3293
  %66 = load i32, i32* %tm_min109, align 4, !dbg !3293
  %67 = load %struct.tm*, %struct.tm** %t, align 8, !dbg !3293
  %tm_sec110 = getelementptr inbounds %struct.tm, %struct.tm* %67, i32 0, i32 0, !dbg !3293
  %68 = load i32, i32* %tm_sec110, align 8, !dbg !3293
  %st_mode111 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !3293
  %69 = load i32, i32* %st_mode111, align 8, !dbg !3293
  %and112 = and i32 %69, 4095, !dbg !3293
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 4, !dbg !3293
  %70 = load i32, i32* %st_uid, align 4, !dbg !3293
  %conv113 = zext i32 %70 to i64, !dbg !3293
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 5, !dbg !3293
  %71 = load i32, i32* %st_gid, align 8, !dbg !3293
  %conv114 = zext i32 %71 to i64, !dbg !3293
  %st_dev115 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 0, !dbg !3293
  %72 = load i64, i64* %st_dev115, align 8, !dbg !3293
  %conv116 = trunc i64 %72 to i32, !dbg !3293
  %st_ino117 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 1, !dbg !3293
  %73 = load i64, i64* %st_ino117, align 8, !dbg !3293
  %74 = load i8*, i8** %file.addr, align 8, !dbg !3293
  %call118 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %50, i64 %51, i8* getelementptr inbounds ([114 x i8], [114 x i8]* @.str.89, i64 0, i64 0), i8* %52, i8* %53, i32 %cond101, i64 %56, i32 %add104, i32 %add106, i32 %62, i32 %64, i32 %66, i32 %68, i32 %and112, i64 %conv113, i64 %conv114, i32 %conv116, i64 %73, i8* %74) #7, !dbg !3293
  %75 = load i64, i64* %target_size.addr, align 8, !dbg !3293
  %conv119 = trunc i64 %75 to i32, !dbg !3293
  %cmp120 = icmp sge i32 %call118, %conv119, !dbg !3293
  br i1 %cmp120, label %if.then122, label %if.end123, !dbg !3296

if.then122:                                       ; preds = %if.else99
  call void @_EXIT(i32 1) #11, !dbg !3297
  unreachable, !dbg !3297

if.end123:                                        ; preds = %if.else99
  br label %if.end124

if.end124:                                        ; preds = %if.end123, %if.end98
  %76 = load i32, i32* %ret, align 4, !dbg !3299
  store i32 %76, i32* %retval, align 4, !dbg !3300
  br label %return, !dbg !3300

return:                                           ; preds = %if.end124, %if.then
  %77 = load i32, i32* %retval, align 4, !dbg !3301
  ret i32 %77, !dbg !3301
}

; Function Attrs: nounwind
declare i32 @lstat(i8*, %struct.stat*) #2

; Function Attrs: nounwind
declare %struct.tm* @gmtime(i64*) #2

; Function Attrs: nounwind
declare i32 @stat(i8*, %struct.stat*) #2

; Function Attrs: nounwind
declare i64 @readlink(i8*, i8*, i64) #2

; Function Attrs: nounwind readonly
declare i8* @strpbrk(i8*, i8*) #5

; Function Attrs: nounwind
declare i32 @snprintf(i8*, i64, i8*, ...) #2

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @domlst(i8* %file) #0 !dbg !3302 {
entry:
  %file.addr = alloca i8*, align 8
  %line = alloca [4352 x i8], align 16
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !3303, metadata !DIExpression()), !dbg !3304
  call void @llvm.dbg.declare(metadata [4352 x i8]* %line, metadata !3305, metadata !DIExpression()), !dbg !3309
  %0 = bitcast [4352 x i8]* %line to i8*, !dbg !3309
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 getelementptr inbounds ([4352 x i8], [4352 x i8]* @__const.domlst.line, i32 0, i32 0), i64 4352, i1 false), !dbg !3309
  %1 = load i8*, i8** %file.addr, align 8, !dbg !3310
  %arraydecay = getelementptr inbounds [4352 x i8], [4352 x i8]* %line, i64 0, i64 0, !dbg !3312
  %add.ptr = getelementptr i8, i8* %arraydecay, i64 7, !dbg !3313
  %call = call i32 @modernformat(i8* %1, i8* %add.ptr, i64 4345, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.90, i64 0, i64 0)), !dbg !3314
  %cmp = icmp slt i32 %call, 0, !dbg !3315
  br i1 %cmp, label %if.then, label %if.end, !dbg !3316

if.then:                                          ; preds = %entry
  call void @addreply_noformat(i32 550, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.91, i64 0, i64 0)), !dbg !3317
  br label %return, !dbg !3319

if.end:                                           ; preds = %entry
  %arraydecay1 = getelementptr inbounds [4352 x i8], [4352 x i8]* %line, i64 0, i64 0, !dbg !3320
  call void @addreply_noformat(i32 0, i8* %arraydecay1), !dbg !3321
  call void @addreply_noformat(i32 250, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.92, i64 0, i64 0)), !dbg !3322
  br label %return, !dbg !3323

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !3323
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @donoop() #0 !dbg !3324 {
entry:
  call void @addreply_noformat(i32 200, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.93, i64 0, i64 0)), !dbg !3325
  ret void, !dbg !3326
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @doallo(i64 %size) #0 !dbg !3327 {
entry:
  %size.addr = alloca i64, align 8
  %ret = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !3331, metadata !DIExpression()), !dbg !3332
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3333, metadata !DIExpression()), !dbg !3334
  store i32 -1, i32* %ret, align 4, !dbg !3334
  %0 = load i64, i64* %size.addr, align 8, !dbg !3335
  %cmp = icmp sle i64 %0, 0, !dbg !3337
  br i1 %cmp, label %if.then, label %if.else, !dbg !3338

if.then:                                          ; preds = %entry
  store i32 0, i32* %ret, align 4, !dbg !3339
  br label %if.end4, !dbg !3341

if.else:                                          ; preds = %entry
  %1 = load i64, i64* %size.addr, align 8, !dbg !3342
  %conv = sitofp i64 %1 to double, !dbg !3344
  %call = call i32 @ul_check_free_space(i8* getelementptr inbounds ([4097 x i8], [4097 x i8]* @wd, i64 0, i64 0), double %conv), !dbg !3345
  %cmp1 = icmp ne i32 %call, 0, !dbg !3346
  br i1 %cmp1, label %if.then3, label %if.end, !dbg !3347

if.then3:                                         ; preds = %if.else
  store i32 0, i32* %ret, align 4, !dbg !3348
  br label %if.end, !dbg !3350

if.end:                                           ; preds = %if.then3, %if.else
  br label %if.end4

if.end4:                                          ; preds = %if.end, %if.then
  %2 = load i32, i32* %ret, align 4, !dbg !3351
  %cmp5 = icmp eq i32 %2, 0, !dbg !3353
  br i1 %cmp5, label %if.then7, label %if.else8, !dbg !3354

if.then7:                                         ; preds = %if.end4
  call void @addreply_noformat(i32 200, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.94, i64 0, i64 0)), !dbg !3355
  br label %if.end9, !dbg !3357

if.else8:                                         ; preds = %if.end4
  call void @addreply_noformat(i32 552, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.95, i64 0, i64 0)), !dbg !3358
  br label %if.end9

if.end9:                                          ; preds = %if.else8, %if.then7
  ret void, !dbg !3360
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local i32 @ul_check_free_space(i8* %name, double %min_space) #0 !dbg !3361 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %min_space.addr = alloca double, align 8
  %statfsbuf = alloca %struct.statvfs64, align 8
  %z = alloca i8*, align 8
  %alloca_namedir = alloca i8*, align 8
  %name_len = alloca i64, align 8
  %jam = alloca double, align 8
  %space = alloca double, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3365, metadata !DIExpression()), !dbg !3366
  store double %min_space, double* %min_space.addr, align 8
  call void @llvm.dbg.declare(metadata double* %min_space.addr, metadata !3367, metadata !DIExpression()), !dbg !3368
  call void @llvm.dbg.declare(metadata %struct.statvfs64* %statfsbuf, metadata !3369, metadata !DIExpression()), !dbg !3390
  call void @llvm.dbg.declare(metadata i8** %z, metadata !3391, metadata !DIExpression()), !dbg !3392
  call void @llvm.dbg.declare(metadata i8** %alloca_namedir, metadata !3393, metadata !DIExpression()), !dbg !3394
  call void @llvm.dbg.declare(metadata i64* %name_len, metadata !3395, metadata !DIExpression()), !dbg !3396
  call void @llvm.dbg.declare(metadata double* %jam, metadata !3397, metadata !DIExpression()), !dbg !3398
  call void @llvm.dbg.declare(metadata double* %space, metadata !3399, metadata !DIExpression()), !dbg !3400
  %0 = load double, double* @maxdiskusagepct, align 8, !dbg !3401
  %cmp = fcmp ole double %0, 0.000000e+00, !dbg !3403
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !3404

land.lhs.true:                                    ; preds = %entry
  %1 = load double, double* %min_space.addr, align 8, !dbg !3405
  %cmp1 = fcmp ole double %1, 0.000000e+00, !dbg !3406
  br i1 %cmp1, label %if.then, label %if.end, !dbg !3407

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !3408
  br label %return, !dbg !3408

if.end:                                           ; preds = %land.lhs.true, %entry
  %2 = load i8*, i8** %name.addr, align 8, !dbg !3410
  %call = call i64 @strlen(i8* %2) #12, !dbg !3411
  %add = add i64 %call, 1, !dbg !3412
  store i64 %add, i64* %name_len, align 8, !dbg !3413
  %3 = load i64, i64* %name_len, align 8, !dbg !3414
  %cmp2 = icmp ult i64 %3, 2, !dbg !3416
  br i1 %cmp2, label %if.then4, label %lor.lhs.false, !dbg !3417

lor.lhs.false:                                    ; preds = %if.end
  %4 = load i64, i64* %name_len, align 8, !dbg !3418
  %5 = alloca i8, i64 %4, align 16, !dbg !3418
  store i8* %5, i8** %alloca_namedir, align 8, !dbg !3419
  %cmp3 = icmp eq i8* %5, null, !dbg !3420
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !3421

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  store i32 -1, i32* %retval, align 4, !dbg !3422
  br label %return, !dbg !3422

if.end5:                                          ; preds = %lor.lhs.false
  %6 = load i8*, i8** %alloca_namedir, align 8, !dbg !3424
  %7 = load i8*, i8** %name.addr, align 8, !dbg !3425
  %8 = load i64, i64* %name_len, align 8, !dbg !3426
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %7, i64 %8, i1 false), !dbg !3427
  %9 = load i8*, i8** %alloca_namedir, align 8, !dbg !3428
  %call6 = call i8* @strrchr(i8* %9, i32 47) #12, !dbg !3430
  store i8* %call6, i8** %z, align 8, !dbg !3431
  %cmp7 = icmp ne i8* %call6, null, !dbg !3432
  br i1 %cmp7, label %if.then8, label %if.else, !dbg !3433

if.then8:                                         ; preds = %if.end5
  %10 = load i8*, i8** %z, align 8, !dbg !3434
  %11 = load i8*, i8** %alloca_namedir, align 8, !dbg !3437
  %cmp9 = icmp eq i8* %10, %11, !dbg !3438
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !3439

if.then10:                                        ; preds = %if.then8
  %12 = load i8*, i8** %z, align 8, !dbg !3440
  %incdec.ptr = getelementptr i8, i8* %12, i32 1, !dbg !3440
  store i8* %incdec.ptr, i8** %z, align 8, !dbg !3440
  store i8 46, i8* %12, align 1, !dbg !3442
  br label %if.end11, !dbg !3443

if.end11:                                         ; preds = %if.then10, %if.then8
  %13 = load i8*, i8** %z, align 8, !dbg !3444
  store i8 0, i8* %13, align 1, !dbg !3445
  br label %if.end13, !dbg !3446

if.else:                                          ; preds = %if.end5
  %14 = load i8*, i8** %alloca_namedir, align 8, !dbg !3447
  %arrayidx = getelementptr i8, i8* %14, i64 0, !dbg !3447
  store i8 46, i8* %arrayidx, align 1, !dbg !3449
  %15 = load i8*, i8** %alloca_namedir, align 8, !dbg !3450
  %arrayidx12 = getelementptr i8, i8* %15, i64 1, !dbg !3450
  store i8 0, i8* %arrayidx12, align 1, !dbg !3451
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.end11
  %16 = load i8*, i8** %alloca_namedir, align 8, !dbg !3452
  %call14 = call i32 @statvfs64(i8* %16, %struct.statvfs64* %statfsbuf) #7, !dbg !3452
  %cmp15 = icmp ne i32 %call14, 0, !dbg !3454
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !3455

if.then16:                                        ; preds = %if.end13
  br label %do.body, !dbg !3456

do.body:                                          ; preds = %if.then16
  br label %do.end, !dbg !3458

do.end:                                           ; preds = %do.body
  store i32 -1, i32* %retval, align 4, !dbg !3460
  br label %return, !dbg !3460

if.end17:                                         ; preds = %if.end13
  br label %do.body18, !dbg !3461

do.body18:                                        ; preds = %if.end17
  br label %do.end19, !dbg !3462

do.end19:                                         ; preds = %do.body18
  %f_blocks = getelementptr inbounds %struct.statvfs64, %struct.statvfs64* %statfsbuf, i32 0, i32 2, !dbg !3464
  %17 = load i64, i64* %f_blocks, align 8, !dbg !3464
  %conv = uitofp i64 %17 to double, !dbg !3466
  %cmp20 = fcmp ole double %conv, 0.000000e+00, !dbg !3467
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !3468

if.then22:                                        ; preds = %do.end19
  store i32 1, i32* %retval, align 4, !dbg !3469
  br label %return, !dbg !3469

if.end23:                                         ; preds = %do.end19
  %18 = load double, double* %min_space.addr, align 8, !dbg !3471
  %cmp24 = fcmp oge double %18, 0.000000e+00, !dbg !3473
  br i1 %cmp24, label %if.then26, label %if.end33, !dbg !3474

if.then26:                                        ; preds = %if.end23
  %f_bavail = getelementptr inbounds %struct.statvfs64, %struct.statvfs64* %statfsbuf, i32 0, i32 4, !dbg !3475
  %19 = load i64, i64* %f_bavail, align 8, !dbg !3475
  %conv27 = uitofp i64 %19 to double, !dbg !3477
  %f_frsize = getelementptr inbounds %struct.statvfs64, %struct.statvfs64* %statfsbuf, i32 0, i32 1, !dbg !3478
  %20 = load i64, i64* %f_frsize, align 8, !dbg !3478
  %conv28 = uitofp i64 %20 to double, !dbg !3479
  %mul = fmul double %conv27, %conv28, !dbg !3480
  store double %mul, double* %space, align 8, !dbg !3481
  %21 = load double, double* %space, align 8, !dbg !3482
  %22 = load double, double* %min_space.addr, align 8, !dbg !3484
  %cmp29 = fcmp olt double %21, %22, !dbg !3485
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !3486

if.then31:                                        ; preds = %if.then26
  store i32 0, i32* %retval, align 4, !dbg !3487
  br label %return, !dbg !3487

if.end32:                                         ; preds = %if.then26
  br label %if.end33, !dbg !3489

if.end33:                                         ; preds = %if.end32, %if.end23
  %f_bavail34 = getelementptr inbounds %struct.statvfs64, %struct.statvfs64* %statfsbuf, i32 0, i32 4, !dbg !3490
  %23 = load i64, i64* %f_bavail34, align 8, !dbg !3490
  %conv35 = uitofp i64 %23 to double, !dbg !3491
  %f_blocks36 = getelementptr inbounds %struct.statvfs64, %struct.statvfs64* %statfsbuf, i32 0, i32 2, !dbg !3492
  %24 = load i64, i64* %f_blocks36, align 8, !dbg !3492
  %conv37 = uitofp i64 %24 to double, !dbg !3493
  %div = fdiv double %conv35, %conv37, !dbg !3494
  store double %div, double* %jam, align 8, !dbg !3495
  %25 = load double, double* %jam, align 8, !dbg !3496
  %26 = load double, double* @maxdiskusagepct, align 8, !dbg !3498
  %cmp38 = fcmp oge double %25, %26, !dbg !3499
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !3500

if.then40:                                        ; preds = %if.end33
  store i32 1, i32* %retval, align 4, !dbg !3501
  br label %return, !dbg !3501

if.end41:                                         ; preds = %if.end33
  store i32 0, i32* %retval, align 4, !dbg !3503
  br label %return, !dbg !3503

return:                                           ; preds = %if.end41, %if.then40, %if.then31, %if.then22, %do.end, %if.then4, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !3504
  ret i32 %27, !dbg !3504
}

; Function Attrs: nounwind
declare i32 @statvfs64(i8*, %struct.statvfs64*) #2

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @dositetime() #0 !dbg !3505 {
entry:
  %tmp = alloca [64 x i8], align 16
  %tm = alloca %struct.tm*, align 8
  %now = alloca i64, align 8
  call void @llvm.dbg.declare(metadata [64 x i8]* %tmp, metadata !3506, metadata !DIExpression()), !dbg !3510
  call void @llvm.dbg.declare(metadata %struct.tm** %tm, metadata !3511, metadata !DIExpression()), !dbg !3514
  call void @llvm.dbg.declare(metadata i64* %now, metadata !3515, metadata !DIExpression()), !dbg !3516
  %call = call i64 @time(i64* null) #7, !dbg !3517
  store i64 %call, i64* %now, align 8, !dbg !3519
  %cmp = icmp eq i64 %call, -1, !dbg !3520
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3521

lor.lhs.false:                                    ; preds = %entry
  %call1 = call %struct.tm* @localtime(i64* %now) #7, !dbg !3522
  store %struct.tm* %call1, %struct.tm** %tm, align 8, !dbg !3523
  %cmp2 = icmp eq %struct.tm* %call1, null, !dbg !3524
  br i1 %cmp2, label %if.then, label %if.end, !dbg !3525

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @addreply_noformat(i32 451, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.96, i64 0, i64 0)), !dbg !3526
  br label %return, !dbg !3528

if.end:                                           ; preds = %lor.lhs.false
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %tmp, i64 0, i64 0, !dbg !3529
  %0 = load %struct.tm*, %struct.tm** %tm, align 8, !dbg !3530
  %call3 = call i64 @strftime(i8* %arraydecay, i64 64, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.97, i64 0, i64 0), %struct.tm* %0) #7, !dbg !3531
  %arraydecay4 = getelementptr inbounds [64 x i8], [64 x i8]* %tmp, i64 0, i64 0, !dbg !3532
  call void @addreply_noformat(i32 211, i8* %arraydecay4), !dbg !3533
  br label %return, !dbg !3534

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !3534
}

; Function Attrs: nounwind
declare i64 @time(i64*) #2

; Function Attrs: nounwind
declare %struct.tm* @localtime(i64*) #2

; Function Attrs: nounwind
declare i64 @strftime(i8*, i64, i8*, %struct.tm*) #2

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @douser(i8* %username) #0 !dbg !3535 {
entry:
  %username.addr = alloca i8*, align 8
  %pw = alloca %struct.passwd*, align 8
  %hd = alloca i8*, align 8
  %rd_len = alloca i64, align 8
  store i8* %username, i8** %username.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %username.addr, metadata !3538, metadata !DIExpression()), !dbg !3539
  call void @llvm.dbg.declare(metadata %struct.passwd** %pw, metadata !3540, metadata !DIExpression()), !dbg !3552
  store %struct.passwd* null, %struct.passwd** %pw, align 8, !dbg !3552
  %0 = load i8, i8* @loggedin, align 1, !dbg !3553
  %tobool = icmp ne i8 %0, 0, !dbg !3553
  br i1 %tobool, label %if.then, label %if.end10, !dbg !3555

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %username.addr, align 8, !dbg !3556
  %tobool1 = icmp ne i8* %1, null, !dbg !3556
  br i1 %tobool1, label %if.then2, label %if.end9, !dbg !3559

if.then2:                                         ; preds = %if.then
  %2 = load i8, i8* @guest, align 1, !dbg !3560
  %tobool3 = icmp ne i8 %2, 0, !dbg !3560
  br i1 %tobool3, label %if.else, label %if.then4, !dbg !3563

if.then4:                                         ; preds = %if.then2
  call void @addreply_noformat(i32 530, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.98, i64 0, i64 0)), !dbg !3564
  br label %if.end8, !dbg !3566

if.else:                                          ; preds = %if.then2
  %3 = load i8, i8* @broken_client_compat, align 1, !dbg !3567
  %conv = sext i8 %3 to i32, !dbg !3567
  %cmp = icmp ne i32 %conv, 0, !dbg !3569
  br i1 %cmp, label %if.then6, label %if.else7, !dbg !3570

if.then6:                                         ; preds = %if.else
  call void @addreply_noformat(i32 331, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.99, i64 0, i64 0)), !dbg !3571
  br label %if.end, !dbg !3573

if.else7:                                         ; preds = %if.else
  call void @addreply_noformat(i32 230, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.100, i64 0, i64 0)), !dbg !3574
  %4 = load i8, i8* @dot_read_anon_ok, align 1, !dbg !3576
  store i8 %4, i8* @dot_read_ok, align 1, !dbg !3577
  store i8 0, i8* @dot_write_ok, align 1, !dbg !3578
  br label %if.end

if.end:                                           ; preds = %if.else7, %if.then6
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then4
  br label %if.end9, !dbg !3579

if.end9:                                          ; preds = %if.end8, %if.then
  br label %if.end156, !dbg !3580

if.end10:                                         ; preds = %entry
  %5 = load i8, i8* @anon_only, align 1, !dbg !3581
  %conv11 = sext i8 %5 to i32, !dbg !3581
  %cmp12 = icmp sle i32 %conv11, 0, !dbg !3583
  br i1 %cmp12, label %land.lhs.true, label %if.else30, !dbg !3584

land.lhs.true:                                    ; preds = %if.end10
  %6 = load i8*, i8** %username.addr, align 8, !dbg !3585
  %cmp14 = icmp ne i8* %6, null, !dbg !3586
  br i1 %cmp14, label %land.lhs.true16, label %if.else30, !dbg !3587

land.lhs.true16:                                  ; preds = %land.lhs.true
  %7 = load i8*, i8** %username.addr, align 8, !dbg !3588
  %8 = load i8, i8* %7, align 1, !dbg !3589
  %conv17 = sext i8 %8 to i32, !dbg !3589
  %cmp18 = icmp ne i32 %conv17, 0, !dbg !3590
  br i1 %cmp18, label %land.lhs.true20, label %if.else30, !dbg !3591

land.lhs.true20:                                  ; preds = %land.lhs.true16
  %9 = load i8, i8* @anon_only, align 1, !dbg !3592
  %conv21 = sext i8 %9 to i32, !dbg !3592
  %cmp22 = icmp slt i32 %conv21, 0, !dbg !3593
  br i1 %cmp22, label %if.then28, label %lor.lhs.false, !dbg !3594

lor.lhs.false:                                    ; preds = %land.lhs.true20
  %10 = load i8*, i8** %username.addr, align 8, !dbg !3595
  %call = call i32 @strcasecmp(i8* %10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i64 0, i64 0)) #12, !dbg !3596
  %tobool24 = icmp ne i32 %call, 0, !dbg !3596
  br i1 %tobool24, label %land.lhs.true25, label %if.else30, !dbg !3597

land.lhs.true25:                                  ; preds = %lor.lhs.false
  %11 = load i8*, i8** %username.addr, align 8, !dbg !3598
  %call26 = call i32 @strcasecmp(i8* %11, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.101, i64 0, i64 0)) #12, !dbg !3599
  %tobool27 = icmp ne i32 %call26, 0, !dbg !3599
  br i1 %tobool27, label %if.then28, label %if.else30, !dbg !3600

if.then28:                                        ; preds = %land.lhs.true25, %land.lhs.true20
  %12 = load i8*, i8** %username.addr, align 8, !dbg !3601
  %call29 = call i8* @strncpy(i8* getelementptr inbounds ([128 x i8], [128 x i8]* @account, i64 0, i64 0), i8* %12, i64 127) #7, !dbg !3603
  store i8 0, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @account, i64 0, i64 127), align 1, !dbg !3604
  call void (i32, i8*, ...) @addreply(i32 331, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.102, i64 0, i64 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @account, i64 0, i64 0)), !dbg !3605
  store i8 0, i8* @loggedin, align 1, !dbg !3606
  br label %if.end151, !dbg !3607

if.else30:                                        ; preds = %land.lhs.true25, %lor.lhs.false, %land.lhs.true16, %land.lhs.true, %if.end10
  %13 = load i8, i8* @anon_only, align 1, !dbg !3608
  %conv31 = sext i8 %13 to i32, !dbg !3608
  %cmp32 = icmp slt i32 %conv31, 0, !dbg !3610
  br i1 %cmp32, label %if.then34, label %if.else40, !dbg !3611

if.then34:                                        ; preds = %if.else30
  %14 = load i8, i8* @broken_client_compat, align 1, !dbg !3612
  %conv35 = sext i8 %14 to i32, !dbg !3612
  %cmp36 = icmp ne i32 %conv35, 0, !dbg !3615
  br i1 %cmp36, label %if.then38, label %if.else39, !dbg !3616

if.then38:                                        ; preds = %if.then34
  %15 = load i8*, i8** %username.addr, align 8, !dbg !3617
  call void (i32, i8*, ...) @addreply(i32 331, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.102, i64 0, i64 0), i8* %15), !dbg !3619
  br label %if.end156, !dbg !3620

if.else39:                                        ; preds = %if.then34
  call void (i32, i32, i8*, ...) @die(i32 530, i32 7, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.103, i64 0, i64 0)) #11, !dbg !3621
  unreachable, !dbg !3621

if.else40:                                        ; preds = %if.else30
  %16 = load i8, i8* @chrooted, align 1, !dbg !3623
  %conv41 = sext i8 %16 to i32, !dbg !3623
  %cmp42 = icmp ne i32 %conv41, 0, !dbg !3626
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !3627

if.then44:                                        ; preds = %if.else40
  call void (i32, i32, i8*, ...) @die(i32 421, i32 7, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.104, i64 0, i64 0)) #11, !dbg !3628
  unreachable, !dbg !3628

if.end45:                                         ; preds = %if.else40
  %call46 = call %struct.passwd* @getpwnam(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i64 0, i64 0)), !dbg !3630
  store %struct.passwd* %call46, %struct.passwd** %pw, align 8, !dbg !3632
  %cmp47 = icmp eq %struct.passwd* %call46, null, !dbg !3633
  br i1 %cmp47, label %land.lhs.true49, label %lor.lhs.false53, !dbg !3634

land.lhs.true49:                                  ; preds = %if.end45
  %call50 = call %struct.passwd* @getpwnam(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.105, i64 0, i64 0)), !dbg !3635
  store %struct.passwd* %call50, %struct.passwd** %pw, align 8, !dbg !3636
  %cmp51 = icmp eq %struct.passwd* %call50, null, !dbg !3637
  br i1 %cmp51, label %if.then77, label %lor.lhs.false53, !dbg !3638

lor.lhs.false53:                                  ; preds = %land.lhs.true49, %if.end45
  %17 = load %struct.passwd*, %struct.passwd** %pw, align 8, !dbg !3639
  %pw_uid = getelementptr inbounds %struct.passwd, %struct.passwd* %17, i32 0, i32 2, !dbg !3640
  %18 = load i32, i32* %pw_uid, align 8, !dbg !3640
  %cmp54 = icmp eq i32 %18, 0, !dbg !3641
  br i1 %cmp54, label %if.then77, label %lor.lhs.false56, !dbg !3642

lor.lhs.false56:                                  ; preds = %lor.lhs.false53
  %19 = load %struct.passwd*, %struct.passwd** %pw, align 8, !dbg !3643
  %pw_gid = getelementptr inbounds %struct.passwd, %struct.passwd* %19, i32 0, i32 3, !dbg !3644
  %20 = load i32, i32* %pw_gid, align 4, !dbg !3644
  %cmp57 = icmp eq i32 %20, 0, !dbg !3645
  br i1 %cmp57, label %if.then77, label %lor.lhs.false59, !dbg !3646

lor.lhs.false59:                                  ; preds = %lor.lhs.false56
  %21 = load %struct.passwd*, %struct.passwd** %pw, align 8, !dbg !3647
  %pw_gid60 = getelementptr inbounds %struct.passwd, %struct.passwd* %21, i32 0, i32 3, !dbg !3648
  %22 = load i32, i32* %pw_gid60, align 4, !dbg !3648
  %call61 = call i32 @doinitsupgroups(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i64 0, i64 0), i32 -1, i32 %22), !dbg !3649
  %cmp62 = icmp ne i32 %call61, 0, !dbg !3650
  br i1 %cmp62, label %land.lhs.true64, label %lor.lhs.false69, !dbg !3651

land.lhs.true64:                                  ; preds = %lor.lhs.false59
  %23 = load %struct.passwd*, %struct.passwd** %pw, align 8, !dbg !3652
  %pw_gid65 = getelementptr inbounds %struct.passwd, %struct.passwd* %23, i32 0, i32 3, !dbg !3653
  %24 = load i32, i32* %pw_gid65, align 4, !dbg !3653
  %call66 = call i32 @doinitsupgroups(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.105, i64 0, i64 0), i32 -1, i32 %24), !dbg !3654
  %cmp67 = icmp ne i32 %call66, 0, !dbg !3655
  br i1 %cmp67, label %if.then77, label %lor.lhs.false69, !dbg !3656

lor.lhs.false69:                                  ; preds = %land.lhs.true64, %lor.lhs.false59
  %25 = load %struct.passwd*, %struct.passwd** %pw, align 8, !dbg !3657
  %pw_gid70 = getelementptr inbounds %struct.passwd, %struct.passwd* %25, i32 0, i32 3, !dbg !3658
  %26 = load i32, i32* %pw_gid70, align 4, !dbg !3658
  %call71 = call i32 @setgid(i32 %26) #7, !dbg !3659
  %tobool72 = icmp ne i32 %call71, 0, !dbg !3659
  br i1 %tobool72, label %if.then77, label %lor.lhs.false73, !dbg !3660

lor.lhs.false73:                                  ; preds = %lor.lhs.false69
  %27 = load %struct.passwd*, %struct.passwd** %pw, align 8, !dbg !3661
  %pw_gid74 = getelementptr inbounds %struct.passwd, %struct.passwd* %27, i32 0, i32 3, !dbg !3662
  %28 = load i32, i32* %pw_gid74, align 4, !dbg !3662
  %call75 = call i32 @setegid(i32 %28) #7, !dbg !3663
  %tobool76 = icmp ne i32 %call75, 0, !dbg !3663
  br i1 %tobool76, label %if.then77, label %if.end78, !dbg !3664

if.then77:                                        ; preds = %lor.lhs.false73, %lor.lhs.false69, %land.lhs.true64, %lor.lhs.false56, %lor.lhs.false53, %land.lhs.true49
  br label %cantsec, !dbg !3665

cantsec:                                          ; preds = %if.then140, %if.then124, %if.then107, %if.then97, %if.then86, %if.then77
  call void @llvm.dbg.label(metadata !3666), !dbg !3668
  call void (i32, i32, i8*, ...) @die(i32 421, i32 3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.106, i64 0, i64 0)) #11, !dbg !3669
  unreachable, !dbg !3669

if.end78:                                         ; preds = %lor.lhs.false73
  call void @llvm.dbg.declare(metadata i8** %hd, metadata !3670, metadata !DIExpression()), !dbg !3672
  call void @llvm.dbg.declare(metadata i64* %rd_len, metadata !3673, metadata !DIExpression()), !dbg !3674
  %29 = load %struct.passwd*, %struct.passwd** %pw, align 8, !dbg !3675
  %pw_dir = getelementptr inbounds %struct.passwd, %struct.passwd* %29, i32 0, i32 5, !dbg !3677
  %30 = load i8*, i8** %pw_dir, align 8, !dbg !3677
  %cmp79 = icmp eq i8* %30, null, !dbg !3678
  br i1 %cmp79, label %if.then86, label %lor.lhs.false81, !dbg !3679

lor.lhs.false81:                                  ; preds = %if.end78
  %31 = load %struct.passwd*, %struct.passwd** %pw, align 8, !dbg !3680
  %pw_dir82 = getelementptr inbounds %struct.passwd, %struct.passwd* %31, i32 0, i32 5, !dbg !3681
  %32 = load i8*, i8** %pw_dir82, align 8, !dbg !3681
  %33 = load i8, i8* %32, align 1, !dbg !3682
  %conv83 = sext i8 %33 to i32, !dbg !3682
  %cmp84 = icmp ne i32 %conv83, 47, !dbg !3683
  br i1 %cmp84, label %if.then86, label %if.end87, !dbg !3684

if.then86:                                        ; preds = %lor.lhs.false81, %if.end78
  br label %cantsec, !dbg !3685

if.end87:                                         ; preds = %lor.lhs.false81
  %34 = load %struct.passwd*, %struct.passwd** %pw, align 8, !dbg !3687
  %pw_dir88 = getelementptr inbounds %struct.passwd, %struct.passwd* %34, i32 0, i32 5, !dbg !3689
  %35 = load i8*, i8** %pw_dir88, align 8, !dbg !3689
  %call89 = call i8* @strstr(i8* %35, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48, i64 0, i64 0)) #12, !dbg !3690
  store i8* %call89, i8** %hd, align 8, !dbg !3691
  %cmp90 = icmp ne i8* %call89, null, !dbg !3692
  br i1 %cmp90, label %if.then92, label %if.else100, !dbg !3693

if.then92:                                        ; preds = %if.end87
  %36 = load i8*, i8** %hd, align 8, !dbg !3694
  %37 = load %struct.passwd*, %struct.passwd** %pw, align 8, !dbg !3696
  %pw_dir93 = getelementptr inbounds %struct.passwd, %struct.passwd* %37, i32 0, i32 5, !dbg !3697
  %38 = load i8*, i8** %pw_dir93, align 8, !dbg !3697
  %sub.ptr.lhs.cast = ptrtoint i8* %36 to i64, !dbg !3698
  %sub.ptr.rhs.cast = ptrtoint i8* %38 to i64, !dbg !3698
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3698
  %add = add i64 %sub.ptr.sub, 2, !dbg !3699
  store i64 %add, i64* %rd_len, align 8, !dbg !3700
  %39 = load i64, i64* %rd_len, align 8, !dbg !3701
  %call94 = call noalias i8* @malloc(i64 %39) #7, !dbg !3703
  store i8* %call94, i8** @root_directory, align 8, !dbg !3704
  %cmp95 = icmp eq i8* %call94, null, !dbg !3705
  br i1 %cmp95, label %if.then97, label %if.end98, !dbg !3706

if.then97:                                        ; preds = %if.then92
  br label %cantsec, !dbg !3707

if.end98:                                         ; preds = %if.then92
  %40 = load i8*, i8** @root_directory, align 8, !dbg !3709
  %41 = load %struct.passwd*, %struct.passwd** %pw, align 8, !dbg !3710
  %pw_dir99 = getelementptr inbounds %struct.passwd, %struct.passwd* %41, i32 0, i32 5, !dbg !3711
  %42 = load i8*, i8** %pw_dir99, align 8, !dbg !3711
  %43 = load i64, i64* %rd_len, align 8, !dbg !3712
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %40, i8* align 1 %42, i64 %43, i1 false), !dbg !3713
  %44 = load i8*, i8** @root_directory, align 8, !dbg !3714
  %45 = load i64, i64* %rd_len, align 8, !dbg !3715
  %sub = sub i64 %45, 1, !dbg !3716
  %arrayidx = getelementptr i8, i8* %44, i64 %sub, !dbg !3714
  store i8 0, i8* %arrayidx, align 1, !dbg !3717
  %46 = load i8*, i8** %hd, align 8, !dbg !3718
  %add.ptr = getelementptr i8, i8* %46, i64 2, !dbg !3718
  store i8* %add.ptr, i8** %hd, align 8, !dbg !3718
  br label %if.end111, !dbg !3719

if.else100:                                       ; preds = %if.end87
  %47 = load %struct.passwd*, %struct.passwd** %pw, align 8, !dbg !3720
  %pw_dir101 = getelementptr inbounds %struct.passwd, %struct.passwd* %47, i32 0, i32 5, !dbg !3722
  %48 = load i8*, i8** %pw_dir101, align 8, !dbg !3722
  %call102 = call i64 @strlen(i8* %48) #12, !dbg !3723
  %add103 = add i64 %call102, 2, !dbg !3724
  store i64 %add103, i64* %rd_len, align 8, !dbg !3725
  %49 = load i64, i64* %rd_len, align 8, !dbg !3726
  %call104 = call noalias i8* @malloc(i64 %49) #7, !dbg !3728
  store i8* %call104, i8** @root_directory, align 8, !dbg !3729
  %cmp105 = icmp eq i8* %call104, null, !dbg !3730
  br i1 %cmp105, label %if.then107, label %if.end108, !dbg !3731

if.then107:                                       ; preds = %if.else100
  br label %cantsec, !dbg !3732

if.end108:                                        ; preds = %if.else100
  %50 = load i8*, i8** @root_directory, align 8, !dbg !3734
  %51 = load i64, i64* %rd_len, align 8, !dbg !3735
  %52 = load %struct.passwd*, %struct.passwd** %pw, align 8, !dbg !3736
  %pw_dir109 = getelementptr inbounds %struct.passwd, %struct.passwd* %52, i32 0, i32 5, !dbg !3737
  %53 = load i8*, i8** %pw_dir109, align 8, !dbg !3737
  %call110 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %50, i64 %51, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.107, i64 0, i64 0), i8* %53) #7, !dbg !3738
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.108, i64 0, i64 0), i8** %hd, align 8, !dbg !3739
  br label %if.end111

if.end111:                                        ; preds = %if.end108, %if.end98
  %54 = load i8*, i8** @root_directory, align 8, !dbg !3740
  %call112 = call i32 @chdir(i8* %54) #7, !dbg !3742
  %tobool113 = icmp ne i32 %call112, 0, !dbg !3742
  br i1 %tobool113, label %if.then120, label %lor.lhs.false114, !dbg !3743

lor.lhs.false114:                                 ; preds = %if.end111
  %55 = load i8*, i8** @root_directory, align 8, !dbg !3744
  %call115 = call i32 @chroot(i8* %55) #7, !dbg !3745
  %tobool116 = icmp ne i32 %call115, 0, !dbg !3745
  br i1 %tobool116, label %if.then120, label %lor.lhs.false117, !dbg !3746

lor.lhs.false117:                                 ; preds = %lor.lhs.false114
  %56 = load i8*, i8** %hd, align 8, !dbg !3747
  %call118 = call i32 @chdir(i8* %56) #7, !dbg !3748
  %tobool119 = icmp ne i32 %call118, 0, !dbg !3748
  br i1 %tobool119, label %if.then120, label %if.end121, !dbg !3749

if.then120:                                       ; preds = %lor.lhs.false117, %lor.lhs.false114, %if.end111
  %57 = load i8*, i8** @root_directory, align 8, !dbg !3750
  %58 = load i8*, i8** %hd, align 8, !dbg !3752
  call void (i32, i32, i8*, ...) @die(i32 421, i32 3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.109, i64 0, i64 0), i8* %57, i8* %58) #11, !dbg !3753
  unreachable, !dbg !3753

if.end121:                                        ; preds = %lor.lhs.false117
  call void (i32, i8*, ...) @logfile(i32 6, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.100, i64 0, i64 0)), !dbg !3754
  %59 = load %struct.passwd*, %struct.passwd** %pw, align 8, !dbg !3755
  %cmp122 = icmp eq %struct.passwd* %59, null, !dbg !3757
  br i1 %cmp122, label %if.then124, label %if.end125, !dbg !3758

if.then124:                                       ; preds = %if.end121
  br label %cantsec, !dbg !3759

if.end125:                                        ; preds = %if.end121
  store i8 1, i8* @chrooted, align 1, !dbg !3761
  %60 = load %struct.passwd*, %struct.passwd** %pw, align 8, !dbg !3762
  %pw_uid126 = getelementptr inbounds %struct.passwd, %struct.passwd* %60, i32 0, i32 2, !dbg !3763
  %61 = load i32, i32* %pw_uid126, align 8, !dbg !3763
  store i32 %61, i32* getelementptr inbounds (%struct.AuthResult_, %struct.AuthResult_* @authresult, i32 0, i32 1), align 4, !dbg !3764
  %62 = load %struct.passwd*, %struct.passwd** %pw, align 8, !dbg !3765
  %pw_gid127 = getelementptr inbounds %struct.passwd, %struct.passwd* %62, i32 0, i32 3, !dbg !3766
  %63 = load i32, i32* %pw_gid127, align 4, !dbg !3766
  store i32 %63, i32* getelementptr inbounds (%struct.AuthResult_, %struct.AuthResult_* @authresult, i32 0, i32 2), align 8, !dbg !3767
  %64 = load %struct.passwd*, %struct.passwd** %pw, align 8, !dbg !3768
  %pw_dir128 = getelementptr inbounds %struct.passwd, %struct.passwd* %64, i32 0, i32 5, !dbg !3770
  %65 = load i8*, i8** %pw_dir128, align 8, !dbg !3770
  %call129 = call noalias i8* @strdup(i8* %65) #7, !dbg !3771
  store i8* %call129, i8** getelementptr inbounds (%struct.AuthResult_, %struct.AuthResult_* @authresult, i32 0, i32 3), align 8, !dbg !3772
  %cmp130 = icmp eq i8* %call129, null, !dbg !3773
  br i1 %cmp130, label %if.then132, label %if.end133, !dbg !3774

if.then132:                                       ; preds = %if.end125
  call void @die_mem() #11, !dbg !3775
  unreachable, !dbg !3775

if.end133:                                        ; preds = %if.end125
  %66 = load i32, i32* getelementptr inbounds (%struct.AuthResult_, %struct.AuthResult_* @authresult, i32 0, i32 1), align 4, !dbg !3777
  %cmp134 = icmp ugt i32 %66, 0, !dbg !3779
  br i1 %cmp134, label %if.then136, label %if.end142, !dbg !3780

if.then136:                                       ; preds = %if.end133
  %67 = load i32, i32* getelementptr inbounds (%struct.AuthResult_, %struct.AuthResult_* @authresult, i32 0, i32 1), align 4, !dbg !3781
  %call137 = call i32 @seteuid(i32 %67) #7, !dbg !3784
  %cmp138 = icmp ne i32 %call137, 0, !dbg !3785
  br i1 %cmp138, label %if.then140, label %if.end141, !dbg !3786

if.then140:                                       ; preds = %if.then136
  br label %cantsec, !dbg !3787

if.end141:                                        ; preds = %if.then136
  br label %if.end142, !dbg !3789

if.end142:                                        ; preds = %if.end141, %if.end133
  call void @dobanner(i32 0), !dbg !3790
  %68 = load i8, i8* @broken_client_compat, align 1, !dbg !3791
  %conv143 = sext i8 %68 to i32, !dbg !3791
  %cmp144 = icmp ne i32 %conv143, 0, !dbg !3793
  br i1 %cmp144, label %if.then146, label %if.else147, !dbg !3794

if.then146:                                       ; preds = %if.end142
  call void @addreply_noformat(i32 331, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.99, i64 0, i64 0)), !dbg !3795
  br label %if.end148, !dbg !3797

if.else147:                                       ; preds = %if.end142
  call void @addreply_noformat(i32 230, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.100, i64 0, i64 0)), !dbg !3798
  br label %if.end148

if.end148:                                        ; preds = %if.else147, %if.then146
  store i8 0, i8* @dot_write_ok, align 1, !dbg !3800
  %69 = load i8, i8* @dot_read_anon_ok, align 1, !dbg !3801
  store i8 %69, i8* @dot_read_ok, align 1, !dbg !3802
  %call149 = call i8* @strncpy(i8* getelementptr inbounds ([128 x i8], [128 x i8]* @account, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i64 0, i64 0), i64 127) #7, !dbg !3803
  store i8 0, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @account, i64 0, i64 127), align 1, !dbg !3804
  store i8 1, i8* @guest, align 1, !dbg !3805
  store i8 1, i8* @loggedin, align 1, !dbg !3806
  br label %if.end150

if.end150:                                        ; preds = %if.end148
  br label %if.end151

if.end151:                                        ; preds = %if.end150, %if.then28
  %call152 = call i8* @getcwd(i8* getelementptr inbounds ([4097 x i8], [4097 x i8]* @wd, i64 0, i64 0), i64 4096) #7, !dbg !3807
  %cmp153 = icmp eq i8* %call152, null, !dbg !3809
  br i1 %cmp153, label %if.then155, label %if.end156, !dbg !3810

if.then155:                                       ; preds = %if.end151
  store i8 47, i8* getelementptr inbounds ([4097 x i8], [4097 x i8]* @wd, i64 0, i64 0), align 16, !dbg !3811
  store i8 0, i8* getelementptr inbounds ([4097 x i8], [4097 x i8]* @wd, i64 0, i64 1), align 1, !dbg !3813
  br label %if.end156, !dbg !3814

if.end156:                                        ; preds = %if.end9, %if.then38, %if.then155, %if.end151
  ret void, !dbg !3815
}

; Function Attrs: nounwind readonly
declare i32 @strcasecmp(i8*, i8*) #5

declare %struct.passwd* @getpwnam(i8*) #9

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @doinitsupgroups(i8* %user, i32 %uid, i32 %gid) #0 !dbg !3816 {
entry:
  %retval = alloca i32, align 4
  %user.addr = alloca i8*, align 8
  %uid.addr = alloca i32, align 4
  %gid.addr = alloca i32, align 4
  %lpwd = alloca %struct.passwd*, align 8
  store i8* %user, i8** %user.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %user.addr, metadata !3821, metadata !DIExpression()), !dbg !3822
  store i32 %uid, i32* %uid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %uid.addr, metadata !3823, metadata !DIExpression()), !dbg !3824
  store i32 %gid, i32* %gid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gid.addr, metadata !3825, metadata !DIExpression()), !dbg !3826
  %call = call i32 @setgroups(i64 1, i32* %gid.addr) #7, !dbg !3827
  %cmp = icmp ne i32 %call, 0, !dbg !3829
  br i1 %cmp, label %if.then, label %if.end, !dbg !3830

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !3831
  br label %return, !dbg !3831

if.end:                                           ; preds = %entry
  %0 = load i8*, i8** %user.addr, align 8, !dbg !3833
  %cmp1 = icmp eq i8* %0, null, !dbg !3835
  br i1 %cmp1, label %if.then2, label %if.end9, !dbg !3836

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.passwd** %lpwd, metadata !3837, metadata !DIExpression()), !dbg !3842
  %1 = load i32, i32* %uid.addr, align 4, !dbg !3843
  %call3 = call %struct.passwd* @getpwuid(i32 %1), !dbg !3844
  store %struct.passwd* %call3, %struct.passwd** %lpwd, align 8, !dbg !3842
  %2 = load %struct.passwd*, %struct.passwd** %lpwd, align 8, !dbg !3845
  %cmp4 = icmp ne %struct.passwd* %2, null, !dbg !3847
  br i1 %cmp4, label %land.lhs.true, label %if.else, !dbg !3848

land.lhs.true:                                    ; preds = %if.then2
  %3 = load %struct.passwd*, %struct.passwd** %lpwd, align 8, !dbg !3849
  %pw_name = getelementptr inbounds %struct.passwd, %struct.passwd* %3, i32 0, i32 0, !dbg !3850
  %4 = load i8*, i8** %pw_name, align 8, !dbg !3850
  %cmp5 = icmp ne i8* %4, null, !dbg !3851
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !3852

if.then6:                                         ; preds = %land.lhs.true
  %5 = load %struct.passwd*, %struct.passwd** %lpwd, align 8, !dbg !3853
  %pw_name7 = getelementptr inbounds %struct.passwd, %struct.passwd* %5, i32 0, i32 0, !dbg !3855
  %6 = load i8*, i8** %pw_name7, align 8, !dbg !3855
  store i8* %6, i8** %user.addr, align 8, !dbg !3856
  br label %if.end8, !dbg !3857

if.else:                                          ; preds = %land.lhs.true, %if.then2
  store i32 0, i32* %retval, align 4, !dbg !3858
  br label %return, !dbg !3858

if.end8:                                          ; preds = %if.then6
  br label %if.end9, !dbg !3860

if.end9:                                          ; preds = %if.end8, %if.end
  %7 = load i8*, i8** %user.addr, align 8, !dbg !3861
  %8 = load i32, i32* %gid.addr, align 4, !dbg !3862
  %call10 = call i32 @initgroups(i8* %7, i32 %8), !dbg !3863
  store i32 0, i32* %retval, align 4, !dbg !3864
  br label %return, !dbg !3864

return:                                           ; preds = %if.end9, %if.else, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !3865
  ret i32 %9, !dbg !3865
}

; Function Attrs: nounwind
declare i32 @setgid(i32) #2

; Function Attrs: nounwind
declare i32 @setegid(i32) #2

; Function Attrs: nounwind
declare i32 @chdir(i8*) #2

; Function Attrs: nounwind
declare i32 @chroot(i8*) #2

; Function Attrs: nounwind
declare noalias i8* @strdup(i8*) #2

; Function Attrs: nounwind
declare i8* @getcwd(i8*, i64) #2

; Function Attrs: nounwind
declare i32 @setgroups(i64, i32*) #2

declare %struct.passwd* @getpwuid(i32) #9

declare i32 @initgroups(i8*, i32) #9

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @dopass(i8* %password) #0 !dbg !468 {
entry:
  %password.addr = alloca i8*, align 8
  %hd = alloca i8*, align 8
  %tmp = alloca %struct.AuthResult_, align 8
  %rd_len = alloca i64, align 8
  store i8* %password, i8** %password.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %password.addr, metadata !3866, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.declare(metadata i8** %hd, metadata !3868, metadata !DIExpression()), !dbg !3869
  %0 = load i8, i8* @loggedin, align 1, !dbg !3870
  %conv = sext i8 %0 to i32, !dbg !3870
  %cmp = icmp ne i32 %conv, 0, !dbg !3872
  br i1 %cmp, label %if.then, label %if.end6, !dbg !3873

if.then:                                          ; preds = %entry
  %1 = load i8, i8* @guest, align 1, !dbg !3874
  %conv2 = sext i8 %1 to i32, !dbg !3874
  %cmp3 = icmp ne i32 %conv2, 0, !dbg !3877
  br i1 %cmp3, label %if.then5, label %if.else, !dbg !3878

if.then5:                                         ; preds = %if.then
  call void @addreply_noformat(i32 230, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.99, i64 0, i64 0)), !dbg !3879
  br label %if.end, !dbg !3881

if.else:                                          ; preds = %if.then
  call void @addreply_noformat(i32 530, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.104, i64 0, i64 0)), !dbg !3882
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  br label %return, !dbg !3884

if.end6:                                          ; preds = %entry
  %2 = load i8, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @account, i64 0, i64 0), align 16, !dbg !3885
  %conv7 = sext i8 %2 to i32, !dbg !3885
  %cmp8 = icmp eq i32 %conv7, 0, !dbg !3887
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !3888

if.then10:                                        ; preds = %if.end6
  call void @addreply_noformat(i32 530, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.110, i64 0, i64 0)), !dbg !3889
  br label %return, !dbg !3891

if.end11:                                         ; preds = %if.end6
  %3 = load i8*, i8** %password.addr, align 8, !dbg !3892
  %call = call i64 @strlen(i8* %3) #12, !dbg !3894
  %cmp12 = icmp uge i64 %call, 512, !dbg !3895
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !3896

if.then14:                                        ; preds = %if.end11
  call void @addreply_noformat(i32 530, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.111, i64 0, i64 0)), !dbg !3897
  br label %return, !dbg !3899

if.end15:                                         ; preds = %if.end11
  %4 = load i8*, i8** %password.addr, align 8, !dbg !3900
  call void @pw_check(%struct.AuthResult_* sret %tmp, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @account, i64 0, i64 0), i8* %4, %struct.sockaddr_storage* @ctrlconn, %struct.sockaddr_storage* @peer), !dbg !3901
  %5 = bitcast %struct.AuthResult_* %tmp to i8*, !dbg !3901
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%struct.AuthResult_* @authresult to i8*), i8* align 8 %5, i64 40, i1 false), !dbg !3901
  %6 = load i8*, i8** %password.addr, align 8, !dbg !3902
  %7 = load i8*, i8** %password.addr, align 8, !dbg !3902
  %call16 = call i64 @strlen(i8* %7) #12, !dbg !3902
  call void @sodium_memzero(i8* %6, i64 %call16), !dbg !3902
  %8 = load i32, i32* getelementptr inbounds (%struct.AuthResult_, %struct.AuthResult_* @authresult, i32 0, i32 0), align 8, !dbg !3903
  %cmp17 = icmp ne i32 %8, 1, !dbg !3905
  br i1 %cmp17, label %if.then19, label %if.end24, !dbg !3906

if.then19:                                        ; preds = %if.end15
  %9 = load i32, i32* @dopass.tapping, align 4, !dbg !3907
  %inc = add i32 %9, 1, !dbg !3907
  store i32 %inc, i32* @dopass.tapping, align 4, !dbg !3907
  %10 = load i32, i32* @dopass.tapping, align 4, !dbg !3909
  call void @randomsleep(i32 %10), !dbg !3910
  call void @addreply_noformat(i32 530, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.112, i64 0, i64 0)), !dbg !3911
  call void @doreply(), !dbg !3912
  %11 = load i32, i32* @dopass.tapping, align 4, !dbg !3913
  %cmp20 = icmp ugt i32 %11, 5, !dbg !3915
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !3916

if.then22:                                        ; preds = %if.then19
  call void (i32, i8*, ...) @logfile(i32 3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.113, i64 0, i64 0)), !dbg !3917
  call void @_EXIT(i32 1) #11, !dbg !3919
  unreachable, !dbg !3919

if.end23:                                         ; preds = %if.then19
  call void (i32, i8*, ...) @logfile(i32 4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.114, i64 0, i64 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @account, i64 0, i64 0)), !dbg !3920
  br label %return, !dbg !3921

if.end24:                                         ; preds = %if.end15
  %12 = load i32, i32* getelementptr inbounds (%struct.AuthResult_, %struct.AuthResult_* @authresult, i32 0, i32 1), align 4, !dbg !3922
  %13 = load i32, i32* @useruid, align 4, !dbg !3924
  %cmp25 = icmp ult i32 %12, %13, !dbg !3925
  br i1 %cmp25, label %if.then27, label %if.end33, !dbg !3926

if.then27:                                        ; preds = %if.end24
  %14 = load i32, i32* @useruid, align 4, !dbg !3927
  %conv28 = zext i32 %14 to i64, !dbg !3929
  call void (i32, i8*, ...) @logfile(i32 4, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.115, i64 0, i64 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @account, i64 0, i64 0), i64 %conv28), !dbg !3930
  %15 = load i32, i32* @dopass.tapping, align 4, !dbg !3931
  call void @randomsleep(i32 %15), !dbg !3932
  %16 = load i32, i32* @dopass.tapping, align 4, !dbg !3933
  %cmp29 = icmp uge i32 %16, 5, !dbg !3935
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !3936

if.then31:                                        ; preds = %if.then27
  call void @addreply_noformat(i32 530, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.112, i64 0, i64 0)), !dbg !3937
  call void @doreply(), !dbg !3939
  call void @_EXIT(i32 1) #11, !dbg !3940
  unreachable, !dbg !3940

if.end32:                                         ; preds = %if.then27
  call void @addreply_noformat(i32 530, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.116, i64 0, i64 0)), !dbg !3941
  call void @doreply(), !dbg !3942
  br label %return, !dbg !3943

if.end33:                                         ; preds = %if.end24
  %17 = load i32, i32* getelementptr inbounds (%struct.AuthResult_, %struct.AuthResult_* @authresult, i32 0, i32 1), align 4, !dbg !3944
  %call34 = call i8* @getname(i32 %17), !dbg !3945
  %18 = load i32, i32* getelementptr inbounds (%struct.AuthResult_, %struct.AuthResult_* @authresult, i32 0, i32 2), align 8, !dbg !3946
  %call35 = call i8* @getgroup(i32 %18), !dbg !3947
  %19 = load i32, i32* getelementptr inbounds (%struct.AuthResult_, %struct.AuthResult_* @authresult, i32 0, i32 2), align 8, !dbg !3948
  %call36 = call i32 @doinitsupgroups(i8* getelementptr inbounds ([128 x i8], [128 x i8]* @account, i64 0, i64 0), i32 -1, i32 %19), !dbg !3950
  %cmp37 = icmp ne i32 %call36, 0, !dbg !3951
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !3952

if.then39:                                        ; preds = %if.end33
  call void (i32, i32, i8*, ...) @die(i32 421, i32 4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.116, i64 0, i64 0)) #11, !dbg !3953
  unreachable, !dbg !3953

if.end40:                                         ; preds = %if.end33
  %20 = load i8*, i8** getelementptr inbounds (%struct.AuthResult_, %struct.AuthResult_* @authresult, i32 0, i32 3), align 8, !dbg !3955
  %call41 = call noalias i8* @strdup(i8* %20) #7, !dbg !3957
  store i8* %call41, i8** @root_directory, align 8, !dbg !3958
  %cmp42 = icmp eq i8* %call41, null, !dbg !3959
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !3960

if.then44:                                        ; preds = %if.end40
  call void @die_mem() #11, !dbg !3961
  unreachable, !dbg !3961

if.end45:                                         ; preds = %if.end40
  %21 = load i8*, i8** @root_directory, align 8, !dbg !3963
  %call46 = call i8* @strstr(i8* %21, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48, i64 0, i64 0)) #12, !dbg !3964
  store i8* %call46, i8** %hd, align 8, !dbg !3965
  %22 = load i8*, i8** %hd, align 8, !dbg !3966
  %cmp47 = icmp ne i8* %22, null, !dbg !3968
  br i1 %cmp47, label %if.then49, label %if.else65, !dbg !3969

if.then49:                                        ; preds = %if.end45
  %23 = load i8, i8* @chrooted, align 1, !dbg !3970
  %conv50 = sext i8 %23 to i32, !dbg !3970
  %cmp51 = icmp ne i32 %conv50, 0, !dbg !3973
  br i1 %cmp51, label %if.then53, label %if.end54, !dbg !3974

if.then53:                                        ; preds = %if.then49
  call void (i32, i32, i8*, ...) @die(i32 421, i32 7, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.104, i64 0, i64 0)) #11, !dbg !3975
  unreachable, !dbg !3975

if.end54:                                         ; preds = %if.then49
  %24 = load i8*, i8** @root_directory, align 8, !dbg !3977
  %call55 = call i32 @create_home_and_chdir(i8* %24), !dbg !3979
  %tobool = icmp ne i32 %call55, 0, !dbg !3979
  br i1 %tobool, label %if.then56, label %if.end57, !dbg !3980

if.then56:                                        ; preds = %if.end54
  call void (i32, i32, i8*, ...) @die(i32 421, i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.117, i64 0, i64 0)) #11, !dbg !3981
  unreachable, !dbg !3981

if.end57:                                         ; preds = %if.end54
  %25 = load i8*, i8** %hd, align 8, !dbg !3983
  %incdec.ptr = getelementptr i8, i8* %25, i32 1, !dbg !3983
  store i8* %incdec.ptr, i8** %hd, align 8, !dbg !3983
  store i8 0, i8* %incdec.ptr, align 1, !dbg !3984
  %26 = load i8*, i8** %hd, align 8, !dbg !3985
  %incdec.ptr58 = getelementptr i8, i8* %26, i32 1, !dbg !3985
  store i8* %incdec.ptr58, i8** %hd, align 8, !dbg !3985
  %27 = load i8*, i8** @root_directory, align 8, !dbg !3986
  %call59 = call i32 @chroot(i8* %27) #7, !dbg !3988
  %tobool60 = icmp ne i32 %call59, 0, !dbg !3988
  br i1 %tobool60, label %if.then63, label %lor.lhs.false, !dbg !3989

lor.lhs.false:                                    ; preds = %if.end57
  %28 = load i8*, i8** %hd, align 8, !dbg !3990
  %call61 = call i32 @chdir(i8* %28) #7, !dbg !3991
  %tobool62 = icmp ne i32 %call61, 0, !dbg !3991
  br i1 %tobool62, label %if.then63, label %if.end64, !dbg !3992

if.then63:                                        ; preds = %lor.lhs.false, %if.end57
  call void (i32, i32, i8*, ...) @die(i32 421, i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.117, i64 0, i64 0)) #11, !dbg !3993
  unreachable, !dbg !3993

if.end64:                                         ; preds = %lor.lhs.false
  store i8 1, i8* @chrooted, align 1, !dbg !3995
  br label %if.end70, !dbg !3996

if.else65:                                        ; preds = %if.end45
  %29 = load i8*, i8** @root_directory, align 8, !dbg !3997
  call void @free(i8* %29) #7, !dbg !3999
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.108, i64 0, i64 0), i8** @root_directory, align 8, !dbg !4000
  %30 = load i8*, i8** getelementptr inbounds (%struct.AuthResult_, %struct.AuthResult_* @authresult, i32 0, i32 3), align 8, !dbg !4001
  %call66 = call i32 @create_home_and_chdir(i8* %30), !dbg !4003
  %tobool67 = icmp ne i32 %call66, 0, !dbg !4003
  br i1 %tobool67, label %if.then68, label %if.end69, !dbg !4004

if.then68:                                        ; preds = %if.else65
  call void (i32, i32, i8*, ...) @die(i32 421, i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.117, i64 0, i64 0)) #11, !dbg !4005
  unreachable, !dbg !4005

if.end69:                                         ; preds = %if.else65
  br label %if.end70

if.end70:                                         ; preds = %if.end69, %if.end64
  %call71 = call i8* @getcwd(i8* getelementptr inbounds ([4097 x i8], [4097 x i8]* @wd, i64 0, i64 0), i64 4096) #7, !dbg !4007
  %cmp72 = icmp eq i8* %call71, null, !dbg !4009
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !4010

if.then74:                                        ; preds = %if.end70
  store i8 47, i8* getelementptr inbounds ([4097 x i8], [4097 x i8]* @wd, i64 0, i64 0), align 16, !dbg !4011
  store i8 0, i8* getelementptr inbounds ([4097 x i8], [4097 x i8]* @wd, i64 0, i64 1), align 1, !dbg !4013
  br label %if.end75, !dbg !4014

if.end75:                                         ; preds = %if.then74, %if.end70
  %31 = load i32, i32* getelementptr inbounds (%struct.AuthResult_, %struct.AuthResult_* @authresult, i32 0, i32 2), align 8, !dbg !4015
  %call76 = call i32 @setgid(i32 %31) #7, !dbg !4017
  %tobool77 = icmp ne i32 %call76, 0, !dbg !4017
  br i1 %tobool77, label %if.then81, label %lor.lhs.false78, !dbg !4018

lor.lhs.false78:                                  ; preds = %if.end75
  %32 = load i32, i32* getelementptr inbounds (%struct.AuthResult_, %struct.AuthResult_* @authresult, i32 0, i32 2), align 8, !dbg !4019
  %call79 = call i32 @setegid(i32 %32) #7, !dbg !4020
  %tobool80 = icmp ne i32 %call79, 0, !dbg !4020
  br i1 %tobool80, label %if.then81, label %if.end82, !dbg !4021

if.then81:                                        ; preds = %lor.lhs.false78, %if.end75
  call void @_EXIT(i32 1) #11, !dbg !4022
  unreachable, !dbg !4022

if.end82:                                         ; preds = %lor.lhs.false78
  %33 = load i32, i32* getelementptr inbounds (%struct.AuthResult_, %struct.AuthResult_* @authresult, i32 0, i32 1), align 4, !dbg !4024
  %34 = load i32, i32* getelementptr inbounds (%struct.AuthResult_, %struct.AuthResult_* @authresult, i32 0, i32 2), align 8, !dbg !4026
  %call83 = call i32 @check_trustedgroup(i32 %33, i32 %34), !dbg !4027
  %cmp84 = icmp ne i32 %call83, 0, !dbg !4028
  br i1 %cmp84, label %if.then86, label %if.end87, !dbg !4029

if.then86:                                        ; preds = %if.end82
  store i8 0, i8* @userchroot, align 1, !dbg !4030
  store i8 1, i8* @dot_read_ok, align 1, !dbg !4032
  store i8 1, i8* @dot_write_ok, align 1, !dbg !4033
  store i8 0, i8* @keepallfiles, align 1, !dbg !4034
  br label %if.end87, !dbg !4035

if.end87:                                         ; preds = %if.then86, %if.end82
  %35 = load i8, i8* @loggedin, align 1, !dbg !4036
  %conv88 = sext i8 %35 to i32, !dbg !4036
  %cmp89 = icmp eq i32 %conv88, 0, !dbg !4038
  br i1 %cmp89, label %if.then91, label %if.end92, !dbg !4039

if.then91:                                        ; preds = %if.end87
  store i8 1, i8* @candownload, align 1, !dbg !4040
  br label %if.end92, !dbg !4042

if.end92:                                         ; preds = %if.then91, %if.end87
  %36 = load i8, i8* @guest, align 1, !dbg !4043
  %conv93 = sext i8 %36 to i32, !dbg !4043
  %cmp94 = icmp eq i32 %conv93, 0, !dbg !4045
  br i1 %cmp94, label %land.lhs.true, label %if.end100, !dbg !4046

land.lhs.true:                                    ; preds = %if.end92
  %37 = load i8, i8* @allowfxp, align 1, !dbg !4047
  %conv96 = sext i8 %37 to i32, !dbg !4047
  %cmp97 = icmp eq i32 %conv96, 1, !dbg !4048
  br i1 %cmp97, label %if.then99, label %if.end100, !dbg !4049

if.then99:                                        ; preds = %land.lhs.true
  call void @addreply_noformat(i32 0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.118, i64 0, i64 0)), !dbg !4050
  br label %if.end100, !dbg !4052

if.end100:                                        ; preds = %if.then99, %land.lhs.true, %if.end92
  %38 = load i8, i8* @userchroot, align 1, !dbg !4053
  %conv101 = sext i8 %38 to i32, !dbg !4053
  %cmp102 = icmp ne i32 %conv101, 0, !dbg !4055
  br i1 %cmp102, label %land.lhs.true104, label %if.else127, !dbg !4056

land.lhs.true104:                                 ; preds = %if.end100
  %39 = load i8, i8* @chrooted, align 1, !dbg !4057
  %conv105 = sext i8 %39 to i32, !dbg !4057
  %cmp106 = icmp eq i32 %conv105, 0, !dbg !4058
  br i1 %cmp106, label %if.then108, label %if.else127, !dbg !4059

if.then108:                                       ; preds = %land.lhs.true104
  %call109 = call i32 @chdir(i8* getelementptr inbounds ([4097 x i8], [4097 x i8]* @wd, i64 0, i64 0)) #7, !dbg !4060
  %tobool110 = icmp ne i32 %call109, 0, !dbg !4060
  br i1 %tobool110, label %if.then114, label %lor.lhs.false111, !dbg !4063

lor.lhs.false111:                                 ; preds = %if.then108
  %call112 = call i32 @chroot(i8* getelementptr inbounds ([4097 x i8], [4097 x i8]* @wd, i64 0, i64 0)) #7, !dbg !4064
  %tobool113 = icmp ne i32 %call112, 0, !dbg !4064
  br i1 %tobool113, label %if.then114, label %if.end115, !dbg !4065

if.then114:                                       ; preds = %lor.lhs.false111, %if.then108
  call void (i32, i32, i8*, ...) @die(i32 421, i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.119, i64 0, i64 0)) #11, !dbg !4066
  unreachable, !dbg !4066

if.end115:                                        ; preds = %lor.lhs.false111
  store i8 1, i8* @chrooted, align 1, !dbg !4068
  call void @llvm.dbg.declare(metadata i64* %rd_len, metadata !4069, metadata !DIExpression()), !dbg !4071
  %call116 = call i64 @strlen(i8* getelementptr inbounds ([4097 x i8], [4097 x i8]* @wd, i64 0, i64 0)) #12, !dbg !4072
  %add = add i64 %call116, 2, !dbg !4073
  store i64 %add, i64* %rd_len, align 8, !dbg !4071
  %40 = load i64, i64* %rd_len, align 8, !dbg !4074
  %call117 = call noalias i8* @malloc(i64 %40) #7, !dbg !4076
  store i8* %call117, i8** @root_directory, align 8, !dbg !4077
  %cmp118 = icmp eq i8* %call117, null, !dbg !4078
  br i1 %cmp118, label %if.then120, label %if.end121, !dbg !4079

if.then120:                                       ; preds = %if.end115
  call void @die_mem() #11, !dbg !4080
  unreachable, !dbg !4080

if.end121:                                        ; preds = %if.end115
  %41 = load i8*, i8** @root_directory, align 8, !dbg !4082
  %42 = load i64, i64* %rd_len, align 8, !dbg !4083
  %call122 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %41, i64 %42, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.107, i64 0, i64 0), i8* getelementptr inbounds ([4097 x i8], [4097 x i8]* @wd, i64 0, i64 0)) #7, !dbg !4084
  store i8 47, i8* getelementptr inbounds ([4097 x i8], [4097 x i8]* @wd, i64 0, i64 0), align 16, !dbg !4085
  store i8 0, i8* getelementptr inbounds ([4097 x i8], [4097 x i8]* @wd, i64 0, i64 1), align 1, !dbg !4086
  %call123 = call i32 @chdir(i8* getelementptr inbounds ([4097 x i8], [4097 x i8]* @wd, i64 0, i64 0)) #7, !dbg !4087
  %tobool124 = icmp ne i32 %call123, 0, !dbg !4087
  br i1 %tobool124, label %if.then125, label %if.end126, !dbg !4089

if.then125:                                       ; preds = %if.end121
  call void @_EXIT(i32 1) #11, !dbg !4090
  unreachable, !dbg !4090

if.end126:                                        ; preds = %if.end121
  call void (i32, i8*, ...) @addreply(i32 230, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.120, i64 0, i64 0), i8* getelementptr inbounds ([4097 x i8], [4097 x i8]* @wd, i64 0, i64 0)), !dbg !4092
  br label %if.end128, !dbg !4093

if.else127:                                       ; preds = %land.lhs.true104, %if.end100
  call void (i32, i8*, ...) @addreply(i32 230, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.121, i64 0, i64 0), i8* getelementptr inbounds ([4097 x i8], [4097 x i8]* @wd, i64 0, i64 0)), !dbg !4094
  br label %if.end128

if.end128:                                        ; preds = %if.else127, %if.end126
  call void @disablesignals(), !dbg !4096
  %43 = load i32, i32* getelementptr inbounds (%struct.AuthResult_, %struct.AuthResult_* @authresult, i32 0, i32 1), align 4, !dbg !4097
  %call129 = call i32 @seteuid(i32 %43) #7, !dbg !4099
  %cmp130 = icmp ne i32 %call129, 0, !dbg !4100
  br i1 %cmp130, label %if.then132, label %if.end133, !dbg !4101

if.then132:                                       ; preds = %if.end128
  call void @_EXIT(i32 1) #11, !dbg !4102
  unreachable, !dbg !4102

if.end133:                                        ; preds = %if.end128
  call void @enablesignals(), !dbg !4104
  call void (i32, i8*, ...) @logfile(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.122, i64 0, i64 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @account, i64 0, i64 0)), !dbg !4105
  store i8 1, i8* @loggedin, align 1, !dbg !4106
  %call134 = call i8* @getcwd(i8* getelementptr inbounds ([4097 x i8], [4097 x i8]* @wd, i64 0, i64 0), i64 4096) #7, !dbg !4107
  %cmp135 = icmp eq i8* %call134, null, !dbg !4109
  br i1 %cmp135, label %if.then137, label %if.end138, !dbg !4110

if.then137:                                       ; preds = %if.end133
  store i8 47, i8* getelementptr inbounds ([4097 x i8], [4097 x i8]* @wd, i64 0, i64 0), align 16, !dbg !4111
  store i8 0, i8* getelementptr inbounds ([4097 x i8], [4097 x i8]* @wd, i64 0, i64 1), align 1, !dbg !4113
  br label %if.end138, !dbg !4114

if.end138:                                        ; preds = %if.then137, %if.end133
  call void @dobanner(i32 0), !dbg !4115
  br label %return, !dbg !4116

return:                                           ; preds = %if.end138, %if.end32, %if.end23, %if.then14, %if.then10, %if.end
  ret void, !dbg !4116
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal void @pw_check(%struct.AuthResult_* noalias sret %agg.result, i8* %account, i8* %password, %struct.sockaddr_storage* %sa, %struct.sockaddr_storage* %peer) #0 !dbg !4117 {
entry:
  %account.addr = alloca i8*, align 8
  %password.addr = alloca i8*, align 8
  %sa.addr = alloca %struct.sockaddr_storage*, align 8
  %peer.addr = alloca %struct.sockaddr_storage*, align 8
  %auth_scan = alloca %struct.Authentications_*, align 8
  store i8* %account, i8** %account.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %account.addr, metadata !4120, metadata !DIExpression()), !dbg !4121
  store i8* %password, i8** %password.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %password.addr, metadata !4122, metadata !DIExpression()), !dbg !4123
  store %struct.sockaddr_storage* %sa, %struct.sockaddr_storage** %sa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage** %sa.addr, metadata !4124, metadata !DIExpression()), !dbg !4125
  store %struct.sockaddr_storage* %peer, %struct.sockaddr_storage** %peer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage** %peer.addr, metadata !4126, metadata !DIExpression()), !dbg !4127
  call void @llvm.dbg.declare(metadata %struct.Authentications_** %auth_scan, metadata !4128, metadata !DIExpression()), !dbg !4129
  %0 = load %struct.Authentications_*, %struct.Authentications_** @first_authentications, align 8, !dbg !4130
  store %struct.Authentications_* %0, %struct.Authentications_** %auth_scan, align 8, !dbg !4129
  call void @llvm.dbg.declare(metadata %struct.AuthResult_* %agg.result, metadata !4131, metadata !DIExpression()), !dbg !4132
  %auth_ok = getelementptr inbounds %struct.AuthResult_, %struct.AuthResult_* %agg.result, i32 0, i32 0, !dbg !4133
  store i32 -1, i32* %auth_ok, align 8, !dbg !4134
  br label %while.cond, !dbg !4135

while.cond:                                       ; preds = %if.end6, %entry
  %1 = load %struct.Authentications_*, %struct.Authentications_** %auth_scan, align 8, !dbg !4136
  %cmp = icmp ne %struct.Authentications_* %1, null, !dbg !4137
  br i1 %cmp, label %while.body, label %while.end, !dbg !4135

while.body:                                       ; preds = %while.cond
  %backend_data = getelementptr inbounds %struct.AuthResult_, %struct.AuthResult_* %agg.result, i32 0, i32 5, !dbg !4138
  store i8* null, i8** %backend_data, align 8, !dbg !4140
  %2 = load %struct.Authentications_*, %struct.Authentications_** %auth_scan, align 8, !dbg !4141
  %auth = getelementptr inbounds %struct.Authentications_, %struct.Authentications_* %2, i32 0, i32 0, !dbg !4142
  %3 = load %struct.Authentication_*, %struct.Authentication_** %auth, align 8, !dbg !4142
  %check = getelementptr inbounds %struct.Authentication_, %struct.Authentication_* %3, i32 0, i32 2, !dbg !4143
  %4 = load void (%struct.AuthResult_*, i8*, i8*, %struct.sockaddr_storage*, %struct.sockaddr_storage*)*, void (%struct.AuthResult_*, i8*, i8*, %struct.sockaddr_storage*, %struct.sockaddr_storage*)** %check, align 8, !dbg !4143
  %5 = load i8*, i8** %account.addr, align 8, !dbg !4144
  %6 = load i8*, i8** %password.addr, align 8, !dbg !4145
  %7 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %sa.addr, align 8, !dbg !4146
  %8 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %peer.addr, align 8, !dbg !4147
  call void %4(%struct.AuthResult_* %agg.result, i8* %5, i8* %6, %struct.sockaddr_storage* %7, %struct.sockaddr_storage* %8), !dbg !4141
  %auth_ok1 = getelementptr inbounds %struct.AuthResult_, %struct.AuthResult_* %agg.result, i32 0, i32 0, !dbg !4148
  %9 = load i32, i32* %auth_ok1, align 8, !dbg !4148
  %cmp2 = icmp slt i32 %9, 0, !dbg !4150
  br i1 %cmp2, label %if.then, label %if.else, !dbg !4151

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !4152

if.else:                                          ; preds = %while.body
  %auth_ok3 = getelementptr inbounds %struct.AuthResult_, %struct.AuthResult_* %agg.result, i32 0, i32 0, !dbg !4154
  %10 = load i32, i32* %auth_ok3, align 8, !dbg !4154
  %cmp4 = icmp sgt i32 %10, 0, !dbg !4156
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !4157

if.then5:                                         ; preds = %if.else
  br label %return, !dbg !4158

if.end:                                           ; preds = %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end
  %11 = load %struct.Authentications_*, %struct.Authentications_** %auth_scan, align 8, !dbg !4160
  %next = getelementptr inbounds %struct.Authentications_, %struct.Authentications_* %11, i32 0, i32 2, !dbg !4161
  %12 = load %struct.Authentications_*, %struct.Authentications_** %next, align 8, !dbg !4161
  store %struct.Authentications_* %12, %struct.Authentications_** %auth_scan, align 8, !dbg !4162
  br label %while.cond, !dbg !4135, !llvm.loop !4163

while.end:                                        ; preds = %if.then, %while.cond
  br label %return, !dbg !4165

return:                                           ; preds = %while.end, %if.then5
  ret void, !dbg !4166
}

declare void @sodium_memzero(i8*, i64) #9

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal void @randomsleep(i32 %t) #0 !dbg !4167 {
entry:
  %t.addr = alloca i32, align 4
  store i32 %t, i32* %t.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %t.addr, metadata !4170, metadata !DIExpression()), !dbg !4171
  ret void, !dbg !4172
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @create_home_and_chdir(i8* %home) #0 !dbg !4173 {
entry:
  %retval = alloca i32, align 4
  %home.addr = alloca i8*, align 8
  %pathcomp = alloca i8*, align 8
  %z = alloca i8*, align 8
  %len = alloca i64, align 8
  %delim = alloca i8, align 1
  store i8* %home, i8** %home.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %home.addr, metadata !4176, metadata !DIExpression()), !dbg !4177
  call void @llvm.dbg.declare(metadata i8** %pathcomp, metadata !4178, metadata !DIExpression()), !dbg !4179
  call void @llvm.dbg.declare(metadata i8** %z, metadata !4180, metadata !DIExpression()), !dbg !4181
  call void @llvm.dbg.declare(metadata i64* %len, metadata !4182, metadata !DIExpression()), !dbg !4183
  call void @llvm.dbg.declare(metadata i8* %delim, metadata !4184, metadata !DIExpression()), !dbg !4185
  store i8 47, i8* %delim, align 1, !dbg !4185
  %0 = load i8*, i8** %home.addr, align 8, !dbg !4186
  %cmp = icmp eq i8* %0, null, !dbg !4188
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4189

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %home.addr, align 8, !dbg !4190
  %2 = load i8, i8* %1, align 1, !dbg !4191
  %conv = sext i8 %2 to i32, !dbg !4191
  %cmp1 = icmp ne i32 %conv, 47, !dbg !4192
  br i1 %cmp1, label %if.then, label %if.end, !dbg !4193

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1, i32* %retval, align 4, !dbg !4194
  br label %return, !dbg !4194

if.end:                                           ; preds = %lor.lhs.false
  %3 = load i8*, i8** %home.addr, align 8, !dbg !4196
  %call = call i32 @chdir(i8* %3) #7, !dbg !4198
  %cmp3 = icmp eq i32 %call, 0, !dbg !4199
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !4200

if.then5:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !4201
  br label %return, !dbg !4201

if.end6:                                          ; preds = %if.end
  %4 = load i8, i8* @create_home, align 1, !dbg !4203
  %conv7 = sext i8 %4 to i32, !dbg !4203
  %cmp8 = icmp eq i32 %conv7, 0, !dbg !4205
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !4206

if.then10:                                        ; preds = %if.end6
  store i32 -1, i32* %retval, align 4, !dbg !4207
  br label %return, !dbg !4207

if.end11:                                         ; preds = %if.end6
  %5 = load i8*, i8** %home.addr, align 8, !dbg !4209
  %call12 = call i64 @strlen(i8* %5) #12, !dbg !4210
  %add = add i64 %call12, 1, !dbg !4211
  store i64 %add, i64* %len, align 8, !dbg !4212
  %6 = load i64, i64* %len, align 8, !dbg !4213
  %cmp13 = icmp ult i64 %6, 2, !dbg !4215
  br i1 %cmp13, label %if.then19, label %lor.lhs.false15, !dbg !4216

lor.lhs.false15:                                  ; preds = %if.end11
  %7 = load i8*, i8** %home.addr, align 8, !dbg !4217
  %8 = load i8, i8* %7, align 1, !dbg !4218
  %conv16 = sext i8 %8 to i32, !dbg !4218
  %cmp17 = icmp ne i32 %conv16, 47, !dbg !4219
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !4220

if.then19:                                        ; preds = %lor.lhs.false15, %if.end11
  store i32 -1, i32* %retval, align 4, !dbg !4221
  br label %return, !dbg !4221

if.end20:                                         ; preds = %lor.lhs.false15
  %9 = load i64, i64* %len, align 8, !dbg !4223
  %10 = alloca i8, i64 %9, align 16, !dbg !4223
  store i8* %10, i8** %pathcomp, align 8, !dbg !4225
  %cmp21 = icmp eq i8* %10, null, !dbg !4226
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !4227

if.then23:                                        ; preds = %if.end20
  store i32 -1, i32* %retval, align 4, !dbg !4228
  br label %return, !dbg !4228

if.end24:                                         ; preds = %if.end20
  %11 = load i8*, i8** %pathcomp, align 8, !dbg !4230
  %12 = load i8*, i8** %home.addr, align 8, !dbg !4231
  %13 = load i64, i64* %len, align 8, !dbg !4232
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %12, i64 %13, i1 false), !dbg !4233
  %14 = load i8*, i8** %pathcomp, align 8, !dbg !4234
  store i8* %14, i8** %z, align 8, !dbg !4235
  br label %for.cond, !dbg !4236

for.cond:                                         ; preds = %if.end40, %if.end24
  %15 = load i8*, i8** %z, align 8, !dbg !4237
  %incdec.ptr = getelementptr i8, i8* %15, i32 1, !dbg !4237
  store i8* %incdec.ptr, i8** %z, align 8, !dbg !4237
  %16 = load i8*, i8** %z, align 8, !dbg !4241
  %17 = load i8, i8* %16, align 1, !dbg !4243
  %conv25 = sext i8 %17 to i32, !dbg !4243
  %cmp26 = icmp eq i32 %conv25, 0, !dbg !4244
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !4245

if.then28:                                        ; preds = %for.cond
  br label %for.end, !dbg !4246

if.end29:                                         ; preds = %for.cond
  %18 = load i8*, i8** %z, align 8, !dbg !4248
  %19 = load i8, i8* %18, align 1, !dbg !4250
  %conv30 = sext i8 %19 to i32, !dbg !4250
  %cmp31 = icmp eq i32 %conv30, 47, !dbg !4251
  br i1 %cmp31, label %if.then33, label %if.end40, !dbg !4252

if.then33:                                        ; preds = %if.end29
  %20 = load i8*, i8** %z, align 8, !dbg !4253
  store i8 0, i8* %20, align 1, !dbg !4255
  %21 = load i8*, i8** %z, align 8, !dbg !4256
  %arrayidx = getelementptr i8, i8* %21, i64 1, !dbg !4256
  %22 = load i8, i8* %arrayidx, align 1, !dbg !4256
  %conv34 = sext i8 %22 to i32, !dbg !4256
  %cmp35 = icmp eq i32 %conv34, 0, !dbg !4258
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !4259

if.then37:                                        ; preds = %if.then33
  br label %for.end, !dbg !4260

if.end38:                                         ; preds = %if.then33
  %23 = load i8*, i8** %pathcomp, align 8, !dbg !4262
  %call39 = call i32 @mkdir(i8* %23, i32 493) #7, !dbg !4263
  %24 = load i8*, i8** %z, align 8, !dbg !4264
  store i8 47, i8* %24, align 1, !dbg !4265
  br label %if.end40, !dbg !4266

if.end40:                                         ; preds = %if.end38, %if.end29
  br label %for.cond, !dbg !4267, !llvm.loop !4268

for.end:                                          ; preds = %if.then37, %if.then28
  br label %do.body, !dbg !4271

do.body:                                          ; preds = %for.end
  br label %do.end, !dbg !4272

do.end:                                           ; preds = %do.body
  %25 = load i8*, i8** %home.addr, align 8, !dbg !4274
  %call41 = call i32 @mkdir(i8* %25, i32 448) #7, !dbg !4275
  %26 = load i8*, i8** %home.addr, align 8, !dbg !4276
  %call42 = call i32 @chdir(i8* %26) #7, !dbg !4278
  %cmp43 = icmp ne i32 %call42, 0, !dbg !4279
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !4280

if.then45:                                        ; preds = %do.end
  store i32 -1, i32* %retval, align 4, !dbg !4281
  br label %return, !dbg !4281

if.end46:                                         ; preds = %do.end
  %27 = load i8*, i8** %home.addr, align 8, !dbg !4283
  %28 = load i32, i32* @u_mask_d, align 4, !dbg !4285
  %neg = xor i32 %28, -1, !dbg !4286
  %and = and i32 511, %neg, !dbg !4287
  %call47 = call i32 @chmod(i8* %27, i32 %and) #7, !dbg !4288
  %cmp48 = icmp slt i32 %call47, 0, !dbg !4289
  br i1 %cmp48, label %if.then54, label %lor.lhs.false50, !dbg !4290

lor.lhs.false50:                                  ; preds = %if.end46
  %29 = load i8*, i8** %home.addr, align 8, !dbg !4291
  %30 = load i32, i32* getelementptr inbounds (%struct.AuthResult_, %struct.AuthResult_* @authresult, i32 0, i32 1), align 4, !dbg !4292
  %31 = load i32, i32* getelementptr inbounds (%struct.AuthResult_, %struct.AuthResult_* @authresult, i32 0, i32 2), align 8, !dbg !4293
  %call51 = call i32 @chown(i8* %29, i32 %30, i32 %31) #7, !dbg !4294
  %cmp52 = icmp slt i32 %call51, 0, !dbg !4295
  br i1 %cmp52, label %if.then54, label %if.end55, !dbg !4296

if.then54:                                        ; preds = %lor.lhs.false50, %if.end46
  store i32 -1, i32* %retval, align 4, !dbg !4297
  br label %return, !dbg !4297

if.end55:                                         ; preds = %lor.lhs.false50
  %32 = load i8*, i8** %home.addr, align 8, !dbg !4299
  %call56 = call i32 @chdir(i8* %32) #7, !dbg !4300
  store i32 %call56, i32* %retval, align 4, !dbg !4301
  br label %return, !dbg !4301

return:                                           ; preds = %if.end55, %if.then54, %if.then45, %if.then23, %if.then19, %if.then10, %if.then5, %if.then
  %33 = load i32, i32* %retval, align 4, !dbg !4302
  ret i32 %33, !dbg !4302
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @check_trustedgroup(i32 %uid, i32 %gid) #0 !dbg !4303 {
entry:
  %retval = alloca i32, align 4
  %uid.addr = alloca i32, align 4
  %gid.addr = alloca i32, align 4
  %alloca_suppgroups = alloca i32*, align 8
  %n = alloca i32, align 4
  %n2 = alloca i32, align 4
  %result = alloca i32, align 4
  store i32 %uid, i32* %uid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %uid.addr, metadata !4306, metadata !DIExpression()), !dbg !4307
  store i32 %gid, i32* %gid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gid.addr, metadata !4308, metadata !DIExpression()), !dbg !4309
  call void @llvm.dbg.declare(metadata i32** %alloca_suppgroups, metadata !4310, metadata !DIExpression()), !dbg !4312
  call void @llvm.dbg.declare(metadata i32* %n, metadata !4313, metadata !DIExpression()), !dbg !4314
  call void @llvm.dbg.declare(metadata i32* %n2, metadata !4315, metadata !DIExpression()), !dbg !4316
  call void @llvm.dbg.declare(metadata i32* %result, metadata !4317, metadata !DIExpression()), !dbg !4318
  store i32 0, i32* %result, align 4, !dbg !4318
  %0 = load i32, i32* %uid.addr, align 4, !dbg !4319
  %cmp = icmp eq i32 %0, 0, !dbg !4321
  br i1 %cmp, label %if.then, label %if.end, !dbg !4322

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !4323
  br label %return, !dbg !4323

if.end:                                           ; preds = %entry
  %1 = load i8, i8* @userchroot, align 1, !dbg !4325
  %conv = sext i8 %1 to i32, !dbg !4325
  %cmp1 = icmp eq i32 %conv, 2, !dbg !4327
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !4328

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !4329
  br label %return, !dbg !4329

if.end4:                                          ; preds = %if.end
  %2 = load i32, i32* %gid.addr, align 4, !dbg !4331
  %3 = load i32, i32* @chroot_trustedgid, align 4, !dbg !4333
  %cmp5 = icmp eq i32 %2, %3, !dbg !4334
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !4335

if.then7:                                         ; preds = %if.end4
  store i32 1, i32* %retval, align 4, !dbg !4336
  br label %return, !dbg !4336

if.end8:                                          ; preds = %if.end4
  %call = call i32 @getgroups(i32 0, i32* null) #7, !dbg !4338
  store i32 %call, i32* %n, align 4, !dbg !4340
  %cmp9 = icmp sle i32 %call, 0, !dbg !4341
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !4342

if.then11:                                        ; preds = %if.end8
  store i32 0, i32* %retval, align 4, !dbg !4343
  br label %return, !dbg !4343

if.end12:                                         ; preds = %if.end8
  %4 = load i32, i32* %n, align 4, !dbg !4345
  %conv13 = sext i32 %4 to i64, !dbg !4345
  %mul = mul i64 %conv13, 4, !dbg !4345
  %5 = alloca i8, i64 %mul, align 16, !dbg !4345
  %6 = bitcast i8* %5 to i32*, !dbg !4345
  store i32* %6, i32** %alloca_suppgroups, align 8, !dbg !4347
  %cmp14 = icmp eq i32* %6, null, !dbg !4348
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !4349

if.then16:                                        ; preds = %if.end12
  call void @die_mem() #11, !dbg !4350
  unreachable, !dbg !4350

if.end17:                                         ; preds = %if.end12
  %7 = load i32, i32* %n, align 4, !dbg !4352
  %8 = load i32*, i32** %alloca_suppgroups, align 8, !dbg !4353
  %call18 = call i32 @getgroups(i32 %7, i32* %8) #7, !dbg !4354
  store i32 %call18, i32* %n2, align 4, !dbg !4355
  %9 = load i32, i32* %n2, align 4, !dbg !4356
  %10 = load i32, i32* %n, align 4, !dbg !4358
  %cmp19 = icmp slt i32 %9, %10, !dbg !4359
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !4360

if.then21:                                        ; preds = %if.end17
  %11 = load i32, i32* %n2, align 4, !dbg !4361
  store i32 %11, i32* %n, align 4, !dbg !4363
  br label %if.end22, !dbg !4364

if.end22:                                         ; preds = %if.then21, %if.end17
  store i32 0, i32* %result, align 4, !dbg !4365
  br label %while.cond, !dbg !4366

while.cond:                                       ; preds = %if.end28, %if.end22
  %12 = load i32, i32* %n, align 4, !dbg !4367
  %cmp23 = icmp ne i32 %12, 0, !dbg !4368
  br i1 %cmp23, label %while.body, label %while.end, !dbg !4366

while.body:                                       ; preds = %while.cond
  %13 = load i32, i32* %n, align 4, !dbg !4369
  %dec = add i32 %13, -1, !dbg !4369
  store i32 %dec, i32* %n, align 4, !dbg !4369
  %14 = load i32*, i32** %alloca_suppgroups, align 8, !dbg !4371
  %15 = load i32, i32* %n, align 4, !dbg !4373
  %idxprom = sext i32 %15 to i64, !dbg !4371
  %arrayidx = getelementptr i32, i32* %14, i64 %idxprom, !dbg !4371
  %16 = load i32, i32* %arrayidx, align 4, !dbg !4371
  %17 = load i32, i32* @chroot_trustedgid, align 4, !dbg !4374
  %cmp25 = icmp eq i32 %16, %17, !dbg !4375
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !4376

if.then27:                                        ; preds = %while.body
  store i32 1, i32* %result, align 4, !dbg !4377
  br label %while.end, !dbg !4379

if.end28:                                         ; preds = %while.body
  br label %while.cond, !dbg !4366, !llvm.loop !4380

while.end:                                        ; preds = %if.then27, %while.cond
  br label %do.body, !dbg !4382

do.body:                                          ; preds = %while.end
  br label %do.end, !dbg !4383

do.end:                                           ; preds = %do.body
  %18 = load i32, i32* %result, align 4, !dbg !4385
  store i32 %18, i32* %retval, align 4, !dbg !4386
  br label %return, !dbg !4386

return:                                           ; preds = %do.end, %if.then11, %if.then7, %if.then3, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !4387
  ret i32 %19, !dbg !4387
}

; Function Attrs: nounwind
declare i32 @getgroups(i32, i32*) #2

; Function Attrs: nounwind
declare i32 @mkdir(i8*, i32) #2

; Function Attrs: nounwind
declare i32 @chmod(i8*, i32) #2

; Function Attrs: nounwind
declare i32 @chown(i8*, i32, i32) #2

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @docwd(i8* %dir) #0 !dbg !4388 {
entry:
  %dir.addr = alloca i8*, align 8
  %where = alloca i8*, align 8
  %buffer = alloca [4352 x i8], align 16
  %pw = alloca %struct.passwd*, align 8
  %bufpnt = alloca i8*, align 8
  %s = alloca i64, align 8
  %dirscan = alloca i8*, align 8
  %real_errno = alloca i32, align 4
  %where_alias = alloca i8*, align 8
  %dir_len = alloca i64, align 8
  %wd_len = alloca i64, align 8
  store i8* %dir, i8** %dir.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !4389, metadata !DIExpression()), !dbg !4390
  call void @llvm.dbg.declare(metadata i8** %where, metadata !4391, metadata !DIExpression()), !dbg !4392
  call void @llvm.dbg.declare(metadata [4352 x i8]* %buffer, metadata !4393, metadata !DIExpression()), !dbg !4394
  %0 = load i8, i8* @loggedin, align 1, !dbg !4395
  %conv = sext i8 %0 to i32, !dbg !4395
  %cmp = icmp eq i32 %conv, 0, !dbg !4397
  br i1 %cmp, label %if.then, label %if.end, !dbg !4398

if.then:                                          ; preds = %entry
  br label %kaboom, !dbg !4399

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %dir.addr, align 8, !dbg !4401
  store i8* %1, i8** %where, align 8, !dbg !4402
  %2 = load i8*, i8** %dir.addr, align 8, !dbg !4403
  %cmp2 = icmp eq i8* %2, null, !dbg !4405
  br i1 %cmp2, label %if.then7, label %lor.lhs.false, !dbg !4406

lor.lhs.false:                                    ; preds = %if.end
  %3 = load i8*, i8** %dir.addr, align 8, !dbg !4407
  %4 = load i8, i8* %3, align 1, !dbg !4408
  %conv4 = sext i8 %4 to i32, !dbg !4408
  %cmp5 = icmp eq i32 %conv4, 0, !dbg !4409
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !4410

if.then7:                                         ; preds = %lor.lhs.false, %if.end
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.123, i64 0, i64 0), i8** %dir.addr, align 8, !dbg !4411
  br label %if.end8, !dbg !4413

if.end8:                                          ; preds = %if.then7, %lor.lhs.false
  %5 = load i8*, i8** %dir.addr, align 8, !dbg !4414
  %6 = load i8, i8* %5, align 1, !dbg !4416
  %conv9 = sext i8 %6 to i32, !dbg !4416
  %cmp10 = icmp eq i32 %conv9, 126, !dbg !4417
  br i1 %cmp10, label %if.then12, label %if.end78, !dbg !4418

if.then12:                                        ; preds = %if.end8
  call void @llvm.dbg.declare(metadata %struct.passwd** %pw, metadata !4419, metadata !DIExpression()), !dbg !4421
  %7 = load i8*, i8** %dir.addr, align 8, !dbg !4422
  %arrayidx = getelementptr i8, i8* %7, i64 1, !dbg !4422
  %8 = load i8, i8* %arrayidx, align 1, !dbg !4422
  %conv13 = sext i8 %8 to i32, !dbg !4422
  %cmp14 = icmp eq i32 %conv13, 0, !dbg !4424
  br i1 %cmp14, label %if.then16, label %if.else, !dbg !4425

if.then16:                                        ; preds = %if.then12
  %arraydecay = getelementptr inbounds [4352 x i8], [4352 x i8]* %buffer, i64 0, i64 0, !dbg !4426
  %9 = load i8, i8* @chrooted, align 1, !dbg !4428
  %conv17 = sext i8 %9 to i32, !dbg !4428
  %cmp18 = icmp ne i32 %conv17, 0, !dbg !4429
  br i1 %cmp18, label %cond.true, label %cond.false, !dbg !4428

cond.true:                                        ; preds = %if.then16
  br label %cond.end, !dbg !4428

cond.false:                                       ; preds = %if.then16
  %10 = load i8*, i8** getelementptr inbounds (%struct.AuthResult_, %struct.AuthResult_* @authresult, i32 0, i32 3), align 8, !dbg !4430
  br label %cond.end, !dbg !4428

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.108, i64 0, i64 0), %cond.true ], [ %10, %cond.false ], !dbg !4428
  %call = call i8* @strncpy(i8* %arraydecay, i8* %cond, i64 4352) #7, !dbg !4431
  %arrayidx20 = getelementptr [4352 x i8], [4352 x i8]* %buffer, i64 0, i64 4351, !dbg !4432
  store i8 0, i8* %arrayidx20, align 1, !dbg !4433
  %arraydecay21 = getelementptr inbounds [4352 x i8], [4352 x i8]* %buffer, i64 0, i64 0, !dbg !4434
  store i8* %arraydecay21, i8** %where, align 8, !dbg !4435
  br label %if.end77, !dbg !4436

if.else:                                          ; preds = %if.then12
  call void @llvm.dbg.declare(metadata i8** %bufpnt, metadata !4437, metadata !DIExpression()), !dbg !4439
  %arraydecay22 = getelementptr inbounds [4352 x i8], [4352 x i8]* %buffer, i64 0, i64 0, !dbg !4440
  store i8* %arraydecay22, i8** %bufpnt, align 8, !dbg !4439
  call void @llvm.dbg.declare(metadata i64* %s, metadata !4441, metadata !DIExpression()), !dbg !4442
  store i64 4352, i64* %s, align 8, !dbg !4442
  call void @llvm.dbg.declare(metadata i8** %dirscan, metadata !4443, metadata !DIExpression()), !dbg !4444
  %11 = load i8*, i8** %dir.addr, align 8, !dbg !4445
  %add.ptr = getelementptr i8, i8* %11, i64 1, !dbg !4446
  store i8* %add.ptr, i8** %dirscan, align 8, !dbg !4444
  br label %while.cond, !dbg !4447

while.cond:                                       ; preds = %if.end32, %if.else
  %12 = load i8*, i8** %dirscan, align 8, !dbg !4448
  %13 = load i8, i8* %12, align 1, !dbg !4449
  %conv23 = sext i8 %13 to i32, !dbg !4449
  %cmp24 = icmp ne i32 %conv23, 0, !dbg !4450
  br i1 %cmp24, label %land.rhs, label %land.end, !dbg !4451

land.rhs:                                         ; preds = %while.cond
  %14 = load i8*, i8** %dirscan, align 8, !dbg !4452
  %15 = load i8, i8* %14, align 1, !dbg !4453
  %conv26 = sext i8 %15 to i32, !dbg !4453
  %cmp27 = icmp ne i32 %conv26, 47, !dbg !4454
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %16 = phi i1 [ false, %while.cond ], [ %cmp27, %land.rhs ], !dbg !4455
  br i1 %16, label %while.body, label %while.end, !dbg !4447

while.body:                                       ; preds = %land.end
  %17 = load i64, i64* %s, align 8, !dbg !4456
  %dec = add i64 %17, -1, !dbg !4456
  store i64 %dec, i64* %s, align 8, !dbg !4456
  %cmp29 = icmp ule i64 %dec, 0, !dbg !4459
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !4460

if.then31:                                        ; preds = %while.body
  br label %kaboom, !dbg !4461

if.end32:                                         ; preds = %while.body
  %18 = load i8*, i8** %dirscan, align 8, !dbg !4463
  %incdec.ptr = getelementptr i8, i8* %18, i32 1, !dbg !4463
  store i8* %incdec.ptr, i8** %dirscan, align 8, !dbg !4463
  %19 = load i8, i8* %18, align 1, !dbg !4464
  %20 = load i8*, i8** %bufpnt, align 8, !dbg !4465
  %incdec.ptr33 = getelementptr i8, i8* %20, i32 1, !dbg !4465
  store i8* %incdec.ptr33, i8** %bufpnt, align 8, !dbg !4465
  store i8 %19, i8* %20, align 1, !dbg !4466
  br label %while.cond, !dbg !4447, !llvm.loop !4467

while.end:                                        ; preds = %land.end
  %21 = load i8*, i8** %bufpnt, align 8, !dbg !4469
  store i8 0, i8* %21, align 1, !dbg !4470
  %arraydecay34 = getelementptr inbounds [4352 x i8], [4352 x i8]* %buffer, i64 0, i64 0, !dbg !4471
  %22 = load i8, i8* %arraydecay34, align 16, !dbg !4471
  %conv35 = sext i8 %22 to i32, !dbg !4471
  %cmp36 = icmp eq i32 %conv35, 0, !dbg !4473
  br i1 %cmp36, label %if.then38, label %if.else49, !dbg !4474

if.then38:                                        ; preds = %while.end
  %arraydecay39 = getelementptr inbounds [4352 x i8], [4352 x i8]* %buffer, i64 0, i64 0, !dbg !4475
  %23 = load i8, i8* @chrooted, align 1, !dbg !4477
  %conv40 = sext i8 %23 to i32, !dbg !4477
  %cmp41 = icmp ne i32 %conv40, 0, !dbg !4478
  br i1 %cmp41, label %cond.true43, label %cond.false44, !dbg !4477

cond.true43:                                      ; preds = %if.then38
  br label %cond.end45, !dbg !4477

cond.false44:                                     ; preds = %if.then38
  %24 = load i8*, i8** getelementptr inbounds (%struct.AuthResult_, %struct.AuthResult_* @authresult, i32 0, i32 3), align 8, !dbg !4479
  br label %cond.end45, !dbg !4477

cond.end45:                                       ; preds = %cond.false44, %cond.true43
  %cond46 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.108, i64 0, i64 0), %cond.true43 ], [ %24, %cond.false44 ], !dbg !4477
  %25 = load i8*, i8** %dirscan, align 8, !dbg !4480
  %call47 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay39, i64 4352, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.124, i64 0, i64 0), i8* %cond46, i8* %25) #7, !dbg !4481
  %arraydecay48 = getelementptr inbounds [4352 x i8], [4352 x i8]* %buffer, i64 0, i64 0, !dbg !4482
  store i8* %arraydecay48, i8** %where, align 8, !dbg !4483
  br label %if.end76, !dbg !4484

if.else49:                                        ; preds = %while.end
  %26 = load i32, i32* getelementptr inbounds (%struct.AuthResult_, %struct.AuthResult_* @authresult, i32 0, i32 4), align 8, !dbg !4485
  %cmp50 = icmp eq i32 %26, 0, !dbg !4487
  br i1 %cmp50, label %if.then52, label %if.end75, !dbg !4488

if.then52:                                        ; preds = %if.else49
  %27 = load i8, i8* @chrooted, align 1, !dbg !4489
  %conv53 = sext i8 %27 to i32, !dbg !4489
  %cmp54 = icmp ne i32 %conv53, 0, !dbg !4492
  br i1 %cmp54, label %if.then68, label %lor.lhs.false56, !dbg !4493

lor.lhs.false56:                                  ; preds = %if.then52
  %28 = load i8, i8* @guest, align 1, !dbg !4494
  %conv57 = sext i8 %28 to i32, !dbg !4494
  %cmp58 = icmp ne i32 %conv57, 0, !dbg !4495
  br i1 %cmp58, label %if.then68, label %lor.lhs.false60, !dbg !4496

lor.lhs.false60:                                  ; preds = %lor.lhs.false56
  %arraydecay61 = getelementptr inbounds [4352 x i8], [4352 x i8]* %buffer, i64 0, i64 0, !dbg !4497
  %call62 = call %struct.passwd* @getpwnam(i8* %arraydecay61), !dbg !4498
  store %struct.passwd* %call62, %struct.passwd** %pw, align 8, !dbg !4499
  %cmp63 = icmp eq %struct.passwd* %call62, null, !dbg !4500
  br i1 %cmp63, label %if.then68, label %lor.lhs.false65, !dbg !4501

lor.lhs.false65:                                  ; preds = %lor.lhs.false60
  %29 = load %struct.passwd*, %struct.passwd** %pw, align 8, !dbg !4502
  %pw_dir = getelementptr inbounds %struct.passwd, %struct.passwd* %29, i32 0, i32 5, !dbg !4503
  %30 = load i8*, i8** %pw_dir, align 8, !dbg !4503
  %cmp66 = icmp eq i8* %30, null, !dbg !4504
  br i1 %cmp66, label %if.then68, label %if.else69, !dbg !4505

if.then68:                                        ; preds = %lor.lhs.false65, %lor.lhs.false60, %lor.lhs.false56, %if.then52
  br label %if.end74, !dbg !4506

if.else69:                                        ; preds = %lor.lhs.false65
  %arraydecay70 = getelementptr inbounds [4352 x i8], [4352 x i8]* %buffer, i64 0, i64 0, !dbg !4508
  %31 = load %struct.passwd*, %struct.passwd** %pw, align 8, !dbg !4510
  %pw_dir71 = getelementptr inbounds %struct.passwd, %struct.passwd* %31, i32 0, i32 5, !dbg !4511
  %32 = load i8*, i8** %pw_dir71, align 8, !dbg !4511
  %33 = load i8*, i8** %dirscan, align 8, !dbg !4512
  %call72 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay70, i64 4352, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.124, i64 0, i64 0), i8* %32, i8* %33) #7, !dbg !4513
  %arraydecay73 = getelementptr inbounds [4352 x i8], [4352 x i8]* %buffer, i64 0, i64 0, !dbg !4514
  store i8* %arraydecay73, i8** %where, align 8, !dbg !4515
  br label %if.end74

if.end74:                                         ; preds = %if.else69, %if.then68
  br label %if.end75, !dbg !4516

if.end75:                                         ; preds = %if.end74, %if.else49
  br label %if.end76

if.end76:                                         ; preds = %if.end75, %cond.end45
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %cond.end
  br label %if.end78, !dbg !4517

if.end78:                                         ; preds = %if.end77, %if.end8
  %34 = load i8*, i8** %where, align 8, !dbg !4518
  %35 = load i8, i8* @dot_read_ok, align 1, !dbg !4520
  %conv79 = sext i8 %35 to i32, !dbg !4520
  %call80 = call i32 @checknamesanity(i8* %34, i32 %conv79), !dbg !4521
  %cmp81 = icmp ne i32 %call80, 0, !dbg !4522
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !4523

if.then83:                                        ; preds = %if.end78
  %36 = load i8*, i8** %where, align 8, !dbg !4524
  call void (i32, i8*, ...) @addreply(i32 553, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.125, i64 0, i64 0), i8* %36), !dbg !4526
  br label %return, !dbg !4527

if.end84:                                         ; preds = %if.end78
  %37 = load i8*, i8** %where, align 8, !dbg !4528
  %call85 = call i32 @chdir(i8* %37) #7, !dbg !4530
  %cmp86 = icmp ne i32 %call85, 0, !dbg !4531
  br i1 %cmp86, label %if.then88, label %if.end115, !dbg !4532

if.then88:                                        ; preds = %if.end84
  call void @llvm.dbg.declare(metadata i32* %real_errno, metadata !4533, metadata !DIExpression()), !dbg !4535
  %call89 = call i32* @__errno_location() #14, !dbg !4536
  %38 = load i32, i32* %call89, align 4, !dbg !4536
  store i32 %38, i32* %real_errno, align 4, !dbg !4535
  call void @llvm.dbg.declare(metadata i8** %where_alias, metadata !4537, metadata !DIExpression()), !dbg !4538
  %39 = load i8*, i8** %where, align 8, !dbg !4539
  %call90 = call i8* @lookup_alias(i8* %39), !dbg !4541
  store i8* %call90, i8** %where_alias, align 8, !dbg !4542
  %cmp91 = icmp eq i8* %call90, null, !dbg !4543
  br i1 %cmp91, label %if.then97, label %lor.lhs.false93, !dbg !4544

lor.lhs.false93:                                  ; preds = %if.then88
  %40 = load i8*, i8** %where_alias, align 8, !dbg !4545
  %call94 = call i32 @chdir(i8* %40) #7, !dbg !4546
  %cmp95 = icmp ne i32 %call94, 0, !dbg !4547
  br i1 %cmp95, label %if.then97, label %if.else99, !dbg !4548

if.then97:                                        ; preds = %lor.lhs.false93, %if.then88
  %41 = load i32, i32* %real_errno, align 4, !dbg !4549
  %call98 = call i32* @__errno_location() #14, !dbg !4551
  store i32 %41, i32* %call98, align 4, !dbg !4552
  br label %if.end100, !dbg !4553

if.else99:                                        ; preds = %lor.lhs.false93
  br label %chdir_success, !dbg !4554

if.end100:                                        ; preds = %if.then97
  %arraydecay101 = getelementptr inbounds [4352 x i8], [4352 x i8]* %buffer, i64 0, i64 0, !dbg !4556
  %42 = load i8*, i8** %dir.addr, align 8, !dbg !4556
  %call102 = call i32* @__errno_location() #14, !dbg !4556
  %43 = load i32, i32* %call102, align 4, !dbg !4556
  %call103 = call i8* @strerror(i32 %43) #7, !dbg !4556
  %call104 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay101, i64 4352, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.126, i64 0, i64 0), i8* %42, i8* %call103) #7, !dbg !4556
  %cmp105 = icmp sge i32 %call104, 4352, !dbg !4556
  br i1 %cmp105, label %if.then107, label %if.end108, !dbg !4558

if.then107:                                       ; preds = %if.end100
  call void @_EXIT(i32 1) #11, !dbg !4559
  unreachable, !dbg !4559

if.end108:                                        ; preds = %if.end100
  %arraydecay109 = getelementptr inbounds [4352 x i8], [4352 x i8]* %buffer, i64 0, i64 0, !dbg !4561
  call void (i32, i8*, ...) @logfile(i32 6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.51, i64 0, i64 0), i8* %arraydecay109), !dbg !4562
  %arraydecay110 = getelementptr inbounds [4352 x i8], [4352 x i8]* %buffer, i64 0, i64 0, !dbg !4563
  call void (i32, i8*, ...) @addreply(i32 550, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.51, i64 0, i64 0), i8* %arraydecay110), !dbg !4564
  %44 = load i64, i64* @cwd_failures, align 8, !dbg !4565
  %cmp111 = icmp uge i64 %44, 50, !dbg !4567
  br i1 %cmp111, label %if.then113, label %if.end114, !dbg !4568

if.then113:                                       ; preds = %if.end108
  call void @_EXIT(i32 1) #11, !dbg !4569
  unreachable, !dbg !4569

if.end114:                                        ; preds = %if.end108
  %45 = load i64, i64* @cwd_failures, align 8, !dbg !4571
  %inc = add i64 %45, 1, !dbg !4571
  store i64 %inc, i64* @cwd_failures, align 8, !dbg !4571
  br label %return, !dbg !4572

if.end115:                                        ; preds = %if.end84
  br label %chdir_success, !dbg !4573

chdir_success:                                    ; preds = %if.end115, %if.else99
  call void @llvm.dbg.label(metadata !4574), !dbg !4575
  store i64 0, i64* @cwd_failures, align 8, !dbg !4576
  call void @dobanner(i32 1), !dbg !4577
  %call116 = call i8* @getcwd(i8* getelementptr inbounds ([4097 x i8], [4097 x i8]* @wd, i64 0, i64 0), i64 4096) #7, !dbg !4578
  %cmp117 = icmp eq i8* %call116, null, !dbg !4580
  br i1 %cmp117, label %if.then119, label %if.end141, !dbg !4581

if.then119:                                       ; preds = %chdir_success
  %46 = load i8*, i8** %dir.addr, align 8, !dbg !4582
  %47 = load i8, i8* %46, align 1, !dbg !4585
  %conv120 = sext i8 %47 to i32, !dbg !4585
  %cmp121 = icmp eq i32 %conv120, 47, !dbg !4586
  br i1 %cmp121, label %if.then123, label %if.else129, !dbg !4587

if.then123:                                       ; preds = %if.then119
  %48 = load i8*, i8** %dir.addr, align 8, !dbg !4588
  %call124 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([4097 x i8], [4097 x i8]* @wd, i64 0, i64 0), i64 4097, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.51, i64 0, i64 0), i8* %48) #7, !dbg !4588
  %cmp125 = icmp sge i32 %call124, 4097, !dbg !4588
  br i1 %cmp125, label %if.then127, label %if.end128, !dbg !4591

if.then127:                                       ; preds = %if.then123
  call void @_EXIT(i32 1) #11, !dbg !4592
  unreachable, !dbg !4592

if.end128:                                        ; preds = %if.then123
  br label %if.end140, !dbg !4594

if.else129:                                       ; preds = %if.then119
  call void @llvm.dbg.declare(metadata i64* %dir_len, metadata !4595, metadata !DIExpression()), !dbg !4597
  %49 = load i8*, i8** %dir.addr, align 8, !dbg !4598
  %call130 = call i64 @strlen(i8* %49) #12, !dbg !4599
  store i64 %call130, i64* %dir_len, align 8, !dbg !4597
  call void @llvm.dbg.declare(metadata i64* %wd_len, metadata !4600, metadata !DIExpression()), !dbg !4601
  %call131 = call i64 @strlen(i8* getelementptr inbounds ([4097 x i8], [4097 x i8]* @wd, i64 0, i64 0)) #12, !dbg !4602
  store i64 %call131, i64* %wd_len, align 8, !dbg !4601
  %50 = load i64, i64* %dir_len, align 8, !dbg !4603
  %add = add i64 %50, 2, !dbg !4605
  %sub = sub i64 %add, 1, !dbg !4606
  %51 = load i64, i64* %wd_len, align 8, !dbg !4607
  %add132 = add i64 %sub, %51, !dbg !4608
  %add133 = add i64 %add132, 1, !dbg !4609
  %cmp134 = icmp ult i64 4097, %add133, !dbg !4610
  br i1 %cmp134, label %if.then136, label %if.end137, !dbg !4611

if.then136:                                       ; preds = %if.else129
  br label %kaboom, !dbg !4612

kaboom:                                           ; preds = %if.then136, %if.then31, %if.then
  call void @llvm.dbg.label(metadata !4613), !dbg !4615
  call void (i32, i32, i8*, ...) @die(i32 421, i32 3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.127, i64 0, i64 0)) #11, !dbg !4616
  unreachable, !dbg !4616

if.end137:                                        ; preds = %if.else129
  %call138 = call i8* @strcat(i8* getelementptr inbounds ([4097 x i8], [4097 x i8]* @wd, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.108, i64 0, i64 0)) #7, !dbg !4617
  %52 = load i8*, i8** %dir.addr, align 8, !dbg !4618
  %call139 = call i8* @strcat(i8* %call138, i8* %52) #7, !dbg !4619
  br label %if.end140

if.end140:                                        ; preds = %if.end137, %if.end128
  br label %if.end141, !dbg !4620

if.end141:                                        ; preds = %if.end140, %chdir_success
  call void (i32, i8*, ...) @addreply(i32 250, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.121, i64 0, i64 0), i8* getelementptr inbounds ([4097 x i8], [4097 x i8]* @wd, i64 0, i64 0)), !dbg !4621
  br label %return, !dbg !4622

return:                                           ; preds = %if.end141, %if.end114, %if.then83
  ret void, !dbg !4622
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @checknamesanity(i8* %name, i32 %dot_ok) #0 !dbg !4623 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %dot_ok.addr = alloca i32, align 4
  %namepnt = alloca i8*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !4626, metadata !DIExpression()), !dbg !4627
  store i32 %dot_ok, i32* %dot_ok.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dot_ok.addr, metadata !4628, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.declare(metadata i8** %namepnt, metadata !4630, metadata !DIExpression()), !dbg !4631
  %0 = load i8*, i8** %name.addr, align 8, !dbg !4632
  %cmp = icmp eq i8* %0, null, !dbg !4634
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4635

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %name.addr, align 8, !dbg !4636
  %2 = load i8, i8* %1, align 1, !dbg !4637
  %conv = sext i8 %2 to i32, !dbg !4637
  %cmp1 = icmp eq i32 %conv, 0, !dbg !4638
  br i1 %cmp1, label %if.then, label %if.end, !dbg !4639

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1, i32* %retval, align 4, !dbg !4640
  br label %return, !dbg !4640

if.end:                                           ; preds = %lor.lhs.false
  %3 = load i8*, i8** %name.addr, align 8, !dbg !4642
  %arrayidx = getelementptr i8, i8* %3, i64 0, !dbg !4642
  %4 = load i8, i8* %arrayidx, align 1, !dbg !4642
  %conv3 = sext i8 %4 to i32, !dbg !4642
  %cmp4 = icmp eq i32 %conv3, 46, !dbg !4644
  br i1 %cmp4, label %land.lhs.true, label %if.end21, !dbg !4645

land.lhs.true:                                    ; preds = %if.end
  %5 = load i8*, i8** %name.addr, align 8, !dbg !4646
  %arrayidx6 = getelementptr i8, i8* %5, i64 1, !dbg !4646
  %6 = load i8, i8* %arrayidx6, align 1, !dbg !4646
  %conv7 = sext i8 %6 to i32, !dbg !4646
  %cmp8 = icmp eq i32 %conv7, 0, !dbg !4647
  br i1 %cmp8, label %if.then20, label %lor.lhs.false10, !dbg !4648

lor.lhs.false10:                                  ; preds = %land.lhs.true
  %7 = load i8*, i8** %name.addr, align 8, !dbg !4649
  %arrayidx11 = getelementptr i8, i8* %7, i64 1, !dbg !4649
  %8 = load i8, i8* %arrayidx11, align 1, !dbg !4649
  %conv12 = sext i8 %8 to i32, !dbg !4649
  %cmp13 = icmp eq i32 %conv12, 46, !dbg !4650
  br i1 %cmp13, label %land.lhs.true15, label %if.end21, !dbg !4651

land.lhs.true15:                                  ; preds = %lor.lhs.false10
  %9 = load i8*, i8** %name.addr, align 8, !dbg !4652
  %arrayidx16 = getelementptr i8, i8* %9, i64 2, !dbg !4652
  %10 = load i8, i8* %arrayidx16, align 1, !dbg !4652
  %conv17 = sext i8 %10 to i32, !dbg !4652
  %cmp18 = icmp eq i32 %conv17, 0, !dbg !4653
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !4654

if.then20:                                        ; preds = %land.lhs.true15, %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !4655
  br label %return, !dbg !4655

if.end21:                                         ; preds = %land.lhs.true15, %lor.lhs.false10, %if.end
  %11 = load i8*, i8** %name.addr, align 8, !dbg !4657
  store i8* %11, i8** %namepnt, align 8, !dbg !4658
  br label %while.cond, !dbg !4659

while.cond:                                       ; preds = %if.end98, %if.then96, %if.then47, %if.end21
  %12 = load i8*, i8** %namepnt, align 8, !dbg !4660
  %13 = load i8, i8* %12, align 1, !dbg !4661
  %conv22 = sext i8 %13 to i32, !dbg !4661
  %cmp23 = icmp ne i32 %conv22, 0, !dbg !4662
  br i1 %cmp23, label %while.body, label %while.end, !dbg !4659

while.body:                                       ; preds = %while.cond
  %14 = load i8*, i8** %namepnt, align 8, !dbg !4663
  %15 = load i8, i8* %14, align 1, !dbg !4663
  %conv25 = sext i8 %15 to i32, !dbg !4663
  %cmp26 = icmp eq i32 %conv25, 127, !dbg !4663
  br i1 %cmp26, label %if.then36, label %lor.lhs.false28, !dbg !4663

lor.lhs.false28:                                  ; preds = %while.body
  %16 = load i8*, i8** %namepnt, align 8, !dbg !4663
  %17 = load i8, i8* %16, align 1, !dbg !4663
  %conv29 = zext i8 %17 to i32, !dbg !4663
  %cmp30 = icmp ult i32 %conv29, 32, !dbg !4663
  br i1 %cmp30, label %if.then36, label %lor.lhs.false32, !dbg !4666

lor.lhs.false32:                                  ; preds = %lor.lhs.false28
  %18 = load i8*, i8** %namepnt, align 8, !dbg !4667
  %19 = load i8, i8* %18, align 1, !dbg !4668
  %conv33 = sext i8 %19 to i32, !dbg !4668
  %cmp34 = icmp eq i32 %conv33, 92, !dbg !4669
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !4670

if.then36:                                        ; preds = %lor.lhs.false32, %lor.lhs.false28, %while.body
  store i32 -1, i32* %retval, align 4, !dbg !4671
  br label %return, !dbg !4671

if.end37:                                         ; preds = %lor.lhs.false32
  %20 = load i32, i32* %dot_ok.addr, align 4, !dbg !4673
  %cmp38 = icmp eq i32 %20, 0, !dbg !4675
  br i1 %cmp38, label %if.then40, label %if.end98, !dbg !4676

if.then40:                                        ; preds = %if.end37
  %21 = load i8*, i8** %namepnt, align 8, !dbg !4677
  %22 = load i8, i8* %21, align 1, !dbg !4680
  %conv41 = sext i8 %22 to i32, !dbg !4680
  %cmp42 = icmp eq i32 %conv41, 47, !dbg !4681
  br i1 %cmp42, label %if.then44, label %if.else, !dbg !4682

if.then44:                                        ; preds = %if.then40
  %23 = load i8*, i8** %namepnt, align 8, !dbg !4683
  %incdec.ptr = getelementptr i8, i8* %23, i32 1, !dbg !4683
  store i8* %incdec.ptr, i8** %namepnt, align 8, !dbg !4683
  br label %if.end50, !dbg !4685

if.else:                                          ; preds = %if.then40
  %24 = load i8*, i8** %namepnt, align 8, !dbg !4686
  %25 = load i8*, i8** %name.addr, align 8, !dbg !4688
  %cmp45 = icmp ne i8* %24, %25, !dbg !4689
  br i1 %cmp45, label %if.then47, label %if.end49, !dbg !4690

if.then47:                                        ; preds = %if.else
  %26 = load i8*, i8** %namepnt, align 8, !dbg !4691
  %incdec.ptr48 = getelementptr i8, i8* %26, i32 1, !dbg !4691
  store i8* %incdec.ptr48, i8** %namepnt, align 8, !dbg !4691
  br label %while.cond, !dbg !4693, !llvm.loop !4694

if.end49:                                         ; preds = %if.else
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then44
  %27 = load i8*, i8** %namepnt, align 8, !dbg !4696
  %arrayidx51 = getelementptr i8, i8* %27, i64 0, !dbg !4696
  %28 = load i8, i8* %arrayidx51, align 1, !dbg !4696
  %conv52 = sext i8 %28 to i32, !dbg !4696
  %cmp53 = icmp eq i32 %conv52, 0, !dbg !4698
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !4699

if.then55:                                        ; preds = %if.end50
  store i32 0, i32* %retval, align 4, !dbg !4700
  br label %return, !dbg !4700

if.end56:                                         ; preds = %if.end50
  %29 = load i8*, i8** %namepnt, align 8, !dbg !4702
  %arrayidx57 = getelementptr i8, i8* %29, i64 0, !dbg !4702
  %30 = load i8, i8* %arrayidx57, align 1, !dbg !4702
  %conv58 = sext i8 %30 to i32, !dbg !4702
  %cmp59 = icmp eq i32 %conv58, 46, !dbg !4704
  br i1 %cmp59, label %if.then61, label %if.end93, !dbg !4705

if.then61:                                        ; preds = %if.end56
  %31 = load i8*, i8** %namepnt, align 8, !dbg !4706
  %arrayidx62 = getelementptr i8, i8* %31, i64 1, !dbg !4706
  %32 = load i8, i8* %arrayidx62, align 1, !dbg !4706
  %conv63 = sext i8 %32 to i32, !dbg !4706
  %cmp64 = icmp eq i32 %conv63, 0, !dbg !4709
  br i1 %cmp64, label %if.then66, label %if.end67, !dbg !4710

if.then66:                                        ; preds = %if.then61
  store i32 0, i32* %retval, align 4, !dbg !4711
  br label %return, !dbg !4711

if.end67:                                         ; preds = %if.then61
  %33 = load i8*, i8** %namepnt, align 8, !dbg !4713
  %arrayidx68 = getelementptr i8, i8* %33, i64 1, !dbg !4713
  %34 = load i8, i8* %arrayidx68, align 1, !dbg !4713
  %conv69 = sext i8 %34 to i32, !dbg !4713
  %cmp70 = icmp eq i32 %conv69, 46, !dbg !4715
  br i1 %cmp70, label %if.then72, label %if.else85, !dbg !4716

if.then72:                                        ; preds = %if.end67
  %35 = load i8*, i8** %namepnt, align 8, !dbg !4717
  %arrayidx73 = getelementptr i8, i8* %35, i64 2, !dbg !4717
  %36 = load i8, i8* %arrayidx73, align 1, !dbg !4717
  %conv74 = sext i8 %36 to i32, !dbg !4717
  %cmp75 = icmp eq i32 %conv74, 0, !dbg !4720
  br i1 %cmp75, label %if.then77, label %if.end78, !dbg !4721

if.then77:                                        ; preds = %if.then72
  store i32 0, i32* %retval, align 4, !dbg !4722
  br label %return, !dbg !4722

if.end78:                                         ; preds = %if.then72
  %37 = load i8*, i8** %namepnt, align 8, !dbg !4724
  %arrayidx79 = getelementptr i8, i8* %37, i64 2, !dbg !4724
  %38 = load i8, i8* %arrayidx79, align 1, !dbg !4724
  %conv80 = sext i8 %38 to i32, !dbg !4724
  %cmp81 = icmp ne i32 %conv80, 47, !dbg !4726
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !4727

if.then83:                                        ; preds = %if.end78
  store i32 -1, i32* %retval, align 4, !dbg !4728
  br label %return, !dbg !4728

if.end84:                                         ; preds = %if.end78
  br label %if.end92, !dbg !4730

if.else85:                                        ; preds = %if.end67
  %39 = load i8*, i8** %namepnt, align 8, !dbg !4731
  %arrayidx86 = getelementptr i8, i8* %39, i64 1, !dbg !4731
  %40 = load i8, i8* %arrayidx86, align 1, !dbg !4731
  %conv87 = sext i8 %40 to i32, !dbg !4731
  %cmp88 = icmp ne i32 %conv87, 47, !dbg !4733
  br i1 %cmp88, label %if.then90, label %if.end91, !dbg !4734

if.then90:                                        ; preds = %if.else85
  store i32 -1, i32* %retval, align 4, !dbg !4735
  br label %return, !dbg !4735

if.end91:                                         ; preds = %if.else85
  br label %if.end92

if.end92:                                         ; preds = %if.end91, %if.end84
  br label %if.end93, !dbg !4737

if.end93:                                         ; preds = %if.end92, %if.end56
  %41 = load i8*, i8** %namepnt, align 8, !dbg !4738
  %42 = load i8*, i8** %name.addr, align 8, !dbg !4740
  %cmp94 = icmp ne i8* %41, %42, !dbg !4741
  br i1 %cmp94, label %if.then96, label %if.end97, !dbg !4742

if.then96:                                        ; preds = %if.end93
  br label %while.cond, !dbg !4743, !llvm.loop !4694

if.end97:                                         ; preds = %if.end93
  br label %if.end98, !dbg !4745

if.end98:                                         ; preds = %if.end97, %if.end37
  %43 = load i8*, i8** %namepnt, align 8, !dbg !4746
  %incdec.ptr99 = getelementptr i8, i8* %43, i32 1, !dbg !4746
  store i8* %incdec.ptr99, i8** %namepnt, align 8, !dbg !4746
  br label %while.cond, !dbg !4659, !llvm.loop !4694

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !4747
  br label %return, !dbg !4747

return:                                           ; preds = %while.end, %if.then90, %if.then83, %if.then77, %if.then66, %if.then55, %if.then36, %if.then20, %if.then
  %44 = load i32, i32* %retval, align 4, !dbg !4748
  ret i32 %44, !dbg !4748
}

; Function Attrs: nounwind
declare i8* @strcat(i8*, i8*) #2

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local i32 @zrand() #0 !dbg !4749 {
entry:
  %call = call i32 @alt_arc4random(), !dbg !4752
  ret i32 %call, !dbg !4753
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @dopasv(i32 %psvtype) #0 !dbg !4754 {
entry:
  %psvtype.addr = alloca i32, align 4
  %dataconn = alloca %struct.sockaddr_storage, align 8
  %a = alloca i64, align 8
  %p = alloca i32, align 4
  %on = alloca i32, align 4
  %firstporttried = alloca i32, align 4
  %agg.tmp = alloca %union.__SOCKADDR_ARG, align 8
  store i32 %psvtype, i32* %psvtype.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %psvtype.addr, metadata !4755, metadata !DIExpression()), !dbg !4756
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage* %dataconn, metadata !4757, metadata !DIExpression()), !dbg !4758
  call void @llvm.dbg.declare(metadata i64* %a, metadata !4759, metadata !DIExpression()), !dbg !4760
  store i64 0, i64* %a, align 8, !dbg !4760
  call void @llvm.dbg.declare(metadata i32* %p, metadata !4761, metadata !DIExpression()), !dbg !4762
  call void @llvm.dbg.declare(metadata i32* %on, metadata !4763, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.declare(metadata i32* %firstporttried, metadata !4765, metadata !DIExpression()), !dbg !4766
  %0 = load i8, i8* @loggedin, align 1, !dbg !4767
  %conv = sext i8 %0 to i32, !dbg !4767
  %cmp = icmp eq i32 %conv, 0, !dbg !4769
  br i1 %cmp, label %if.then, label %if.end, !dbg !4770

if.then:                                          ; preds = %entry
  call void @addreply_noformat(i32 530, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.128, i64 0, i64 0)), !dbg !4771
  br label %return, !dbg !4773

if.end:                                           ; preds = %entry
  %1 = load i32, i32* @datafd, align 4, !dbg !4774
  %cmp2 = icmp ne i32 %1, -1, !dbg !4776
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !4777

if.then4:                                         ; preds = %if.end
  %2 = load i32, i32* @datafd, align 4, !dbg !4778
  %call = call i32 @close(i32 %2), !dbg !4780
  store i32 -1, i32* @datafd, align 4, !dbg !4781
  br label %if.end5, !dbg !4782

if.end5:                                          ; preds = %if.then4, %if.end
  call void @fourinsix(%struct.sockaddr_storage* @ctrlconn), !dbg !4783
  %3 = load i16, i16* getelementptr inbounds (%struct.sockaddr_storage, %struct.sockaddr_storage* @ctrlconn, i32 0, i32 0), align 8, !dbg !4784
  %conv6 = zext i16 %3 to i32, !dbg !4784
  %cmp7 = icmp eq i32 %conv6, 10, !dbg !4786
  br i1 %cmp7, label %land.lhs.true, label %if.end12, !dbg !4787

land.lhs.true:                                    ; preds = %if.end5
  %4 = load i32, i32* %psvtype.addr, align 4, !dbg !4788
  %cmp9 = icmp eq i32 %4, 0, !dbg !4789
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !4790

if.then11:                                        ; preds = %land.lhs.true
  call void @addreply_noformat(i32 425, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.129, i64 0, i64 0)), !dbg !4791
  br label %return, !dbg !4793

if.end12:                                         ; preds = %land.lhs.true, %if.end5
  %5 = load i32, i32* @firstport, align 4, !dbg !4794
  %call13 = call i32 @zrand(), !dbg !4795
  %6 = load i32, i32* @lastport, align 4, !dbg !4796
  %7 = load i32, i32* @firstport, align 4, !dbg !4797
  %sub = sub i32 %6, %7, !dbg !4798
  %add = add i32 %sub, 1, !dbg !4799
  %rem = urem i32 %call13, %add, !dbg !4800
  %add14 = add i32 %5, %rem, !dbg !4801
  store i32 %add14, i32* %firstporttried, align 4, !dbg !4802
  %8 = load i32, i32* %firstporttried, align 4, !dbg !4803
  store i32 %8, i32* %p, align 4, !dbg !4804
  %9 = load i16, i16* getelementptr inbounds (%struct.sockaddr_storage, %struct.sockaddr_storage* @ctrlconn, i32 0, i32 0), align 8, !dbg !4805
  %conv15 = zext i16 %9 to i32, !dbg !4805
  %call16 = call i32 @socket(i32 %conv15, i32 1, i32 6) #7, !dbg !4806
  store i32 %call16, i32* @datafd, align 4, !dbg !4807
  %10 = load i32, i32* @datafd, align 4, !dbg !4808
  %cmp17 = icmp eq i32 %10, -1, !dbg !4810
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !4811

if.then19:                                        ; preds = %if.end12
  call void @error(i32 425, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.68, i64 0, i64 0)), !dbg !4812
  br label %return, !dbg !4814

if.end20:                                         ; preds = %if.end12
  store i32 1, i32* %on, align 4, !dbg !4815
  %11 = load i32, i32* @datafd, align 4, !dbg !4816
  %12 = bitcast i32* %on to i8*, !dbg !4818
  %call21 = call i32 @setsockopt(i32 %11, i32 1, i32 2, i8* %12, i32 4) #7, !dbg !4819
  %cmp22 = icmp slt i32 %call21, 0, !dbg !4820
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !4821

if.then24:                                        ; preds = %if.end20
  call void @error(i32 421, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.130, i64 0, i64 0)), !dbg !4822
  br label %return, !dbg !4824

if.end25:                                         ; preds = %if.end20
  %13 = bitcast %struct.sockaddr_storage* %dataconn to i8*, !dbg !4825
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 bitcast (%struct.sockaddr_storage* @ctrlconn to i8*), i64 128, i1 false), !dbg !4825
  br label %for.cond, !dbg !4826

for.cond:                                         ; preds = %if.end55, %if.end25
  %ss_family = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %dataconn, i32 0, i32 0, !dbg !4827
  %14 = load i16, i16* %ss_family, align 8, !dbg !4827
  %conv26 = zext i16 %14 to i32, !dbg !4827
  %cmp27 = icmp eq i32 %conv26, 10, !dbg !4832
  br i1 %cmp27, label %if.then29, label %if.else, !dbg !4833

if.then29:                                        ; preds = %for.cond
  %15 = load i32, i32* %p, align 4, !dbg !4834
  %conv30 = trunc i32 %15 to i16, !dbg !4834
  %call31 = call zeroext i16 @htons(i16 zeroext %conv30) #14, !dbg !4836
  %call32 = call i16* @storage_port6(%struct.sockaddr_storage* %dataconn), !dbg !4837
  store i16 %call31, i16* %call32, align 2, !dbg !4838
  br label %if.end36, !dbg !4839

if.else:                                          ; preds = %for.cond
  %16 = load i32, i32* %p, align 4, !dbg !4840
  %conv33 = trunc i32 %16 to i16, !dbg !4840
  %call34 = call zeroext i16 @htons(i16 zeroext %conv33) #14, !dbg !4842
  %call35 = call i16* @storage_port(%struct.sockaddr_storage* %dataconn), !dbg !4843
  store i16 %call34, i16* %call35, align 2, !dbg !4844
  br label %if.end36

if.end36:                                         ; preds = %if.else, %if.then29
  %17 = load i32, i32* @datafd, align 4, !dbg !4845
  %__sockaddr__ = bitcast %union.__SOCKADDR_ARG* %agg.tmp to %struct.sockaddr**, !dbg !4847
  %18 = bitcast %struct.sockaddr_storage* %dataconn to %struct.sockaddr*, !dbg !4847
  store %struct.sockaddr* %18, %struct.sockaddr** %__sockaddr__, align 8, !dbg !4847
  %ss_family37 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %dataconn, i32 0, i32 0, !dbg !4848
  %19 = load i16, i16* %ss_family37, align 8, !dbg !4848
  %conv38 = zext i16 %19 to i32, !dbg !4848
  %cmp39 = icmp eq i32 %conv38, 2, !dbg !4848
  %20 = zext i1 %cmp39 to i64, !dbg !4848
  %cond = select i1 %cmp39, i64 16, i64 28, !dbg !4848
  %conv41 = trunc i64 %cond to i32, !dbg !4848
  %coerce.dive = getelementptr inbounds %union.__SOCKADDR_ARG, %union.__SOCKADDR_ARG* %agg.tmp, i32 0, i32 0, !dbg !4849
  %21 = load %struct.sockaddr*, %struct.sockaddr** %coerce.dive, align 8, !dbg !4849
  %call42 = call i32 @bind(i32 %17, %struct.sockaddr* %21, i32 %conv41) #7, !dbg !4849
  %cmp43 = icmp eq i32 %call42, 0, !dbg !4850
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !4851

if.then45:                                        ; preds = %if.end36
  br label %for.end, !dbg !4852

if.end46:                                         ; preds = %if.end36
  %22 = load i32, i32* %p, align 4, !dbg !4854
  %dec = add i32 %22, -1, !dbg !4854
  store i32 %dec, i32* %p, align 4, !dbg !4854
  %23 = load i32, i32* %p, align 4, !dbg !4855
  %24 = load i32, i32* @firstport, align 4, !dbg !4857
  %cmp47 = icmp ult i32 %23, %24, !dbg !4858
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !4859

if.then49:                                        ; preds = %if.end46
  %25 = load i32, i32* @lastport, align 4, !dbg !4860
  store i32 %25, i32* %p, align 4, !dbg !4862
  br label %if.end50, !dbg !4863

if.end50:                                         ; preds = %if.then49, %if.end46
  %26 = load i32, i32* %p, align 4, !dbg !4864
  %27 = load i32, i32* %firstporttried, align 4, !dbg !4866
  %cmp51 = icmp eq i32 %26, %27, !dbg !4867
  br i1 %cmp51, label %if.then53, label %if.end55, !dbg !4868

if.then53:                                        ; preds = %if.end50
  %28 = load i32, i32* @datafd, align 4, !dbg !4869
  %call54 = call i32 @close(i32 %28), !dbg !4871
  store i32 -1, i32* @datafd, align 4, !dbg !4872
  call void @addreply_noformat(i32 425, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.131, i64 0, i64 0)), !dbg !4873
  br label %return, !dbg !4874

if.end55:                                         ; preds = %if.end50
  br label %for.cond, !dbg !4875, !llvm.loop !4876

for.end:                                          ; preds = %if.then45
  %29 = load i32, i32* @datafd, align 4, !dbg !4879
  %call56 = call i32 @listen(i32 %29, i32 8) #7, !dbg !4881
  %cmp57 = icmp slt i32 %call56, 0, !dbg !4882
  br i1 %cmp57, label %if.then59, label %if.end61, !dbg !4883

if.then59:                                        ; preds = %for.end
  %30 = load i32, i32* @datafd, align 4, !dbg !4884
  %call60 = call i32 @close(i32 %30), !dbg !4886
  store i32 -1, i32* @datafd, align 4, !dbg !4887
  call void @error(i32 425, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.69, i64 0, i64 0)), !dbg !4888
  br label %return, !dbg !4889

if.end61:                                         ; preds = %for.end
  %31 = load i32, i32* %psvtype.addr, align 4, !dbg !4890
  switch i32 %31, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb96
    i32 2, label %sw.bb97
  ], !dbg !4891

sw.bb:                                            ; preds = %if.end61
  %32 = load i16, i16* getelementptr inbounds (%struct.sockaddr_storage, %struct.sockaddr_storage* @force_passive_ip, i32 0, i32 0), align 8, !dbg !4892
  %conv62 = zext i16 %32 to i32, !dbg !4892
  %cmp63 = icmp eq i32 %conv62, 0, !dbg !4895
  br i1 %cmp63, label %if.then65, label %if.else69, !dbg !4896

if.then65:                                        ; preds = %sw.bb
  %call66 = call %struct.in_addr* @storage_sin_addr_const(%struct.sockaddr_storage* %dataconn), !dbg !4897
  %s_addr = getelementptr inbounds %struct.in_addr, %struct.in_addr* %call66, i32 0, i32 0, !dbg !4897
  %33 = load i32, i32* %s_addr, align 4, !dbg !4897
  %call67 = call i32 @ntohl(i32 %33) #14, !dbg !4899
  %conv68 = zext i32 %call67 to i64, !dbg !4899
  store i64 %conv68, i64* %a, align 8, !dbg !4900
  br label %if.end87, !dbg !4901

if.else69:                                        ; preds = %sw.bb
  %34 = load i16, i16* getelementptr inbounds (%struct.sockaddr_storage, %struct.sockaddr_storage* @force_passive_ip, i32 0, i32 0), align 8, !dbg !4902
  %conv70 = zext i16 %34 to i32, !dbg !4902
  %cmp71 = icmp eq i32 %conv70, 10, !dbg !4904
  br i1 %cmp71, label %if.then73, label %if.else75, !dbg !4905

if.then73:                                        ; preds = %if.else69
  %35 = load i32, i32* @datafd, align 4, !dbg !4906
  %call74 = call i32 @close(i32 %35), !dbg !4908
  store i32 -1, i32* @datafd, align 4, !dbg !4909
  call void @addreply_noformat(i32 425, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.132, i64 0, i64 0)), !dbg !4910
  br label %return, !dbg !4911

if.else75:                                        ; preds = %if.else69
  %36 = load i16, i16* getelementptr inbounds (%struct.sockaddr_storage, %struct.sockaddr_storage* @force_passive_ip, i32 0, i32 0), align 8, !dbg !4912
  %conv76 = zext i16 %36 to i32, !dbg !4912
  %cmp77 = icmp eq i32 %conv76, 2, !dbg !4914
  br i1 %cmp77, label %if.then79, label %if.else84, !dbg !4915

if.then79:                                        ; preds = %if.else75
  %call80 = call %struct.in_addr* @storage_sin_addr_const(%struct.sockaddr_storage* @force_passive_ip), !dbg !4916
  %s_addr81 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %call80, i32 0, i32 0, !dbg !4916
  %37 = load i32, i32* %s_addr81, align 4, !dbg !4916
  %call82 = call i32 @ntohl(i32 %37) #14, !dbg !4918
  %conv83 = zext i32 %call82 to i64, !dbg !4918
  store i64 %conv83, i64* %a, align 8, !dbg !4919
  br label %if.end85, !dbg !4920

if.else84:                                        ; preds = %if.else75
  call void @_EXIT(i32 1) #11, !dbg !4921
  unreachable, !dbg !4921

if.end85:                                         ; preds = %if.then79
  br label %if.end86

if.end86:                                         ; preds = %if.end85
  br label %if.end87

if.end87:                                         ; preds = %if.end86, %if.then65
  %38 = load i64, i64* %a, align 8, !dbg !4923
  %shr = lshr i64 %38, 24, !dbg !4924
  %and = and i64 %shr, 255, !dbg !4925
  %39 = load i64, i64* %a, align 8, !dbg !4926
  %shr88 = lshr i64 %39, 16, !dbg !4927
  %and89 = and i64 %shr88, 255, !dbg !4928
  %40 = load i64, i64* %a, align 8, !dbg !4929
  %shr90 = lshr i64 %40, 8, !dbg !4930
  %and91 = and i64 %shr90, 255, !dbg !4931
  %41 = load i64, i64* %a, align 8, !dbg !4932
  %and92 = and i64 %41, 255, !dbg !4933
  %42 = load i32, i32* %p, align 4, !dbg !4934
  %shr93 = lshr i32 %42, 8, !dbg !4935
  %and94 = and i32 %shr93, 255, !dbg !4936
  %43 = load i32, i32* %p, align 4, !dbg !4937
  %and95 = and i32 %43, 255, !dbg !4938
  call void (i32, i8*, ...) @addreply(i32 227, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.133, i64 0, i64 0), i64 %and, i64 %and89, i64 %and91, i64 %and92, i32 %and94, i32 %and95), !dbg !4939
  br label %sw.epilog, !dbg !4940

sw.bb96:                                          ; preds = %if.end61
  %44 = load i32, i32* %p, align 4, !dbg !4941
  call void (i32, i8*, ...) @addreply(i32 229, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.134, i64 0, i64 0), i32 %44), !dbg !4942
  br label %sw.epilog, !dbg !4943

sw.bb97:                                          ; preds = %if.end61
  %45 = load i32, i32* %p, align 4, !dbg !4944
  call void (i32, i8*, ...) @addreply(i32 227, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.135, i64 0, i64 0), i32 %45), !dbg !4945
  br label %sw.epilog, !dbg !4946

sw.default:                                       ; preds = %if.end61
  call void @_EXIT(i32 1) #11, !dbg !4947
  unreachable, !dbg !4947

sw.epilog:                                        ; preds = %sw.bb97, %sw.bb96, %if.end87
  store i8 1, i8* @passive, align 1, !dbg !4948
  br label %return, !dbg !4949

return:                                           ; preds = %sw.epilog, %if.then73, %if.then59, %if.then53, %if.then24, %if.then19, %if.then11, %if.then
  ret void, !dbg !4949
}

; Function Attrs: nounwind
declare i32 @listen(i32, i32) #2

; Function Attrs: nounwind readnone
declare i32 @ntohl(i32) #10

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @doport(i8* %arg) #0 !dbg !4950 {
entry:
  %arg.addr = alloca i8*, align 8
  %a1 = alloca i32, align 4
  %a2 = alloca i32, align 4
  %a3 = alloca i32, align 4
  %a4 = alloca i32, align 4
  %p1 = alloca i32, align 4
  %p2 = alloca i32, align 4
  %a = alloca %struct.sockaddr_storage, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !4951, metadata !DIExpression()), !dbg !4952
  call void @llvm.dbg.declare(metadata i32* %a1, metadata !4953, metadata !DIExpression()), !dbg !4954
  call void @llvm.dbg.declare(metadata i32* %a2, metadata !4955, metadata !DIExpression()), !dbg !4956
  call void @llvm.dbg.declare(metadata i32* %a3, metadata !4957, metadata !DIExpression()), !dbg !4958
  call void @llvm.dbg.declare(metadata i32* %a4, metadata !4959, metadata !DIExpression()), !dbg !4960
  call void @llvm.dbg.declare(metadata i32* %p1, metadata !4961, metadata !DIExpression()), !dbg !4962
  call void @llvm.dbg.declare(metadata i32* %p2, metadata !4963, metadata !DIExpression()), !dbg !4964
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage* %a, metadata !4965, metadata !DIExpression()), !dbg !4966
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !4967
  %call = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.136, i64 0, i64 0), i32* %a1, i32* %a2, i32* %a3, i32* %a4, i32* %p1, i32* %p2) #7, !dbg !4969
  %cmp = icmp ne i32 %call, 6, !dbg !4970
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4971

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %a1, align 4, !dbg !4972
  %cmp1 = icmp ugt i32 %1, 255, !dbg !4973
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !4974

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i32, i32* %a2, align 4, !dbg !4975
  %cmp3 = icmp ugt i32 %2, 255, !dbg !4976
  br i1 %cmp3, label %if.then, label %lor.lhs.false4, !dbg !4977

lor.lhs.false4:                                   ; preds = %lor.lhs.false2
  %3 = load i32, i32* %a3, align 4, !dbg !4978
  %cmp5 = icmp ugt i32 %3, 255, !dbg !4979
  br i1 %cmp5, label %if.then, label %lor.lhs.false6, !dbg !4980

lor.lhs.false6:                                   ; preds = %lor.lhs.false4
  %4 = load i32, i32* %a4, align 4, !dbg !4981
  %cmp7 = icmp ugt i32 %4, 255, !dbg !4982
  br i1 %cmp7, label %if.then, label %lor.lhs.false8, !dbg !4983

lor.lhs.false8:                                   ; preds = %lor.lhs.false6
  %5 = load i32, i32* %p1, align 4, !dbg !4984
  %cmp9 = icmp ugt i32 %5, 255, !dbg !4985
  br i1 %cmp9, label %if.then, label %lor.lhs.false10, !dbg !4986

lor.lhs.false10:                                  ; preds = %lor.lhs.false8
  %6 = load i32, i32* %p2, align 4, !dbg !4987
  %cmp11 = icmp ugt i32 %6, 255, !dbg !4988
  br i1 %cmp11, label %if.then, label %lor.lhs.false12, !dbg !4989

lor.lhs.false12:                                  ; preds = %lor.lhs.false10
  %7 = load i32, i32* %a1, align 4, !dbg !4990
  %8 = load i32, i32* %a2, align 4, !dbg !4991
  %or = or i32 %7, %8, !dbg !4992
  %9 = load i32, i32* %a3, align 4, !dbg !4993
  %or13 = or i32 %or, %9, !dbg !4994
  %10 = load i32, i32* %a4, align 4, !dbg !4995
  %or14 = or i32 %or13, %10, !dbg !4996
  %cmp15 = icmp eq i32 %or14, 0, !dbg !4997
  br i1 %cmp15, label %if.then, label %lor.lhs.false16, !dbg !4998

lor.lhs.false16:                                  ; preds = %lor.lhs.false12
  %11 = load i32, i32* %p1, align 4, !dbg !4999
  %12 = load i32, i32* %p2, align 4, !dbg !5000
  %or17 = or i32 %11, %12, !dbg !5001
  %cmp18 = icmp eq i32 %or17, 0, !dbg !5002
  br i1 %cmp18, label %if.then, label %if.end, !dbg !5003

if.then:                                          ; preds = %lor.lhs.false16, %lor.lhs.false12, %lor.lhs.false10, %lor.lhs.false8, %lor.lhs.false6, %lor.lhs.false4, %lor.lhs.false2, %lor.lhs.false, %entry
  call void @addreply_noformat(i32 501, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.71, i64 0, i64 0)), !dbg !5004
  br label %return, !dbg !5006

if.end:                                           ; preds = %lor.lhs.false16
  %13 = bitcast %struct.sockaddr_storage* %a to i8*, !dbg !5007
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 128, i1 false), !dbg !5007
  %ss_family = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %a, i32 0, i32 0, !dbg !5008
  store i16 2, i16* %ss_family, align 8, !dbg !5009
  %14 = load i32, i32* %a1, align 4, !dbg !5010
  %shl = shl i32 %14, 24, !dbg !5011
  %15 = load i32, i32* %a2, align 4, !dbg !5012
  %shl19 = shl i32 %15, 16, !dbg !5013
  %or20 = or i32 %shl, %shl19, !dbg !5014
  %16 = load i32, i32* %a3, align 4, !dbg !5015
  %shl21 = shl i32 %16, 8, !dbg !5016
  %or22 = or i32 %or20, %shl21, !dbg !5017
  %17 = load i32, i32* %a4, align 4, !dbg !5018
  %or23 = or i32 %or22, %17, !dbg !5019
  %call24 = call i32 @htonl(i32 %or23) #14, !dbg !5020
  %call25 = call %struct.in_addr* @storage_sin_addr(%struct.sockaddr_storage* %a), !dbg !5021
  %s_addr = getelementptr inbounds %struct.in_addr, %struct.in_addr* %call25, i32 0, i32 0, !dbg !5021
  store i32 %call24, i32* %s_addr, align 4, !dbg !5022
  %18 = load i32, i32* %p1, align 4, !dbg !5023
  %shl26 = shl i32 %18, 8, !dbg !5024
  %19 = load i32, i32* %p2, align 4, !dbg !5025
  %or27 = or i32 %shl26, %19, !dbg !5026
  call void @doport2(%struct.sockaddr_storage* byval(%struct.sockaddr_storage) align 8 %a, i32 %or27), !dbg !5027
  br label %return, !dbg !5028

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !5028
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @dochmod(i8* %name, i32 %mode) #0 !dbg !474 {
entry:
  %name.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  %st2 = alloca %struct.stat, align 8
  %fd = alloca i32, align 4
  %st = alloca %struct.stat, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !5029, metadata !DIExpression()), !dbg !5030
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !5031, metadata !DIExpression()), !dbg !5032
  call void @llvm.dbg.declare(metadata %struct.stat* %st2, metadata !5033, metadata !DIExpression()), !dbg !5034
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !5035, metadata !DIExpression()), !dbg !5036
  store i32 -1, i32* %fd, align 4, !dbg !5036
  %0 = load i8, i8* @nochmod, align 1, !dbg !5037
  %conv = sext i8 %0 to i32, !dbg !5037
  %cmp = icmp ne i32 %conv, 0, !dbg !5039
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5040

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* getelementptr inbounds (%struct.AuthResult_, %struct.AuthResult_* @authresult, i32 0, i32 1), align 4, !dbg !5041
  %cmp2 = icmp ne i32 %1, 0, !dbg !5042
  br i1 %cmp2, label %if.then, label %if.end, !dbg !5043

if.then:                                          ; preds = %land.lhs.true
  %2 = load i8*, i8** %name.addr, align 8, !dbg !5044
  call void (i32, i8*, ...) @addreply(i32 550, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.147, i64 0, i64 0), i8* %2), !dbg !5046
  br label %return, !dbg !5047

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load i8, i8* @guest, align 1, !dbg !5048
  %conv4 = sext i8 %3 to i32, !dbg !5048
  %cmp5 = icmp ne i32 %conv4, 0, !dbg !5050
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !5051

if.then7:                                         ; preds = %if.end
  call void @addreply_noformat(i32 550, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.148, i64 0, i64 0)), !dbg !5052
  br label %return, !dbg !5054

if.end8:                                          ; preds = %if.end
  %4 = load i8*, i8** %name.addr, align 8, !dbg !5055
  %cmp9 = icmp eq i8* %4, null, !dbg !5057
  br i1 %cmp9, label %if.then14, label %lor.lhs.false, !dbg !5058

lor.lhs.false:                                    ; preds = %if.end8
  %5 = load i8*, i8** %name.addr, align 8, !dbg !5059
  %6 = load i8, i8* %5, align 1, !dbg !5060
  %conv11 = sext i8 %6 to i32, !dbg !5060
  %cmp12 = icmp eq i32 %conv11, 0, !dbg !5061
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !5062

if.then14:                                        ; preds = %lor.lhs.false, %if.end8
  call void @addreply_noformat(i32 501, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.149, i64 0, i64 0)), !dbg !5063
  br label %return, !dbg !5065

if.end15:                                         ; preds = %lor.lhs.false
  %7 = load i8*, i8** %name.addr, align 8, !dbg !5066
  %8 = load i8, i8* @dot_write_ok, align 1, !dbg !5068
  %conv16 = sext i8 %8 to i32, !dbg !5068
  %call = call i32 @checknamesanity(i8* %7, i32 %conv16), !dbg !5069
  %cmp17 = icmp ne i32 %call, 0, !dbg !5070
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !5071

if.then19:                                        ; preds = %if.end15
  %9 = load i8*, i8** %name.addr, align 8, !dbg !5072
  call void (i32, i8*, ...) @addreply(i32 553, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.125, i64 0, i64 0), i8* %9), !dbg !5074
  br label %return, !dbg !5075

if.end20:                                         ; preds = %if.end15
  %10 = load i8*, i8** %name.addr, align 8, !dbg !5076
  %call21 = call i32 (i8*, i32, ...) @open(i8* %10, i32 0), !dbg !5077
  store i32 %call21, i32* %fd, align 4, !dbg !5078
  %11 = load i32, i32* %fd, align 4, !dbg !5079
  %cmp22 = icmp eq i32 %11, -1, !dbg !5081
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !5082

if.then24:                                        ; preds = %if.end20
  br label %failure, !dbg !5083

if.end25:                                         ; preds = %if.end20
  %12 = load i64, i64* @dochmod.root_st_dev, align 8, !dbg !5085
  %13 = load i64, i64* @dochmod.root_st_ino, align 8, !dbg !5087
  %or = or i64 %12, %13, !dbg !5088
  %cmp26 = icmp eq i64 %or, 0, !dbg !5089
  br i1 %cmp26, label %if.then28, label %if.end34, !dbg !5090

if.then28:                                        ; preds = %if.end25
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !5091, metadata !DIExpression()), !dbg !5093
  %call29 = call i32 @stat(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.108, i64 0, i64 0), %struct.stat* %st) #7, !dbg !5094
  %cmp30 = icmp ne i32 %call29, 0, !dbg !5096
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !5097

if.then32:                                        ; preds = %if.then28
  br label %failure, !dbg !5098

if.end33:                                         ; preds = %if.then28
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 0, !dbg !5100
  %14 = load i64, i64* %st_dev, align 8, !dbg !5100
  store i64 %14, i64* @dochmod.root_st_dev, align 8, !dbg !5101
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 1, !dbg !5102
  %15 = load i64, i64* %st_ino, align 8, !dbg !5102
  store i64 %15, i64* @dochmod.root_st_ino, align 8, !dbg !5103
  br label %if.end34, !dbg !5104

if.end34:                                         ; preds = %if.end33, %if.end25
  %16 = load i32, i32* %fd, align 4, !dbg !5105
  %call35 = call i32 @fstat(i32 %16, %struct.stat* %st2) #7, !dbg !5107
  %cmp36 = icmp ne i32 %call35, 0, !dbg !5108
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !5109

if.then38:                                        ; preds = %if.end34
  br label %failure, !dbg !5110

if.end39:                                         ; preds = %if.end34
  %st_ino40 = getelementptr inbounds %struct.stat, %struct.stat* %st2, i32 0, i32 1, !dbg !5112
  %17 = load i64, i64* %st_ino40, align 8, !dbg !5112
  %18 = load i64, i64* @dochmod.root_st_ino, align 8, !dbg !5114
  %cmp41 = icmp eq i64 %17, %18, !dbg !5115
  br i1 %cmp41, label %land.lhs.true43, label %if.else, !dbg !5116

land.lhs.true43:                                  ; preds = %if.end39
  %st_dev44 = getelementptr inbounds %struct.stat, %struct.stat* %st2, i32 0, i32 0, !dbg !5117
  %19 = load i64, i64* %st_dev44, align 8, !dbg !5117
  %20 = load i64, i64* @dochmod.root_st_dev, align 8, !dbg !5118
  %cmp45 = icmp eq i64 %19, %20, !dbg !5119
  br i1 %cmp45, label %if.then47, label %if.else, !dbg !5120

if.then47:                                        ; preds = %land.lhs.true43
  %21 = load i32, i32* %mode.addr, align 4, !dbg !5121
  %or48 = or i32 %21, 448, !dbg !5121
  store i32 %or48, i32* %mode.addr, align 4, !dbg !5121
  br label %if.end57, !dbg !5123

if.else:                                          ; preds = %land.lhs.true43, %if.end39
  %22 = load i8, i8* @be_customer_proof, align 1, !dbg !5124
  %conv49 = sext i8 %22 to i32, !dbg !5124
  %cmp50 = icmp ne i32 %conv49, 0, !dbg !5126
  br i1 %cmp50, label %if.then52, label %if.end56, !dbg !5127

if.then52:                                        ; preds = %if.else
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st2, i32 0, i32 3, !dbg !5128
  %23 = load i32, i32* %st_mode, align 8, !dbg !5128
  %and = and i32 %23, 61440, !dbg !5128
  %cmp53 = icmp eq i32 %and, 16384, !dbg !5128
  %24 = zext i1 %cmp53 to i64, !dbg !5128
  %cond = select i1 %cmp53, i32 448, i32 384, !dbg !5128
  %25 = load i32, i32* %mode.addr, align 4, !dbg !5130
  %or55 = or i32 %25, %cond, !dbg !5130
  store i32 %or55, i32* %mode.addr, align 4, !dbg !5130
  br label %if.end56, !dbg !5131

if.end56:                                         ; preds = %if.then52, %if.else
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then47
  %26 = load i32, i32* %fd, align 4, !dbg !5132
  %27 = load i32, i32* %mode.addr, align 4, !dbg !5134
  %call58 = call i32 @fchmod(i32 %26, i32 %27) #7, !dbg !5135
  %cmp59 = icmp slt i32 %call58, 0, !dbg !5136
  br i1 %cmp59, label %land.lhs.true61, label %if.end73, !dbg !5137

land.lhs.true61:                                  ; preds = %if.end57
  %28 = load i8*, i8** %name.addr, align 8, !dbg !5138
  %29 = load i32, i32* %mode.addr, align 4, !dbg !5139
  %call62 = call i32 @chmod(i8* %28, i32 %29) #7, !dbg !5140
  %cmp63 = icmp slt i32 %call62, 0, !dbg !5141
  br i1 %cmp63, label %if.then65, label %if.end73, !dbg !5142

if.then65:                                        ; preds = %land.lhs.true61
  br label %failure, !dbg !5143

failure:                                          ; preds = %if.then65, %if.then38, %if.then32, %if.then24
  call void @llvm.dbg.label(metadata !5144), !dbg !5146
  %30 = load i32, i32* %fd, align 4, !dbg !5147
  %cmp66 = icmp ne i32 %30, -1, !dbg !5149
  br i1 %cmp66, label %if.then68, label %if.end70, !dbg !5150

if.then68:                                        ; preds = %failure
  %31 = load i32, i32* %fd, align 4, !dbg !5151
  %call69 = call i32 @close(i32 %31), !dbg !5153
  br label %if.end70, !dbg !5154

if.end70:                                         ; preds = %if.then68, %failure
  %32 = load i8*, i8** %name.addr, align 8, !dbg !5155
  %call71 = call i32* @__errno_location() #14, !dbg !5156
  %33 = load i32, i32* %call71, align 4, !dbg !5156
  %call72 = call i8* @strerror(i32 %33) #7, !dbg !5157
  call void (i32, i8*, ...) @addreply(i32 550, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.150, i64 0, i64 0), i8* %32, i8* %call72), !dbg !5158
  br label %return, !dbg !5159

if.end73:                                         ; preds = %land.lhs.true61, %if.end57
  %34 = load i32, i32* %fd, align 4, !dbg !5160
  %call74 = call i32 @close(i32 %34), !dbg !5161
  %35 = load i8*, i8** %name.addr, align 8, !dbg !5162
  call void (i32, i8*, ...) @addreply(i32 200, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.151, i64 0, i64 0), i8* %35), !dbg !5163
  br label %return, !dbg !5164

return:                                           ; preds = %if.end73, %if.end70, %if.then19, %if.then14, %if.then7, %if.then
  ret void, !dbg !5164
}

declare i32 @open(i8*, i32, ...) #9

; Function Attrs: nounwind
declare i32 @fstat(i32, %struct.stat*) #2

; Function Attrs: nounwind
declare i32 @fchmod(i32, i32) #2

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @doutime(i8* %name, i8* %wanted_time) #0 !dbg !5165 {
entry:
  %name.addr = alloca i8*, align 8
  %wanted_time.addr = alloca i8*, align 8
  %tm = alloca %struct.tm, align 8
  %ts = alloca i64, align 8
  %tb = alloca %struct.timespec, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !5168, metadata !DIExpression()), !dbg !5169
  store i8* %wanted_time, i8** %wanted_time.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %wanted_time.addr, metadata !5170, metadata !DIExpression()), !dbg !5171
  call void @llvm.dbg.declare(metadata %struct.tm* %tm, metadata !5172, metadata !DIExpression()), !dbg !5173
  call void @llvm.dbg.declare(metadata i64* %ts, metadata !5174, metadata !DIExpression()), !dbg !5175
  call void @llvm.dbg.declare(metadata %struct.timespec* %tb, metadata !5176, metadata !DIExpression()), !dbg !5182
  %0 = load i8, i8* @guest, align 1, !dbg !5183
  %conv = sext i8 %0 to i32, !dbg !5183
  %cmp = icmp ne i32 %conv, 0, !dbg !5185
  br i1 %cmp, label %if.then, label %if.end, !dbg !5186

if.then:                                          ; preds = %entry
  call void @addreply_noformat(i32 550, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.148, i64 0, i64 0)), !dbg !5187
  br label %if.end36, !dbg !5189

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %name.addr, align 8, !dbg !5190
  %cmp2 = icmp eq i8* %1, null, !dbg !5192
  br i1 %cmp2, label %if.then7, label %lor.lhs.false, !dbg !5193

lor.lhs.false:                                    ; preds = %if.end
  %2 = load i8*, i8** %name.addr, align 8, !dbg !5194
  %3 = load i8, i8* %2, align 1, !dbg !5195
  %conv4 = sext i8 %3 to i32, !dbg !5195
  %cmp5 = icmp eq i32 %conv4, 0, !dbg !5196
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !5197

if.then7:                                         ; preds = %lor.lhs.false, %if.end
  call void @addreply_noformat(i32 501, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.149, i64 0, i64 0)), !dbg !5198
  br label %if.end36, !dbg !5200

if.end8:                                          ; preds = %lor.lhs.false
  %4 = load i8*, i8** %name.addr, align 8, !dbg !5201
  %5 = load i8, i8* @dot_write_ok, align 1, !dbg !5203
  %conv9 = sext i8 %5 to i32, !dbg !5203
  %call = call i32 @checknamesanity(i8* %4, i32 %conv9), !dbg !5204
  %cmp10 = icmp ne i32 %call, 0, !dbg !5205
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !5206

if.then12:                                        ; preds = %if.end8
  %6 = load i8*, i8** %name.addr, align 8, !dbg !5207
  call void (i32, i8*, ...) @addreply(i32 553, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.125, i64 0, i64 0), i8* %6), !dbg !5209
  br label %if.end36, !dbg !5210

if.end13:                                         ; preds = %if.end8
  %7 = bitcast %struct.tm* %tm to i8*, !dbg !5211
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 56, i1 false), !dbg !5211
  %8 = load i8*, i8** %wanted_time.addr, align 8, !dbg !5212
  %tm_year = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 5, !dbg !5213
  %tm_mon = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 4, !dbg !5214
  %tm_mday = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 3, !dbg !5215
  %tm_hour = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 2, !dbg !5216
  %tm_min = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 1, !dbg !5217
  %tm_sec = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 0, !dbg !5218
  %call14 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %8, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.152, i64 0, i64 0), i32* %tm_year, i32* %tm_mon, i32* %tm_mday, i32* %tm_hour, i32* %tm_min, i32* %tm_sec) #7, !dbg !5219
  %tm_mon15 = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 4, !dbg !5220
  %9 = load i32, i32* %tm_mon15, align 8, !dbg !5221
  %dec = add i32 %9, -1, !dbg !5221
  store i32 %dec, i32* %tm_mon15, align 8, !dbg !5221
  %tm_year16 = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 5, !dbg !5222
  %10 = load i32, i32* %tm_year16, align 4, !dbg !5223
  %sub = sub i32 %10, 1900, !dbg !5223
  store i32 %sub, i32* %tm_year16, align 4, !dbg !5223
  %call17 = call i64 @timegm(%struct.tm* %tm) #7, !dbg !5224
  store i64 %call17, i64* %ts, align 8, !dbg !5225
  %tm_mon18 = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 4, !dbg !5226
  %11 = load i32, i32* %tm_mon18, align 8, !dbg !5226
  %cmp19 = icmp slt i32 %11, 0, !dbg !5228
  br i1 %cmp19, label %if.then28, label %lor.lhs.false21, !dbg !5229

lor.lhs.false21:                                  ; preds = %if.end13
  %tm_year22 = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 5, !dbg !5230
  %12 = load i32, i32* %tm_year22, align 4, !dbg !5230
  %cmp23 = icmp sle i32 %12, 0, !dbg !5231
  br i1 %cmp23, label %if.then28, label %lor.lhs.false25, !dbg !5232

lor.lhs.false25:                                  ; preds = %lor.lhs.false21
  %13 = load i64, i64* %ts, align 8, !dbg !5233
  %cmp26 = icmp eq i64 %13, -1, !dbg !5234
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !5235

if.then28:                                        ; preds = %lor.lhs.false25, %lor.lhs.false21, %if.end13
  call void @addreply_noformat(i32 501, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.153, i64 0, i64 0)), !dbg !5236
  br label %if.end36, !dbg !5238

if.end29:                                         ; preds = %lor.lhs.false25
  %14 = load i64, i64* %ts, align 8, !dbg !5239
  %modtime = getelementptr inbounds %struct.timespec, %struct.timespec* %tb, i32 0, i32 1, !dbg !5240
  store i64 %14, i64* %modtime, align 8, !dbg !5241
  %actime = getelementptr inbounds %struct.timespec, %struct.timespec* %tb, i32 0, i32 0, !dbg !5242
  store i64 %14, i64* %actime, align 8, !dbg !5243
  %15 = load i8*, i8** %name.addr, align 8, !dbg !5244
  %call30 = call i32 @utime(i8* %15, %struct.timespec* %tb) #7, !dbg !5246
  %cmp31 = icmp slt i32 %call30, 0, !dbg !5247
  br i1 %cmp31, label %if.then33, label %if.else, !dbg !5248

if.then33:                                        ; preds = %if.end29
  %16 = load i8*, i8** %name.addr, align 8, !dbg !5249
  %call34 = call i32* @__errno_location() #14, !dbg !5251
  %17 = load i32, i32* %call34, align 4, !dbg !5251
  %call35 = call i8* @strerror(i32 %17) #7, !dbg !5252
  call void (i32, i8*, ...) @addreply(i32 550, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.154, i64 0, i64 0), i8* %16, i8* %call35), !dbg !5253
  br label %if.end36, !dbg !5254

if.else:                                          ; preds = %if.end29
  call void @addreply_noformat(i32 213, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.155, i64 0, i64 0)), !dbg !5255
  br label %if.end36

if.end36:                                         ; preds = %if.then, %if.then7, %if.then12, %if.then28, %if.else, %if.then33
  ret void, !dbg !5257
}

; Function Attrs: nounwind
declare i64 @timegm(%struct.tm*) #2

; Function Attrs: nounwind
declare i32 @utime(i8*, %struct.timespec*) #2

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @dodele(i8* %name) #0 !dbg !5258 {
entry:
  %name.addr = alloca i8*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !5259, metadata !DIExpression()), !dbg !5260
  %0 = load i8, i8* @guest, align 1, !dbg !5261
  %conv = sext i8 %0 to i32, !dbg !5261
  %cmp = icmp ne i32 %conv, 0, !dbg !5263
  br i1 %cmp, label %if.then, label %if.end, !dbg !5264

if.then:                                          ; preds = %entry
  call void @addreply_noformat(i32 550, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.156, i64 0, i64 0)), !dbg !5265
  br label %return, !dbg !5267

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %name.addr, align 8, !dbg !5268
  %cmp2 = icmp eq i8* %1, null, !dbg !5270
  br i1 %cmp2, label %if.then7, label %lor.lhs.false, !dbg !5271

lor.lhs.false:                                    ; preds = %if.end
  %2 = load i8*, i8** %name.addr, align 8, !dbg !5272
  %3 = load i8, i8* %2, align 1, !dbg !5273
  %conv4 = sext i8 %3 to i32, !dbg !5273
  %cmp5 = icmp eq i32 %conv4, 0, !dbg !5274
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !5275

if.then7:                                         ; preds = %lor.lhs.false, %if.end
  call void @addreply_noformat(i32 501, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.149, i64 0, i64 0)), !dbg !5276
  br label %return, !dbg !5278

if.end8:                                          ; preds = %lor.lhs.false
  %4 = load i8*, i8** %name.addr, align 8, !dbg !5279
  %5 = load i8, i8* @dot_write_ok, align 1, !dbg !5281
  %conv9 = sext i8 %5 to i32, !dbg !5281
  %call = call i32 @checknamesanity(i8* %4, i32 %conv9), !dbg !5282
  %cmp10 = icmp ne i32 %call, 0, !dbg !5283
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !5284

if.then12:                                        ; preds = %if.end8
  %6 = load i8*, i8** %name.addr, align 8, !dbg !5285
  call void (i32, i8*, ...) @addreply(i32 553, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.125, i64 0, i64 0), i8* %6), !dbg !5287
  br label %return, !dbg !5288

if.end13:                                         ; preds = %if.end8
  %7 = load i8, i8* @keepallfiles, align 1, !dbg !5289
  %conv14 = sext i8 %7 to i32, !dbg !5289
  %cmp15 = icmp ne i32 %conv14, 0, !dbg !5291
  br i1 %cmp15, label %if.then17, label %if.end19, !dbg !5292

if.then17:                                        ; preds = %if.end13
  %call18 = call i32* @__errno_location() #14, !dbg !5293
  store i32 1, i32* %call18, align 4, !dbg !5295
  br label %denied, !dbg !5296

if.end19:                                         ; preds = %if.end13
  %8 = load i8*, i8** %name.addr, align 8, !dbg !5297
  call void (i32, i8*, ...) @addreply(i32 250, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.157, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.58, i64 0, i64 0), i8* %8), !dbg !5298
  %9 = load i8*, i8** @root_directory, align 8, !dbg !5299
  %10 = load i8*, i8** %name.addr, align 8, !dbg !5300
  %11 = load i8, i8* %10, align 1, !dbg !5301
  %conv20 = sext i8 %11 to i32, !dbg !5301
  %cmp21 = icmp eq i32 %conv20, 47, !dbg !5302
  %12 = zext i1 %cmp21 to i64, !dbg !5301
  %cond = select i1 %cmp21, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([4097 x i8], [4097 x i8]* @wd, i64 0, i64 0), !dbg !5301
  %13 = load i8*, i8** %name.addr, align 8, !dbg !5303
  %14 = load i8, i8* %13, align 1, !dbg !5304
  %conv23 = sext i8 %14 to i32, !dbg !5304
  %cmp24 = icmp ne i32 %conv23, 47, !dbg !5305
  br i1 %cmp24, label %land.rhs, label %land.end, !dbg !5306

land.rhs:                                         ; preds = %if.end19
  %15 = load i8, i8* getelementptr inbounds ([4097 x i8], [4097 x i8]* @wd, i64 0, i64 0), align 16, !dbg !5307
  %tobool = icmp ne i8 %15, 0, !dbg !5307
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !5308

lor.rhs:                                          ; preds = %land.rhs
  %call26 = call i64 @strlen(i8* getelementptr inbounds ([4097 x i8], [4097 x i8]* @wd, i64 0, i64 0)) #12, !dbg !5309
  %sub = sub i64 %call26, 1, !dbg !5310
  %arrayidx = getelementptr [4097 x i8], [4097 x i8]* @wd, i64 0, i64 %sub, !dbg !5311
  %16 = load i8, i8* %arrayidx, align 1, !dbg !5311
  %conv27 = sext i8 %16 to i32, !dbg !5311
  %cmp28 = icmp ne i32 %conv27, 47, !dbg !5312
  br label %lor.end, !dbg !5308

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %17 = phi i1 [ true, %land.rhs ], [ %cmp28, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %if.end19
  %18 = phi i1 [ false, %if.end19 ], [ %17, %lor.end ], !dbg !5313
  %19 = zext i1 %18 to i64, !dbg !5314
  %cond30 = select i1 %18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.108, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.58, i64 0, i64 0), !dbg !5314
  %20 = load i8*, i8** %name.addr, align 8, !dbg !5315
  call void (i32, i8*, ...) @logfile(i32 5, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.157, i64 0, i64 0), i8* %9, i8* %cond, i8* %cond30, i8* %20), !dbg !5316
  br label %return, !dbg !5317

denied:                                           ; preds = %if.then17
  call void @llvm.dbg.label(metadata !5318), !dbg !5319
  %21 = load i8*, i8** %name.addr, align 8, !dbg !5320
  %call31 = call i32* @__errno_location() #14, !dbg !5321
  %22 = load i32, i32* %call31, align 4, !dbg !5321
  %call32 = call i8* @strerror(i32 %22) #7, !dbg !5322
  call void (i32, i8*, ...) @addreply(i32 550, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.158, i64 0, i64 0), i8* %21, i8* %call32), !dbg !5323
  br label %return, !dbg !5324

return:                                           ; preds = %denied, %land.end, %if.then12, %if.then7, %if.then
  ret void, !dbg !5324
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @doretr(i8* %name) #0 !dbg !5325 {
entry:
  %name.addr = alloca i8*, align 8
  %dlhandler = alloca %struct.DLHandler_, align 8
  %f = alloca i32, align 4
  %st = alloca %struct.stat, align 8
  %started = alloca double, align 8
  %ret = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !5326, metadata !DIExpression()), !dbg !5327
  call void @llvm.dbg.declare(metadata %struct.DLHandler_* %dlhandler, metadata !5328, metadata !DIExpression()), !dbg !5355
  call void @llvm.dbg.declare(metadata i32* %f, metadata !5356, metadata !DIExpression()), !dbg !5357
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !5358, metadata !DIExpression()), !dbg !5359
  call void @llvm.dbg.declare(metadata double* %started, metadata !5360, metadata !DIExpression()), !dbg !5361
  store double 0.000000e+00, double* %started, align 8, !dbg !5361
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5362, metadata !DIExpression()), !dbg !5363
  %total_downloaded = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %dlhandler, i32 0, i32 14, !dbg !5364
  store i64 0, i64* %total_downloaded, align 8, !dbg !5365
  %0 = load i8, i8* @candownload, align 1, !dbg !5366
  %tobool = icmp ne i8 %0, 0, !dbg !5366
  br i1 %tobool, label %if.end, label %if.then, !dbg !5368

if.then:                                          ; preds = %entry
  %1 = load double, double* @load, align 8, !dbg !5369
  call void (i32, i8*, ...) @addreply(i32 550, i8* getelementptr inbounds ([140 x i8], [140 x i8]* @.str.159, i64 0, i64 0), double %1), !dbg !5371
  br label %end, !dbg !5372

if.end:                                           ; preds = %entry
  %2 = load i8, i8* @type, align 1, !dbg !5373
  %conv = sext i8 %2 to i32, !dbg !5373
  %cmp = icmp slt i32 %conv, 1, !dbg !5375
  br i1 %cmp, label %if.then7, label %lor.lhs.false, !dbg !5376

lor.lhs.false:                                    ; preds = %if.end
  %3 = load i8, i8* @type, align 1, !dbg !5377
  %conv2 = sext i8 %3 to i32, !dbg !5377
  %cmp3 = icmp eq i32 %conv2, 1, !dbg !5378
  br i1 %cmp3, label %land.lhs.true, label %if.end8, !dbg !5379

land.lhs.true:                                    ; preds = %lor.lhs.false
  %4 = load i64, i64* @restartat, align 8, !dbg !5380
  %cmp5 = icmp sgt i64 %4, 1, !dbg !5381
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !5382

if.then7:                                         ; preds = %land.lhs.true, %if.end
  call void @addreply_noformat(i32 503, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.160, i64 0, i64 0)), !dbg !5383
  br label %end, !dbg !5385

if.end8:                                          ; preds = %land.lhs.true, %lor.lhs.false
  %5 = load i8*, i8** %name.addr, align 8, !dbg !5386
  %6 = load i8, i8* @dot_read_ok, align 1, !dbg !5388
  %conv9 = sext i8 %6 to i32, !dbg !5388
  %call = call i32 @checknamesanity(i8* %5, i32 %conv9), !dbg !5389
  %cmp10 = icmp ne i32 %call, 0, !dbg !5390
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !5391

if.then12:                                        ; preds = %if.end8
  %7 = load i8*, i8** %name.addr, align 8, !dbg !5392
  call void (i32, i8*, ...) @addreply(i32 553, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.125, i64 0, i64 0), i8* %7), !dbg !5394
  br label %end, !dbg !5395

if.end13:                                         ; preds = %if.end8
  %8 = load i8*, i8** %name.addr, align 8, !dbg !5396
  %call14 = call i32 (i8*, i32, ...) @open(i8* %8, i32 0), !dbg !5398
  store i32 %call14, i32* %f, align 4, !dbg !5399
  %cmp15 = icmp eq i32 %call14, -1, !dbg !5400
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !5401

if.then17:                                        ; preds = %if.end13
  %9 = load i8*, i8** %name.addr, align 8, !dbg !5402
  call void @displayopenfailure(i8* %9), !dbg !5404
  br label %end, !dbg !5405

if.end18:                                         ; preds = %if.end13
  %10 = load i32, i32* %f, align 4, !dbg !5406
  %call19 = call i32 @fstat(i32 %10, %struct.stat* %st) #7, !dbg !5408
  %cmp20 = icmp slt i32 %call19, 0, !dbg !5409
  br i1 %cmp20, label %if.then22, label %if.end24, !dbg !5410

if.then22:                                        ; preds = %if.end18
  br label %stat_failure, !dbg !5411

stat_failure:                                     ; preds = %if.then31, %if.then22
  call void @llvm.dbg.label(metadata !5412), !dbg !5414
  %11 = load i32, i32* %f, align 4, !dbg !5415
  %call23 = call i32 @close(i32 %11), !dbg !5416
  call void @error(i32 451, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.161, i64 0, i64 0)), !dbg !5417
  br label %end, !dbg !5418

if.end24:                                         ; preds = %if.end18
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !5419
  %12 = load i32, i32* %st_mode, align 8, !dbg !5419
  %and = and i32 %12, 61440, !dbg !5419
  %cmp25 = icmp eq i32 %and, 40960, !dbg !5419
  br i1 %cmp25, label %if.then27, label %if.end33, !dbg !5421

if.then27:                                        ; preds = %if.end24
  %13 = load i8*, i8** %name.addr, align 8, !dbg !5422
  %call28 = call i32 @stat(i8* %13, %struct.stat* %st) #7, !dbg !5425
  %cmp29 = icmp slt i32 %call28, 0, !dbg !5426
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !5427

if.then31:                                        ; preds = %if.then27
  br label %stat_failure, !dbg !5428

if.end32:                                         ; preds = %if.then27
  br label %if.end33, !dbg !5430

if.end33:                                         ; preds = %if.end32, %if.end24
  %14 = load i64, i64* @restartat, align 8, !dbg !5431
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 8, !dbg !5433
  %15 = load i64, i64* %st_size, align 8, !dbg !5433
  %cmp34 = icmp sgt i64 %14, %15, !dbg !5434
  br i1 %cmp34, label %if.then36, label %if.end39, !dbg !5435

if.then36:                                        ; preds = %if.end33
  %16 = load i32, i32* %f, align 4, !dbg !5436
  %call37 = call i32 @close(i32 %16), !dbg !5438
  %17 = load i64, i64* @restartat, align 8, !dbg !5439
  %st_size38 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 8, !dbg !5440
  %18 = load i64, i64* %st_size38, align 8, !dbg !5440
  call void (i32, i8*, ...) @addreply(i32 554, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.162, i64 0, i64 0), i64 %17, i64 %18), !dbg !5441
  br label %end, !dbg !5442

if.end39:                                         ; preds = %if.end33
  %st_mode40 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !5443
  %19 = load i32, i32* %st_mode40, align 8, !dbg !5443
  %and41 = and i32 %19, 61440, !dbg !5443
  %cmp42 = icmp eq i32 %and41, 32768, !dbg !5443
  br i1 %cmp42, label %lor.lhs.false44, label %if.then49, !dbg !5445

lor.lhs.false44:                                  ; preds = %if.end39
  %st_size45 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 8, !dbg !5446
  %20 = load i64, i64* %st_size45, align 8, !dbg !5446
  %st_size46 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 8, !dbg !5447
  %21 = load i64, i64* %st_size46, align 8, !dbg !5447
  %cmp47 = icmp ne i64 %20, %21, !dbg !5448
  br i1 %cmp47, label %if.then49, label %if.end51, !dbg !5449

if.then49:                                        ; preds = %lor.lhs.false44, %if.end39
  %22 = load i32, i32* %f, align 4, !dbg !5450
  %call50 = call i32 @close(i32 %22), !dbg !5452
  call void @addreply_noformat(i32 550, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.163, i64 0, i64 0)), !dbg !5453
  br label %end, !dbg !5454

if.end51:                                         ; preds = %lor.lhs.false44
  %23 = load i32, i32* @warez, align 4, !dbg !5455
  %cmp52 = icmp ne i32 %23, 0, !dbg !5457
  br i1 %cmp52, label %land.lhs.true54, label %if.end63, !dbg !5458

land.lhs.true54:                                  ; preds = %if.end51
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 4, !dbg !5459
  %24 = load i32, i32* %st_uid, align 4, !dbg !5459
  %25 = load i32, i32* @warez, align 4, !dbg !5460
  %cmp55 = icmp eq i32 %24, %25, !dbg !5461
  br i1 %cmp55, label %land.lhs.true57, label %if.end63, !dbg !5462

land.lhs.true57:                                  ; preds = %land.lhs.true54
  %26 = load i8, i8* @guest, align 1, !dbg !5463
  %conv58 = sext i8 %26 to i32, !dbg !5463
  %cmp59 = icmp ne i32 %conv58, 0, !dbg !5464
  br i1 %cmp59, label %if.then61, label %if.end63, !dbg !5465

if.then61:                                        ; preds = %land.lhs.true57
  %27 = load i32, i32* %f, align 4, !dbg !5466
  %call62 = call i32 @close(i32 %27), !dbg !5468
  call void (i32, i8*, ...) @addreply(i32 550, i8* getelementptr inbounds ([123 x i8], [123 x i8]* @.str.164, i64 0, i64 0)), !dbg !5469
  br label %end, !dbg !5470

if.end63:                                         ; preds = %land.lhs.true57, %land.lhs.true54, %if.end51
  call void @opendata(), !dbg !5471
  %28 = load volatile i32, i32* @xferfd, align 4, !dbg !5472
  %cmp64 = icmp eq i32 %28, -1, !dbg !5474
  br i1 %cmp64, label %if.then66, label %if.end68, !dbg !5475

if.then66:                                        ; preds = %if.end63
  %29 = load i32, i32* %f, align 4, !dbg !5476
  %call67 = call i32 @close(i32 %29), !dbg !5478
  br label %end, !dbg !5479

if.end68:                                         ; preds = %if.end63
  %call69 = call i64 @time(i64* null) #7, !dbg !5480
  %rem = srem i64 %call69, 100, !dbg !5482
  %cmp70 = icmp eq i64 %rem, 0, !dbg !5483
  br i1 %cmp70, label %if.then72, label %if.end73, !dbg !5484

if.then72:                                        ; preds = %if.end68
  call void @addreply_noformat(i32 0, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.165, i64 0, i64 0)), !dbg !5485
  br label %if.end73, !dbg !5487

if.end73:                                         ; preds = %if.then72, %if.end68
  %st_size74 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 8, !dbg !5488
  %30 = load i64, i64* %st_size74, align 8, !dbg !5488
  %31 = load i64, i64* @restartat, align 8, !dbg !5490
  %sub = sub i64 %30, %31, !dbg !5491
  %cmp75 = icmp sgt i64 %sub, 4096, !dbg !5492
  br i1 %cmp75, label %if.then77, label %if.end81, !dbg !5493

if.then77:                                        ; preds = %if.end73
  %st_size78 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 8, !dbg !5494
  %32 = load i64, i64* %st_size78, align 8, !dbg !5494
  %33 = load i64, i64* @restartat, align 8, !dbg !5496
  %sub79 = sub i64 %32, %33, !dbg !5497
  %conv80 = sitofp i64 %sub79 to double, !dbg !5498
  %div = fdiv double %conv80, 1.024000e+03, !dbg !5499
  call void (i32, i8*, ...) @addreply(i32 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.166, i64 0, i64 0), double %div), !dbg !5500
  br label %if.end81, !dbg !5501

if.end81:                                         ; preds = %if.then77, %if.end73
  call void @doreply(), !dbg !5502
  store i8 1, i8* @state_needs_update, align 1, !dbg !5503
  call void @setprocessname(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.167, i64 0, i64 0)), !dbg !5504
  %34 = load i32, i32* %f, align 4, !dbg !5505
  %st_size82 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 8, !dbg !5506
  %35 = load i64, i64* %st_size82, align 8, !dbg !5506
  %call83 = call i32 @posix_fadvise(i32 %34, i64 0, i64 %35, i32 2) #7, !dbg !5507
  %call84 = call double @get_usec_time(), !dbg !5508
  store double %call84, double* %started, align 8, !dbg !5509
  %36 = load i32, i32* @clientfd, align 4, !dbg !5510
  %37 = load i8*, i8** @tls_cnx, align 8, !dbg !5512
  %38 = load volatile i32, i32* @xferfd, align 4, !dbg !5513
  %39 = load i8*, i8** %name.addr, align 8, !dbg !5514
  %40 = load i32, i32* %f, align 4, !dbg !5515
  %41 = load i8*, i8** @tls_data_cnx, align 8, !dbg !5516
  %42 = load i64, i64* @restartat, align 8, !dbg !5517
  %43 = load i8, i8* @type, align 1, !dbg !5518
  %conv85 = sext i8 %43 to i32, !dbg !5518
  %cmp86 = icmp eq i32 %conv85, 1, !dbg !5519
  %conv87 = zext i1 %cmp86 to i32, !dbg !5519
  %44 = load i64, i64* @throttling_bandwidth_dl, align 8, !dbg !5520
  %call88 = call i32 @dlmap_init(%struct.DLHandler_* %dlhandler, i32 %36, i8* %37, i32 %38, i8* %39, i32 %40, i8* %41, i64 %42, i32 %conv87, i64 %44), !dbg !5521
  %cmp89 = icmp eq i32 %call88, 0, !dbg !5522
  br i1 %cmp89, label %if.then91, label %if.else, !dbg !5523

if.then91:                                        ; preds = %if.end81
  %call92 = call i32 @dlmap_send(%struct.DLHandler_* %dlhandler), !dbg !5524
  store i32 %call92, i32* %ret, align 4, !dbg !5526
  %call93 = call i32 @dlmap_exit(%struct.DLHandler_* %dlhandler), !dbg !5527
  br label %if.end94, !dbg !5528

if.else:                                          ; preds = %if.end81
  store i32 -1, i32* %ret, align 4, !dbg !5529
  br label %if.end94

if.end94:                                         ; preds = %if.else, %if.then91
  %45 = load i32, i32* %f, align 4, !dbg !5531
  %call95 = call i32 @close(i32 %45), !dbg !5532
  call void @closedata(), !dbg !5533
  %46 = load i32, i32* %ret, align 4, !dbg !5534
  %cmp96 = icmp eq i32 %46, 0, !dbg !5536
  br i1 %cmp96, label %if.then98, label %if.end99, !dbg !5537

if.then98:                                        ; preds = %if.end94
  call void @addreply_noformat(i32 226, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.168, i64 0, i64 0)), !dbg !5538
  br label %if.end99, !dbg !5540

if.end99:                                         ; preds = %if.then98, %if.end94
  %total_downloaded100 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %dlhandler, i32 0, i32 14, !dbg !5541
  %47 = load i64, i64* %total_downloaded100, align 8, !dbg !5541
  %48 = load i64, i64* @downloaded, align 8, !dbg !5542
  %add = add i64 %48, %47, !dbg !5542
  store i64 %add, i64* @downloaded, align 8, !dbg !5542
  %total_downloaded101 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %dlhandler, i32 0, i32 14, !dbg !5543
  %49 = load i64, i64* %total_downloaded101, align 8, !dbg !5543
  %50 = load double, double* %started, align 8, !dbg !5544
  %51 = load i8*, i8** %name.addr, align 8, !dbg !5545
  call void @displayrate(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.169, i64 0, i64 0), i64 %49, double %50, i8* %51, i32 0), !dbg !5546
  br label %end, !dbg !5546

end:                                              ; preds = %if.end99, %if.then66, %if.then61, %if.then49, %if.then36, %stat_failure, %if.then17, %if.then12, %if.then7, %if.then
  call void @llvm.dbg.label(metadata !5547), !dbg !5548
  store i64 0, i64* @restartat, align 8, !dbg !5549
  ret void, !dbg !5550
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal void @displayopenfailure(i8* %name) #0 !dbg !5551 {
entry:
  %name.addr = alloca i8*, align 8
  %buffer = alloca [4138 x i8], align 16
  %e = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !5552, metadata !DIExpression()), !dbg !5553
  call void @llvm.dbg.declare(metadata [4138 x i8]* %buffer, metadata !5554, metadata !DIExpression()), !dbg !5558
  call void @llvm.dbg.declare(metadata i32* %e, metadata !5559, metadata !DIExpression()), !dbg !5560
  %call = call i32* @__errno_location() #14, !dbg !5561
  %0 = load i32, i32* %call, align 4, !dbg !5561
  store i32 %0, i32* %e, align 4, !dbg !5560
  %arraydecay = getelementptr inbounds [4138 x i8], [4138 x i8]* %buffer, i64 0, i64 0, !dbg !5562
  %1 = load i8*, i8** %name.addr, align 8, !dbg !5562
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 4138, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.240, i64 0, i64 0), i8* %1) #7, !dbg !5562
  %cmp = icmp sge i32 %call1, 4138, !dbg !5562
  br i1 %cmp, label %if.then, label %if.end, !dbg !5564

if.then:                                          ; preds = %entry
  call void @_EXIT(i32 1) #11, !dbg !5565
  unreachable, !dbg !5565

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %e, align 4, !dbg !5567
  %call2 = call i32* @__errno_location() #14, !dbg !5568
  store i32 %2, i32* %call2, align 4, !dbg !5569
  %arraydecay3 = getelementptr inbounds [4138 x i8], [4138 x i8]* %buffer, i64 0, i64 0, !dbg !5570
  call void @error(i32 550, i8* %arraydecay3), !dbg !5571
  ret void, !dbg !5572
}

; Function Attrs: nounwind
declare i32 @posix_fadvise(i32, i64, i64, i32) #2

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal double @get_usec_time() #0 !dbg !5573 {
entry:
  %retval = alloca double, align 8
  %tv = alloca %struct.timespec, align 8
  %tz = alloca %struct.timezone, align 4
  call void @llvm.dbg.declare(metadata %struct.timespec* %tv, metadata !5576, metadata !DIExpression()), !dbg !5583
  call void @llvm.dbg.declare(metadata %struct.timezone* %tz, metadata !5584, metadata !DIExpression()), !dbg !5590
  %0 = bitcast %struct.timezone* %tz to i8*, !dbg !5591
  %call = call i32 @gettimeofday(%struct.timespec* %tv, i8* %0) #7, !dbg !5593
  %cmp = icmp slt i32 %call, 0, !dbg !5594
  br i1 %cmp, label %if.then, label %if.end, !dbg !5595

if.then:                                          ; preds = %entry
  store double 0.000000e+00, double* %retval, align 8, !dbg !5596
  br label %return, !dbg !5596

if.end:                                           ; preds = %entry
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %tv, i32 0, i32 0, !dbg !5598
  %1 = load i64, i64* %tv_sec, align 8, !dbg !5598
  %conv = sitofp i64 %1 to double, !dbg !5599
  %tv_usec = getelementptr inbounds %struct.timespec, %struct.timespec* %tv, i32 0, i32 1, !dbg !5600
  %2 = load i64, i64* %tv_usec, align 8, !dbg !5600
  %conv1 = sitofp i64 %2 to double, !dbg !5601
  %div = fdiv double %conv1, 1.000000e+06, !dbg !5602
  %add = fadd double %conv, %div, !dbg !5603
  store double %add, double* %retval, align 8, !dbg !5604
  br label %return, !dbg !5604

return:                                           ; preds = %if.end, %if.then
  %3 = load double, double* %retval, align 8, !dbg !5605
  ret double %3, !dbg !5605
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @dlmap_init(%struct.DLHandler_* %dlhandler, i32 %clientfd, i8* %tls_clientfd, i32 %xferfd, i8* %name, i32 %f, i8* %tls_fd, i64 %restartat, i32 %ascii_mode, i64 %bandwidth) #0 !dbg !5606 {
entry:
  %retval = alloca i32, align 4
  %dlhandler.addr = alloca %struct.DLHandler_*, align 8
  %clientfd.addr = alloca i32, align 4
  %tls_clientfd.addr = alloca i8*, align 8
  %xferfd.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %f.addr = alloca i32, align 4
  %tls_fd.addr = alloca i8*, align 8
  %restartat.addr = alloca i64, align 8
  %ascii_mode.addr = alloca i32, align 4
  %bandwidth.addr = alloca i64, align 8
  store %struct.DLHandler_* %dlhandler, %struct.DLHandler_** %dlhandler.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DLHandler_** %dlhandler.addr, metadata !5611, metadata !DIExpression()), !dbg !5612
  store i32 %clientfd, i32* %clientfd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %clientfd.addr, metadata !5613, metadata !DIExpression()), !dbg !5614
  store i8* %tls_clientfd, i8** %tls_clientfd.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tls_clientfd.addr, metadata !5615, metadata !DIExpression()), !dbg !5616
  store i32 %xferfd, i32* %xferfd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xferfd.addr, metadata !5617, metadata !DIExpression()), !dbg !5618
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !5619, metadata !DIExpression()), !dbg !5620
  store i32 %f, i32* %f.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %f.addr, metadata !5621, metadata !DIExpression()), !dbg !5622
  store i8* %tls_fd, i8** %tls_fd.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tls_fd.addr, metadata !5623, metadata !DIExpression()), !dbg !5624
  store i64 %restartat, i64* %restartat.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %restartat.addr, metadata !5625, metadata !DIExpression()), !dbg !5626
  store i32 %ascii_mode, i32* %ascii_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ascii_mode.addr, metadata !5627, metadata !DIExpression()), !dbg !5628
  store i64 %bandwidth, i64* %bandwidth.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bandwidth.addr, metadata !5629, metadata !DIExpression()), !dbg !5630
  %0 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5631
  %1 = load i32, i32* %clientfd.addr, align 4, !dbg !5633
  %2 = load i8*, i8** %tls_clientfd.addr, align 8, !dbg !5634
  %3 = load i32, i32* %xferfd.addr, align 4, !dbg !5635
  %4 = load i8*, i8** %name.addr, align 8, !dbg !5636
  %5 = load i32, i32* %f.addr, align 4, !dbg !5637
  %6 = load i8*, i8** %tls_fd.addr, align 8, !dbg !5638
  %7 = load i64, i64* %restartat.addr, align 8, !dbg !5639
  %8 = load i32, i32* %ascii_mode.addr, align 4, !dbg !5640
  %9 = load i64, i64* %bandwidth.addr, align 8, !dbg !5641
  %call = call i32 @dlhandler_init(%struct.DLHandler_* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i8* %6, i64 %7, i32 %8, i64 %9), !dbg !5642
  %cmp = icmp ne i32 %call, 0, !dbg !5643
  br i1 %cmp, label %if.then, label %if.end, !dbg !5644

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !5645
  br label %return, !dbg !5645

if.end:                                           ; preds = %entry
  %10 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5647
  %min_chunk_size = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %10, i32 0, i32 9, !dbg !5648
  store i64 8192, i64* %min_chunk_size, align 8, !dbg !5649
  %11 = load i32, i32* %ascii_mode.addr, align 4, !dbg !5650
  %cmp1 = icmp sgt i32 %11, 0, !dbg !5652
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !5653

if.then2:                                         ; preds = %if.end
  %12 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5654
  %max_chunk_size = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %12, i32 0, i32 11, !dbg !5656
  store i64 32768, i64* %max_chunk_size, align 8, !dbg !5657
  %13 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5658
  %default_chunk_size = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %13, i32 0, i32 10, !dbg !5659
  store i64 32768, i64* %default_chunk_size, align 8, !dbg !5660
  br label %if.end11, !dbg !5661

if.else:                                          ; preds = %if.end
  %14 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5662
  %max_chunk_size3 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %14, i32 0, i32 11, !dbg !5664
  store i64 131072, i64* %max_chunk_size3, align 8, !dbg !5665
  %15 = load i64, i64* %bandwidth.addr, align 8, !dbg !5666
  %cmp4 = icmp ule i64 %15, 0, !dbg !5668
  br i1 %cmp4, label %if.then5, label %if.else8, !dbg !5669

if.then5:                                         ; preds = %if.else
  %16 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5670
  %max_chunk_size6 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %16, i32 0, i32 11, !dbg !5672
  %17 = load i64, i64* %max_chunk_size6, align 8, !dbg !5672
  %18 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5673
  %default_chunk_size7 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %18, i32 0, i32 10, !dbg !5674
  store i64 %17, i64* %default_chunk_size7, align 8, !dbg !5675
  br label %if.end10, !dbg !5676

if.else8:                                         ; preds = %if.else
  %19 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5677
  %default_chunk_size9 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %19, i32 0, i32 10, !dbg !5679
  store i64 49152, i64* %default_chunk_size9, align 8, !dbg !5680
  br label %if.end10

if.end10:                                         ; preds = %if.else8, %if.then5
  br label %if.end11

if.end11:                                         ; preds = %if.end10, %if.then2
  %20 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5681
  %default_chunk_size12 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %20, i32 0, i32 10, !dbg !5682
  %21 = load i64, i64* %default_chunk_size12, align 8, !dbg !5682
  %22 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5683
  %chunk_size = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %22, i32 0, i32 8, !dbg !5684
  store i64 %21, i64* %chunk_size, align 8, !dbg !5685
  %23 = load i64, i64* @page_size, align 8, !dbg !5686
  %add = add i64 131072, %23, !dbg !5687
  %sub = sub i64 %add, 1, !dbg !5688
  %24 = load i64, i64* @page_size, align 8, !dbg !5689
  %sub13 = sub i64 %24, 1, !dbg !5690
  %neg = xor i64 %sub13, -1, !dbg !5691
  %and = and i64 %sub, %neg, !dbg !5692
  %25 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5693
  %dlmap_size = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %25, i32 0, i32 6, !dbg !5694
  store i64 %and, i64* %dlmap_size, align 8, !dbg !5695
  %26 = load i64, i64* %restartat.addr, align 8, !dbg !5696
  %27 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5697
  %cur_pos = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %27, i32 0, i32 7, !dbg !5698
  store i64 %26, i64* %cur_pos, align 8, !dbg !5699
  %28 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5700
  %dlmap_pos = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %28, i32 0, i32 12, !dbg !5701
  store i64 0, i64* %dlmap_pos, align 8, !dbg !5702
  %29 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5703
  %dlmap_fdpos = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %29, i32 0, i32 13, !dbg !5704
  store i64 -1, i64* %dlmap_fdpos, align 8, !dbg !5705
  %30 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5706
  %sizeof_map = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %30, i32 0, i32 15, !dbg !5707
  store i64 0, i64* %sizeof_map, align 8, !dbg !5708
  %31 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5709
  %map_data = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %31, i32 0, i32 17, !dbg !5710
  store i8* null, i8** %map_data, align 8, !dbg !5711
  %32 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5712
  %dlmap_size14 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %32, i32 0, i32 6, !dbg !5713
  %33 = load i64, i64* %dlmap_size14, align 8, !dbg !5713
  %34 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5714
  %sizeof_map15 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %34, i32 0, i32 15, !dbg !5715
  store i64 %33, i64* %sizeof_map15, align 8, !dbg !5716
  %35 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5717
  %sizeof_map16 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %35, i32 0, i32 15, !dbg !5718
  %36 = load i64, i64* %sizeof_map16, align 8, !dbg !5718
  %call17 = call noalias i8* @malloc(i64 %36) #7, !dbg !5719
  %37 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5720
  %map = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %37, i32 0, i32 16, !dbg !5721
  store i8* %call17, i8** %map, align 8, !dbg !5722
  %38 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5723
  %map18 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %38, i32 0, i32 16, !dbg !5725
  %39 = load i8*, i8** %map18, align 8, !dbg !5725
  %cmp19 = icmp eq i8* %39, null, !dbg !5726
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !5727

if.then20:                                        ; preds = %if.end11
  call void @die_mem() #11, !dbg !5728
  unreachable, !dbg !5728

if.end21:                                         ; preds = %if.end11
  store i32 0, i32* %retval, align 4, !dbg !5730
  br label %return, !dbg !5730

return:                                           ; preds = %if.end21, %if.then
  %40 = load i32, i32* %retval, align 4, !dbg !5731
  ret i32 %40, !dbg !5731
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @dlmap_send(%struct.DLHandler_* %dlhandler) #0 !dbg !5732 {
entry:
  %retval = alloca i32, align 4
  %dlhandler.addr = alloca %struct.DLHandler_*, align 8
  %ret = alloca i32, align 4
  %ts_start = alloca double, align 8
  %required_sleep = alloca double, align 8
  %downloaded = alloca i64, align 8
  store %struct.DLHandler_* %dlhandler, %struct.DLHandler_** %dlhandler.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DLHandler_** %dlhandler.addr, metadata !5735, metadata !DIExpression()), !dbg !5736
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5737, metadata !DIExpression()), !dbg !5738
  call void @llvm.dbg.declare(metadata double* %ts_start, metadata !5739, metadata !DIExpression()), !dbg !5740
  store double 0.000000e+00, double* %ts_start, align 8, !dbg !5740
  call void @llvm.dbg.declare(metadata double* %required_sleep, metadata !5741, metadata !DIExpression()), !dbg !5742
  call void @llvm.dbg.declare(metadata i64* %downloaded, metadata !5743, metadata !DIExpression()), !dbg !5744
  %0 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5745
  %bandwidth = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %0, i32 0, i32 21, !dbg !5747
  %1 = load i64, i64* %bandwidth, align 8, !dbg !5747
  %cmp = icmp ugt i64 %1, 0, !dbg !5748
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5749

land.lhs.true:                                    ; preds = %entry
  %call = call double @get_usec_time(), !dbg !5750
  store double %call, double* %ts_start, align 8, !dbg !5751
  %cmp1 = fcmp ole double %call, 0.000000e+00, !dbg !5752
  br i1 %cmp1, label %if.then, label %if.end, !dbg !5753

if.then:                                          ; preds = %land.lhs.true
  call void @error(i32 451, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.243, i64 0, i64 0)), !dbg !5754
  store i32 -1, i32* %retval, align 4, !dbg !5756
  br label %return, !dbg !5756

if.end:                                           ; preds = %land.lhs.true, %entry
  store double 0.000000e+00, double* %required_sleep, align 8, !dbg !5757
  br label %for.cond, !dbg !5758

for.cond:                                         ; preds = %if.end23, %if.end
  %2 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5759
  %call2 = call i32 @_dlmap_remap(%struct.DLHandler_* %2), !dbg !5763
  store i32 %call2, i32* %ret, align 4, !dbg !5764
  %3 = load i32, i32* %ret, align 4, !dbg !5765
  %cmp3 = icmp slt i32 %3, 0, !dbg !5767
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !5768

if.then4:                                         ; preds = %for.cond
  store i32 -1, i32* %retval, align 4, !dbg !5769
  br label %return, !dbg !5769

if.end5:                                          ; preds = %for.cond
  %4 = load i32, i32* %ret, align 4, !dbg !5771
  %cmp6 = icmp eq i32 %4, 1, !dbg !5773
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !5774

if.then7:                                         ; preds = %if.end5
  br label %for.end, !dbg !5775

if.end8:                                          ; preds = %if.end5
  %5 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5777
  %6 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5779
  %map_data = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %6, i32 0, i32 17, !dbg !5780
  %7 = load i8*, i8** %map_data, align 8, !dbg !5780
  %8 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5781
  %chunk_size = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %8, i32 0, i32 8, !dbg !5782
  %9 = load i64, i64* %chunk_size, align 8, !dbg !5782
  %call9 = call i32 @dl_dowrite(%struct.DLHandler_* %5, i8* %7, i64 %9, i64* %downloaded), !dbg !5783
  %cmp10 = icmp ne i32 %call9, 0, !dbg !5784
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !5785

if.then11:                                        ; preds = %if.end8
  store i32 -1, i32* %retval, align 4, !dbg !5786
  br label %return, !dbg !5786

if.end12:                                         ; preds = %if.end8
  %10 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5788
  %chunk_size13 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %10, i32 0, i32 8, !dbg !5789
  %11 = load i64, i64* %chunk_size13, align 8, !dbg !5789
  %12 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5790
  %cur_pos = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %12, i32 0, i32 7, !dbg !5791
  %13 = load i64, i64* %cur_pos, align 8, !dbg !5792
  %add = add i64 %13, %11, !dbg !5792
  store i64 %add, i64* %cur_pos, align 8, !dbg !5792
  %14 = load i64, i64* %downloaded, align 8, !dbg !5793
  %15 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5794
  %total_downloaded = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %15, i32 0, i32 14, !dbg !5795
  %16 = load i64, i64* %total_downloaded, align 8, !dbg !5796
  %add14 = add i64 %16, %14, !dbg !5796
  store i64 %add14, i64* %total_downloaded, align 8, !dbg !5796
  store double 0.000000e+00, double* %required_sleep, align 8, !dbg !5797
  %17 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5798
  %bandwidth15 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %17, i32 0, i32 21, !dbg !5800
  %18 = load i64, i64* %bandwidth15, align 8, !dbg !5800
  %cmp16 = icmp ugt i64 %18, 0, !dbg !5801
  br i1 %cmp16, label %if.then17, label %if.end19, !dbg !5802

if.then17:                                        ; preds = %if.end12
  %19 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5803
  %20 = load i64, i64* %downloaded, align 8, !dbg !5805
  %21 = load double, double* %ts_start, align 8, !dbg !5806
  %call18 = call i32 @dlhandler_throttle(%struct.DLHandler_* %19, i64 %20, double %21, double* %required_sleep), !dbg !5807
  br label %if.end19, !dbg !5808

if.end19:                                         ; preds = %if.then17, %if.end12
  %22 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5809
  %23 = load double, double* %required_sleep, align 8, !dbg !5810
  %call20 = call i32 @dlhandler_handle_commands(%struct.DLHandler_* %22, double %23), !dbg !5811
  store i32 %call20, i32* %ret, align 4, !dbg !5812
  %24 = load i32, i32* %ret, align 4, !dbg !5813
  %cmp21 = icmp ne i32 %24, 0, !dbg !5815
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !5816

if.then22:                                        ; preds = %if.end19
  %25 = load i32, i32* %ret, align 4, !dbg !5817
  store i32 %25, i32* %retval, align 4, !dbg !5819
  br label %return, !dbg !5819

if.end23:                                         ; preds = %if.end19
  br label %for.cond, !dbg !5820, !llvm.loop !5821

for.end:                                          ; preds = %if.then7
  store i32 0, i32* %retval, align 4, !dbg !5824
  br label %return, !dbg !5824

return:                                           ; preds = %for.end, %if.then22, %if.then11, %if.then4, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !5825
  ret i32 %26, !dbg !5825
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @dlmap_exit(%struct.DLHandler_* %dlhandler) #0 !dbg !5826 {
entry:
  %dlhandler.addr = alloca %struct.DLHandler_*, align 8
  store %struct.DLHandler_* %dlhandler, %struct.DLHandler_** %dlhandler.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DLHandler_** %dlhandler.addr, metadata !5827, metadata !DIExpression()), !dbg !5828
  %0 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5829
  %map = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %0, i32 0, i32 16, !dbg !5831
  %1 = load i8*, i8** %map, align 8, !dbg !5831
  %cmp = icmp ne i8* %1, null, !dbg !5832
  br i1 %cmp, label %if.then, label %if.end, !dbg !5833

if.then:                                          ; preds = %entry
  %2 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5834
  %map1 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %2, i32 0, i32 16, !dbg !5836
  %3 = load i8*, i8** %map1, align 8, !dbg !5836
  call void @free(i8* %3) #7, !dbg !5837
  %4 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5838
  %map2 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %4, i32 0, i32 16, !dbg !5839
  store i8* null, i8** %map2, align 8, !dbg !5840
  %5 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5841
  %sizeof_map = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %5, i32 0, i32 15, !dbg !5842
  store i64 0, i64* %sizeof_map, align 8, !dbg !5843
  %6 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5844
  %dlmap_size = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %6, i32 0, i32 6, !dbg !5845
  store i64 0, i64* %dlmap_size, align 8, !dbg !5846
  br label %if.end, !dbg !5847

if.end:                                           ; preds = %if.then, %entry
  ret i32 0, !dbg !5848
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal void @displayrate(i8* %word, i64 %size, double %started, i8* %name, i32 %up) #0 !dbg !5849 {
entry:
  %word.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %started.addr = alloca double, align 8
  %name.addr = alloca i8*, align 8
  %up.addr = alloca i32, align 4
  %ended = alloca double, align 8
  %t = alloca double, align 8
  %speed = alloca double, align 8
  %speedstring = alloca [64 x i8], align 16
  store i8* %word, i8** %word.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %word.addr, metadata !5852, metadata !DIExpression()), !dbg !5853
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5854, metadata !DIExpression()), !dbg !5855
  store double %started, double* %started.addr, align 8
  call void @llvm.dbg.declare(metadata double* %started.addr, metadata !5856, metadata !DIExpression()), !dbg !5857
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !5858, metadata !DIExpression()), !dbg !5859
  store i32 %up, i32* %up.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %up.addr, metadata !5860, metadata !DIExpression()), !dbg !5861
  call void @llvm.dbg.declare(metadata double* %ended, metadata !5862, metadata !DIExpression()), !dbg !5863
  call void @llvm.dbg.declare(metadata double* %t, metadata !5864, metadata !DIExpression()), !dbg !5865
  call void @llvm.dbg.declare(metadata double* %speed, metadata !5866, metadata !DIExpression()), !dbg !5867
  call void @llvm.dbg.declare(metadata [64 x i8]* %speedstring, metadata !5868, metadata !DIExpression()), !dbg !5869
  %call = call double @get_usec_time(), !dbg !5870
  store double %call, double* %ended, align 8, !dbg !5871
  %0 = load double, double* %ended, align 8, !dbg !5872
  %1 = load double, double* %started.addr, align 8, !dbg !5873
  %sub = fsub double %0, %1, !dbg !5874
  store double %sub, double* %t, align 8, !dbg !5875
  %2 = load double, double* %t, align 8, !dbg !5876
  %cmp = fcmp ogt double %2, 0.000000e+00, !dbg !5878
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !5879

land.lhs.true:                                    ; preds = %entry
  %3 = load i64, i64* %size.addr, align 8, !dbg !5880
  %cmp1 = icmp sgt i64 %3, 0, !dbg !5881
  br i1 %cmp1, label %if.then, label %if.else, !dbg !5882

if.then:                                          ; preds = %land.lhs.true
  %4 = load i64, i64* %size.addr, align 8, !dbg !5883
  %conv = sitofp i64 %4 to double, !dbg !5883
  %5 = load double, double* %t, align 8, !dbg !5885
  %div = fdiv double %conv, %5, !dbg !5886
  store double %div, double* %speed, align 8, !dbg !5887
  br label %if.end, !dbg !5888

if.else:                                          ; preds = %land.lhs.true, %entry
  store double 0.000000e+00, double* %speed, align 8, !dbg !5889
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = load double, double* %speed, align 8, !dbg !5891
  %cmp2 = fcmp ogt double %6, 5.242880e+05, !dbg !5893
  br i1 %cmp2, label %if.then4, label %if.else6, !dbg !5894

if.then4:                                         ; preds = %if.end
  %7 = load double, double* %t, align 8, !dbg !5895
  %8 = load double, double* %speed, align 8, !dbg !5897
  %div5 = fdiv double %8, 0x4130000000000000, !dbg !5898
  call void (i32, i8*, ...) @addreply(i32 0, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.249, i64 0, i64 0), double %7, double %div5), !dbg !5899
  br label %if.end17, !dbg !5900

if.else6:                                         ; preds = %if.end
  %9 = load double, double* %speed, align 8, !dbg !5901
  %cmp7 = fcmp ogt double %9, 5.120000e+02, !dbg !5903
  br i1 %cmp7, label %if.then9, label %if.else11, !dbg !5904

if.then9:                                         ; preds = %if.else6
  %10 = load double, double* %t, align 8, !dbg !5905
  %11 = load double, double* %speed, align 8, !dbg !5907
  %div10 = fdiv double %11, 1.024000e+03, !dbg !5908
  call void (i32, i8*, ...) @addreply(i32 0, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.250, i64 0, i64 0), double %10, double %div10), !dbg !5909
  br label %if.end16, !dbg !5910

if.else11:                                        ; preds = %if.else6
  %12 = load double, double* %speed, align 8, !dbg !5911
  %cmp12 = fcmp ogt double %12, 1.000000e-01, !dbg !5913
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !5914

if.then14:                                        ; preds = %if.else11
  %13 = load double, double* %t, align 8, !dbg !5915
  %14 = load double, double* %speed, align 8, !dbg !5917
  call void (i32, i8*, ...) @addreply(i32 0, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.251, i64 0, i64 0), double %13, double %14), !dbg !5918
  br label %if.end15, !dbg !5919

if.end15:                                         ; preds = %if.then14, %if.else11
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.then9
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.then4
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %speedstring, i64 0, i64 0, !dbg !5920
  %15 = load i64, i64* %size.addr, align 8, !dbg !5920
  %16 = load double, double* %speed, align 8, !dbg !5920
  %div18 = fdiv double %16, 1.024000e+03, !dbg !5920
  %call19 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 64, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.252, i64 0, i64 0), i64 %15, double %div18) #7, !dbg !5920
  %cmp20 = icmp sge i32 %call19, 64, !dbg !5920
  br i1 %cmp20, label %if.end36, label %if.then22, !dbg !5922

if.then22:                                        ; preds = %if.end17
  %17 = load i8*, i8** @root_directory, align 8, !dbg !5923
  %18 = load i8*, i8** %name.addr, align 8, !dbg !5925
  %19 = load i8, i8* %18, align 1, !dbg !5926
  %conv23 = sext i8 %19 to i32, !dbg !5926
  %cmp24 = icmp eq i32 %conv23, 47, !dbg !5927
  %20 = zext i1 %cmp24 to i64, !dbg !5926
  %cond = select i1 %cmp24, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([4097 x i8], [4097 x i8]* @wd, i64 0, i64 0), !dbg !5926
  %21 = load i8*, i8** %name.addr, align 8, !dbg !5928
  %22 = load i8, i8* %21, align 1, !dbg !5929
  %conv26 = sext i8 %22 to i32, !dbg !5929
  %cmp27 = icmp ne i32 %conv26, 47, !dbg !5930
  br i1 %cmp27, label %land.rhs, label %land.end, !dbg !5931

land.rhs:                                         ; preds = %if.then22
  %23 = load i8, i8* getelementptr inbounds ([4097 x i8], [4097 x i8]* @wd, i64 0, i64 0), align 16, !dbg !5932
  %tobool = icmp ne i8 %23, 0, !dbg !5932
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !5933

lor.rhs:                                          ; preds = %land.rhs
  %call29 = call i64 @strlen(i8* getelementptr inbounds ([4097 x i8], [4097 x i8]* @wd, i64 0, i64 0)) #12, !dbg !5934
  %sub30 = sub i64 %call29, 1, !dbg !5935
  %arrayidx = getelementptr [4097 x i8], [4097 x i8]* @wd, i64 0, i64 %sub30, !dbg !5936
  %24 = load i8, i8* %arrayidx, align 1, !dbg !5936
  %conv31 = sext i8 %24 to i32, !dbg !5936
  %cmp32 = icmp ne i32 %conv31, 47, !dbg !5937
  br label %lor.end, !dbg !5933

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %25 = phi i1 [ true, %land.rhs ], [ %cmp32, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %if.then22
  %26 = phi i1 [ false, %if.then22 ], [ %25, %lor.end ], !dbg !5938
  %27 = zext i1 %26 to i64, !dbg !5939
  %cond34 = select i1 %26, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.108, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.58, i64 0, i64 0), !dbg !5939
  %28 = load i8*, i8** %name.addr, align 8, !dbg !5940
  %29 = load i8*, i8** %word.addr, align 8, !dbg !5941
  %arraydecay35 = getelementptr inbounds [64 x i8], [64 x i8]* %speedstring, i64 0, i64 0, !dbg !5942
  call void (i32, i8*, ...) @logfile(i32 5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.253, i64 0, i64 0), i8* %17, i8* %cond, i8* %cond34, i8* %28, i8* %29, i8* %arraydecay35), !dbg !5943
  br label %if.end36, !dbg !5944

if.end36:                                         ; preds = %land.end, %if.end17
  %30 = load i32, i32* %up.addr, align 4, !dbg !5945
  ret void, !dbg !5946
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @_dlmap_remap(%struct.DLHandler_* %dlhandler) #0 !dbg !5947 {
entry:
  %retval = alloca i32, align 4
  %dlhandler.addr = alloca %struct.DLHandler_*, align 8
  %min_dlmap_size = alloca i64, align 8
  %remaining = alloca i64, align 8
  store %struct.DLHandler_* %dlhandler, %struct.DLHandler_** %dlhandler.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DLHandler_** %dlhandler.addr, metadata !5948, metadata !DIExpression()), !dbg !5949
  call void @llvm.dbg.declare(metadata i64* %min_dlmap_size, metadata !5950, metadata !DIExpression()), !dbg !5951
  call void @llvm.dbg.declare(metadata i64* %remaining, metadata !5952, metadata !DIExpression()), !dbg !5953
  %0 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5954
  %map_data = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %0, i32 0, i32 17, !dbg !5956
  %1 = load i8*, i8** %map_data, align 8, !dbg !5956
  %cmp = icmp ne i8* %1, null, !dbg !5957
  br i1 %cmp, label %if.then, label %if.end20, !dbg !5958

if.then:                                          ; preds = %entry
  %2 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5959
  %cur_pos = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %2, i32 0, i32 7, !dbg !5962
  %3 = load i64, i64* %cur_pos, align 8, !dbg !5962
  %4 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5963
  %dlmap_pos = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %4, i32 0, i32 12, !dbg !5964
  %5 = load i64, i64* %dlmap_pos, align 8, !dbg !5964
  %cmp1 = icmp sge i64 %3, %5, !dbg !5965
  br i1 %cmp1, label %land.lhs.true, label %if.end19, !dbg !5966

land.lhs.true:                                    ; preds = %if.then
  %6 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5967
  %cur_pos2 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %6, i32 0, i32 7, !dbg !5968
  %7 = load i64, i64* %cur_pos2, align 8, !dbg !5968
  %8 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5969
  %chunk_size = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %8, i32 0, i32 8, !dbg !5970
  %9 = load i64, i64* %chunk_size, align 8, !dbg !5970
  %add = add i64 %7, %9, !dbg !5971
  %10 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5972
  %dlmap_pos3 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %10, i32 0, i32 12, !dbg !5973
  %11 = load i64, i64* %dlmap_pos3, align 8, !dbg !5973
  %12 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5974
  %dlmap_size = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %12, i32 0, i32 6, !dbg !5975
  %13 = load i64, i64* %dlmap_size, align 8, !dbg !5975
  %add4 = add i64 %11, %13, !dbg !5976
  %cmp5 = icmp sle i64 %add, %add4, !dbg !5977
  br i1 %cmp5, label %if.then6, label %if.end19, !dbg !5978

if.then6:                                         ; preds = %land.lhs.true
  %14 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5979
  %cur_pos7 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %14, i32 0, i32 7, !dbg !5982
  %15 = load i64, i64* %cur_pos7, align 8, !dbg !5982
  %16 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5983
  %dlmap_pos8 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %16, i32 0, i32 12, !dbg !5984
  %17 = load i64, i64* %dlmap_pos8, align 8, !dbg !5984
  %cmp9 = icmp slt i64 %15, %17, !dbg !5985
  br i1 %cmp9, label %if.then14, label %lor.lhs.false, !dbg !5986

lor.lhs.false:                                    ; preds = %if.then6
  %18 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5987
  %cur_pos10 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %18, i32 0, i32 7, !dbg !5988
  %19 = load i64, i64* %cur_pos10, align 8, !dbg !5988
  %20 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5989
  %dlmap_pos11 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %20, i32 0, i32 12, !dbg !5990
  %21 = load i64, i64* %dlmap_pos11, align 8, !dbg !5990
  %sub = sub i64 %19, %21, !dbg !5991
  %22 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5992
  %dlmap_size12 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %22, i32 0, i32 6, !dbg !5993
  %23 = load i64, i64* %dlmap_size12, align 8, !dbg !5993
  %cmp13 = icmp sgt i64 %sub, %23, !dbg !5994
  br i1 %cmp13, label %if.then14, label %if.end, !dbg !5995

if.then14:                                        ; preds = %lor.lhs.false, %if.then6
  call void @addreply_noformat(i32 451, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.244, i64 0, i64 0)), !dbg !5996
  store i32 -1, i32* %retval, align 4, !dbg !5998
  br label %return, !dbg !5998

if.end:                                           ; preds = %lor.lhs.false
  %24 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !5999
  %map = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %24, i32 0, i32 16, !dbg !6000
  %25 = load i8*, i8** %map, align 8, !dbg !6000
  %26 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6001
  %cur_pos15 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %26, i32 0, i32 7, !dbg !6002
  %27 = load i64, i64* %cur_pos15, align 8, !dbg !6002
  %add.ptr = getelementptr i8, i8* %25, i64 %27, !dbg !6003
  %28 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6004
  %dlmap_pos16 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %28, i32 0, i32 12, !dbg !6005
  %29 = load i64, i64* %dlmap_pos16, align 8, !dbg !6005
  %idx.neg = sub i64 0, %29, !dbg !6006
  %add.ptr17 = getelementptr i8, i8* %add.ptr, i64 %idx.neg, !dbg !6006
  %30 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6007
  %map_data18 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %30, i32 0, i32 17, !dbg !6008
  store i8* %add.ptr17, i8** %map_data18, align 8, !dbg !6009
  store i32 0, i32* %retval, align 4, !dbg !6010
  br label %return, !dbg !6010

if.end19:                                         ; preds = %land.lhs.true, %if.then
  br label %if.end20, !dbg !6011

if.end20:                                         ; preds = %if.end19, %entry
  %31 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6012
  %file_size = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %31, i32 0, i32 5, !dbg !6014
  %32 = load i64, i64* %file_size, align 8, !dbg !6014
  %33 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6015
  %cur_pos21 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %33, i32 0, i32 7, !dbg !6016
  %34 = load i64, i64* %cur_pos21, align 8, !dbg !6016
  %sub22 = sub i64 %32, %34, !dbg !6017
  %35 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6018
  %chunk_size23 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %35, i32 0, i32 8, !dbg !6019
  %36 = load i64, i64* %chunk_size23, align 8, !dbg !6019
  %cmp24 = icmp slt i64 %sub22, %36, !dbg !6020
  br i1 %cmp24, label %if.then25, label %if.end30, !dbg !6021

if.then25:                                        ; preds = %if.end20
  %37 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6022
  %file_size26 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %37, i32 0, i32 5, !dbg !6024
  %38 = load i64, i64* %file_size26, align 8, !dbg !6024
  %39 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6025
  %cur_pos27 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %39, i32 0, i32 7, !dbg !6026
  %40 = load i64, i64* %cur_pos27, align 8, !dbg !6026
  %sub28 = sub i64 %38, %40, !dbg !6027
  %41 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6028
  %chunk_size29 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %41, i32 0, i32 8, !dbg !6029
  store i64 %sub28, i64* %chunk_size29, align 8, !dbg !6030
  br label %if.end30, !dbg !6031

if.end30:                                         ; preds = %if.then25, %if.end20
  %42 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6032
  %chunk_size31 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %42, i32 0, i32 8, !dbg !6034
  %43 = load i64, i64* %chunk_size31, align 8, !dbg !6034
  %cmp32 = icmp sle i64 %43, 0, !dbg !6035
  br i1 %cmp32, label %if.then33, label %if.end34, !dbg !6036

if.then33:                                        ; preds = %if.end30
  store i32 1, i32* %retval, align 4, !dbg !6037
  br label %return, !dbg !6037

if.end34:                                         ; preds = %if.end30
  %44 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6039
  %cur_pos35 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %44, i32 0, i32 7, !dbg !6040
  %45 = load i64, i64* %cur_pos35, align 8, !dbg !6040
  %46 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6041
  %dlmap_pos36 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %46, i32 0, i32 12, !dbg !6042
  store i64 %45, i64* %dlmap_pos36, align 8, !dbg !6043
  %47 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6044
  %chunk_size37 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %47, i32 0, i32 8, !dbg !6045
  %48 = load i64, i64* %chunk_size37, align 8, !dbg !6045
  store i64 %48, i64* %min_dlmap_size, align 8, !dbg !6046
  %49 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6047
  %dlmap_size38 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %49, i32 0, i32 6, !dbg !6049
  %50 = load i64, i64* %dlmap_size38, align 8, !dbg !6049
  %51 = load i64, i64* %min_dlmap_size, align 8, !dbg !6050
  %cmp39 = icmp ult i64 %50, %51, !dbg !6051
  br i1 %cmp39, label %if.then40, label %if.end42, !dbg !6052

if.then40:                                        ; preds = %if.end34
  %52 = load i64, i64* %min_dlmap_size, align 8, !dbg !6053
  %53 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6055
  %dlmap_size41 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %53, i32 0, i32 6, !dbg !6056
  store i64 %52, i64* %dlmap_size41, align 8, !dbg !6057
  br label %if.end42, !dbg !6058

if.end42:                                         ; preds = %if.then40, %if.end34
  %54 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6059
  %dlmap_size43 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %54, i32 0, i32 6, !dbg !6060
  %55 = load i64, i64* %dlmap_size43, align 8, !dbg !6060
  %56 = load i64, i64* @page_size, align 8, !dbg !6061
  %add44 = add i64 %55, %56, !dbg !6062
  %sub45 = sub i64 %add44, 1, !dbg !6063
  %57 = load i64, i64* @page_size, align 8, !dbg !6064
  %sub46 = sub i64 %57, 1, !dbg !6065
  %neg = xor i64 %sub46, -1, !dbg !6066
  %and = and i64 %sub45, %neg, !dbg !6067
  %58 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6068
  %dlmap_size47 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %58, i32 0, i32 6, !dbg !6069
  store i64 %and, i64* %dlmap_size47, align 8, !dbg !6070
  %59 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6071
  %dlmap_size48 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %59, i32 0, i32 6, !dbg !6073
  %60 = load i64, i64* %dlmap_size48, align 8, !dbg !6073
  %61 = load i64, i64* @page_size, align 8, !dbg !6074
  %cmp49 = icmp ult i64 %60, %61, !dbg !6075
  br i1 %cmp49, label %if.then50, label %if.end52, !dbg !6076

if.then50:                                        ; preds = %if.end42
  %62 = load i64, i64* @page_size, align 8, !dbg !6077
  %63 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6079
  %dlmap_size51 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %63, i32 0, i32 6, !dbg !6080
  store i64 %62, i64* %dlmap_size51, align 8, !dbg !6081
  br label %if.end52, !dbg !6082

if.end52:                                         ; preds = %if.then50, %if.end42
  %64 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6083
  %file_size53 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %64, i32 0, i32 5, !dbg !6084
  %65 = load i64, i64* %file_size53, align 8, !dbg !6084
  %66 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6085
  %dlmap_pos54 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %66, i32 0, i32 12, !dbg !6086
  %67 = load i64, i64* %dlmap_pos54, align 8, !dbg !6086
  %sub55 = sub i64 %65, %67, !dbg !6087
  store i64 %sub55, i64* %remaining, align 8, !dbg !6088
  %68 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6089
  %dlmap_size56 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %68, i32 0, i32 6, !dbg !6091
  %69 = load i64, i64* %dlmap_size56, align 8, !dbg !6091
  %70 = load i64, i64* %remaining, align 8, !dbg !6092
  %cmp57 = icmp sgt i64 %69, %70, !dbg !6093
  br i1 %cmp57, label %if.then58, label %if.end60, !dbg !6094

if.then58:                                        ; preds = %if.end52
  %71 = load i64, i64* %remaining, align 8, !dbg !6095
  %72 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6097
  %dlmap_size59 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %72, i32 0, i32 6, !dbg !6098
  store i64 %71, i64* %dlmap_size59, align 8, !dbg !6099
  br label %if.end60, !dbg !6100

if.end60:                                         ; preds = %if.then58, %if.end52
  %73 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6101
  %call = call i32 @_dlmap_read(%struct.DLHandler_* %73), !dbg !6103
  %cmp61 = icmp ne i32 %call, 0, !dbg !6104
  br i1 %cmp61, label %if.then62, label %if.end63, !dbg !6105

if.then62:                                        ; preds = %if.end60
  call void @error(i32 451, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.245, i64 0, i64 0)), !dbg !6106
  store i32 -1, i32* %retval, align 4, !dbg !6108
  br label %return, !dbg !6108

if.end63:                                         ; preds = %if.end60
  %74 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6109
  %map64 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %74, i32 0, i32 16, !dbg !6110
  %75 = load i8*, i8** %map64, align 8, !dbg !6110
  %76 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6111
  %map_data65 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %76, i32 0, i32 17, !dbg !6112
  store i8* %75, i8** %map_data65, align 8, !dbg !6113
  store i32 0, i32* %retval, align 4, !dbg !6114
  br label %return, !dbg !6114

return:                                           ; preds = %if.end63, %if.then62, %if.then33, %if.end, %if.then14
  %77 = load i32, i32* %retval, align 4, !dbg !6115
  ret i32 %77, !dbg !6115
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @dl_dowrite(%struct.DLHandler_* %dlhandler, i8* %buf_, i64 %size_, i64* %downloaded) #0 !dbg !6116 {
entry:
  %retval = alloca i32, align 4
  %dlhandler.addr = alloca %struct.DLHandler_*, align 8
  %buf_.addr = alloca i8*, align 8
  %size_.addr = alloca i64, align 8
  %downloaded.addr = alloca i64*, align 8
  %size = alloca i64, align 8
  %buf = alloca i8*, align 8
  %asciibuf = alloca i8*, align 8
  %ret = alloca i32, align 4
  %asciibufpnt = alloca i8*, align 8
  %z = alloca i64, align 8
  store %struct.DLHandler_* %dlhandler, %struct.DLHandler_** %dlhandler.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DLHandler_** %dlhandler.addr, metadata !6121, metadata !DIExpression()), !dbg !6122
  store i8* %buf_, i8** %buf_.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf_.addr, metadata !6123, metadata !DIExpression()), !dbg !6124
  store i64 %size_, i64* %size_.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size_.addr, metadata !6125, metadata !DIExpression()), !dbg !6126
  store i64* %downloaded, i64** %downloaded.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %downloaded.addr, metadata !6127, metadata !DIExpression()), !dbg !6128
  call void @llvm.dbg.declare(metadata i64* %size, metadata !6129, metadata !DIExpression()), !dbg !6130
  %0 = load i64, i64* %size_.addr, align 8, !dbg !6131
  store i64 %0, i64* %size, align 8, !dbg !6130
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !6132, metadata !DIExpression()), !dbg !6133
  %1 = load i8*, i8** %buf_.addr, align 8, !dbg !6134
  store i8* %1, i8** %buf, align 8, !dbg !6133
  call void @llvm.dbg.declare(metadata i8** %asciibuf, metadata !6135, metadata !DIExpression()), !dbg !6136
  store i8* null, i8** %asciibuf, align 8, !dbg !6136
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6137, metadata !DIExpression()), !dbg !6138
  store i32 0, i32* %ret, align 4, !dbg !6138
  %2 = load i64, i64* %size_.addr, align 8, !dbg !6139
  %cmp = icmp ule i64 %2, 0, !dbg !6141
  br i1 %cmp, label %if.then, label %if.end, !dbg !6142

if.then:                                          ; preds = %entry
  %3 = load i64*, i64** %downloaded.addr, align 8, !dbg !6143
  store i64 0, i64* %3, align 8, !dbg !6145
  store i32 -1, i32* %retval, align 4, !dbg !6146
  br label %return, !dbg !6146

if.end:                                           ; preds = %entry
  %4 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6147
  %ascii_mode = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %4, i32 0, i32 18, !dbg !6149
  %5 = load i32, i32* %ascii_mode, align 8, !dbg !6149
  %cmp1 = icmp sgt i32 %5, 0, !dbg !6150
  br i1 %cmp1, label %if.then2, label %if.end16, !dbg !6151

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %asciibufpnt, metadata !6152, metadata !DIExpression()), !dbg !6154
  call void @llvm.dbg.declare(metadata i64* %z, metadata !6155, metadata !DIExpression()), !dbg !6156
  store i64 0, i64* %z, align 8, !dbg !6156
  %6 = load i64, i64* %size, align 8, !dbg !6157
  %7 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6159
  %chunk_size = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %7, i32 0, i32 8, !dbg !6160
  %8 = load i64, i64* %chunk_size, align 8, !dbg !6160
  %cmp3 = icmp ugt i64 %6, %8, !dbg !6161
  br i1 %cmp3, label %if.then6, label %lor.lhs.false, !dbg !6162

lor.lhs.false:                                    ; preds = %if.then2
  %9 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6163
  %chunk_size4 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %9, i32 0, i32 8, !dbg !6163
  %10 = load i64, i64* %chunk_size4, align 8, !dbg !6163
  %mul = mul i64 %10, 2, !dbg !6163
  %11 = alloca i8, i64 %mul, align 16, !dbg !6163
  store i8* %11, i8** %asciibuf, align 8, !dbg !6164
  %cmp5 = icmp eq i8* %11, null, !dbg !6165
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !6166

if.then6:                                         ; preds = %lor.lhs.false, %if.then2
  store i32 -1, i32* %retval, align 4, !dbg !6167
  br label %return, !dbg !6167

if.end7:                                          ; preds = %lor.lhs.false
  %12 = load i8*, i8** %asciibuf, align 8, !dbg !6169
  store i8* %12, i8** %asciibufpnt, align 8, !dbg !6170
  br label %do.body, !dbg !6171

do.body:                                          ; preds = %do.cond, %if.end7
  %13 = load i8*, i8** %buf_.addr, align 8, !dbg !6172
  %14 = load i64, i64* %z, align 8, !dbg !6175
  %arrayidx = getelementptr i8, i8* %13, i64 %14, !dbg !6172
  %15 = load i8, i8* %arrayidx, align 1, !dbg !6172
  %conv = zext i8 %15 to i32, !dbg !6172
  %cmp8 = icmp eq i32 %conv, 10, !dbg !6176
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !6177

if.then10:                                        ; preds = %do.body
  %16 = load i8*, i8** %asciibufpnt, align 8, !dbg !6178
  %incdec.ptr = getelementptr i8, i8* %16, i32 1, !dbg !6178
  store i8* %incdec.ptr, i8** %asciibufpnt, align 8, !dbg !6178
  store i8 13, i8* %16, align 1, !dbg !6180
  br label %if.end11, !dbg !6181

if.end11:                                         ; preds = %if.then10, %do.body
  %17 = load i8*, i8** %buf_.addr, align 8, !dbg !6182
  %18 = load i64, i64* %z, align 8, !dbg !6183
  %arrayidx12 = getelementptr i8, i8* %17, i64 %18, !dbg !6182
  %19 = load i8, i8* %arrayidx12, align 1, !dbg !6182
  %20 = load i8*, i8** %asciibufpnt, align 8, !dbg !6184
  %incdec.ptr13 = getelementptr i8, i8* %20, i32 1, !dbg !6184
  store i8* %incdec.ptr13, i8** %asciibufpnt, align 8, !dbg !6184
  store i8 %19, i8* %20, align 1, !dbg !6185
  %21 = load i64, i64* %z, align 8, !dbg !6186
  %inc = add i64 %21, 1, !dbg !6186
  store i64 %inc, i64* %z, align 8, !dbg !6186
  br label %do.cond, !dbg !6187

do.cond:                                          ; preds = %if.end11
  %22 = load i64, i64* %z, align 8, !dbg !6188
  %23 = load i64, i64* %size, align 8, !dbg !6189
  %cmp14 = icmp ult i64 %22, %23, !dbg !6190
  br i1 %cmp14, label %do.body, label %do.end, !dbg !6187, !llvm.loop !6191

do.end:                                           ; preds = %do.cond
  %24 = load i8*, i8** %asciibuf, align 8, !dbg !6193
  store i8* %24, i8** %buf, align 8, !dbg !6194
  %25 = load i8*, i8** %asciibufpnt, align 8, !dbg !6195
  %26 = load i8*, i8** %asciibuf, align 8, !dbg !6196
  %sub.ptr.lhs.cast = ptrtoint i8* %25 to i64, !dbg !6197
  %sub.ptr.rhs.cast = ptrtoint i8* %26 to i64, !dbg !6197
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6197
  store i64 %sub.ptr.sub, i64* %size, align 8, !dbg !6198
  br label %if.end16, !dbg !6199

if.end16:                                         ; preds = %do.end, %if.end
  %27 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6200
  %xferfd = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %27, i32 0, i32 2, !dbg !6201
  %28 = load i32, i32* %xferfd, align 8, !dbg !6201
  %29 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6202
  %tls_fd = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %29, i32 0, i32 4, !dbg !6203
  %30 = load i8*, i8** %tls_fd, align 8, !dbg !6203
  %31 = load i8*, i8** %buf, align 8, !dbg !6204
  %32 = load i64, i64* %size, align 8, !dbg !6205
  %call = call i64 @safe_nonblock_write(i32 %28, i8* %30, i8* %31, i64 %32), !dbg !6206
  %conv17 = trunc i64 %call to i32, !dbg !6206
  store i32 %conv17, i32* %ret, align 4, !dbg !6207
  %33 = load i8*, i8** %asciibuf, align 8, !dbg !6208
  %cmp18 = icmp ne i8* %33, null, !dbg !6210
  br i1 %cmp18, label %if.then20, label %if.end24, !dbg !6211

if.then20:                                        ; preds = %if.end16
  br label %do.body21, !dbg !6212

do.body21:                                        ; preds = %if.then20
  br label %do.end23, !dbg !6214

do.end23:                                         ; preds = %do.body21
  br label %if.end24, !dbg !6216

if.end24:                                         ; preds = %do.end23, %if.end16
  %34 = load i32, i32* %ret, align 4, !dbg !6217
  %cmp25 = icmp slt i32 %34, 0, !dbg !6219
  br i1 %cmp25, label %if.then27, label %if.else, !dbg !6220

if.then27:                                        ; preds = %if.end24
  %35 = load i64*, i64** %downloaded.addr, align 8, !dbg !6221
  store i64 0, i64* %35, align 8, !dbg !6223
  br label %if.end28, !dbg !6224

if.else:                                          ; preds = %if.end24
  %36 = load i64, i64* %size, align 8, !dbg !6225
  %37 = load i64*, i64** %downloaded.addr, align 8, !dbg !6227
  store i64 %36, i64* %37, align 8, !dbg !6228
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.then27
  %38 = load i32, i32* %ret, align 4, !dbg !6229
  store i32 %38, i32* %retval, align 4, !dbg !6230
  br label %return, !dbg !6230

return:                                           ; preds = %if.end28, %if.then6, %if.then
  %39 = load i32, i32* %retval, align 4, !dbg !6231
  ret i32 %39, !dbg !6231
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @dlhandler_throttle(%struct.DLHandler_* %dlhandler, i64 %downloaded, double %ts_start, double* %required_sleep) #0 !dbg !6232 {
entry:
  %retval = alloca i32, align 4
  %dlhandler.addr = alloca %struct.DLHandler_*, align 8
  %downloaded.addr = alloca i64, align 8
  %ts_start.addr = alloca double, align 8
  %required_sleep.addr = alloca double*, align 8
  %ts_now = alloca double, align 8
  %elapsed = alloca double, align 8
  %would_be_downloaded = alloca i64, align 8
  %wanted_ts = alloca double, align 8
  %previous_chunk_size = alloca i64, align 8
  store %struct.DLHandler_* %dlhandler, %struct.DLHandler_** %dlhandler.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DLHandler_** %dlhandler.addr, metadata !6236, metadata !DIExpression()), !dbg !6237
  store i64 %downloaded, i64* %downloaded.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %downloaded.addr, metadata !6238, metadata !DIExpression()), !dbg !6239
  store double %ts_start, double* %ts_start.addr, align 8
  call void @llvm.dbg.declare(metadata double* %ts_start.addr, metadata !6240, metadata !DIExpression()), !dbg !6241
  store double* %required_sleep, double** %required_sleep.addr, align 8
  call void @llvm.dbg.declare(metadata double** %required_sleep.addr, metadata !6242, metadata !DIExpression()), !dbg !6243
  call void @llvm.dbg.declare(metadata double* %ts_now, metadata !6244, metadata !DIExpression()), !dbg !6245
  call void @llvm.dbg.declare(metadata double* %elapsed, metadata !6246, metadata !DIExpression()), !dbg !6247
  call void @llvm.dbg.declare(metadata i64* %would_be_downloaded, metadata !6248, metadata !DIExpression()), !dbg !6249
  call void @llvm.dbg.declare(metadata double* %wanted_ts, metadata !6250, metadata !DIExpression()), !dbg !6251
  call void @llvm.dbg.declare(metadata i64* %previous_chunk_size, metadata !6252, metadata !DIExpression()), !dbg !6253
  %0 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6254
  %bandwidth = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %0, i32 0, i32 21, !dbg !6256
  %1 = load i64, i64* %bandwidth, align 8, !dbg !6256
  %cmp = icmp ule i64 %1, 0, !dbg !6257
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6258

lor.lhs.false:                                    ; preds = %entry
  %2 = load i64, i64* %downloaded.addr, align 8, !dbg !6259
  %cmp1 = icmp sle i64 %2, 0, !dbg !6260
  br i1 %cmp1, label %if.then, label %if.end, !dbg !6261

if.then:                                          ; preds = %lor.lhs.false, %entry
  %3 = load double*, double** %required_sleep.addr, align 8, !dbg !6262
  store double 0.000000e+00, double* %3, align 8, !dbg !6264
  store i32 0, i32* %retval, align 4, !dbg !6265
  br label %return, !dbg !6265

if.end:                                           ; preds = %lor.lhs.false
  %call = call double @get_usec_time(), !dbg !6266
  store double %call, double* %ts_now, align 8, !dbg !6268
  %cmp2 = fcmp ole double %call, 0.000000e+00, !dbg !6269
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !6270

if.then3:                                         ; preds = %if.end
  %4 = load double, double* %ts_start.addr, align 8, !dbg !6271
  store double %4, double* %ts_now, align 8, !dbg !6273
  br label %if.end4, !dbg !6274

if.end4:                                          ; preds = %if.then3, %if.end
  %5 = load double, double* %ts_start.addr, align 8, !dbg !6275
  %6 = load double, double* %ts_now, align 8, !dbg !6277
  %cmp5 = fcmp ogt double %5, %6, !dbg !6278
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !6279

if.then6:                                         ; preds = %if.end4
  %7 = load double, double* %ts_start.addr, align 8, !dbg !6280
  store double %7, double* %ts_now, align 8, !dbg !6282
  br label %if.end7, !dbg !6283

if.end7:                                          ; preds = %if.then6, %if.end4
  %8 = load double, double* %ts_now, align 8, !dbg !6284
  %9 = load double, double* %ts_start.addr, align 8, !dbg !6285
  %sub = fsub double %8, %9, !dbg !6286
  store double %sub, double* %elapsed, align 8, !dbg !6287
  %10 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6288
  %total_downloaded = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %10, i32 0, i32 14, !dbg !6289
  %11 = load i64, i64* %total_downloaded, align 8, !dbg !6289
  %12 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6290
  %chunk_size = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %12, i32 0, i32 8, !dbg !6291
  %13 = load i64, i64* %chunk_size, align 8, !dbg !6291
  %add = add i64 %11, %13, !dbg !6292
  store i64 %add, i64* %would_be_downloaded, align 8, !dbg !6293
  %14 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6294
  %bandwidth8 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %14, i32 0, i32 21, !dbg !6296
  %15 = load i64, i64* %bandwidth8, align 8, !dbg !6296
  %cmp9 = icmp ugt i64 %15, 0, !dbg !6297
  br i1 %cmp9, label %if.then10, label %if.else, !dbg !6298

if.then10:                                        ; preds = %if.end7
  %16 = load i64, i64* %would_be_downloaded, align 8, !dbg !6299
  %conv = sitofp i64 %16 to double, !dbg !6301
  %17 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6302
  %bandwidth11 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %17, i32 0, i32 21, !dbg !6303
  %18 = load i64, i64* %bandwidth11, align 8, !dbg !6303
  %conv12 = uitofp i64 %18 to double, !dbg !6304
  %div = fdiv double %conv, %conv12, !dbg !6305
  store double %div, double* %wanted_ts, align 8, !dbg !6306
  br label %if.end13, !dbg !6307

if.else:                                          ; preds = %if.end7
  %19 = load double, double* %elapsed, align 8, !dbg !6308
  store double %19, double* %wanted_ts, align 8, !dbg !6310
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then10
  %20 = load double, double* %wanted_ts, align 8, !dbg !6311
  %21 = load double, double* %elapsed, align 8, !dbg !6312
  %sub14 = fsub double %20, %21, !dbg !6313
  %22 = load double*, double** %required_sleep.addr, align 8, !dbg !6314
  store double %sub14, double* %22, align 8, !dbg !6315
  %23 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6316
  %chunk_size15 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %23, i32 0, i32 8, !dbg !6317
  %24 = load i64, i64* %chunk_size15, align 8, !dbg !6317
  store i64 %24, i64* %previous_chunk_size, align 8, !dbg !6318
  %25 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6319
  %total_downloaded16 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %25, i32 0, i32 14, !dbg !6321
  %26 = load i64, i64* %total_downloaded16, align 8, !dbg !6321
  %27 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6322
  %chunk_size17 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %27, i32 0, i32 8, !dbg !6323
  %28 = load i64, i64* %chunk_size17, align 8, !dbg !6323
  %cmp18 = icmp sle i64 %26, %28, !dbg !6324
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !6325

if.then20:                                        ; preds = %if.end13
  store i32 0, i32* %retval, align 4, !dbg !6326
  br label %return, !dbg !6326

if.end21:                                         ; preds = %if.end13
  %29 = load double*, double** %required_sleep.addr, align 8, !dbg !6328
  %30 = load double, double* %29, align 8, !dbg !6330
  %31 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6331
  %min_sleep = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %31, i32 0, i32 19, !dbg !6332
  %32 = load double, double* %min_sleep, align 8, !dbg !6332
  %cmp22 = fcmp olt double %30, %32, !dbg !6333
  br i1 %cmp22, label %if.then24, label %if.else29, !dbg !6334

if.then24:                                        ; preds = %if.end21
  %33 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6335
  %max_chunk_size = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %33, i32 0, i32 11, !dbg !6337
  %34 = load i64, i64* %max_chunk_size, align 8, !dbg !6337
  %35 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6338
  %chunk_size25 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %35, i32 0, i32 8, !dbg !6339
  %36 = load i64, i64* %chunk_size25, align 8, !dbg !6339
  %add26 = add i64 %34, %36, !dbg !6340
  %div27 = sdiv i64 %add26, 2, !dbg !6341
  %37 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6342
  %chunk_size28 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %37, i32 0, i32 8, !dbg !6343
  store i64 %div27, i64* %chunk_size28, align 8, !dbg !6344
  br label %if.end40, !dbg !6345

if.else29:                                        ; preds = %if.end21
  %38 = load double*, double** %required_sleep.addr, align 8, !dbg !6346
  %39 = load double, double* %38, align 8, !dbg !6348
  %40 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6349
  %max_sleep = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %40, i32 0, i32 20, !dbg !6350
  %41 = load double, double* %max_sleep, align 8, !dbg !6350
  %cmp30 = fcmp ogt double %39, %41, !dbg !6351
  br i1 %cmp30, label %if.then32, label %if.else37, !dbg !6352

if.then32:                                        ; preds = %if.else29
  %42 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6353
  %min_chunk_size = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %42, i32 0, i32 9, !dbg !6355
  %43 = load i64, i64* %min_chunk_size, align 8, !dbg !6355
  %44 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6356
  %chunk_size33 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %44, i32 0, i32 8, !dbg !6357
  %45 = load i64, i64* %chunk_size33, align 8, !dbg !6357
  %add34 = add i64 %43, %45, !dbg !6358
  %div35 = sdiv i64 %add34, 2, !dbg !6359
  %46 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6360
  %chunk_size36 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %46, i32 0, i32 8, !dbg !6361
  store i64 %div35, i64* %chunk_size36, align 8, !dbg !6362
  br label %if.end39, !dbg !6363

if.else37:                                        ; preds = %if.else29
  %47 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6364
  %default_chunk_size = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %47, i32 0, i32 10, !dbg !6366
  %48 = load i64, i64* %default_chunk_size, align 8, !dbg !6366
  %49 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6367
  %chunk_size38 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %49, i32 0, i32 8, !dbg !6368
  store i64 %48, i64* %chunk_size38, align 8, !dbg !6369
  br label %if.end39

if.end39:                                         ; preds = %if.else37, %if.then32
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.then24
  %50 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6370
  %chunk_size41 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %50, i32 0, i32 8, !dbg !6372
  %51 = load i64, i64* %chunk_size41, align 8, !dbg !6372
  %cmp42 = icmp sle i64 %51, 0, !dbg !6373
  br i1 %cmp42, label %if.then48, label %lor.lhs.false44, !dbg !6374

lor.lhs.false44:                                  ; preds = %if.end40
  %52 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6375
  %chunk_size45 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %52, i32 0, i32 8, !dbg !6376
  %53 = load i64, i64* %chunk_size45, align 8, !dbg !6376
  %cmp46 = icmp sgt i64 %53, 2147483647, !dbg !6377
  br i1 %cmp46, label %if.then48, label %if.end51, !dbg !6378

if.then48:                                        ; preds = %lor.lhs.false44, %if.end40
  %54 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6379
  %default_chunk_size49 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %54, i32 0, i32 10, !dbg !6381
  %55 = load i64, i64* %default_chunk_size49, align 8, !dbg !6381
  %56 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6382
  %chunk_size50 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %56, i32 0, i32 8, !dbg !6383
  store i64 %55, i64* %chunk_size50, align 8, !dbg !6384
  br label %if.end51, !dbg !6385

if.end51:                                         ; preds = %if.then48, %lor.lhs.false44
  %57 = load i64, i64* %previous_chunk_size, align 8, !dbg !6386
  %58 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6388
  %default_chunk_size52 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %58, i32 0, i32 10, !dbg !6389
  %59 = load i64, i64* %default_chunk_size52, align 8, !dbg !6389
  %cmp53 = icmp ne i64 %57, %59, !dbg !6390
  br i1 %cmp53, label %if.then55, label %if.end70, !dbg !6391

if.then55:                                        ; preds = %if.end51
  %60 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6392
  %total_downloaded56 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %60, i32 0, i32 14, !dbg !6394
  %61 = load i64, i64* %total_downloaded56, align 8, !dbg !6394
  %62 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6395
  %chunk_size57 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %62, i32 0, i32 8, !dbg !6396
  %63 = load i64, i64* %chunk_size57, align 8, !dbg !6396
  %add58 = add i64 %61, %63, !dbg !6397
  store i64 %add58, i64* %would_be_downloaded, align 8, !dbg !6398
  %64 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6399
  %bandwidth59 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %64, i32 0, i32 21, !dbg !6401
  %65 = load i64, i64* %bandwidth59, align 8, !dbg !6401
  %cmp60 = icmp ugt i64 %65, 0, !dbg !6402
  br i1 %cmp60, label %if.then62, label %if.else67, !dbg !6403

if.then62:                                        ; preds = %if.then55
  %66 = load i64, i64* %would_be_downloaded, align 8, !dbg !6404
  %conv63 = sitofp i64 %66 to double, !dbg !6406
  %67 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6407
  %bandwidth64 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %67, i32 0, i32 21, !dbg !6408
  %68 = load i64, i64* %bandwidth64, align 8, !dbg !6408
  %conv65 = uitofp i64 %68 to double, !dbg !6409
  %div66 = fdiv double %conv63, %conv65, !dbg !6410
  store double %div66, double* %wanted_ts, align 8, !dbg !6411
  br label %if.end68, !dbg !6412

if.else67:                                        ; preds = %if.then55
  %69 = load double, double* %elapsed, align 8, !dbg !6413
  store double %69, double* %wanted_ts, align 8, !dbg !6415
  br label %if.end68

if.end68:                                         ; preds = %if.else67, %if.then62
  %70 = load double, double* %wanted_ts, align 8, !dbg !6416
  %71 = load double, double* %elapsed, align 8, !dbg !6417
  %sub69 = fsub double %70, %71, !dbg !6418
  %72 = load double*, double** %required_sleep.addr, align 8, !dbg !6419
  store double %sub69, double* %72, align 8, !dbg !6420
  br label %if.end70, !dbg !6421

if.end70:                                         ; preds = %if.end68, %if.end51
  store i32 0, i32* %retval, align 4, !dbg !6422
  br label %return, !dbg !6422

return:                                           ; preds = %if.end70, %if.then20, %if.then
  %73 = load i32, i32* %retval, align 4, !dbg !6423
  ret i32 %73, !dbg !6423
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @dlhandler_handle_commands(%struct.DLHandler_* %dlhandler, double %required_sleep) #0 !dbg !6424 {
entry:
  %retval = alloca i32, align 4
  %dlhandler.addr = alloca %struct.DLHandler_*, align 8
  %required_sleep.addr = alloca double, align 8
  %pollret = alloca i32, align 4
  %buf = alloca [100 x i8], align 16
  %bufpnt = alloca i8*, align 8
  %readnb = alloca i64, align 8
  store %struct.DLHandler_* %dlhandler, %struct.DLHandler_** %dlhandler.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DLHandler_** %dlhandler.addr, metadata !6427, metadata !DIExpression()), !dbg !6428
  store double %required_sleep, double* %required_sleep.addr, align 8
  call void @llvm.dbg.declare(metadata double* %required_sleep.addr, metadata !6429, metadata !DIExpression()), !dbg !6430
  call void @llvm.dbg.declare(metadata i32* %pollret, metadata !6431, metadata !DIExpression()), !dbg !6432
  call void @llvm.dbg.declare(metadata [100 x i8]* %buf, metadata !6433, metadata !DIExpression()), !dbg !6437
  call void @llvm.dbg.declare(metadata i8** %bufpnt, metadata !6438, metadata !DIExpression()), !dbg !6439
  call void @llvm.dbg.declare(metadata i64* %readnb, metadata !6440, metadata !DIExpression()), !dbg !6441
  br label %repoll, !dbg !6442

repoll:                                           ; preds = %if.then49, %entry
  call void @llvm.dbg.label(metadata !6443), !dbg !6444
  %0 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6445
  %pfds_f_in = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %0, i32 0, i32 22, !dbg !6446
  %revents = getelementptr inbounds %struct.pollfd, %struct.pollfd* %pfds_f_in, i32 0, i32 2, !dbg !6447
  store i16 0, i16* %revents, align 2, !dbg !6448
  %1 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6449
  %pfds_f_in1 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %1, i32 0, i32 22, !dbg !6450
  %2 = load double, double* %required_sleep.addr, align 8, !dbg !6451
  %cmp = fcmp ole double %2, 0.000000e+00, !dbg !6452
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6451

cond.true:                                        ; preds = %repoll
  br label %cond.end, !dbg !6451

cond.false:                                       ; preds = %repoll
  %3 = load double, double* %required_sleep.addr, align 8, !dbg !6453
  %mul = fmul double %3, 1.000000e+03, !dbg !6454
  %conv = fptosi double %mul to i32, !dbg !6455
  br label %cond.end, !dbg !6451

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv, %cond.false ], !dbg !6451
  %call = call i32 @poll(%struct.pollfd* %pfds_f_in1, i64 1, i32 %cond), !dbg !6456
  store i32 %call, i32* %pollret, align 4, !dbg !6457
  %4 = load i32, i32* %pollret, align 4, !dbg !6458
  %cmp2 = icmp sle i32 %4, 0, !dbg !6460
  br i1 %cmp2, label %if.then, label %if.end, !dbg !6461

if.then:                                          ; preds = %cond.end
  %5 = load i32, i32* %pollret, align 4, !dbg !6462
  store i32 %5, i32* %retval, align 4, !dbg !6464
  br label %return, !dbg !6464

if.end:                                           ; preds = %cond.end
  %6 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6465
  %pfds_f_in4 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %6, i32 0, i32 22, !dbg !6467
  %revents5 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %pfds_f_in4, i32 0, i32 2, !dbg !6468
  %7 = load i16, i16* %revents5, align 2, !dbg !6468
  %conv6 = sext i16 %7 to i32, !dbg !6465
  %and = and i32 %conv6, 3, !dbg !6469
  %cmp7 = icmp ne i32 %and, 0, !dbg !6470
  br i1 %cmp7, label %if.then9, label %if.else51, !dbg !6471

if.then9:                                         ; preds = %if.end
  %8 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6472
  %tls_clientfd = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %8, i32 0, i32 1, !dbg !6475
  %9 = load i8*, i8** %tls_clientfd, align 8, !dbg !6475
  %cmp10 = icmp ne i8* %9, null, !dbg !6476
  br i1 %cmp10, label %if.then12, label %if.else, !dbg !6477

if.then12:                                        ; preds = %if.then9
  call void @abort() #13, !dbg !6478
  unreachable, !dbg !6478

if.else:                                          ; preds = %if.then9
  %10 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6480
  %clientfd = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %10, i32 0, i32 0, !dbg !6482
  %11 = load i32, i32* %clientfd, align 8, !dbg !6482
  %arraydecay = getelementptr inbounds [100 x i8], [100 x i8]* %buf, i64 0, i64 0, !dbg !6483
  %call13 = call i64 @read(i32 %11, i8* %arraydecay, i64 99), !dbg !6484
  store i64 %call13, i64* %readnb, align 8, !dbg !6485
  br label %if.end14

if.end14:                                         ; preds = %if.else
  %12 = load i64, i64* %readnb, align 8, !dbg !6486
  %cmp15 = icmp eq i64 %12, 0, !dbg !6488
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !6489

if.then17:                                        ; preds = %if.end14
  store i32 -2, i32* %retval, align 4, !dbg !6490
  br label %return, !dbg !6490

if.end18:                                         ; preds = %if.end14
  %13 = load i64, i64* %readnb, align 8, !dbg !6492
  %cmp19 = icmp slt i64 %13, 0, !dbg !6494
  br i1 %cmp19, label %if.then21, label %if.end30, !dbg !6495

if.then21:                                        ; preds = %if.end18
  %call22 = call i32* @__errno_location() #14, !dbg !6496
  %14 = load i32, i32* %call22, align 4, !dbg !6496
  %cmp23 = icmp eq i32 %14, 11, !dbg !6499
  br i1 %cmp23, label %if.then28, label %lor.lhs.false, !dbg !6500

lor.lhs.false:                                    ; preds = %if.then21
  %call25 = call i32* @__errno_location() #14, !dbg !6501
  %15 = load i32, i32* %call25, align 4, !dbg !6501
  %cmp26 = icmp eq i32 %15, 4, !dbg !6502
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !6503

if.then28:                                        ; preds = %lor.lhs.false, %if.then21
  store i32 0, i32* %retval, align 4, !dbg !6504
  br label %return, !dbg !6504

if.end29:                                         ; preds = %lor.lhs.false
  store i32 -1, i32* %retval, align 4, !dbg !6506
  br label %return, !dbg !6506

if.end30:                                         ; preds = %if.end18
  %16 = load i64, i64* %readnb, align 8, !dbg !6507
  %arrayidx = getelementptr [100 x i8], [100 x i8]* %buf, i64 0, i64 %16, !dbg !6508
  store i8 0, i8* %arrayidx, align 1, !dbg !6509
  %arraydecay31 = getelementptr inbounds [100 x i8], [100 x i8]* %buf, i64 0, i64 0, !dbg !6510
  %call32 = call i8* @skip_telnet_controls(i8* %arraydecay31), !dbg !6511
  store i8* %call32, i8** %bufpnt, align 8, !dbg !6512
  %17 = load i8*, i8** %bufpnt, align 8, !dbg !6513
  %call33 = call i8* @strchr(i8* %17, i32 10) #12, !dbg !6515
  %cmp34 = icmp ne i8* %call33, null, !dbg !6516
  br i1 %cmp34, label %if.then36, label %if.end46, !dbg !6517

if.then36:                                        ; preds = %if.end30
  %18 = load i8*, i8** %bufpnt, align 8, !dbg !6518
  %call37 = call i32 @strncasecmp(i8* %18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.246, i64 0, i64 0), i64 4) #12, !dbg !6521
  %cmp38 = icmp ne i32 %call37, 0, !dbg !6522
  br i1 %cmp38, label %land.lhs.true, label %if.else44, !dbg !6523

land.lhs.true:                                    ; preds = %if.then36
  %19 = load i8*, i8** %bufpnt, align 8, !dbg !6524
  %call40 = call i32 @strncasecmp(i8* %19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.247, i64 0, i64 0), i64 4) #12, !dbg !6525
  %cmp41 = icmp ne i32 %call40, 0, !dbg !6526
  br i1 %cmp41, label %if.then43, label %if.else44, !dbg !6527

if.then43:                                        ; preds = %land.lhs.true
  call void @addreply_noformat(i32 500, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.215, i64 0, i64 0)), !dbg !6528
  call void @doreply(), !dbg !6530
  br label %if.end45, !dbg !6531

if.else44:                                        ; preds = %land.lhs.true, %if.then36
  call void @addreply_noformat(i32 426, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.248, i64 0, i64 0)), !dbg !6532
  call void @doreply(), !dbg !6534
  call void @addreply_noformat(i32 226, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.188, i64 0, i64 0)), !dbg !6535
  store i32 1, i32* %retval, align 4, !dbg !6536
  br label %return, !dbg !6536

if.end45:                                         ; preds = %if.then43
  br label %if.end46, !dbg !6537

if.end46:                                         ; preds = %if.end45, %if.end30
  %20 = load double, double* %required_sleep.addr, align 8, !dbg !6538
  %cmp47 = fcmp ogt double %20, 0.000000e+00, !dbg !6540
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !6541

if.then49:                                        ; preds = %if.end46
  br label %repoll, !dbg !6542

if.end50:                                         ; preds = %if.end46
  br label %if.end60, !dbg !6544

if.else51:                                        ; preds = %if.end
  %21 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6545
  %pfds_f_in52 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %21, i32 0, i32 22, !dbg !6547
  %revents53 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %pfds_f_in52, i32 0, i32 2, !dbg !6548
  %22 = load i16, i16* %revents53, align 2, !dbg !6548
  %conv54 = sext i16 %22 to i32, !dbg !6545
  %and55 = and i32 %conv54, 56, !dbg !6549
  %cmp56 = icmp ne i32 %and55, 0, !dbg !6550
  br i1 %cmp56, label %if.then58, label %if.end59, !dbg !6551

if.then58:                                        ; preds = %if.else51
  call void @addreply_noformat(i32 451, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.245, i64 0, i64 0)), !dbg !6552
  store i32 1, i32* %retval, align 4, !dbg !6554
  br label %return, !dbg !6554

if.end59:                                         ; preds = %if.else51
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.end50
  store i32 0, i32* %retval, align 4, !dbg !6555
  br label %return, !dbg !6555

return:                                           ; preds = %if.end60, %if.then58, %if.else44, %if.end29, %if.then28, %if.then17, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !6556
  ret i32 %23, !dbg !6556
}

declare i32 @poll(%struct.pollfd*, i64, i32) #9

declare i64 @read(i32, i8*, i64) #9

; Function Attrs: nounwind readonly
declare i32 @strncasecmp(i8*, i8*, i64) #5

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i64 @safe_nonblock_write(i32 %fd, i8* %tls_fd, i8* %buf_, i64 %count) #0 !dbg !6557 {
entry:
  %retval = alloca i64, align 8
  %fd.addr = alloca i32, align 4
  %tls_fd.addr = alloca i8*, align 8
  %buf_.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %written = alloca i64, align 8
  %buf = alloca i8*, align 8
  %pfd = alloca %struct.pollfd, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !6562, metadata !DIExpression()), !dbg !6563
  store i8* %tls_fd, i8** %tls_fd.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tls_fd.addr, metadata !6564, metadata !DIExpression()), !dbg !6565
  store i8* %buf_, i8** %buf_.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf_.addr, metadata !6566, metadata !DIExpression()), !dbg !6567
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !6568, metadata !DIExpression()), !dbg !6569
  call void @llvm.dbg.declare(metadata i64* %written, metadata !6570, metadata !DIExpression()), !dbg !6571
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !6572, metadata !DIExpression()), !dbg !6573
  %0 = load i8*, i8** %buf_.addr, align 8, !dbg !6574
  store i8* %0, i8** %buf, align 8, !dbg !6573
  call void @llvm.dbg.declare(metadata %struct.pollfd* %pfd, metadata !6575, metadata !DIExpression()), !dbg !6576
  br label %while.cond, !dbg !6577

while.cond:                                       ; preds = %for.end, %entry
  %1 = load i64, i64* %count.addr, align 8, !dbg !6578
  %cmp = icmp ugt i64 %1, 0, !dbg !6579
  br i1 %cmp, label %while.body, label %while.end, !dbg !6577

while.body:                                       ; preds = %while.cond
  br label %for.cond, !dbg !6580

for.cond:                                         ; preds = %if.end34, %while.body
  %2 = load i8*, i8** %tls_fd.addr, align 8, !dbg !6582
  %cmp1 = icmp eq i8* %2, null, !dbg !6587
  br i1 %cmp1, label %if.then, label %if.else, !dbg !6588

if.then:                                          ; preds = %for.cond
  %3 = load i8*, i8** %buf, align 8, !dbg !6589
  %4 = load i64, i64* %count.addr, align 8, !dbg !6591
  %call = call i64 @write(i32 2, i8* %3, i64 %4), !dbg !6592
  store i64 %call, i64* %written, align 8, !dbg !6593
  br label %if.end, !dbg !6594

if.else:                                          ; preds = %for.cond
  call void @abort() #13, !dbg !6595
  unreachable, !dbg !6595

if.end:                                           ; preds = %if.then
  %5 = load i64, i64* %written, align 8, !dbg !6597
  %cmp2 = icmp sgt i64 %5, 0, !dbg !6599
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !6600

if.then3:                                         ; preds = %if.end
  br label %for.end, !dbg !6601

if.end4:                                          ; preds = %if.end
  %call5 = call i32* @__errno_location() #14, !dbg !6603
  %6 = load i32, i32* %call5, align 4, !dbg !6603
  %cmp6 = icmp eq i32 %6, 11, !dbg !6605
  br i1 %cmp6, label %if.then9, label %lor.lhs.false, !dbg !6606

lor.lhs.false:                                    ; preds = %if.end4
  %call7 = call i32* @__errno_location() #14, !dbg !6607
  %7 = load i32, i32* %call7, align 4, !dbg !6607
  %cmp8 = icmp eq i32 %7, 11, !dbg !6608
  br i1 %cmp8, label %if.then9, label %if.else28, !dbg !6609

if.then9:                                         ; preds = %lor.lhs.false, %if.end4
  %8 = load i32, i32* %fd.addr, align 4, !dbg !6610
  %fd10 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %pfd, i32 0, i32 0, !dbg !6612
  store i32 %8, i32* %fd10, align 4, !dbg !6613
  %events = getelementptr inbounds %struct.pollfd, %struct.pollfd* %pfd, i32 0, i32 1, !dbg !6614
  store i16 28, i16* %events, align 4, !dbg !6615
  %revents = getelementptr inbounds %struct.pollfd, %struct.pollfd* %pfd, i32 0, i32 2, !dbg !6616
  store i16 0, i16* %revents, align 2, !dbg !6617
  %9 = load i64, i64* @idletime, align 8, !dbg !6618
  %mul = mul i64 %9, 1000, !dbg !6620
  %conv = trunc i64 %mul to i32, !dbg !6618
  %call11 = call i32 @poll(%struct.pollfd* %pfd, i64 1, i32 %conv), !dbg !6621
  %cmp12 = icmp sle i32 %call11, 0, !dbg !6622
  br i1 %cmp12, label %if.then25, label %lor.lhs.false14, !dbg !6623

lor.lhs.false14:                                  ; preds = %if.then9
  %revents15 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %pfd, i32 0, i32 2, !dbg !6624
  %10 = load i16, i16* %revents15, align 2, !dbg !6624
  %conv16 = sext i16 %10 to i32, !dbg !6625
  %and = and i32 %conv16, 24, !dbg !6626
  %cmp17 = icmp ne i32 %and, 0, !dbg !6627
  br i1 %cmp17, label %if.then25, label %lor.lhs.false19, !dbg !6628

lor.lhs.false19:                                  ; preds = %lor.lhs.false14
  %revents20 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %pfd, i32 0, i32 2, !dbg !6629
  %11 = load i16, i16* %revents20, align 2, !dbg !6629
  %conv21 = sext i16 %11 to i32, !dbg !6630
  %and22 = and i32 %conv21, 4, !dbg !6631
  %cmp23 = icmp eq i32 %and22, 0, !dbg !6632
  br i1 %cmp23, label %if.then25, label %if.end27, !dbg !6633

if.then25:                                        ; preds = %lor.lhs.false19, %lor.lhs.false14, %if.then9
  %call26 = call i32* @__errno_location() #14, !dbg !6634
  store i32 32, i32* %call26, align 4, !dbg !6636
  store i64 -1, i64* %retval, align 8, !dbg !6637
  br label %return, !dbg !6637

if.end27:                                         ; preds = %lor.lhs.false19
  br label %if.end34, !dbg !6638

if.else28:                                        ; preds = %lor.lhs.false
  %call29 = call i32* @__errno_location() #14, !dbg !6639
  %12 = load i32, i32* %call29, align 4, !dbg !6639
  %cmp30 = icmp ne i32 %12, 4, !dbg !6641
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !6642

if.then32:                                        ; preds = %if.else28
  store i64 -1, i64* %retval, align 8, !dbg !6643
  br label %return, !dbg !6643

if.end33:                                         ; preds = %if.else28
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.end27
  br label %for.cond, !dbg !6645, !llvm.loop !6646

for.end:                                          ; preds = %if.then3
  %13 = load i64, i64* %written, align 8, !dbg !6649
  %14 = load i8*, i8** %buf, align 8, !dbg !6650
  %add.ptr = getelementptr i8, i8* %14, i64 %13, !dbg !6650
  store i8* %add.ptr, i8** %buf, align 8, !dbg !6650
  %15 = load i64, i64* %written, align 8, !dbg !6651
  %16 = load i64, i64* %count.addr, align 8, !dbg !6652
  %sub = sub i64 %16, %15, !dbg !6652
  store i64 %sub, i64* %count.addr, align 8, !dbg !6652
  br label %while.cond, !dbg !6577, !llvm.loop !6653

while.end:                                        ; preds = %while.cond
  store i64 0, i64* %retval, align 8, !dbg !6655
  br label %return, !dbg !6655

return:                                           ; preds = %while.end, %if.then32, %if.then25
  %17 = load i64, i64* %retval, align 8, !dbg !6656
  ret i64 %17, !dbg !6656
}

declare i64 @write(i32, i8*, i64) #9

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @_dlmap_read(%struct.DLHandler_* %dlhandler) #0 !dbg !6657 {
entry:
  %retval = alloca i32, align 4
  %dlhandler.addr = alloca %struct.DLHandler_*, align 8
  %readnb = alloca i64, align 8
  store %struct.DLHandler_* %dlhandler, %struct.DLHandler_** %dlhandler.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DLHandler_** %dlhandler.addr, metadata !6658, metadata !DIExpression()), !dbg !6659
  call void @llvm.dbg.declare(metadata i64* %readnb, metadata !6660, metadata !DIExpression()), !dbg !6661
  %0 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6662
  %dlmap_size = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %0, i32 0, i32 6, !dbg !6664
  %1 = load i64, i64* %dlmap_size, align 8, !dbg !6664
  %2 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6665
  %sizeof_map = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %2, i32 0, i32 15, !dbg !6666
  %3 = load i64, i64* %sizeof_map, align 8, !dbg !6666
  %cmp = icmp ugt i64 %1, %3, !dbg !6667
  br i1 %cmp, label %if.then, label %if.end, !dbg !6668

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !6669
  unreachable, !dbg !6669

if.end:                                           ; preds = %entry
  %4 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6671
  %dlmap_size1 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %4, i32 0, i32 6, !dbg !6673
  %5 = load i64, i64* %dlmap_size1, align 8, !dbg !6673
  %cmp2 = icmp ule i64 %5, 0, !dbg !6674
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !6675

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !6676
  br label %return, !dbg !6676

if.end4:                                          ; preds = %if.end
  %6 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6678
  %dlmap_pos = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %6, i32 0, i32 12, !dbg !6680
  %7 = load i64, i64* %dlmap_pos, align 8, !dbg !6680
  %8 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6681
  %dlmap_fdpos = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %8, i32 0, i32 13, !dbg !6682
  %9 = load i64, i64* %dlmap_fdpos, align 8, !dbg !6682
  %cmp5 = icmp ne i64 %7, %9, !dbg !6683
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !6684

if.then6:                                         ; preds = %if.end4
  br label %do.body, !dbg !6685

do.body:                                          ; preds = %land.end, %if.then6
  %10 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6687
  %f = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %10, i32 0, i32 3, !dbg !6690
  %11 = load i32, i32* %f, align 4, !dbg !6690
  %12 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6691
  %dlmap_pos7 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %12, i32 0, i32 12, !dbg !6692
  %13 = load i64, i64* %dlmap_pos7, align 8, !dbg !6692
  %call = call i64 @lseek(i32 %11, i64 %13, i32 0) #7, !dbg !6693
  %cmp8 = icmp eq i64 %call, -1, !dbg !6694
  br i1 %cmp8, label %if.then9, label %if.end11, !dbg !6695

if.then9:                                         ; preds = %do.body
  %14 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6696
  %dlmap_fdpos10 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %14, i32 0, i32 13, !dbg !6698
  store i64 -1, i64* %dlmap_fdpos10, align 8, !dbg !6699
  store i32 -1, i32* %retval, align 4, !dbg !6700
  br label %return, !dbg !6700

if.end11:                                         ; preds = %do.body
  %15 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6701
  %dlmap_pos12 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %15, i32 0, i32 12, !dbg !6702
  %16 = load i64, i64* %dlmap_pos12, align 8, !dbg !6702
  %17 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6703
  %dlmap_fdpos13 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %17, i32 0, i32 13, !dbg !6704
  store i64 %16, i64* %dlmap_fdpos13, align 8, !dbg !6705
  %18 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6706
  %f14 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %18, i32 0, i32 3, !dbg !6707
  %19 = load i32, i32* %f14, align 4, !dbg !6707
  %20 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6708
  %map = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %20, i32 0, i32 16, !dbg !6709
  %21 = load i8*, i8** %map, align 8, !dbg !6709
  %22 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6710
  %dlmap_size15 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %22, i32 0, i32 6, !dbg !6711
  %23 = load i64, i64* %dlmap_size15, align 8, !dbg !6711
  %call16 = call i64 @read(i32 %19, i8* %21, i64 %23), !dbg !6712
  store i64 %call16, i64* %readnb, align 8, !dbg !6713
  br label %do.cond, !dbg !6714

do.cond:                                          ; preds = %if.end11
  %24 = load i64, i64* %readnb, align 8, !dbg !6715
  %cmp17 = icmp eq i64 %24, -1, !dbg !6716
  br i1 %cmp17, label %land.rhs, label %land.end, !dbg !6717

land.rhs:                                         ; preds = %do.cond
  %call18 = call i32* @__errno_location() #14, !dbg !6718
  %25 = load i32, i32* %call18, align 4, !dbg !6718
  %cmp19 = icmp eq i32 %25, 4, !dbg !6719
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %26 = phi i1 [ false, %do.cond ], [ %cmp19, %land.rhs ], !dbg !6720
  br i1 %26, label %do.body, label %do.end, !dbg !6714, !llvm.loop !6721

do.end:                                           ; preds = %land.end
  br label %if.end32, !dbg !6723

if.else:                                          ; preds = %if.end4
  br label %do.body20, !dbg !6724

do.body20:                                        ; preds = %land.end30, %if.else
  %27 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6726
  %f21 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %27, i32 0, i32 3, !dbg !6728
  %28 = load i32, i32* %f21, align 4, !dbg !6728
  %29 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6729
  %map22 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %29, i32 0, i32 16, !dbg !6730
  %30 = load i8*, i8** %map22, align 8, !dbg !6730
  %31 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6731
  %dlmap_size23 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %31, i32 0, i32 6, !dbg !6732
  %32 = load i64, i64* %dlmap_size23, align 8, !dbg !6732
  %call24 = call i64 @read(i32 %28, i8* %30, i64 %32), !dbg !6733
  store i64 %call24, i64* %readnb, align 8, !dbg !6734
  br label %do.cond25, !dbg !6735

do.cond25:                                        ; preds = %do.body20
  %33 = load i64, i64* %readnb, align 8, !dbg !6736
  %cmp26 = icmp eq i64 %33, -1, !dbg !6737
  br i1 %cmp26, label %land.rhs27, label %land.end30, !dbg !6738

land.rhs27:                                       ; preds = %do.cond25
  %call28 = call i32* @__errno_location() #14, !dbg !6739
  %34 = load i32, i32* %call28, align 4, !dbg !6739
  %cmp29 = icmp eq i32 %34, 4, !dbg !6740
  br label %land.end30

land.end30:                                       ; preds = %land.rhs27, %do.cond25
  %35 = phi i1 [ false, %do.cond25 ], [ %cmp29, %land.rhs27 ], !dbg !6741
  br i1 %35, label %do.body20, label %do.end31, !dbg !6735, !llvm.loop !6742

do.end31:                                         ; preds = %land.end30
  br label %if.end32

if.end32:                                         ; preds = %do.end31, %do.end
  %36 = load i64, i64* %readnb, align 8, !dbg !6744
  %cmp33 = icmp sle i64 %36, 0, !dbg !6746
  br i1 %cmp33, label %if.then34, label %if.end36, !dbg !6747

if.then34:                                        ; preds = %if.end32
  %37 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6748
  %dlmap_fdpos35 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %37, i32 0, i32 13, !dbg !6750
  store i64 -1, i64* %dlmap_fdpos35, align 8, !dbg !6751
  store i32 -1, i32* %retval, align 4, !dbg !6752
  br label %return, !dbg !6752

if.end36:                                         ; preds = %if.end32
  %38 = load i64, i64* %readnb, align 8, !dbg !6753
  %39 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6755
  %dlmap_size37 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %39, i32 0, i32 6, !dbg !6756
  %40 = load i64, i64* %dlmap_size37, align 8, !dbg !6756
  %cmp38 = icmp ne i64 %38, %40, !dbg !6757
  br i1 %cmp38, label %if.then39, label %if.else41, !dbg !6758

if.then39:                                        ; preds = %if.end36
  %41 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6759
  %dlmap_fdpos40 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %41, i32 0, i32 13, !dbg !6761
  store i64 -1, i64* %dlmap_fdpos40, align 8, !dbg !6762
  br label %if.end43, !dbg !6763

if.else41:                                        ; preds = %if.end36
  %42 = load i64, i64* %readnb, align 8, !dbg !6764
  %43 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6766
  %dlmap_fdpos42 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %43, i32 0, i32 13, !dbg !6767
  %44 = load i64, i64* %dlmap_fdpos42, align 8, !dbg !6768
  %add = add i64 %44, %42, !dbg !6768
  store i64 %add, i64* %dlmap_fdpos42, align 8, !dbg !6768
  br label %if.end43

if.end43:                                         ; preds = %if.else41, %if.then39
  store i32 0, i32* %retval, align 4, !dbg !6769
  br label %return, !dbg !6769

return:                                           ; preds = %if.end43, %if.then34, %if.then9, %if.then3
  %45 = load i32, i32* %retval, align 4, !dbg !6770
  ret i32 %45, !dbg !6770
}

; Function Attrs: nounwind
declare i64 @lseek(i32, i64, i32) #2

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @dlhandler_init(%struct.DLHandler_* %dlhandler, i32 %clientfd, i8* %tls_clientfd, i32 %xferfd, i8* %name, i32 %f, i8* %tls_fd, i64 %restartat, i32 %ascii_mode, i64 %bandwidth) #0 !dbg !6771 {
entry:
  %retval = alloca i32, align 4
  %dlhandler.addr = alloca %struct.DLHandler_*, align 8
  %clientfd.addr = alloca i32, align 4
  %tls_clientfd.addr = alloca i8*, align 8
  %xferfd.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %f.addr = alloca i32, align 4
  %tls_fd.addr = alloca i8*, align 8
  %restartat.addr = alloca i64, align 8
  %ascii_mode.addr = alloca i32, align 4
  %bandwidth.addr = alloca i64, align 8
  %st = alloca %struct.stat, align 8
  %pfd = alloca %struct.pollfd*, align 8
  store %struct.DLHandler_* %dlhandler, %struct.DLHandler_** %dlhandler.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DLHandler_** %dlhandler.addr, metadata !6772, metadata !DIExpression()), !dbg !6773
  store i32 %clientfd, i32* %clientfd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %clientfd.addr, metadata !6774, metadata !DIExpression()), !dbg !6775
  store i8* %tls_clientfd, i8** %tls_clientfd.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tls_clientfd.addr, metadata !6776, metadata !DIExpression()), !dbg !6777
  store i32 %xferfd, i32* %xferfd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xferfd.addr, metadata !6778, metadata !DIExpression()), !dbg !6779
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !6780, metadata !DIExpression()), !dbg !6781
  store i32 %f, i32* %f.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %f.addr, metadata !6782, metadata !DIExpression()), !dbg !6783
  store i8* %tls_fd, i8** %tls_fd.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tls_fd.addr, metadata !6784, metadata !DIExpression()), !dbg !6785
  store i64 %restartat, i64* %restartat.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %restartat.addr, metadata !6786, metadata !DIExpression()), !dbg !6787
  store i32 %ascii_mode, i32* %ascii_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ascii_mode.addr, metadata !6788, metadata !DIExpression()), !dbg !6789
  store i64 %bandwidth, i64* %bandwidth.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bandwidth.addr, metadata !6790, metadata !DIExpression()), !dbg !6791
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !6792, metadata !DIExpression()), !dbg !6793
  call void @llvm.dbg.declare(metadata %struct.pollfd** %pfd, metadata !6794, metadata !DIExpression()), !dbg !6795
  %0 = load i32, i32* %f.addr, align 4, !dbg !6796
  %call = call i32 @fstat(i32 %0, %struct.stat* %st) #7, !dbg !6798
  %cmp = icmp slt i32 %call, 0, !dbg !6799
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6800

lor.lhs.false:                                    ; preds = %entry
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !6801
  %1 = load i32, i32* %st_mode, align 8, !dbg !6801
  %and = and i32 %1, 61440, !dbg !6801
  %cmp1 = icmp eq i32 %and, 40960, !dbg !6801
  br i1 %cmp1, label %land.lhs.true, label %if.end, !dbg !6802

land.lhs.true:                                    ; preds = %lor.lhs.false
  %2 = load i8*, i8** %name.addr, align 8, !dbg !6803
  %call2 = call i32 @stat(i8* %2, %struct.stat* %st) #7, !dbg !6804
  %cmp3 = icmp slt i32 %call2, 0, !dbg !6805
  br i1 %cmp3, label %if.then, label %if.end, !dbg !6806

if.then:                                          ; preds = %land.lhs.true, %entry
  call void @error(i32 451, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.161, i64 0, i64 0)), !dbg !6807
  store i32 -1, i32* %retval, align 4, !dbg !6809
  br label %return, !dbg !6809

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  %st_mode4 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !6810
  %3 = load i32, i32* %st_mode4, align 8, !dbg !6810
  %and5 = and i32 %3, 61440, !dbg !6810
  %cmp6 = icmp eq i32 %and5, 32768, !dbg !6810
  br i1 %cmp6, label %if.end8, label %if.then7, !dbg !6812

if.then7:                                         ; preds = %if.end
  call void @addreply_noformat(i32 550, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.163, i64 0, i64 0)), !dbg !6813
  store i32 -1, i32* %retval, align 4, !dbg !6815
  br label %return, !dbg !6815

if.end8:                                          ; preds = %if.end
  %4 = load i32, i32* %clientfd.addr, align 4, !dbg !6816
  %5 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6817
  %clientfd9 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %5, i32 0, i32 0, !dbg !6818
  store i32 %4, i32* %clientfd9, align 8, !dbg !6819
  %6 = load i8*, i8** %tls_clientfd.addr, align 8, !dbg !6820
  %7 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6821
  %tls_clientfd10 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %7, i32 0, i32 1, !dbg !6822
  store i8* %6, i8** %tls_clientfd10, align 8, !dbg !6823
  %8 = load i32, i32* %xferfd.addr, align 4, !dbg !6824
  %9 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6825
  %xferfd11 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %9, i32 0, i32 2, !dbg !6826
  store i32 %8, i32* %xferfd11, align 8, !dbg !6827
  %10 = load i32, i32* %f.addr, align 4, !dbg !6828
  %11 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6829
  %f12 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %11, i32 0, i32 3, !dbg !6830
  store i32 %10, i32* %f12, align 4, !dbg !6831
  %12 = load i8*, i8** %tls_fd.addr, align 8, !dbg !6832
  %13 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6833
  %tls_fd13 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %13, i32 0, i32 4, !dbg !6834
  store i8* %12, i8** %tls_fd13, align 8, !dbg !6835
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 8, !dbg !6836
  %14 = load i64, i64* %st_size, align 8, !dbg !6836
  %15 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6837
  %file_size = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %15, i32 0, i32 5, !dbg !6838
  store i64 %14, i64* %file_size, align 8, !dbg !6839
  %16 = load i32, i32* %ascii_mode.addr, align 4, !dbg !6840
  %17 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6841
  %ascii_mode14 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %17, i32 0, i32 18, !dbg !6842
  store i32 %16, i32* %ascii_mode14, align 8, !dbg !6843
  %18 = load i64, i64* %restartat.addr, align 8, !dbg !6844
  %19 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6845
  %cur_pos = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %19, i32 0, i32 7, !dbg !6846
  store i64 %18, i64* %cur_pos, align 8, !dbg !6847
  %20 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6848
  %total_downloaded = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %20, i32 0, i32 14, !dbg !6849
  store i64 0, i64* %total_downloaded, align 8, !dbg !6850
  %21 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6851
  %min_sleep = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %21, i32 0, i32 19, !dbg !6852
  store double 1.000000e-01, double* %min_sleep, align 8, !dbg !6853
  %22 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6854
  %max_sleep = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %22, i32 0, i32 20, !dbg !6855
  store double 5.000000e+00, double* %max_sleep, align 8, !dbg !6856
  %23 = load i64, i64* %bandwidth.addr, align 8, !dbg !6857
  %24 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6858
  %bandwidth15 = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %24, i32 0, i32 21, !dbg !6859
  store i64 %23, i64* %bandwidth15, align 8, !dbg !6860
  %25 = load %struct.DLHandler_*, %struct.DLHandler_** %dlhandler.addr, align 8, !dbg !6861
  %pfds_f_in = getelementptr inbounds %struct.DLHandler_, %struct.DLHandler_* %25, i32 0, i32 22, !dbg !6862
  store %struct.pollfd* %pfds_f_in, %struct.pollfd** %pfd, align 8, !dbg !6863
  %26 = load i32, i32* %clientfd.addr, align 4, !dbg !6864
  %27 = load %struct.pollfd*, %struct.pollfd** %pfd, align 8, !dbg !6865
  %fd = getelementptr inbounds %struct.pollfd, %struct.pollfd* %27, i32 0, i32 0, !dbg !6866
  store i32 %26, i32* %fd, align 4, !dbg !6867
  %28 = load %struct.pollfd*, %struct.pollfd** %pfd, align 8, !dbg !6868
  %events = getelementptr inbounds %struct.pollfd, %struct.pollfd* %28, i32 0, i32 1, !dbg !6869
  store i16 27, i16* %events, align 4, !dbg !6870
  %29 = load %struct.pollfd*, %struct.pollfd** %pfd, align 8, !dbg !6871
  %revents = getelementptr inbounds %struct.pollfd, %struct.pollfd* %29, i32 0, i32 2, !dbg !6872
  store i16 0, i16* %revents, align 2, !dbg !6873
  %30 = load i64, i64* %restartat.addr, align 8, !dbg !6874
  %cmp16 = icmp sgt i64 %30, 0, !dbg !6876
  br i1 %cmp16, label %if.then17, label %if.end27, !dbg !6877

if.then17:                                        ; preds = %if.end8
  %31 = load i64, i64* %restartat.addr, align 8, !dbg !6878
  %st_size18 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 8, !dbg !6881
  %32 = load i64, i64* %st_size18, align 8, !dbg !6881
  %cmp19 = icmp eq i64 %31, %32, !dbg !6882
  br i1 %cmp19, label %if.then20, label %if.else, !dbg !6883

if.then20:                                        ; preds = %if.then17
  call void @addreply_noformat(i32 226, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.241, i64 0, i64 0)), !dbg !6884
  store i32 -2, i32* %retval, align 4, !dbg !6886
  br label %return, !dbg !6886

if.else:                                          ; preds = %if.then17
  %33 = load i64, i64* %restartat.addr, align 8, !dbg !6887
  %st_size21 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 8, !dbg !6889
  %34 = load i64, i64* %st_size21, align 8, !dbg !6889
  %cmp22 = icmp sgt i64 %33, %34, !dbg !6890
  br i1 %cmp22, label %if.then23, label %if.end25, !dbg !6891

if.then23:                                        ; preds = %if.else
  %35 = load i64, i64* %restartat.addr, align 8, !dbg !6892
  %st_size24 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 8, !dbg !6894
  %36 = load i64, i64* %st_size24, align 8, !dbg !6894
  call void (i32, i8*, ...) @addreply(i32 554, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.162, i64 0, i64 0), i64 %35, i64 %36), !dbg !6895
  store i32 -1, i32* %retval, align 4, !dbg !6896
  br label %return, !dbg !6896

if.end25:                                         ; preds = %if.else
  br label %if.end26

if.end26:                                         ; preds = %if.end25
  br label %if.end27, !dbg !6897

if.end27:                                         ; preds = %if.end26, %if.end8
  %37 = load i32, i32* %xferfd.addr, align 4, !dbg !6898
  %38 = load i32, i32* %xferfd.addr, align 4, !dbg !6900
  %call28 = call i32 (i32, i32, ...) @fcntl(i32 %38, i32 3), !dbg !6901
  %or = or i32 %call28, 2048, !dbg !6902
  %call29 = call i32 (i32, i32, ...) @fcntl(i32 %37, i32 4, i32 %or), !dbg !6903
  %cmp30 = icmp eq i32 %call29, -1, !dbg !6904
  br i1 %cmp30, label %if.then31, label %if.end32, !dbg !6905

if.then31:                                        ; preds = %if.end27
  call void @error(i32 451, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.242, i64 0, i64 0)), !dbg !6906
  store i32 -1, i32* %retval, align 4, !dbg !6908
  br label %return, !dbg !6908

if.end32:                                         ; preds = %if.end27
  store i32 0, i32* %retval, align 4, !dbg !6909
  br label %return, !dbg !6909

return:                                           ; preds = %if.end32, %if.then31, %if.then23, %if.then20, %if.then7, %if.then
  %39 = load i32, i32* %retval, align 4, !dbg !6910
  ret i32 %39, !dbg !6910
}

declare i32 @fcntl(i32, i32, ...) #9

; Function Attrs: nounwind
declare i32 @gettimeofday(%struct.timespec*, i8*) #2

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @dorest(i8* %name) #0 !dbg !6911 {
entry:
  %name.addr = alloca i8*, align 8
  %endptr = alloca i8*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !6912, metadata !DIExpression()), !dbg !6913
  call void @llvm.dbg.declare(metadata i8** %endptr, metadata !6914, metadata !DIExpression()), !dbg !6915
  %0 = load i8*, i8** %name.addr, align 8, !dbg !6916
  %call = call i64 @strtoull(i8* %0, i8** %endptr, i32 10) #7, !dbg !6917
  store i64 %call, i64* @restartat, align 8, !dbg !6918
  %1 = load i8*, i8** %endptr, align 8, !dbg !6919
  %2 = load i8, i8* %1, align 1, !dbg !6921
  %conv = sext i8 %2 to i32, !dbg !6921
  %cmp = icmp ne i32 %conv, 0, !dbg !6922
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6923

lor.lhs.false:                                    ; preds = %entry
  %3 = load i64, i64* @restartat, align 8, !dbg !6924
  %cmp2 = icmp slt i64 %3, 0, !dbg !6925
  br i1 %cmp2, label %if.then, label %if.else, !dbg !6926

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i64 0, i64* @restartat, align 8, !dbg !6927
  call void (i32, i8*, ...) @addreply(i32 554, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.170, i64 0, i64 0)), !dbg !6929
  br label %if.end15, !dbg !6930

if.else:                                          ; preds = %lor.lhs.false
  %4 = load i8, i8* @type, align 1, !dbg !6931
  %conv4 = sext i8 %4 to i32, !dbg !6931
  %cmp5 = icmp eq i32 %conv4, 1, !dbg !6934
  br i1 %cmp5, label %land.lhs.true, label %if.else10, !dbg !6935

land.lhs.true:                                    ; preds = %if.else
  %5 = load i64, i64* @restartat, align 8, !dbg !6936
  %cmp7 = icmp ne i64 %5, 0, !dbg !6937
  br i1 %cmp7, label %if.then9, label %if.else10, !dbg !6938

if.then9:                                         ; preds = %land.lhs.true
  %6 = load i64, i64* @restartat, align 8, !dbg !6939
  call void (i32, i8*, ...) @addreply(i32 350, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.171, i64 0, i64 0), i64 %6), !dbg !6941
  br label %if.end14, !dbg !6942

if.else10:                                        ; preds = %land.lhs.true, %if.else
  %7 = load i64, i64* @restartat, align 8, !dbg !6943
  %cmp11 = icmp ne i64 %7, 0, !dbg !6946
  br i1 %cmp11, label %if.then13, label %if.end, !dbg !6947

if.then13:                                        ; preds = %if.else10
  %8 = load i64, i64* @restartat, align 8, !dbg !6948
  call void (i32, i8*, ...) @logfile(i32 5, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.172, i64 0, i64 0), i64 %8), !dbg !6950
  br label %if.end, !dbg !6951

if.end:                                           ; preds = %if.then13, %if.else10
  %9 = load i64, i64* @restartat, align 8, !dbg !6952
  call void (i32, i8*, ...) @addreply(i32 350, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.172, i64 0, i64 0), i64 %9), !dbg !6953
  br label %if.end14

if.end14:                                         ; preds = %if.end, %if.then9
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.then
  ret void, !dbg !6954
}

; Function Attrs: nounwind
declare i64 @strtoull(i8*, i8**, i32) #2

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @domkd(i8* %name) #0 !dbg !6955 {
entry:
  %name.addr = alloca i8*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !6956, metadata !DIExpression()), !dbg !6957
  %0 = load i8, i8* @guest, align 1, !dbg !6958
  %conv = sext i8 %0 to i32, !dbg !6958
  %cmp = icmp ne i32 %conv, 0, !dbg !6960
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6961

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @allow_anon_mkdir, align 4, !dbg !6962
  %cmp2 = icmp eq i32 %1, 0, !dbg !6963
  br i1 %cmp2, label %if.then, label %if.end, !dbg !6964

if.then:                                          ; preds = %land.lhs.true
  call void @addreply_noformat(i32 550, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.173, i64 0, i64 0)), !dbg !6965
  br label %if.end13, !dbg !6967

if.end:                                           ; preds = %land.lhs.true, %entry
  %2 = load i8*, i8** %name.addr, align 8, !dbg !6968
  %3 = load i8, i8* @dot_write_ok, align 1, !dbg !6970
  %conv4 = sext i8 %3 to i32, !dbg !6970
  %call = call i32 @checknamesanity(i8* %2, i32 %conv4), !dbg !6971
  %cmp5 = icmp ne i32 %call, 0, !dbg !6972
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !6973

if.then7:                                         ; preds = %if.end
  call void @addreply_noformat(i32 553, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.174, i64 0, i64 0)), !dbg !6974
  br label %if.end13, !dbg !6976

if.end8:                                          ; preds = %if.end
  %4 = load i8*, i8** %name.addr, align 8, !dbg !6977
  %5 = load i32, i32* @u_mask_d, align 4, !dbg !6979
  %neg = xor i32 %5, -1, !dbg !6980
  %and = and i32 511, %neg, !dbg !6981
  %call9 = call i32 @mkdir(i8* %4, i32 %and) #7, !dbg !6982
  %cmp10 = icmp slt i32 %call9, 0, !dbg !6983
  br i1 %cmp10, label %if.then12, label %if.else, !dbg !6984

if.then12:                                        ; preds = %if.end8
  call void @error(i32 550, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.175, i64 0, i64 0)), !dbg !6985
  br label %if.end13, !dbg !6987

if.else:                                          ; preds = %if.end8
  %6 = load i8*, i8** %name.addr, align 8, !dbg !6988
  call void (i32, i8*, ...) @addreply(i32 257, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.176, i64 0, i64 0), i8* %6), !dbg !6990
  store i64 0, i64* @cwd_failures, align 8, !dbg !6991
  br label %if.end13

if.end13:                                         ; preds = %if.then, %if.then7, %if.else, %if.then12
  ret void, !dbg !6992
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @dormd(i8* %name) #0 !dbg !6993 {
entry:
  %name.addr = alloca i8*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !6994, metadata !DIExpression()), !dbg !6995
  %0 = load i8, i8* @guest, align 1, !dbg !6996
  %conv = sext i8 %0 to i32, !dbg !6996
  %cmp = icmp ne i32 %conv, 0, !dbg !6998
  br i1 %cmp, label %if.then, label %if.end, !dbg !6999

if.then:                                          ; preds = %entry
  call void @addreply_noformat(i32 550, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.177, i64 0, i64 0)), !dbg !7000
  br label %return, !dbg !7002

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %name.addr, align 8, !dbg !7003
  %2 = load i8, i8* @dot_write_ok, align 1, !dbg !7005
  %conv2 = sext i8 %2 to i32, !dbg !7005
  %call = call i32 @checknamesanity(i8* %1, i32 %conv2), !dbg !7006
  %cmp3 = icmp ne i32 %call, 0, !dbg !7007
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !7008

if.then5:                                         ; preds = %if.end
  call void @addreply_noformat(i32 553, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.174, i64 0, i64 0)), !dbg !7009
  br label %return, !dbg !7011

if.end6:                                          ; preds = %if.end
  call void @addreply_noformat(i32 250, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.178, i64 0, i64 0)), !dbg !7012
  br label %return, !dbg !7013

return:                                           ; preds = %if.end6, %if.then5, %if.then
  ret void, !dbg !7013
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @dofeat() #0 !dbg !7014 {
entry:
  %feat = alloca [207 x i8], align 16
  call void @llvm.dbg.declare(metadata [207 x i8]* %feat, metadata !7015, metadata !DIExpression()), !dbg !7019
  %0 = bitcast [207 x i8]* %feat to i8*, !dbg !7019
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 getelementptr inbounds ([207 x i8], [207 x i8]* @__const.dofeat.feat, i32 0, i32 0), i64 207, i1 false), !dbg !7019
  %1 = load i8, i8* @disallow_passive, align 1, !dbg !7020
  %conv = sext i8 %1 to i32, !dbg !7020
  %cmp = icmp ne i32 %conv, 0, !dbg !7022
  br i1 %cmp, label %if.then, label %if.else, !dbg !7023

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr [207 x i8], [207 x i8]* %feat, i64 0, i64 179, !dbg !7024
  store i8 0, i8* %arrayidx, align 1, !dbg !7026
  br label %if.end7, !dbg !7027

if.else:                                          ; preds = %entry
  %2 = load i16, i16* getelementptr inbounds (%struct.sockaddr_storage, %struct.sockaddr_storage* @force_passive_ip, i32 0, i32 0), align 8, !dbg !7028
  %conv2 = zext i16 %2 to i32, !dbg !7028
  %cmp3 = icmp ne i32 %conv2, 0, !dbg !7030
  br i1 %cmp3, label %if.then5, label %if.end, !dbg !7031

if.then5:                                         ; preds = %if.else
  %arrayidx6 = getelementptr [207 x i8], [207 x i8]* %feat, i64 0, i64 200, !dbg !7032
  store i8 0, i8* %arrayidx6, align 8, !dbg !7034
  br label %if.end, !dbg !7035

if.end:                                           ; preds = %if.then5, %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  %arraydecay = getelementptr inbounds [207 x i8], [207 x i8]* %feat, i64 0, i64 0, !dbg !7036
  call void @addreply_noformat(i32 0, i8* %arraydecay), !dbg !7037
  call void @addreply_noformat(i32 211, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.92, i64 0, i64 0)), !dbg !7038
  ret void, !dbg !7039
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @dostou() #0 !dbg !485 {
entry:
  %file = alloca [64 x i8], align 16
  %tv = alloca %struct.timespec, align 8
  %tz = alloca %struct.timezone, align 4
  call void @llvm.dbg.declare(metadata [64 x i8]* %file, metadata !7040, metadata !DIExpression()), !dbg !7041
  call void @llvm.dbg.declare(metadata %struct.timespec* %tv, metadata !7042, metadata !DIExpression()), !dbg !7043
  call void @llvm.dbg.declare(metadata %struct.timezone* %tz, metadata !7044, metadata !DIExpression()), !dbg !7045
  %0 = bitcast %struct.timezone* %tz to i8*, !dbg !7046
  %call = call i32 @gettimeofday(%struct.timespec* %tv, i8* %0) #7, !dbg !7048
  %cmp = icmp ne i32 %call, 0, !dbg !7049
  br i1 %cmp, label %if.then, label %if.end, !dbg !7050

if.then:                                          ; preds = %entry
  call void @error(i32 553, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.153, i64 0, i64 0)), !dbg !7051
  br label %return, !dbg !7053

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %file, i64 0, i64 0, !dbg !7054
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %tv, i32 0, i32 0, !dbg !7054
  %1 = load i64, i64* %tv_sec, align 8, !dbg !7054
  %tv_usec = getelementptr inbounds %struct.timespec, %struct.timespec* %tv, i32 0, i32 1, !dbg !7054
  %2 = load i64, i64* %tv_usec, align 8, !dbg !7054
  %and = and i64 %2, 255, !dbg !7054
  %3 = load i32, i32* @dostou.seq, align 4, !dbg !7054
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 64, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.179, i64 0, i64 0), i64 %1, i64 %and, i32 %3) #7, !dbg !7054
  %cmp2 = icmp sge i32 %call1, 64, !dbg !7054
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !7056

if.then3:                                         ; preds = %if.end
  call void @_EXIT(i32 1) #11, !dbg !7057
  unreachable, !dbg !7057

if.end4:                                          ; preds = %if.end
  %4 = load i32, i32* @dostou.seq, align 4, !dbg !7059
  %inc = add i32 %4, 1, !dbg !7059
  store i32 %inc, i32* @dostou.seq, align 4, !dbg !7059
  %5 = load i32, i32* @dostou.seq, align 4, !dbg !7060
  %and5 = and i32 %5, 65535, !dbg !7060
  store i32 %and5, i32* @dostou.seq, align 4, !dbg !7060
  %arraydecay6 = getelementptr inbounds [64 x i8], [64 x i8]* %file, i64 0, i64 0, !dbg !7061
  call void (i32, i8*, ...) @addreply(i32 150, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.180, i64 0, i64 0), i8* %arraydecay6), !dbg !7062
  %arraydecay7 = getelementptr inbounds [64 x i8], [64 x i8]* %file, i64 0, i64 0, !dbg !7063
  call void @dostor(i8* %arraydecay7, i32 0, i32 1), !dbg !7064
  br label %return, !dbg !7065

return:                                           ; preds = %if.end4, %if.then
  ret void, !dbg !7065
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @dostor(i8* %name, i32 %append, i32 %autorename) #0 !dbg !7066 {
entry:
  %name.addr = alloca i8*, align 8
  %append.addr = alloca i32, align 4
  %autorename.addr = alloca i32, align 4
  %ulhandler = alloca %struct.ULHandler_, align 8
  %f = alloca i32, align 4
  %ul_name = alloca i8*, align 8
  %atomic_file = alloca i8*, align 8
  %filesize = alloca i64, align 8
  %st = alloca %struct.stat, align 8
  %started = alloca double, align 8
  %overwrite = alloca i8, align 1
  %overflow = alloca i32, align 4
  %ret = alloca i32, align 4
  %max_filesize = alloca i64, align 8
  %name2 = alloca i8*, align 8
  %atomic_file_size = alloca i64, align 8
  %original_file_size = alloca i64, align 8
  %files_count = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7069, metadata !DIExpression()), !dbg !7070
  store i32 %append, i32* %append.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %append.addr, metadata !7071, metadata !DIExpression()), !dbg !7072
  store i32 %autorename, i32* %autorename.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %autorename.addr, metadata !7073, metadata !DIExpression()), !dbg !7074
  call void @llvm.dbg.declare(metadata %struct.ULHandler_* %ulhandler, metadata !7075, metadata !DIExpression()), !dbg !7100
  call void @llvm.dbg.declare(metadata i32* %f, metadata !7101, metadata !DIExpression()), !dbg !7102
  call void @llvm.dbg.declare(metadata i8** %ul_name, metadata !7103, metadata !DIExpression()), !dbg !7104
  store i8* null, i8** %ul_name, align 8, !dbg !7104
  call void @llvm.dbg.declare(metadata i8** %atomic_file, metadata !7105, metadata !DIExpression()), !dbg !7106
  store i8* null, i8** %atomic_file, align 8, !dbg !7106
  call void @llvm.dbg.declare(metadata i64* %filesize, metadata !7107, metadata !DIExpression()), !dbg !7108
  store i64 0, i64* %filesize, align 8, !dbg !7108
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !7109, metadata !DIExpression()), !dbg !7110
  call void @llvm.dbg.declare(metadata double* %started, metadata !7111, metadata !DIExpression()), !dbg !7112
  store double 0.000000e+00, double* %started, align 8, !dbg !7112
  call void @llvm.dbg.declare(metadata i8* %overwrite, metadata !7113, metadata !DIExpression()), !dbg !7114
  store i8 0, i8* %overwrite, align 1, !dbg !7114
  call void @llvm.dbg.declare(metadata i32* %overflow, metadata !7115, metadata !DIExpression()), !dbg !7116
  store i32 0, i32* %overflow, align 4, !dbg !7116
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7117, metadata !DIExpression()), !dbg !7118
  store i32 -1, i32* %ret, align 4, !dbg !7118
  call void @llvm.dbg.declare(metadata i64* %max_filesize, metadata !7119, metadata !DIExpression()), !dbg !7120
  store i64 -1, i64* %max_filesize, align 8, !dbg !7120
  call void @llvm.dbg.declare(metadata i8** %name2, metadata !7121, metadata !DIExpression()), !dbg !7122
  store i8* null, i8** %name2, align 8, !dbg !7122
  %0 = load i8, i8* @type, align 1, !dbg !7123
  %conv = sext i8 %0 to i32, !dbg !7123
  %cmp = icmp slt i32 %conv, 1, !dbg !7125
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7126

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8, i8* @type, align 1, !dbg !7127
  %conv2 = sext i8 %1 to i32, !dbg !7127
  %cmp3 = icmp eq i32 %conv2, 1, !dbg !7128
  br i1 %cmp3, label %land.lhs.true, label %if.end, !dbg !7129

land.lhs.true:                                    ; preds = %lor.lhs.false
  %2 = load i64, i64* @restartat, align 8, !dbg !7130
  %cmp5 = icmp sgt i64 %2, 1, !dbg !7131
  br i1 %cmp5, label %if.then, label %if.end, !dbg !7132

if.then:                                          ; preds = %land.lhs.true, %entry
  call void @addreply_noformat(i32 503, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.160, i64 0, i64 0)), !dbg !7133
  br label %end, !dbg !7135

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  %3 = load i8, i8* @guest, align 1, !dbg !7136
  %conv7 = sext i8 %3 to i32, !dbg !7136
  %cmp8 = icmp ne i32 %conv7, 0, !dbg !7138
  br i1 %cmp8, label %land.lhs.true10, label %if.end15, !dbg !7139

land.lhs.true10:                                  ; preds = %if.end
  %4 = load i8, i8* @anon_noupload, align 1, !dbg !7140
  %conv11 = sext i8 %4 to i32, !dbg !7140
  %cmp12 = icmp ne i32 %conv11, 0, !dbg !7141
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !7142

if.then14:                                        ; preds = %land.lhs.true10
  call void @addreply_noformat(i32 550, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.181, i64 0, i64 0)), !dbg !7143
  br label %end, !dbg !7145

if.end15:                                         ; preds = %land.lhs.true10, %if.end
  %5 = load i8*, i8** %name.addr, align 8, !dbg !7146
  %call = call i32 @ul_check_free_space(i8* %5, double -1.000000e+00), !dbg !7148
  %cmp16 = icmp eq i32 %call, 0, !dbg !7149
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !7150

if.then18:                                        ; preds = %if.end15
  call void @addreply_noformat(i32 552, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.95, i64 0, i64 0)), !dbg !7151
  br label %end, !dbg !7153

if.end19:                                         ; preds = %if.end15
  %6 = load i8*, i8** %name.addr, align 8, !dbg !7154
  %7 = load i8, i8* @dot_write_ok, align 1, !dbg !7156
  %conv20 = sext i8 %7 to i32, !dbg !7156
  %call21 = call i32 @checknamesanity(i8* %6, i32 %conv20), !dbg !7157
  %cmp22 = icmp ne i32 %call21, 0, !dbg !7158
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !7159

if.then24:                                        ; preds = %if.end19
  %8 = load i8*, i8** %name.addr, align 8, !dbg !7160
  call void (i32, i8*, ...) @addreply(i32 553, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.125, i64 0, i64 0), i8* %8), !dbg !7162
  br label %end, !dbg !7163

if.end25:                                         ; preds = %if.end19
  %9 = load i32, i32* %autorename.addr, align 4, !dbg !7164
  %cmp26 = icmp ne i32 %9, 0, !dbg !7166
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !7167

if.then28:                                        ; preds = %if.end25
  store i8 1, i8* @no_truncate, align 1, !dbg !7168
  br label %if.end29, !dbg !7170

if.end29:                                         ; preds = %if.then28, %if.end25
  %10 = load i64, i64* @restartat, align 8, !dbg !7171
  %cmp30 = icmp sgt i64 %10, 0, !dbg !7173
  br i1 %cmp30, label %if.then36, label %lor.lhs.false32, !dbg !7174

lor.lhs.false32:                                  ; preds = %if.end29
  %11 = load i8, i8* @no_truncate, align 1, !dbg !7175
  %conv33 = sext i8 %11 to i32, !dbg !7175
  %cmp34 = icmp ne i32 %conv33, 0, !dbg !7176
  br i1 %cmp34, label %if.then36, label %if.end54, !dbg !7177

if.then36:                                        ; preds = %lor.lhs.false32, %if.end29
  %12 = load i8*, i8** %name.addr, align 8, !dbg !7178
  %call37 = call i8* @get_atomic_file(i8* %12), !dbg !7181
  store i8* %call37, i8** %atomic_file, align 8, !dbg !7182
  %cmp38 = icmp eq i8* %call37, null, !dbg !7183
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !7184

if.then40:                                        ; preds = %if.then36
  %13 = load i8*, i8** %name.addr, align 8, !dbg !7185
  call void (i32, i8*, ...) @addreply(i32 553, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.125, i64 0, i64 0), i8* %13), !dbg !7187
  br label %end, !dbg !7188

if.end41:                                         ; preds = %if.then36
  %14 = load i64, i64* @restartat, align 8, !dbg !7189
  %cmp42 = icmp sgt i64 %14, 0, !dbg !7191
  br i1 %cmp42, label %land.lhs.true44, label %if.end53, !dbg !7192

land.lhs.true44:                                  ; preds = %if.end41
  %15 = load i8*, i8** %name.addr, align 8, !dbg !7193
  %16 = load i8*, i8** %atomic_file, align 8, !dbg !7194
  %call45 = call i32 @rename(i8* %15, i8* %16) #7, !dbg !7195
  %cmp46 = icmp ne i32 %call45, 0, !dbg !7196
  br i1 %cmp46, label %land.lhs.true48, label %if.end53, !dbg !7197

land.lhs.true48:                                  ; preds = %land.lhs.true44
  %call49 = call i32* @__errno_location() #14, !dbg !7198
  %17 = load i32, i32* %call49, align 4, !dbg !7198
  %cmp50 = icmp ne i32 %17, 2, !dbg !7199
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !7200

if.then52:                                        ; preds = %land.lhs.true48
  call void @error(i32 553, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.182, i64 0, i64 0)), !dbg !7201
  store i8* null, i8** %atomic_file, align 8, !dbg !7203
  br label %end, !dbg !7204

if.end53:                                         ; preds = %land.lhs.true48, %land.lhs.true44, %if.end41
  br label %if.end54, !dbg !7205

if.end54:                                         ; preds = %if.end53, %lor.lhs.false32
  %18 = load i8*, i8** %atomic_file, align 8, !dbg !7206
  %cmp55 = icmp ne i8* %18, null, !dbg !7208
  br i1 %cmp55, label %if.then57, label %if.else, !dbg !7209

if.then57:                                        ; preds = %if.end54
  %19 = load i8*, i8** %atomic_file, align 8, !dbg !7210
  store i8* %19, i8** %ul_name, align 8, !dbg !7212
  br label %if.end58, !dbg !7213

if.else:                                          ; preds = %if.end54
  %20 = load i8*, i8** %name.addr, align 8, !dbg !7214
  store i8* %20, i8** %ul_name, align 8, !dbg !7216
  br label %if.end58

if.end58:                                         ; preds = %if.else, %if.then57
  %21 = load i8*, i8** %atomic_file, align 8, !dbg !7217
  %cmp59 = icmp eq i8* %21, null, !dbg !7219
  br i1 %cmp59, label %land.lhs.true61, label %if.else66, !dbg !7220

land.lhs.true61:                                  ; preds = %if.end58
  %22 = load i8*, i8** %ul_name, align 8, !dbg !7221
  %call62 = call i32 (i8*, i32, ...) @open(i8* %22, i32 131073), !dbg !7222
  store i32 %call62, i32* %f, align 4, !dbg !7223
  %cmp63 = icmp ne i32 %call62, -1, !dbg !7224
  br i1 %cmp63, label %if.then65, label %if.else66, !dbg !7225

if.then65:                                        ; preds = %land.lhs.true61
  %23 = load i8, i8* %overwrite, align 1, !dbg !7226
  %inc = add i8 %23, 1, !dbg !7226
  store i8 %inc, i8* %overwrite, align 1, !dbg !7226
  br label %if.end72, !dbg !7228

if.else66:                                        ; preds = %land.lhs.true61, %if.end58
  %24 = load i8*, i8** %ul_name, align 8, !dbg !7229
  %25 = load i32, i32* @u_mask, align 4, !dbg !7231
  %neg = xor i32 %25, -1, !dbg !7232
  %and = and i32 511, %neg, !dbg !7233
  %call67 = call i32 (i8*, i32, ...) @open(i8* %24, i32 131137, i32 %and), !dbg !7234
  store i32 %call67, i32* %f, align 4, !dbg !7235
  %cmp68 = icmp eq i32 %call67, -1, !dbg !7236
  br i1 %cmp68, label %if.then70, label %if.end71, !dbg !7237

if.then70:                                        ; preds = %if.else66
  call void @error(i32 553, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.183, i64 0, i64 0)), !dbg !7238
  br label %end, !dbg !7240

if.end71:                                         ; preds = %if.else66
  br label %if.end72

if.end72:                                         ; preds = %if.end71, %if.then65
  %26 = load i32, i32* %f, align 4, !dbg !7241
  %call73 = call i32 @fstat(i32 %26, %struct.stat* %st) #7, !dbg !7243
  %cmp74 = icmp slt i32 %call73, 0, !dbg !7244
  br i1 %cmp74, label %if.then76, label %if.end78, !dbg !7245

if.then76:                                        ; preds = %if.end72
  %27 = load i32, i32* %f, align 4, !dbg !7246
  %call77 = call i32 @close(i32 %27), !dbg !7248
  call void @error(i32 553, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.91, i64 0, i64 0)), !dbg !7249
  br label %end, !dbg !7250

if.end78:                                         ; preds = %if.end72
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !7251
  %28 = load i32, i32* %st_mode, align 8, !dbg !7251
  %and79 = and i32 %28, 61440, !dbg !7251
  %cmp80 = icmp eq i32 %and79, 32768, !dbg !7251
  br i1 %cmp80, label %if.end84, label %if.then82, !dbg !7253

if.then82:                                        ; preds = %if.end78
  %29 = load i32, i32* %f, align 4, !dbg !7254
  %call83 = call i32 @close(i32 %29), !dbg !7256
  call void @addreply_noformat(i32 550, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.163, i64 0, i64 0)), !dbg !7257
  br label %end, !dbg !7258

if.end84:                                         ; preds = %if.end78
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 8, !dbg !7259
  %30 = load i64, i64* %st_size, align 8, !dbg !7259
  %cmp85 = icmp sgt i64 %30, 0, !dbg !7261
  br i1 %cmp85, label %if.then87, label %if.else99, !dbg !7262

if.then87:                                        ; preds = %if.end84
  %31 = load i8, i8* @guest, align 1, !dbg !7263
  %conv88 = sext i8 %31 to i32, !dbg !7263
  %cmp89 = icmp ne i32 %conv88, 0, !dbg !7266
  br i1 %cmp89, label %if.then91, label %if.end93, !dbg !7267

if.then91:                                        ; preds = %if.then87
  call void @addreply_noformat(i32 550, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.181, i64 0, i64 0)), !dbg !7268
  %32 = load i32, i32* %f, align 4, !dbg !7270
  %call92 = call i32 @close(i32 %32), !dbg !7271
  br label %end, !dbg !7272

if.end93:                                         ; preds = %if.then87
  %33 = load i32, i32* %append.addr, align 4, !dbg !7273
  %cmp94 = icmp ne i32 %33, 0, !dbg !7275
  br i1 %cmp94, label %if.then96, label %if.end98, !dbg !7276

if.then96:                                        ; preds = %if.end93
  %st_size97 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 8, !dbg !7277
  %34 = load i64, i64* %st_size97, align 8, !dbg !7277
  store i64 %34, i64* @restartat, align 8, !dbg !7279
  br label %if.end98, !dbg !7280

if.end98:                                         ; preds = %if.then96, %if.end93
  br label %if.end100, !dbg !7281

if.else99:                                        ; preds = %if.end84
  store i64 0, i64* @restartat, align 8, !dbg !7282
  br label %if.end100

if.end100:                                        ; preds = %if.else99, %if.end98
  %35 = load i64, i64* @restartat, align 8, !dbg !7284
  %st_size101 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 8, !dbg !7286
  %36 = load i64, i64* %st_size101, align 8, !dbg !7286
  %cmp102 = icmp sgt i64 %35, %36, !dbg !7287
  br i1 %cmp102, label %if.then104, label %if.end106, !dbg !7288

if.then104:                                       ; preds = %if.end100
  %st_size105 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 8, !dbg !7289
  %37 = load i64, i64* %st_size105, align 8, !dbg !7289
  store i64 %37, i64* @restartat, align 8, !dbg !7291
  br label %if.end106, !dbg !7292

if.end106:                                        ; preds = %if.then104, %if.end100
  %38 = load i64, i64* @restartat, align 8, !dbg !7293
  %cmp107 = icmp sgt i64 %38, 0, !dbg !7295
  br i1 %cmp107, label %land.lhs.true109, label %if.end115, !dbg !7296

land.lhs.true109:                                 ; preds = %if.end106
  %39 = load i32, i32* %f, align 4, !dbg !7297
  %40 = load i64, i64* @restartat, align 8, !dbg !7298
  %call110 = call i64 @lseek(i32 %39, i64 %40, i32 0) #7, !dbg !7299
  %cmp111 = icmp slt i64 %call110, 0, !dbg !7300
  br i1 %cmp111, label %if.then113, label %if.end115, !dbg !7301

if.then113:                                       ; preds = %land.lhs.true109
  %41 = load i32, i32* %f, align 4, !dbg !7302
  %call114 = call i32 @close(i32 %41), !dbg !7304
  call void @error(i32 451, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.184, i64 0, i64 0)), !dbg !7305
  br label %end, !dbg !7306

if.end115:                                        ; preds = %land.lhs.true109, %if.end106
  %42 = load i64, i64* @restartat, align 8, !dbg !7307
  %st_size116 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 8, !dbg !7309
  %43 = load i64, i64* %st_size116, align 8, !dbg !7309
  %cmp117 = icmp slt i64 %42, %43, !dbg !7310
  br i1 %cmp117, label %if.then119, label %if.end126, !dbg !7311

if.then119:                                       ; preds = %if.end115
  %44 = load i32, i32* %f, align 4, !dbg !7312
  %45 = load i64, i64* @restartat, align 8, !dbg !7315
  %call120 = call i32 @ftruncate(i32 %44, i64 %45) #7, !dbg !7316
  %cmp121 = icmp slt i32 %call120, 0, !dbg !7317
  br i1 %cmp121, label %if.then123, label %if.end125, !dbg !7318

if.then123:                                       ; preds = %if.then119
  %46 = load i32, i32* %f, align 4, !dbg !7319
  %call124 = call i32 @close(i32 %46), !dbg !7321
  call void @error(i32 451, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.185, i64 0, i64 0)), !dbg !7322
  br label %end, !dbg !7323

if.end125:                                        ; preds = %if.then119
  br label %if.end126, !dbg !7324

if.end126:                                        ; preds = %if.end125, %if.end115
  call void @opendata(), !dbg !7325
  %47 = load volatile i32, i32* @xferfd, align 4, !dbg !7326
  %cmp127 = icmp eq i32 %47, -1, !dbg !7328
  br i1 %cmp127, label %if.then129, label %if.end131, !dbg !7329

if.then129:                                       ; preds = %if.end126
  %48 = load i32, i32* %f, align 4, !dbg !7330
  %call130 = call i32 @close(i32 %48), !dbg !7332
  br label %end, !dbg !7333

if.end131:                                        ; preds = %if.end126
  call void @doreply(), !dbg !7334
  store i8 1, i8* @state_needs_update, align 1, !dbg !7335
  call void @setprocessname(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.186, i64 0, i64 0)), !dbg !7336
  %49 = load i64, i64* @restartat, align 8, !dbg !7337
  store i64 %49, i64* %filesize, align 8, !dbg !7338
  %call132 = call double @get_usec_time(), !dbg !7339
  store double %call132, double* %started, align 8, !dbg !7340
  %50 = load i32, i32* @clientfd, align 4, !dbg !7341
  %51 = load i8*, i8** @tls_cnx, align 8, !dbg !7343
  %52 = load volatile i32, i32* @xferfd, align 4, !dbg !7344
  %53 = load i8*, i8** %name.addr, align 8, !dbg !7345
  %54 = load i32, i32* %f, align 4, !dbg !7346
  %55 = load i8*, i8** @tls_data_cnx, align 8, !dbg !7347
  %56 = load i64, i64* @restartat, align 8, !dbg !7348
  %57 = load i8, i8* @type, align 1, !dbg !7349
  %conv133 = sext i8 %57 to i32, !dbg !7349
  %cmp134 = icmp eq i32 %conv133, 1, !dbg !7350
  %conv135 = zext i1 %cmp134 to i32, !dbg !7350
  %58 = load i64, i64* @throttling_bandwidth_ul, align 8, !dbg !7351
  %59 = load i64, i64* %max_filesize, align 8, !dbg !7352
  %call136 = call i32 @ul_init(%struct.ULHandler_* %ulhandler, i32 %50, i8* %51, i32 %52, i8* %53, i32 %54, i8* %55, i64 %56, i32 %conv135, i64 %58, i64 %59), !dbg !7353
  %cmp137 = icmp eq i32 %call136, 0, !dbg !7354
  br i1 %cmp137, label %if.then139, label %if.else142, !dbg !7355

if.then139:                                       ; preds = %if.end131
  %call140 = call i32 @ul_send(%struct.ULHandler_* %ulhandler), !dbg !7356
  store i32 %call140, i32* %ret, align 4, !dbg !7358
  %call141 = call i32 @ul_exit(%struct.ULHandler_* %ulhandler), !dbg !7359
  br label %if.end143, !dbg !7360

if.else142:                                       ; preds = %if.end131
  store i32 -1, i32* %ret, align 4, !dbg !7361
  br label %if.end143

if.end143:                                        ; preds = %if.else142, %if.then139
  %60 = load i32, i32* %f, align 4, !dbg !7363
  %call144 = call i32 @close(i32 %60), !dbg !7364
  call void @closedata(), !dbg !7365
  %total_uploaded = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %ulhandler, i32 0, i32 12, !dbg !7366
  %61 = load i64, i64* %total_uploaded, align 8, !dbg !7366
  %62 = load i64, i64* @uploaded, align 8, !dbg !7367
  %add = add i64 %62, %61, !dbg !7367
  store i64 %add, i64* @uploaded, align 8, !dbg !7367
  call void @llvm.dbg.declare(metadata i64* %atomic_file_size, metadata !7368, metadata !DIExpression()), !dbg !7370
  call void @llvm.dbg.declare(metadata i64* %original_file_size, metadata !7371, metadata !DIExpression()), !dbg !7372
  call void @llvm.dbg.declare(metadata i32* %files_count, metadata !7373, metadata !DIExpression()), !dbg !7374
  %63 = load i8, i8* %overwrite, align 1, !dbg !7375
  %conv145 = sext i8 %63 to i32, !dbg !7375
  %cmp146 = icmp eq i32 %conv145, 0, !dbg !7377
  br i1 %cmp146, label %if.then148, label %if.else149, !dbg !7378

if.then148:                                       ; preds = %if.end143
  store i32 1, i32* %files_count, align 4, !dbg !7379
  br label %if.end150, !dbg !7381

if.else149:                                       ; preds = %if.end143
  store i32 0, i32* %files_count, align 4, !dbg !7382
  br label %if.end150

if.end150:                                        ; preds = %if.else149, %if.then148
  %64 = load i32, i32* %autorename.addr, align 4, !dbg !7384
  %cmp151 = icmp ne i32 %64, 0, !dbg !7386
  br i1 %cmp151, label %land.lhs.true153, label %if.else168, !dbg !7387

land.lhs.true153:                                 ; preds = %if.end150
  %65 = load i64, i64* @restartat, align 8, !dbg !7388
  %cmp154 = icmp eq i64 %65, 0, !dbg !7389
  br i1 %cmp154, label %if.then156, label %if.else168, !dbg !7390

if.then156:                                       ; preds = %land.lhs.true153
  %66 = load i8*, i8** %atomic_file, align 8, !dbg !7391
  %call157 = call i64 @get_file_size(i8* %66), !dbg !7394
  store i64 %call157, i64* %atomic_file_size, align 8, !dbg !7395
  %cmp158 = icmp slt i64 %call157, 0, !dbg !7396
  br i1 %cmp158, label %if.then160, label %if.end161, !dbg !7397

if.then160:                                       ; preds = %if.then156
  br label %afterquota, !dbg !7398

if.end161:                                        ; preds = %if.then156
  %67 = load i8*, i8** %atomic_file, align 8, !dbg !7400
  %68 = load i8*, i8** %name.addr, align 8, !dbg !7402
  %call162 = call i32 @tryautorename(i8* %67, i8* %68, i8** %name2), !dbg !7403
  %cmp163 = icmp ne i32 %call162, 0, !dbg !7404
  br i1 %cmp163, label %if.then165, label %if.else166, !dbg !7405

if.then165:                                       ; preds = %if.end161
  call void @error(i32 553, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.182, i64 0, i64 0)), !dbg !7406
  br label %afterquota, !dbg !7408

if.else166:                                       ; preds = %if.end161
  store i8* null, i8** %atomic_file, align 8, !dbg !7409
  br label %if.end167

if.end167:                                        ; preds = %if.else166
  br label %if.end193, !dbg !7411

if.else168:                                       ; preds = %land.lhs.true153, %if.end150
  %69 = load i8*, i8** %atomic_file, align 8, !dbg !7412
  %cmp169 = icmp ne i8* %69, null, !dbg !7414
  br i1 %cmp169, label %if.then171, label %if.else191, !dbg !7415

if.then171:                                       ; preds = %if.else168
  %70 = load i8*, i8** %atomic_file, align 8, !dbg !7416
  %call172 = call i64 @get_file_size(i8* %70), !dbg !7419
  store i64 %call172, i64* %atomic_file_size, align 8, !dbg !7420
  %cmp173 = icmp slt i64 %call172, 0, !dbg !7421
  br i1 %cmp173, label %if.then175, label %if.end176, !dbg !7422

if.then175:                                       ; preds = %if.then171
  br label %afterquota, !dbg !7423

if.end176:                                        ; preds = %if.then171
  %71 = load i8*, i8** %name.addr, align 8, !dbg !7425
  %call177 = call i64 @get_file_size(i8* %71), !dbg !7427
  store i64 %call177, i64* %original_file_size, align 8, !dbg !7428
  %cmp178 = icmp slt i64 %call177, 0, !dbg !7429
  br i1 %cmp178, label %if.then183, label %lor.lhs.false180, !dbg !7430

lor.lhs.false180:                                 ; preds = %if.end176
  %72 = load i64, i64* @restartat, align 8, !dbg !7431
  %73 = load i64, i64* %original_file_size, align 8, !dbg !7432
  %cmp181 = icmp sgt i64 %72, %73, !dbg !7433
  br i1 %cmp181, label %if.then183, label %if.end184, !dbg !7434

if.then183:                                       ; preds = %lor.lhs.false180, %if.end176
  %74 = load i64, i64* @restartat, align 8, !dbg !7435
  store i64 %74, i64* %original_file_size, align 8, !dbg !7437
  br label %if.end184, !dbg !7438

if.end184:                                        ; preds = %if.then183, %lor.lhs.false180
  %75 = load i8*, i8** %atomic_file, align 8, !dbg !7439
  %76 = load i8*, i8** %name.addr, align 8, !dbg !7441
  %call185 = call i32 @rename(i8* %75, i8* %76) #7, !dbg !7442
  %cmp186 = icmp ne i32 %call185, 0, !dbg !7443
  br i1 %cmp186, label %if.then188, label %if.else189, !dbg !7444

if.then188:                                       ; preds = %if.end184
  call void @error(i32 553, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.182, i64 0, i64 0)), !dbg !7445
  br label %afterquota, !dbg !7447

if.else189:                                       ; preds = %if.end184
  store i8* null, i8** %atomic_file, align 8, !dbg !7448
  br label %if.end190

if.end190:                                        ; preds = %if.else189
  br label %if.end192, !dbg !7450

if.else191:                                       ; preds = %if.else168
  br label %if.end192

if.end192:                                        ; preds = %if.else191, %if.end190
  br label %if.end193

if.end193:                                        ; preds = %if.end192, %if.end167
  br label %afterquota, !dbg !7451

afterquota:                                       ; preds = %if.end193, %if.then188, %if.then175, %if.then165, %if.then160
  call void @llvm.dbg.label(metadata !7452), !dbg !7453
  %77 = load i32, i32* %overflow, align 4, !dbg !7454
  %cmp194 = icmp sgt i32 %77, 0, !dbg !7456
  br i1 %cmp194, label %if.then196, label %if.else197, !dbg !7457

if.then196:                                       ; preds = %afterquota
  %78 = load i8*, i8** %name.addr, align 8, !dbg !7458
  call void (i32, i8*, ...) @addreply(i32 552, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.187, i64 0, i64 0), i8* %78), !dbg !7460
  br label %if.end204, !dbg !7461

if.else197:                                       ; preds = %afterquota
  %79 = load i32, i32* %ret, align 4, !dbg !7462
  %cmp198 = icmp eq i32 %79, 0, !dbg !7465
  br i1 %cmp198, label %if.then200, label %if.else201, !dbg !7466

if.then200:                                       ; preds = %if.else197
  call void @addreply_noformat(i32 226, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.168, i64 0, i64 0)), !dbg !7467
  br label %if.end202, !dbg !7469

if.else201:                                       ; preds = %if.else197
  call void @addreply_noformat(i32 451, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.188, i64 0, i64 0)), !dbg !7470
  br label %if.end202

if.end202:                                        ; preds = %if.else201, %if.then200
  %total_uploaded203 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %ulhandler, i32 0, i32 12, !dbg !7472
  %80 = load i64, i64* %total_uploaded203, align 8, !dbg !7472
  %81 = load double, double* %started, align 8, !dbg !7473
  %82 = load i8*, i8** %name2, align 8, !dbg !7474
  %tobool = icmp ne i8* %82, null, !dbg !7474
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7474

cond.true:                                        ; preds = %if.end202
  %83 = load i8*, i8** %name2, align 8, !dbg !7475
  br label %cond.end, !dbg !7474

cond.false:                                       ; preds = %if.end202
  %84 = load i8*, i8** %name.addr, align 8, !dbg !7476
  br label %cond.end, !dbg !7474

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %83, %cond.true ], [ %84, %cond.false ], !dbg !7474
  call void @displayrate(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.189, i64 0, i64 0), i64 %80, double %81, i8* %cond, i32 1), !dbg !7477
  br label %if.end204

if.end204:                                        ; preds = %cond.end, %if.then196
  br label %end, !dbg !7478

end:                                              ; preds = %if.end204, %if.then129, %if.then123, %if.then113, %if.then91, %if.then82, %if.then76, %if.then70, %if.then52, %if.then40, %if.then24, %if.then18, %if.then14, %if.then
  call void @llvm.dbg.label(metadata !7479), !dbg !7480
  store i64 0, i64* @restartat, align 8, !dbg !7481
  %85 = load i8*, i8** %atomic_file, align 8, !dbg !7482
  %cmp205 = icmp ne i8* %85, null, !dbg !7484
  br i1 %cmp205, label %if.then207, label %if.end208, !dbg !7485

if.then207:                                       ; preds = %end
  store i8* null, i8** %atomic_file, align 8, !dbg !7486
  br label %if.end208, !dbg !7488

if.end208:                                        ; preds = %if.then207, %end
  ret void, !dbg !7489
}

; Function Attrs: nounwind
declare i32 @rename(i8*, i8*) #2

; Function Attrs: nounwind
declare i32 @ftruncate(i32, i64) #2

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @ul_init(%struct.ULHandler_* %ulhandler, i32 %clientfd, i8* %tls_clientfd, i32 %xferfd, i8* %name, i32 %f, i8* %tls_fd, i64 %restartat, i32 %ascii_mode, i64 %bandwidth, i64 %max_filesize) #0 !dbg !7490 {
entry:
  %retval = alloca i32, align 4
  %ulhandler.addr = alloca %struct.ULHandler_*, align 8
  %clientfd.addr = alloca i32, align 4
  %tls_clientfd.addr = alloca i8*, align 8
  %xferfd.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %f.addr = alloca i32, align 4
  %tls_fd.addr = alloca i8*, align 8
  %restartat.addr = alloca i64, align 8
  %ascii_mode.addr = alloca i32, align 4
  %bandwidth.addr = alloca i64, align 8
  %max_filesize.addr = alloca i64, align 8
  %pfd = alloca %struct.pollfd*, align 8
  store %struct.ULHandler_* %ulhandler, %struct.ULHandler_** %ulhandler.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ULHandler_** %ulhandler.addr, metadata !7495, metadata !DIExpression()), !dbg !7496
  store i32 %clientfd, i32* %clientfd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %clientfd.addr, metadata !7497, metadata !DIExpression()), !dbg !7498
  store i8* %tls_clientfd, i8** %tls_clientfd.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tls_clientfd.addr, metadata !7499, metadata !DIExpression()), !dbg !7500
  store i32 %xferfd, i32* %xferfd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xferfd.addr, metadata !7501, metadata !DIExpression()), !dbg !7502
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7503, metadata !DIExpression()), !dbg !7504
  store i32 %f, i32* %f.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %f.addr, metadata !7505, metadata !DIExpression()), !dbg !7506
  store i8* %tls_fd, i8** %tls_fd.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tls_fd.addr, metadata !7507, metadata !DIExpression()), !dbg !7508
  store i64 %restartat, i64* %restartat.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %restartat.addr, metadata !7509, metadata !DIExpression()), !dbg !7510
  store i32 %ascii_mode, i32* %ascii_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ascii_mode.addr, metadata !7511, metadata !DIExpression()), !dbg !7512
  store i64 %bandwidth, i64* %bandwidth.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bandwidth.addr, metadata !7513, metadata !DIExpression()), !dbg !7514
  store i64 %max_filesize, i64* %max_filesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %max_filesize.addr, metadata !7515, metadata !DIExpression()), !dbg !7516
  call void @llvm.dbg.declare(metadata %struct.pollfd** %pfd, metadata !7517, metadata !DIExpression()), !dbg !7518
  %0 = load i8*, i8** %name.addr, align 8, !dbg !7519
  %1 = load i32, i32* %xferfd.addr, align 4, !dbg !7520
  %2 = load i32, i32* %xferfd.addr, align 4, !dbg !7522
  %call = call i32 (i32, i32, ...) @fcntl(i32 %2, i32 3), !dbg !7523
  %or = or i32 %call, 2048, !dbg !7524
  %call1 = call i32 (i32, i32, ...) @fcntl(i32 %1, i32 4, i32 %or), !dbg !7525
  %cmp = icmp eq i32 %call1, -1, !dbg !7526
  br i1 %cmp, label %if.then, label %if.end, !dbg !7527

if.then:                                          ; preds = %entry
  call void @error(i32 451, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.242, i64 0, i64 0)), !dbg !7528
  store i32 -1, i32* %retval, align 4, !dbg !7530
  br label %return, !dbg !7530

if.end:                                           ; preds = %entry
  %3 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7531
  %buf = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %3, i32 0, i32 0, !dbg !7532
  store i8* null, i8** %buf, align 8, !dbg !7533
  %4 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7534
  %sizeof_buf = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %4, i32 0, i32 1, !dbg !7535
  store i64 0, i64* %sizeof_buf, align 8, !dbg !7536
  %5 = load i32, i32* %clientfd.addr, align 4, !dbg !7537
  %6 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7538
  %clientfd2 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %6, i32 0, i32 2, !dbg !7539
  store i32 %5, i32* %clientfd2, align 8, !dbg !7540
  %7 = load i8*, i8** %tls_clientfd.addr, align 8, !dbg !7541
  %8 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7542
  %tls_clientfd3 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %8, i32 0, i32 3, !dbg !7543
  store i8* %7, i8** %tls_clientfd3, align 8, !dbg !7544
  %9 = load i32, i32* %xferfd.addr, align 4, !dbg !7545
  %10 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7546
  %xferfd4 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %10, i32 0, i32 4, !dbg !7547
  store i32 %9, i32* %xferfd4, align 8, !dbg !7548
  %11 = load i32, i32* %f.addr, align 4, !dbg !7549
  %12 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7550
  %f5 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %12, i32 0, i32 6, !dbg !7551
  store i32 %11, i32* %f5, align 8, !dbg !7552
  %13 = load i8*, i8** %tls_fd.addr, align 8, !dbg !7553
  %14 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7554
  %tls_fd6 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %14, i32 0, i32 5, !dbg !7555
  store i8* %13, i8** %tls_fd6, align 8, !dbg !7556
  %15 = load i32, i32* %ascii_mode.addr, align 4, !dbg !7557
  %16 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7558
  %ascii_mode7 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %16, i32 0, i32 13, !dbg !7559
  store i32 %15, i32* %ascii_mode7, align 8, !dbg !7560
  %17 = load i64, i64* %restartat.addr, align 8, !dbg !7561
  %18 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7562
  %cur_pos = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %18, i32 0, i32 7, !dbg !7563
  store i64 %17, i64* %cur_pos, align 8, !dbg !7564
  %19 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7565
  %total_uploaded = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %19, i32 0, i32 12, !dbg !7566
  store i64 0, i64* %total_uploaded, align 8, !dbg !7567
  %20 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7568
  %min_sleep = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %20, i32 0, i32 14, !dbg !7569
  store double 1.000000e-01, double* %min_sleep, align 8, !dbg !7570
  %21 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7571
  %max_sleep = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %21, i32 0, i32 15, !dbg !7572
  store double 5.000000e+00, double* %max_sleep, align 8, !dbg !7573
  %22 = load i64, i64* %bandwidth.addr, align 8, !dbg !7574
  %23 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7575
  %bandwidth8 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %23, i32 0, i32 16, !dbg !7576
  store i64 %22, i64* %bandwidth8, align 8, !dbg !7577
  %24 = load i64, i64* %max_filesize.addr, align 8, !dbg !7578
  %25 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7579
  %max_filesize9 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %25, i32 0, i32 17, !dbg !7580
  store i64 %24, i64* %max_filesize9, align 8, !dbg !7581
  %26 = load i64, i64* @idletime, align 8, !dbg !7582
  %27 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7583
  %idletime = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %27, i32 0, i32 18, !dbg !7584
  store i64 %26, i64* %idletime, align 8, !dbg !7585
  %28 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7586
  %pfds = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %28, i32 0, i32 19, !dbg !7587
  %arrayidx = getelementptr [2 x %struct.pollfd], [2 x %struct.pollfd]* %pfds, i64 0, i64 0, !dbg !7586
  store %struct.pollfd* %arrayidx, %struct.pollfd** %pfd, align 8, !dbg !7588
  %29 = load i32, i32* %xferfd.addr, align 4, !dbg !7589
  %30 = load %struct.pollfd*, %struct.pollfd** %pfd, align 8, !dbg !7590
  %fd = getelementptr inbounds %struct.pollfd, %struct.pollfd* %30, i32 0, i32 0, !dbg !7591
  store i32 %29, i32* %fd, align 4, !dbg !7592
  %31 = load %struct.pollfd*, %struct.pollfd** %pfd, align 8, !dbg !7593
  %events = getelementptr inbounds %struct.pollfd, %struct.pollfd* %31, i32 0, i32 1, !dbg !7594
  store i16 25, i16* %events, align 4, !dbg !7595
  %32 = load %struct.pollfd*, %struct.pollfd** %pfd, align 8, !dbg !7596
  %revents = getelementptr inbounds %struct.pollfd, %struct.pollfd* %32, i32 0, i32 2, !dbg !7597
  store i16 0, i16* %revents, align 2, !dbg !7598
  %33 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7599
  %pfds10 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %33, i32 0, i32 19, !dbg !7600
  %arrayidx11 = getelementptr [2 x %struct.pollfd], [2 x %struct.pollfd]* %pfds10, i64 0, i64 1, !dbg !7599
  store %struct.pollfd* %arrayidx11, %struct.pollfd** %pfd, align 8, !dbg !7601
  %34 = load i32, i32* %clientfd.addr, align 4, !dbg !7602
  %35 = load %struct.pollfd*, %struct.pollfd** %pfd, align 8, !dbg !7603
  %fd12 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %35, i32 0, i32 0, !dbg !7604
  store i32 %34, i32* %fd12, align 4, !dbg !7605
  %36 = load %struct.pollfd*, %struct.pollfd** %pfd, align 8, !dbg !7606
  %events13 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %36, i32 0, i32 1, !dbg !7607
  store i16 27, i16* %events13, align 4, !dbg !7608
  %37 = load %struct.pollfd*, %struct.pollfd** %pfd, align 8, !dbg !7609
  %revents14 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %37, i32 0, i32 2, !dbg !7610
  store i16 0, i16* %revents14, align 2, !dbg !7611
  %38 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7612
  %pfds_command = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %38, i32 0, i32 20, !dbg !7613
  store %struct.pollfd* %pfds_command, %struct.pollfd** %pfd, align 8, !dbg !7614
  %39 = load i32, i32* %clientfd.addr, align 4, !dbg !7615
  %40 = load %struct.pollfd*, %struct.pollfd** %pfd, align 8, !dbg !7616
  %fd15 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %40, i32 0, i32 0, !dbg !7617
  store i32 %39, i32* %fd15, align 4, !dbg !7618
  %41 = load %struct.pollfd*, %struct.pollfd** %pfd, align 8, !dbg !7619
  %events16 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %41, i32 0, i32 1, !dbg !7620
  store i16 27, i16* %events16, align 4, !dbg !7621
  %42 = load %struct.pollfd*, %struct.pollfd** %pfd, align 8, !dbg !7622
  %revents17 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %42, i32 0, i32 2, !dbg !7623
  store i16 0, i16* %revents17, align 2, !dbg !7624
  %43 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7625
  %min_chunk_size = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %43, i32 0, i32 9, !dbg !7626
  store i64 131072, i64* %min_chunk_size, align 8, !dbg !7627
  %44 = load i32, i32* %ascii_mode.addr, align 4, !dbg !7628
  %cmp18 = icmp sgt i32 %44, 0, !dbg !7630
  br i1 %cmp18, label %if.then19, label %if.else, !dbg !7631

if.then19:                                        ; preds = %if.end
  %45 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7632
  %max_chunk_size = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %45, i32 0, i32 11, !dbg !7634
  store i64 65536, i64* %max_chunk_size, align 8, !dbg !7635
  %46 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7636
  %default_chunk_size = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %46, i32 0, i32 10, !dbg !7637
  store i64 65536, i64* %default_chunk_size, align 8, !dbg !7638
  br label %if.end28, !dbg !7639

if.else:                                          ; preds = %if.end
  %47 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7640
  %max_chunk_size20 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %47, i32 0, i32 11, !dbg !7642
  store i64 524288, i64* %max_chunk_size20, align 8, !dbg !7643
  %48 = load i64, i64* %bandwidth.addr, align 8, !dbg !7644
  %cmp21 = icmp ule i64 %48, 0, !dbg !7646
  br i1 %cmp21, label %if.then22, label %if.else25, !dbg !7647

if.then22:                                        ; preds = %if.else
  %49 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7648
  %max_chunk_size23 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %49, i32 0, i32 11, !dbg !7650
  %50 = load i64, i64* %max_chunk_size23, align 8, !dbg !7650
  %51 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7651
  %default_chunk_size24 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %51, i32 0, i32 10, !dbg !7652
  store i64 %50, i64* %default_chunk_size24, align 8, !dbg !7653
  br label %if.end27, !dbg !7654

if.else25:                                        ; preds = %if.else
  %52 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7655
  %default_chunk_size26 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %52, i32 0, i32 10, !dbg !7657
  store i64 262144, i64* %default_chunk_size26, align 8, !dbg !7658
  br label %if.end27

if.end27:                                         ; preds = %if.else25, %if.then22
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then19
  %53 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7659
  %default_chunk_size29 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %53, i32 0, i32 10, !dbg !7660
  %54 = load i64, i64* %default_chunk_size29, align 8, !dbg !7660
  %55 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7661
  %chunk_size = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %55, i32 0, i32 8, !dbg !7662
  store i64 %54, i64* %chunk_size, align 8, !dbg !7663
  %56 = load i64, i64* %restartat.addr, align 8, !dbg !7664
  %57 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7665
  %cur_pos30 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %57, i32 0, i32 7, !dbg !7666
  store i64 %56, i64* %cur_pos30, align 8, !dbg !7667
  %58 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7668
  %max_chunk_size31 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %58, i32 0, i32 11, !dbg !7669
  %59 = load i64, i64* %max_chunk_size31, align 8, !dbg !7669
  %60 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7670
  %sizeof_buf32 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %60, i32 0, i32 1, !dbg !7671
  store i64 %59, i64* %sizeof_buf32, align 8, !dbg !7672
  %61 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7673
  %sizeof_buf33 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %61, i32 0, i32 1, !dbg !7675
  %62 = load i64, i64* %sizeof_buf33, align 8, !dbg !7675
  %call34 = call noalias i8* @malloc(i64 %62) #7, !dbg !7676
  %63 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7677
  %buf35 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %63, i32 0, i32 0, !dbg !7678
  store i8* %call34, i8** %buf35, align 8, !dbg !7679
  %cmp36 = icmp eq i8* %call34, null, !dbg !7680
  br i1 %cmp36, label %if.then37, label %if.end40, !dbg !7681

if.then37:                                        ; preds = %if.end28
  %64 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7682
  %buf38 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %64, i32 0, i32 0, !dbg !7684
  store i8* null, i8** %buf38, align 8, !dbg !7685
  %65 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7686
  %sizeof_buf39 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %65, i32 0, i32 1, !dbg !7687
  store i64 0, i64* %sizeof_buf39, align 8, !dbg !7688
  store i32 -1, i32* %retval, align 4, !dbg !7689
  br label %return, !dbg !7689

if.end40:                                         ; preds = %if.end28
  store i32 0, i32* %retval, align 4, !dbg !7690
  br label %return, !dbg !7690

return:                                           ; preds = %if.end40, %if.then37, %if.then
  %66 = load i32, i32* %retval, align 4, !dbg !7691
  ret i32 %66, !dbg !7691
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @ul_send(%struct.ULHandler_* %ulhandler) #0 !dbg !7692 {
entry:
  %retval = alloca i32, align 4
  %ulhandler.addr = alloca %struct.ULHandler_*, align 8
  %ts_start = alloca double, align 8
  %uploaded = alloca i64, align 8
  %pollret = alloca i32, align 4
  %timeout = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.ULHandler_* %ulhandler, %struct.ULHandler_** %ulhandler.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ULHandler_** %ulhandler.addr, metadata !7695, metadata !DIExpression()), !dbg !7696
  call void @llvm.dbg.declare(metadata double* %ts_start, metadata !7697, metadata !DIExpression()), !dbg !7698
  store double 0.000000e+00, double* %ts_start, align 8, !dbg !7698
  call void @llvm.dbg.declare(metadata i64* %uploaded, metadata !7699, metadata !DIExpression()), !dbg !7700
  store i64 0, i64* %uploaded, align 8, !dbg !7700
  call void @llvm.dbg.declare(metadata i32* %pollret, metadata !7701, metadata !DIExpression()), !dbg !7702
  call void @llvm.dbg.declare(metadata i32* %timeout, metadata !7703, metadata !DIExpression()), !dbg !7704
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7705, metadata !DIExpression()), !dbg !7706
  %0 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7707
  %bandwidth = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %0, i32 0, i32 16, !dbg !7709
  %1 = load i64, i64* %bandwidth, align 8, !dbg !7709
  %cmp = icmp ugt i64 %1, 0, !dbg !7710
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7711

land.lhs.true:                                    ; preds = %entry
  %call = call double @get_usec_time(), !dbg !7712
  store double %call, double* %ts_start, align 8, !dbg !7713
  %cmp1 = fcmp ole double %call, 0.000000e+00, !dbg !7714
  br i1 %cmp1, label %if.then, label %if.end, !dbg !7715

if.then:                                          ; preds = %land.lhs.true
  call void @error(i32 451, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.243, i64 0, i64 0)), !dbg !7716
  store i32 -1, i32* %retval, align 4, !dbg !7718
  br label %return, !dbg !7718

if.end:                                           ; preds = %land.lhs.true, %entry
  br label %for.cond, !dbg !7719

for.cond:                                         ; preds = %if.end80, %if.end
  %2 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7720
  %idletime = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %2, i32 0, i32 18, !dbg !7725
  %3 = load i64, i64* %idletime, align 8, !dbg !7725
  %cmp2 = icmp uge i64 %3, 2147483, !dbg !7726
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !7727

if.then3:                                         ; preds = %for.cond
  store i32 2147483647, i32* %timeout, align 4, !dbg !7728
  br label %if.end5, !dbg !7730

if.else:                                          ; preds = %for.cond
  %4 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7731
  %idletime4 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %4, i32 0, i32 18, !dbg !7733
  %5 = load i64, i64* %idletime4, align 8, !dbg !7733
  %conv = trunc i64 %5 to i32, !dbg !7734
  %mul = mul i32 %conv, 1000, !dbg !7735
  store i32 %mul, i32* %timeout, align 4, !dbg !7736
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then3
  %6 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7737
  %pfds = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %6, i32 0, i32 19, !dbg !7738
  %arrayidx = getelementptr [2 x %struct.pollfd], [2 x %struct.pollfd]* %pfds, i64 0, i64 1, !dbg !7737
  %revents = getelementptr inbounds %struct.pollfd, %struct.pollfd* %arrayidx, i32 0, i32 2, !dbg !7739
  store i16 0, i16* %revents, align 2, !dbg !7740
  %7 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7741
  %pfds6 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %7, i32 0, i32 19, !dbg !7742
  %arrayidx7 = getelementptr [2 x %struct.pollfd], [2 x %struct.pollfd]* %pfds6, i64 0, i64 0, !dbg !7741
  %revents8 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %arrayidx7, i32 0, i32 2, !dbg !7743
  store i16 0, i16* %revents8, align 2, !dbg !7744
  %8 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7745
  %pfds9 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %8, i32 0, i32 19, !dbg !7746
  %arraydecay = getelementptr inbounds [2 x %struct.pollfd], [2 x %struct.pollfd]* %pfds9, i64 0, i64 0, !dbg !7745
  %9 = load i32, i32* %timeout, align 4, !dbg !7747
  %call10 = call i32 @Fuzz_poll(%struct.pollfd* %arraydecay, i64 2, i32 %9), !dbg !7748
  store i32 %call10, i32* %pollret, align 4, !dbg !7749
  %10 = load i32, i32* %pollret, align 4, !dbg !7750
  %cmp11 = icmp slt i32 %10, 0, !dbg !7752
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !7753

if.then13:                                        ; preds = %if.end5
  call void @addreply_noformat(i32 451, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.245, i64 0, i64 0)), !dbg !7754
  store i32 -1, i32* %retval, align 4, !dbg !7756
  br label %return, !dbg !7756

if.end14:                                         ; preds = %if.end5
  %11 = load i32, i32* %pollret, align 4, !dbg !7757
  %cmp15 = icmp eq i32 %11, 0, !dbg !7759
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !7760

if.then17:                                        ; preds = %if.end14
  call void @addreply_noformat(i32 421, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.254, i64 0, i64 0)), !dbg !7761
  store i32 -1, i32* %retval, align 4, !dbg !7763
  br label %return, !dbg !7763

if.end18:                                         ; preds = %if.end14
  %12 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7764
  %pfds19 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %12, i32 0, i32 19, !dbg !7766
  %arrayidx20 = getelementptr [2 x %struct.pollfd], [2 x %struct.pollfd]* %pfds19, i64 0, i64 0, !dbg !7764
  %revents21 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %arrayidx20, i32 0, i32 2, !dbg !7767
  %13 = load i16, i16* %revents21, align 2, !dbg !7767
  %conv22 = sext i16 %13 to i32, !dbg !7764
  %and = and i32 %conv22, 1, !dbg !7768
  %cmp23 = icmp ne i32 %and, 0, !dbg !7769
  br i1 %cmp23, label %if.then25, label %if.end33, !dbg !7770

if.then25:                                        ; preds = %if.end18
  %14 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7771
  %15 = load double, double* %ts_start, align 8, !dbg !7773
  %call26 = call i32 @ul_handle_data(%struct.ULHandler_* %14, i64* %uploaded, double %15), !dbg !7774
  store i32 %call26, i32* %ret, align 4, !dbg !7775
  %16 = load i32, i32* %ret, align 4, !dbg !7776
  switch i32 %16, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb27
    i32 0, label %sw.bb28
  ], !dbg !7777

sw.bb:                                            ; preds = %if.then25
  store i32 1, i32* %retval, align 4, !dbg !7778
  br label %return, !dbg !7778

sw.bb27:                                          ; preds = %if.then25
  store i32 0, i32* %retval, align 4, !dbg !7780
  br label %return, !dbg !7780

sw.bb28:                                          ; preds = %if.then25
  br label %sw.epilog, !dbg !7781

sw.default:                                       ; preds = %if.then25
  %17 = load i32, i32* %ret, align 4, !dbg !7782
  %cmp29 = icmp sgt i32 %17, 2, !dbg !7784
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !7785

if.then31:                                        ; preds = %sw.default
  call void @abort() #13, !dbg !7786
  unreachable, !dbg !7786

if.end32:                                         ; preds = %sw.default
  %18 = load i32, i32* %ret, align 4, !dbg !7788
  store i32 %18, i32* %retval, align 4, !dbg !7789
  br label %return, !dbg !7789

sw.epilog:                                        ; preds = %sw.bb28
  br label %if.end33, !dbg !7790

if.end33:                                         ; preds = %sw.epilog, %if.end18
  %19 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7791
  %pfds34 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %19, i32 0, i32 19, !dbg !7793
  %arrayidx35 = getelementptr [2 x %struct.pollfd], [2 x %struct.pollfd]* %pfds34, i64 0, i64 1, !dbg !7791
  %revents36 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %arrayidx35, i32 0, i32 2, !dbg !7794
  %20 = load i16, i16* %revents36, align 2, !dbg !7794
  %conv37 = sext i16 %20 to i32, !dbg !7791
  %and38 = and i32 %conv37, 3, !dbg !7795
  %cmp39 = icmp ne i32 %and38, 0, !dbg !7796
  br i1 %cmp39, label %if.then41, label %if.end47, !dbg !7797

if.then41:                                        ; preds = %if.end33
  %21 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7798
  %call42 = call i32 @ulhandler_handle_commands(%struct.ULHandler_* %21), !dbg !7800
  store i32 %call42, i32* %ret, align 4, !dbg !7801
  %22 = load i32, i32* %ret, align 4, !dbg !7802
  %cmp43 = icmp ne i32 %22, 0, !dbg !7804
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !7805

if.then45:                                        ; preds = %if.then41
  %23 = load i32, i32* %ret, align 4, !dbg !7806
  store i32 %23, i32* %retval, align 4, !dbg !7808
  br label %return, !dbg !7808

if.end46:                                         ; preds = %if.then41
  br label %if.end47, !dbg !7809

if.end47:                                         ; preds = %if.end46, %if.end33
  %24 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7810
  %pfds48 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %24, i32 0, i32 19, !dbg !7812
  %arrayidx49 = getelementptr [2 x %struct.pollfd], [2 x %struct.pollfd]* %pfds48, i64 0, i64 0, !dbg !7810
  %revents50 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %arrayidx49, i32 0, i32 2, !dbg !7813
  %25 = load i16, i16* %revents50, align 2, !dbg !7813
  %conv51 = sext i16 %25 to i32, !dbg !7810
  %and52 = and i32 %conv51, 40, !dbg !7814
  %cmp53 = icmp ne i32 %and52, 0, !dbg !7815
  br i1 %cmp53, label %if.then70, label %lor.lhs.false, !dbg !7816

lor.lhs.false:                                    ; preds = %if.end47
  %26 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7817
  %pfds55 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %26, i32 0, i32 19, !dbg !7818
  %arrayidx56 = getelementptr [2 x %struct.pollfd], [2 x %struct.pollfd]* %pfds55, i64 0, i64 0, !dbg !7817
  %revents57 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %arrayidx56, i32 0, i32 2, !dbg !7819
  %27 = load i16, i16* %revents57, align 2, !dbg !7819
  %conv58 = sext i16 %27 to i32, !dbg !7817
  %and59 = and i32 %conv58, 16, !dbg !7820
  %cmp60 = icmp ne i32 %and59, 0, !dbg !7821
  br i1 %cmp60, label %land.lhs.true62, label %if.end71, !dbg !7822

land.lhs.true62:                                  ; preds = %lor.lhs.false
  %28 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7823
  %pfds63 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %28, i32 0, i32 19, !dbg !7824
  %arrayidx64 = getelementptr [2 x %struct.pollfd], [2 x %struct.pollfd]* %pfds63, i64 0, i64 0, !dbg !7823
  %revents65 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %arrayidx64, i32 0, i32 2, !dbg !7825
  %29 = load i16, i16* %revents65, align 2, !dbg !7825
  %conv66 = sext i16 %29 to i32, !dbg !7823
  %and67 = and i32 %conv66, 1, !dbg !7826
  %cmp68 = icmp eq i32 %and67, 0, !dbg !7827
  br i1 %cmp68, label %if.then70, label %if.end71, !dbg !7828

if.then70:                                        ; preds = %land.lhs.true62, %if.end47
  store i32 -1, i32* %retval, align 4, !dbg !7829
  br label %return, !dbg !7829

if.end71:                                         ; preds = %land.lhs.true62, %lor.lhs.false
  %30 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7831
  %pfds72 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %30, i32 0, i32 19, !dbg !7833
  %arrayidx73 = getelementptr [2 x %struct.pollfd], [2 x %struct.pollfd]* %pfds72, i64 0, i64 1, !dbg !7831
  %revents74 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %arrayidx73, i32 0, i32 2, !dbg !7834
  %31 = load i16, i16* %revents74, align 2, !dbg !7834
  %conv75 = sext i16 %31 to i32, !dbg !7831
  %and76 = and i32 %conv75, 56, !dbg !7835
  %cmp77 = icmp ne i32 %and76, 0, !dbg !7836
  br i1 %cmp77, label %if.then79, label %if.end80, !dbg !7837

if.then79:                                        ; preds = %if.end71
  call void @addreply_noformat(i32 221, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.143, i64 0, i64 0)), !dbg !7838
  store i32 -1, i32* %retval, align 4, !dbg !7840
  br label %return, !dbg !7840

if.end80:                                         ; preds = %if.end71
  br label %for.cond, !dbg !7841, !llvm.loop !7842

return:                                           ; preds = %if.then79, %if.then70, %if.then45, %if.end32, %sw.bb27, %sw.bb, %if.then17, %if.then13, %if.then
  %32 = load i32, i32* %retval, align 4, !dbg !7845
  ret i32 %32, !dbg !7845
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @ul_exit(%struct.ULHandler_* %ulhandler) #0 !dbg !7846 {
entry:
  %ulhandler.addr = alloca %struct.ULHandler_*, align 8
  store %struct.ULHandler_* %ulhandler, %struct.ULHandler_** %ulhandler.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ULHandler_** %ulhandler.addr, metadata !7847, metadata !DIExpression()), !dbg !7848
  %0 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7849
  %buf = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %0, i32 0, i32 0, !dbg !7850
  %1 = load i8*, i8** %buf, align 8, !dbg !7850
  call void @free(i8* %1) #7, !dbg !7851
  %2 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7852
  %buf1 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %2, i32 0, i32 0, !dbg !7853
  store i8* null, i8** %buf1, align 8, !dbg !7854
  ret i32 0, !dbg !7855
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i64 @get_file_size(i8* %file) #0 !dbg !7856 {
entry:
  %retval = alloca i64, align 8
  %file.addr = alloca i8*, align 8
  %st = alloca %struct.stat, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !7859, metadata !DIExpression()), !dbg !7860
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !7861, metadata !DIExpression()), !dbg !7862
  %0 = load i8*, i8** %file.addr, align 8, !dbg !7863
  %call = call i32 @stat(i8* %0, %struct.stat* %st) #7, !dbg !7865
  %cmp = icmp ne i32 %call, 0, !dbg !7866
  br i1 %cmp, label %if.then, label %if.end, !dbg !7867

if.then:                                          ; preds = %entry
  store i64 -1, i64* %retval, align 8, !dbg !7868
  br label %return, !dbg !7868

if.end:                                           ; preds = %entry
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 8, !dbg !7870
  %1 = load i64, i64* %st_size, align 8, !dbg !7870
  store i64 %1, i64* %retval, align 8, !dbg !7871
  br label %return, !dbg !7871

return:                                           ; preds = %if.end, %if.then
  %2 = load i64, i64* %retval, align 8, !dbg !7872
  ret i64 %2, !dbg !7872
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @tryautorename(i8* %atomic_file, i8* %name, i8** %name2_) #0 !dbg !746 {
entry:
  %retval = alloca i32, align 4
  %atomic_file.addr = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %name2_.addr = alloca i8**, align 8
  %gc = alloca i32, align 4
  store i8* %atomic_file, i8** %atomic_file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %atomic_file.addr, metadata !7873, metadata !DIExpression()), !dbg !7874
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7875, metadata !DIExpression()), !dbg !7876
  store i8** %name2_, i8*** %name2_.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %name2_.addr, metadata !7877, metadata !DIExpression()), !dbg !7878
  call void @llvm.dbg.declare(metadata i32* %gc, metadata !7879, metadata !DIExpression()), !dbg !7880
  store i32 0, i32* %gc, align 4, !dbg !7880
  %0 = load i8*, i8** %atomic_file.addr, align 8, !dbg !7881
  %1 = load i8*, i8** %name.addr, align 8, !dbg !7883
  %call = call i32 @link(i8* %0, i8* %1) #7, !dbg !7884
  %cmp = icmp eq i32 %call, 0, !dbg !7885
  br i1 %cmp, label %if.then, label %if.end, !dbg !7886

if.then:                                          ; preds = %entry
  %2 = load i8**, i8*** %name2_.addr, align 8, !dbg !7887
  store i8* null, i8** %2, align 8, !dbg !7889
  store i32 0, i32* %retval, align 4, !dbg !7890
  br label %return, !dbg !7890

if.end:                                           ; preds = %entry
  %3 = load i8**, i8*** %name2_.addr, align 8, !dbg !7891
  store i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @tryautorename.name2, i64 0, i64 0), i8** %3, align 8, !dbg !7892
  br label %for.cond, !dbg !7893

for.cond:                                         ; preds = %sw.bb, %if.end
  %4 = load i32, i32* %gc, align 4, !dbg !7894
  %inc = add i32 %4, 1, !dbg !7894
  store i32 %inc, i32* %gc, align 4, !dbg !7894
  %5 = load i32, i32* %gc, align 4, !dbg !7898
  %cmp1 = icmp eq i32 %5, 0, !dbg !7900
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !7901

lor.lhs.false:                                    ; preds = %for.cond
  %6 = load i8*, i8** %name.addr, align 8, !dbg !7902
  %7 = load i32, i32* %gc, align 4, !dbg !7902
  %call2 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @tryautorename.name2, i64 0, i64 0), i64 4096, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.257, i64 0, i64 0), i8* %6, i32 %7) #7, !dbg !7902
  %cmp3 = icmp sge i32 %call2, 4096, !dbg !7902
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !7903

if.then4:                                         ; preds = %lor.lhs.false, %for.cond
  br label %for.end, !dbg !7904

if.end5:                                          ; preds = %lor.lhs.false
  %8 = load i8*, i8** %atomic_file.addr, align 8, !dbg !7906
  %call6 = call i32 @link(i8* %8, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @tryautorename.name2, i64 0, i64 0)) #7, !dbg !7908
  %cmp7 = icmp eq i32 %call6, 0, !dbg !7909
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !7910

if.then8:                                         ; preds = %if.end5
  store i32 0, i32* %retval, align 4, !dbg !7911
  br label %return, !dbg !7911

if.end9:                                          ; preds = %if.end5
  %call10 = call i32* @__errno_location() #14, !dbg !7913
  %9 = load i32, i32* %call10, align 4, !dbg !7913
  switch i32 %9, label %sw.epilog [
    i32 17, label %sw.bb
    i32 21, label %sw.bb
    i32 26, label %sw.bb
  ], !dbg !7914

sw.bb:                                            ; preds = %if.end9, %if.end9, %if.end9
  br label %for.cond, !dbg !7915, !llvm.loop !7917

sw.epilog:                                        ; preds = %if.end9
  br label %for.end, !dbg !7920

for.end:                                          ; preds = %sw.epilog, %if.then4
  %10 = load i8**, i8*** %name2_.addr, align 8, !dbg !7921
  store i8* null, i8** %10, align 8, !dbg !7922
  store i32 -1, i32* %retval, align 4, !dbg !7923
  br label %return, !dbg !7923

return:                                           ; preds = %for.end, %if.then8, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !7924
  ret i32 %11, !dbg !7924
}

; Function Attrs: nounwind
declare i32 @link(i8*, i8*) #2

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @ul_handle_data(%struct.ULHandler_* %ulhandler, i64* %uploaded, double %ts_start) #0 !dbg !7925 {
entry:
  %retval = alloca i32, align 4
  %ulhandler.addr = alloca %struct.ULHandler_*, align 8
  %uploaded.addr = alloca i64*, align 8
  %ts_start.addr = alloca double, align 8
  %readnb = alloca i64, align 8
  %required_sleep = alloca double, align 8
  %pollret = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.ULHandler_* %ulhandler, %struct.ULHandler_** %ulhandler.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ULHandler_** %ulhandler.addr, metadata !7928, metadata !DIExpression()), !dbg !7929
  store i64* %uploaded, i64** %uploaded.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %uploaded.addr, metadata !7930, metadata !DIExpression()), !dbg !7931
  store double %ts_start, double* %ts_start.addr, align 8
  call void @llvm.dbg.declare(metadata double* %ts_start.addr, metadata !7932, metadata !DIExpression()), !dbg !7933
  call void @llvm.dbg.declare(metadata i64* %readnb, metadata !7934, metadata !DIExpression()), !dbg !7935
  call void @llvm.dbg.declare(metadata double* %required_sleep, metadata !7936, metadata !DIExpression()), !dbg !7937
  store double 0.000000e+00, double* %required_sleep, align 8, !dbg !7937
  call void @llvm.dbg.declare(metadata i32* %pollret, metadata !7938, metadata !DIExpression()), !dbg !7939
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7940, metadata !DIExpression()), !dbg !7941
  %0 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7942
  %max_filesize = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %0, i32 0, i32 17, !dbg !7944
  %1 = load i64, i64* %max_filesize, align 8, !dbg !7944
  %cmp = icmp sge i64 %1, 0, !dbg !7945
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7946

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7947
  %total_uploaded = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %2, i32 0, i32 12, !dbg !7948
  %3 = load i64, i64* %total_uploaded, align 8, !dbg !7948
  %4 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7949
  %max_filesize1 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %4, i32 0, i32 17, !dbg !7950
  %5 = load i64, i64* %max_filesize1, align 8, !dbg !7950
  %cmp2 = icmp sgt i64 %3, %5, !dbg !7951
  br i1 %cmp2, label %if.then, label %if.end, !dbg !7952

if.then:                                          ; preds = %land.lhs.true
  call void (i32, i8*, ...) @addreply(i32 552, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.255, i64 0, i64 0)), !dbg !7953
  store i32 -2, i32* %retval, align 4, !dbg !7955
  br label %return, !dbg !7955

if.end:                                           ; preds = %land.lhs.true, %entry
  %6 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7956
  %chunk_size = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %6, i32 0, i32 8, !dbg !7958
  %7 = load i64, i64* %chunk_size, align 8, !dbg !7958
  %8 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7959
  %sizeof_buf = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %8, i32 0, i32 1, !dbg !7960
  %9 = load i64, i64* %sizeof_buf, align 8, !dbg !7960
  %cmp3 = icmp sgt i64 %7, %9, !dbg !7961
  br i1 %cmp3, label %if.then4, label %if.end7, !dbg !7962

if.then4:                                         ; preds = %if.end
  %10 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7963
  %sizeof_buf5 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %10, i32 0, i32 1, !dbg !7965
  %11 = load i64, i64* %sizeof_buf5, align 8, !dbg !7965
  %12 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7966
  %max_chunk_size = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %12, i32 0, i32 11, !dbg !7967
  store i64 %11, i64* %max_chunk_size, align 8, !dbg !7968
  %13 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7969
  %chunk_size6 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %13, i32 0, i32 8, !dbg !7970
  store i64 %11, i64* %chunk_size6, align 8, !dbg !7971
  br label %if.end7, !dbg !7972

if.end7:                                          ; preds = %if.then4, %if.end
  %14 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7973
  %tls_fd = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %14, i32 0, i32 5, !dbg !7975
  %15 = load i8*, i8** %tls_fd, align 8, !dbg !7975
  %cmp8 = icmp ne i8* %15, null, !dbg !7976
  br i1 %cmp8, label %if.then9, label %if.else, !dbg !7977

if.then9:                                         ; preds = %if.end7
  call void @abort() #13, !dbg !7978
  unreachable, !dbg !7978

if.else:                                          ; preds = %if.end7
  %16 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7980
  %buf = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %16, i32 0, i32 0, !dbg !7982
  %17 = load i8*, i8** %buf, align 8, !dbg !7982
  %18 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !7983
  %chunk_size10 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %18, i32 0, i32 8, !dbg !7984
  %19 = load i64, i64* %chunk_size10, align 8, !dbg !7984
  %call = call i64 @getrandom(i8* %17, i64 %19, i32 0), !dbg !7985
  store i64 %call, i64* %readnb, align 8, !dbg !7986
  br label %if.end11

if.end11:                                         ; preds = %if.else
  %20 = load i64, i64* %readnb, align 8, !dbg !7987
  %cmp12 = icmp eq i64 %20, 0, !dbg !7989
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !7990

if.then13:                                        ; preds = %if.end11
  store i32 2, i32* %retval, align 4, !dbg !7991
  br label %return, !dbg !7991

if.end14:                                         ; preds = %if.end11
  %21 = load i64, i64* %readnb, align 8, !dbg !7993
  %cmp15 = icmp slt i64 %21, 0, !dbg !7995
  br i1 %cmp15, label %if.then16, label %if.end23, !dbg !7996

if.then16:                                        ; preds = %if.end14
  %call17 = call i32* @__errno_location() #14, !dbg !7997
  %22 = load i32, i32* %call17, align 4, !dbg !7997
  %cmp18 = icmp eq i32 %22, 11, !dbg !8000
  br i1 %cmp18, label %if.then21, label %lor.lhs.false, !dbg !8001

lor.lhs.false:                                    ; preds = %if.then16
  %call19 = call i32* @__errno_location() #14, !dbg !8002
  %23 = load i32, i32* %call19, align 4, !dbg !8002
  %cmp20 = icmp eq i32 %23, 4, !dbg !8003
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !8004

if.then21:                                        ; preds = %lor.lhs.false, %if.then16
  store i32 0, i32* %retval, align 4, !dbg !8005
  br label %return, !dbg !8005

if.end22:                                         ; preds = %lor.lhs.false
  call void @addreply_noformat(i32 451, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.245, i64 0, i64 0)), !dbg !8007
  store i32 -1, i32* %retval, align 4, !dbg !8008
  br label %return, !dbg !8008

if.end23:                                         ; preds = %if.end14
  %24 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8009
  %25 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8011
  %buf24 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %25, i32 0, i32 0, !dbg !8012
  %26 = load i8*, i8** %buf24, align 8, !dbg !8012
  %27 = load i64, i64* %readnb, align 8, !dbg !8013
  %28 = load i64*, i64** %uploaded.addr, align 8, !dbg !8014
  %call25 = call i32 @ul_dowrite(%struct.ULHandler_* %24, i8* %26, i64 %27, i64* %28), !dbg !8015
  %cmp26 = icmp ne i32 %call25, 0, !dbg !8016
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !8017

if.then27:                                        ; preds = %if.end23
  call void @addreply_noformat(i32 452, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.256, i64 0, i64 0)), !dbg !8018
  store i32 -1, i32* %retval, align 4, !dbg !8020
  br label %return, !dbg !8020

if.end28:                                         ; preds = %if.end23
  %29 = load i64*, i64** %uploaded.addr, align 8, !dbg !8021
  %30 = load i64, i64* %29, align 8, !dbg !8022
  %31 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8023
  %cur_pos = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %31, i32 0, i32 7, !dbg !8024
  %32 = load i64, i64* %cur_pos, align 8, !dbg !8025
  %add = add i64 %32, %30, !dbg !8025
  store i64 %add, i64* %cur_pos, align 8, !dbg !8025
  %33 = load i64*, i64** %uploaded.addr, align 8, !dbg !8026
  %34 = load i64, i64* %33, align 8, !dbg !8027
  %35 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8028
  %total_uploaded29 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %35, i32 0, i32 12, !dbg !8029
  %36 = load i64, i64* %total_uploaded29, align 8, !dbg !8030
  %add30 = add i64 %36, %34, !dbg !8030
  store i64 %add30, i64* %total_uploaded29, align 8, !dbg !8030
  %37 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8031
  %bandwidth = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %37, i32 0, i32 16, !dbg !8033
  %38 = load i64, i64* %bandwidth, align 8, !dbg !8033
  %cmp31 = icmp ugt i64 %38, 0, !dbg !8034
  br i1 %cmp31, label %if.then32, label %if.end72, !dbg !8035

if.then32:                                        ; preds = %if.end28
  %39 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8036
  %40 = load i64*, i64** %uploaded.addr, align 8, !dbg !8038
  %41 = load i64, i64* %40, align 8, !dbg !8039
  %42 = load double, double* %ts_start.addr, align 8, !dbg !8040
  %call33 = call i32 @ulhandler_throttle(%struct.ULHandler_* %39, i64 %41, double %42, double* %required_sleep), !dbg !8041
  %43 = load double, double* %required_sleep, align 8, !dbg !8042
  %cmp34 = fcmp ogt double %43, 0.000000e+00, !dbg !8044
  br i1 %cmp34, label %if.then35, label %if.end71, !dbg !8045

if.then35:                                        ; preds = %if.then32
  br label %repoll, !dbg !8046

repoll:                                           ; preds = %if.end69, %if.then48, %if.then35
  call void @llvm.dbg.label(metadata !8047), !dbg !8049
  %44 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8050
  %pfds_command = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %44, i32 0, i32 20, !dbg !8051
  %revents = getelementptr inbounds %struct.pollfd, %struct.pollfd* %pfds_command, i32 0, i32 2, !dbg !8052
  store i16 0, i16* %revents, align 2, !dbg !8053
  %45 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8054
  %pfds_command36 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %45, i32 0, i32 20, !dbg !8055
  %46 = load double, double* %required_sleep, align 8, !dbg !8056
  %mul = fmul double %46, 1.000000e+03, !dbg !8057
  %conv = fptosi double %mul to i32, !dbg !8056
  %call37 = call i32 @poll(%struct.pollfd* %pfds_command36, i64 1, i32 %conv), !dbg !8058
  store i32 %call37, i32* %pollret, align 4, !dbg !8059
  %47 = load i32, i32* %pollret, align 4, !dbg !8060
  %cmp38 = icmp eq i32 %47, 0, !dbg !8062
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !8063

if.then40:                                        ; preds = %repoll
  store i32 0, i32* %retval, align 4, !dbg !8064
  br label %return, !dbg !8064

if.end41:                                         ; preds = %repoll
  %48 = load i32, i32* %pollret, align 4, !dbg !8066
  %cmp42 = icmp slt i32 %48, 0, !dbg !8068
  br i1 %cmp42, label %if.then44, label %if.end50, !dbg !8069

if.then44:                                        ; preds = %if.end41
  %call45 = call i32* @__errno_location() #14, !dbg !8070
  %49 = load i32, i32* %call45, align 4, !dbg !8070
  %cmp46 = icmp eq i32 %49, 4, !dbg !8073
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !8074

if.then48:                                        ; preds = %if.then44
  br label %repoll, !dbg !8075

if.end49:                                         ; preds = %if.then44
  store i32 -1, i32* %retval, align 4, !dbg !8077
  br label %return, !dbg !8077

if.end50:                                         ; preds = %if.end41
  %50 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8078
  %pfds_command51 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %50, i32 0, i32 20, !dbg !8080
  %revents52 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %pfds_command51, i32 0, i32 2, !dbg !8081
  %51 = load i16, i16* %revents52, align 2, !dbg !8081
  %conv53 = sext i16 %51 to i32, !dbg !8078
  %and = and i32 %conv53, 56, !dbg !8082
  %cmp54 = icmp ne i32 %and, 0, !dbg !8083
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !8084

if.then56:                                        ; preds = %if.end50
  store i32 -1, i32* %retval, align 4, !dbg !8085
  br label %return, !dbg !8085

if.end57:                                         ; preds = %if.end50
  %52 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8087
  %pfds_command58 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %52, i32 0, i32 20, !dbg !8089
  %revents59 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %pfds_command58, i32 0, i32 2, !dbg !8090
  %53 = load i16, i16* %revents59, align 2, !dbg !8090
  %conv60 = sext i16 %53 to i32, !dbg !8087
  %and61 = and i32 %conv60, 3, !dbg !8091
  %cmp62 = icmp ne i32 %and61, 0, !dbg !8092
  br i1 %cmp62, label %if.then64, label %if.end70, !dbg !8093

if.then64:                                        ; preds = %if.end57
  %54 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8094
  %call65 = call i32 @ulhandler_handle_commands(%struct.ULHandler_* %54), !dbg !8096
  store i32 %call65, i32* %ret, align 4, !dbg !8097
  %55 = load i32, i32* %ret, align 4, !dbg !8098
  %cmp66 = icmp ne i32 %55, 0, !dbg !8100
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !8101

if.then68:                                        ; preds = %if.then64
  %56 = load i32, i32* %ret, align 4, !dbg !8102
  store i32 %56, i32* %retval, align 4, !dbg !8104
  br label %return, !dbg !8104

if.end69:                                         ; preds = %if.then64
  br label %repoll, !dbg !8105

if.end70:                                         ; preds = %if.end57
  br label %if.end71, !dbg !8106

if.end71:                                         ; preds = %if.end70, %if.then32
  br label %if.end72, !dbg !8107

if.end72:                                         ; preds = %if.end71, %if.end28
  store i32 0, i32* %retval, align 4, !dbg !8108
  br label %return, !dbg !8108

return:                                           ; preds = %if.end72, %if.then68, %if.then56, %if.end49, %if.then40, %if.then27, %if.end22, %if.then21, %if.then13, %if.then
  %57 = load i32, i32* %retval, align 4, !dbg !8109
  ret i32 %57, !dbg !8109
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @ulhandler_handle_commands(%struct.ULHandler_* %ulhandler) #0 !dbg !8110 {
entry:
  %retval = alloca i32, align 4
  %ulhandler.addr = alloca %struct.ULHandler_*, align 8
  %buf = alloca [100 x i8], align 16
  %bufpnt = alloca i8*, align 8
  %readnb = alloca i64, align 8
  store %struct.ULHandler_* %ulhandler, %struct.ULHandler_** %ulhandler.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ULHandler_** %ulhandler.addr, metadata !8111, metadata !DIExpression()), !dbg !8112
  call void @llvm.dbg.declare(metadata [100 x i8]* %buf, metadata !8113, metadata !DIExpression()), !dbg !8114
  call void @llvm.dbg.declare(metadata i8** %bufpnt, metadata !8115, metadata !DIExpression()), !dbg !8116
  call void @llvm.dbg.declare(metadata i64* %readnb, metadata !8117, metadata !DIExpression()), !dbg !8118
  %0 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8119
  %tls_clientfd = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %0, i32 0, i32 3, !dbg !8121
  %1 = load i8*, i8** %tls_clientfd, align 8, !dbg !8121
  %cmp = icmp ne i8* %1, null, !dbg !8122
  br i1 %cmp, label %if.then, label %if.else, !dbg !8123

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !8124
  unreachable, !dbg !8124

if.else:                                          ; preds = %entry
  %2 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8126
  %clientfd = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %2, i32 0, i32 2, !dbg !8128
  %3 = load i32, i32* %clientfd, align 8, !dbg !8128
  %arraydecay = getelementptr inbounds [100 x i8], [100 x i8]* %buf, i64 0, i64 0, !dbg !8129
  %call = call i64 @read(i32 %3, i8* %arraydecay, i64 99), !dbg !8130
  store i64 %call, i64* %readnb, align 8, !dbg !8131
  br label %if.end

if.end:                                           ; preds = %if.else
  %4 = load i64, i64* %readnb, align 8, !dbg !8132
  %cmp1 = icmp eq i64 %4, 0, !dbg !8134
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !8135

if.then2:                                         ; preds = %if.end
  store i32 -2, i32* %retval, align 4, !dbg !8136
  br label %return, !dbg !8136

if.end3:                                          ; preds = %if.end
  %5 = load i64, i64* %readnb, align 8, !dbg !8138
  %cmp4 = icmp slt i64 %5, 0, !dbg !8140
  br i1 %cmp4, label %if.then5, label %if.end12, !dbg !8141

if.then5:                                         ; preds = %if.end3
  %call6 = call i32* @__errno_location() #14, !dbg !8142
  %6 = load i32, i32* %call6, align 4, !dbg !8142
  %cmp7 = icmp eq i32 %6, 11, !dbg !8145
  br i1 %cmp7, label %if.then10, label %lor.lhs.false, !dbg !8146

lor.lhs.false:                                    ; preds = %if.then5
  %call8 = call i32* @__errno_location() #14, !dbg !8147
  %7 = load i32, i32* %call8, align 4, !dbg !8147
  %cmp9 = icmp eq i32 %7, 4, !dbg !8148
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !8149

if.then10:                                        ; preds = %lor.lhs.false, %if.then5
  store i32 0, i32* %retval, align 4, !dbg !8150
  br label %return, !dbg !8150

if.end11:                                         ; preds = %lor.lhs.false
  store i32 -1, i32* %retval, align 4, !dbg !8152
  br label %return, !dbg !8152

if.end12:                                         ; preds = %if.end3
  %8 = load i64, i64* %readnb, align 8, !dbg !8153
  %arrayidx = getelementptr [100 x i8], [100 x i8]* %buf, i64 0, i64 %8, !dbg !8154
  store i8 0, i8* %arrayidx, align 1, !dbg !8155
  %arraydecay13 = getelementptr inbounds [100 x i8], [100 x i8]* %buf, i64 0, i64 0, !dbg !8156
  %call14 = call i8* @skip_telnet_controls(i8* %arraydecay13), !dbg !8157
  store i8* %call14, i8** %bufpnt, align 8, !dbg !8158
  %arraydecay15 = getelementptr inbounds [100 x i8], [100 x i8]* %buf, i64 0, i64 0, !dbg !8159
  %call16 = call i8* @strchr(i8* %arraydecay15, i32 10) #12, !dbg !8161
  %cmp17 = icmp ne i8* %call16, null, !dbg !8162
  br i1 %cmp17, label %if.then18, label %if.end26, !dbg !8163

if.then18:                                        ; preds = %if.end12
  %9 = load i8*, i8** %bufpnt, align 8, !dbg !8164
  %call19 = call i32 @strncasecmp(i8* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.246, i64 0, i64 0), i64 4) #12, !dbg !8167
  %cmp20 = icmp ne i32 %call19, 0, !dbg !8168
  br i1 %cmp20, label %land.lhs.true, label %if.else24, !dbg !8169

land.lhs.true:                                    ; preds = %if.then18
  %10 = load i8*, i8** %bufpnt, align 8, !dbg !8170
  %call21 = call i32 @strncasecmp(i8* %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.247, i64 0, i64 0), i64 4) #12, !dbg !8171
  %cmp22 = icmp ne i32 %call21, 0, !dbg !8172
  br i1 %cmp22, label %if.then23, label %if.else24, !dbg !8173

if.then23:                                        ; preds = %land.lhs.true
  call void @addreply_noformat(i32 500, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.215, i64 0, i64 0)), !dbg !8174
  call void @doreply(), !dbg !8176
  br label %if.end25, !dbg !8177

if.else24:                                        ; preds = %land.lhs.true, %if.then18
  call void @addreply_noformat(i32 426, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.188, i64 0, i64 0)), !dbg !8178
  call void @doreply(), !dbg !8180
  store i32 1, i32* %retval, align 4, !dbg !8181
  br label %return, !dbg !8181

if.end25:                                         ; preds = %if.then23
  br label %if.end26, !dbg !8182

if.end26:                                         ; preds = %if.end25, %if.end12
  store i32 0, i32* %retval, align 4, !dbg !8183
  br label %return, !dbg !8183

return:                                           ; preds = %if.end26, %if.else24, %if.end11, %if.then10, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !8184
  ret i32 %11, !dbg !8184
}

declare i64 @getrandom(i8*, i64, i32) #9

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @ul_dowrite(%struct.ULHandler_* %ulhandler, i8* %buf_, i64 %size_, i64* %uploaded) #0 !dbg !8185 {
entry:
  %retval = alloca i32, align 4
  %ulhandler.addr = alloca %struct.ULHandler_*, align 8
  %buf_.addr = alloca i8*, align 8
  %size_.addr = alloca i64, align 8
  %uploaded.addr = alloca i64*, align 8
  %size = alloca i64, align 8
  %written = alloca i64, align 8
  %buf = alloca i8*, align 8
  %unasciibuf = alloca i8*, align 8
  %ret = alloca i32, align 4
  %unasciibufpnt = alloca i8*, align 8
  %z = alloca i64, align 8
  store %struct.ULHandler_* %ulhandler, %struct.ULHandler_** %ulhandler.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ULHandler_** %ulhandler.addr, metadata !8188, metadata !DIExpression()), !dbg !8189
  store i8* %buf_, i8** %buf_.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf_.addr, metadata !8190, metadata !DIExpression()), !dbg !8191
  store i64 %size_, i64* %size_.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size_.addr, metadata !8192, metadata !DIExpression()), !dbg !8193
  store i64* %uploaded, i64** %uploaded.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %uploaded.addr, metadata !8194, metadata !DIExpression()), !dbg !8195
  call void @llvm.dbg.declare(metadata i64* %size, metadata !8196, metadata !DIExpression()), !dbg !8197
  %0 = load i64, i64* %size_.addr, align 8, !dbg !8198
  store i64 %0, i64* %size, align 8, !dbg !8197
  call void @llvm.dbg.declare(metadata i64* %written, metadata !8199, metadata !DIExpression()), !dbg !8200
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !8201, metadata !DIExpression()), !dbg !8202
  %1 = load i8*, i8** %buf_.addr, align 8, !dbg !8203
  store i8* %1, i8** %buf, align 8, !dbg !8202
  call void @llvm.dbg.declare(metadata i8** %unasciibuf, metadata !8204, metadata !DIExpression()), !dbg !8205
  store i8* null, i8** %unasciibuf, align 8, !dbg !8205
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8206, metadata !DIExpression()), !dbg !8207
  store i32 0, i32* %ret, align 4, !dbg !8207
  %2 = load i64, i64* %size_.addr, align 8, !dbg !8208
  %cmp = icmp ule i64 %2, 0, !dbg !8210
  br i1 %cmp, label %if.then, label %if.end, !dbg !8211

if.then:                                          ; preds = %entry
  %3 = load i64*, i64** %uploaded.addr, align 8, !dbg !8212
  store i64 0, i64* %3, align 8, !dbg !8214
  store i32 -1, i32* %retval, align 4, !dbg !8215
  br label %return, !dbg !8215

if.end:                                           ; preds = %entry
  %4 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8216
  %ascii_mode = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %4, i32 0, i32 13, !dbg !8218
  %5 = load i32, i32* %ascii_mode, align 8, !dbg !8218
  %cmp1 = icmp sgt i32 %5, 0, !dbg !8219
  br i1 %cmp1, label %if.then2, label %if.end15, !dbg !8220

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %unasciibufpnt, metadata !8221, metadata !DIExpression()), !dbg !8223
  call void @llvm.dbg.declare(metadata i64* %z, metadata !8224, metadata !DIExpression()), !dbg !8225
  store i64 0, i64* %z, align 8, !dbg !8225
  %6 = load i64, i64* %size, align 8, !dbg !8226
  %7 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8228
  %chunk_size = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %7, i32 0, i32 8, !dbg !8229
  %8 = load i64, i64* %chunk_size, align 8, !dbg !8229
  %cmp3 = icmp ugt i64 %6, %8, !dbg !8230
  br i1 %cmp3, label %if.then6, label %lor.lhs.false, !dbg !8231

lor.lhs.false:                                    ; preds = %if.then2
  %9 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8232
  %chunk_size4 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %9, i32 0, i32 8, !dbg !8232
  %10 = load i64, i64* %chunk_size4, align 8, !dbg !8232
  %11 = alloca i8, i64 %10, align 16, !dbg !8232
  store i8* %11, i8** %unasciibuf, align 8, !dbg !8233
  %cmp5 = icmp eq i8* %11, null, !dbg !8234
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !8235

if.then6:                                         ; preds = %lor.lhs.false, %if.then2
  store i32 -1, i32* %retval, align 4, !dbg !8236
  br label %return, !dbg !8236

if.end7:                                          ; preds = %lor.lhs.false
  %12 = load i8*, i8** %unasciibuf, align 8, !dbg !8238
  store i8* %12, i8** %unasciibufpnt, align 8, !dbg !8239
  br label %do.body, !dbg !8240

do.body:                                          ; preds = %do.cond, %if.end7
  %13 = load i8*, i8** %buf_.addr, align 8, !dbg !8241
  %14 = load i64, i64* %z, align 8, !dbg !8244
  %arrayidx = getelementptr i8, i8* %13, i64 %14, !dbg !8241
  %15 = load i8, i8* %arrayidx, align 1, !dbg !8241
  %conv = zext i8 %15 to i32, !dbg !8241
  %cmp8 = icmp ne i32 %conv, 13, !dbg !8245
  br i1 %cmp8, label %if.then10, label %if.end12, !dbg !8246

if.then10:                                        ; preds = %do.body
  %16 = load i8*, i8** %buf_.addr, align 8, !dbg !8247
  %17 = load i64, i64* %z, align 8, !dbg !8249
  %arrayidx11 = getelementptr i8, i8* %16, i64 %17, !dbg !8247
  %18 = load i8, i8* %arrayidx11, align 1, !dbg !8247
  %19 = load i8*, i8** %unasciibufpnt, align 8, !dbg !8250
  %incdec.ptr = getelementptr i8, i8* %19, i32 1, !dbg !8250
  store i8* %incdec.ptr, i8** %unasciibufpnt, align 8, !dbg !8250
  store i8 %18, i8* %19, align 1, !dbg !8251
  br label %if.end12, !dbg !8252

if.end12:                                         ; preds = %if.then10, %do.body
  %20 = load i64, i64* %z, align 8, !dbg !8253
  %inc = add i64 %20, 1, !dbg !8253
  store i64 %inc, i64* %z, align 8, !dbg !8253
  br label %do.cond, !dbg !8254

do.cond:                                          ; preds = %if.end12
  %21 = load i64, i64* %z, align 8, !dbg !8255
  %22 = load i64, i64* %size, align 8, !dbg !8256
  %cmp13 = icmp ult i64 %21, %22, !dbg !8257
  br i1 %cmp13, label %do.body, label %do.end, !dbg !8254, !llvm.loop !8258

do.end:                                           ; preds = %do.cond
  %23 = load i8*, i8** %unasciibuf, align 8, !dbg !8260
  store i8* %23, i8** %buf, align 8, !dbg !8261
  %24 = load i8*, i8** %unasciibufpnt, align 8, !dbg !8262
  %25 = load i8*, i8** %unasciibuf, align 8, !dbg !8263
  %sub.ptr.lhs.cast = ptrtoint i8* %24 to i64, !dbg !8264
  %sub.ptr.rhs.cast = ptrtoint i8* %25 to i64, !dbg !8264
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8264
  store i64 %sub.ptr.sub, i64* %size, align 8, !dbg !8265
  br label %if.end15, !dbg !8266

if.end15:                                         ; preds = %do.end, %if.end
  %26 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8267
  %f = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %26, i32 0, i32 6, !dbg !8268
  %27 = load i32, i32* %f, align 8, !dbg !8268
  %28 = load i8*, i8** %buf, align 8, !dbg !8269
  %29 = load i64, i64* %size, align 8, !dbg !8270
  %call = call i64 @safe_write(i32 %27, i8* %28, i64 %29, i32 -1), !dbg !8271
  store i64 %call, i64* %written, align 8, !dbg !8272
  %30 = load i64, i64* %written, align 8, !dbg !8273
  %31 = load i64, i64* %size, align 8, !dbg !8274
  %cmp16 = icmp ne i64 %30, %31, !dbg !8275
  %conv17 = zext i1 %cmp16 to i32, !dbg !8275
  %sub = sub i32 0, %conv17, !dbg !8276
  store i32 %sub, i32* %ret, align 4, !dbg !8277
  %32 = load i8*, i8** %unasciibuf, align 8, !dbg !8278
  %cmp18 = icmp ne i8* %32, null, !dbg !8280
  br i1 %cmp18, label %if.then20, label %if.end24, !dbg !8281

if.then20:                                        ; preds = %if.end15
  br label %do.body21, !dbg !8282

do.body21:                                        ; preds = %if.then20
  br label %do.end23, !dbg !8284

do.end23:                                         ; preds = %do.body21
  br label %if.end24, !dbg !8286

if.end24:                                         ; preds = %do.end23, %if.end15
  %33 = load i32, i32* %ret, align 4, !dbg !8287
  %cmp25 = icmp slt i32 %33, 0, !dbg !8289
  br i1 %cmp25, label %if.then27, label %if.else, !dbg !8290

if.then27:                                        ; preds = %if.end24
  %34 = load i64*, i64** %uploaded.addr, align 8, !dbg !8291
  store i64 0, i64* %34, align 8, !dbg !8293
  br label %if.end28, !dbg !8294

if.else:                                          ; preds = %if.end24
  %35 = load i64, i64* %size, align 8, !dbg !8295
  %36 = load i64*, i64** %uploaded.addr, align 8, !dbg !8297
  store i64 %35, i64* %36, align 8, !dbg !8298
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.then27
  %37 = load i32, i32* %ret, align 4, !dbg !8299
  store i32 %37, i32* %retval, align 4, !dbg !8300
  br label %return, !dbg !8300

return:                                           ; preds = %if.end28, %if.then6, %if.then
  %38 = load i32, i32* %retval, align 4, !dbg !8301
  ret i32 %38, !dbg !8301
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @ulhandler_throttle(%struct.ULHandler_* %ulhandler, i64 %uploaded, double %ts_start, double* %required_sleep) #0 !dbg !8302 {
entry:
  %retval = alloca i32, align 4
  %ulhandler.addr = alloca %struct.ULHandler_*, align 8
  %uploaded.addr = alloca i64, align 8
  %ts_start.addr = alloca double, align 8
  %required_sleep.addr = alloca double*, align 8
  %ts_now = alloca double, align 8
  %elapsed = alloca double, align 8
  %would_be_uploaded = alloca i64, align 8
  %wanted_ts = alloca double, align 8
  %previous_chunk_size = alloca i64, align 8
  store %struct.ULHandler_* %ulhandler, %struct.ULHandler_** %ulhandler.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ULHandler_** %ulhandler.addr, metadata !8305, metadata !DIExpression()), !dbg !8306
  store i64 %uploaded, i64* %uploaded.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %uploaded.addr, metadata !8307, metadata !DIExpression()), !dbg !8308
  store double %ts_start, double* %ts_start.addr, align 8
  call void @llvm.dbg.declare(metadata double* %ts_start.addr, metadata !8309, metadata !DIExpression()), !dbg !8310
  store double* %required_sleep, double** %required_sleep.addr, align 8
  call void @llvm.dbg.declare(metadata double** %required_sleep.addr, metadata !8311, metadata !DIExpression()), !dbg !8312
  call void @llvm.dbg.declare(metadata double* %ts_now, metadata !8313, metadata !DIExpression()), !dbg !8314
  call void @llvm.dbg.declare(metadata double* %elapsed, metadata !8315, metadata !DIExpression()), !dbg !8316
  call void @llvm.dbg.declare(metadata i64* %would_be_uploaded, metadata !8317, metadata !DIExpression()), !dbg !8318
  call void @llvm.dbg.declare(metadata double* %wanted_ts, metadata !8319, metadata !DIExpression()), !dbg !8320
  call void @llvm.dbg.declare(metadata i64* %previous_chunk_size, metadata !8321, metadata !DIExpression()), !dbg !8322
  %0 = load i64, i64* %uploaded.addr, align 8, !dbg !8323
  %1 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8324
  %bandwidth = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %1, i32 0, i32 16, !dbg !8326
  %2 = load i64, i64* %bandwidth, align 8, !dbg !8326
  %cmp = icmp ule i64 %2, 0, !dbg !8327
  br i1 %cmp, label %if.then, label %if.end, !dbg !8328

if.then:                                          ; preds = %entry
  %3 = load double*, double** %required_sleep.addr, align 8, !dbg !8329
  store double 0.000000e+00, double* %3, align 8, !dbg !8331
  store i32 0, i32* %retval, align 4, !dbg !8332
  br label %return, !dbg !8332

if.end:                                           ; preds = %entry
  %call = call double @get_usec_time(), !dbg !8333
  store double %call, double* %ts_now, align 8, !dbg !8335
  %cmp1 = fcmp ole double %call, 0.000000e+00, !dbg !8336
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !8337

if.then2:                                         ; preds = %if.end
  %4 = load double, double* %ts_start.addr, align 8, !dbg !8338
  store double %4, double* %ts_now, align 8, !dbg !8340
  br label %if.end3, !dbg !8341

if.end3:                                          ; preds = %if.then2, %if.end
  %5 = load double, double* %ts_start.addr, align 8, !dbg !8342
  %6 = load double, double* %ts_now, align 8, !dbg !8344
  %cmp4 = fcmp ogt double %5, %6, !dbg !8345
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !8346

if.then5:                                         ; preds = %if.end3
  %7 = load double, double* %ts_start.addr, align 8, !dbg !8347
  store double %7, double* %ts_now, align 8, !dbg !8349
  br label %if.end6, !dbg !8350

if.end6:                                          ; preds = %if.then5, %if.end3
  %8 = load double, double* %ts_now, align 8, !dbg !8351
  %9 = load double, double* %ts_start.addr, align 8, !dbg !8352
  %sub = fsub double %8, %9, !dbg !8353
  store double %sub, double* %elapsed, align 8, !dbg !8354
  %10 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8355
  %total_uploaded = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %10, i32 0, i32 12, !dbg !8356
  %11 = load i64, i64* %total_uploaded, align 8, !dbg !8356
  %12 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8357
  %chunk_size = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %12, i32 0, i32 8, !dbg !8358
  %13 = load i64, i64* %chunk_size, align 8, !dbg !8358
  %add = add i64 %11, %13, !dbg !8359
  store i64 %add, i64* %would_be_uploaded, align 8, !dbg !8360
  %14 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8361
  %bandwidth7 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %14, i32 0, i32 16, !dbg !8363
  %15 = load i64, i64* %bandwidth7, align 8, !dbg !8363
  %cmp8 = icmp ugt i64 %15, 0, !dbg !8364
  br i1 %cmp8, label %if.then9, label %if.else, !dbg !8365

if.then9:                                         ; preds = %if.end6
  %16 = load i64, i64* %would_be_uploaded, align 8, !dbg !8366
  %conv = sitofp i64 %16 to double, !dbg !8368
  %17 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8369
  %bandwidth10 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %17, i32 0, i32 16, !dbg !8370
  %18 = load i64, i64* %bandwidth10, align 8, !dbg !8370
  %conv11 = uitofp i64 %18 to double, !dbg !8371
  %div = fdiv double %conv, %conv11, !dbg !8372
  store double %div, double* %wanted_ts, align 8, !dbg !8373
  br label %if.end12, !dbg !8374

if.else:                                          ; preds = %if.end6
  %19 = load double, double* %elapsed, align 8, !dbg !8375
  store double %19, double* %wanted_ts, align 8, !dbg !8377
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then9
  %20 = load double, double* %wanted_ts, align 8, !dbg !8378
  %21 = load double, double* %elapsed, align 8, !dbg !8379
  %sub13 = fsub double %20, %21, !dbg !8380
  %22 = load double*, double** %required_sleep.addr, align 8, !dbg !8381
  store double %sub13, double* %22, align 8, !dbg !8382
  %23 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8383
  %chunk_size14 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %23, i32 0, i32 8, !dbg !8384
  %24 = load i64, i64* %chunk_size14, align 8, !dbg !8384
  store i64 %24, i64* %previous_chunk_size, align 8, !dbg !8385
  %25 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8386
  %total_uploaded15 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %25, i32 0, i32 12, !dbg !8388
  %26 = load i64, i64* %total_uploaded15, align 8, !dbg !8388
  %27 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8389
  %chunk_size16 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %27, i32 0, i32 8, !dbg !8390
  %28 = load i64, i64* %chunk_size16, align 8, !dbg !8390
  %cmp17 = icmp sgt i64 %26, %28, !dbg !8391
  br i1 %cmp17, label %if.then19, label %if.end68, !dbg !8392

if.then19:                                        ; preds = %if.end12
  %29 = load double*, double** %required_sleep.addr, align 8, !dbg !8393
  %30 = load double, double* %29, align 8, !dbg !8396
  %31 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8397
  %min_sleep = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %31, i32 0, i32 14, !dbg !8398
  %32 = load double, double* %min_sleep, align 8, !dbg !8398
  %cmp20 = fcmp olt double %30, %32, !dbg !8399
  br i1 %cmp20, label %if.then22, label %if.else27, !dbg !8400

if.then22:                                        ; preds = %if.then19
  %33 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8401
  %max_chunk_size = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %33, i32 0, i32 11, !dbg !8403
  %34 = load i64, i64* %max_chunk_size, align 8, !dbg !8403
  %35 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8404
  %chunk_size23 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %35, i32 0, i32 8, !dbg !8405
  %36 = load i64, i64* %chunk_size23, align 8, !dbg !8405
  %add24 = add i64 %34, %36, !dbg !8406
  %div25 = sdiv i64 %add24, 2, !dbg !8407
  %37 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8408
  %chunk_size26 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %37, i32 0, i32 8, !dbg !8409
  store i64 %div25, i64* %chunk_size26, align 8, !dbg !8410
  br label %if.end38, !dbg !8411

if.else27:                                        ; preds = %if.then19
  %38 = load double*, double** %required_sleep.addr, align 8, !dbg !8412
  %39 = load double, double* %38, align 8, !dbg !8414
  %40 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8415
  %max_sleep = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %40, i32 0, i32 15, !dbg !8416
  %41 = load double, double* %max_sleep, align 8, !dbg !8416
  %cmp28 = fcmp ogt double %39, %41, !dbg !8417
  br i1 %cmp28, label %if.then30, label %if.else35, !dbg !8418

if.then30:                                        ; preds = %if.else27
  %42 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8419
  %min_chunk_size = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %42, i32 0, i32 9, !dbg !8421
  %43 = load i64, i64* %min_chunk_size, align 8, !dbg !8421
  %44 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8422
  %chunk_size31 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %44, i32 0, i32 8, !dbg !8423
  %45 = load i64, i64* %chunk_size31, align 8, !dbg !8423
  %add32 = add i64 %43, %45, !dbg !8424
  %div33 = sdiv i64 %add32, 2, !dbg !8425
  %46 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8426
  %chunk_size34 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %46, i32 0, i32 8, !dbg !8427
  store i64 %div33, i64* %chunk_size34, align 8, !dbg !8428
  br label %if.end37, !dbg !8429

if.else35:                                        ; preds = %if.else27
  %47 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8430
  %default_chunk_size = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %47, i32 0, i32 10, !dbg !8432
  %48 = load i64, i64* %default_chunk_size, align 8, !dbg !8432
  %49 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8433
  %chunk_size36 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %49, i32 0, i32 8, !dbg !8434
  store i64 %48, i64* %chunk_size36, align 8, !dbg !8435
  br label %if.end37

if.end37:                                         ; preds = %if.else35, %if.then30
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then22
  %50 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8436
  %chunk_size39 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %50, i32 0, i32 8, !dbg !8438
  %51 = load i64, i64* %chunk_size39, align 8, !dbg !8438
  %cmp40 = icmp sle i64 %51, 0, !dbg !8439
  br i1 %cmp40, label %if.then45, label %lor.lhs.false, !dbg !8440

lor.lhs.false:                                    ; preds = %if.end38
  %52 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8441
  %chunk_size42 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %52, i32 0, i32 8, !dbg !8442
  %53 = load i64, i64* %chunk_size42, align 8, !dbg !8442
  %54 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8443
  %sizeof_buf = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %54, i32 0, i32 1, !dbg !8444
  %55 = load i64, i64* %sizeof_buf, align 8, !dbg !8444
  %cmp43 = icmp sgt i64 %53, %55, !dbg !8445
  br i1 %cmp43, label %if.then45, label %if.end48, !dbg !8446

if.then45:                                        ; preds = %lor.lhs.false, %if.end38
  %56 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8447
  %default_chunk_size46 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %56, i32 0, i32 10, !dbg !8449
  %57 = load i64, i64* %default_chunk_size46, align 8, !dbg !8449
  %58 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8450
  %chunk_size47 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %58, i32 0, i32 8, !dbg !8451
  store i64 %57, i64* %chunk_size47, align 8, !dbg !8452
  br label %if.end48, !dbg !8453

if.end48:                                         ; preds = %if.then45, %lor.lhs.false
  %59 = load i64, i64* %previous_chunk_size, align 8, !dbg !8454
  %60 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8456
  %default_chunk_size49 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %60, i32 0, i32 10, !dbg !8457
  %61 = load i64, i64* %default_chunk_size49, align 8, !dbg !8457
  %cmp50 = icmp ne i64 %59, %61, !dbg !8458
  br i1 %cmp50, label %if.then52, label %if.end67, !dbg !8459

if.then52:                                        ; preds = %if.end48
  %62 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8460
  %total_uploaded53 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %62, i32 0, i32 12, !dbg !8462
  %63 = load i64, i64* %total_uploaded53, align 8, !dbg !8462
  %64 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8463
  %chunk_size54 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %64, i32 0, i32 8, !dbg !8464
  %65 = load i64, i64* %chunk_size54, align 8, !dbg !8464
  %add55 = add i64 %63, %65, !dbg !8465
  store i64 %add55, i64* %would_be_uploaded, align 8, !dbg !8466
  %66 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8467
  %bandwidth56 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %66, i32 0, i32 16, !dbg !8469
  %67 = load i64, i64* %bandwidth56, align 8, !dbg !8469
  %cmp57 = icmp ugt i64 %67, 0, !dbg !8470
  br i1 %cmp57, label %if.then59, label %if.else64, !dbg !8471

if.then59:                                        ; preds = %if.then52
  %68 = load i64, i64* %would_be_uploaded, align 8, !dbg !8472
  %conv60 = sitofp i64 %68 to double, !dbg !8474
  %69 = load %struct.ULHandler_*, %struct.ULHandler_** %ulhandler.addr, align 8, !dbg !8475
  %bandwidth61 = getelementptr inbounds %struct.ULHandler_, %struct.ULHandler_* %69, i32 0, i32 16, !dbg !8476
  %70 = load i64, i64* %bandwidth61, align 8, !dbg !8476
  %conv62 = uitofp i64 %70 to double, !dbg !8477
  %div63 = fdiv double %conv60, %conv62, !dbg !8478
  store double %div63, double* %wanted_ts, align 8, !dbg !8479
  br label %if.end65, !dbg !8480

if.else64:                                        ; preds = %if.then52
  %71 = load double, double* %elapsed, align 8, !dbg !8481
  store double %71, double* %wanted_ts, align 8, !dbg !8483
  br label %if.end65

if.end65:                                         ; preds = %if.else64, %if.then59
  %72 = load double, double* %wanted_ts, align 8, !dbg !8484
  %73 = load double, double* %elapsed, align 8, !dbg !8485
  %sub66 = fsub double %72, %73, !dbg !8486
  %74 = load double*, double** %required_sleep.addr, align 8, !dbg !8487
  store double %sub66, double* %74, align 8, !dbg !8488
  br label %if.end67, !dbg !8489

if.end67:                                         ; preds = %if.end65, %if.end48
  br label %if.end68, !dbg !8490

if.end68:                                         ; preds = %if.end67, %if.end12
  store i32 0, i32* %retval, align 4, !dbg !8491
  br label %return, !dbg !8491

return:                                           ; preds = %if.end68, %if.then
  %75 = load i32, i32* %retval, align 4, !dbg !8492
  ret i32 %75, !dbg !8492
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @domdtm(i8* %name) #0 !dbg !8493 {
entry:
  %name.addr = alloca i8*, align 8
  %st = alloca %struct.stat, align 8
  %t = alloca %struct.tm*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8494, metadata !DIExpression()), !dbg !8495
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !8496, metadata !DIExpression()), !dbg !8497
  call void @llvm.dbg.declare(metadata %struct.tm** %t, metadata !8498, metadata !DIExpression()), !dbg !8499
  %0 = load i8*, i8** %name.addr, align 8, !dbg !8500
  %tobool = icmp ne i8* %0, null, !dbg !8500
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !8502

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %name.addr, align 8, !dbg !8503
  %2 = load i8, i8* %1, align 1, !dbg !8504
  %tobool1 = icmp ne i8 %2, 0, !dbg !8504
  br i1 %tobool1, label %if.else, label %if.then, !dbg !8505

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @addreply_noformat(i32 501, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.190, i64 0, i64 0)), !dbg !8506
  br label %if.end14, !dbg !8508

if.else:                                          ; preds = %lor.lhs.false
  %3 = load i8*, i8** %name.addr, align 8, !dbg !8509
  %call = call i32 @stat(i8* %3, %struct.stat* %st) #7, !dbg !8511
  %tobool2 = icmp ne i32 %call, 0, !dbg !8511
  br i1 %tobool2, label %if.then3, label %if.else4, !dbg !8512

if.then3:                                         ; preds = %if.else
  call void @addreply_noformat(i32 550, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.91, i64 0, i64 0)), !dbg !8513
  br label %if.end13, !dbg !8515

if.else4:                                         ; preds = %if.else
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !8516
  %4 = load i32, i32* %st_mode, align 8, !dbg !8516
  %and = and i32 %4, 61440, !dbg !8516
  %cmp = icmp eq i32 %and, 32768, !dbg !8516
  br i1 %cmp, label %if.else6, label %if.then5, !dbg !8518

if.then5:                                         ; preds = %if.else4
  call void @addreply_noformat(i32 550, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.163, i64 0, i64 0)), !dbg !8519
  br label %if.end12, !dbg !8521

if.else6:                                         ; preds = %if.else4
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 12, !dbg !8522
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim, i32 0, i32 0, !dbg !8522
  %call7 = call %struct.tm* @gmtime(i64* %tv_sec) #7, !dbg !8524
  store %struct.tm* %call7, %struct.tm** %t, align 8, !dbg !8525
  %5 = load %struct.tm*, %struct.tm** %t, align 8, !dbg !8526
  %tobool8 = icmp ne %struct.tm* %5, null, !dbg !8526
  br i1 %tobool8, label %if.else10, label %if.then9, !dbg !8528

if.then9:                                         ; preds = %if.else6
  call void @addreply_noformat(i32 451, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.191, i64 0, i64 0)), !dbg !8529
  br label %if.end, !dbg !8531

if.else10:                                        ; preds = %if.else6
  %6 = load %struct.tm*, %struct.tm** %t, align 8, !dbg !8532
  %tm_year = getelementptr inbounds %struct.tm, %struct.tm* %6, i32 0, i32 5, !dbg !8534
  %7 = load i32, i32* %tm_year, align 4, !dbg !8534
  %add = add i32 %7, 1900, !dbg !8535
  %8 = load %struct.tm*, %struct.tm** %t, align 8, !dbg !8536
  %tm_mon = getelementptr inbounds %struct.tm, %struct.tm* %8, i32 0, i32 4, !dbg !8537
  %9 = load i32, i32* %tm_mon, align 8, !dbg !8537
  %add11 = add i32 %9, 1, !dbg !8538
  %10 = load %struct.tm*, %struct.tm** %t, align 8, !dbg !8539
  %tm_mday = getelementptr inbounds %struct.tm, %struct.tm* %10, i32 0, i32 3, !dbg !8540
  %11 = load i32, i32* %tm_mday, align 4, !dbg !8540
  %12 = load %struct.tm*, %struct.tm** %t, align 8, !dbg !8541
  %tm_hour = getelementptr inbounds %struct.tm, %struct.tm* %12, i32 0, i32 2, !dbg !8542
  %13 = load i32, i32* %tm_hour, align 8, !dbg !8542
  %14 = load %struct.tm*, %struct.tm** %t, align 8, !dbg !8543
  %tm_min = getelementptr inbounds %struct.tm, %struct.tm* %14, i32 0, i32 1, !dbg !8544
  %15 = load i32, i32* %tm_min, align 4, !dbg !8544
  %16 = load %struct.tm*, %struct.tm** %t, align 8, !dbg !8545
  %tm_sec = getelementptr inbounds %struct.tm, %struct.tm* %16, i32 0, i32 0, !dbg !8546
  %17 = load i32, i32* %tm_sec, align 8, !dbg !8546
  call void (i32, i8*, ...) @addreply(i32 213, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.192, i64 0, i64 0), i32 %add, i32 %add11, i32 %11, i32 %13, i32 %15, i32 %17), !dbg !8547
  br label %if.end

if.end:                                           ; preds = %if.else10, %if.then9
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then5
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.then3
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %if.then
  ret void, !dbg !8548
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @dosize(i8* %name) #0 !dbg !8549 {
entry:
  %name.addr = alloca i8*, align 8
  %st = alloca %struct.stat, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8550, metadata !DIExpression()), !dbg !8551
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !8552, metadata !DIExpression()), !dbg !8553
  %0 = load i8*, i8** %name.addr, align 8, !dbg !8554
  %tobool = icmp ne i8* %0, null, !dbg !8554
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !8556

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %name.addr, align 8, !dbg !8557
  %2 = load i8, i8* %1, align 1, !dbg !8558
  %tobool1 = icmp ne i8 %2, 0, !dbg !8558
  br i1 %tobool1, label %if.else, label %if.then, !dbg !8559

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @addreply_noformat(i32 501, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.190, i64 0, i64 0)), !dbg !8560
  br label %if.end8, !dbg !8562

if.else:                                          ; preds = %lor.lhs.false
  %3 = load i8*, i8** %name.addr, align 8, !dbg !8563
  %call = call i32 @stat(i8* %3, %struct.stat* %st) #7, !dbg !8565
  %tobool2 = icmp ne i32 %call, 0, !dbg !8565
  br i1 %tobool2, label %if.then3, label %if.else4, !dbg !8566

if.then3:                                         ; preds = %if.else
  call void @addreply_noformat(i32 550, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.91, i64 0, i64 0)), !dbg !8567
  br label %if.end7, !dbg !8569

if.else4:                                         ; preds = %if.else
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !8570
  %4 = load i32, i32* %st_mode, align 8, !dbg !8570
  %and = and i32 %4, 61440, !dbg !8570
  %cmp = icmp eq i32 %and, 32768, !dbg !8570
  br i1 %cmp, label %if.else6, label %if.then5, !dbg !8572

if.then5:                                         ; preds = %if.else4
  call void @addreply_noformat(i32 550, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.163, i64 0, i64 0)), !dbg !8573
  br label %if.end, !dbg !8575

if.else6:                                         ; preds = %if.else4
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 8, !dbg !8576
  %5 = load i64, i64* %st_size, align 8, !dbg !8576
  call void (i32, i8*, ...) @addreply(i32 213, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.193, i64 0, i64 0), i64 %5), !dbg !8578
  br label %if.end

if.end:                                           ; preds = %if.else6, %if.then5
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then3
  br label %if.end8

if.end8:                                          ; preds = %if.end7, %if.then
  ret void, !dbg !8579
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @dotype(i8* %arg) #0 !dbg !8580 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8581, metadata !DIExpression()), !dbg !8582
  store i32 200, i32* @replycode, align 4, !dbg !8583
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !8584
  %tobool = icmp ne i8* %0, null, !dbg !8584
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !8586

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !8587
  %2 = load i8, i8* %1, align 1, !dbg !8588
  %tobool1 = icmp ne i8 %2, 0, !dbg !8588
  br i1 %tobool1, label %if.else, label %if.then, !dbg !8589

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void (i32, i8*, ...) @addreply(i32 501, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.194, i64 0, i64 0)), !dbg !8590
  br label %if.end34, !dbg !8592

if.else:                                          ; preds = %lor.lhs.false
  %3 = load i8*, i8** %arg.addr, align 8, !dbg !8593
  %4 = load i8, i8* %3, align 1, !dbg !8595
  %conv = zext i8 %4 to i32, !dbg !8596
  %call = call i32 @tolower(i32 %conv) #12, !dbg !8597
  %cmp = icmp eq i32 %call, 97, !dbg !8598
  br i1 %cmp, label %if.then3, label %if.else4, !dbg !8599

if.then3:                                         ; preds = %if.else
  store i8 1, i8* @type, align 1, !dbg !8600
  br label %if.end33, !dbg !8601

if.else4:                                         ; preds = %if.else
  %5 = load i8*, i8** %arg.addr, align 8, !dbg !8602
  %6 = load i8, i8* %5, align 1, !dbg !8604
  %conv5 = zext i8 %6 to i32, !dbg !8605
  %call6 = call i32 @tolower(i32 %conv5) #12, !dbg !8606
  %cmp7 = icmp eq i32 %call6, 105, !dbg !8607
  br i1 %cmp7, label %if.then9, label %if.else10, !dbg !8608

if.then9:                                         ; preds = %if.else4
  store i8 2, i8* @type, align 1, !dbg !8609
  br label %if.end32, !dbg !8610

if.else10:                                        ; preds = %if.else4
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !8611
  %8 = load i8, i8* %7, align 1, !dbg !8613
  %conv11 = zext i8 %8 to i32, !dbg !8614
  %call12 = call i32 @tolower(i32 %conv11) #12, !dbg !8615
  %cmp13 = icmp eq i32 %call12, 108, !dbg !8616
  br i1 %cmp13, label %if.then15, label %if.else30, !dbg !8617

if.then15:                                        ; preds = %if.else10
  %9 = load i8*, i8** %arg.addr, align 8, !dbg !8618
  %arrayidx = getelementptr i8, i8* %9, i64 1, !dbg !8618
  %10 = load i8, i8* %arrayidx, align 1, !dbg !8618
  %conv16 = sext i8 %10 to i32, !dbg !8618
  %cmp17 = icmp eq i32 %conv16, 56, !dbg !8621
  br i1 %cmp17, label %if.then19, label %if.else20, !dbg !8622

if.then19:                                        ; preds = %if.then15
  store i8 2, i8* @type, align 1, !dbg !8623
  br label %if.end29, !dbg !8625

if.else20:                                        ; preds = %if.then15
  %call21 = call i16** @__ctype_b_loc() #14, !dbg !8626
  %11 = load i16*, i16** %call21, align 8, !dbg !8626
  %12 = load i8*, i8** %arg.addr, align 8, !dbg !8626
  %arrayidx22 = getelementptr i8, i8* %12, i64 1, !dbg !8626
  %13 = load i8, i8* %arrayidx22, align 1, !dbg !8626
  %conv23 = zext i8 %13 to i32, !dbg !8626
  %idxprom = sext i32 %conv23 to i64, !dbg !8626
  %arrayidx24 = getelementptr i16, i16* %11, i64 %idxprom, !dbg !8626
  %14 = load i16, i16* %arrayidx24, align 2, !dbg !8626
  %conv25 = zext i16 %14 to i32, !dbg !8626
  %and = and i32 %conv25, 2048, !dbg !8626
  %tobool26 = icmp ne i32 %and, 0, !dbg !8626
  br i1 %tobool26, label %if.then27, label %if.else28, !dbg !8628

if.then27:                                        ; preds = %if.else20
  call void @addreply_noformat(i32 504, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.195, i64 0, i64 0)), !dbg !8629
  br label %if.end, !dbg !8631

if.else28:                                        ; preds = %if.else20
  call void @addreply_noformat(i32 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.190, i64 0, i64 0)), !dbg !8632
  store i8 2, i8* @type, align 1, !dbg !8634
  br label %if.end

if.end:                                           ; preds = %if.else28, %if.then27
  br label %if.end29

if.end29:                                         ; preds = %if.end, %if.then19
  br label %if.end31, !dbg !8635

if.else30:                                        ; preds = %if.else10
  %15 = load i8*, i8** %arg.addr, align 8, !dbg !8636
  call void (i32, i8*, ...) @addreply(i32 504, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.196, i64 0, i64 0), i8* %15), !dbg !8638
  br label %if.end31

if.end31:                                         ; preds = %if.else30, %if.end29
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.then9
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.then3
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then
  %16 = load i8, i8* @type, align 1, !dbg !8639
  %conv35 = sext i8 %16 to i32, !dbg !8639
  %cmp36 = icmp sgt i32 %conv35, 1, !dbg !8640
  %17 = zext i1 %cmp36 to i64, !dbg !8641
  %cond = select i1 %cmp36, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.198, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.199, i64 0, i64 0), !dbg !8641
  call void (i32, i8*, ...) @addreply(i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.197, i64 0, i64 0), i8* %cond), !dbg !8642
  ret void, !dbg !8643
}

; Function Attrs: nounwind readonly
declare i32 @tolower(i32) #5

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @dostru(i8* %arg) #0 !dbg !8644 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8645, metadata !DIExpression()), !dbg !8646
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !8647
  %cmp = icmp eq i8* %0, null, !dbg !8649
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8650

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !8651
  %2 = load i8, i8* %1, align 1, !dbg !8652
  %tobool = icmp ne i8 %2, 0, !dbg !8652
  br i1 %tobool, label %if.else, label %if.then, !dbg !8653

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @addreply_noformat(i32 501, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.190, i64 0, i64 0)), !dbg !8654
  br label %if.end4, !dbg !8656

if.else:                                          ; preds = %lor.lhs.false
  %3 = load i8*, i8** %arg.addr, align 8, !dbg !8657
  %call = call i32 @strcasecmp(i8* %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.200, i64 0, i64 0)) #12, !dbg !8659
  %tobool1 = icmp ne i32 %call, 0, !dbg !8659
  br i1 %tobool1, label %if.then2, label %if.else3, !dbg !8660

if.then2:                                         ; preds = %if.else
  call void @addreply_noformat(i32 504, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.201, i64 0, i64 0)), !dbg !8661
  br label %if.end, !dbg !8663

if.else3:                                         ; preds = %if.else
  call void @addreply_noformat(i32 200, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.202, i64 0, i64 0)), !dbg !8664
  br label %if.end

if.end:                                           ; preds = %if.else3, %if.then2
  br label %if.end4

if.end4:                                          ; preds = %if.end, %if.then
  ret void, !dbg !8666
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @domode(i8* %arg) #0 !dbg !8667 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8668, metadata !DIExpression()), !dbg !8669
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !8670
  %cmp = icmp eq i8* %0, null, !dbg !8672
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8673

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !8674
  %2 = load i8, i8* %1, align 1, !dbg !8675
  %tobool = icmp ne i8 %2, 0, !dbg !8675
  br i1 %tobool, label %if.else, label %if.then, !dbg !8676

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @addreply_noformat(i32 501, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.190, i64 0, i64 0)), !dbg !8677
  br label %if.end4, !dbg !8679

if.else:                                          ; preds = %lor.lhs.false
  %3 = load i8*, i8** %arg.addr, align 8, !dbg !8680
  %call = call i32 @strcasecmp(i8* %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.203, i64 0, i64 0)) #12, !dbg !8682
  %tobool1 = icmp ne i32 %call, 0, !dbg !8682
  br i1 %tobool1, label %if.then2, label %if.else3, !dbg !8683

if.then2:                                         ; preds = %if.else
  call void @addreply_noformat(i32 504, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.204, i64 0, i64 0)), !dbg !8684
  br label %if.end, !dbg !8686

if.else3:                                         ; preds = %if.else
  call void @addreply_noformat(i32 200, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.205, i64 0, i64 0)), !dbg !8687
  br label %if.end

if.end:                                           ; preds = %if.else3, %if.then2
  br label %if.end4

if.end4:                                          ; preds = %if.end, %if.then
  ret void, !dbg !8689
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @dornfr(i8* %name) #0 !dbg !8690 {
entry:
  %name.addr = alloca i8*, align 8
  %st = alloca %struct.stat, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8691, metadata !DIExpression()), !dbg !8692
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !8693, metadata !DIExpression()), !dbg !8694
  %0 = load i8, i8* @guest, align 1, !dbg !8695
  %conv = sext i8 %0 to i32, !dbg !8695
  %cmp = icmp ne i32 %conv, 0, !dbg !8697
  br i1 %cmp, label %if.then, label %if.end, !dbg !8698

if.then:                                          ; preds = %entry
  call void @addreply_noformat(i32 550, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.206, i64 0, i64 0)), !dbg !8699
  br label %if.end25, !dbg !8701

if.end:                                           ; preds = %entry
  %1 = load i8, i8* @disallow_rename, align 1, !dbg !8702
  %conv2 = sext i8 %1 to i32, !dbg !8702
  %cmp3 = icmp ne i32 %conv2, 0, !dbg !8704
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !8705

if.then5:                                         ; preds = %if.end
  call void @addreply_noformat(i32 550, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.182, i64 0, i64 0)), !dbg !8706
  br label %if.end25, !dbg !8708

if.end6:                                          ; preds = %if.end
  %2 = load i8*, i8** %name.addr, align 8, !dbg !8709
  %3 = load i8, i8* @dot_write_ok, align 1, !dbg !8711
  %conv7 = sext i8 %3 to i32, !dbg !8711
  %call = call i32 @checknamesanity(i8* %2, i32 %conv7), !dbg !8712
  %cmp8 = icmp ne i32 %call, 0, !dbg !8713
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !8714

if.then10:                                        ; preds = %if.end6
  %4 = load i8*, i8** %name.addr, align 8, !dbg !8715
  call void (i32, i8*, ...) @addreply(i32 553, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.125, i64 0, i64 0), i8* %4), !dbg !8717
  br label %if.end25, !dbg !8718

if.end11:                                         ; preds = %if.end6
  %5 = load i8*, i8** %name.addr, align 8, !dbg !8719
  %call12 = call i32 @lstat(i8* %5, %struct.stat* %st) #7, !dbg !8721
  %cmp13 = icmp eq i32 %call12, 0, !dbg !8722
  br i1 %cmp13, label %if.then15, label %if.else, !dbg !8723

if.then15:                                        ; preds = %if.end11
  %6 = load i8*, i8** @renamefrom, align 8, !dbg !8724
  %cmp16 = icmp ne i8* %6, null, !dbg !8727
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !8728

if.then18:                                        ; preds = %if.then15
  call void @addreply_noformat(i32 0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.207, i64 0, i64 0)), !dbg !8729
  %7 = load i8*, i8** @renamefrom, align 8, !dbg !8731
  call void @free(i8* %7) #7, !dbg !8732
  br label %if.end19, !dbg !8733

if.end19:                                         ; preds = %if.then18, %if.then15
  %8 = load i8*, i8** %name.addr, align 8, !dbg !8734
  %call20 = call noalias i8* @strdup(i8* %8) #7, !dbg !8736
  store i8* %call20, i8** @renamefrom, align 8, !dbg !8737
  %cmp21 = icmp eq i8* %call20, null, !dbg !8738
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !8739

if.then23:                                        ; preds = %if.end19
  call void @die_mem() #11, !dbg !8740
  unreachable, !dbg !8740

if.end24:                                         ; preds = %if.end19
  call void @addreply_noformat(i32 350, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.208, i64 0, i64 0)), !dbg !8742
  br label %if.end25, !dbg !8743

if.else:                                          ; preds = %if.end11
  call void @addreply_noformat(i32 550, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.209, i64 0, i64 0)), !dbg !8744
  br label %if.end25

if.end25:                                         ; preds = %if.then, %if.then5, %if.then10, %if.else, %if.end24
  ret void, !dbg !8746
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @dornto(i8* %name) #0 !dbg !8747 {
entry:
  %name.addr = alloca i8*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8748, metadata !DIExpression()), !dbg !8749
  %0 = load i8, i8* @guest, align 1, !dbg !8750
  %conv = sext i8 %0 to i32, !dbg !8750
  %cmp = icmp ne i32 %conv, 0, !dbg !8752
  br i1 %cmp, label %if.then, label %if.end, !dbg !8753

if.then:                                          ; preds = %entry
  call void @addreply_noformat(i32 550, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.206, i64 0, i64 0)), !dbg !8754
  br label %bye, !dbg !8756

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** @renamefrom, align 8, !dbg !8757
  %cmp2 = icmp eq i8* %1, null, !dbg !8759
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !8760

if.then4:                                         ; preds = %if.end
  call void @addreply_noformat(i32 503, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.210, i64 0, i64 0)), !dbg !8761
  br label %bye, !dbg !8763

if.end5:                                          ; preds = %if.end
  %2 = load i8*, i8** %name.addr, align 8, !dbg !8764
  %3 = load i8, i8* @dot_write_ok, align 1, !dbg !8766
  %conv6 = sext i8 %3 to i32, !dbg !8766
  %call = call i32 @checknamesanity(i8* %2, i32 %conv6), !dbg !8767
  %cmp7 = icmp ne i32 %call, 0, !dbg !8768
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !8769

if.then9:                                         ; preds = %if.end5
  %4 = load i8*, i8** %name.addr, align 8, !dbg !8770
  call void (i32, i8*, ...) @addreply(i32 553, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.125, i64 0, i64 0), i8* %4), !dbg !8772
  br label %return, !dbg !8773

if.end10:                                         ; preds = %if.end5
  %5 = load i8*, i8** @renamefrom, align 8, !dbg !8774
  %6 = load i8*, i8** %name.addr, align 8, !dbg !8776
  %call11 = call i32 @rename(i8* %5, i8* %6) #7, !dbg !8777
  %cmp12 = icmp slt i32 %call11, 0, !dbg !8778
  br i1 %cmp12, label %if.then14, label %if.else, !dbg !8779

if.then14:                                        ; preds = %if.end10
  call void @error(i32 451, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.182, i64 0, i64 0)), !dbg !8780
  br label %if.end15, !dbg !8782

if.else:                                          ; preds = %if.end10
  call void @addreply_noformat(i32 250, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.211, i64 0, i64 0)), !dbg !8783
  %7 = load i8*, i8** @renamefrom, align 8, !dbg !8785
  %8 = load i8*, i8** %name.addr, align 8, !dbg !8786
  call void (i32, i8*, ...) @logfile(i32 5, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.212, i64 0, i64 0), i8* %7, i8* %8), !dbg !8787
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then14
  br label %bye, !dbg !8788

bye:                                              ; preds = %if.end15, %if.then4, %if.then
  call void @llvm.dbg.label(metadata !8789), !dbg !8790
  %9 = load i8*, i8** @renamefrom, align 8, !dbg !8791
  call void @free(i8* %9) #7, !dbg !8792
  store i8* null, i8** @renamefrom, align 8, !dbg !8793
  br label %return, !dbg !8794

return:                                           ; preds = %bye, %if.then9
  ret void, !dbg !8794
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @doopts(i8* %args) #0 !dbg !8795 {
entry:
  %args.addr = alloca i8*, align 8
  %cmdopts = alloca i8*, align 8
  store i8* %args, i8** %args.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %args.addr, metadata !8796, metadata !DIExpression()), !dbg !8797
  call void @llvm.dbg.declare(metadata i8** %cmdopts, metadata !8798, metadata !DIExpression()), !dbg !8799
  %0 = load i8*, i8** %args.addr, align 8, !dbg !8800
  %call = call i8* @strchr(i8* %0, i32 32) #12, !dbg !8802
  store i8* %call, i8** %cmdopts, align 8, !dbg !8803
  %cmp = icmp ne i8* %call, null, !dbg !8804
  br i1 %cmp, label %if.then, label %if.end, !dbg !8805

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %cmdopts, align 8, !dbg !8806
  %incdec.ptr = getelementptr i8, i8* %1, i32 1, !dbg !8806
  store i8* %incdec.ptr, i8** %cmdopts, align 8, !dbg !8806
  %2 = load i8*, i8** %cmdopts, align 8, !dbg !8808
  br label %if.end, !dbg !8809

if.end:                                           ; preds = %if.then, %entry
  %3 = load i8*, i8** %args.addr, align 8, !dbg !8810
  %call1 = call i32 @strncasecmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.213, i64 0, i64 0), i8* %3, i64 5) #12, !dbg !8812
  %cmp2 = icmp eq i32 %call1, 0, !dbg !8813
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !8814

if.then3:                                         ; preds = %if.end
  call void @addreply_noformat(i32 200, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.214, i64 0, i64 0)), !dbg !8815
  br label %return, !dbg !8817

if.end4:                                          ; preds = %if.end
  call void @addreply_noformat(i32 504, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.215, i64 0, i64 0)), !dbg !8818
  br label %return, !dbg !8819

return:                                           ; preds = %if.end4, %if.then3
  ret void, !dbg !8819
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local i32 @pureftpd_start(i32 %argc, i8** %argv, i8* %home_directory_) #0 !dbg !490 {
entry:
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %home_directory_.addr = alloca i8*, align 8
  %option_index = alloca i32, align 4
  %fodder = alloca i32, align 4
  %bypass_ipv6 = alloca i32, align 4
  %pw = alloca %struct.passwd*, align 8
  %struck = alloca i8*, align 8
  %nptr = alloca i8*, align 8
  %endptr = alloca i8*, align 8
  %nptr95 = alloca i8*, align 8
  %endptr96 = alloca i8*, align 8
  %nptr113 = alloca i8*, align 8
  %endptr114 = alloca i8*, align 8
  %n = alloca i32, align 4
  %auth_list_pnt = alloca %struct.Authentication_*, align 8
  %opt = alloca i8*, align 8
  %new_auth = alloca %struct.Authentications_*, align 8
  %auth_name_len = alloca i64, align 8
  %file = alloca i8*, align 8
  %nptr204 = alloca i8*, align 8
  %endptr205 = alloca i8*, align 8
  %ret = alloca i32, align 4
  %ret238 = alloca i32, align 4
  %nptr271 = alloca i8*, align 8
  %endptr272 = alloca i8*, align 8
  %nptr281 = alloca i8*, align 8
  %endptr282 = alloca i8*, align 8
  %nptr292 = alloca i8*, align 8
  %endptr293 = alloca i8*, align 8
  %tmp = alloca i64, align 8
  %optarg_copy = alloca i8*, align 8
  %struck310 = alloca i8*, align 8
  %tr_umask = alloca i8*, align 8
  %tr_umask_d = alloca i8*, align 8
  %options = alloca %struct.option*, align 8
  %portmax = alloca i32, align 4
  %auth_scan = alloca %struct.Authentications_*, align 8
  %previous = alloca %struct.Authentications_*, align 8
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !8820, metadata !DIExpression()), !dbg !8821
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !8822, metadata !DIExpression()), !dbg !8823
  store i8* %home_directory_, i8** %home_directory_.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %home_directory_.addr, metadata !8824, metadata !DIExpression()), !dbg !8825
  call void @llvm.dbg.declare(metadata i32* %option_index, metadata !8826, metadata !DIExpression()), !dbg !8827
  store i32 0, i32* %option_index, align 4, !dbg !8827
  call void @llvm.dbg.declare(metadata i32* %fodder, metadata !8828, metadata !DIExpression()), !dbg !8829
  call void @llvm.dbg.declare(metadata i32* %bypass_ipv6, metadata !8830, metadata !DIExpression()), !dbg !8831
  store i32 0, i32* %bypass_ipv6, align 4, !dbg !8831
  call void @llvm.dbg.declare(metadata %struct.passwd** %pw, metadata !8832, metadata !DIExpression()), !dbg !8833
  %0 = load i8*, i8** %home_directory_.addr, align 8, !dbg !8834
  call void @client_init_reply_buf(), !dbg !8835
  %call = call i32 @getpagesize() #14, !dbg !8836
  %conv = sext i32 %call to i64, !dbg !8837
  store i64 %conv, i64* @page_size, align 8, !dbg !8838
  %call1 = call i8* @setlocale(i32 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.217, i64 0, i64 0)) #7, !dbg !8839
  %call2 = call i8* @setlocale(i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.218, i64 0, i64 0)) #7, !dbg !8840
  %call3 = call i8* @setlocale(i32 3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.218, i64 0, i64 0)) #7, !dbg !8841
  %call4 = call i32 @init_tz(), !dbg !8842
  %call5 = call i8* @strerror(i32 2) #7, !dbg !8843
  %1 = load i32, i32* @log_pid, align 4, !dbg !8844
  %or = or i32 8, %1, !dbg !8845
  call void @openlog(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.219, i64 0, i64 0), i32 %or, i32 88), !dbg !8846
  call void @set_signals(), !dbg !8847
  store i8 0, i8* @loggedin, align 1, !dbg !8848
  %2 = load i32, i32* %argc.addr, align 4, !dbg !8849
  %dec = add i32 %2, -1, !dbg !8849
  store i32 %dec, i32* %argc.addr, align 4, !dbg !8849
  %3 = load i32, i32* %argc.addr, align 4, !dbg !8850
  %cmp = icmp eq i32 %3, 2, !dbg !8852
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !8853

land.lhs.true:                                    ; preds = %entry
  %4 = load i8**, i8*** %argv.addr, align 8, !dbg !8854
  %arrayidx = getelementptr i8*, i8** %4, i64 1, !dbg !8854
  %5 = load i8*, i8** %arrayidx, align 8, !dbg !8854
  %6 = load i8, i8* %5, align 1, !dbg !8855
  %conv7 = sext i8 %6 to i32, !dbg !8855
  %cmp8 = icmp ne i32 %conv7, 45, !dbg !8856
  br i1 %cmp8, label %land.lhs.true10, label %if.end, !dbg !8857

land.lhs.true10:                                  ; preds = %land.lhs.true
  %7 = load i8**, i8*** %argv.addr, align 8, !dbg !8858
  %arrayidx11 = getelementptr i8*, i8** %7, i64 1, !dbg !8858
  %8 = load i8*, i8** %arrayidx11, align 8, !dbg !8858
  %9 = load i8**, i8*** %argv.addr, align 8, !dbg !8859
  %arrayidx12 = getelementptr i8*, i8** %9, i64 0, !dbg !8859
  %10 = load i8*, i8** %arrayidx12, align 8, !dbg !8859
  %call13 = call i32 @sc_build_command_line_from_file(i8* %8, %struct.SimpleConfConfig_* null, %struct.SimpleConfEntry_* getelementptr inbounds ([65 x %struct.SimpleConfEntry_], [65 x %struct.SimpleConfEntry_]* @simpleconf_options, i64 0, i64 0), i64 65, i8* %10, i32* %argc.addr, i8*** %argv.addr), !dbg !8860
  %cmp14 = icmp ne i32 %call13, 0, !dbg !8861
  br i1 %cmp14, label %if.then, label %if.end, !dbg !8862

if.then:                                          ; preds = %land.lhs.true10
  call void (i32, i32, i8*, ...) @die(i32 421, i32 3, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.220, i64 0, i64 0)) #11, !dbg !8863
  unreachable, !dbg !8863

if.end:                                           ; preds = %land.lhs.true10, %land.lhs.true, %entry
  br label %while.cond, !dbg !8865

while.cond:                                       ; preds = %sw.epilog, %if.end
  %11 = load i32, i32* %argc.addr, align 4, !dbg !8866
  %12 = load i8**, i8*** %argv.addr, align 8, !dbg !8867
  %13 = load i8*, i8** @GETOPT_OPTIONS, align 8, !dbg !8868
  %call16 = call i32 @getopt_long(i32 %11, i8** %12, i8* %13, %struct.option* getelementptr inbounds ([47 x %struct.option], [47 x %struct.option]* @long_options, i64 0, i64 0), i32* %option_index) #7, !dbg !8869
  store i32 %call16, i32* %fodder, align 4, !dbg !8870
  %cmp17 = icmp ne i32 %call16, -1, !dbg !8871
  br i1 %cmp17, label %while.body, label %while.end383, !dbg !8865

while.body:                                       ; preds = %while.cond
  %14 = load i32, i32* %fodder, align 4, !dbg !8872
  switch i32 %14, label %sw.default [
    i32 115, label %sw.bb
    i32 48, label %sw.bb27
    i32 52, label %sw.bb28
    i32 54, label %sw.bb29
    i32 49, label %sw.bb30
    i32 83, label %sw.bb31
    i32 68, label %sw.bb67
    i32 97, label %sw.bb68
    i32 120, label %sw.bb80
    i32 88, label %sw.bb81
    i32 122, label %sw.bb82
    i32 90, label %sw.bb83
    i32 65, label %sw.bb84
    i32 119, label %sw.bb85
    i32 87, label %sw.bb86
    i32 100, label %sw.bb87
    i32 98, label %sw.bb93
    i32 99, label %sw.bb94
    i32 66, label %sw.bb111
    i32 67, label %sw.bb112
    i32 101, label %sw.bb129
    i32 69, label %sw.bb130
    i32 102, label %sw.bb131
    i32 108, label %sw.bb157
    i32 109, label %sw.bb203
    i32 77, label %sw.bb220
    i32 78, label %sw.bb221
    i32 112, label %sw.bb222
    i32 76, label %sw.bb237
    i32 80, label %sw.bb250
    i32 114, label %sw.bb259
    i32 82, label %sw.bb260
    i32 75, label %sw.bb261
    i32 103, label %sw.bb262
    i32 71, label %sw.bb268
    i32 72, label %sw.bb269
    i32 73, label %sw.bb270
    i32 105, label %sw.bb278
    i32 106, label %sw.bb279
    i32 107, label %sw.bb280
    i32 117, label %sw.bb291
    i32 85, label %sw.bb309
    i32 104, label %sw.bb369
  ], !dbg !8874

sw.bb:                                            ; preds = %while.body
  %call19 = call %struct.passwd* @getpwnam(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i64 0, i64 0)), !dbg !8875
  store %struct.passwd* %call19, %struct.passwd** %pw, align 8, !dbg !8879
  %cmp20 = icmp ne %struct.passwd* %call19, null, !dbg !8880
  br i1 %cmp20, label %if.then25, label %lor.lhs.false, !dbg !8881

lor.lhs.false:                                    ; preds = %sw.bb
  %call22 = call %struct.passwd* @getpwnam(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.105, i64 0, i64 0)), !dbg !8882
  store %struct.passwd* %call22, %struct.passwd** %pw, align 8, !dbg !8883
  %cmp23 = icmp ne %struct.passwd* %call22, null, !dbg !8884
  br i1 %cmp23, label %if.then25, label %if.else, !dbg !8885

if.then25:                                        ; preds = %lor.lhs.false, %sw.bb
  %15 = load %struct.passwd*, %struct.passwd** %pw, align 8, !dbg !8886
  %pw_uid = getelementptr inbounds %struct.passwd, %struct.passwd* %15, i32 0, i32 2, !dbg !8888
  %16 = load i32, i32* %pw_uid, align 8, !dbg !8888
  store i32 %16, i32* @warez, align 4, !dbg !8889
  br label %if.end26, !dbg !8890

if.else:                                          ; preds = %lor.lhs.false
  call void (i32, i8*, ...) @logfile(i32 3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.221, i64 0, i64 0)), !dbg !8891
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.then25
  br label %sw.epilog, !dbg !8893

sw.bb27:                                          ; preds = %while.body
  store i8 1, i8* @no_truncate, align 1, !dbg !8894
  br label %sw.epilog, !dbg !8896

sw.bb28:                                          ; preds = %while.body
  store i32 1, i32* %bypass_ipv6, align 4, !dbg !8897
  br label %sw.epilog, !dbg !8899

sw.bb29:                                          ; preds = %while.body
  store i8 1, i8* @no_ipv4, align 1, !dbg !8900
  br label %sw.epilog, !dbg !8902

sw.bb30:                                          ; preds = %while.body
  store i32 1, i32* @log_pid, align 4, !dbg !8903
  br label %sw.epilog, !dbg !8905

sw.bb31:                                          ; preds = %while.body
  call void @llvm.dbg.declare(metadata i8** %struck, metadata !8906, metadata !DIExpression()), !dbg !8908
  %17 = load i8*, i8** @optarg, align 8, !dbg !8909
  %call32 = call i8* @strchr(i8* %17, i32 44) #12, !dbg !8911
  store i8* %call32, i8** %struck, align 8, !dbg !8912
  %cmp33 = icmp ne i8* %call32, null, !dbg !8913
  br i1 %cmp33, label %if.then35, label %if.else60, !dbg !8914

if.then35:                                        ; preds = %sw.bb31
  %18 = load i8*, i8** %struck, align 8, !dbg !8915
  store i8 0, i8* %18, align 1, !dbg !8917
  %19 = load i8*, i8** @optarg, align 8, !dbg !8918
  %20 = load i8, i8* %19, align 1, !dbg !8920
  %conv36 = sext i8 %20 to i32, !dbg !8920
  %cmp37 = icmp ne i32 %conv36, 0, !dbg !8921
  br i1 %cmp37, label %if.then39, label %if.end48, !dbg !8922

if.then39:                                        ; preds = %if.then35
  %21 = load i8*, i8** @standalone_ip, align 8, !dbg !8923
  %cmp40 = icmp eq i8* %21, null, !dbg !8926
  br i1 %cmp40, label %land.lhs.true42, label %if.end47, !dbg !8927

land.lhs.true42:                                  ; preds = %if.then39
  %22 = load i8*, i8** @optarg, align 8, !dbg !8928
  %call43 = call noalias i8* @strdup(i8* %22) #7, !dbg !8929
  store i8* %call43, i8** @standalone_ip, align 8, !dbg !8930
  %cmp44 = icmp eq i8* %call43, null, !dbg !8931
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !8932

if.then46:                                        ; preds = %land.lhs.true42
  call void @die_mem() #11, !dbg !8933
  unreachable, !dbg !8933

if.end47:                                         ; preds = %land.lhs.true42, %if.then39
  br label %if.end48, !dbg !8935

if.end48:                                         ; preds = %if.end47, %if.then35
  %23 = load i8*, i8** %struck, align 8, !dbg !8936
  store i8 44, i8* %23, align 1, !dbg !8937
  %24 = load i8*, i8** %struck, align 8, !dbg !8938
  %arrayidx49 = getelementptr i8, i8* %24, i64 1, !dbg !8938
  %25 = load i8, i8* %arrayidx49, align 1, !dbg !8938
  %conv50 = sext i8 %25 to i32, !dbg !8938
  %cmp51 = icmp ne i32 %conv50, 0, !dbg !8940
  br i1 %cmp51, label %if.then53, label %if.end59, !dbg !8941

if.then53:                                        ; preds = %if.end48
  %26 = load i8*, i8** %struck, align 8, !dbg !8942
  %add.ptr = getelementptr i8, i8* %26, i64 1, !dbg !8945
  %call54 = call noalias i8* @strdup(i8* %add.ptr) #7, !dbg !8946
  store i8* %call54, i8** @standalone_port, align 8, !dbg !8947
  %cmp55 = icmp eq i8* %call54, null, !dbg !8948
  br i1 %cmp55, label %if.then57, label %if.end58, !dbg !8949

if.then57:                                        ; preds = %if.then53
  call void @die_mem() #11, !dbg !8950
  unreachable, !dbg !8950

if.end58:                                         ; preds = %if.then53
  br label %if.end59, !dbg !8952

if.end59:                                         ; preds = %if.end58, %if.end48
  br label %if.end66, !dbg !8953

if.else60:                                        ; preds = %sw.bb31
  %27 = load i8*, i8** @optarg, align 8, !dbg !8954
  %call61 = call noalias i8* @strdup(i8* %27) #7, !dbg !8957
  store i8* %call61, i8** @standalone_port, align 8, !dbg !8958
  %cmp62 = icmp eq i8* %call61, null, !dbg !8959
  br i1 %cmp62, label %if.then64, label %if.end65, !dbg !8960

if.then64:                                        ; preds = %if.else60
  call void @die_mem() #11, !dbg !8961
  unreachable, !dbg !8961

if.end65:                                         ; preds = %if.else60
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.end59
  br label %sw.epilog, !dbg !8963

sw.bb67:                                          ; preds = %while.body
  store i8 1, i8* @force_ls_a, align 1, !dbg !8964
  br label %sw.epilog, !dbg !8966

sw.bb68:                                          ; preds = %while.body
  call void @llvm.dbg.declare(metadata i8** %nptr, metadata !8967, metadata !DIExpression()), !dbg !8969
  call void @llvm.dbg.declare(metadata i8** %endptr, metadata !8970, metadata !DIExpression()), !dbg !8971
  %28 = load i8*, i8** @optarg, align 8, !dbg !8972
  store i8* %28, i8** %nptr, align 8, !dbg !8973
  store i8* null, i8** %endptr, align 8, !dbg !8974
  %29 = load i8*, i8** %nptr, align 8, !dbg !8975
  %call69 = call i64 @strtoul(i8* %29, i8** %endptr, i32 0) #7, !dbg !8976
  %conv70 = trunc i64 %call69 to i32, !dbg !8976
  store i32 %conv70, i32* @chroot_trustedgid, align 4, !dbg !8977
  %30 = load i8*, i8** %nptr, align 8, !dbg !8978
  %tobool = icmp ne i8* %30, null, !dbg !8978
  br i1 %tobool, label %lor.lhs.false71, label %if.then78, !dbg !8980

lor.lhs.false71:                                  ; preds = %sw.bb68
  %31 = load i8*, i8** %nptr, align 8, !dbg !8981
  %32 = load i8, i8* %31, align 1, !dbg !8982
  %tobool72 = icmp ne i8 %32, 0, !dbg !8982
  br i1 %tobool72, label %lor.lhs.false73, label %if.then78, !dbg !8983

lor.lhs.false73:                                  ; preds = %lor.lhs.false71
  %33 = load i8*, i8** %endptr, align 8, !dbg !8984
  %tobool74 = icmp ne i8* %33, null, !dbg !8984
  br i1 %tobool74, label %lor.lhs.false75, label %if.then78, !dbg !8985

lor.lhs.false75:                                  ; preds = %lor.lhs.false73
  %34 = load i8*, i8** %endptr, align 8, !dbg !8986
  %35 = load i8, i8* %34, align 1, !dbg !8987
  %conv76 = sext i8 %35 to i32, !dbg !8987
  %tobool77 = icmp ne i32 %conv76, 0, !dbg !8987
  br i1 %tobool77, label %if.then78, label %if.end79, !dbg !8988

if.then78:                                        ; preds = %lor.lhs.false75, %lor.lhs.false73, %lor.lhs.false71, %sw.bb68
  %36 = load i8*, i8** @optarg, align 8, !dbg !8989
  call void (i32, i32, i8*, ...) @die(i32 421, i32 3, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.222, i64 0, i64 0), i8* %36) #11, !dbg !8991
  unreachable, !dbg !8991

if.end79:                                         ; preds = %lor.lhs.false75
  store i8 1, i8* @userchroot, align 1, !dbg !8992
  br label %sw.epilog, !dbg !8993

sw.bb80:                                          ; preds = %while.body
  store i8 0, i8* @dot_write_ok, align 1, !dbg !8994
  br label %sw.epilog, !dbg !8996

sw.bb81:                                          ; preds = %while.body
  store i8 0, i8* @dot_read_ok, align 1, !dbg !8997
  store i8 0, i8* @dot_write_ok, align 1, !dbg !8999
  br label %sw.epilog, !dbg !9000

sw.bb82:                                          ; preds = %while.body
  store i8 1, i8* @dot_read_anon_ok, align 1, !dbg !9001
  br label %sw.epilog, !dbg !9003

sw.bb83:                                          ; preds = %while.body
  store i8 1, i8* @be_customer_proof, align 1, !dbg !9004
  br label %sw.epilog, !dbg !9006

sw.bb84:                                          ; preds = %while.body
  store i8 2, i8* @userchroot, align 1, !dbg !9007
  br label %sw.epilog, !dbg !9009

sw.bb85:                                          ; preds = %while.body
  store i8 1, i8* @allowfxp, align 1, !dbg !9010
  br label %sw.epilog, !dbg !9012

sw.bb86:                                          ; preds = %while.body
  store i8 2, i8* @allowfxp, align 1, !dbg !9013
  br label %sw.epilog, !dbg !9015

sw.bb87:                                          ; preds = %while.body
  %37 = load volatile i8, i8* @logging, align 1, !dbg !9016
  %conv88 = sext i8 %37 to i32, !dbg !9016
  %cmp89 = icmp slt i32 %conv88, 2, !dbg !9019
  br i1 %cmp89, label %if.then91, label %if.end92, !dbg !9020

if.then91:                                        ; preds = %sw.bb87
  %38 = load volatile i8, i8* @logging, align 1, !dbg !9021
  %inc = add i8 %38, 1, !dbg !9021
  store volatile i8 %inc, i8* @logging, align 1, !dbg !9021
  br label %if.end92, !dbg !9023

if.end92:                                         ; preds = %if.then91, %sw.bb87
  br label %sw.epilog, !dbg !9024

sw.bb93:                                          ; preds = %while.body
  store i8 1, i8* @broken_client_compat, align 1, !dbg !9025
  br label %sw.epilog, !dbg !9027

sw.bb94:                                          ; preds = %while.body
  call void @llvm.dbg.declare(metadata i8** %nptr95, metadata !9028, metadata !DIExpression()), !dbg !9030
  call void @llvm.dbg.declare(metadata i8** %endptr96, metadata !9031, metadata !DIExpression()), !dbg !9032
  %39 = load i8*, i8** @optarg, align 8, !dbg !9033
  store i8* %39, i8** %nptr95, align 8, !dbg !9034
  store i8* null, i8** %endptr96, align 8, !dbg !9035
  %40 = load i8*, i8** %nptr95, align 8, !dbg !9036
  %call97 = call i64 @strtoul(i8* %40, i8** %endptr96, i32 0) #7, !dbg !9037
  %conv98 = trunc i64 %call97 to i32, !dbg !9038
  store i32 %conv98, i32* @maxusers, align 4, !dbg !9039
  %41 = load i8*, i8** %nptr95, align 8, !dbg !9040
  %tobool99 = icmp ne i8* %41, null, !dbg !9040
  br i1 %tobool99, label %lor.lhs.false100, label %if.then109, !dbg !9042

lor.lhs.false100:                                 ; preds = %sw.bb94
  %42 = load i8*, i8** %nptr95, align 8, !dbg !9043
  %43 = load i8, i8* %42, align 1, !dbg !9044
  %tobool101 = icmp ne i8 %43, 0, !dbg !9044
  br i1 %tobool101, label %lor.lhs.false102, label %if.then109, !dbg !9045

lor.lhs.false102:                                 ; preds = %lor.lhs.false100
  %44 = load i8*, i8** %endptr96, align 8, !dbg !9046
  %tobool103 = icmp ne i8* %44, null, !dbg !9046
  br i1 %tobool103, label %lor.lhs.false104, label %if.then109, !dbg !9047

lor.lhs.false104:                                 ; preds = %lor.lhs.false102
  %45 = load i8*, i8** %endptr96, align 8, !dbg !9048
  %46 = load i8, i8* %45, align 1, !dbg !9049
  %conv105 = sext i8 %46 to i32, !dbg !9049
  %tobool106 = icmp ne i32 %conv105, 0, !dbg !9049
  br i1 %tobool106, label %if.then109, label %lor.lhs.false107, !dbg !9050

lor.lhs.false107:                                 ; preds = %lor.lhs.false104
  %47 = load i32, i32* @maxusers, align 4, !dbg !9051
  %tobool108 = icmp ne i32 %47, 0, !dbg !9051
  br i1 %tobool108, label %if.end110, label %if.then109, !dbg !9052

if.then109:                                       ; preds = %lor.lhs.false107, %lor.lhs.false104, %lor.lhs.false102, %lor.lhs.false100, %sw.bb94
  %48 = load i8*, i8** @optarg, align 8, !dbg !9053
  call void (i32, i32, i8*, ...) @die(i32 421, i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.223, i64 0, i64 0), i8* %48) #11, !dbg !9055
  unreachable, !dbg !9055

if.end110:                                        ; preds = %lor.lhs.false107
  br label %sw.epilog, !dbg !9056

sw.bb111:                                         ; preds = %while.body
  store i8 1, i8* @daemonize, align 1, !dbg !9057
  br label %sw.epilog, !dbg !9059

sw.bb112:                                         ; preds = %while.body
  call void @llvm.dbg.declare(metadata i8** %nptr113, metadata !9060, metadata !DIExpression()), !dbg !9062
  call void @llvm.dbg.declare(metadata i8** %endptr114, metadata !9063, metadata !DIExpression()), !dbg !9064
  %49 = load i8*, i8** @optarg, align 8, !dbg !9065
  store i8* %49, i8** %nptr113, align 8, !dbg !9066
  store i8* null, i8** %endptr114, align 8, !dbg !9067
  %50 = load i8*, i8** %nptr113, align 8, !dbg !9068
  %call115 = call i64 @strtoul(i8* %50, i8** %endptr114, i32 0) #7, !dbg !9069
  %conv116 = trunc i64 %call115 to i32, !dbg !9070
  store i32 %conv116, i32* @maxip, align 4, !dbg !9071
  %51 = load i8*, i8** %nptr113, align 8, !dbg !9072
  %tobool117 = icmp ne i8* %51, null, !dbg !9072
  br i1 %tobool117, label %lor.lhs.false118, label %if.then127, !dbg !9074

lor.lhs.false118:                                 ; preds = %sw.bb112
  %52 = load i8*, i8** %nptr113, align 8, !dbg !9075
  %53 = load i8, i8* %52, align 1, !dbg !9076
  %tobool119 = icmp ne i8 %53, 0, !dbg !9076
  br i1 %tobool119, label %lor.lhs.false120, label %if.then127, !dbg !9077

lor.lhs.false120:                                 ; preds = %lor.lhs.false118
  %54 = load i8*, i8** %endptr114, align 8, !dbg !9078
  %tobool121 = icmp ne i8* %54, null, !dbg !9078
  br i1 %tobool121, label %lor.lhs.false122, label %if.then127, !dbg !9079

lor.lhs.false122:                                 ; preds = %lor.lhs.false120
  %55 = load i8*, i8** %endptr114, align 8, !dbg !9080
  %56 = load i8, i8* %55, align 1, !dbg !9081
  %conv123 = sext i8 %56 to i32, !dbg !9081
  %tobool124 = icmp ne i32 %conv123, 0, !dbg !9081
  br i1 %tobool124, label %if.then127, label %lor.lhs.false125, !dbg !9082

lor.lhs.false125:                                 ; preds = %lor.lhs.false122
  %57 = load i32, i32* @maxip, align 4, !dbg !9083
  %tobool126 = icmp ne i32 %57, 0, !dbg !9083
  br i1 %tobool126, label %if.end128, label %if.then127, !dbg !9084

if.then127:                                       ; preds = %lor.lhs.false125, %lor.lhs.false122, %lor.lhs.false120, %lor.lhs.false118, %sw.bb112
  %58 = load i8*, i8** @optarg, align 8, !dbg !9085
  call void (i32, i32, i8*, ...) @die(i32 421, i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.223, i64 0, i64 0), i8* %58) #11, !dbg !9087
  unreachable, !dbg !9087

if.end128:                                        ; preds = %lor.lhs.false125
  br label %sw.epilog, !dbg !9088

sw.bb129:                                         ; preds = %while.body
  store i8 1, i8* @anon_only, align 1, !dbg !9089
  br label %sw.epilog, !dbg !9091

sw.bb130:                                         ; preds = %while.body
  store i8 -1, i8* @anon_only, align 1, !dbg !9092
  br label %sw.epilog, !dbg !9094

sw.bb131:                                         ; preds = %while.body
  call void @llvm.dbg.declare(metadata i32* %n, metadata !9095, metadata !DIExpression()), !dbg !9097
  store i32 0, i32* %n, align 4, !dbg !9097
  %59 = load i8*, i8** @optarg, align 8, !dbg !9098
  %call132 = call i32 @strcasecmp(i8* %59, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0)) #12, !dbg !9100
  %cmp133 = icmp eq i32 %call132, 0, !dbg !9101
  br i1 %cmp133, label %if.then135, label %if.end136, !dbg !9102

if.then135:                                       ; preds = %sw.bb131
  store i8 1, i8* @no_syslog, align 1, !dbg !9103
  br label %sw.epilog, !dbg !9105

if.end136:                                        ; preds = %sw.bb131
  br label %while.cond137, !dbg !9106

while.cond137:                                    ; preds = %while.body146, %if.end136
  %60 = load i32, i32* %n, align 4, !dbg !9107
  %idxprom = sext i32 %60 to i64, !dbg !9108
  %arrayidx138 = getelementptr [23 x %struct._code], [23 x %struct._code]* @facilitynames, i64 0, i64 %idxprom, !dbg !9108
  %c_name = getelementptr inbounds %struct._code, %struct._code* %arrayidx138, i32 0, i32 0, !dbg !9109
  %61 = load i8*, i8** %c_name, align 16, !dbg !9109
  %tobool139 = icmp ne i8* %61, null, !dbg !9108
  br i1 %tobool139, label %land.rhs, label %land.end, !dbg !9110

land.rhs:                                         ; preds = %while.cond137
  %62 = load i32, i32* %n, align 4, !dbg !9111
  %idxprom140 = sext i32 %62 to i64, !dbg !9112
  %arrayidx141 = getelementptr [23 x %struct._code], [23 x %struct._code]* @facilitynames, i64 0, i64 %idxprom140, !dbg !9112
  %c_name142 = getelementptr inbounds %struct._code, %struct._code* %arrayidx141, i32 0, i32 0, !dbg !9113
  %63 = load i8*, i8** %c_name142, align 16, !dbg !9113
  %64 = load i8*, i8** @optarg, align 8, !dbg !9114
  %call143 = call i32 @strcasecmp(i8* %63, i8* %64) #12, !dbg !9115
  %cmp144 = icmp ne i32 %call143, 0, !dbg !9116
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond137
  %65 = phi i1 [ false, %while.cond137 ], [ %cmp144, %land.rhs ], !dbg !9117
  br i1 %65, label %while.body146, label %while.end, !dbg !9106

while.body146:                                    ; preds = %land.end
  %66 = load i32, i32* %n, align 4, !dbg !9118
  %inc147 = add i32 %66, 1, !dbg !9118
  store i32 %inc147, i32* %n, align 4, !dbg !9118
  br label %while.cond137, !dbg !9106, !llvm.loop !9120

while.end:                                        ; preds = %land.end
  %67 = load i32, i32* %n, align 4, !dbg !9122
  %idxprom148 = sext i32 %67 to i64, !dbg !9124
  %arrayidx149 = getelementptr [23 x %struct._code], [23 x %struct._code]* @facilitynames, i64 0, i64 %idxprom148, !dbg !9124
  %c_name150 = getelementptr inbounds %struct._code, %struct._code* %arrayidx149, i32 0, i32 0, !dbg !9125
  %68 = load i8*, i8** %c_name150, align 16, !dbg !9125
  %tobool151 = icmp ne i8* %68, null, !dbg !9124
  br i1 %tobool151, label %if.then152, label %if.else155, !dbg !9126

if.then152:                                       ; preds = %while.end
  %69 = load i32, i32* %n, align 4, !dbg !9127
  %idxprom153 = sext i32 %69 to i64, !dbg !9129
  %arrayidx154 = getelementptr [23 x %struct._code], [23 x %struct._code]* @facilitynames, i64 0, i64 %idxprom153, !dbg !9129
  %c_val = getelementptr inbounds %struct._code, %struct._code* %arrayidx154, i32 0, i32 1, !dbg !9130
  %70 = load i32, i32* %c_val, align 8, !dbg !9130
  store i32 %70, i32* @syslog_facility, align 4, !dbg !9131
  br label %if.end156, !dbg !9132

if.else155:                                       ; preds = %while.end
  %71 = load i8*, i8** @optarg, align 8, !dbg !9133
  call void (i32, i8*, ...) @logfile(i32 3, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.224, i64 0, i64 0), i8* %71), !dbg !9135
  br label %if.end156

if.end156:                                        ; preds = %if.else155, %if.then152
  br label %sw.epilog, !dbg !9136

sw.bb157:                                         ; preds = %while.body
  call void @llvm.dbg.declare(metadata %struct.Authentication_** %auth_list_pnt, metadata !9137, metadata !DIExpression()), !dbg !9139
  store %struct.Authentication_* getelementptr inbounds ([2 x %struct.Authentication_], [2 x %struct.Authentication_]* @auth_list, i64 0, i64 0), %struct.Authentication_** %auth_list_pnt, align 8, !dbg !9139
  call void @llvm.dbg.declare(metadata i8** %opt, metadata !9140, metadata !DIExpression()), !dbg !9141
  %72 = load i8*, i8** @optarg, align 8, !dbg !9142
  store i8* %72, i8** %opt, align 8, !dbg !9141
  call void @llvm.dbg.declare(metadata %struct.Authentications_** %new_auth, metadata !9143, metadata !DIExpression()), !dbg !9144
  call void @llvm.dbg.declare(metadata i64* %auth_name_len, metadata !9145, metadata !DIExpression()), !dbg !9146
  br label %for.cond, !dbg !9147

for.cond:                                         ; preds = %if.end202, %sw.bb157
  %73 = load %struct.Authentication_*, %struct.Authentication_** %auth_list_pnt, align 8, !dbg !9148
  %name = getelementptr inbounds %struct.Authentication_, %struct.Authentication_* %73, i32 0, i32 0, !dbg !9152
  %74 = load i8*, i8** %name, align 8, !dbg !9152
  %call158 = call i64 @strlen(i8* %74) #12, !dbg !9153
  store i64 %call158, i64* %auth_name_len, align 8, !dbg !9154
  %75 = load i8*, i8** %opt, align 8, !dbg !9155
  %76 = load %struct.Authentication_*, %struct.Authentication_** %auth_list_pnt, align 8, !dbg !9157
  %name159 = getelementptr inbounds %struct.Authentication_, %struct.Authentication_* %76, i32 0, i32 0, !dbg !9158
  %77 = load i8*, i8** %name159, align 8, !dbg !9158
  %78 = load i64, i64* %auth_name_len, align 8, !dbg !9159
  %call160 = call i32 @strncasecmp(i8* %75, i8* %77, i64 %78) #12, !dbg !9160
  %cmp161 = icmp eq i32 %call160, 0, !dbg !9161
  br i1 %cmp161, label %if.then163, label %if.end196, !dbg !9162

if.then163:                                       ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %file, metadata !9163, metadata !DIExpression()), !dbg !9165
  store i8* null, i8** %file, align 8, !dbg !9165
  %79 = load i64, i64* %auth_name_len, align 8, !dbg !9166
  %80 = load i8*, i8** %opt, align 8, !dbg !9167
  %add.ptr164 = getelementptr i8, i8* %80, i64 %79, !dbg !9167
  store i8* %add.ptr164, i8** %opt, align 8, !dbg !9167
  %81 = load i8*, i8** %opt, align 8, !dbg !9168
  %82 = load i8, i8* %81, align 1, !dbg !9170
  %conv165 = sext i8 %82 to i32, !dbg !9170
  %cmp166 = icmp eq i32 %conv165, 58, !dbg !9171
  br i1 %cmp166, label %if.then168, label %if.end179, !dbg !9172

if.then168:                                       ; preds = %if.then163
  %83 = load i8*, i8** %opt, align 8, !dbg !9173
  %incdec.ptr = getelementptr i8, i8* %83, i32 1, !dbg !9173
  store i8* %incdec.ptr, i8** %opt, align 8, !dbg !9173
  %84 = load i8*, i8** %opt, align 8, !dbg !9175
  %85 = load i8, i8* %84, align 1, !dbg !9177
  %conv169 = sext i8 %85 to i32, !dbg !9177
  %cmp170 = icmp ne i32 %conv169, 0, !dbg !9178
  br i1 %cmp170, label %if.then172, label %if.end178, !dbg !9179

if.then172:                                       ; preds = %if.then168
  %86 = load i8*, i8** %opt, align 8, !dbg !9180
  %call173 = call noalias i8* @strdup(i8* %86) #7, !dbg !9183
  store i8* %call173, i8** %file, align 8, !dbg !9184
  %cmp174 = icmp eq i8* %call173, null, !dbg !9185
  br i1 %cmp174, label %if.then176, label %if.end177, !dbg !9186

if.then176:                                       ; preds = %if.then172
  call void @die_mem() #11, !dbg !9187
  unreachable, !dbg !9187

if.end177:                                        ; preds = %if.then172
  br label %if.end178, !dbg !9189

if.end178:                                        ; preds = %if.end177, %if.then168
  br label %if.end179, !dbg !9190

if.end179:                                        ; preds = %if.end178, %if.then163
  %87 = load %struct.Authentication_*, %struct.Authentication_** %auth_list_pnt, align 8, !dbg !9191
  %parse = getelementptr inbounds %struct.Authentication_, %struct.Authentication_* %87, i32 0, i32 1, !dbg !9193
  %88 = load void (i8*)*, void (i8*)** %parse, align 8, !dbg !9193
  %cmp180 = icmp ne void (i8*)* %88, null, !dbg !9194
  br i1 %cmp180, label %if.then182, label %if.end184, !dbg !9195

if.then182:                                       ; preds = %if.end179
  %89 = load %struct.Authentication_*, %struct.Authentication_** %auth_list_pnt, align 8, !dbg !9196
  %parse183 = getelementptr inbounds %struct.Authentication_, %struct.Authentication_* %89, i32 0, i32 1, !dbg !9198
  %90 = load void (i8*)*, void (i8*)** %parse183, align 8, !dbg !9198
  %91 = load i8*, i8** %file, align 8, !dbg !9199
  call void %90(i8* %91), !dbg !9196
  br label %if.end184, !dbg !9200

if.end184:                                        ; preds = %if.then182, %if.end179
  %call185 = call noalias i8* @malloc(i64 24) #7, !dbg !9201
  %92 = bitcast i8* %call185 to %struct.Authentications_*, !dbg !9201
  store %struct.Authentications_* %92, %struct.Authentications_** %new_auth, align 8, !dbg !9203
  %cmp186 = icmp eq %struct.Authentications_* %92, null, !dbg !9204
  br i1 %cmp186, label %if.then188, label %if.end189, !dbg !9205

if.then188:                                       ; preds = %if.end184
  call void @die_mem() #11, !dbg !9206
  unreachable, !dbg !9206

if.end189:                                        ; preds = %if.end184
  %93 = load %struct.Authentication_*, %struct.Authentication_** %auth_list_pnt, align 8, !dbg !9208
  %94 = load %struct.Authentications_*, %struct.Authentications_** %new_auth, align 8, !dbg !9209
  %auth = getelementptr inbounds %struct.Authentications_, %struct.Authentications_* %94, i32 0, i32 0, !dbg !9210
  store %struct.Authentication_* %93, %struct.Authentication_** %auth, align 8, !dbg !9211
  %95 = load i8*, i8** %file, align 8, !dbg !9212
  %96 = load %struct.Authentications_*, %struct.Authentications_** %new_auth, align 8, !dbg !9213
  %conf_file = getelementptr inbounds %struct.Authentications_, %struct.Authentications_* %96, i32 0, i32 1, !dbg !9214
  store i8* %95, i8** %conf_file, align 8, !dbg !9215
  %97 = load %struct.Authentications_*, %struct.Authentications_** %new_auth, align 8, !dbg !9216
  %next = getelementptr inbounds %struct.Authentications_, %struct.Authentications_* %97, i32 0, i32 2, !dbg !9217
  store %struct.Authentications_* null, %struct.Authentications_** %next, align 8, !dbg !9218
  %98 = load %struct.Authentications_*, %struct.Authentications_** @last_authentications, align 8, !dbg !9219
  %cmp190 = icmp eq %struct.Authentications_* %98, null, !dbg !9221
  br i1 %cmp190, label %if.then192, label %if.else193, !dbg !9222

if.then192:                                       ; preds = %if.end189
  %99 = load %struct.Authentications_*, %struct.Authentications_** %new_auth, align 8, !dbg !9223
  store %struct.Authentications_* %99, %struct.Authentications_** @first_authentications, align 8, !dbg !9225
  br label %if.end195, !dbg !9226

if.else193:                                       ; preds = %if.end189
  %100 = load %struct.Authentications_*, %struct.Authentications_** %new_auth, align 8, !dbg !9227
  %101 = load %struct.Authentications_*, %struct.Authentications_** @last_authentications, align 8, !dbg !9229
  %next194 = getelementptr inbounds %struct.Authentications_, %struct.Authentications_* %101, i32 0, i32 2, !dbg !9230
  store %struct.Authentications_* %100, %struct.Authentications_** %next194, align 8, !dbg !9231
  br label %if.end195

if.end195:                                        ; preds = %if.else193, %if.then192
  %102 = load %struct.Authentications_*, %struct.Authentications_** %new_auth, align 8, !dbg !9232
  store %struct.Authentications_* %102, %struct.Authentications_** @last_authentications, align 8, !dbg !9233
  br label %for.end, !dbg !9234

if.end196:                                        ; preds = %for.cond
  %103 = load %struct.Authentication_*, %struct.Authentication_** %auth_list_pnt, align 8, !dbg !9235
  %incdec.ptr197 = getelementptr %struct.Authentication_, %struct.Authentication_* %103, i32 1, !dbg !9235
  store %struct.Authentication_* %incdec.ptr197, %struct.Authentication_** %auth_list_pnt, align 8, !dbg !9235
  %104 = load %struct.Authentication_*, %struct.Authentication_** %auth_list_pnt, align 8, !dbg !9236
  %name198 = getelementptr inbounds %struct.Authentication_, %struct.Authentication_* %104, i32 0, i32 0, !dbg !9238
  %105 = load i8*, i8** %name198, align 8, !dbg !9238
  %cmp199 = icmp eq i8* %105, null, !dbg !9239
  br i1 %cmp199, label %if.then201, label %if.end202, !dbg !9240

if.then201:                                       ; preds = %if.end196
  %106 = load i8*, i8** %opt, align 8, !dbg !9241
  call void (i32, i32, i8*, ...) @die(i32 421, i32 3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.225, i64 0, i64 0), i8* %106) #11, !dbg !9243
  unreachable, !dbg !9243

if.end202:                                        ; preds = %if.end196
  br label %for.cond, !dbg !9244, !llvm.loop !9245

for.end:                                          ; preds = %if.end195
  br label %sw.epilog, !dbg !9248

sw.bb203:                                         ; preds = %while.body
  call void @llvm.dbg.declare(metadata i8** %nptr204, metadata !9249, metadata !DIExpression()), !dbg !9251
  call void @llvm.dbg.declare(metadata i8** %endptr205, metadata !9252, metadata !DIExpression()), !dbg !9253
  %107 = load i8*, i8** @optarg, align 8, !dbg !9254
  store i8* %107, i8** %nptr204, align 8, !dbg !9255
  store i8* null, i8** %endptr205, align 8, !dbg !9256
  %108 = load i8*, i8** %nptr204, align 8, !dbg !9257
  %call206 = call double @strtod(i8* %108, i8** %endptr205) #7, !dbg !9258
  store double %call206, double* @maxload, align 8, !dbg !9259
  %109 = load i8*, i8** %nptr204, align 8, !dbg !9260
  %tobool207 = icmp ne i8* %109, null, !dbg !9260
  br i1 %tobool207, label %lor.lhs.false208, label %if.then218, !dbg !9262

lor.lhs.false208:                                 ; preds = %sw.bb203
  %110 = load i8*, i8** %nptr204, align 8, !dbg !9263
  %111 = load i8, i8* %110, align 1, !dbg !9264
  %tobool209 = icmp ne i8 %111, 0, !dbg !9264
  br i1 %tobool209, label %lor.lhs.false210, label %if.then218, !dbg !9265

lor.lhs.false210:                                 ; preds = %lor.lhs.false208
  %112 = load i8*, i8** %endptr205, align 8, !dbg !9266
  %tobool211 = icmp ne i8* %112, null, !dbg !9266
  br i1 %tobool211, label %lor.lhs.false212, label %if.then218, !dbg !9267

lor.lhs.false212:                                 ; preds = %lor.lhs.false210
  %113 = load i8*, i8** %endptr205, align 8, !dbg !9268
  %114 = load i8, i8* %113, align 1, !dbg !9269
  %conv213 = sext i8 %114 to i32, !dbg !9269
  %tobool214 = icmp ne i32 %conv213, 0, !dbg !9269
  br i1 %tobool214, label %if.then218, label %lor.lhs.false215, !dbg !9270

lor.lhs.false215:                                 ; preds = %lor.lhs.false212
  %115 = load double, double* @maxload, align 8, !dbg !9271
  %cmp216 = fcmp ole double %115, 0.000000e+00, !dbg !9272
  br i1 %cmp216, label %if.then218, label %if.end219, !dbg !9273

if.then218:                                       ; preds = %lor.lhs.false215, %lor.lhs.false212, %lor.lhs.false210, %lor.lhs.false208, %sw.bb203
  %116 = load i8*, i8** @optarg, align 8, !dbg !9274
  call void (i32, i32, i8*, ...) @die(i32 421, i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.226, i64 0, i64 0), i8* %116) #11, !dbg !9276
  unreachable, !dbg !9276

if.end219:                                        ; preds = %lor.lhs.false215
  br label %sw.epilog, !dbg !9277

sw.bb220:                                         ; preds = %while.body
  store i32 1, i32* @allow_anon_mkdir, align 4, !dbg !9278
  br label %sw.epilog, !dbg !9280

sw.bb221:                                         ; preds = %while.body
  store i8 1, i8* @disallow_passive, align 1, !dbg !9281
  br label %sw.epilog, !dbg !9283

sw.bb222:                                         ; preds = %while.body
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9284, metadata !DIExpression()), !dbg !9286
  %117 = load i8*, i8** @optarg, align 8, !dbg !9287
  %call223 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %117, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.227, i64 0, i64 0), i32* @firstport, i32* @lastport) #7, !dbg !9288
  store i32 %call223, i32* %ret, align 4, !dbg !9289
  %118 = load i32, i32* %ret, align 4, !dbg !9290
  %cmp224 = icmp ne i32 %118, 2, !dbg !9292
  br i1 %cmp224, label %if.then235, label %lor.lhs.false226, !dbg !9293

lor.lhs.false226:                                 ; preds = %sw.bb222
  %119 = load i32, i32* @firstport, align 4, !dbg !9294
  %cmp227 = icmp ult i32 %119, 1024, !dbg !9295
  br i1 %cmp227, label %if.then235, label %lor.lhs.false229, !dbg !9296

lor.lhs.false229:                                 ; preds = %lor.lhs.false226
  %120 = load i32, i32* @lastport, align 4, !dbg !9297
  %cmp230 = icmp ugt i32 %120, 65535, !dbg !9298
  br i1 %cmp230, label %if.then235, label %lor.lhs.false232, !dbg !9299

lor.lhs.false232:                                 ; preds = %lor.lhs.false229
  %121 = load i32, i32* @lastport, align 4, !dbg !9300
  %122 = load i32, i32* @firstport, align 4, !dbg !9301
  %cmp233 = icmp ult i32 %121, %122, !dbg !9302
  br i1 %cmp233, label %if.then235, label %if.end236, !dbg !9303

if.then235:                                       ; preds = %lor.lhs.false232, %lor.lhs.false229, %lor.lhs.false226, %sw.bb222
  %123 = load i8*, i8** @optarg, align 8, !dbg !9304
  call void (i32, i32, i8*, ...) @die(i32 421, i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.228, i64 0, i64 0), i8* %123) #11, !dbg !9306
  unreachable, !dbg !9306

if.end236:                                        ; preds = %lor.lhs.false232
  br label %sw.epilog, !dbg !9307

sw.bb237:                                         ; preds = %while.body
  call void @llvm.dbg.declare(metadata i32* %ret238, metadata !9308, metadata !DIExpression()), !dbg !9310
  %124 = load i8*, i8** @optarg, align 8, !dbg !9311
  %call239 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %124, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.227, i64 0, i64 0), i32* @max_ls_files, i32* @max_ls_depth) #7, !dbg !9312
  store i32 %call239, i32* %ret238, align 4, !dbg !9313
  %125 = load i32, i32* %ret238, align 4, !dbg !9314
  %cmp240 = icmp ne i32 %125, 2, !dbg !9316
  br i1 %cmp240, label %if.then248, label %lor.lhs.false242, !dbg !9317

lor.lhs.false242:                                 ; preds = %sw.bb237
  %126 = load i32, i32* @max_ls_files, align 4, !dbg !9318
  %cmp243 = icmp ult i32 %126, 1, !dbg !9319
  br i1 %cmp243, label %if.then248, label %lor.lhs.false245, !dbg !9320

lor.lhs.false245:                                 ; preds = %lor.lhs.false242
  %127 = load i32, i32* @max_ls_depth, align 4, !dbg !9321
  %cmp246 = icmp ult i32 %127, 1, !dbg !9322
  br i1 %cmp246, label %if.then248, label %if.end249, !dbg !9323

if.then248:                                       ; preds = %lor.lhs.false245, %lor.lhs.false242, %sw.bb237
  %128 = load i8*, i8** @optarg, align 8, !dbg !9324
  call void (i32, i32, i8*, ...) @die(i32 421, i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.229, i64 0, i64 0), i8* %128) #11, !dbg !9326
  unreachable, !dbg !9326

if.end249:                                        ; preds = %lor.lhs.false245
  br label %sw.epilog, !dbg !9327

sw.bb250:                                         ; preds = %while.body
  %129 = load i8*, i8** @force_passive_ip_s, align 8, !dbg !9328
  %cmp251 = icmp eq i8* %129, null, !dbg !9331
  br i1 %cmp251, label %land.lhs.true253, label %if.end258, !dbg !9332

land.lhs.true253:                                 ; preds = %sw.bb250
  %130 = load i8*, i8** @optarg, align 8, !dbg !9333
  %call254 = call noalias i8* @strdup(i8* %130) #7, !dbg !9334
  store i8* %call254, i8** @force_passive_ip_s, align 8, !dbg !9335
  %cmp255 = icmp eq i8* %call254, null, !dbg !9336
  br i1 %cmp255, label %if.then257, label %if.end258, !dbg !9337

if.then257:                                       ; preds = %land.lhs.true253
  call void @die_mem() #11, !dbg !9338
  unreachable, !dbg !9338

if.end258:                                        ; preds = %land.lhs.true253, %sw.bb250
  br label %sw.epilog, !dbg !9340

sw.bb259:                                         ; preds = %while.body
  store i8 1, i8* @autorename, align 1, !dbg !9341
  br label %sw.epilog, !dbg !9343

sw.bb260:                                         ; preds = %while.body
  store i8 1, i8* @nochmod, align 1, !dbg !9344
  br label %sw.epilog, !dbg !9346

sw.bb261:                                         ; preds = %while.body
  store i8 1, i8* @keepallfiles, align 1, !dbg !9347
  br label %sw.epilog, !dbg !9349

sw.bb262:                                         ; preds = %while.body
  %131 = load i8*, i8** @optarg, align 8, !dbg !9350
  %call263 = call noalias i8* @strdup(i8* %131) #7, !dbg !9353
  store i8* %call263, i8** @pid_file, align 8, !dbg !9354
  %cmp264 = icmp eq i8* %call263, null, !dbg !9355
  br i1 %cmp264, label %if.then266, label %if.end267, !dbg !9356

if.then266:                                       ; preds = %sw.bb262
  call void @die_mem() #11, !dbg !9357
  unreachable, !dbg !9357

if.end267:                                        ; preds = %sw.bb262
  br label %sw.epilog, !dbg !9359

sw.bb268:                                         ; preds = %while.body
  store i8 1, i8* @disallow_rename, align 1, !dbg !9360
  br label %sw.epilog, !dbg !9362

sw.bb269:                                         ; preds = %while.body
  store i8 0, i8* @resolve_hostnames, align 1, !dbg !9363
  br label %sw.epilog, !dbg !9365

sw.bb270:                                         ; preds = %while.body
  call void @llvm.dbg.declare(metadata i8** %nptr271, metadata !9366, metadata !DIExpression()), !dbg !9368
  call void @llvm.dbg.declare(metadata i8** %endptr272, metadata !9369, metadata !DIExpression()), !dbg !9370
  %132 = load i8*, i8** @optarg, align 8, !dbg !9371
  store i8* %132, i8** %nptr271, align 8, !dbg !9372
  store i8* null, i8** %endptr272, align 8, !dbg !9373
  %133 = load i8*, i8** %nptr271, align 8, !dbg !9374
  %call273 = call i64 @strtoul(i8* %133, i8** %endptr272, i32 0) #7, !dbg !9375
  %mul = mul i64 %call273, 60, !dbg !9376
  store i64 %mul, i64* @idletime, align 8, !dbg !9377
  %134 = load i64, i64* @idletime, align 8, !dbg !9378
  %cmp274 = icmp ule i64 %134, 0, !dbg !9380
  br i1 %cmp274, label %if.then276, label %if.end277, !dbg !9381

if.then276:                                       ; preds = %sw.bb270
  store i64 900, i64* @idletime, align 8, !dbg !9382
  br label %if.end277, !dbg !9384

if.end277:                                        ; preds = %if.then276, %sw.bb270
  br label %sw.epilog, !dbg !9385

sw.bb278:                                         ; preds = %while.body
  store i8 1, i8* @anon_noupload, align 1, !dbg !9386
  br label %sw.epilog, !dbg !9388

sw.bb279:                                         ; preds = %while.body
  store i8 1, i8* @create_home, align 1, !dbg !9389
  br label %sw.epilog, !dbg !9391

sw.bb280:                                         ; preds = %while.body
  call void @llvm.dbg.declare(metadata i8** %nptr281, metadata !9392, metadata !DIExpression()), !dbg !9394
  call void @llvm.dbg.declare(metadata i8** %endptr282, metadata !9395, metadata !DIExpression()), !dbg !9396
  %135 = load i8*, i8** @optarg, align 8, !dbg !9397
  store i8* %135, i8** %nptr281, align 8, !dbg !9398
  store i8* null, i8** %endptr282, align 8, !dbg !9399
  %136 = load i8*, i8** %nptr281, align 8, !dbg !9400
  %call283 = call double @strtod(i8* %136, i8** %endptr282) #7, !dbg !9401
  %div = fdiv double %call283, 1.000000e+02, !dbg !9402
  %sub = fsub double 1.000000e+00, %div, !dbg !9403
  store double %sub, double* @maxdiskusagepct, align 8, !dbg !9404
  %137 = load double, double* @maxdiskusagepct, align 8, !dbg !9405
  %cmp284 = fcmp oge double %137, 1.000000e+00, !dbg !9407
  br i1 %cmp284, label %if.then289, label %lor.lhs.false286, !dbg !9408

lor.lhs.false286:                                 ; preds = %sw.bb280
  %138 = load double, double* @maxdiskusagepct, align 8, !dbg !9409
  %cmp287 = fcmp olt double %138, 0.000000e+00, !dbg !9410
  br i1 %cmp287, label %if.then289, label %if.end290, !dbg !9411

if.then289:                                       ; preds = %lor.lhs.false286, %sw.bb280
  store double 0.000000e+00, double* @maxdiskusagepct, align 8, !dbg !9412
  br label %if.end290, !dbg !9414

if.end290:                                        ; preds = %if.then289, %lor.lhs.false286
  br label %sw.epilog, !dbg !9415

sw.bb291:                                         ; preds = %while.body
  call void @llvm.dbg.declare(metadata i8** %nptr292, metadata !9416, metadata !DIExpression()), !dbg !9418
  call void @llvm.dbg.declare(metadata i8** %endptr293, metadata !9419, metadata !DIExpression()), !dbg !9420
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !9421, metadata !DIExpression()), !dbg !9422
  %139 = load i8*, i8** @optarg, align 8, !dbg !9423
  store i8* %139, i8** %nptr292, align 8, !dbg !9424
  store i8* null, i8** %endptr293, align 8, !dbg !9425
  %140 = load i8*, i8** %nptr292, align 8, !dbg !9426
  %call294 = call i64 @strtol(i8* %140, i8** %endptr293, i32 10) #7, !dbg !9427
  store i64 %call294, i64* %tmp, align 8, !dbg !9428
  %141 = load i8*, i8** %nptr292, align 8, !dbg !9429
  %tobool295 = icmp ne i8* %141, null, !dbg !9429
  br i1 %tobool295, label %lor.lhs.false296, label %if.then306, !dbg !9431

lor.lhs.false296:                                 ; preds = %sw.bb291
  %142 = load i8*, i8** %nptr292, align 8, !dbg !9432
  %143 = load i8, i8* %142, align 1, !dbg !9433
  %tobool297 = icmp ne i8 %143, 0, !dbg !9433
  br i1 %tobool297, label %lor.lhs.false298, label %if.then306, !dbg !9434

lor.lhs.false298:                                 ; preds = %lor.lhs.false296
  %144 = load i8*, i8** %endptr293, align 8, !dbg !9435
  %tobool299 = icmp ne i8* %144, null, !dbg !9435
  br i1 %tobool299, label %lor.lhs.false300, label %if.then306, !dbg !9436

lor.lhs.false300:                                 ; preds = %lor.lhs.false298
  %145 = load i8*, i8** %endptr293, align 8, !dbg !9437
  %146 = load i8, i8* %145, align 1, !dbg !9438
  %conv301 = sext i8 %146 to i32, !dbg !9438
  %tobool302 = icmp ne i32 %conv301, 0, !dbg !9438
  br i1 %tobool302, label %if.then306, label %lor.lhs.false303, !dbg !9439

lor.lhs.false303:                                 ; preds = %lor.lhs.false300
  %147 = load i64, i64* %tmp, align 8, !dbg !9440
  %cmp304 = icmp slt i64 %147, 0, !dbg !9441
  br i1 %cmp304, label %if.then306, label %if.end307, !dbg !9442

if.then306:                                       ; preds = %lor.lhs.false303, %lor.lhs.false300, %lor.lhs.false298, %lor.lhs.false296, %sw.bb291
  %148 = load i8*, i8** @optarg, align 8, !dbg !9443
  call void (i32, i32, i8*, ...) @die(i32 421, i32 3, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.230, i64 0, i64 0), i8* %148) #11, !dbg !9445
  unreachable, !dbg !9445

if.end307:                                        ; preds = %lor.lhs.false303
  %149 = load i64, i64* %tmp, align 8, !dbg !9446
  %conv308 = trunc i64 %149 to i32, !dbg !9447
  store i32 %conv308, i32* @useruid, align 4, !dbg !9448
  br label %sw.epilog, !dbg !9449

sw.bb309:                                         ; preds = %while.body
  call void @llvm.dbg.declare(metadata i8** %optarg_copy, metadata !9450, metadata !DIExpression()), !dbg !9452
  call void @llvm.dbg.declare(metadata i8** %struck310, metadata !9453, metadata !DIExpression()), !dbg !9454
  call void @llvm.dbg.declare(metadata i8** %tr_umask, metadata !9455, metadata !DIExpression()), !dbg !9456
  store i8* null, i8** %tr_umask, align 8, !dbg !9456
  call void @llvm.dbg.declare(metadata i8** %tr_umask_d, metadata !9457, metadata !DIExpression()), !dbg !9458
  store i8* null, i8** %tr_umask_d, align 8, !dbg !9458
  %150 = load i8*, i8** @optarg, align 8, !dbg !9459
  %call311 = call noalias i8* @strdup(i8* %150) #7, !dbg !9461
  store i8* %call311, i8** %optarg_copy, align 8, !dbg !9462
  %cmp312 = icmp eq i8* %call311, null, !dbg !9463
  br i1 %cmp312, label %if.then314, label %if.end315, !dbg !9464

if.then314:                                       ; preds = %sw.bb309
  call void @die_mem() #11, !dbg !9465
  unreachable, !dbg !9465

if.end315:                                        ; preds = %sw.bb309
  %151 = load i8*, i8** %optarg_copy, align 8, !dbg !9467
  %call316 = call i8* @strchr(i8* %151, i32 58) #12, !dbg !9469
  store i8* %call316, i8** %struck310, align 8, !dbg !9470
  %cmp317 = icmp ne i8* %call316, null, !dbg !9471
  br i1 %cmp317, label %if.then319, label %if.else332, !dbg !9472

if.then319:                                       ; preds = %if.end315
  %152 = load i8*, i8** %struck310, align 8, !dbg !9473
  store i8 0, i8* %152, align 1, !dbg !9475
  %153 = load i8*, i8** %optarg_copy, align 8, !dbg !9476
  %154 = load i8, i8* %153, align 1, !dbg !9478
  %conv320 = sext i8 %154 to i32, !dbg !9478
  %cmp321 = icmp ne i32 %conv320, 0, !dbg !9479
  br i1 %cmp321, label %if.then323, label %if.end324, !dbg !9480

if.then323:                                       ; preds = %if.then319
  %155 = load i8*, i8** %optarg_copy, align 8, !dbg !9481
  store i8* %155, i8** %tr_umask, align 8, !dbg !9483
  br label %if.end324, !dbg !9484

if.end324:                                        ; preds = %if.then323, %if.then319
  %156 = load i8*, i8** %struck310, align 8, !dbg !9485
  %arrayidx325 = getelementptr i8, i8* %156, i64 1, !dbg !9485
  %157 = load i8, i8* %arrayidx325, align 1, !dbg !9485
  %conv326 = sext i8 %157 to i32, !dbg !9485
  %cmp327 = icmp ne i32 %conv326, 0, !dbg !9487
  br i1 %cmp327, label %if.then329, label %if.end331, !dbg !9488

if.then329:                                       ; preds = %if.end324
  %158 = load i8*, i8** %struck310, align 8, !dbg !9489
  %arrayidx330 = getelementptr i8, i8* %158, i64 1, !dbg !9489
  store i8* %arrayidx330, i8** %tr_umask_d, align 8, !dbg !9491
  br label %if.end331, !dbg !9492

if.end331:                                        ; preds = %if.then329, %if.end324
  br label %if.end333, !dbg !9493

if.else332:                                       ; preds = %if.end315
  %159 = load i8*, i8** %optarg_copy, align 8, !dbg !9494
  store i8* %159, i8** %tr_umask_d, align 8, !dbg !9496
  store i8* %159, i8** %tr_umask, align 8, !dbg !9497
  br label %if.end333

if.end333:                                        ; preds = %if.else332, %if.end331
  %160 = load i8*, i8** %tr_umask, align 8, !dbg !9498
  %cmp334 = icmp eq i8* %160, null, !dbg !9500
  br i1 %cmp334, label %land.lhs.true340, label %lor.lhs.false336, !dbg !9501

lor.lhs.false336:                                 ; preds = %if.end333
  %161 = load i8*, i8** %tr_umask, align 8, !dbg !9502
  %162 = load i8, i8* %161, align 1, !dbg !9503
  %conv337 = sext i8 %162 to i32, !dbg !9503
  %cmp338 = icmp eq i32 %conv337, 0, !dbg !9504
  br i1 %cmp338, label %land.lhs.true340, label %if.end348, !dbg !9505

land.lhs.true340:                                 ; preds = %lor.lhs.false336, %if.end333
  %163 = load i8*, i8** %tr_umask_d, align 8, !dbg !9506
  %cmp341 = icmp eq i8* %163, null, !dbg !9507
  br i1 %cmp341, label %if.then347, label %lor.lhs.false343, !dbg !9508

lor.lhs.false343:                                 ; preds = %land.lhs.true340
  %164 = load i8*, i8** %tr_umask_d, align 8, !dbg !9509
  %165 = load i8, i8* %164, align 1, !dbg !9510
  %conv344 = sext i8 %165 to i32, !dbg !9510
  %cmp345 = icmp eq i32 %conv344, 0, !dbg !9511
  br i1 %cmp345, label %if.then347, label %if.end348, !dbg !9512

if.then347:                                       ; preds = %lor.lhs.false343, %land.lhs.true340
  br label %bad_umask, !dbg !9513

bad_umask:                                        ; preds = %if.then366, %if.then356, %if.then347
  call void @llvm.dbg.label(metadata !9514), !dbg !9516
  %166 = load i8*, i8** %optarg_copy, align 8, !dbg !9517
  call void (i32, i32, i8*, ...) @die(i32 421, i32 3, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.231, i64 0, i64 0), i8* %166) #11, !dbg !9518
  unreachable, !dbg !9518

if.end348:                                        ; preds = %lor.lhs.false343, %lor.lhs.false336
  %167 = load i8*, i8** %tr_umask, align 8, !dbg !9519
  %cmp349 = icmp ne i8* %167, null, !dbg !9521
  br i1 %cmp349, label %if.then351, label %if.end358, !dbg !9522

if.then351:                                       ; preds = %if.end348
  %168 = load i8*, i8** %tr_umask, align 8, !dbg !9523
  %call352 = call i64 @strtoul(i8* %168, i8** null, i32 8) #7, !dbg !9526
  %conv353 = trunc i64 %call352 to i32, !dbg !9526
  store i32 %conv353, i32* @u_mask, align 4, !dbg !9527
  %cmp354 = icmp ugt i32 %conv353, 511, !dbg !9528
  br i1 %cmp354, label %if.then356, label %if.end357, !dbg !9529

if.then356:                                       ; preds = %if.then351
  br label %bad_umask, !dbg !9530

if.end357:                                        ; preds = %if.then351
  br label %if.end358, !dbg !9532

if.end358:                                        ; preds = %if.end357, %if.end348
  %169 = load i8*, i8** %tr_umask_d, align 8, !dbg !9533
  %cmp359 = icmp ne i8* %169, null, !dbg !9535
  br i1 %cmp359, label %if.then361, label %if.end368, !dbg !9536

if.then361:                                       ; preds = %if.end358
  %170 = load i8*, i8** %tr_umask_d, align 8, !dbg !9537
  %call362 = call i64 @strtoul(i8* %170, i8** null, i32 8) #7, !dbg !9540
  %conv363 = trunc i64 %call362 to i32, !dbg !9540
  store i32 %conv363, i32* @u_mask_d, align 4, !dbg !9541
  %cmp364 = icmp ugt i32 %conv363, 511, !dbg !9542
  br i1 %cmp364, label %if.then366, label %if.end367, !dbg !9543

if.then366:                                       ; preds = %if.then361
  br label %bad_umask, !dbg !9544

if.end367:                                        ; preds = %if.then361
  br label %if.end368, !dbg !9546

if.end368:                                        ; preds = %if.end367, %if.end358
  %171 = load i8*, i8** %optarg_copy, align 8, !dbg !9547
  call void @free(i8* %171) #7, !dbg !9548
  br label %sw.epilog, !dbg !9549

sw.bb369:                                         ; preds = %while.body
  %call370 = call i32 @geteuid() #7, !dbg !9550
  %cmp371 = icmp eq i32 %call370, 0, !dbg !9553
  br i1 %cmp371, label %if.then373, label %if.end375, !dbg !9554

if.then373:                                       ; preds = %sw.bb369
  %call374 = call i32 @puts(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.232, i64 0, i64 0)), !dbg !9555
  br label %if.end375, !dbg !9557

if.end375:                                        ; preds = %if.then373, %sw.bb369
  call void @llvm.dbg.declare(metadata %struct.option** %options, metadata !9558, metadata !DIExpression()), !dbg !9562
  store %struct.option* getelementptr inbounds ([47 x %struct.option], [47 x %struct.option]* @long_options, i64 0, i64 0), %struct.option** %options, align 8, !dbg !9562
  br label %do.body, !dbg !9563

do.body:                                          ; preds = %do.cond, %if.end375
  %172 = load %struct.option*, %struct.option** %options, align 8, !dbg !9564
  %val = getelementptr inbounds %struct.option, %struct.option* %172, i32 0, i32 3, !dbg !9566
  %173 = load i32, i32* %val, align 8, !dbg !9566
  %174 = load %struct.option*, %struct.option** %options, align 8, !dbg !9567
  %name376 = getelementptr inbounds %struct.option, %struct.option* %174, i32 0, i32 0, !dbg !9568
  %175 = load i8*, i8** %name376, align 8, !dbg !9568
  %176 = load %struct.option*, %struct.option** %options, align 8, !dbg !9569
  %has_arg = getelementptr inbounds %struct.option, %struct.option* %176, i32 0, i32 1, !dbg !9570
  %177 = load i32, i32* %has_arg, align 8, !dbg !9570
  %tobool377 = icmp ne i32 %177, 0, !dbg !9569
  %178 = zext i1 %tobool377 to i64, !dbg !9569
  %cond = select i1 %tobool377, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.234, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.58, i64 0, i64 0), !dbg !9569
  %call378 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.233, i64 0, i64 0), i32 %173, i8* %175, i8* %cond), !dbg !9571
  %179 = load %struct.option*, %struct.option** %options, align 8, !dbg !9572
  %incdec.ptr379 = getelementptr %struct.option, %struct.option* %179, i32 1, !dbg !9572
  store %struct.option* %incdec.ptr379, %struct.option** %options, align 8, !dbg !9572
  br label %do.cond, !dbg !9573

do.cond:                                          ; preds = %do.body
  %180 = load %struct.option*, %struct.option** %options, align 8, !dbg !9574
  %name380 = getelementptr inbounds %struct.option, %struct.option* %180, i32 0, i32 0, !dbg !9575
  %181 = load i8*, i8** %name380, align 8, !dbg !9575
  %cmp381 = icmp ne i8* %181, null, !dbg !9576
  br i1 %cmp381, label %do.body, label %do.end, !dbg !9573, !llvm.loop !9577

do.end:                                           ; preds = %do.cond
  call void @exit(i32 0) #13, !dbg !9579
  unreachable, !dbg !9579

sw.default:                                       ; preds = %while.body
  call void (i32, i32, i8*, ...) @die(i32 421, i32 3, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.235, i64 0, i64 0)) #11, !dbg !9580
  unreachable, !dbg !9580

sw.epilog:                                        ; preds = %if.end368, %if.end307, %if.end290, %sw.bb279, %sw.bb278, %if.end277, %sw.bb269, %sw.bb268, %if.end267, %sw.bb261, %sw.bb260, %sw.bb259, %if.end258, %if.end249, %if.end236, %sw.bb221, %sw.bb220, %if.end219, %for.end, %if.end156, %if.then135, %sw.bb130, %sw.bb129, %if.end128, %sw.bb111, %if.end110, %sw.bb93, %if.end92, %sw.bb86, %sw.bb85, %sw.bb84, %sw.bb83, %sw.bb82, %sw.bb81, %sw.bb80, %if.end79, %sw.bb67, %if.end66, %sw.bb30, %sw.bb29, %sw.bb28, %sw.bb27, %if.end26
  br label %while.cond, !dbg !8865, !llvm.loop !9581

while.end383:                                     ; preds = %while.cond
  %182 = load i32, i32* @optind, align 4, !dbg !9583
  %183 = load i32, i32* %argc.addr, align 4, !dbg !9585
  %cmp384 = icmp slt i32 %182, %183, !dbg !9586
  br i1 %cmp384, label %if.then386, label %if.end389, !dbg !9587

if.then386:                                       ; preds = %while.end383
  %184 = load i8**, i8*** %argv.addr, align 8, !dbg !9588
  %185 = load i32, i32* @optind, align 4, !dbg !9590
  %idxprom387 = sext i32 %185 to i64, !dbg !9588
  %arrayidx388 = getelementptr i8*, i8** %184, i64 %idxprom387, !dbg !9588
  %186 = load i8*, i8** %arrayidx388, align 8, !dbg !9588
  call void (i32, i32, i8*, ...) @die(i32 421, i32 3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.236, i64 0, i64 0), i8* %186) #11, !dbg !9591
  unreachable, !dbg !9591

if.end389:                                        ; preds = %while.end383
  %187 = load %struct.Authentications_*, %struct.Authentications_** @first_authentications, align 8, !dbg !9592
  %cmp390 = icmp eq %struct.Authentications_* %187, null, !dbg !9594
  br i1 %cmp390, label %if.then392, label %if.end401, !dbg !9595

if.then392:                                       ; preds = %if.end389
  %call393 = call noalias i8* @malloc(i64 24) #7, !dbg !9596
  %188 = bitcast i8* %call393 to %struct.Authentications_*, !dbg !9596
  store %struct.Authentications_* %188, %struct.Authentications_** @first_authentications, align 8, !dbg !9599
  %cmp394 = icmp eq %struct.Authentications_* %188, null, !dbg !9600
  br i1 %cmp394, label %if.then396, label %if.end397, !dbg !9601

if.then396:                                       ; preds = %if.then392
  call void @die_mem() #11, !dbg !9602
  unreachable, !dbg !9602

if.end397:                                        ; preds = %if.then392
  %189 = load %struct.Authentications_*, %struct.Authentications_** @first_authentications, align 8, !dbg !9604
  %auth398 = getelementptr inbounds %struct.Authentications_, %struct.Authentications_* %189, i32 0, i32 0, !dbg !9605
  store %struct.Authentication_* getelementptr inbounds ([2 x %struct.Authentication_], [2 x %struct.Authentication_]* @auth_list, i64 0, i64 0), %struct.Authentication_** %auth398, align 8, !dbg !9606
  %190 = load %struct.Authentications_*, %struct.Authentications_** @first_authentications, align 8, !dbg !9607
  %conf_file399 = getelementptr inbounds %struct.Authentications_, %struct.Authentications_* %190, i32 0, i32 1, !dbg !9608
  store i8* null, i8** %conf_file399, align 8, !dbg !9609
  %191 = load %struct.Authentications_*, %struct.Authentications_** @first_authentications, align 8, !dbg !9610
  %next400 = getelementptr inbounds %struct.Authentications_, %struct.Authentications_* %191, i32 0, i32 2, !dbg !9611
  store %struct.Authentications_* null, %struct.Authentications_** %next400, align 8, !dbg !9612
  br label %if.end401, !dbg !9613

if.end401:                                        ; preds = %if.end397, %if.end389
  call void @dodaemonize(), !dbg !9614
  %192 = load i8, i8* @no_syslog, align 1, !dbg !9615
  %conv402 = sext i8 %192 to i32, !dbg !9615
  %cmp403 = icmp eq i32 %conv402, 0, !dbg !9617
  br i1 %cmp403, label %land.lhs.true405, label %if.end412, !dbg !9618

land.lhs.true405:                                 ; preds = %if.end401
  %193 = load i32, i32* @log_pid, align 4, !dbg !9619
  %tobool406 = icmp ne i32 %193, 0, !dbg !9619
  br i1 %tobool406, label %if.then410, label %lor.lhs.false407, !dbg !9620

lor.lhs.false407:                                 ; preds = %land.lhs.true405
  %194 = load i32, i32* @syslog_facility, align 4, !dbg !9621
  %cmp408 = icmp ne i32 %194, 88, !dbg !9622
  br i1 %cmp408, label %if.then410, label %if.end412, !dbg !9623

if.then410:                                       ; preds = %lor.lhs.false407, %land.lhs.true405
  call void @closelog(), !dbg !9624
  %195 = load i32, i32* @log_pid, align 4, !dbg !9626
  %or411 = or i32 8, %195, !dbg !9627
  %196 = load i32, i32* @syslog_facility, align 4, !dbg !9628
  call void @openlog(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.219, i64 0, i64 0), i32 %or411, i32 %196), !dbg !9629
  br label %if.end412, !dbg !9630

if.end412:                                        ; preds = %if.then410, %lor.lhs.false407, %if.end401
  %call413 = call i32 @umask(i32 0) #7, !dbg !9631
  %197 = load i32, i32* %argc.addr, align 4, !dbg !9632
  %198 = load i8**, i8*** %argv.addr, align 8, !dbg !9633
  call void @clearargs(i32 %197, i8** %198), !dbg !9634
  %199 = load i64, i64* @idletime, align 8, !dbg !9635
  %conv414 = uitofp i64 %199 to double, !dbg !9636
  %mul415 = fmul double %conv414, 2.000000e+00, !dbg !9637
  store double %mul415, double* @idletime_noop, align 8, !dbg !9638
  %200 = load i32, i32* @firstport, align 4, !dbg !9639
  %tobool416 = icmp ne i32 %200, 0, !dbg !9639
  br i1 %tobool416, label %if.then417, label %if.end426, !dbg !9641

if.then417:                                       ; preds = %if.end412
  call void @llvm.dbg.declare(metadata i32* %portmax, metadata !9642, metadata !DIExpression()), !dbg !9644
  %201 = load i32, i32* @lastport, align 4, !dbg !9645
  %202 = load i32, i32* @firstport, align 4, !dbg !9646
  %sub418 = sub i32 %201, %202, !dbg !9647
  %add = add i32 %sub418, 1, !dbg !9648
  %div419 = udiv i32 %add, 2, !dbg !9649
  store i32 %div419, i32* %portmax, align 4, !dbg !9650
  %203 = load i32, i32* @maxusers, align 4, !dbg !9651
  %tobool420 = icmp ne i32 %203, 0, !dbg !9651
  br i1 %tobool420, label %lor.lhs.false421, label %if.then424, !dbg !9653

lor.lhs.false421:                                 ; preds = %if.then417
  %204 = load i32, i32* @maxusers, align 4, !dbg !9654
  %205 = load i32, i32* %portmax, align 4, !dbg !9655
  %cmp422 = icmp ugt i32 %204, %205, !dbg !9656
  br i1 %cmp422, label %if.then424, label %if.end425, !dbg !9657

if.then424:                                       ; preds = %lor.lhs.false421, %if.then417
  %206 = load i32, i32* %portmax, align 4, !dbg !9658
  store i32 %206, i32* @maxusers, align 4, !dbg !9660
  br label %if.end425, !dbg !9661

if.end425:                                        ; preds = %if.then424, %lor.lhs.false421
  br label %if.end426, !dbg !9662

if.end426:                                        ; preds = %if.end425, %if.end412
  %207 = load i32, i32* %bypass_ipv6, align 4, !dbg !9663
  %cmp427 = icmp eq i32 %207, 0, !dbg !9665
  br i1 %cmp427, label %if.then429, label %if.end430, !dbg !9666

if.then429:                                       ; preds = %if.end426
  call void @check_ipv6_support(), !dbg !9667
  br label %if.end430, !dbg !9669

if.end430:                                        ; preds = %if.then429, %if.end426
  %call431 = call i32 @init_aliases(), !dbg !9670
  %cmp432 = icmp ne i32 %call431, 0, !dbg !9672
  br i1 %cmp432, label %if.then434, label %if.end435, !dbg !9673

if.then434:                                       ; preds = %if.end430
  call void (i32, i8*, ...) @logfile(i32 3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.237, i64 0, i64 0)), !dbg !9674
  br label %if.end435, !dbg !9676

if.end435:                                        ; preds = %if.then434, %if.end430
  br label %do.body436, !dbg !9677

do.body436:                                       ; preds = %if.end435
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.238, i64 0, i64 0), i8** @pureftpd_start._A, align 8, !dbg !9678
  call void @__afl_manual_init(), !dbg !9678
  br label %do.end438, !dbg !9678

do.end438:                                        ; preds = %do.body436
  %208 = load i8**, i8*** %argv.addr, align 8, !dbg !9680
  %209 = load i32, i32* %argc.addr, align 4, !dbg !9681
  %idxprom439 = sext i32 %209 to i64, !dbg !9680
  %arrayidx440 = getelementptr i8*, i8** %208, i64 %idxprom439, !dbg !9680
  %210 = load i8*, i8** %arrayidx440, align 8, !dbg !9680
  %call441 = call i8* @strcpy(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @inputFile, i64 0, i64 0), i8* %210) #7, !dbg !9682
  %call442 = call i32 @check_standalone(), !dbg !9683
  %cmp443 = icmp ne i32 %call442, 0, !dbg !9685
  br i1 %cmp443, label %if.then445, label %if.else446, !dbg !9686

if.then445:                                       ; preds = %do.end438
  call void @standalone_server(), !dbg !9687
  br label %if.end447, !dbg !9689

if.else446:                                       ; preds = %do.end438
  call void @doit(), !dbg !9690
  br label %if.end447

if.end447:                                        ; preds = %if.else446, %if.then445
  call void @llvm.dbg.declare(metadata %struct.Authentications_** %auth_scan, metadata !9692, metadata !DIExpression()), !dbg !9694
  %211 = load %struct.Authentications_*, %struct.Authentications_** @first_authentications, align 8, !dbg !9695
  store %struct.Authentications_* %211, %struct.Authentications_** %auth_scan, align 8, !dbg !9694
  call void @llvm.dbg.declare(metadata %struct.Authentications_** %previous, metadata !9696, metadata !DIExpression()), !dbg !9697
  br label %while.cond448, !dbg !9698

while.cond448:                                    ; preds = %if.end458, %if.end447
  %212 = load %struct.Authentications_*, %struct.Authentications_** %auth_scan, align 8, !dbg !9699
  %cmp449 = icmp ne %struct.Authentications_* %212, null, !dbg !9700
  br i1 %cmp449, label %while.body451, label %while.end461, !dbg !9698

while.body451:                                    ; preds = %while.cond448
  %213 = load %struct.Authentications_*, %struct.Authentications_** %auth_scan, align 8, !dbg !9701
  %auth452 = getelementptr inbounds %struct.Authentications_, %struct.Authentications_* %213, i32 0, i32 0, !dbg !9704
  %214 = load %struct.Authentication_*, %struct.Authentication_** %auth452, align 8, !dbg !9704
  %exit = getelementptr inbounds %struct.Authentication_, %struct.Authentication_* %214, i32 0, i32 3, !dbg !9705
  %215 = load void ()*, void ()** %exit, align 8, !dbg !9705
  %cmp453 = icmp ne void ()* %215, null, !dbg !9706
  br i1 %cmp453, label %if.then455, label %if.end458, !dbg !9707

if.then455:                                       ; preds = %while.body451
  %216 = load %struct.Authentications_*, %struct.Authentications_** %auth_scan, align 8, !dbg !9708
  %auth456 = getelementptr inbounds %struct.Authentications_, %struct.Authentications_* %216, i32 0, i32 0, !dbg !9710
  %217 = load %struct.Authentication_*, %struct.Authentication_** %auth456, align 8, !dbg !9710
  %exit457 = getelementptr inbounds %struct.Authentication_, %struct.Authentication_* %217, i32 0, i32 3, !dbg !9711
  %218 = load void ()*, void ()** %exit457, align 8, !dbg !9711
  call void %218(), !dbg !9708
  br label %if.end458, !dbg !9712

if.end458:                                        ; preds = %if.then455, %while.body451
  %219 = load %struct.Authentications_*, %struct.Authentications_** %auth_scan, align 8, !dbg !9713
  %conf_file459 = getelementptr inbounds %struct.Authentications_, %struct.Authentications_* %219, i32 0, i32 1, !dbg !9714
  %220 = load i8*, i8** %conf_file459, align 8, !dbg !9714
  call void @free(i8* %220) #7, !dbg !9715
  %221 = load %struct.Authentications_*, %struct.Authentications_** %auth_scan, align 8, !dbg !9716
  store %struct.Authentications_* %221, %struct.Authentications_** %previous, align 8, !dbg !9717
  %222 = load %struct.Authentications_*, %struct.Authentications_** %auth_scan, align 8, !dbg !9718
  %next460 = getelementptr inbounds %struct.Authentications_, %struct.Authentications_* %222, i32 0, i32 2, !dbg !9719
  %223 = load %struct.Authentications_*, %struct.Authentications_** %next460, align 8, !dbg !9719
  store %struct.Authentications_* %223, %struct.Authentications_** %auth_scan, align 8, !dbg !9720
  %224 = load %struct.Authentications_*, %struct.Authentications_** %previous, align 8, !dbg !9721
  %225 = bitcast %struct.Authentications_* %224 to i8*, !dbg !9721
  call void @free(i8* %225) #7, !dbg !9722
  br label %while.cond448, !dbg !9698, !llvm.loop !9723

while.end461:                                     ; preds = %while.cond448
  store %struct.Authentications_* null, %struct.Authentications_** @last_authentications, align 8, !dbg !9725
  store %struct.Authentications_* null, %struct.Authentications_** @first_authentications, align 8, !dbg !9726
  %226 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** @trustedip, align 8, !dbg !9727
  %227 = bitcast %struct.sockaddr_storage* %226 to i8*, !dbg !9727
  call void @free(i8* %227) #7, !dbg !9728
  call void @iptrack_free(), !dbg !9729
  call void @closelog(), !dbg !9730
  %call462 = call i32 @alt_arc4random_close(), !dbg !9731
  call void @_EXIT(i32 0) #11, !dbg !9732
  unreachable, !dbg !9732
}

; Function Attrs: nounwind readnone
declare i32 @getpagesize() #10

; Function Attrs: nounwind
declare i8* @setlocale(i32, i8*) #2

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @init_tz() #0 !dbg !9733 {
entry:
  %stbuf = alloca [10 x i8], align 1
  %tm = alloca %struct.tm*, align 8
  %now = alloca i64, align 8
  call void @llvm.dbg.declare(metadata [10 x i8]* %stbuf, metadata !9736, metadata !DIExpression()), !dbg !9738
  call void @llvm.dbg.declare(metadata %struct.tm** %tm, metadata !9739, metadata !DIExpression()), !dbg !9740
  call void @llvm.dbg.declare(metadata i64* %now, metadata !9741, metadata !DIExpression()), !dbg !9742
  %call = call i64 @time(i64* null) #7, !dbg !9743
  store i64 %call, i64* %now, align 8, !dbg !9742
  call void @tzset() #7, !dbg !9744
  %call1 = call %struct.tm* @localtime(i64* %now) #7, !dbg !9745
  store %struct.tm* %call1, %struct.tm** %tm, align 8, !dbg !9747
  %cmp = icmp ne %struct.tm* %call1, null, !dbg !9748
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !9749

land.lhs.true:                                    ; preds = %entry
  %arraydecay = getelementptr inbounds [10 x i8], [10 x i8]* %stbuf, i64 0, i64 0, !dbg !9750
  %0 = load %struct.tm*, %struct.tm** %tm, align 8, !dbg !9751
  %call2 = call i64 @strftime(i8* %arraydecay, i64 10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.258, i64 0, i64 0), %struct.tm* %0) #7, !dbg !9752
  %cmp3 = icmp eq i64 %call2, 5, !dbg !9753
  br i1 %cmp3, label %if.then, label %if.end, !dbg !9754

if.then:                                          ; preds = %land.lhs.true
  %arraydecay4 = getelementptr inbounds [10 x i8], [10 x i8]* %stbuf, i64 0, i64 0, !dbg !9755
  %1 = load i8, i8* %arraydecay4, align 1, !dbg !9755
  %conv = sext i8 %1 to i32, !dbg !9755
  %cmp5 = icmp eq i32 %conv, 45, !dbg !9757
  %2 = zext i1 %cmp5 to i64, !dbg !9755
  %cond = select i1 %cmp5, i32 43, i32 45, !dbg !9755
  %arrayidx = getelementptr [10 x i8], [10 x i8]* %stbuf, i64 0, i64 1, !dbg !9758
  %3 = load i8, i8* %arrayidx, align 1, !dbg !9758
  %conv7 = sext i8 %3 to i32, !dbg !9758
  %arrayidx8 = getelementptr [10 x i8], [10 x i8]* %stbuf, i64 0, i64 2, !dbg !9759
  %4 = load i8, i8* %arrayidx8, align 1, !dbg !9759
  %conv9 = sext i8 %4 to i32, !dbg !9759
  %arrayidx10 = getelementptr [10 x i8], [10 x i8]* %stbuf, i64 0, i64 3, !dbg !9760
  %5 = load i8, i8* %arrayidx10, align 1, !dbg !9760
  %conv11 = sext i8 %5 to i32, !dbg !9760
  %arrayidx12 = getelementptr [10 x i8], [10 x i8]* %stbuf, i64 0, i64 4, !dbg !9761
  %6 = load i8, i8* %arrayidx12, align 1, !dbg !9761
  %conv13 = sext i8 %6 to i32, !dbg !9761
  %call14 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @default_tz_for_putenv, i64 0, i64 0), i64 13, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.259, i64 0, i64 0), i32 %cond, i32 %conv7, i32 %conv9, i32 %conv11, i32 %conv13) #7, !dbg !9762
  br label %if.end, !dbg !9763

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %call15 = call i32 @putenv(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @default_tz_for_putenv, i64 0, i64 0)) #7, !dbg !9764
  %call16 = call %struct.tm* @localtime(i64* %now) #7, !dbg !9765
  %call17 = call %struct.tm* @gmtime(i64* %now) #7, !dbg !9766
  ret i32 0, !dbg !9767
}

declare void @openlog(i8*, i32, i32) #9

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal void @set_signals() #0 !dbg !9768 {
entry:
  %sigs = alloca %struct.__sigset_t, align 8
  %sa = alloca %struct.sigaction, align 8
  call void @llvm.dbg.declare(metadata %struct.__sigset_t* %sigs, metadata !9769, metadata !DIExpression()), !dbg !9770
  call void @llvm.dbg.declare(metadata %struct.sigaction* %sa, metadata !9771, metadata !DIExpression()), !dbg !9859
  %call = call i32 @sigfillset(%struct.__sigset_t* %sigs) #7, !dbg !9860
  %sa_mask = getelementptr inbounds %struct.sigaction, %struct.sigaction* %sa, i32 0, i32 1, !dbg !9861
  %call1 = call i32 @sigemptyset(%struct.__sigset_t* %sa_mask) #7, !dbg !9862
  %sa_flags = getelementptr inbounds %struct.sigaction, %struct.sigaction* %sa, i32 0, i32 2, !dbg !9863
  store i32 268435456, i32* %sa_flags, align 8, !dbg !9864
  %__sigaction_handler = getelementptr inbounds %struct.sigaction, %struct.sigaction* %sa, i32 0, i32 0, !dbg !9865
  %sa_handler = bitcast %union.anon.0* %__sigaction_handler to void (i32)**, !dbg !9865
  store void (i32)* @sigchild, void (i32)** %sa_handler, align 8, !dbg !9866
  %call2 = call i32 @sigdelset(%struct.__sigset_t* %sigs, i32 17) #7, !dbg !9867
  %call3 = call i32 @sigaction(i32 17, %struct.sigaction* %sa, %struct.sigaction* null) #7, !dbg !9868
  %__sigaction_handler4 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %sa, i32 0, i32 0, !dbg !9869
  %sa_handler5 = bitcast %union.anon.0* %__sigaction_handler4 to void (i32)**, !dbg !9869
  store void (i32)* inttoptr (i64 1 to void (i32)*), void (i32)** %sa_handler5, align 8, !dbg !9870
  %call6 = call i32 @sigaction(i32 13, %struct.sigaction* %sa, %struct.sigaction* null) #7, !dbg !9871
  %call7 = call i32 @sigaction(i32 14, %struct.sigaction* %sa, %struct.sigaction* null) #7, !dbg !9872
  %call8 = call i32 @sigaction(i32 23, %struct.sigaction* %sa, %struct.sigaction* null) #7, !dbg !9873
  %call9 = call i32 @sigaction(i32 29, %struct.sigaction* %sa, %struct.sigaction* null) #7, !dbg !9874
  %sa_flags10 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %sa, i32 0, i32 2, !dbg !9875
  store i32 0, i32* %sa_flags10, align 8, !dbg !9876
  %__sigaction_handler11 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %sa, i32 0, i32 0, !dbg !9877
  %sa_handler12 = bitcast %union.anon.0* %__sigaction_handler11 to void (i32)**, !dbg !9877
  store void (i32)* @sigterm, void (i32)** %sa_handler12, align 8, !dbg !9878
  %call13 = call i32 @sigdelset(%struct.__sigset_t* %sigs, i32 15) #7, !dbg !9879
  %call14 = call i32 @sigaction(i32 15, %struct.sigaction* %sa, %struct.sigaction* null) #7, !dbg !9880
  %call15 = call i32 @sigdelset(%struct.__sigset_t* %sigs, i32 1) #7, !dbg !9881
  %call16 = call i32 @sigaction(i32 1, %struct.sigaction* %sa, %struct.sigaction* null) #7, !dbg !9882
  %call17 = call i32 @sigdelset(%struct.__sigset_t* %sigs, i32 3) #7, !dbg !9883
  %call18 = call i32 @sigaction(i32 3, %struct.sigaction* %sa, %struct.sigaction* null) #7, !dbg !9884
  %call19 = call i32 @sigdelset(%struct.__sigset_t* %sigs, i32 2) #7, !dbg !9885
  %call20 = call i32 @sigaction(i32 2, %struct.sigaction* %sa, %struct.sigaction* null) #7, !dbg !9886
  %call21 = call i32 @sigdelset(%struct.__sigset_t* %sigs, i32 24) #7, !dbg !9887
  %call22 = call i32 @sigaction(i32 24, %struct.sigaction* %sa, %struct.sigaction* null) #7, !dbg !9888
  %call23 = call i32 @sigprocmask(i32 2, %struct.__sigset_t* %sigs, %struct.__sigset_t* null) #7, !dbg !9889
  ret void, !dbg !9890
}

; Function Attrs: nounwind
declare i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #2

; Function Attrs: nounwind
declare i64 @strtoul(i8*, i8**, i32) #2

; Function Attrs: nounwind
declare double @strtod(i8*, i8**) #2

; Function Attrs: nounwind
declare i64 @strtol(i8*, i8**, i32) #2

; Function Attrs: nounwind
declare i32 @geteuid() #2

declare i32 @puts(i8*) #9

declare i32 @printf(i8*, ...) #9

; Function Attrs: noreturn nounwind
declare void @exit(i32) #8

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal void @dodaemonize() #0 !dbg !9891 {
entry:
  %child = alloca i32, align 4
  %i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %child, metadata !9892, metadata !DIExpression()), !dbg !9893
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9894, metadata !DIExpression()), !dbg !9895
  %0 = load i8, i8* @daemonize, align 1, !dbg !9896
  %conv = sext i8 %0 to i32, !dbg !9896
  %cmp = icmp ne i32 %conv, 0, !dbg !9898
  br i1 %cmp, label %if.then, label %if.end33, !dbg !9899

if.then:                                          ; preds = %entry
  %call = call i32 @fork() #7, !dbg !9900
  store i32 %call, i32* %child, align 4, !dbg !9903
  %cmp2 = icmp eq i32 %call, -1, !dbg !9904
  br i1 %cmp2, label %if.then4, label %if.else, !dbg !9905

if.then4:                                         ; preds = %if.then
  call void @perror(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.439, i64 0, i64 0)), !dbg !9906
  %call5 = call i32* @__errno_location() #14, !dbg !9908
  %1 = load i32, i32* %call5, align 4, !dbg !9908
  %call6 = call i8* @strerror(i32 %1) #7, !dbg !9909
  call void (i32, i8*, ...) @logfile(i32 3, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.440, i64 0, i64 0), i8* %call6), !dbg !9910
  br label %if.end33, !dbg !9911

if.else:                                          ; preds = %if.then
  %2 = load i32, i32* %child, align 4, !dbg !9912
  %cmp7 = icmp ne i32 %2, 0, !dbg !9914
  br i1 %cmp7, label %if.then9, label %if.end, !dbg !9915

if.then9:                                         ; preds = %if.else
  call void @_EXIT(i32 0) #11, !dbg !9916
  unreachable, !dbg !9916

if.end:                                           ; preds = %if.else
  br label %if.end10

if.end10:                                         ; preds = %if.end
  %call11 = call i32 @setsid() #7, !dbg !9918
  %cmp12 = icmp eq i32 %call11, -1, !dbg !9920
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !9921

if.then14:                                        ; preds = %if.end10
  call void @perror(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.441, i64 0, i64 0)), !dbg !9922
  br label %if.end15, !dbg !9924

if.end15:                                         ; preds = %if.then14, %if.end10
  %call16 = call i32 @chdir(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.108, i64 0, i64 0)) #7, !dbg !9925
  %cmp17 = icmp ne i32 %call16, 0, !dbg !9927
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !9928

if.then19:                                        ; preds = %if.end15
  call void @perror(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.442, i64 0, i64 0)), !dbg !9929
  call void @_EXIT(i32 1) #11, !dbg !9931
  unreachable, !dbg !9931

if.end20:                                         ; preds = %if.end15
  %call21 = call i32 @open_max(), !dbg !9932
  store i32 %call21, i32* %i, align 4, !dbg !9933
  br label %do.body, !dbg !9934

do.body:                                          ; preds = %do.cond, %if.end20
  %3 = load i32, i32* %i, align 4, !dbg !9935
  %call22 = call i32 @isatty(i32 %3) #7, !dbg !9938
  %tobool = icmp ne i32 %call22, 0, !dbg !9938
  br i1 %tobool, label %if.then23, label %if.end25, !dbg !9939

if.then23:                                        ; preds = %do.body
  %4 = load i32, i32* %i, align 4, !dbg !9940
  %call24 = call i32 @close(i32 %4), !dbg !9942
  br label %if.end25, !dbg !9943

if.end25:                                         ; preds = %if.then23, %do.body
  %5 = load i32, i32* %i, align 4, !dbg !9944
  %dec = add i32 %5, -1, !dbg !9944
  store i32 %dec, i32* %i, align 4, !dbg !9944
  br label %do.cond, !dbg !9945

do.cond:                                          ; preds = %if.end25
  %6 = load i32, i32* %i, align 4, !dbg !9946
  %cmp26 = icmp ugt i32 %6, 2, !dbg !9947
  br i1 %cmp26, label %do.body, label %do.end, !dbg !9945, !llvm.loop !9948

do.end:                                           ; preds = %do.cond
  %call28 = call i32 @closedesc_all(i32 1), !dbg !9950
  %cmp29 = icmp ne i32 %call28, 0, !dbg !9952
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !9953

if.then31:                                        ; preds = %do.end
  call void @perror(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.443, i64 0, i64 0)), !dbg !9954
  call void @_EXIT(i32 1) #11, !dbg !9956
  unreachable, !dbg !9956

if.end32:                                         ; preds = %do.end
  br label %if.end33, !dbg !9957

if.end33:                                         ; preds = %if.then4, %if.end32, %entry
  ret void, !dbg !9958
}

declare void @closelog() #9

; Function Attrs: nounwind
declare i32 @umask(i32) #2

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal void @clearargs(i32 %argc, i8** %argv) #0 !dbg !9959 {
entry:
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %i = alloca i32, align 4
  %first = alloca i8*, align 8
  %next = alloca i8*, align 8
  %new_environ = alloca i8**, align 8
  %env_nb = alloca i32, align 4
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !9962, metadata !DIExpression()), !dbg !9963
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !9964, metadata !DIExpression()), !dbg !9965
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9966, metadata !DIExpression()), !dbg !9967
  call void @llvm.dbg.declare(metadata i8** %first, metadata !9968, metadata !DIExpression()), !dbg !9969
  store i8* null, i8** %first, align 8, !dbg !9969
  call void @llvm.dbg.declare(metadata i8** %next, metadata !9970, metadata !DIExpression()), !dbg !9971
  store i8* null, i8** %next, align 8, !dbg !9971
  store i32 0, i32* %i, align 4, !dbg !9972
  br label %for.cond, !dbg !9974

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9975
  %1 = load i32, i32* %argc.addr, align 4, !dbg !9977
  %cmp = icmp slt i32 %0, %1, !dbg !9978
  br i1 %cmp, label %for.body, label %for.end, !dbg !9979

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %first, align 8, !dbg !9980
  %cmp1 = icmp eq i8* %2, null, !dbg !9983
  br i1 %cmp1, label %if.then, label %if.end, !dbg !9984

if.then:                                          ; preds = %for.body
  %3 = load i8**, i8*** %argv.addr, align 8, !dbg !9985
  %4 = load i32, i32* %i, align 4, !dbg !9987
  %idxprom = sext i32 %4 to i64, !dbg !9985
  %arrayidx = getelementptr i8*, i8** %3, i64 %idxprom, !dbg !9985
  %5 = load i8*, i8** %arrayidx, align 8, !dbg !9985
  store i8* %5, i8** %first, align 8, !dbg !9988
  br label %if.end, !dbg !9989

if.end:                                           ; preds = %if.then, %for.body
  %6 = load i8*, i8** %next, align 8, !dbg !9990
  %cmp2 = icmp eq i8* %6, null, !dbg !9992
  br i1 %cmp2, label %if.then6, label %lor.lhs.false, !dbg !9993

lor.lhs.false:                                    ; preds = %if.end
  %7 = load i8**, i8*** %argv.addr, align 8, !dbg !9994
  %8 = load i32, i32* %i, align 4, !dbg !9995
  %idxprom3 = sext i32 %8 to i64, !dbg !9994
  %arrayidx4 = getelementptr i8*, i8** %7, i64 %idxprom3, !dbg !9994
  %9 = load i8*, i8** %arrayidx4, align 8, !dbg !9994
  %10 = load i8*, i8** %next, align 8, !dbg !9996
  %add.ptr = getelementptr i8, i8* %10, i64 1, !dbg !9997
  %cmp5 = icmp eq i8* %9, %add.ptr, !dbg !9998
  br i1 %cmp5, label %if.then6, label %if.end12, !dbg !9999

if.then6:                                         ; preds = %lor.lhs.false, %if.end
  %11 = load i8**, i8*** %argv.addr, align 8, !dbg !10000
  %12 = load i32, i32* %i, align 4, !dbg !10002
  %idxprom7 = sext i32 %12 to i64, !dbg !10000
  %arrayidx8 = getelementptr i8*, i8** %11, i64 %idxprom7, !dbg !10000
  %13 = load i8*, i8** %arrayidx8, align 8, !dbg !10000
  %14 = load i8**, i8*** %argv.addr, align 8, !dbg !10003
  %15 = load i32, i32* %i, align 4, !dbg !10004
  %idxprom9 = sext i32 %15 to i64, !dbg !10003
  %arrayidx10 = getelementptr i8*, i8** %14, i64 %idxprom9, !dbg !10003
  %16 = load i8*, i8** %arrayidx10, align 8, !dbg !10003
  %call = call i64 @strlen(i8* %16) #12, !dbg !10005
  %add.ptr11 = getelementptr i8, i8* %13, i64 %call, !dbg !10006
  store i8* %add.ptr11, i8** %next, align 8, !dbg !10007
  br label %if.end12, !dbg !10008

if.end12:                                         ; preds = %if.then6, %lor.lhs.false
  br label %for.inc, !dbg !10009

for.inc:                                          ; preds = %if.end12
  %17 = load i32, i32* %i, align 4, !dbg !10010
  %inc = add i32 %17, 1, !dbg !10010
  store i32 %inc, i32* %i, align 4, !dbg !10010
  br label %for.cond, !dbg !10011, !llvm.loop !10012

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !10014
  br label %for.cond13, !dbg !10016

for.cond13:                                       ; preds = %for.inc37, %for.end
  %18 = load i8**, i8*** @environ, align 8, !dbg !10017
  %19 = load i32, i32* %i, align 4, !dbg !10019
  %idxprom14 = sext i32 %19 to i64, !dbg !10017
  %arrayidx15 = getelementptr i8*, i8** %18, i64 %idxprom14, !dbg !10017
  %20 = load i8*, i8** %arrayidx15, align 8, !dbg !10017
  %cmp16 = icmp ne i8* %20, null, !dbg !10020
  br i1 %cmp16, label %for.body17, label %for.end39, !dbg !10021

for.body17:                                       ; preds = %for.cond13
  %21 = load i8*, i8** %first, align 8, !dbg !10022
  %cmp18 = icmp eq i8* %21, null, !dbg !10025
  br i1 %cmp18, label %if.then19, label %if.end22, !dbg !10026

if.then19:                                        ; preds = %for.body17
  %22 = load i8**, i8*** %argv.addr, align 8, !dbg !10027
  %23 = load i32, i32* %i, align 4, !dbg !10029
  %idxprom20 = sext i32 %23 to i64, !dbg !10027
  %arrayidx21 = getelementptr i8*, i8** %22, i64 %idxprom20, !dbg !10027
  %24 = load i8*, i8** %arrayidx21, align 8, !dbg !10027
  store i8* %24, i8** %first, align 8, !dbg !10030
  br label %if.end22, !dbg !10031

if.end22:                                         ; preds = %if.then19, %for.body17
  %25 = load i8*, i8** %next, align 8, !dbg !10032
  %cmp23 = icmp eq i8* %25, null, !dbg !10034
  br i1 %cmp23, label %if.then29, label %lor.lhs.false24, !dbg !10035

lor.lhs.false24:                                  ; preds = %if.end22
  %26 = load i8**, i8*** %argv.addr, align 8, !dbg !10036
  %27 = load i32, i32* %i, align 4, !dbg !10037
  %idxprom25 = sext i32 %27 to i64, !dbg !10036
  %arrayidx26 = getelementptr i8*, i8** %26, i64 %idxprom25, !dbg !10036
  %28 = load i8*, i8** %arrayidx26, align 8, !dbg !10036
  %29 = load i8*, i8** %next, align 8, !dbg !10038
  %add.ptr27 = getelementptr i8, i8* %29, i64 1, !dbg !10039
  %cmp28 = icmp eq i8* %28, %add.ptr27, !dbg !10040
  br i1 %cmp28, label %if.then29, label %if.end36, !dbg !10041

if.then29:                                        ; preds = %lor.lhs.false24, %if.end22
  %30 = load i8**, i8*** %argv.addr, align 8, !dbg !10042
  %31 = load i32, i32* %i, align 4, !dbg !10044
  %idxprom30 = sext i32 %31 to i64, !dbg !10042
  %arrayidx31 = getelementptr i8*, i8** %30, i64 %idxprom30, !dbg !10042
  %32 = load i8*, i8** %arrayidx31, align 8, !dbg !10042
  %33 = load i8**, i8*** %argv.addr, align 8, !dbg !10045
  %34 = load i32, i32* %i, align 4, !dbg !10046
  %idxprom32 = sext i32 %34 to i64, !dbg !10045
  %arrayidx33 = getelementptr i8*, i8** %33, i64 %idxprom32, !dbg !10045
  %35 = load i8*, i8** %arrayidx33, align 8, !dbg !10045
  %call34 = call i64 @strlen(i8* %35) #12, !dbg !10047
  %add.ptr35 = getelementptr i8, i8* %32, i64 %call34, !dbg !10048
  store i8* %add.ptr35, i8** %next, align 8, !dbg !10049
  br label %if.end36, !dbg !10050

if.end36:                                         ; preds = %if.then29, %lor.lhs.false24
  br label %for.inc37, !dbg !10051

for.inc37:                                        ; preds = %if.end36
  %36 = load i32, i32* %i, align 4, !dbg !10052
  %inc38 = add i32 %36, 1, !dbg !10052
  store i32 %inc38, i32* %i, align 4, !dbg !10052
  br label %for.cond13, !dbg !10053, !llvm.loop !10054

for.end39:                                        ; preds = %for.cond13
  %37 = load i8*, i8** %first, align 8, !dbg !10056
  %cmp40 = icmp eq i8* %37, null, !dbg !10058
  br i1 %cmp40, label %if.then43, label %lor.lhs.false41, !dbg !10059

lor.lhs.false41:                                  ; preds = %for.end39
  %38 = load i8*, i8** %next, align 8, !dbg !10060
  %cmp42 = icmp eq i8* %38, null, !dbg !10061
  br i1 %cmp42, label %if.then43, label %if.end44, !dbg !10062

if.then43:                                        ; preds = %lor.lhs.false41, %for.end39
  br label %if.end68, !dbg !10063

if.end44:                                         ; preds = %lor.lhs.false41
  %39 = load i8*, i8** %next, align 8, !dbg !10065
  %40 = load i8*, i8** %first, align 8, !dbg !10066
  %sub.ptr.lhs.cast = ptrtoint i8* %39 to i64, !dbg !10067
  %sub.ptr.rhs.cast = ptrtoint i8* %40 to i64, !dbg !10067
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10067
  store i64 %sub.ptr.sub, i64* @argv_lth, align 8, !dbg !10068
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !10069
  store i8** %41, i8*** @argv0, align 8, !dbg !10070
  %42 = load i8**, i8*** @environ, align 8, !dbg !10071
  %cmp45 = icmp ne i8** %42, null, !dbg !10073
  br i1 %cmp45, label %if.then46, label %if.end68, !dbg !10074

if.then46:                                        ; preds = %if.end44
  call void @llvm.dbg.declare(metadata i8*** %new_environ, metadata !10075, metadata !DIExpression()), !dbg !10077
  call void @llvm.dbg.declare(metadata i32* %env_nb, metadata !10078, metadata !DIExpression()), !dbg !10079
  store i32 0, i32* %env_nb, align 4, !dbg !10079
  br label %while.cond, !dbg !10080

while.cond:                                       ; preds = %while.body, %if.then46
  %43 = load i8**, i8*** @environ, align 8, !dbg !10081
  %44 = load i32, i32* %env_nb, align 4, !dbg !10082
  %idxprom47 = zext i32 %44 to i64, !dbg !10081
  %arrayidx48 = getelementptr i8*, i8** %43, i64 %idxprom47, !dbg !10081
  %45 = load i8*, i8** %arrayidx48, align 8, !dbg !10081
  %cmp49 = icmp ne i8* %45, null, !dbg !10083
  br i1 %cmp49, label %while.body, label %while.end, !dbg !10080

while.body:                                       ; preds = %while.cond
  %46 = load i32, i32* %env_nb, align 4, !dbg !10084
  %inc50 = add i32 %46, 1, !dbg !10084
  store i32 %inc50, i32* %env_nb, align 4, !dbg !10084
  br label %while.cond, !dbg !10080, !llvm.loop !10086

while.end:                                        ; preds = %while.cond
  %47 = load i32, i32* %env_nb, align 4, !dbg !10088
  %add = add i32 1, %47, !dbg !10090
  %conv = zext i32 %add to i64, !dbg !10091
  %mul = mul i64 %conv, 8, !dbg !10092
  %call51 = call noalias i8* @malloc(i64 %mul) #7, !dbg !10093
  %48 = bitcast i8* %call51 to i8**, !dbg !10093
  store i8** %48, i8*** %new_environ, align 8, !dbg !10094
  %cmp52 = icmp eq i8** %48, null, !dbg !10095
  br i1 %cmp52, label %if.then54, label %if.end55, !dbg !10096

if.then54:                                        ; preds = %while.end
  call void @abort() #13, !dbg !10097
  unreachable, !dbg !10097

if.end55:                                         ; preds = %while.end
  %49 = load i8**, i8*** %new_environ, align 8, !dbg !10099
  %50 = load i32, i32* %env_nb, align 4, !dbg !10100
  %idxprom56 = zext i32 %50 to i64, !dbg !10099
  %arrayidx57 = getelementptr i8*, i8** %49, i64 %idxprom56, !dbg !10099
  store i8* null, i8** %arrayidx57, align 8, !dbg !10101
  br label %while.cond58, !dbg !10102

while.cond58:                                     ; preds = %while.body61, %if.end55
  %51 = load i32, i32* %env_nb, align 4, !dbg !10103
  %cmp59 = icmp ugt i32 %51, 0, !dbg !10104
  br i1 %cmp59, label %while.body61, label %while.end67, !dbg !10102

while.body61:                                     ; preds = %while.cond58
  %52 = load i32, i32* %env_nb, align 4, !dbg !10105
  %dec = add i32 %52, -1, !dbg !10105
  store i32 %dec, i32* %env_nb, align 4, !dbg !10105
  %53 = load i8**, i8*** @environ, align 8, !dbg !10107
  %54 = load i32, i32* %env_nb, align 4, !dbg !10108
  %idxprom62 = zext i32 %54 to i64, !dbg !10107
  %arrayidx63 = getelementptr i8*, i8** %53, i64 %idxprom62, !dbg !10107
  %55 = load i8*, i8** %arrayidx63, align 8, !dbg !10107
  %call64 = call noalias i8* @strdup(i8* %55) #7, !dbg !10109
  %56 = load i8**, i8*** %new_environ, align 8, !dbg !10110
  %57 = load i32, i32* %env_nb, align 4, !dbg !10111
  %idxprom65 = zext i32 %57 to i64, !dbg !10110
  %arrayidx66 = getelementptr i8*, i8** %56, i64 %idxprom65, !dbg !10110
  store i8* %call64, i8** %arrayidx66, align 8, !dbg !10112
  br label %while.cond58, !dbg !10102, !llvm.loop !10113

while.end67:                                      ; preds = %while.cond58
  %58 = load i8**, i8*** %new_environ, align 8, !dbg !10115
  store i8** %58, i8*** @environ, align 8, !dbg !10116
  br label %if.end68, !dbg !10117

if.end68:                                         ; preds = %if.then43, %while.end67, %if.end44
  ret void, !dbg !10118
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal void @check_ipv6_support() #0 !dbg !10119 {
entry:
  %p = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p, metadata !10120, metadata !DIExpression()), !dbg !10121
  %call = call i32 @socket(i32 10, i32 1, i32 6) #7, !dbg !10122
  store i32 %call, i32* %p, align 4, !dbg !10124
  %cmp = icmp ne i32 %call, -1, !dbg !10125
  br i1 %cmp, label %if.then, label %if.end, !dbg !10126

if.then:                                          ; preds = %entry
  %0 = load i32, i32* %p, align 4, !dbg !10127
  %call1 = call i32 @close(i32 %0), !dbg !10129
  %1 = load i8, i8* @v6ready, align 1, !dbg !10130
  %inc = add i8 %1, 1, !dbg !10130
  store i8 %inc, i8* @v6ready, align 1, !dbg !10130
  br label %if.end, !dbg !10131

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !10132
}

declare void @__afl_manual_init() #9

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @check_standalone() #0 !dbg !10133 {
entry:
  %retval = alloca i32, align 4
  %socksize = alloca i32, align 4
  %agg.tmp = alloca %union.__SOCKADDR_ARG, align 8
  call void @llvm.dbg.declare(metadata i32* %socksize, metadata !10134, metadata !DIExpression()), !dbg !10135
  store i32 128, i32* %socksize, align 4, !dbg !10135
  %__sockaddr__ = bitcast %union.__SOCKADDR_ARG* %agg.tmp to %struct.sockaddr**, !dbg !10136
  store %struct.sockaddr* bitcast (%struct.sockaddr_storage* @ctrlconn to %struct.sockaddr*), %struct.sockaddr** %__sockaddr__, align 8, !dbg !10136
  %coerce.dive = getelementptr inbounds %union.__SOCKADDR_ARG, %union.__SOCKADDR_ARG* %agg.tmp, i32 0, i32 0, !dbg !10138
  %0 = load %struct.sockaddr*, %struct.sockaddr** %coerce.dive, align 8, !dbg !10138
  %call = call i32 @getsockname(i32 0, %struct.sockaddr* %0, i32* %socksize) #7, !dbg !10138
  %cmp = icmp ne i32 %call, 0, !dbg !10139
  br i1 %cmp, label %if.then, label %if.end, !dbg !10140

if.then:                                          ; preds = %entry
  store i32 -1, i32* @clientfd, align 4, !dbg !10141
  store i32 1, i32* %retval, align 4, !dbg !10143
  br label %return, !dbg !10143

if.end:                                           ; preds = %entry
  %call1 = call i32 @dup2(i32 0, i32 1) #7, !dbg !10144
  %cmp2 = icmp eq i32 %call1, -1, !dbg !10146
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !10147

if.then3:                                         ; preds = %if.end
  call void @_EXIT(i32 1) #11, !dbg !10148
  unreachable, !dbg !10148

if.end4:                                          ; preds = %if.end
  store i32 0, i32* @clientfd, align 4, !dbg !10150
  store i32 0, i32* %retval, align 4, !dbg !10151
  br label %return, !dbg !10151

return:                                           ; preds = %if.end4, %if.then
  %1 = load i32, i32* %retval, align 4, !dbg !10152
  ret i32 %1, !dbg !10152
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal void @standalone_server() #0 !dbg !10153 {
entry:
  %on = alloca i32, align 4
  %hints = alloca %struct.addrinfo, align 8
  %res = alloca %struct.addrinfo*, align 8
  %res6 = alloca %struct.addrinfo*, align 8
  %rs = alloca %struct.__sigset_t, align 8
  %max_fd = alloca i32, align 4
  %old_errno = alloca i32, align 4
  %tfo = alloca i32, align 4
  %agg.tmp = alloca %union.__SOCKADDR_ARG, align 8
  %tfo51 = alloca i32, align 4
  %agg.tmp61 = alloca %union.__SOCKADDR_ARG, align 8
  %__d0 = alloca i32, align 4
  %__d1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %on, metadata !10154, metadata !DIExpression()), !dbg !10155
  call void @llvm.dbg.declare(metadata %struct.addrinfo* %hints, metadata !10156, metadata !DIExpression()), !dbg !10169
  call void @llvm.dbg.declare(metadata %struct.addrinfo** %res, metadata !10170, metadata !DIExpression()), !dbg !10171
  call void @llvm.dbg.declare(metadata %struct.addrinfo** %res6, metadata !10172, metadata !DIExpression()), !dbg !10173
  call void @llvm.dbg.declare(metadata %struct.__sigset_t* %rs, metadata !10174, metadata !DIExpression()), !dbg !10180
  call void @llvm.dbg.declare(metadata i32* %max_fd, metadata !10181, metadata !DIExpression()), !dbg !10182
  store i8 1, i8* @standalone, align 1, !dbg !10183
  %0 = bitcast %struct.addrinfo* %hints to i8*, !dbg !10184
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 48, i1 false), !dbg !10184
  %ai_flags = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %hints, i32 0, i32 0, !dbg !10185
  store i32 1, i32* %ai_flags, align 8, !dbg !10186
  %ai_family = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %hints, i32 0, i32 1, !dbg !10187
  store i32 2, i32* %ai_family, align 4, !dbg !10188
  %ai_socktype = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %hints, i32 0, i32 2, !dbg !10189
  store i32 1, i32* %ai_socktype, align 8, !dbg !10190
  %ai_addr = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %hints, i32 0, i32 5, !dbg !10191
  store %struct.sockaddr* null, %struct.sockaddr** %ai_addr, align 8, !dbg !10192
  store i32 1, i32* %on, align 4, !dbg !10193
  %1 = load volatile i32, i32* @listenfd, align 4, !dbg !10194
  %cmp = icmp eq i32 %1, -1, !dbg !10196
  br i1 %cmp, label %land.lhs.true, label %if.end28, !dbg !10197

land.lhs.true:                                    ; preds = %entry
  %2 = load i8, i8* @no_ipv4, align 1, !dbg !10198
  %conv = sext i8 %2 to i32, !dbg !10198
  %cmp1 = icmp eq i32 %conv, 0, !dbg !10199
  br i1 %cmp1, label %land.lhs.true3, label %if.end28, !dbg !10200

land.lhs.true3:                                   ; preds = %land.lhs.true
  %3 = load i8*, i8** @standalone_ip, align 8, !dbg !10201
  %4 = load i8*, i8** @standalone_port, align 8, !dbg !10202
  %call = call i32 @getaddrinfo(i8* %3, i8* %4, %struct.addrinfo* %hints, %struct.addrinfo** %res), !dbg !10203
  %cmp4 = icmp eq i32 %call, 0, !dbg !10204
  br i1 %cmp4, label %if.then, label %if.end28, !dbg !10205

if.then:                                          ; preds = %land.lhs.true3
  %call6 = call i32 @socket(i32 2, i32 1, i32 6) #7, !dbg !10206
  store volatile i32 %call6, i32* @listenfd, align 4, !dbg !10209
  %cmp7 = icmp eq i32 %call6, -1, !dbg !10210
  br i1 %cmp7, label %if.then12, label %lor.lhs.false, !dbg !10211

lor.lhs.false:                                    ; preds = %if.then
  %5 = load volatile i32, i32* @listenfd, align 4, !dbg !10212
  %6 = bitcast i32* %on to i8*, !dbg !10213
  %call9 = call i32 @setsockopt(i32 %5, i32 1, i32 2, i8* %6, i32 4) #7, !dbg !10214
  %cmp10 = icmp ne i32 %call9, 0, !dbg !10215
  br i1 %cmp10, label %if.then12, label %if.end, !dbg !10216

if.then12:                                        ; preds = %lor.lhs.false, %if.then
  call void @llvm.dbg.declare(metadata i32* %old_errno, metadata !10217, metadata !DIExpression()), !dbg !10219
  %7 = load %struct.addrinfo*, %struct.addrinfo** %res, align 8, !dbg !10220
  call void @freeaddrinfo(%struct.addrinfo* %7) #7, !dbg !10221
  br label %cant_bind, !dbg !10221

cant_bind:                                        ; preds = %if.then90, %if.then81, %if.then48, %if.then26, %if.then12
  call void @llvm.dbg.label(metadata !10222), !dbg !10223
  %call13 = call i32* @__errno_location() #14, !dbg !10224
  %8 = load i32, i32* %call13, align 4, !dbg !10224
  store i32 %8, i32* %old_errno, align 4, !dbg !10225
  call void @perror(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.446, i64 0, i64 0)), !dbg !10226
  %9 = load i32, i32* %old_errno, align 4, !dbg !10227
  %call14 = call i8* @strerror(i32 %9) #7, !dbg !10228
  call void (i32, i8*, ...) @logfile(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.447, i64 0, i64 0), i8* %call14), !dbg !10229
  br label %while.end, !dbg !10230

if.end:                                           ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i32* %tfo, metadata !10231, metadata !DIExpression()), !dbg !10233
  store i32 5, i32* %tfo, align 4, !dbg !10233
  %10 = load volatile i32, i32* @listenfd, align 4, !dbg !10234
  %11 = bitcast i32* %tfo to i8*, !dbg !10235
  %call15 = call i32 @setsockopt(i32 %10, i32 6, i32 23, i8* %11, i32 4) #7, !dbg !10236
  %12 = load volatile i32, i32* @listenfd, align 4, !dbg !10237
  %__sockaddr__ = bitcast %union.__SOCKADDR_ARG* %agg.tmp to %struct.sockaddr**, !dbg !10239
  %13 = load %struct.addrinfo*, %struct.addrinfo** %res, align 8, !dbg !10239
  %ai_addr16 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %13, i32 0, i32 5, !dbg !10240
  %14 = load %struct.sockaddr*, %struct.sockaddr** %ai_addr16, align 8, !dbg !10240
  store %struct.sockaddr* %14, %struct.sockaddr** %__sockaddr__, align 8, !dbg !10239
  %15 = load %struct.addrinfo*, %struct.addrinfo** %res, align 8, !dbg !10241
  %ai_addrlen = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %15, i32 0, i32 4, !dbg !10242
  %16 = load i32, i32* %ai_addrlen, align 8, !dbg !10242
  %coerce.dive = getelementptr inbounds %union.__SOCKADDR_ARG, %union.__SOCKADDR_ARG* %agg.tmp, i32 0, i32 0, !dbg !10243
  %17 = load %struct.sockaddr*, %struct.sockaddr** %coerce.dive, align 8, !dbg !10243
  %call17 = call i32 @bind(i32 %12, %struct.sockaddr* %17, i32 %16) #7, !dbg !10243
  %cmp18 = icmp ne i32 %call17, 0, !dbg !10244
  br i1 %cmp18, label %if.then26, label %lor.lhs.false20, !dbg !10245

lor.lhs.false20:                                  ; preds = %if.end
  %18 = load volatile i32, i32* @listenfd, align 4, !dbg !10246
  %19 = load i32, i32* @maxusers, align 4, !dbg !10247
  %cmp21 = icmp ugt i32 %19, 0, !dbg !10248
  br i1 %cmp21, label %cond.true, label %cond.false, !dbg !10247

cond.true:                                        ; preds = %lor.lhs.false20
  %20 = load i32, i32* @maxusers, align 4, !dbg !10249
  %div = udiv i32 %20, 8, !dbg !10250
  %add = add i32 3, %div, !dbg !10251
  br label %cond.end, !dbg !10247

cond.false:                                       ; preds = %lor.lhs.false20
  br label %cond.end, !dbg !10247

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add, %cond.true ], [ 42, %cond.false ], !dbg !10247
  %call23 = call i32 @listen(i32 %18, i32 %cond) #7, !dbg !10252
  %cmp24 = icmp ne i32 %call23, 0, !dbg !10253
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !10254

if.then26:                                        ; preds = %cond.end, %if.end
  %21 = load %struct.addrinfo*, %struct.addrinfo** %res, align 8, !dbg !10255
  call void @freeaddrinfo(%struct.addrinfo* %21) #7, !dbg !10257
  br label %cant_bind, !dbg !10258

if.end27:                                         ; preds = %cond.end
  %22 = load %struct.addrinfo*, %struct.addrinfo** %res, align 8, !dbg !10259
  call void @freeaddrinfo(%struct.addrinfo* %22) #7, !dbg !10260
  %23 = load volatile i32, i32* @listenfd, align 4, !dbg !10261
  call void @set_cloexec_flag(i32 %23), !dbg !10262
  br label %if.end28, !dbg !10263

if.end28:                                         ; preds = %if.end27, %land.lhs.true3, %land.lhs.true, %entry
  %24 = load volatile i32, i32* @listenfd6, align 4, !dbg !10264
  %cmp29 = icmp eq i32 %24, -1, !dbg !10266
  br i1 %cmp29, label %land.lhs.true31, label %if.end84, !dbg !10267

land.lhs.true31:                                  ; preds = %if.end28
  %25 = load i8, i8* @v6ready, align 1, !dbg !10268
  %conv32 = sext i8 %25 to i32, !dbg !10268
  %cmp33 = icmp ne i32 %conv32, 0, !dbg !10269
  br i1 %cmp33, label %if.then35, label %if.end84, !dbg !10270

if.then35:                                        ; preds = %land.lhs.true31
  %ai_family36 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %hints, i32 0, i32 1, !dbg !10271
  store i32 10, i32* %ai_family36, align 4, !dbg !10273
  %26 = load i8*, i8** @standalone_ip, align 8, !dbg !10274
  %27 = load i8*, i8** @standalone_port, align 8, !dbg !10276
  %call37 = call i32 @getaddrinfo(i8* %26, i8* %27, %struct.addrinfo* %hints, %struct.addrinfo** %res6), !dbg !10277
  %cmp38 = icmp eq i32 %call37, 0, !dbg !10278
  br i1 %cmp38, label %if.then40, label %if.end83, !dbg !10279

if.then40:                                        ; preds = %if.then35
  %call41 = call i32 @socket(i32 10, i32 1, i32 6) #7, !dbg !10280
  store volatile i32 %call41, i32* @listenfd6, align 4, !dbg !10283
  %cmp42 = icmp eq i32 %call41, -1, !dbg !10284
  br i1 %cmp42, label %if.then48, label %lor.lhs.false44, !dbg !10285

lor.lhs.false44:                                  ; preds = %if.then40
  %28 = load volatile i32, i32* @listenfd6, align 4, !dbg !10286
  %29 = bitcast i32* %on to i8*, !dbg !10287
  %call45 = call i32 @setsockopt(i32 %28, i32 1, i32 2, i8* %29, i32 4) #7, !dbg !10288
  %cmp46 = icmp ne i32 %call45, 0, !dbg !10289
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !10290

if.then48:                                        ; preds = %lor.lhs.false44, %if.then40
  %30 = load %struct.addrinfo*, %struct.addrinfo** %res6, align 8, !dbg !10291
  call void @freeaddrinfo(%struct.addrinfo* %30) #7, !dbg !10293
  br label %cant_bind, !dbg !10294

if.end49:                                         ; preds = %lor.lhs.false44
  %31 = load volatile i32, i32* @listenfd6, align 4, !dbg !10295
  %32 = bitcast i32* %on to i8*, !dbg !10296
  %call50 = call i32 @setsockopt(i32 %31, i32 41, i32 26, i8* %32, i32 4) #7, !dbg !10297
  call void @llvm.dbg.declare(metadata i32* %tfo51, metadata !10298, metadata !DIExpression()), !dbg !10300
  %33 = load i32, i32* @maxusers, align 4, !dbg !10301
  %cmp52 = icmp ugt i32 %33, 0, !dbg !10302
  br i1 %cmp52, label %cond.true54, label %cond.false57, !dbg !10301

cond.true54:                                      ; preds = %if.end49
  %34 = load i32, i32* @maxusers, align 4, !dbg !10303
  %div55 = udiv i32 %34, 8, !dbg !10304
  %add56 = add i32 3, %div55, !dbg !10305
  br label %cond.end58, !dbg !10301

cond.false57:                                     ; preds = %if.end49
  br label %cond.end58, !dbg !10301

cond.end58:                                       ; preds = %cond.false57, %cond.true54
  %cond59 = phi i32 [ %add56, %cond.true54 ], [ 42, %cond.false57 ], !dbg !10301
  store i32 %cond59, i32* %tfo51, align 4, !dbg !10300
  %35 = load volatile i32, i32* @listenfd6, align 4, !dbg !10306
  %36 = bitcast i32* %tfo51 to i8*, !dbg !10307
  %call60 = call i32 @setsockopt(i32 %35, i32 6, i32 23, i8* %36, i32 4) #7, !dbg !10308
  %37 = load volatile i32, i32* @listenfd6, align 4, !dbg !10309
  %__sockaddr__62 = bitcast %union.__SOCKADDR_ARG* %agg.tmp61 to %struct.sockaddr**, !dbg !10311
  %38 = load %struct.addrinfo*, %struct.addrinfo** %res6, align 8, !dbg !10311
  %ai_addr63 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %38, i32 0, i32 5, !dbg !10312
  %39 = load %struct.sockaddr*, %struct.sockaddr** %ai_addr63, align 8, !dbg !10312
  store %struct.sockaddr* %39, %struct.sockaddr** %__sockaddr__62, align 8, !dbg !10311
  %40 = load %struct.addrinfo*, %struct.addrinfo** %res6, align 8, !dbg !10313
  %ai_addrlen64 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %40, i32 0, i32 4, !dbg !10314
  %41 = load i32, i32* %ai_addrlen64, align 8, !dbg !10314
  %coerce.dive65 = getelementptr inbounds %union.__SOCKADDR_ARG, %union.__SOCKADDR_ARG* %agg.tmp61, i32 0, i32 0, !dbg !10315
  %42 = load %struct.sockaddr*, %struct.sockaddr** %coerce.dive65, align 8, !dbg !10315
  %call66 = call i32 @bind(i32 %37, %struct.sockaddr* %42, i32 %41) #7, !dbg !10315
  %cmp67 = icmp ne i32 %call66, 0, !dbg !10316
  br i1 %cmp67, label %if.then81, label %lor.lhs.false69, !dbg !10317

lor.lhs.false69:                                  ; preds = %cond.end58
  %43 = load volatile i32, i32* @listenfd6, align 4, !dbg !10318
  %44 = load i32, i32* @maxusers, align 4, !dbg !10319
  %cmp70 = icmp ugt i32 %44, 0, !dbg !10320
  br i1 %cmp70, label %cond.true72, label %cond.false75, !dbg !10319

cond.true72:                                      ; preds = %lor.lhs.false69
  %45 = load i32, i32* @maxusers, align 4, !dbg !10321
  %div73 = udiv i32 %45, 8, !dbg !10322
  %add74 = add i32 3, %div73, !dbg !10323
  br label %cond.end76, !dbg !10319

cond.false75:                                     ; preds = %lor.lhs.false69
  br label %cond.end76, !dbg !10319

cond.end76:                                       ; preds = %cond.false75, %cond.true72
  %cond77 = phi i32 [ %add74, %cond.true72 ], [ 42, %cond.false75 ], !dbg !10319
  %call78 = call i32 @listen(i32 %43, i32 %cond77) #7, !dbg !10324
  %cmp79 = icmp ne i32 %call78, 0, !dbg !10325
  br i1 %cmp79, label %if.then81, label %if.end82, !dbg !10326

if.then81:                                        ; preds = %cond.end76, %cond.end58
  %46 = load %struct.addrinfo*, %struct.addrinfo** %res6, align 8, !dbg !10327
  call void @freeaddrinfo(%struct.addrinfo* %46) #7, !dbg !10329
  br label %cant_bind, !dbg !10330

if.end82:                                         ; preds = %cond.end76
  %47 = load %struct.addrinfo*, %struct.addrinfo** %res6, align 8, !dbg !10331
  call void @freeaddrinfo(%struct.addrinfo* %47) #7, !dbg !10332
  %48 = load volatile i32, i32* @listenfd6, align 4, !dbg !10333
  call void @set_cloexec_flag(i32 %48), !dbg !10334
  br label %if.end83, !dbg !10335

if.end83:                                         ; preds = %if.end82, %if.then35
  br label %if.end84, !dbg !10336

if.end84:                                         ; preds = %if.end83, %land.lhs.true31, %if.end28
  %49 = load volatile i32, i32* @listenfd, align 4, !dbg !10337
  %cmp85 = icmp eq i32 %49, -1, !dbg !10339
  br i1 %cmp85, label %land.lhs.true87, label %if.end92, !dbg !10340

land.lhs.true87:                                  ; preds = %if.end84
  %50 = load volatile i32, i32* @listenfd6, align 4, !dbg !10341
  %cmp88 = icmp eq i32 %50, -1, !dbg !10342
  br i1 %cmp88, label %if.then90, label %if.end92, !dbg !10343

if.then90:                                        ; preds = %land.lhs.true87
  %call91 = call i32* @__errno_location() #14, !dbg !10344
  store i32 99, i32* %call91, align 4, !dbg !10346
  br label %cant_bind, !dbg !10347

if.end92:                                         ; preds = %land.lhs.true87, %if.end84
  call void @updatepidfile(), !dbg !10348
  call void @setprocessname(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.448, i64 0, i64 0)), !dbg !10349
  br label %do.body, !dbg !10350

do.body:                                          ; preds = %if.end92
  call void @llvm.dbg.declare(metadata i32* %__d0, metadata !10351, metadata !DIExpression()), !dbg !10353
  call void @llvm.dbg.declare(metadata i32* %__d1, metadata !10354, metadata !DIExpression()), !dbg !10353
  %fds_bits = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %rs, i32 0, i32 0, !dbg !10353
  %arrayidx = getelementptr [16 x i64], [16 x i64]* %fds_bits, i64 0, i64 0, !dbg !10353
  %51 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %arrayidx) #7, !dbg !10353, !srcloc !10355
  %asmresult = extractvalue { i64, i64* } %51, 0, !dbg !10353
  %asmresult93 = extractvalue { i64, i64* } %51, 1, !dbg !10353
  %52 = trunc i64 %asmresult to i32, !dbg !10353
  store i32 %52, i32* %__d0, align 4, !dbg !10353
  %53 = ptrtoint i64* %asmresult93 to i64, !dbg !10353
  %54 = trunc i64 %53 to i32, !dbg !10353
  store i32 %54, i32* %__d1, align 4, !dbg !10353
  br label %do.end, !dbg !10353

do.end:                                           ; preds = %do.body
  %55 = load volatile i32, i32* @listenfd, align 4, !dbg !10356
  %56 = load volatile i32, i32* @listenfd6, align 4, !dbg !10358
  %cmp94 = icmp sgt i32 %55, %56, !dbg !10359
  br i1 %cmp94, label %if.then96, label %if.else, !dbg !10360

if.then96:                                        ; preds = %do.end
  %57 = load volatile i32, i32* @listenfd, align 4, !dbg !10361
  store i32 %57, i32* %max_fd, align 4, !dbg !10363
  br label %if.end97, !dbg !10364

if.else:                                          ; preds = %do.end
  %58 = load volatile i32, i32* @listenfd6, align 4, !dbg !10365
  store i32 %58, i32* %max_fd, align 4, !dbg !10367
  br label %if.end97

if.end97:                                         ; preds = %if.else, %if.then96
  %59 = load i32, i32* %max_fd, align 4, !dbg !10368
  %inc = add i32 %59, 1, !dbg !10368
  store i32 %inc, i32* %max_fd, align 4, !dbg !10368
  br label %while.cond, !dbg !10369

while.cond:                                       ; preds = %while.body, %if.end97
  %60 = load volatile i32, i32* @stop_server, align 4, !dbg !10370
  %cmp98 = icmp eq i32 %60, 0, !dbg !10371
  br i1 %cmp98, label %while.body, label %while.end, !dbg !10369

while.body:                                       ; preds = %while.cond
  %61 = load volatile i32, i32* @listenfd, align 4, !dbg !10372
  call void @safe_fd_set(i32 %61, %struct.__sigset_t* %rs), !dbg !10374
  %62 = load volatile i32, i32* @listenfd6, align 4, !dbg !10375
  call void @safe_fd_set(i32 %62, %struct.__sigset_t* %rs), !dbg !10376
  %63 = load volatile i32, i32* @listenfd, align 4, !dbg !10377
  call void @accept_client(i32 %63), !dbg !10378
  br label %while.cond, !dbg !10379, !llvm.loop !10380

while.end:                                        ; preds = %cant_bind, %while.cond
  ret void, !dbg !10382
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal void @doit() #0 !dbg !10383 {
entry:
  %socksize = alloca i32, align 4
  %users = alloca i32, align 4
  %display_banner = alloca i32, align 4
  %eai = alloca i32, align 4
  %load_ = alloca [2 x double], align 16
  %t = alloca %struct.tm*, align 8
  %hints = alloca %struct.addrinfo, align 8
  %res = alloca %struct.addrinfo*, align 8
  call void @llvm.dbg.declare(metadata i32* %socksize, metadata !10384, metadata !DIExpression()), !dbg !10385
  call void @llvm.dbg.declare(metadata i32* %users, metadata !10386, metadata !DIExpression()), !dbg !10387
  store i32 0, i32* %users, align 4, !dbg !10387
  call void @llvm.dbg.declare(metadata i32* %display_banner, metadata !10388, metadata !DIExpression()), !dbg !10389
  store i32 1, i32* %display_banner, align 4, !dbg !10389
  call void @client_init_reply_buf(), !dbg !10390
  %call = call i64 @time(i64* null) #7, !dbg !10391
  store i64 %call, i64* @session_start_time, align 8, !dbg !10392
  call void @fixlimits(), !dbg !10393
  %0 = load i32, i32* @clientfd, align 4, !dbg !10394
  %call1 = call i32 @getpid() #7, !dbg !10395
  %call2 = call i32 (i32, i32, ...) @fcntl(i32 %0, i32 8, i32 %call1), !dbg !10396
  call void @set_signals_client(), !dbg !10397
  call void @alt_arc4random_stir(), !dbg !10398
  %call3 = call i32 @umask(i32 0) #7, !dbg !10399
  store i32 128, i32* %socksize, align 4, !dbg !10400
  call void @fourinsix(%struct.sockaddr_storage* @ctrlconn), !dbg !10401
  %call4 = call i32 @checkvalidaddr(%struct.sockaddr_storage* @ctrlconn), !dbg !10402
  %cmp = icmp eq i32 %call4, 0, !dbg !10404
  br i1 %cmp, label %if.then, label %if.end, !dbg !10405

if.then:                                          ; preds = %entry
  call void (i32, i32, i8*, ...) @die(i32 425, i32 3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.453, i64 0, i64 0)) #11, !dbg !10406
  unreachable, !dbg !10406

if.end:                                           ; preds = %entry
  %1 = load i16, i16* getelementptr inbounds (%struct.sockaddr_storage, %struct.sockaddr_storage* @ctrlconn, i32 0, i32 0), align 8, !dbg !10408
  %conv = zext i16 %1 to i32, !dbg !10408
  %cmp5 = icmp eq i32 %conv, 10, !dbg !10410
  br i1 %cmp5, label %if.then7, label %if.else, !dbg !10411

if.then7:                                         ; preds = %if.end
  %call8 = call i16* @storage_port6_const(%struct.sockaddr_storage* @ctrlconn), !dbg !10412
  %2 = load i16, i16* %call8, align 2, !dbg !10412
  %call9 = call zeroext i16 @ntohs(i16 zeroext %2) #14, !dbg !10414
  store i16 %call9, i16* @serverport, align 2, !dbg !10415
  br label %if.end12, !dbg !10416

if.else:                                          ; preds = %if.end
  %call10 = call i16* @storage_port_const(%struct.sockaddr_storage* @ctrlconn), !dbg !10417
  %3 = load i16, i16* %call10, align 2, !dbg !10417
  %call11 = call zeroext i16 @ntohs(i16 zeroext %3) #14, !dbg !10419
  store i16 %call11, i16* @serverport, align 2, !dbg !10420
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then7
  %4 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** @trustedip, align 8, !dbg !10421
  %cmp13 = icmp ne %struct.sockaddr_storage* %4, null, !dbg !10423
  br i1 %cmp13, label %land.lhs.true, label %if.end19, !dbg !10424

land.lhs.true:                                    ; preds = %if.end12
  %5 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** @trustedip, align 8, !dbg !10425
  %call15 = call i32 @addrcmp(%struct.sockaddr_storage* @ctrlconn, %struct.sockaddr_storage* %5), !dbg !10426
  %cmp16 = icmp ne i32 %call15, 0, !dbg !10427
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !10428

if.then18:                                        ; preds = %land.lhs.true
  store i8 1, i8* @anon_only, align 1, !dbg !10429
  br label %if.end19, !dbg !10431

if.end19:                                         ; preds = %if.then18, %land.lhs.true, %if.end12
  store i32 128, i32* %socksize, align 4, !dbg !10432
  call void @fourinsix(%struct.sockaddr_storage* @peer), !dbg !10433
  %call20 = call i32 @checkvalidaddr(%struct.sockaddr_storage* @peer), !dbg !10434
  %cmp21 = icmp eq i32 %call20, 0, !dbg !10436
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !10437

if.then23:                                        ; preds = %if.end19
  call void (i32, i32, i8*, ...) @die(i32 425, i32 3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.453, i64 0, i64 0)) #11, !dbg !10438
  unreachable, !dbg !10438

if.end24:                                         ; preds = %if.end19
  br label %for.cond, !dbg !10440

for.cond:                                         ; preds = %if.end24
  call void @llvm.dbg.declare(metadata i32* %eai, metadata !10441, metadata !DIExpression()), !dbg !10445
  %6 = load i16, i16* getelementptr inbounds (%struct.sockaddr_storage, %struct.sockaddr_storage* @peer, i32 0, i32 0), align 8, !dbg !10446
  %conv25 = zext i16 %6 to i32, !dbg !10446
  %cmp26 = icmp eq i32 %conv25, 2, !dbg !10446
  %7 = zext i1 %cmp26 to i64, !dbg !10446
  %cond = select i1 %cmp26, i64 16, i64 28, !dbg !10446
  %conv28 = trunc i64 %cond to i32, !dbg !10446
  %8 = load i8, i8* @resolve_hostnames, align 1, !dbg !10448
  %conv29 = sext i8 %8 to i32, !dbg !10448
  %cmp30 = icmp ne i32 %conv29, 0, !dbg !10449
  %9 = zext i1 %cmp30 to i64, !dbg !10448
  %cond32 = select i1 %cmp30, i32 0, i32 1, !dbg !10448
  %call33 = call i32 @getnameinfo(%struct.sockaddr* bitcast (%struct.sockaddr_storage* @peer to %struct.sockaddr*), i32 %conv28, i8* getelementptr inbounds ([1025 x i8], [1025 x i8]* @host, i64 0, i64 0), i32 1025, i8* null, i32 0, i32 %cond32), !dbg !10450
  store i32 %call33, i32* %eai, align 4, !dbg !10451
  %cmp34 = icmp eq i32 %call33, 0, !dbg !10452
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !10453

if.then36:                                        ; preds = %for.cond
  br label %for.end, !dbg !10454

if.end37:                                         ; preds = %for.cond
  %10 = load i8, i8* @resolve_hostnames, align 1, !dbg !10456
  %conv38 = sext i8 %10 to i32, !dbg !10456
  %cmp39 = icmp ne i32 %conv38, 0, !dbg !10458
  br i1 %cmp39, label %land.lhs.true41, label %if.end51, !dbg !10459

land.lhs.true41:                                  ; preds = %if.end37
  %11 = load i16, i16* getelementptr inbounds (%struct.sockaddr_storage, %struct.sockaddr_storage* @peer, i32 0, i32 0), align 8, !dbg !10460
  %conv42 = zext i16 %11 to i32, !dbg !10460
  %cmp43 = icmp eq i32 %conv42, 2, !dbg !10460
  %12 = zext i1 %cmp43 to i64, !dbg !10460
  %cond45 = select i1 %cmp43, i64 16, i64 28, !dbg !10460
  %conv46 = trunc i64 %cond45 to i32, !dbg !10460
  %call47 = call i32 @getnameinfo(%struct.sockaddr* bitcast (%struct.sockaddr_storage* @peer to %struct.sockaddr*), i32 %conv46, i8* getelementptr inbounds ([1025 x i8], [1025 x i8]* @host, i64 0, i64 0), i32 1025, i8* null, i32 0, i32 1), !dbg !10461
  %cmp48 = icmp eq i32 %call47, 0, !dbg !10462
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !10463

if.then50:                                        ; preds = %land.lhs.true41
  br label %for.end, !dbg !10464

if.end51:                                         ; preds = %land.lhs.true41, %if.end37
  call void (i32, i32, i8*, ...) @die(i32 425, i32 3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.453, i64 0, i64 0)) #11, !dbg !10466
  unreachable, !dbg !10466

for.end:                                          ; preds = %if.then50, %if.then36
  call void @dns_sanitize(i8* getelementptr inbounds ([1025 x i8], [1025 x i8]* @host, i64 0, i64 0)), !dbg !10467
  call void (i32, i8*, ...) @logfile(i32 6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.454, i64 0, i64 0), i8* getelementptr inbounds ([1025 x i8], [1025 x i8]* @host, i64 0, i64 0)), !dbg !10468
  store i32 220, i32* @replycode, align 4, !dbg !10469
  call void @fill_atomic_prefix(), !dbg !10470
  %13 = load i32, i32* @maxusers, align 4, !dbg !10471
  %cmp52 = icmp ugt i32 %13, 0, !dbg !10473
  br i1 %cmp52, label %if.then54, label %if.end64, !dbg !10474

if.then54:                                        ; preds = %for.end
  %14 = load i8, i8* @standalone, align 1, !dbg !10475
  %tobool = icmp ne i8 %14, 0, !dbg !10475
  br i1 %tobool, label %if.then55, label %if.else56, !dbg !10478

if.then55:                                        ; preds = %if.then54
  %15 = load volatile i32, i32* @nb_children, align 4, !dbg !10479
  store i32 %15, i32* %users, align 4, !dbg !10481
  br label %if.end58, !dbg !10482

if.else56:                                        ; preds = %if.then54
  %16 = load i16, i16* @serverport, align 2, !dbg !10483
  %call57 = call i32 @daemons(i16 zeroext %16), !dbg !10485
  store i32 %call57, i32* %users, align 4, !dbg !10486
  br label %if.end58

if.end58:                                         ; preds = %if.else56, %if.then55
  %17 = load i32, i32* %users, align 4, !dbg !10487
  %18 = load i32, i32* @maxusers, align 4, !dbg !10489
  %cmp59 = icmp ugt i32 %17, %18, !dbg !10490
  br i1 %cmp59, label %if.then61, label %if.end63, !dbg !10491

if.then61:                                        ; preds = %if.end58
  %19 = load i32, i32* @maxusers, align 4, !dbg !10492
  %conv62 = zext i32 %19 to i64, !dbg !10494
  call void (i32, i8*, ...) @addreply(i32 421, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.455, i64 0, i64 0), i64 %conv62), !dbg !10495
  call void @doreply(), !dbg !10496
  call void @_EXIT(i32 1) #11, !dbg !10497
  unreachable, !dbg !10497

if.end63:                                         ; preds = %if.end58
  br label %if.end64, !dbg !10498

if.end64:                                         ; preds = %if.end63, %for.end
  call void @llvm.dbg.declare(metadata [2 x double]* %load_, metadata !10499, metadata !DIExpression()), !dbg !10502
  %arraydecay = getelementptr inbounds [2 x double], [2 x double]* %load_, i64 0, i64 0, !dbg !10503
  %call65 = call i32 @getloadavg(double* %arraydecay, i32 2) #7, !dbg !10505
  %cmp66 = icmp slt i32 %call65, 0, !dbg !10506
  br i1 %cmp66, label %if.then68, label %if.else69, !dbg !10507

if.then68:                                        ; preds = %if.end64
  store double 0.000000e+00, double* @load, align 8, !dbg !10508
  br label %if.end70, !dbg !10510

if.else69:                                        ; preds = %if.end64
  %arrayidx = getelementptr [2 x double], [2 x double]* %load_, i64 0, i64 1, !dbg !10511
  %20 = load double, double* %arrayidx, align 8, !dbg !10511
  store double %20, double* @load, align 8, !dbg !10513
  br label %if.end70

if.end70:                                         ; preds = %if.else69, %if.then68
  store i8 47, i8* getelementptr inbounds ([4097 x i8], [4097 x i8]* @wd, i64 0, i64 0), align 16, !dbg !10514
  store i8 0, i8* getelementptr inbounds ([4097 x i8], [4097 x i8]* @wd, i64 0, i64 1), align 1, !dbg !10515
  %call71 = call i32 @chdir(i8* getelementptr inbounds ([4097 x i8], [4097 x i8]* @wd, i64 0, i64 0)) #7, !dbg !10516
  %tobool72 = icmp ne i32 %call71, 0, !dbg !10516
  br i1 %tobool72, label %if.then73, label %if.end74, !dbg !10518

if.then73:                                        ; preds = %if.end70
  call void @_EXIT(i32 1) #11, !dbg !10519
  unreachable, !dbg !10519

if.end74:                                         ; preds = %if.end70
  call void @srandom(i32 100) #7, !dbg !10521
  %21 = load i32, i32* %display_banner, align 4, !dbg !10522
  %tobool75 = icmp ne i32 %21, 0, !dbg !10522
  br i1 %tobool75, label %if.then76, label %if.end87, !dbg !10524

if.then76:                                        ; preds = %if.end74
  call void @addreply_noformat(i32 0, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.456, i64 0, i64 0)), !dbg !10525
  %22 = load i32, i32* %users, align 4, !dbg !10527
  %cmp77 = icmp ugt i32 %22, 0, !dbg !10529
  br i1 %cmp77, label %if.then79, label %if.end80, !dbg !10530

if.then79:                                        ; preds = %if.then76
  %23 = load i32, i32* %users, align 4, !dbg !10531
  %24 = load i32, i32* @maxusers, align 4, !dbg !10533
  call void (i32, i8*, ...) @addreply(i32 0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.457, i64 0, i64 0), i32 %23, i32 %24), !dbg !10534
  br label %if.end80, !dbg !10535

if.end80:                                         ; preds = %if.then79, %if.then76
  call void @llvm.dbg.declare(metadata %struct.tm** %t, metadata !10536, metadata !DIExpression()), !dbg !10538
  %call81 = call %struct.tm* @localtime(i64* @session_start_time) #7, !dbg !10539
  store %struct.tm* %call81, %struct.tm** %t, align 8, !dbg !10541
  %cmp82 = icmp ne %struct.tm* %call81, null, !dbg !10542
  br i1 %cmp82, label %if.then84, label %if.end86, !dbg !10543

if.then84:                                        ; preds = %if.end80
  %25 = load %struct.tm*, %struct.tm** %t, align 8, !dbg !10544
  %tm_hour = getelementptr inbounds %struct.tm, %struct.tm* %25, i32 0, i32 2, !dbg !10546
  %26 = load i32, i32* %tm_hour, align 8, !dbg !10546
  %27 = load %struct.tm*, %struct.tm** %t, align 8, !dbg !10547
  %tm_min = getelementptr inbounds %struct.tm, %struct.tm* %27, i32 0, i32 1, !dbg !10548
  %28 = load i32, i32* %tm_min, align 4, !dbg !10548
  %29 = load i16, i16* @serverport, align 2, !dbg !10549
  %conv85 = zext i16 %29 to i32, !dbg !10550
  call void (i32, i8*, ...) @addreply(i32 220, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.458, i64 0, i64 0), i32 %26, i32 %28, i32 %conv85), !dbg !10551
  br label %if.end86, !dbg !10552

if.end86:                                         ; preds = %if.then84, %if.end80
  br label %if.end87, !dbg !10553

if.end87:                                         ; preds = %if.end86, %if.end74
  %30 = load i8, i8* @anon_only, align 1, !dbg !10554
  %conv88 = sext i8 %30 to i32, !dbg !10554
  %cmp89 = icmp sgt i32 %conv88, 0, !dbg !10556
  br i1 %cmp89, label %if.then91, label %if.else92, !dbg !10557

if.then91:                                        ; preds = %if.end87
  call void @addreply_noformat(i32 220, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.459, i64 0, i64 0)), !dbg !10558
  br label %if.end98, !dbg !10560

if.else92:                                        ; preds = %if.end87
  %31 = load i8, i8* @anon_only, align 1, !dbg !10561
  %conv93 = sext i8 %31 to i32, !dbg !10561
  %cmp94 = icmp slt i32 %conv93, 0, !dbg !10563
  br i1 %cmp94, label %if.then96, label %if.end97, !dbg !10564

if.then96:                                        ; preds = %if.else92
  call void @addreply_noformat(i32 220, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.103, i64 0, i64 0)), !dbg !10565
  br label %if.end97, !dbg !10567

if.end97:                                         ; preds = %if.then96, %if.else92
  br label %if.end98

if.end98:                                         ; preds = %if.end97, %if.then91
  %32 = load i8, i8* @allowfxp, align 1, !dbg !10568
  %conv99 = sext i8 %32 to i32, !dbg !10568
  %cmp100 = icmp eq i32 %conv99, 2, !dbg !10570
  br i1 %cmp100, label %if.then102, label %if.end103, !dbg !10571

if.then102:                                       ; preds = %if.end98
  call void @addreply_noformat(i32 220, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.118, i64 0, i64 0)), !dbg !10572
  br label %if.end103, !dbg !10574

if.end103:                                        ; preds = %if.then102, %if.end98
  %33 = load i32, i32* %display_banner, align 4, !dbg !10575
  %tobool104 = icmp ne i32 %33, 0, !dbg !10575
  br i1 %tobool104, label %if.then105, label %if.end120, !dbg !10577

if.then105:                                       ; preds = %if.end103
  %34 = load i8, i8* @v6ready, align 1, !dbg !10578
  %conv106 = sext i8 %34 to i32, !dbg !10578
  %cmp107 = icmp ne i32 %conv106, 0, !dbg !10581
  br i1 %cmp107, label %land.lhs.true109, label %if.end114, !dbg !10582

land.lhs.true109:                                 ; preds = %if.then105
  %35 = load i16, i16* getelementptr inbounds (%struct.sockaddr_storage, %struct.sockaddr_storage* @peer, i32 0, i32 0), align 8, !dbg !10583
  %conv110 = zext i16 %35 to i32, !dbg !10583
  %cmp111 = icmp ne i32 %conv110, 10, !dbg !10584
  br i1 %cmp111, label %if.then113, label %if.end114, !dbg !10585

if.then113:                                       ; preds = %land.lhs.true109
  call void (i32, i8*, ...) @addreply(i32 0, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.460, i64 0, i64 0)), !dbg !10586
  br label %if.end114, !dbg !10588

if.end114:                                        ; preds = %if.then113, %land.lhs.true109, %if.then105
  %36 = load i64, i64* @idletime, align 8, !dbg !10589
  %cmp115 = icmp uge i64 %36, 120, !dbg !10591
  br i1 %cmp115, label %if.then117, label %if.else118, !dbg !10592

if.then117:                                       ; preds = %if.end114
  %37 = load i64, i64* @idletime, align 8, !dbg !10593
  %div = udiv i64 %37, 60, !dbg !10595
  call void (i32, i8*, ...) @addreply(i32 220, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.461, i64 0, i64 0), i64 %div), !dbg !10596
  br label %if.end119, !dbg !10597

if.else118:                                       ; preds = %if.end114
  %38 = load i64, i64* @idletime, align 8, !dbg !10598
  call void (i32, i8*, ...) @addreply(i32 220, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.462, i64 0, i64 0), i64 %38), !dbg !10600
  br label %if.end119

if.end119:                                        ; preds = %if.else118, %if.then117
  br label %if.end120, !dbg !10601

if.end120:                                        ; preds = %if.end119, %if.end103
  %39 = load double, double* @maxload, align 8, !dbg !10602
  %cmp121 = fcmp ole double %39, 0.000000e+00, !dbg !10603
  br i1 %cmp121, label %lor.end, label %lor.rhs, !dbg !10604

lor.rhs:                                          ; preds = %if.end120
  %40 = load double, double* @load, align 8, !dbg !10605
  %41 = load double, double* @maxload, align 8, !dbg !10606
  %cmp123 = fcmp olt double %40, %41, !dbg !10607
  br label %lor.end, !dbg !10604

lor.end:                                          ; preds = %lor.rhs, %if.end120
  %42 = phi i1 [ true, %if.end120 ], [ %cmp123, %lor.rhs ]
  %lor.ext = zext i1 %42 to i32, !dbg !10604
  %conv125 = trunc i32 %lor.ext to i8, !dbg !10608
  store i8 %conv125, i8* @candownload, align 1, !dbg !10609
  %43 = load i8*, i8** @force_passive_ip_s, align 8, !dbg !10610
  %cmp126 = icmp ne i8* %43, null, !dbg !10612
  br i1 %cmp126, label %if.then128, label %if.end144, !dbg !10613

if.then128:                                       ; preds = %lor.end
  call void @llvm.dbg.declare(metadata %struct.addrinfo* %hints, metadata !10614, metadata !DIExpression()), !dbg !10616
  call void @llvm.dbg.declare(metadata %struct.addrinfo** %res, metadata !10617, metadata !DIExpression()), !dbg !10618
  %44 = bitcast %struct.addrinfo* %hints to i8*, !dbg !10619
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 48, i1 false), !dbg !10619
  %ai_family = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %hints, i32 0, i32 1, !dbg !10620
  store i32 2, i32* %ai_family, align 4, !dbg !10621
  %ai_addr = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %hints, i32 0, i32 5, !dbg !10622
  store %struct.sockaddr* null, %struct.sockaddr** %ai_addr, align 8, !dbg !10623
  %45 = load i8*, i8** @force_passive_ip_s, align 8, !dbg !10624
  %call129 = call i32 @getaddrinfo(i8* %45, i8* null, %struct.addrinfo* %hints, %struct.addrinfo** %res), !dbg !10626
  %cmp130 = icmp ne i32 %call129, 0, !dbg !10627
  br i1 %cmp130, label %if.then139, label %lor.lhs.false, !dbg !10628

lor.lhs.false:                                    ; preds = %if.then128
  %46 = load %struct.addrinfo*, %struct.addrinfo** %res, align 8, !dbg !10629
  %ai_family132 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %46, i32 0, i32 1, !dbg !10630
  %47 = load i32, i32* %ai_family132, align 4, !dbg !10630
  %cmp133 = icmp ne i32 %47, 2, !dbg !10631
  br i1 %cmp133, label %if.then139, label %lor.lhs.false135, !dbg !10632

lor.lhs.false135:                                 ; preds = %lor.lhs.false
  %48 = load %struct.addrinfo*, %struct.addrinfo** %res, align 8, !dbg !10633
  %ai_addrlen = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %48, i32 0, i32 4, !dbg !10634
  %49 = load i32, i32* %ai_addrlen, align 8, !dbg !10634
  %conv136 = zext i32 %49 to i64, !dbg !10633
  %cmp137 = icmp ugt i64 %conv136, 128, !dbg !10635
  br i1 %cmp137, label %if.then139, label %if.end140, !dbg !10636

if.then139:                                       ; preds = %lor.lhs.false135, %lor.lhs.false, %if.then128
  call void (i32, i32, i8*, ...) @die(i32 421, i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.463, i64 0, i64 0)) #11, !dbg !10637
  unreachable, !dbg !10637

if.end140:                                        ; preds = %lor.lhs.false135
  %50 = load %struct.addrinfo*, %struct.addrinfo** %res, align 8, !dbg !10639
  %ai_addr141 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %50, i32 0, i32 5, !dbg !10640
  %51 = load %struct.sockaddr*, %struct.sockaddr** %ai_addr141, align 8, !dbg !10640
  %52 = bitcast %struct.sockaddr* %51 to i8*, !dbg !10641
  %53 = load %struct.addrinfo*, %struct.addrinfo** %res, align 8, !dbg !10642
  %ai_addrlen142 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %53, i32 0, i32 4, !dbg !10643
  %54 = load i32, i32* %ai_addrlen142, align 8, !dbg !10643
  %conv143 = zext i32 %54 to i64, !dbg !10642
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%struct.sockaddr_storage* @force_passive_ip to i8*), i8* align 2 %52, i64 %conv143, i1 false), !dbg !10641
  %55 = load %struct.addrinfo*, %struct.addrinfo** %res, align 8, !dbg !10644
  call void @freeaddrinfo(%struct.addrinfo* %55) #7, !dbg !10645
  br label %if.end144, !dbg !10646

if.end144:                                        ; preds = %if.end140, %lor.end
  call void @parser(), !dbg !10647
  call void (i32, i8*, ...) @addreply(i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.143, i64 0, i64 0)), !dbg !10648
  call void (i32, i8*, ...) @logfile(i32 6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.143, i64 0, i64 0)), !dbg !10649
  call void @doreply(), !dbg !10650
  ret void, !dbg !10651
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal void @fixlimits() #0 !dbg !807 {
entry:
  store i64 14400, i64* getelementptr inbounds (%struct.timespec, %struct.timespec* @fixlimits.lim, i32 0, i32 0), align 8, !dbg !10652
  store i64 14400, i64* getelementptr inbounds (%struct.timespec, %struct.timespec* @fixlimits.lim, i32 0, i32 1), align 8, !dbg !10653
  %call = call i32 @setrlimit(i32 0, %struct.timespec* @fixlimits.lim) #7, !dbg !10654
  store i64 73400320, i64* getelementptr inbounds (%struct.timespec, %struct.timespec* @fixlimits.lim, i32 0, i32 0), align 8, !dbg !10655
  store i64 73400320, i64* getelementptr inbounds (%struct.timespec, %struct.timespec* @fixlimits.lim, i32 0, i32 1), align 8, !dbg !10656
  store i64 0, i64* getelementptr inbounds (%struct.timespec, %struct.timespec* @fixlimits.lim, i32 0, i32 0), align 8, !dbg !10657
  store i64 0, i64* getelementptr inbounds (%struct.timespec, %struct.timespec* @fixlimits.lim, i32 0, i32 1), align 8, !dbg !10658
  %call1 = call i32 @setrlimit(i32 4, %struct.timespec* @fixlimits.lim) #7, !dbg !10659
  ret void, !dbg !10660
}

; Function Attrs: nounwind
declare i32 @getpid() #2

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal void @set_signals_client() #0 !dbg !10661 {
entry:
  %sigs = alloca %struct.__sigset_t, align 8
  %sa = alloca %struct.sigaction, align 8
  call void @llvm.dbg.declare(metadata %struct.__sigset_t* %sigs, metadata !10662, metadata !DIExpression()), !dbg !10663
  call void @llvm.dbg.declare(metadata %struct.sigaction* %sa, metadata !10664, metadata !DIExpression()), !dbg !10665
  %call = call i32 @sigfillset(%struct.__sigset_t* %sigs) #7, !dbg !10666
  %sa_mask = getelementptr inbounds %struct.sigaction, %struct.sigaction* %sa, i32 0, i32 1, !dbg !10667
  %call1 = call i32 @sigemptyset(%struct.__sigset_t* %sa_mask) #7, !dbg !10668
  %sa_flags = getelementptr inbounds %struct.sigaction, %struct.sigaction* %sa, i32 0, i32 2, !dbg !10669
  store i32 268435456, i32* %sa_flags, align 8, !dbg !10670
  %__sigaction_handler = getelementptr inbounds %struct.sigaction, %struct.sigaction* %sa, i32 0, i32 0, !dbg !10671
  %sa_handler = bitcast %union.anon.0* %__sigaction_handler to void (i32)**, !dbg !10671
  store void (i32)* inttoptr (i64 1 to void (i32)*), void (i32)** %sa_handler, align 8, !dbg !10672
  %call2 = call i32 @sigaction(i32 13, %struct.sigaction* %sa, %struct.sigaction* null) #7, !dbg !10673
  %call3 = call i32 @sigaction(i32 23, %struct.sigaction* %sa, %struct.sigaction* null) #7, !dbg !10674
  %call4 = call i32 @sigaction(i32 29, %struct.sigaction* %sa, %struct.sigaction* null) #7, !dbg !10675
  %__sigaction_handler5 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %sa, i32 0, i32 0, !dbg !10676
  %sa_handler6 = bitcast %union.anon.0* %__sigaction_handler5 to void (i32)**, !dbg !10676
  store void (i32)* null, void (i32)** %sa_handler6, align 8, !dbg !10677
  %call7 = call i32 @sigdelset(%struct.__sigset_t* %sigs, i32 17) #7, !dbg !10678
  %call8 = call i32 @sigaction(i32 17, %struct.sigaction* %sa, %struct.sigaction* null) #7, !dbg !10679
  %call9 = call i32 @sigaction(i32 8, %struct.sigaction* %sa, %struct.sigaction* null) #7, !dbg !10680
  %call10 = call i32 @sigdelset(%struct.__sigset_t* %sigs, i32 8) #7, !dbg !10681
  %sa_flags11 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %sa, i32 0, i32 2, !dbg !10682
  store i32 0, i32* %sa_flags11, align 8, !dbg !10683
  %__sigaction_handler12 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %sa, i32 0, i32 0, !dbg !10684
  %sa_handler13 = bitcast %union.anon.0* %__sigaction_handler12 to void (i32)**, !dbg !10684
  store void (i32)* @sigalarm, void (i32)** %sa_handler13, align 8, !dbg !10685
  %call14 = call i32 @sigdelset(%struct.__sigset_t* %sigs, i32 14) #7, !dbg !10686
  %call15 = call i32 @sigaction(i32 14, %struct.sigaction* %sa, %struct.sigaction* null) #7, !dbg !10687
  %__sigaction_handler16 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %sa, i32 0, i32 0, !dbg !10688
  %sa_handler17 = bitcast %union.anon.0* %__sigaction_handler16 to void (i32)**, !dbg !10688
  store void (i32)* @sigterm_client, void (i32)** %sa_handler17, align 8, !dbg !10689
  %call18 = call i32 @sigdelset(%struct.__sigset_t* %sigs, i32 15) #7, !dbg !10690
  %call19 = call i32 @sigaction(i32 15, %struct.sigaction* %sa, %struct.sigaction* null) #7, !dbg !10691
  %call20 = call i32 @sigdelset(%struct.__sigset_t* %sigs, i32 1) #7, !dbg !10692
  %call21 = call i32 @sigaction(i32 1, %struct.sigaction* %sa, %struct.sigaction* null) #7, !dbg !10693
  %call22 = call i32 @sigdelset(%struct.__sigset_t* %sigs, i32 3) #7, !dbg !10694
  %call23 = call i32 @sigaction(i32 3, %struct.sigaction* %sa, %struct.sigaction* null) #7, !dbg !10695
  %call24 = call i32 @sigdelset(%struct.__sigset_t* %sigs, i32 2) #7, !dbg !10696
  %call25 = call i32 @sigaction(i32 2, %struct.sigaction* %sa, %struct.sigaction* null) #7, !dbg !10697
  %call26 = call i32 @sigdelset(%struct.__sigset_t* %sigs, i32 24) #7, !dbg !10698
  %call27 = call i32 @sigaction(i32 24, %struct.sigaction* %sa, %struct.sigaction* null) #7, !dbg !10699
  %call28 = call i32 @sigprocmask(i32 2, %struct.__sigset_t* %sigs, %struct.__sigset_t* null) #7, !dbg !10700
  ret void, !dbg !10701
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @checkvalidaddr(%struct.sockaddr_storage* %addr) #0 !dbg !10702 {
entry:
  %retval = alloca i32, align 4
  %addr.addr = alloca %struct.sockaddr_storage*, align 8
  %__a = alloca %struct.in6_addr*, align 8
  %tmp = alloca i32, align 4
  store %struct.sockaddr_storage* %addr, %struct.sockaddr_storage** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage** %addr.addr, metadata !10705, metadata !DIExpression()), !dbg !10706
  %0 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %addr.addr, align 8, !dbg !10707
  %cmp = icmp eq %struct.sockaddr_storage* %0, null, !dbg !10709
  br i1 %cmp, label %if.then, label %if.end, !dbg !10710

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10711
  br label %return, !dbg !10711

if.end:                                           ; preds = %entry
  %1 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %addr.addr, align 8, !dbg !10713
  %ss_family = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %1, i32 0, i32 0, !dbg !10713
  %2 = load i16, i16* %ss_family, align 8, !dbg !10713
  %conv = zext i16 %2 to i32, !dbg !10713
  %cmp1 = icmp eq i32 %conv, 10, !dbg !10715
  br i1 %cmp1, label %if.then3, label %if.else, !dbg !10716

if.then3:                                         ; preds = %if.end
  %3 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %addr.addr, align 8, !dbg !10717
  %call = call %struct.in6_addr* @storage_sin_addr6_const(%struct.sockaddr_storage* %3), !dbg !10717
  %4 = bitcast %struct.in6_addr* %call to i8*, !dbg !10717
  %arrayidx = getelementptr i8, i8* %4, i64 0, !dbg !10717
  %5 = load i8, i8* %arrayidx, align 1, !dbg !10717
  %conv4 = zext i8 %5 to i32, !dbg !10717
  %cmp5 = icmp eq i32 %conv4, 255, !dbg !10717
  br i1 %cmp5, label %if.then27, label %lor.lhs.false, !dbg !10720

lor.lhs.false:                                    ; preds = %if.then3
  call void @llvm.dbg.declare(metadata %struct.in6_addr** %__a, metadata !10721, metadata !DIExpression()), !dbg !10723
  %6 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %addr.addr, align 8, !dbg !10723
  %call7 = call %struct.in6_addr* @storage_sin_addr6_const(%struct.sockaddr_storage* %6), !dbg !10723
  store %struct.in6_addr* %call7, %struct.in6_addr** %__a, align 8, !dbg !10723
  %7 = load %struct.in6_addr*, %struct.in6_addr** %__a, align 8, !dbg !10723
  %__in6_u = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %7, i32 0, i32 0, !dbg !10723
  %__u6_addr32 = bitcast %union.anon* %__in6_u to [4 x i32]*, !dbg !10723
  %arrayidx8 = getelementptr [4 x i32], [4 x i32]* %__u6_addr32, i64 0, i64 0, !dbg !10723
  %8 = load i32, i32* %arrayidx8, align 4, !dbg !10723
  %cmp9 = icmp eq i32 %8, 0, !dbg !10723
  br i1 %cmp9, label %land.lhs.true, label %land.end, !dbg !10723

land.lhs.true:                                    ; preds = %lor.lhs.false
  %9 = load %struct.in6_addr*, %struct.in6_addr** %__a, align 8, !dbg !10723
  %__in6_u11 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %9, i32 0, i32 0, !dbg !10723
  %__u6_addr3212 = bitcast %union.anon* %__in6_u11 to [4 x i32]*, !dbg !10723
  %arrayidx13 = getelementptr [4 x i32], [4 x i32]* %__u6_addr3212, i64 0, i64 1, !dbg !10723
  %10 = load i32, i32* %arrayidx13, align 4, !dbg !10723
  %cmp14 = icmp eq i32 %10, 0, !dbg !10723
  br i1 %cmp14, label %land.lhs.true16, label %land.end, !dbg !10723

land.lhs.true16:                                  ; preds = %land.lhs.true
  %11 = load %struct.in6_addr*, %struct.in6_addr** %__a, align 8, !dbg !10723
  %__in6_u17 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %11, i32 0, i32 0, !dbg !10723
  %__u6_addr3218 = bitcast %union.anon* %__in6_u17 to [4 x i32]*, !dbg !10723
  %arrayidx19 = getelementptr [4 x i32], [4 x i32]* %__u6_addr3218, i64 0, i64 2, !dbg !10723
  %12 = load i32, i32* %arrayidx19, align 4, !dbg !10723
  %cmp20 = icmp eq i32 %12, 0, !dbg !10723
  br i1 %cmp20, label %land.rhs, label %land.end, !dbg !10723

land.rhs:                                         ; preds = %land.lhs.true16
  %13 = load %struct.in6_addr*, %struct.in6_addr** %__a, align 8, !dbg !10723
  %__in6_u22 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %13, i32 0, i32 0, !dbg !10723
  %__u6_addr3223 = bitcast %union.anon* %__in6_u22 to [4 x i32]*, !dbg !10723
  %arrayidx24 = getelementptr [4 x i32], [4 x i32]* %__u6_addr3223, i64 0, i64 3, !dbg !10723
  %14 = load i32, i32* %arrayidx24, align 4, !dbg !10723
  %cmp25 = icmp eq i32 %14, 0, !dbg !10723
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true16, %land.lhs.true, %lor.lhs.false
  %15 = phi i1 [ false, %land.lhs.true16 ], [ false, %land.lhs.true ], [ false, %lor.lhs.false ], [ %cmp25, %land.rhs ], !dbg !10724
  %land.ext = zext i1 %15 to i32, !dbg !10723
  store i32 %land.ext, i32* %tmp, align 4, !dbg !10723
  %16 = load i32, i32* %tmp, align 4, !dbg !10723
  %tobool = icmp ne i32 %16, 0, !dbg !10725
  br i1 %tobool, label %if.then27, label %if.end28, !dbg !10726

if.then27:                                        ; preds = %land.end, %if.then3
  store i32 0, i32* %retval, align 4, !dbg !10727
  br label %return, !dbg !10727

if.end28:                                         ; preds = %land.end
  store i32 1, i32* %retval, align 4, !dbg !10729
  br label %return, !dbg !10729

if.else:                                          ; preds = %if.end
  %17 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %addr.addr, align 8, !dbg !10730
  %ss_family29 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %17, i32 0, i32 0, !dbg !10730
  %18 = load i16, i16* %ss_family29, align 8, !dbg !10730
  %conv30 = zext i16 %18 to i32, !dbg !10730
  %cmp31 = icmp eq i32 %conv30, 2, !dbg !10732
  br i1 %cmp31, label %if.then33, label %if.end65, !dbg !10733

if.then33:                                        ; preds = %if.else
  %19 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %addr.addr, align 8, !dbg !10734
  %call34 = call %struct.in_addr* @storage_sin_addr_const(%struct.sockaddr_storage* %19), !dbg !10734
  %s_addr = getelementptr inbounds %struct.in_addr, %struct.in_addr* %call34, i32 0, i32 0, !dbg !10734
  %20 = load i32, i32* %s_addr, align 4, !dbg !10734
  %call35 = call i32 @ntohl(i32 %20) #14, !dbg !10737
  %cmp36 = icmp eq i32 %call35, 0, !dbg !10738
  br i1 %cmp36, label %if.then63, label %lor.lhs.false38, !dbg !10739

lor.lhs.false38:                                  ; preds = %if.then33
  %21 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %addr.addr, align 8, !dbg !10740
  %call39 = call %struct.in_addr* @storage_sin_addr_const(%struct.sockaddr_storage* %21), !dbg !10740
  %s_addr40 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %call39, i32 0, i32 0, !dbg !10740
  %22 = load i32, i32* %s_addr40, align 4, !dbg !10740
  %call41 = call i32 @ntohl(i32 %22) #14, !dbg !10741
  %cmp42 = icmp eq i32 %call41, -1, !dbg !10742
  br i1 %cmp42, label %if.then63, label %lor.lhs.false44, !dbg !10743

lor.lhs.false44:                                  ; preds = %lor.lhs.false38
  %23 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %addr.addr, align 8, !dbg !10744
  %call45 = call %struct.in_addr* @storage_sin_addr_const(%struct.sockaddr_storage* %23), !dbg !10744
  %s_addr46 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %call45, i32 0, i32 0, !dbg !10744
  %24 = load i32, i32* %s_addr46, align 4, !dbg !10744
  %call47 = call i32 @ntohl(i32 %24) #14, !dbg !10745
  %cmp48 = icmp eq i32 %call47, -1, !dbg !10746
  br i1 %cmp48, label %if.then63, label %lor.lhs.false50, !dbg !10747

lor.lhs.false50:                                  ; preds = %lor.lhs.false44
  %25 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %addr.addr, align 8, !dbg !10748
  %call51 = call %struct.in_addr* @storage_sin_addr_const(%struct.sockaddr_storage* %25), !dbg !10748
  %s_addr52 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %call51, i32 0, i32 0, !dbg !10748
  %26 = load i32, i32* %s_addr52, align 4, !dbg !10748
  %call53 = call i32 @ntohl(i32 %26) #14, !dbg !10748
  %and = and i32 %call53, -268435456, !dbg !10748
  %cmp54 = icmp eq i32 %and, -536870912, !dbg !10748
  br i1 %cmp54, label %if.then63, label %lor.lhs.false56, !dbg !10749

lor.lhs.false56:                                  ; preds = %lor.lhs.false50
  %27 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %addr.addr, align 8, !dbg !10750
  %call57 = call %struct.in_addr* @storage_sin_addr_const(%struct.sockaddr_storage* %27), !dbg !10750
  %s_addr58 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %call57, i32 0, i32 0, !dbg !10750
  %28 = load i32, i32* %s_addr58, align 4, !dbg !10750
  %call59 = call i32 @ntohl(i32 %28) #14, !dbg !10750
  %and60 = and i32 %call59, -268435456, !dbg !10750
  %cmp61 = icmp eq i32 %and60, -268435456, !dbg !10750
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !10751

if.then63:                                        ; preds = %lor.lhs.false56, %lor.lhs.false50, %lor.lhs.false44, %lor.lhs.false38, %if.then33
  store i32 0, i32* %retval, align 4, !dbg !10752
  br label %return, !dbg !10752

if.end64:                                         ; preds = %lor.lhs.false56
  store i32 1, i32* %retval, align 4, !dbg !10754
  br label %return, !dbg !10754

if.end65:                                         ; preds = %if.else
  br label %if.end66

if.end66:                                         ; preds = %if.end65
  store i32 0, i32* %retval, align 4, !dbg !10755
  br label %return, !dbg !10755

return:                                           ; preds = %if.end66, %if.end64, %if.then63, %if.end28, %if.then27, %if.then
  %29 = load i32, i32* %retval, align 4, !dbg !10756
  ret i32 %29, !dbg !10756
}

; Function Attrs: nounwind readnone
declare zeroext i16 @ntohs(i16 zeroext) #10

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal void @dns_sanitize(i8* %z) #0 !dbg !10757 {
entry:
  %z.addr = alloca i8*, align 8
  store i8* %z, i8** %z.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %z.addr, metadata !10758, metadata !DIExpression()), !dbg !10759
  br label %while.cond, !dbg !10760

while.cond:                                       ; preds = %if.end, %entry
  %0 = load i8*, i8** %z.addr, align 8, !dbg !10761
  %1 = load i8, i8* %0, align 1, !dbg !10762
  %conv = sext i8 %1 to i32, !dbg !10762
  %cmp = icmp ne i32 %conv, 0, !dbg !10763
  br i1 %cmp, label %while.body, label %while.end, !dbg !10760

while.body:                                       ; preds = %while.cond
  %2 = load i8*, i8** %z.addr, align 8, !dbg !10764
  %3 = load i8, i8* %2, align 1, !dbg !10767
  %conv2 = sext i8 %3 to i32, !dbg !10767
  %cmp3 = icmp sge i32 %conv2, 97, !dbg !10768
  br i1 %cmp3, label %land.lhs.true, label %lor.lhs.false, !dbg !10769

land.lhs.true:                                    ; preds = %while.body
  %4 = load i8*, i8** %z.addr, align 8, !dbg !10770
  %5 = load i8, i8* %4, align 1, !dbg !10771
  %conv5 = sext i8 %5 to i32, !dbg !10771
  %cmp6 = icmp sle i32 %conv5, 122, !dbg !10772
  br i1 %cmp6, label %if.then, label %lor.lhs.false, !dbg !10773

lor.lhs.false:                                    ; preds = %land.lhs.true, %while.body
  %6 = load i8*, i8** %z.addr, align 8, !dbg !10774
  %7 = load i8, i8* %6, align 1, !dbg !10775
  %conv8 = sext i8 %7 to i32, !dbg !10775
  %cmp9 = icmp sge i32 %conv8, 48, !dbg !10776
  br i1 %cmp9, label %land.lhs.true11, label %lor.lhs.false15, !dbg !10777

land.lhs.true11:                                  ; preds = %lor.lhs.false
  %8 = load i8*, i8** %z.addr, align 8, !dbg !10778
  %9 = load i8, i8* %8, align 1, !dbg !10779
  %conv12 = sext i8 %9 to i32, !dbg !10779
  %cmp13 = icmp sle i32 %conv12, 57, !dbg !10780
  br i1 %cmp13, label %if.then, label %lor.lhs.false15, !dbg !10781

lor.lhs.false15:                                  ; preds = %land.lhs.true11, %lor.lhs.false
  %10 = load i8*, i8** %z.addr, align 8, !dbg !10782
  %11 = load i8, i8* %10, align 1, !dbg !10783
  %conv16 = sext i8 %11 to i32, !dbg !10783
  %cmp17 = icmp eq i32 %conv16, 46, !dbg !10784
  br i1 %cmp17, label %if.then, label %lor.lhs.false19, !dbg !10785

lor.lhs.false19:                                  ; preds = %lor.lhs.false15
  %12 = load i8*, i8** %z.addr, align 8, !dbg !10786
  %13 = load i8, i8* %12, align 1, !dbg !10787
  %conv20 = sext i8 %13 to i32, !dbg !10787
  %cmp21 = icmp eq i32 %conv20, 45, !dbg !10788
  br i1 %cmp21, label %if.then, label %lor.lhs.false23, !dbg !10789

lor.lhs.false23:                                  ; preds = %lor.lhs.false19
  %14 = load i8*, i8** %z.addr, align 8, !dbg !10790
  %15 = load i8, i8* %14, align 1, !dbg !10791
  %conv24 = sext i8 %15 to i32, !dbg !10791
  %cmp25 = icmp eq i32 %conv24, 58, !dbg !10792
  br i1 %cmp25, label %if.then, label %lor.lhs.false27, !dbg !10793

lor.lhs.false27:                                  ; preds = %lor.lhs.false23
  %16 = load i8*, i8** %z.addr, align 8, !dbg !10794
  %17 = load i8, i8* %16, align 1, !dbg !10795
  %conv28 = sext i8 %17 to i32, !dbg !10795
  %cmp29 = icmp sge i32 %conv28, 65, !dbg !10796
  br i1 %cmp29, label %land.lhs.true31, label %if.else, !dbg !10797

land.lhs.true31:                                  ; preds = %lor.lhs.false27
  %18 = load i8*, i8** %z.addr, align 8, !dbg !10798
  %19 = load i8, i8* %18, align 1, !dbg !10799
  %conv32 = sext i8 %19 to i32, !dbg !10799
  %cmp33 = icmp sle i32 %conv32, 90, !dbg !10800
  br i1 %cmp33, label %if.then, label %if.else, !dbg !10801

if.then:                                          ; preds = %land.lhs.true31, %lor.lhs.false23, %lor.lhs.false19, %lor.lhs.false15, %land.lhs.true11, %land.lhs.true
  br label %if.end, !dbg !10802

if.else:                                          ; preds = %land.lhs.true31, %lor.lhs.false27
  %20 = load i8*, i8** %z.addr, align 8, !dbg !10804
  store i8 95, i8* %20, align 1, !dbg !10806
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %21 = load i8*, i8** %z.addr, align 8, !dbg !10807
  %incdec.ptr = getelementptr i8, i8* %21, i32 1, !dbg !10807
  store i8* %incdec.ptr, i8** %z.addr, align 8, !dbg !10807
  br label %while.cond, !dbg !10760, !llvm.loop !10808

while.end:                                        ; preds = %while.cond
  ret void, !dbg !10810
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal void @fill_atomic_prefix() #0 !dbg !10811 {
entry:
  %tmp_atomic_prefix = alloca [4096 x i8], align 16
  call void @llvm.dbg.declare(metadata [4096 x i8]* %tmp_atomic_prefix, metadata !10812, metadata !DIExpression()), !dbg !10813
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %tmp_atomic_prefix, i64 0, i64 0, !dbg !10814
  %0 = load i64, i64* @session_start_time, align 8, !dbg !10815
  %1 = load i16, i16* @serverport, align 2, !dbg !10816
  %conv = zext i16 %1 to i32, !dbg !10817
  %call = call i32 @getpid() #7, !dbg !10818
  %conv1 = sext i32 %call to i64, !dbg !10819
  %call2 = call i32 @zrand(), !dbg !10820
  %call3 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 4096, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.464, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.465, i64 0, i64 0), i64 %0, i32 %conv, i64 %conv1, i32 %call2) #7, !dbg !10821
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %tmp_atomic_prefix, i64 0, i64 0, !dbg !10822
  %call5 = call noalias i8* @strdup(i8* %arraydecay4) #7, !dbg !10824
  store i8* %call5, i8** @atomic_prefix, align 8, !dbg !10825
  %cmp = icmp eq i8* %call5, null, !dbg !10826
  br i1 %cmp, label %if.then, label %if.end, !dbg !10827

if.then:                                          ; preds = %entry
  call void @die_mem() #11, !dbg !10828
  unreachable, !dbg !10828

if.end:                                           ; preds = %entry
  ret void, !dbg !10830
}

; Function Attrs: nounwind
declare i32 @getloadavg(double*, i32) #2

; Function Attrs: nounwind
declare void @srandom(i32) #2

declare i32 @getaddrinfo(i8*, i8*, %struct.addrinfo*, %struct.addrinfo**) #9

; Function Attrs: nounwind
declare void @freeaddrinfo(%struct.addrinfo*) #2

; Function Attrs: nounwind
declare i32 @sigemptyset(%struct.__sigset_t*) #2

; Function Attrs: nounwind
declare i32 @sigaction(i32, %struct.sigaction*, %struct.sigaction*) #2

; Function Attrs: nounwind
declare i32 @sigdelset(%struct.__sigset_t*, i32) #2

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal void @sigalarm(i32 %sig) #0 !dbg !10831 {
entry:
  %sig.addr = alloca i32, align 4
  store i32 %sig, i32* %sig.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sig.addr, metadata !10832, metadata !DIExpression()), !dbg !10833
  %0 = load i32, i32* %sig.addr, align 4, !dbg !10834
  call void @disablesignals(), !dbg !10835
  call void (i32, i32, i8*, ...) @die(i32 421, i32 6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.254, i64 0, i64 0)) #11, !dbg !10836
  unreachable, !dbg !10836
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal void @sigterm_client(i32 %sig) #0 !dbg !10837 {
entry:
  %sig.addr = alloca i32, align 4
  store i32 %sig, i32* %sig.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sig.addr, metadata !10838, metadata !DIExpression()), !dbg !10839
  %0 = load i32, i32* %sig.addr, align 4, !dbg !10840
  call void @disablesignals(), !dbg !10841
  call void @_EXIT(i32 0) #11, !dbg !10842
  unreachable, !dbg !10842
}

; Function Attrs: nounwind
declare i32 @setrlimit(i32, %struct.timespec*) #2

declare void @perror(i8*) #9

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal void @set_cloexec_flag(i32 %fd) #0 !dbg !10843 {
entry:
  %fd.addr = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !10844, metadata !DIExpression()), !dbg !10845
  %0 = load i32, i32* %fd.addr, align 4, !dbg !10846
  %call = call i32 (i32, i32, ...) @fcntl(i32 %0, i32 2, i32 1), !dbg !10847
  ret void, !dbg !10848
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal void @updatepidfile() #0 !dbg !10849 {
entry:
  %fd = alloca i32, align 4
  %buf = alloca [42 x i8], align 16
  %buf_len = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !10850, metadata !DIExpression()), !dbg !10851
  call void @llvm.dbg.declare(metadata [42 x i8]* %buf, metadata !10852, metadata !DIExpression()), !dbg !10856
  call void @llvm.dbg.declare(metadata i64* %buf_len, metadata !10857, metadata !DIExpression()), !dbg !10858
  %arraydecay = getelementptr inbounds [42 x i8], [42 x i8]* %buf, i64 0, i64 0, !dbg !10859
  %call = call i32 @getpid() #7, !dbg !10859
  %conv = sext i32 %call to i64, !dbg !10859
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 42, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.449, i64 0, i64 0), i64 %conv) #7, !dbg !10859
  %cmp = icmp sge i32 %call1, 42, !dbg !10859
  br i1 %cmp, label %if.then, label %if.end, !dbg !10861

if.then:                                          ; preds = %entry
  br label %return, !dbg !10862

if.end:                                           ; preds = %entry
  %call3 = call i32* @__errno_location() #14, !dbg !10864
  %0 = load i32, i32* %call3, align 4, !dbg !10864
  %cmp4 = icmp ne i32 %0, 2, !dbg !10866
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !10867

if.then6:                                         ; preds = %if.end
  br label %return, !dbg !10868

if.end7:                                          ; preds = %if.end
  %1 = load i8*, i8** @pid_file, align 8, !dbg !10870
  %call8 = call i32 (i8*, i32, ...) @open(i8* %1, i32 131649, i32 420), !dbg !10872
  store i32 %call8, i32* %fd, align 4, !dbg !10873
  %cmp9 = icmp eq i32 %call8, -1, !dbg !10874
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !10875

if.then11:                                        ; preds = %if.end7
  br label %return, !dbg !10876

if.end12:                                         ; preds = %if.end7
  %arraydecay13 = getelementptr inbounds [42 x i8], [42 x i8]* %buf, i64 0, i64 0, !dbg !10878
  %call14 = call i64 @strlen(i8* %arraydecay13) #12, !dbg !10879
  store i64 %call14, i64* %buf_len, align 8, !dbg !10880
  %2 = load i32, i32* %fd, align 4, !dbg !10881
  %arraydecay15 = getelementptr inbounds [42 x i8], [42 x i8]* %buf, i64 0, i64 0, !dbg !10883
  %3 = load i64, i64* %buf_len, align 8, !dbg !10884
  %call16 = call i64 @safe_write(i32 %2, i8* %arraydecay15, i64 %3, i32 -1), !dbg !10885
  %4 = load i64, i64* %buf_len, align 8, !dbg !10886
  %cmp17 = icmp ne i64 %call16, %4, !dbg !10887
  br i1 %cmp17, label %if.then19, label %if.end21, !dbg !10888

if.then19:                                        ; preds = %if.end12
  %5 = load i32, i32* %fd, align 4, !dbg !10889
  %call20 = call i32 @ftruncate(i32 %5, i64 0) #7, !dbg !10891
  br label %if.end21, !dbg !10892

if.end21:                                         ; preds = %if.then19, %if.end12
  %6 = load i32, i32* %fd, align 4, !dbg !10893
  %call22 = call i32 @close(i32 %6), !dbg !10894
  br label %return, !dbg !10895

return:                                           ; preds = %if.end21, %if.then11, %if.then6, %if.then
  ret void, !dbg !10895
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal void @safe_fd_set(i32 %fd, %struct.__sigset_t* %fds) #0 !dbg !10896 {
entry:
  %fd.addr = alloca i32, align 4
  %fds.addr = alloca %struct.__sigset_t*, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !10901, metadata !DIExpression()), !dbg !10902
  store %struct.__sigset_t* %fds, %struct.__sigset_t** %fds.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__sigset_t** %fds.addr, metadata !10903, metadata !DIExpression()), !dbg !10904
  %0 = load i32, i32* %fd.addr, align 4, !dbg !10905
  %cmp = icmp eq i32 %0, -1, !dbg !10907
  br i1 %cmp, label %if.then, label %if.end, !dbg !10908

if.then:                                          ; preds = %entry
  br label %return, !dbg !10909

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %fd.addr, align 4, !dbg !10911
  %rem = srem i32 %1, 64, !dbg !10911
  %sh_prom = zext i32 %rem to i64, !dbg !10911
  %shl = shl i64 1, %sh_prom, !dbg !10911
  %2 = load %struct.__sigset_t*, %struct.__sigset_t** %fds.addr, align 8, !dbg !10911
  %fds_bits = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %2, i32 0, i32 0, !dbg !10911
  %3 = load i32, i32* %fd.addr, align 4, !dbg !10911
  %div = sdiv i32 %3, 64, !dbg !10911
  %idxprom = sext i32 %div to i64, !dbg !10911
  %arrayidx = getelementptr [16 x i64], [16 x i64]* %fds_bits, i64 0, i64 %idxprom, !dbg !10911
  %4 = load i64, i64* %arrayidx, align 8, !dbg !10911
  %or = or i64 %4, %shl, !dbg !10911
  store i64 %or, i64* %arrayidx, align 8, !dbg !10911
  br label %return, !dbg !10912

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !10912
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal void @accept_client(i32 %active_listen_fd) #0 !dbg !802 {
entry:
  %active_listen_fd.addr = alloca i32, align 4
  %set = alloca %struct.__sigset_t, align 8
  %sa = alloca %struct.sockaddr_storage, align 8
  %dummy = alloca i32, align 4
  %child = alloca i32, align 4
  %peer_addr = alloca %struct.sockaddr_in, align 4
  %line = alloca [1024 x i8], align 16
  %line32 = alloca [1024 x i8], align 16
  %hbuf = alloca [1025 x i8], align 16
  store i32 %active_listen_fd, i32* %active_listen_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %active_listen_fd.addr, metadata !10913, metadata !DIExpression()), !dbg !10914
  call void @llvm.dbg.declare(metadata %struct.__sigset_t* %set, metadata !10915, metadata !DIExpression()), !dbg !10916
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage* %sa, metadata !10917, metadata !DIExpression()), !dbg !10918
  call void @llvm.dbg.declare(metadata i32* %dummy, metadata !10919, metadata !DIExpression()), !dbg !10920
  call void @llvm.dbg.declare(metadata i32* %child, metadata !10921, metadata !DIExpression()), !dbg !10922
  %0 = bitcast %struct.sockaddr_storage* %sa to i8*, !dbg !10923
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 128, i1 false), !dbg !10923
  store i32 128, i32* %dummy, align 4, !dbg !10924
  %call = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @inputFile, i64 0, i64 0), i32 0), !dbg !10925
  store i32 %call, i32* @fd_inputFile, align 4, !dbg !10926
  store i32 %call, i32* @clientfd, align 4, !dbg !10927
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in* %peer_addr, metadata !10928, metadata !DIExpression()), !dbg !10929
  %1 = bitcast %struct.sockaddr_in* %peer_addr to i8*, !dbg !10930
  call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 48, i64 16, i1 false), !dbg !10930
  %sin_family = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %peer_addr, i32 0, i32 0, !dbg !10931
  store i16 2, i16* %sin_family, align 4, !dbg !10932
  %call1 = call i32 @htonl(i32 2130706433) #14, !dbg !10933
  %sin_addr = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %peer_addr, i32 0, i32 2, !dbg !10934
  %s_addr = getelementptr inbounds %struct.in_addr, %struct.in_addr* %sin_addr, i32 0, i32 0, !dbg !10935
  store i32 %call1, i32* %s_addr, align 4, !dbg !10936
  %call2 = call zeroext i16 @htons(i16 zeroext 6324) #14, !dbg !10937
  %sin_port = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %peer_addr, i32 0, i32 1, !dbg !10938
  store i16 %call2, i16* %sin_port, align 2, !dbg !10939
  %2 = bitcast %struct.sockaddr_storage* %sa to %struct.sockaddr*, !dbg !10940
  %3 = bitcast %struct.sockaddr* %2 to i8*, !dbg !10940
  %4 = bitcast %struct.sockaddr_in* %peer_addr to i8*, !dbg !10940
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 4 %4, i64 16, i1 false), !dbg !10940
  %5 = bitcast %struct.sockaddr_storage* %sa to i8*, !dbg !10941
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%struct.sockaddr_storage* @ctrlconn to i8*), i8* align 8 %5, i64 128, i1 false), !dbg !10941
  %6 = bitcast %struct.sockaddr_storage* %sa to i8*, !dbg !10942
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%struct.sockaddr_storage* @peer to i8*), i8* align 8 %6, i64 128, i1 false), !dbg !10942
  %ss_family = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %sa, i32 0, i32 0, !dbg !10943
  %7 = load i16, i16* %ss_family, align 8, !dbg !10943
  %conv = zext i16 %7 to i32, !dbg !10943
  %cmp = icmp ne i32 %conv, 2, !dbg !10945
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !10946

land.lhs.true:                                    ; preds = %entry
  %ss_family4 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %sa, i32 0, i32 0, !dbg !10947
  %8 = load i16, i16* %ss_family4, align 8, !dbg !10947
  %conv5 = zext i16 %8 to i32, !dbg !10947
  %cmp6 = icmp ne i32 %conv5, 10, !dbg !10948
  br i1 %cmp6, label %if.then, label %if.end, !dbg !10949

if.then:                                          ; preds = %land.lhs.true
  %9 = load i32, i32* @clientfd, align 4, !dbg !10950
  %call8 = call i32 @close(i32 %9), !dbg !10952
  store i32 -1, i32* @clientfd, align 4, !dbg !10953
  br label %return, !dbg !10954

if.end:                                           ; preds = %land.lhs.true, %entry
  %10 = load i32, i32* @maxusers, align 4, !dbg !10955
  %cmp9 = icmp ugt i32 %10, 0, !dbg !10957
  br i1 %cmp9, label %land.lhs.true11, label %if.end24, !dbg !10958

land.lhs.true11:                                  ; preds = %if.end
  %11 = load volatile i32, i32* @nb_children, align 4, !dbg !10959
  %12 = load i32, i32* @maxusers, align 4, !dbg !10960
  %cmp12 = icmp uge i32 %11, %12, !dbg !10961
  br i1 %cmp12, label %if.then14, label %if.end24, !dbg !10962

if.then14:                                        ; preds = %land.lhs.true11
  call void @llvm.dbg.declare(metadata [1024 x i8]* %line, metadata !10963, metadata !DIExpression()), !dbg !10965
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %line, i64 0, i64 0, !dbg !10966
  %13 = load i32, i32* @maxusers, align 4, !dbg !10967
  %conv15 = zext i32 %13 to i64, !dbg !10968
  %call16 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 1024, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.450, i64 0, i64 0), i64 %conv15) #7, !dbg !10969
  %14 = load i32, i32* @clientfd, align 4, !dbg !10970
  %15 = load i32, i32* @clientfd, align 4, !dbg !10971
  %call17 = call i32 (i32, i32, ...) @fcntl(i32 %15, i32 3), !dbg !10972
  %or = or i32 %call17, 2048, !dbg !10973
  %call18 = call i32 (i32, i32, ...) @fcntl(i32 %14, i32 4, i32 %or), !dbg !10974
  %16 = load i32, i32* @clientfd, align 4, !dbg !10975
  %arraydecay19 = getelementptr inbounds [1024 x i8], [1024 x i8]* %line, i64 0, i64 0, !dbg !10976
  %arraydecay20 = getelementptr inbounds [1024 x i8], [1024 x i8]* %line, i64 0, i64 0, !dbg !10977
  %call21 = call i64 @strlen(i8* %arraydecay20) #12, !dbg !10978
  %call22 = call i64 @write(i32 %16, i8* %arraydecay19, i64 %call21), !dbg !10979
  %17 = load i32, i32* @clientfd, align 4, !dbg !10980
  %call23 = call i32 @close(i32 %17), !dbg !10981
  store i32 -1, i32* @clientfd, align 4, !dbg !10982
  br label %return, !dbg !10983

if.end24:                                         ; preds = %land.lhs.true11, %if.end
  %18 = load i32, i32* @maxip, align 4, !dbg !10984
  %cmp25 = icmp ugt i32 %18, 0, !dbg !10986
  br i1 %cmp25, label %if.then27, label %if.end67, !dbg !10987

if.then27:                                        ; preds = %if.end24
  call void @fourinsix(%struct.sockaddr_storage* %sa), !dbg !10988
  %call28 = call i32 @iptrack_get(%struct.sockaddr_storage* %sa), !dbg !10990
  %19 = load i32, i32* @maxip, align 4, !dbg !10992
  %cmp29 = icmp uge i32 %call28, %19, !dbg !10993
  br i1 %cmp29, label %if.then31, label %if.end66, !dbg !10994

if.then31:                                        ; preds = %if.then27
  call void @llvm.dbg.declare(metadata [1024 x i8]* %line32, metadata !10995, metadata !DIExpression()), !dbg !10997
  call void @llvm.dbg.declare(metadata [1025 x i8]* %hbuf, metadata !10998, metadata !DIExpression()), !dbg !10999
  %20 = load i32, i32* @clientfd, align 4, !dbg !11000
  %21 = load i32, i32* @clientfd, align 4, !dbg !11001
  %call33 = call i32 (i32, i32, ...) @fcntl(i32 %21, i32 3), !dbg !11002
  %or34 = or i32 %call33, 2048, !dbg !11003
  %call35 = call i32 (i32, i32, ...) @fcntl(i32 %20, i32 4, i32 %or34), !dbg !11004
  %arraydecay36 = getelementptr inbounds [1024 x i8], [1024 x i8]* %line32, i64 0, i64 0, !dbg !11005
  %22 = load i32, i32* @maxip, align 4, !dbg !11005
  %conv37 = zext i32 %22 to i64, !dbg !11005
  %call38 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay36, i64 1024, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.451, i64 0, i64 0), i64 %conv37) #7, !dbg !11005
  %cmp39 = icmp sge i32 %call38, 1024, !dbg !11005
  br i1 %cmp39, label %if.end46, label %if.then41, !dbg !11007

if.then41:                                        ; preds = %if.then31
  %23 = load i32, i32* @clientfd, align 4, !dbg !11008
  %arraydecay42 = getelementptr inbounds [1024 x i8], [1024 x i8]* %line32, i64 0, i64 0, !dbg !11010
  %arraydecay43 = getelementptr inbounds [1024 x i8], [1024 x i8]* %line32, i64 0, i64 0, !dbg !11011
  %call44 = call i64 @strlen(i8* %arraydecay43) #12, !dbg !11012
  %call45 = call i64 @write(i32 %23, i8* %arraydecay42, i64 %call44), !dbg !11013
  br label %if.end46, !dbg !11014

if.end46:                                         ; preds = %if.then41, %if.then31
  %call47 = call i32 @addrcmp(%struct.sockaddr_storage* @accept_client.old_sa, %struct.sockaddr_storage* %sa), !dbg !11015
  %cmp48 = icmp ne i32 %call47, 0, !dbg !11017
  br i1 %cmp48, label %if.then50, label %if.end64, !dbg !11018

if.then50:                                        ; preds = %if.end46
  %24 = bitcast %struct.sockaddr_storage* %sa to i8*, !dbg !11019
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%struct.sockaddr_storage* @accept_client.old_sa to i8*), i8* align 8 %24, i64 128, i1 false), !dbg !11019
  %25 = bitcast %struct.sockaddr_storage* %sa to %struct.sockaddr*, !dbg !11021
  %ss_family51 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %sa, i32 0, i32 0, !dbg !11023
  %26 = load i16, i16* %ss_family51, align 8, !dbg !11023
  %conv52 = zext i16 %26 to i32, !dbg !11023
  %cmp53 = icmp eq i32 %conv52, 2, !dbg !11023
  %27 = zext i1 %cmp53 to i64, !dbg !11023
  %cond = select i1 %cmp53, i64 16, i64 28, !dbg !11023
  %conv55 = trunc i64 %cond to i32, !dbg !11023
  %arraydecay56 = getelementptr inbounds [1025 x i8], [1025 x i8]* %hbuf, i64 0, i64 0, !dbg !11024
  %call57 = call i32 @getnameinfo(%struct.sockaddr* %25, i32 %conv55, i8* %arraydecay56, i32 1025, i8* null, i32 0, i32 1), !dbg !11025
  %cmp58 = icmp eq i32 %call57, 0, !dbg !11026
  br i1 %cmp58, label %if.then60, label %if.end63, !dbg !11027

if.then60:                                        ; preds = %if.then50
  %28 = load i32, i32* @maxip, align 4, !dbg !11028
  %conv61 = zext i32 %28 to i64, !dbg !11030
  %arraydecay62 = getelementptr inbounds [1025 x i8], [1025 x i8]* %hbuf, i64 0, i64 0, !dbg !11031
  call void (i32, i8*, ...) @logfile(i32 4, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.452, i64 0, i64 0), i64 %conv61, i8* %arraydecay62), !dbg !11032
  br label %if.end63, !dbg !11033

if.end63:                                         ; preds = %if.then60, %if.then50
  br label %if.end64, !dbg !11034

if.end64:                                         ; preds = %if.end63, %if.end46
  %29 = load i32, i32* @clientfd, align 4, !dbg !11035
  %call65 = call i32 @close(i32 %29), !dbg !11036
  store i32 -1, i32* @clientfd, align 4, !dbg !11037
  br label %return, !dbg !11038

if.end66:                                         ; preds = %if.then27
  br label %if.end67, !dbg !11039

if.end67:                                         ; preds = %if.end66, %if.end24
  %call68 = call i32 @sigemptyset(%struct.__sigset_t* %set) #7, !dbg !11040
  %call69 = call i32 @sigaddset(%struct.__sigset_t* %set, i32 17) #7, !dbg !11041
  %call70 = call i32 @sigprocmask(i32 0, %struct.__sigset_t* %set, %struct.__sigset_t* null) #7, !dbg !11042
  %30 = load volatile i32, i32* @nb_children, align 4, !dbg !11043
  %inc = add i32 %30, 1, !dbg !11043
  store volatile i32 %inc, i32* @nb_children, align 4, !dbg !11043
  store i32 0, i32* %child, align 4, !dbg !11044
  %31 = load i32, i32* %child, align 4, !dbg !11045
  %cmp71 = icmp eq i32 %31, 0, !dbg !11047
  br i1 %cmp71, label %if.then73, label %if.else, !dbg !11048

if.then73:                                        ; preds = %if.end67
  %call74 = call i32 @isatty(i32 2) #7, !dbg !11049
  %tobool = icmp ne i32 %call74, 0, !dbg !11049
  br i1 %tobool, label %if.then75, label %if.end76, !dbg !11052

if.then75:                                        ; preds = %if.then73
  br label %if.end76, !dbg !11053

if.end76:                                         ; preds = %if.then75, %if.then73
  %32 = load i8, i8* @no_syslog, align 1, !dbg !11055
  %conv77 = sext i8 %32 to i32, !dbg !11055
  %cmp78 = icmp eq i32 %conv77, 0, !dbg !11057
  br i1 %cmp78, label %if.then80, label %if.end82, !dbg !11058

if.then80:                                        ; preds = %if.end76
  call void @closelog(), !dbg !11059
  %33 = load i32, i32* @log_pid, align 4, !dbg !11061
  %or81 = or i32 8, %33, !dbg !11062
  %34 = load i32, i32* @syslog_facility, align 4, !dbg !11063
  call void @openlog(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.219, i64 0, i64 0), i32 %or81, i32 %34), !dbg !11064
  br label %if.end82, !dbg !11065

if.end82:                                         ; preds = %if.then80, %if.end76
  call void @doit(), !dbg !11066
  call void @_EXIT(i32 0) #11, !dbg !11067
  unreachable, !dbg !11067

if.else:                                          ; preds = %if.end67
  %35 = load i32, i32* %child, align 4, !dbg !11068
  %cmp83 = icmp eq i32 %35, -1, !dbg !11070
  br i1 %cmp83, label %if.then85, label %if.else90, !dbg !11071

if.then85:                                        ; preds = %if.else
  %36 = load volatile i32, i32* @nb_children, align 4, !dbg !11072
  %cmp86 = icmp ugt i32 %36, 0, !dbg !11075
  br i1 %cmp86, label %if.then88, label %if.end89, !dbg !11076

if.then88:                                        ; preds = %if.then85
  %37 = load volatile i32, i32* @nb_children, align 4, !dbg !11077
  %dec = add i32 %37, -1, !dbg !11077
  store volatile i32 %dec, i32* @nb_children, align 4, !dbg !11077
  br label %if.end89, !dbg !11079

if.end89:                                         ; preds = %if.then88, %if.then85
  br label %if.end95, !dbg !11080

if.else90:                                        ; preds = %if.else
  %38 = load i32, i32* @maxip, align 4, !dbg !11081
  %cmp91 = icmp ugt i32 %38, 0, !dbg !11084
  br i1 %cmp91, label %if.then93, label %if.end94, !dbg !11085

if.then93:                                        ; preds = %if.else90
  %39 = load i32, i32* %child, align 4, !dbg !11086
  call void @iptrack_add(%struct.sockaddr_storage* %sa, i32 %39), !dbg !11088
  br label %if.end94, !dbg !11089

if.end94:                                         ; preds = %if.then93, %if.else90
  br label %if.end95

if.end95:                                         ; preds = %if.end94, %if.end89
  br label %if.end96

if.end96:                                         ; preds = %if.end95
  %40 = load i32, i32* @clientfd, align 4, !dbg !11090
  %call97 = call i32 @close(i32 %40), !dbg !11091
  store i32 -1, i32* @clientfd, align 4, !dbg !11092
  %call98 = call i32 @sigprocmask(i32 1, %struct.__sigset_t* %set, %struct.__sigset_t* null) #7, !dbg !11093
  br label %return, !dbg !11094

return:                                           ; preds = %if.end96, %if.end64, %if.then14, %if.then
  ret void, !dbg !11094
}

; Function Attrs: nounwind
declare i32 @sigaddset(%struct.__sigset_t*, i32) #2

; Function Attrs: nounwind
declare i32 @isatty(i32) #2

; Function Attrs: nounwind
declare i32 @getsockname(i32, %struct.sockaddr*, i32*) #2

; Function Attrs: nounwind
declare i32 @dup2(i32, i32) #2

; Function Attrs: nounwind
declare i32 @fork() #2

; Function Attrs: nounwind
declare i32 @setsid() #2

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @open_max() #0 !dbg !11095 {
entry:
  %z = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %z, metadata !11096, metadata !DIExpression()), !dbg !11097
  %call = call i64 @sysconf(i32 4) #7, !dbg !11098
  store i64 %call, i64* %z, align 8, !dbg !11100
  %cmp = icmp slt i64 %call, 0, !dbg !11101
  br i1 %cmp, label %if.then, label %if.end, !dbg !11102

if.then:                                          ; preds = %entry
  call void @perror(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.444, i64 0, i64 0)), !dbg !11103
  call void @_EXIT(i32 1) #11, !dbg !11105
  unreachable, !dbg !11105

if.end:                                           ; preds = %entry
  %0 = load i64, i64* %z, align 8, !dbg !11106
  %conv = trunc i64 %0 to i32, !dbg !11107
  ret i32 %conv, !dbg !11108
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @closedesc_all(i32 %closestdin) #0 !dbg !11109 {
entry:
  %retval = alloca i32, align 4
  %closestdin.addr = alloca i32, align 4
  %fodder = alloca i32, align 4
  store i32 %closestdin, i32* %closestdin.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %closestdin.addr, metadata !11110, metadata !DIExpression()), !dbg !11111
  call void @llvm.dbg.declare(metadata i32* %fodder, metadata !11112, metadata !DIExpression()), !dbg !11113
  %0 = load i32, i32* %closestdin.addr, align 4, !dbg !11114
  %cmp = icmp ne i32 %0, 0, !dbg !11116
  br i1 %cmp, label %if.then, label %if.end9, !dbg !11117

if.then:                                          ; preds = %entry
  %call = call i32 @close(i32 0), !dbg !11118
  %call1 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.445, i64 0, i64 0), i32 0), !dbg !11120
  store i32 %call1, i32* %fodder, align 4, !dbg !11122
  %cmp2 = icmp eq i32 %call1, -1, !dbg !11123
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !11124

if.then3:                                         ; preds = %if.then
  store i32 -1, i32* %retval, align 4, !dbg !11125
  br label %return, !dbg !11125

if.end:                                           ; preds = %if.then
  %1 = load i32, i32* %fodder, align 4, !dbg !11127
  %call4 = call i32 @dup2(i32 %1, i32 0) #7, !dbg !11128
  %2 = load i32, i32* %fodder, align 4, !dbg !11129
  %cmp5 = icmp sgt i32 %2, 0, !dbg !11131
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !11132

if.then6:                                         ; preds = %if.end
  %3 = load i32, i32* %fodder, align 4, !dbg !11133
  %call7 = call i32 @close(i32 %3), !dbg !11135
  br label %if.end8, !dbg !11136

if.end8:                                          ; preds = %if.then6, %if.end
  br label %if.end9, !dbg !11137

if.end9:                                          ; preds = %if.end8, %entry
  %call10 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.445, i64 0, i64 0), i32 1), !dbg !11138
  store i32 %call10, i32* %fodder, align 4, !dbg !11140
  %cmp11 = icmp eq i32 %call10, -1, !dbg !11141
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !11142

if.then12:                                        ; preds = %if.end9
  store i32 -1, i32* %retval, align 4, !dbg !11143
  br label %return, !dbg !11143

if.end13:                                         ; preds = %if.end9
  %4 = load i32, i32* %fodder, align 4, !dbg !11145
  %call14 = call i32 @dup2(i32 %4, i32 1) #7, !dbg !11146
  %call15 = call i32 @dup2(i32 1, i32 2) #7, !dbg !11147
  %5 = load i32, i32* %fodder, align 4, !dbg !11148
  %cmp16 = icmp sgt i32 %5, 2, !dbg !11150
  br i1 %cmp16, label %if.then17, label %if.end19, !dbg !11151

if.then17:                                        ; preds = %if.end13
  %6 = load i32, i32* %fodder, align 4, !dbg !11152
  %call18 = call i32 @close(i32 %6), !dbg !11154
  br label %if.end19, !dbg !11155

if.end19:                                         ; preds = %if.then17, %if.end13
  store i32 0, i32* %retval, align 4, !dbg !11156
  br label %return, !dbg !11156

return:                                           ; preds = %if.end19, %if.then12, %if.then3
  %7 = load i32, i32* %retval, align 4, !dbg !11157
  ret i32 %7, !dbg !11157
}

; Function Attrs: nounwind
declare i64 @sysconf(i32) #2

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal void @sigchild(i32 %sig) #0 !dbg !11158 {
entry:
  %sig.addr = alloca i32, align 4
  %olderrno = alloca i32, align 4
  %pid = alloca i32, align 4
  store i32 %sig, i32* %sig.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sig.addr, metadata !11159, metadata !DIExpression()), !dbg !11160
  call void @llvm.dbg.declare(metadata i32* %olderrno, metadata !11161, metadata !DIExpression()), !dbg !11162
  %call = call i32* @__errno_location() #14, !dbg !11163
  %0 = load i32, i32* %call, align 4, !dbg !11163
  store i32 %0, i32* %olderrno, align 4, !dbg !11162
  call void @llvm.dbg.declare(metadata i32* %pid, metadata !11164, metadata !DIExpression()), !dbg !11165
  %1 = load i32, i32* %sig.addr, align 4, !dbg !11166
  br label %while.cond, !dbg !11167

while.cond:                                       ; preds = %if.end, %entry
  %call1 = call i32 @waitpid(i32 -1, i32* null, i32 1), !dbg !11168
  store i32 %call1, i32* %pid, align 4, !dbg !11169
  %cmp = icmp sgt i32 %call1, 0, !dbg !11170
  br i1 %cmp, label %while.body, label %while.end, !dbg !11167

while.body:                                       ; preds = %while.cond
  %2 = load volatile i32, i32* @nb_children, align 4, !dbg !11171
  %cmp2 = icmp ugt i32 %2, 0, !dbg !11174
  br i1 %cmp2, label %if.then, label %if.end, !dbg !11175

if.then:                                          ; preds = %while.body
  %3 = load volatile i32, i32* @nb_children, align 4, !dbg !11176
  %dec = add i32 %3, -1, !dbg !11176
  store volatile i32 %dec, i32* @nb_children, align 4, !dbg !11176
  br label %if.end, !dbg !11178

if.end:                                           ; preds = %if.then, %while.body
  %4 = load i32, i32* %pid, align 4, !dbg !11179
  call void @iptrack_delete_pid(i32 %4), !dbg !11180
  br label %while.cond, !dbg !11167, !llvm.loop !11181

while.end:                                        ; preds = %while.cond
  %5 = load i32, i32* %olderrno, align 4, !dbg !11183
  %call3 = call i32* @__errno_location() #14, !dbg !11184
  store i32 %5, i32* %call3, align 4, !dbg !11185
  ret void, !dbg !11186
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal void @sigterm(i32 %sig) #0 !dbg !11187 {
entry:
  %sig.addr = alloca i32, align 4
  %olderrno = alloca i32, align 4
  store i32 %sig, i32* %sig.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sig.addr, metadata !11188, metadata !DIExpression()), !dbg !11189
  call void @llvm.dbg.declare(metadata i32* %olderrno, metadata !11190, metadata !DIExpression()), !dbg !11191
  %call = call i32* @__errno_location() #14, !dbg !11192
  %0 = load i32, i32* %call, align 4, !dbg !11192
  store i32 %0, i32* %olderrno, align 4, !dbg !11191
  %1 = load i32, i32* %sig.addr, align 4, !dbg !11193
  store volatile i32 1, i32* @stop_server, align 4, !dbg !11194
  %2 = load volatile i32, i32* @listenfd, align 4, !dbg !11195
  %cmp = icmp ne i32 %2, -1, !dbg !11197
  br i1 %cmp, label %if.then, label %if.end, !dbg !11198

if.then:                                          ; preds = %entry
  %3 = load volatile i32, i32* @listenfd, align 4, !dbg !11199
  %call1 = call i32 @shutdown(i32 %3, i32 2) #7, !dbg !11201
  %4 = load volatile i32, i32* @listenfd, align 4, !dbg !11202
  %call2 = call i32 @close(i32 %4), !dbg !11203
  br label %if.end, !dbg !11204

if.end:                                           ; preds = %if.then, %entry
  %5 = load volatile i32, i32* @listenfd6, align 4, !dbg !11205
  %cmp3 = icmp ne i32 %5, -1, !dbg !11207
  br i1 %cmp3, label %if.then4, label %if.end7, !dbg !11208

if.then4:                                         ; preds = %if.end
  %6 = load volatile i32, i32* @listenfd6, align 4, !dbg !11209
  %call5 = call i32 @shutdown(i32 %6, i32 2) #7, !dbg !11211
  %7 = load volatile i32, i32* @listenfd6, align 4, !dbg !11212
  %call6 = call i32 @close(i32 %7), !dbg !11213
  br label %if.end7, !dbg !11214

if.end7:                                          ; preds = %if.then4, %if.end
  %8 = load i32, i32* %olderrno, align 4, !dbg !11215
  %call8 = call i32* @__errno_location() #14, !dbg !11216
  store i32 %8, i32* %call8, align 4, !dbg !11217
  ret void, !dbg !11218
}

; Function Attrs: nounwind
declare i32 @shutdown(i32, i32) #2

declare i32 @waitpid(i32, i32*, i32) #9

; Function Attrs: nounwind
declare void @tzset() #2

; Function Attrs: nounwind
declare i32 @putenv(i8*) #2

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local i16* @storage_port(%struct.sockaddr_storage* %ss) #0 !dbg !11219 {
entry:
  %ss.addr = alloca %struct.sockaddr_storage*, align 8
  %si = alloca %struct.sockaddr_in*, align 8
  store %struct.sockaddr_storage* %ss, %struct.sockaddr_storage** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage** %ss.addr, metadata !11230, metadata !DIExpression()), !dbg !11231
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in** %si, metadata !11232, metadata !DIExpression()), !dbg !11234
  %0 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %ss.addr, align 8, !dbg !11235
  %1 = bitcast %struct.sockaddr_storage* %0 to %struct.sockaddr_in*, !dbg !11236
  store %struct.sockaddr_in* %1, %struct.sockaddr_in** %si, align 8, !dbg !11234
  %2 = load %struct.sockaddr_in*, %struct.sockaddr_in** %si, align 8, !dbg !11237
  %sin_port = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %2, i32 0, i32 1, !dbg !11238
  ret i16* %sin_port, !dbg !11239
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local i16* @storage_port_const(%struct.sockaddr_storage* %ss) #0 !dbg !11240 {
entry:
  %ss.addr = alloca %struct.sockaddr_storage*, align 8
  %si = alloca %struct.sockaddr_in*, align 8
  store %struct.sockaddr_storage* %ss, %struct.sockaddr_storage** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage** %ss.addr, metadata !11246, metadata !DIExpression()), !dbg !11247
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in** %si, metadata !11248, metadata !DIExpression()), !dbg !11250
  %0 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %ss.addr, align 8, !dbg !11251
  %1 = bitcast %struct.sockaddr_storage* %0 to %struct.sockaddr_in*, !dbg !11252
  store %struct.sockaddr_in* %1, %struct.sockaddr_in** %si, align 8, !dbg !11250
  %2 = load %struct.sockaddr_in*, %struct.sockaddr_in** %si, align 8, !dbg !11253
  %sin_port = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %2, i32 0, i32 1, !dbg !11254
  ret i16* %sin_port, !dbg !11255
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local i16* @storage_port6(%struct.sockaddr_storage* %ss) #0 !dbg !11256 {
entry:
  %ss.addr = alloca %struct.sockaddr_storage*, align 8
  %si = alloca %struct.sockaddr_in6*, align 8
  store %struct.sockaddr_storage* %ss, %struct.sockaddr_storage** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage** %ss.addr, metadata !11257, metadata !DIExpression()), !dbg !11258
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in6** %si, metadata !11259, metadata !DIExpression()), !dbg !11261
  %0 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %ss.addr, align 8, !dbg !11262
  %1 = bitcast %struct.sockaddr_storage* %0 to %struct.sockaddr_in6*, !dbg !11263
  store %struct.sockaddr_in6* %1, %struct.sockaddr_in6** %si, align 8, !dbg !11261
  %2 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %si, align 8, !dbg !11264
  %sin6_port = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %2, i32 0, i32 1, !dbg !11265
  ret i16* %sin6_port, !dbg !11266
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local i16* @storage_port6_const(%struct.sockaddr_storage* %ss) #0 !dbg !11267 {
entry:
  %ss.addr = alloca %struct.sockaddr_storage*, align 8
  %si = alloca %struct.sockaddr_in6*, align 8
  store %struct.sockaddr_storage* %ss, %struct.sockaddr_storage** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage** %ss.addr, metadata !11268, metadata !DIExpression()), !dbg !11269
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in6** %si, metadata !11270, metadata !DIExpression()), !dbg !11272
  %0 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %ss.addr, align 8, !dbg !11273
  %1 = bitcast %struct.sockaddr_storage* %0 to %struct.sockaddr_in6*, !dbg !11274
  store %struct.sockaddr_in6* %1, %struct.sockaddr_in6** %si, align 8, !dbg !11272
  %2 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %si, align 8, !dbg !11275
  %sin6_port = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %2, i32 0, i32 1, !dbg !11276
  ret i16* %sin6_port, !dbg !11277
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local %struct.in_addr* @storage_sin_addr(%struct.sockaddr_storage* %ss) #0 !dbg !11278 {
entry:
  %ss.addr = alloca %struct.sockaddr_storage*, align 8
  %si = alloca %struct.sockaddr_in*, align 8
  store %struct.sockaddr_storage* %ss, %struct.sockaddr_storage** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage** %ss.addr, metadata !11282, metadata !DIExpression()), !dbg !11283
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in** %si, metadata !11284, metadata !DIExpression()), !dbg !11285
  %0 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %ss.addr, align 8, !dbg !11286
  %1 = bitcast %struct.sockaddr_storage* %0 to %struct.sockaddr_in*, !dbg !11287
  store %struct.sockaddr_in* %1, %struct.sockaddr_in** %si, align 8, !dbg !11285
  %2 = load %struct.sockaddr_in*, %struct.sockaddr_in** %si, align 8, !dbg !11288
  %sin_addr = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %2, i32 0, i32 2, !dbg !11289
  ret %struct.in_addr* %sin_addr, !dbg !11290
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local %struct.in_addr* @storage_sin_addr_const(%struct.sockaddr_storage* %ss) #0 !dbg !11291 {
entry:
  %ss.addr = alloca %struct.sockaddr_storage*, align 8
  %si = alloca %struct.sockaddr_in*, align 8
  store %struct.sockaddr_storage* %ss, %struct.sockaddr_storage** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage** %ss.addr, metadata !11296, metadata !DIExpression()), !dbg !11297
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in** %si, metadata !11298, metadata !DIExpression()), !dbg !11299
  %0 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %ss.addr, align 8, !dbg !11300
  %1 = bitcast %struct.sockaddr_storage* %0 to %struct.sockaddr_in*, !dbg !11301
  store %struct.sockaddr_in* %1, %struct.sockaddr_in** %si, align 8, !dbg !11299
  %2 = load %struct.sockaddr_in*, %struct.sockaddr_in** %si, align 8, !dbg !11302
  %sin_addr = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %2, i32 0, i32 2, !dbg !11303
  ret %struct.in_addr* %sin_addr, !dbg !11304
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local %struct.in6_addr* @storage_sin_addr6(%struct.sockaddr_storage* %ss) #0 !dbg !11305 {
entry:
  %ss.addr = alloca %struct.sockaddr_storage*, align 8
  %si = alloca %struct.sockaddr_in6*, align 8
  store %struct.sockaddr_storage* %ss, %struct.sockaddr_storage** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage** %ss.addr, metadata !11309, metadata !DIExpression()), !dbg !11310
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in6** %si, metadata !11311, metadata !DIExpression()), !dbg !11312
  %0 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %ss.addr, align 8, !dbg !11313
  %1 = bitcast %struct.sockaddr_storage* %0 to %struct.sockaddr_in6*, !dbg !11314
  store %struct.sockaddr_in6* %1, %struct.sockaddr_in6** %si, align 8, !dbg !11312
  %2 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %si, align 8, !dbg !11315
  %sin6_addr = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %2, i32 0, i32 3, !dbg !11316
  ret %struct.in6_addr* %sin6_addr, !dbg !11317
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local %struct.in6_addr* @storage_sin_addr6_const(%struct.sockaddr_storage* %ss) #0 !dbg !11318 {
entry:
  %ss.addr = alloca %struct.sockaddr_storage*, align 8
  %si = alloca %struct.sockaddr_in6*, align 8
  store %struct.sockaddr_storage* %ss, %struct.sockaddr_storage** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage** %ss.addr, metadata !11323, metadata !DIExpression()), !dbg !11324
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in6** %si, metadata !11325, metadata !DIExpression()), !dbg !11326
  %0 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %ss.addr, align 8, !dbg !11327
  %1 = bitcast %struct.sockaddr_storage* %0 to %struct.sockaddr_in6*, !dbg !11328
  store %struct.sockaddr_in6* %1, %struct.sockaddr_in6** %si, align 8, !dbg !11326
  %2 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %si, align 8, !dbg !11329
  %sin6_addr = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %2, i32 0, i32 3, !dbg !11330
  ret %struct.in6_addr* %sin6_addr, !dbg !11331
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @pw_unix_check(%struct.AuthResult_* %result, i8* %account, i8* %password, %struct.sockaddr_storage* %sa, %struct.sockaddr_storage* %peer) #0 !dbg !11332 {
entry:
  %result.addr = alloca %struct.AuthResult_*, align 8
  %account.addr = alloca i8*, align 8
  %password.addr = alloca i8*, align 8
  %sa.addr = alloca %struct.sockaddr_storage*, align 8
  %peer.addr = alloca %struct.sockaddr_storage*, align 8
  %cpwd = alloca i8*, align 8
  %pw = alloca %struct.passwd, align 8
  %pw_ = alloca %struct.passwd*, align 8
  %spw = alloca %struct.spwd*, align 8
  %dir = alloca i8*, align 8
  %shell = alloca i8*, align 8
  %today = alloca i64, align 8
  %crypted = alloca i8*, align 8
  store %struct.AuthResult_* %result, %struct.AuthResult_** %result.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AuthResult_** %result.addr, metadata !11354, metadata !DIExpression()), !dbg !11355
  store i8* %account, i8** %account.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %account.addr, metadata !11356, metadata !DIExpression()), !dbg !11357
  store i8* %password, i8** %password.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %password.addr, metadata !11358, metadata !DIExpression()), !dbg !11359
  store %struct.sockaddr_storage* %sa, %struct.sockaddr_storage** %sa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage** %sa.addr, metadata !11360, metadata !DIExpression()), !dbg !11361
  store %struct.sockaddr_storage* %peer, %struct.sockaddr_storage** %peer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage** %peer.addr, metadata !11362, metadata !DIExpression()), !dbg !11363
  call void @llvm.dbg.declare(metadata i8** %cpwd, metadata !11364, metadata !DIExpression()), !dbg !11365
  store i8* null, i8** %cpwd, align 8, !dbg !11365
  call void @llvm.dbg.declare(metadata %struct.passwd* %pw, metadata !11366, metadata !DIExpression()), !dbg !11376
  call void @llvm.dbg.declare(metadata %struct.passwd** %pw_, metadata !11377, metadata !DIExpression()), !dbg !11379
  call void @llvm.dbg.declare(metadata %struct.spwd** %spw, metadata !11380, metadata !DIExpression()), !dbg !11394
  call void @llvm.dbg.declare(metadata i8** %dir, metadata !11395, metadata !DIExpression()), !dbg !11396
  store i8* null, i8** %dir, align 8, !dbg !11396
  %0 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %sa.addr, align 8, !dbg !11397
  %1 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %peer.addr, align 8, !dbg !11398
  %2 = load %struct.AuthResult_*, %struct.AuthResult_** %result.addr, align 8, !dbg !11399
  %auth_ok = getelementptr inbounds %struct.AuthResult_, %struct.AuthResult_* %2, i32 0, i32 0, !dbg !11400
  store i32 0, i32* %auth_ok, align 8, !dbg !11401
  %3 = load i8*, i8** %account.addr, align 8, !dbg !11402
  %call = call %struct.passwd* @getpwnam(i8* %3), !dbg !11404
  store %struct.passwd* %call, %struct.passwd** %pw_, align 8, !dbg !11405
  %cmp = icmp eq %struct.passwd* %call, null, !dbg !11406
  br i1 %cmp, label %if.then, label %if.end, !dbg !11407

if.then:                                          ; preds = %entry
  br label %return, !dbg !11408

if.end:                                           ; preds = %entry
  %4 = load %struct.passwd*, %struct.passwd** %pw_, align 8, !dbg !11410
  %5 = bitcast %struct.passwd* %pw to i8*, !dbg !11411
  %6 = bitcast %struct.passwd* %4 to i8*, !dbg !11411
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 48, i1 false), !dbg !11411
  %7 = load %struct.AuthResult_*, %struct.AuthResult_** %result.addr, align 8, !dbg !11412
  %auth_ok1 = getelementptr inbounds %struct.AuthResult_, %struct.AuthResult_* %7, i32 0, i32 0, !dbg !11413
  %8 = load i32, i32* %auth_ok1, align 8, !dbg !11414
  %dec = add i32 %8, -1, !dbg !11414
  store i32 %dec, i32* %auth_ok1, align 8, !dbg !11414
  %pw_shell = getelementptr inbounds %struct.passwd, %struct.passwd* %pw, i32 0, i32 6, !dbg !11415
  %9 = load i8*, i8** %pw_shell, align 8, !dbg !11415
  %cmp2 = icmp eq i8* %9, null, !dbg !11417
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !11418

if.then3:                                         ; preds = %if.end
  br label %return, !dbg !11419

if.end4:                                          ; preds = %if.end
  %pw_shell5 = getelementptr inbounds %struct.passwd, %struct.passwd* %pw, i32 0, i32 6, !dbg !11421
  %10 = load i8*, i8** %pw_shell5, align 8, !dbg !11421
  %call6 = call i32 @strcasecmp(i8* %10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.466, i64 0, i64 0)) #12, !dbg !11423
  %cmp7 = icmp ne i32 %call6, 0, !dbg !11424
  br i1 %cmp7, label %if.then8, label %if.end17, !dbg !11425

if.then8:                                         ; preds = %if.end4
  call void @llvm.dbg.declare(metadata i8** %shell, metadata !11426, metadata !DIExpression()), !dbg !11428
  call void @setusershell() #7, !dbg !11429
  br label %while.cond, !dbg !11430

while.cond:                                       ; preds = %while.body, %if.then8
  %call9 = call i8* @getusershell() #7, !dbg !11431
  store i8* %call9, i8** %shell, align 8, !dbg !11432
  %cmp10 = icmp ne i8* %call9, null, !dbg !11433
  br i1 %cmp10, label %land.rhs, label %land.end, !dbg !11434

land.rhs:                                         ; preds = %while.cond
  %pw_shell11 = getelementptr inbounds %struct.passwd, %struct.passwd* %pw, i32 0, i32 6, !dbg !11435
  %11 = load i8*, i8** %pw_shell11, align 8, !dbg !11435
  %12 = load i8*, i8** %shell, align 8, !dbg !11436
  %call12 = call i32 @strcmp(i8* %11, i8* %12) #12, !dbg !11437
  %cmp13 = icmp ne i32 %call12, 0, !dbg !11438
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %13 = phi i1 [ false, %while.cond ], [ %cmp13, %land.rhs ], !dbg !11439
  br i1 %13, label %while.body, label %while.end, !dbg !11430

while.body:                                       ; preds = %land.end
  br label %while.cond, !dbg !11430, !llvm.loop !11440

while.end:                                        ; preds = %land.end
  call void @endusershell() #7, !dbg !11442
  %14 = load i8*, i8** %shell, align 8, !dbg !11443
  %cmp14 = icmp eq i8* %14, null, !dbg !11445
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !11446

if.then15:                                        ; preds = %while.end
  br label %return, !dbg !11447

if.end16:                                         ; preds = %while.end
  br label %if.end17, !dbg !11449

if.end17:                                         ; preds = %if.end16, %if.end4
  %pw_dir = getelementptr inbounds %struct.passwd, %struct.passwd* %pw, i32 0, i32 5, !dbg !11450
  %15 = load i8*, i8** %pw_dir, align 8, !dbg !11450
  %call18 = call noalias i8* @strdup(i8* %15) #7, !dbg !11452
  store i8* %call18, i8** %dir, align 8, !dbg !11453
  %cmp19 = icmp eq i8* %call18, null, !dbg !11454
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !11455

if.then20:                                        ; preds = %if.end17
  br label %return, !dbg !11456

if.end21:                                         ; preds = %if.end17
  %pw_passwd = getelementptr inbounds %struct.passwd, %struct.passwd* %pw, i32 0, i32 1, !dbg !11458
  %16 = load i8*, i8** %pw_passwd, align 8, !dbg !11458
  %arrayidx = getelementptr i8, i8* %16, i64 0, !dbg !11460
  %17 = load i8, i8* %arrayidx, align 1, !dbg !11460
  %conv = sext i8 %17 to i32, !dbg !11460
  %cmp22 = icmp eq i32 %conv, 120, !dbg !11461
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !11462

land.lhs.true:                                    ; preds = %if.end21
  %pw_passwd24 = getelementptr inbounds %struct.passwd, %struct.passwd* %pw, i32 0, i32 1, !dbg !11463
  %18 = load i8*, i8** %pw_passwd24, align 8, !dbg !11463
  %arrayidx25 = getelementptr i8, i8* %18, i64 1, !dbg !11464
  %19 = load i8, i8* %arrayidx25, align 1, !dbg !11464
  %conv26 = sext i8 %19 to i32, !dbg !11464
  %cmp27 = icmp eq i32 %conv26, 0, !dbg !11465
  br i1 %cmp27, label %land.lhs.true45, label %lor.lhs.false, !dbg !11466

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end21
  %pw_passwd29 = getelementptr inbounds %struct.passwd, %struct.passwd* %pw, i32 0, i32 1, !dbg !11467
  %20 = load i8*, i8** %pw_passwd29, align 8, !dbg !11467
  %arrayidx30 = getelementptr i8, i8* %20, i64 0, !dbg !11468
  %21 = load i8, i8* %arrayidx30, align 1, !dbg !11468
  %conv31 = sext i8 %21 to i32, !dbg !11468
  %cmp32 = icmp eq i32 %conv31, 35, !dbg !11469
  br i1 %cmp32, label %land.lhs.true34, label %if.else, !dbg !11470

land.lhs.true34:                                  ; preds = %lor.lhs.false
  %pw_passwd35 = getelementptr inbounds %struct.passwd, %struct.passwd* %pw, i32 0, i32 1, !dbg !11471
  %22 = load i8*, i8** %pw_passwd35, align 8, !dbg !11471
  %arrayidx36 = getelementptr i8, i8* %22, i64 1, !dbg !11472
  %23 = load i8, i8* %arrayidx36, align 1, !dbg !11472
  %conv37 = sext i8 %23 to i32, !dbg !11472
  %cmp38 = icmp eq i32 %conv37, 35, !dbg !11473
  br i1 %cmp38, label %land.lhs.true40, label %if.else, !dbg !11474

land.lhs.true40:                                  ; preds = %land.lhs.true34
  %pw_passwd41 = getelementptr inbounds %struct.passwd, %struct.passwd* %pw, i32 0, i32 1, !dbg !11475
  %24 = load i8*, i8** %pw_passwd41, align 8, !dbg !11475
  %add.ptr = getelementptr i8, i8* %24, i64 2, !dbg !11476
  %25 = load i8*, i8** %account.addr, align 8, !dbg !11477
  %call42 = call i32 @strcmp(i8* %add.ptr, i8* %25) #12, !dbg !11478
  %cmp43 = icmp eq i32 %call42, 0, !dbg !11479
  br i1 %cmp43, label %land.lhs.true45, label %if.else, !dbg !11480

land.lhs.true45:                                  ; preds = %land.lhs.true40, %land.lhs.true
  %26 = load i8*, i8** %account.addr, align 8, !dbg !11481
  %call46 = call %struct.spwd* @getspnam(i8* %26), !dbg !11482
  store %struct.spwd* %call46, %struct.spwd** %spw, align 8, !dbg !11483
  %cmp47 = icmp ne %struct.spwd* %call46, null, !dbg !11484
  br i1 %cmp47, label %land.lhs.true49, label %if.else, !dbg !11485

land.lhs.true49:                                  ; preds = %land.lhs.true45
  %27 = load %struct.spwd*, %struct.spwd** %spw, align 8, !dbg !11486
  %sp_pwdp = getelementptr inbounds %struct.spwd, %struct.spwd* %27, i32 0, i32 1, !dbg !11487
  %28 = load i8*, i8** %sp_pwdp, align 8, !dbg !11487
  %cmp50 = icmp ne i8* %28, null, !dbg !11488
  br i1 %cmp50, label %if.then52, label %if.else, !dbg !11489

if.then52:                                        ; preds = %land.lhs.true49
  %29 = load %struct.spwd*, %struct.spwd** %spw, align 8, !dbg !11490
  %sp_pwdp53 = getelementptr inbounds %struct.spwd, %struct.spwd* %29, i32 0, i32 1, !dbg !11492
  %30 = load i8*, i8** %sp_pwdp53, align 8, !dbg !11492
  %arrayidx54 = getelementptr i8, i8* %30, i64 0, !dbg !11490
  %31 = load i8, i8* %arrayidx54, align 1, !dbg !11490
  %conv55 = sext i8 %31 to i32, !dbg !11490
  %cmp56 = icmp eq i32 %conv55, 64, !dbg !11493
  br i1 %cmp56, label %cond.true, label %cond.false, !dbg !11490

cond.true:                                        ; preds = %if.then52
  br label %cond.end, !dbg !11490

cond.false:                                       ; preds = %if.then52
  %32 = load %struct.spwd*, %struct.spwd** %spw, align 8, !dbg !11494
  %sp_pwdp58 = getelementptr inbounds %struct.spwd, %struct.spwd* %32, i32 0, i32 1, !dbg !11495
  %33 = load i8*, i8** %sp_pwdp58, align 8, !dbg !11495
  br label %cond.end, !dbg !11490

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ null, %cond.true ], [ %33, %cond.false ], !dbg !11490
  store i8* %cond, i8** %cpwd, align 8, !dbg !11496
  %34 = load %struct.spwd*, %struct.spwd** %spw, align 8, !dbg !11497
  %sp_expire = getelementptr inbounds %struct.spwd, %struct.spwd* %34, i32 0, i32 7, !dbg !11499
  %35 = load i64, i64* %sp_expire, align 8, !dbg !11499
  %cmp59 = icmp sgt i64 %35, 0, !dbg !11500
  br i1 %cmp59, label %if.then64, label %lor.lhs.false61, !dbg !11501

lor.lhs.false61:                                  ; preds = %cond.end
  %36 = load %struct.spwd*, %struct.spwd** %spw, align 8, !dbg !11502
  %sp_max = getelementptr inbounds %struct.spwd, %struct.spwd* %36, i32 0, i32 4, !dbg !11503
  %37 = load i64, i64* %sp_max, align 8, !dbg !11503
  %cmp62 = icmp sgt i64 %37, 0, !dbg !11504
  br i1 %cmp62, label %if.then64, label %if.end88, !dbg !11505

if.then64:                                        ; preds = %lor.lhs.false61, %cond.end
  call void @llvm.dbg.declare(metadata i64* %today, metadata !11506, metadata !DIExpression()), !dbg !11508
  %call65 = call i64 @time(i64* null) #7, !dbg !11509
  %div = sdiv i64 %call65, 86400, !dbg !11510
  store i64 %div, i64* %today, align 8, !dbg !11508
  %38 = load %struct.spwd*, %struct.spwd** %spw, align 8, !dbg !11511
  %sp_expire66 = getelementptr inbounds %struct.spwd, %struct.spwd* %38, i32 0, i32 7, !dbg !11513
  %39 = load i64, i64* %sp_expire66, align 8, !dbg !11513
  %cmp67 = icmp sgt i64 %39, 0, !dbg !11514
  br i1 %cmp67, label %land.lhs.true69, label %if.end74, !dbg !11515

land.lhs.true69:                                  ; preds = %if.then64
  %40 = load %struct.spwd*, %struct.spwd** %spw, align 8, !dbg !11516
  %sp_expire70 = getelementptr inbounds %struct.spwd, %struct.spwd* %40, i32 0, i32 7, !dbg !11517
  %41 = load i64, i64* %sp_expire70, align 8, !dbg !11517
  %42 = load i64, i64* %today, align 8, !dbg !11518
  %cmp71 = icmp slt i64 %41, %42, !dbg !11519
  br i1 %cmp71, label %if.then73, label %if.end74, !dbg !11520

if.then73:                                        ; preds = %land.lhs.true69
  br label %bye, !dbg !11521

if.end74:                                         ; preds = %land.lhs.true69, %if.then64
  %43 = load %struct.spwd*, %struct.spwd** %spw, align 8, !dbg !11523
  %sp_max75 = getelementptr inbounds %struct.spwd, %struct.spwd* %43, i32 0, i32 4, !dbg !11525
  %44 = load i64, i64* %sp_max75, align 8, !dbg !11525
  %cmp76 = icmp sgt i64 %44, 0, !dbg !11526
  br i1 %cmp76, label %land.lhs.true78, label %if.end87, !dbg !11527

land.lhs.true78:                                  ; preds = %if.end74
  %45 = load %struct.spwd*, %struct.spwd** %spw, align 8, !dbg !11528
  %sp_lstchg = getelementptr inbounds %struct.spwd, %struct.spwd* %45, i32 0, i32 2, !dbg !11529
  %46 = load i64, i64* %sp_lstchg, align 8, !dbg !11529
  %cmp79 = icmp sgt i64 %46, 0, !dbg !11530
  br i1 %cmp79, label %land.lhs.true81, label %if.end87, !dbg !11531

land.lhs.true81:                                  ; preds = %land.lhs.true78
  %47 = load %struct.spwd*, %struct.spwd** %spw, align 8, !dbg !11532
  %sp_lstchg82 = getelementptr inbounds %struct.spwd, %struct.spwd* %47, i32 0, i32 2, !dbg !11533
  %48 = load i64, i64* %sp_lstchg82, align 8, !dbg !11533
  %49 = load %struct.spwd*, %struct.spwd** %spw, align 8, !dbg !11534
  %sp_max83 = getelementptr inbounds %struct.spwd, %struct.spwd* %49, i32 0, i32 4, !dbg !11535
  %50 = load i64, i64* %sp_max83, align 8, !dbg !11535
  %add = add i64 %48, %50, !dbg !11536
  %51 = load i64, i64* %today, align 8, !dbg !11537
  %cmp84 = icmp slt i64 %add, %51, !dbg !11538
  br i1 %cmp84, label %if.then86, label %if.end87, !dbg !11539

if.then86:                                        ; preds = %land.lhs.true81
  br label %bye, !dbg !11540

if.end87:                                         ; preds = %land.lhs.true81, %land.lhs.true78, %if.end74
  br label %if.end88, !dbg !11542

if.end88:                                         ; preds = %if.end87, %lor.lhs.false61
  br label %if.end90, !dbg !11543

if.else:                                          ; preds = %land.lhs.true49, %land.lhs.true45, %land.lhs.true40, %land.lhs.true34, %lor.lhs.false
  %pw_passwd89 = getelementptr inbounds %struct.passwd, %struct.passwd* %pw, i32 0, i32 1, !dbg !11544
  %52 = load i8*, i8** %pw_passwd89, align 8, !dbg !11544
  store i8* %52, i8** %cpwd, align 8, !dbg !11546
  br label %if.end90

if.end90:                                         ; preds = %if.else, %if.end88
  call void @llvm.dbg.declare(metadata i8** %crypted, metadata !11547, metadata !DIExpression()), !dbg !11549
  %53 = load i8*, i8** %cpwd, align 8, !dbg !11550
  %cmp91 = icmp eq i8* %53, null, !dbg !11552
  br i1 %cmp91, label %if.then101, label %lor.lhs.false93, !dbg !11553

lor.lhs.false93:                                  ; preds = %if.end90
  %54 = load i8*, i8** %password.addr, align 8, !dbg !11554
  %55 = load i8*, i8** %cpwd, align 8, !dbg !11555
  %call94 = call i8* @crypt(i8* %54, i8* %55) #7, !dbg !11556
  store i8* %call94, i8** %crypted, align 8, !dbg !11557
  %cmp95 = icmp eq i8* %call94, null, !dbg !11558
  br i1 %cmp95, label %if.then101, label %lor.lhs.false97, !dbg !11559

lor.lhs.false97:                                  ; preds = %lor.lhs.false93
  %56 = load i8*, i8** %cpwd, align 8, !dbg !11560
  %57 = load i8*, i8** %crypted, align 8, !dbg !11561
  %call98 = call i32 @pure_strcmp(i8* %56, i8* %57), !dbg !11562
  %cmp99 = icmp ne i32 %call98, 0, !dbg !11563
  br i1 %cmp99, label %if.then101, label %if.end102, !dbg !11564

if.then101:                                       ; preds = %lor.lhs.false97, %lor.lhs.false93, %if.end90
  br label %bye, !dbg !11565

if.end102:                                        ; preds = %lor.lhs.false97
  %pw_uid = getelementptr inbounds %struct.passwd, %struct.passwd* %pw, i32 0, i32 2, !dbg !11567
  %58 = load i32, i32* %pw_uid, align 8, !dbg !11567
  %59 = load %struct.AuthResult_*, %struct.AuthResult_** %result.addr, align 8, !dbg !11568
  %uid = getelementptr inbounds %struct.AuthResult_, %struct.AuthResult_* %59, i32 0, i32 1, !dbg !11569
  store i32 %58, i32* %uid, align 4, !dbg !11570
  %pw_gid = getelementptr inbounds %struct.passwd, %struct.passwd* %pw, i32 0, i32 3, !dbg !11571
  %60 = load i32, i32* %pw_gid, align 4, !dbg !11571
  %61 = load %struct.AuthResult_*, %struct.AuthResult_** %result.addr, align 8, !dbg !11572
  %gid = getelementptr inbounds %struct.AuthResult_, %struct.AuthResult_* %61, i32 0, i32 2, !dbg !11573
  store i32 %60, i32* %gid, align 8, !dbg !11574
  %62 = load i8*, i8** %dir, align 8, !dbg !11575
  %63 = load %struct.AuthResult_*, %struct.AuthResult_** %result.addr, align 8, !dbg !11576
  %dir103 = getelementptr inbounds %struct.AuthResult_, %struct.AuthResult_* %63, i32 0, i32 3, !dbg !11577
  store i8* %62, i8** %dir103, align 8, !dbg !11578
  %64 = load %struct.AuthResult_*, %struct.AuthResult_** %result.addr, align 8, !dbg !11579
  %slow_tilde_expansion = getelementptr inbounds %struct.AuthResult_, %struct.AuthResult_* %64, i32 0, i32 4, !dbg !11580
  store i32 0, i32* %slow_tilde_expansion, align 8, !dbg !11581
  %65 = load %struct.AuthResult_*, %struct.AuthResult_** %result.addr, align 8, !dbg !11582
  %auth_ok104 = getelementptr inbounds %struct.AuthResult_, %struct.AuthResult_* %65, i32 0, i32 0, !dbg !11583
  %66 = load i32, i32* %auth_ok104, align 8, !dbg !11583
  %sub = sub i32 0, %66, !dbg !11584
  %67 = load %struct.AuthResult_*, %struct.AuthResult_** %result.addr, align 8, !dbg !11585
  %auth_ok105 = getelementptr inbounds %struct.AuthResult_, %struct.AuthResult_* %67, i32 0, i32 0, !dbg !11586
  store i32 %sub, i32* %auth_ok105, align 8, !dbg !11587
  br label %return, !dbg !11588

bye:                                              ; preds = %if.then101, %if.then86, %if.then73
  call void @llvm.dbg.label(metadata !11589), !dbg !11590
  %68 = load i8*, i8** %dir, align 8, !dbg !11591
  call void @free(i8* %68) #7, !dbg !11592
  br label %return, !dbg !11593

return:                                           ; preds = %bye, %if.end102, %if.then20, %if.then15, %if.then3, %if.then
  ret void, !dbg !11593
}

; Function Attrs: nounwind
declare void @setusershell() #2

; Function Attrs: nounwind
declare i8* @getusershell() #2

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #5

; Function Attrs: nounwind
declare void @endusershell() #2

declare %struct.spwd* @getspnam(i8*) #9

; Function Attrs: nounwind
declare i8* @crypt(i8*, i8*) #2

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local i8* @getname(i32 %uid) #0 !dbg !11594 {
entry:
  %retval = alloca i8*, align 8
  %uid.addr = alloca i32, align 4
  %p = alloca %struct.userid*, align 8
  %pwd = alloca %struct.passwd*, align 8
  store i32 %uid, i32* %uid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %uid.addr, metadata !11597, metadata !DIExpression()), !dbg !11598
  call void @llvm.dbg.declare(metadata %struct.userid** %p, metadata !11599, metadata !DIExpression()), !dbg !11600
  call void @llvm.dbg.declare(metadata %struct.passwd** %pwd, metadata !11601, metadata !DIExpression()), !dbg !11612
  store %struct.passwd* null, %struct.passwd** %pwd, align 8, !dbg !11612
  %0 = load %struct.userid*, %struct.userid** @user_head, align 8, !dbg !11613
  store %struct.userid* %0, %struct.userid** %p, align 8, !dbg !11615
  br label %for.cond, !dbg !11616

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.userid*, %struct.userid** %p, align 8, !dbg !11617
  %tobool = icmp ne %struct.userid* %1, null, !dbg !11619
  br i1 %tobool, label %for.body, label %for.end, !dbg !11619

for.body:                                         ; preds = %for.cond
  %2 = load %struct.userid*, %struct.userid** %p, align 8, !dbg !11620
  %uid1 = getelementptr inbounds %struct.userid, %struct.userid* %2, i32 0, i32 1, !dbg !11623
  %3 = load i32, i32* %uid1, align 8, !dbg !11623
  %4 = load i32, i32* %uid.addr, align 4, !dbg !11624
  %cmp = icmp eq i32 %3, %4, !dbg !11625
  br i1 %cmp, label %if.then, label %if.end, !dbg !11626

if.then:                                          ; preds = %for.body
  %5 = load %struct.userid*, %struct.userid** %p, align 8, !dbg !11627
  %name = getelementptr inbounds %struct.userid, %struct.userid* %5, i32 0, i32 2, !dbg !11629
  %6 = load i8*, i8** %name, align 8, !dbg !11629
  store i8* %6, i8** %retval, align 8, !dbg !11630
  br label %return, !dbg !11630

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !11631

for.inc:                                          ; preds = %if.end
  %7 = load %struct.userid*, %struct.userid** %p, align 8, !dbg !11632
  %next = getelementptr inbounds %struct.userid, %struct.userid* %7, i32 0, i32 0, !dbg !11633
  %8 = load %struct.userid*, %struct.userid** %next, align 8, !dbg !11633
  store %struct.userid* %8, %struct.userid** %p, align 8, !dbg !11634
  br label %for.cond, !dbg !11635, !llvm.loop !11636

for.end:                                          ; preds = %for.cond
  %9 = load i8, i8* @chrooted, align 1, !dbg !11638
  %conv = sext i8 %9 to i32, !dbg !11638
  %cmp2 = icmp eq i32 %conv, 0, !dbg !11640
  br i1 %cmp2, label %land.lhs.true, label %if.end7, !dbg !11641

land.lhs.true:                                    ; preds = %for.end
  %10 = load i32, i32* getelementptr inbounds (%struct.AuthResult_, %struct.AuthResult_* @authresult, i32 0, i32 4), align 8, !dbg !11642
  %cmp4 = icmp eq i32 %10, 0, !dbg !11643
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !11644

if.then6:                                         ; preds = %land.lhs.true
  %11 = load i32, i32* %uid.addr, align 4, !dbg !11645
  %call = call %struct.passwd* @getpwuid(i32 %11), !dbg !11647
  store %struct.passwd* %call, %struct.passwd** %pwd, align 8, !dbg !11648
  br label %if.end7, !dbg !11649

if.end7:                                          ; preds = %if.then6, %land.lhs.true, %for.end
  %call8 = call noalias i8* @malloc(i64 24) #7, !dbg !11650
  %12 = bitcast i8* %call8 to %struct.userid*, !dbg !11650
  store %struct.userid* %12, %struct.userid** %p, align 8, !dbg !11652
  %cmp9 = icmp eq %struct.userid* %12, null, !dbg !11653
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !11654

if.then11:                                        ; preds = %if.end7
  call void @die_mem() #11, !dbg !11655
  unreachable, !dbg !11655

if.end12:                                         ; preds = %if.end7
  %13 = load i32, i32* %uid.addr, align 4, !dbg !11657
  %14 = load %struct.userid*, %struct.userid** %p, align 8, !dbg !11658
  %uid13 = getelementptr inbounds %struct.userid, %struct.userid* %14, i32 0, i32 1, !dbg !11659
  store i32 %13, i32* %uid13, align 8, !dbg !11660
  %call14 = call noalias i8* @malloc(i64 11) #7, !dbg !11661
  %15 = load %struct.userid*, %struct.userid** %p, align 8, !dbg !11663
  %name15 = getelementptr inbounds %struct.userid, %struct.userid* %15, i32 0, i32 2, !dbg !11664
  store i8* %call14, i8** %name15, align 8, !dbg !11665
  %cmp16 = icmp eq i8* %call14, null, !dbg !11666
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !11667

if.then18:                                        ; preds = %if.end12
  call void @die_mem() #11, !dbg !11668
  unreachable, !dbg !11668

if.end19:                                         ; preds = %if.end12
  %16 = load %struct.passwd*, %struct.passwd** %pwd, align 8, !dbg !11670
  %cmp20 = icmp ne %struct.passwd* %16, null, !dbg !11672
  br i1 %cmp20, label %if.then22, label %if.else, !dbg !11673

if.then22:                                        ; preds = %if.end19
  %17 = load %struct.userid*, %struct.userid** %p, align 8, !dbg !11674
  %name23 = getelementptr inbounds %struct.userid, %struct.userid* %17, i32 0, i32 2, !dbg !11674
  %18 = load i8*, i8** %name23, align 8, !dbg !11674
  %19 = load %struct.passwd*, %struct.passwd** %pwd, align 8, !dbg !11674
  %pw_name = getelementptr inbounds %struct.passwd, %struct.passwd* %19, i32 0, i32 0, !dbg !11674
  %20 = load i8*, i8** %pw_name, align 8, !dbg !11674
  %call24 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %18, i64 11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.469, i64 0, i64 0), i8* %20) #7, !dbg !11674
  %cmp25 = icmp sge i32 %call24, 11, !dbg !11674
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !11677

if.then27:                                        ; preds = %if.then22
  call void @_EXIT(i32 1) #11, !dbg !11678
  unreachable, !dbg !11678

if.end28:                                         ; preds = %if.then22
  br label %if.end35, !dbg !11680

if.else:                                          ; preds = %if.end19
  %21 = load %struct.userid*, %struct.userid** %p, align 8, !dbg !11681
  %name29 = getelementptr inbounds %struct.userid, %struct.userid* %21, i32 0, i32 2, !dbg !11681
  %22 = load i8*, i8** %name29, align 8, !dbg !11681
  %23 = load i32, i32* %uid.addr, align 4, !dbg !11681
  %call30 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %22, i64 11, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.470, i64 0, i64 0), i32 %23) #7, !dbg !11681
  %cmp31 = icmp sge i32 %call30, 11, !dbg !11681
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !11684

if.then33:                                        ; preds = %if.else
  call void @_EXIT(i32 1) #11, !dbg !11685
  unreachable, !dbg !11685

if.end34:                                         ; preds = %if.else
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.end28
  %24 = load %struct.userid*, %struct.userid** @user_head, align 8, !dbg !11687
  %25 = load %struct.userid*, %struct.userid** %p, align 8, !dbg !11688
  %next36 = getelementptr inbounds %struct.userid, %struct.userid* %25, i32 0, i32 0, !dbg !11689
  store %struct.userid* %24, %struct.userid** %next36, align 8, !dbg !11690
  %26 = load %struct.userid*, %struct.userid** %p, align 8, !dbg !11691
  store %struct.userid* %26, %struct.userid** @user_head, align 8, !dbg !11692
  %27 = load %struct.userid*, %struct.userid** %p, align 8, !dbg !11693
  %name37 = getelementptr inbounds %struct.userid, %struct.userid* %27, i32 0, i32 2, !dbg !11694
  %28 = load i8*, i8** %name37, align 8, !dbg !11694
  store i8* %28, i8** %retval, align 8, !dbg !11695
  br label %return, !dbg !11695

return:                                           ; preds = %if.end35, %if.then
  %29 = load i8*, i8** %retval, align 8, !dbg !11696
  ret i8* %29, !dbg !11696
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local i8* @getgroup(i32 %gid) #0 !dbg !11697 {
entry:
  %retval = alloca i8*, align 8
  %gid.addr = alloca i32, align 4
  %p = alloca %struct.groupid*, align 8
  %pwd = alloca %struct.group*, align 8
  store i32 %gid, i32* %gid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gid.addr, metadata !11700, metadata !DIExpression()), !dbg !11701
  call void @llvm.dbg.declare(metadata %struct.groupid** %p, metadata !11702, metadata !DIExpression()), !dbg !11703
  call void @llvm.dbg.declare(metadata %struct.group** %pwd, metadata !11704, metadata !DIExpression()), !dbg !11713
  store %struct.group* null, %struct.group** %pwd, align 8, !dbg !11713
  %0 = load %struct.groupid*, %struct.groupid** @group_head, align 8, !dbg !11714
  store %struct.groupid* %0, %struct.groupid** %p, align 8, !dbg !11716
  br label %for.cond, !dbg !11717

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.groupid*, %struct.groupid** %p, align 8, !dbg !11718
  %tobool = icmp ne %struct.groupid* %1, null, !dbg !11720
  br i1 %tobool, label %for.body, label %for.end, !dbg !11720

for.body:                                         ; preds = %for.cond
  %2 = load %struct.groupid*, %struct.groupid** %p, align 8, !dbg !11721
  %gid1 = getelementptr inbounds %struct.groupid, %struct.groupid* %2, i32 0, i32 1, !dbg !11724
  %3 = load i32, i32* %gid1, align 8, !dbg !11724
  %4 = load i32, i32* %gid.addr, align 4, !dbg !11725
  %cmp = icmp eq i32 %3, %4, !dbg !11726
  br i1 %cmp, label %if.then, label %if.end, !dbg !11727

if.then:                                          ; preds = %for.body
  %5 = load %struct.groupid*, %struct.groupid** %p, align 8, !dbg !11728
  %name = getelementptr inbounds %struct.groupid, %struct.groupid* %5, i32 0, i32 2, !dbg !11730
  %6 = load i8*, i8** %name, align 8, !dbg !11730
  store i8* %6, i8** %retval, align 8, !dbg !11731
  br label %return, !dbg !11731

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !11732

for.inc:                                          ; preds = %if.end
  %7 = load %struct.groupid*, %struct.groupid** %p, align 8, !dbg !11733
  %next = getelementptr inbounds %struct.groupid, %struct.groupid* %7, i32 0, i32 0, !dbg !11734
  %8 = load %struct.groupid*, %struct.groupid** %next, align 8, !dbg !11734
  store %struct.groupid* %8, %struct.groupid** %p, align 8, !dbg !11735
  br label %for.cond, !dbg !11736, !llvm.loop !11737

for.end:                                          ; preds = %for.cond
  %9 = load i8, i8* @chrooted, align 1, !dbg !11739
  %conv = sext i8 %9 to i32, !dbg !11739
  %cmp2 = icmp eq i32 %conv, 0, !dbg !11741
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !11742

if.then4:                                         ; preds = %for.end
  %10 = load i32, i32* %gid.addr, align 4, !dbg !11743
  %call = call %struct.group* @getgrgid(i32 %10), !dbg !11745
  store %struct.group* %call, %struct.group** %pwd, align 8, !dbg !11746
  br label %if.end5, !dbg !11747

if.end5:                                          ; preds = %if.then4, %for.end
  %call6 = call noalias i8* @malloc(i64 24) #7, !dbg !11748
  %11 = bitcast i8* %call6 to %struct.groupid*, !dbg !11748
  store %struct.groupid* %11, %struct.groupid** %p, align 8, !dbg !11750
  %cmp7 = icmp eq %struct.groupid* %11, null, !dbg !11751
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !11752

if.then9:                                         ; preds = %if.end5
  call void @die_mem() #11, !dbg !11753
  unreachable, !dbg !11753

if.end10:                                         ; preds = %if.end5
  %12 = load i32, i32* %gid.addr, align 4, !dbg !11755
  %13 = load %struct.groupid*, %struct.groupid** %p, align 8, !dbg !11756
  %gid11 = getelementptr inbounds %struct.groupid, %struct.groupid* %13, i32 0, i32 1, !dbg !11757
  store i32 %12, i32* %gid11, align 8, !dbg !11758
  %call12 = call noalias i8* @malloc(i64 11) #7, !dbg !11759
  %14 = load %struct.groupid*, %struct.groupid** %p, align 8, !dbg !11761
  %name13 = getelementptr inbounds %struct.groupid, %struct.groupid* %14, i32 0, i32 2, !dbg !11762
  store i8* %call12, i8** %name13, align 8, !dbg !11763
  %cmp14 = icmp eq i8* %call12, null, !dbg !11764
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !11765

if.then16:                                        ; preds = %if.end10
  call void @die_mem() #11, !dbg !11766
  unreachable, !dbg !11766

if.end17:                                         ; preds = %if.end10
  %15 = load %struct.group*, %struct.group** %pwd, align 8, !dbg !11768
  %cmp18 = icmp ne %struct.group* %15, null, !dbg !11770
  br i1 %cmp18, label %if.then20, label %if.else, !dbg !11771

if.then20:                                        ; preds = %if.end17
  %16 = load %struct.groupid*, %struct.groupid** %p, align 8, !dbg !11772
  %name21 = getelementptr inbounds %struct.groupid, %struct.groupid* %16, i32 0, i32 2, !dbg !11772
  %17 = load i8*, i8** %name21, align 8, !dbg !11772
  %18 = load %struct.group*, %struct.group** %pwd, align 8, !dbg !11772
  %gr_name = getelementptr inbounds %struct.group, %struct.group* %18, i32 0, i32 0, !dbg !11772
  %19 = load i8*, i8** %gr_name, align 8, !dbg !11772
  %call22 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %17, i64 11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.469, i64 0, i64 0), i8* %19) #7, !dbg !11772
  %cmp23 = icmp sge i32 %call22, 11, !dbg !11772
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !11775

if.then25:                                        ; preds = %if.then20
  call void @_EXIT(i32 1) #11, !dbg !11776
  unreachable, !dbg !11776

if.end26:                                         ; preds = %if.then20
  br label %if.end33, !dbg !11778

if.else:                                          ; preds = %if.end17
  %20 = load %struct.groupid*, %struct.groupid** %p, align 8, !dbg !11779
  %name27 = getelementptr inbounds %struct.groupid, %struct.groupid* %20, i32 0, i32 2, !dbg !11779
  %21 = load i8*, i8** %name27, align 8, !dbg !11779
  %22 = load i32, i32* %gid.addr, align 4, !dbg !11779
  %call28 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %21, i64 11, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.470, i64 0, i64 0), i32 %22) #7, !dbg !11779
  %cmp29 = icmp sge i32 %call28, 11, !dbg !11779
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !11782

if.then31:                                        ; preds = %if.else
  call void @_EXIT(i32 1) #11, !dbg !11783
  unreachable, !dbg !11783

if.end32:                                         ; preds = %if.else
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.end26
  %23 = load %struct.groupid*, %struct.groupid** @group_head, align 8, !dbg !11785
  %24 = load %struct.groupid*, %struct.groupid** %p, align 8, !dbg !11786
  %next34 = getelementptr inbounds %struct.groupid, %struct.groupid* %24, i32 0, i32 0, !dbg !11787
  store %struct.groupid* %23, %struct.groupid** %next34, align 8, !dbg !11788
  %25 = load %struct.groupid*, %struct.groupid** %p, align 8, !dbg !11789
  store %struct.groupid* %25, %struct.groupid** @group_head, align 8, !dbg !11790
  %26 = load %struct.groupid*, %struct.groupid** %p, align 8, !dbg !11791
  %name35 = getelementptr inbounds %struct.groupid, %struct.groupid* %26, i32 0, i32 2, !dbg !11792
  %27 = load i8*, i8** %name35, align 8, !dbg !11792
  store i8* %27, i8** %retval, align 8, !dbg !11793
  br label %return, !dbg !11793

return:                                           ; preds = %if.end33, %if.then
  %28 = load i8*, i8** %retval, align 8, !dbg !11794
  ret i8* %28, !dbg !11794
}

declare %struct.group* @getgrgid(i32) #9

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @dolist(i8* %arg, i32 %on_ctrl_conn) #0 !dbg !11795 {
entry:
  %arg.addr = alloca i8*, align 8
  %on_ctrl_conn.addr = alloca i32, align 4
  %c = alloca i32, align 4
  %tls_fd = alloca i8*, align 8
  %justone = alloca i32, align 4
  %g = alloca %struct.glob_t, align 8
  %a = alloca i32, align 4
  %endarg = alloca i8*, align 8
  %path = alloca i8**, align 8
  %st = alloca %struct.stat, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !11798, metadata !DIExpression()), !dbg !11799
  store i32 %on_ctrl_conn, i32* %on_ctrl_conn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %on_ctrl_conn.addr, metadata !11800, metadata !DIExpression()), !dbg !11801
  call void @llvm.dbg.declare(metadata i32* %c, metadata !11802, metadata !DIExpression()), !dbg !11803
  call void @llvm.dbg.declare(metadata i8** %tls_fd, metadata !11804, metadata !DIExpression()), !dbg !11805
  store i8* null, i8** %tls_fd, align 8, !dbg !11805
  store i32 0, i32* @matches, align 4, !dbg !11806
  store i32 0, i32* @opt_S, align 4, !dbg !11807
  store i32 0, i32* @opt_t, align 4, !dbg !11808
  store i32 0, i32* @opt_r, align 4, !dbg !11809
  store i32 0, i32* @opt_R, align 4, !dbg !11810
  store i32 0, i32* @opt_F, align 4, !dbg !11811
  store i32 0, i32* @opt_d, align 4, !dbg !11812
  store i32 0, i32* @opt_C, align 4, !dbg !11813
  store i32 0, i32* @opt_a, align 4, !dbg !11814
  store i32 1, i32* @opt_l, align 4, !dbg !11815
  %0 = load i8, i8* @force_ls_a, align 1, !dbg !11816
  %conv = sext i8 %0 to i32, !dbg !11816
  %cmp = icmp ne i32 %conv, 0, !dbg !11818
  br i1 %cmp, label %if.then, label %if.end, !dbg !11819

if.then:                                          ; preds = %entry
  store i32 1, i32* @opt_a, align 4, !dbg !11820
  br label %if.end, !dbg !11822

if.end:                                           ; preds = %if.then, %entry
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !11823
  %cmp2 = icmp ne i8* %1, null, !dbg !11825
  br i1 %cmp2, label %if.then4, label %if.end46, !dbg !11826

if.then4:                                         ; preds = %if.end
  br label %while.cond, !dbg !11827

while.cond:                                       ; preds = %while.body, %if.then4
  %call = call i16** @__ctype_b_loc() #14, !dbg !11829
  %2 = load i16*, i16** %call, align 8, !dbg !11829
  %3 = load i8*, i8** %arg.addr, align 8, !dbg !11829
  %4 = load i8, i8* %3, align 1, !dbg !11829
  %conv5 = zext i8 %4 to i32, !dbg !11829
  %idxprom = sext i32 %conv5 to i64, !dbg !11829
  %arrayidx = getelementptr i16, i16* %2, i64 %idxprom, !dbg !11829
  %5 = load i16, i16* %arrayidx, align 2, !dbg !11829
  %conv6 = zext i16 %5 to i32, !dbg !11829
  %and = and i32 %conv6, 8192, !dbg !11829
  %tobool = icmp ne i32 %and, 0, !dbg !11827
  br i1 %tobool, label %while.body, label %while.end, !dbg !11827

while.body:                                       ; preds = %while.cond
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !11830
  %incdec.ptr = getelementptr i8, i8* %6, i32 1, !dbg !11830
  store i8* %incdec.ptr, i8** %arg.addr, align 8, !dbg !11830
  br label %while.cond, !dbg !11827, !llvm.loop !11832

while.end:                                        ; preds = %while.cond
  br label %while.cond7, !dbg !11834

while.cond7:                                      ; preds = %while.end44, %while.end
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !11835
  %8 = load i8, i8* %7, align 1, !dbg !11836
  %conv8 = sext i8 %8 to i32, !dbg !11836
  %cmp9 = icmp eq i32 %conv8, 45, !dbg !11837
  br i1 %cmp9, label %while.body11, label %while.end45, !dbg !11834

while.body11:                                     ; preds = %while.cond7
  br label %while.cond12, !dbg !11838

while.cond12:                                     ; preds = %sw.epilog, %while.body11
  %9 = load i8*, i8** %arg.addr, align 8, !dbg !11840
  %incdec.ptr13 = getelementptr i8, i8* %9, i32 1, !dbg !11840
  store i8* %incdec.ptr13, i8** %arg.addr, align 8, !dbg !11840
  %tobool14 = icmp ne i8* %9, null, !dbg !11840
  br i1 %tobool14, label %land.rhs, label %land.end, !dbg !11841

land.rhs:                                         ; preds = %while.cond12
  %call15 = call i16** @__ctype_b_loc() #14, !dbg !11842
  %10 = load i16*, i16** %call15, align 8, !dbg !11842
  %11 = load i8*, i8** %arg.addr, align 8, !dbg !11842
  %12 = load i8, i8* %11, align 1, !dbg !11842
  %conv16 = zext i8 %12 to i32, !dbg !11842
  %idxprom17 = sext i32 %conv16 to i64, !dbg !11842
  %arrayidx18 = getelementptr i16, i16* %10, i64 %idxprom17, !dbg !11842
  %13 = load i16, i16* %arrayidx18, align 2, !dbg !11842
  %conv19 = zext i16 %13 to i32, !dbg !11842
  %and20 = and i32 %conv19, 8, !dbg !11842
  %tobool21 = icmp ne i32 %and20, 0, !dbg !11841
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond12
  %14 = phi i1 [ false, %while.cond12 ], [ %tobool21, %land.rhs ], !dbg !11843
  br i1 %14, label %while.body22, label %while.end33, !dbg !11838

while.body22:                                     ; preds = %land.end
  %15 = load i8*, i8** %arg.addr, align 8, !dbg !11844
  %16 = load i8, i8* %15, align 1, !dbg !11846
  %conv23 = sext i8 %16 to i32, !dbg !11846
  switch i32 %conv23, label %sw.epilog [
    i32 97, label %sw.bb
    i32 108, label %sw.bb24
    i32 49, label %sw.bb25
    i32 67, label %sw.bb26
    i32 70, label %sw.bb27
    i32 82, label %sw.bb28
    i32 100, label %sw.bb29
    i32 114, label %sw.bb30
    i32 116, label %sw.bb31
    i32 83, label %sw.bb32
  ], !dbg !11847

sw.bb:                                            ; preds = %while.body22
  store i32 1, i32* @opt_a, align 4, !dbg !11848
  br label %sw.epilog, !dbg !11850

sw.bb24:                                          ; preds = %while.body22
  store i32 1, i32* @opt_l, align 4, !dbg !11851
  store i32 0, i32* @opt_C, align 4, !dbg !11852
  br label %sw.epilog, !dbg !11853

sw.bb25:                                          ; preds = %while.body22
  store i32 0, i32* @opt_C, align 4, !dbg !11854
  store i32 0, i32* @opt_l, align 4, !dbg !11855
  br label %sw.epilog, !dbg !11856

sw.bb26:                                          ; preds = %while.body22
  store i32 0, i32* @opt_l, align 4, !dbg !11857
  store i32 1, i32* @opt_C, align 4, !dbg !11858
  br label %sw.epilog, !dbg !11859

sw.bb27:                                          ; preds = %while.body22
  store i32 1, i32* @opt_F, align 4, !dbg !11860
  br label %sw.epilog, !dbg !11861

sw.bb28:                                          ; preds = %while.body22
  store i32 1, i32* @opt_R, align 4, !dbg !11862
  br label %sw.epilog, !dbg !11863

sw.bb29:                                          ; preds = %while.body22
  store i32 1, i32* @opt_d, align 4, !dbg !11864
  br label %sw.epilog, !dbg !11865

sw.bb30:                                          ; preds = %while.body22
  store i32 1, i32* @opt_r, align 4, !dbg !11866
  br label %sw.epilog, !dbg !11867

sw.bb31:                                          ; preds = %while.body22
  store i32 1, i32* @opt_t, align 4, !dbg !11868
  store i32 0, i32* @opt_S, align 4, !dbg !11869
  br label %sw.epilog, !dbg !11870

sw.bb32:                                          ; preds = %while.body22
  store i32 1, i32* @opt_S, align 4, !dbg !11871
  store i32 0, i32* @opt_t, align 4, !dbg !11872
  br label %sw.epilog, !dbg !11873

sw.epilog:                                        ; preds = %while.body22, %sw.bb32, %sw.bb31, %sw.bb30, %sw.bb29, %sw.bb28, %sw.bb27, %sw.bb26, %sw.bb25, %sw.bb24, %sw.bb
  br label %while.cond12, !dbg !11838, !llvm.loop !11874

while.end33:                                      ; preds = %land.end
  br label %while.cond34, !dbg !11876

while.cond34:                                     ; preds = %while.body42, %while.end33
  %call35 = call i16** @__ctype_b_loc() #14, !dbg !11877
  %17 = load i16*, i16** %call35, align 8, !dbg !11877
  %18 = load i8*, i8** %arg.addr, align 8, !dbg !11877
  %19 = load i8, i8* %18, align 1, !dbg !11877
  %conv36 = zext i8 %19 to i32, !dbg !11877
  %idxprom37 = sext i32 %conv36 to i64, !dbg !11877
  %arrayidx38 = getelementptr i16, i16* %17, i64 %idxprom37, !dbg !11877
  %20 = load i16, i16* %arrayidx38, align 2, !dbg !11877
  %conv39 = zext i16 %20 to i32, !dbg !11877
  %and40 = and i32 %conv39, 8192, !dbg !11877
  %tobool41 = icmp ne i32 %and40, 0, !dbg !11876
  br i1 %tobool41, label %while.body42, label %while.end44, !dbg !11876

while.body42:                                     ; preds = %while.cond34
  %21 = load i8*, i8** %arg.addr, align 8, !dbg !11878
  %incdec.ptr43 = getelementptr i8, i8* %21, i32 1, !dbg !11878
  store i8* %incdec.ptr43, i8** %arg.addr, align 8, !dbg !11878
  br label %while.cond34, !dbg !11876, !llvm.loop !11880

while.end44:                                      ; preds = %while.cond34
  br label %while.cond7, !dbg !11834, !llvm.loop !11882

while.end45:                                      ; preds = %while.cond7
  br label %if.end46, !dbg !11884

if.end46:                                         ; preds = %while.end45, %if.end
  %22 = load i32, i32* %on_ctrl_conn.addr, align 4, !dbg !11885
  %cmp47 = icmp eq i32 %22, 0, !dbg !11887
  br i1 %cmp47, label %if.then49, label %if.else, !dbg !11888

if.then49:                                        ; preds = %if.end46
  call void @opendata(), !dbg !11889
  %23 = load volatile i32, i32* @xferfd, align 4, !dbg !11891
  store i32 %23, i32* %c, align 4, !dbg !11893
  %cmp50 = icmp eq i32 %23, -1, !dbg !11894
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !11895

if.then52:                                        ; preds = %if.then49
  br label %if.end229, !dbg !11896

if.end53:                                         ; preds = %if.then49
  call void @doreply(), !dbg !11898
  br label %if.end55, !dbg !11899

if.else:                                          ; preds = %if.end46
  %24 = load i32, i32* @clientfd, align 4, !dbg !11900
  store i32 %24, i32* %c, align 4, !dbg !11902
  %25 = load i32, i32* %c, align 4, !dbg !11903
  %call54 = call i64 @safe_write(i32 %25, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2.473, i64 0, i64 0), i64 10, i32 -1), !dbg !11905
  br label %if.end55

if.end55:                                         ; preds = %if.else, %if.end53
  %26 = load i8*, i8** %arg.addr, align 8, !dbg !11906
  %cmp56 = icmp ne i8* %26, null, !dbg !11908
  br i1 %cmp56, label %land.lhs.true, label %if.else164, !dbg !11909

land.lhs.true:                                    ; preds = %if.end55
  %27 = load i8*, i8** %arg.addr, align 8, !dbg !11910
  %28 = load i8, i8* %27, align 1, !dbg !11911
  %conv58 = sext i8 %28 to i32, !dbg !11911
  %cmp59 = icmp ne i32 %conv58, 0, !dbg !11912
  br i1 %cmp59, label %if.then61, label %if.else164, !dbg !11913

if.then61:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %justone, metadata !11914, metadata !DIExpression()), !dbg !11916
  store i32 1, i32* %justone, align 4, !dbg !11917
  br label %do.body, !dbg !11918

do.body:                                          ; preds = %do.cond, %if.then61
  call void @llvm.dbg.declare(metadata %struct.glob_t* %g, metadata !11919, metadata !DIExpression()), !dbg !11983
  call void @llvm.dbg.declare(metadata i32* %a, metadata !11984, metadata !DIExpression()), !dbg !11985
  call void @llvm.dbg.declare(metadata i8** %endarg, metadata !11986, metadata !DIExpression()), !dbg !11987
  %29 = load i8*, i8** %arg.addr, align 8, !dbg !11988
  %call62 = call i8* @unescape_and_return_next_file(i8* %29), !dbg !11990
  store i8* %call62, i8** %endarg, align 8, !dbg !11991
  %cmp63 = icmp ne i8* %call62, null, !dbg !11992
  br i1 %cmp63, label %if.then65, label %if.end66, !dbg !11993

if.then65:                                        ; preds = %do.body
  store i32 0, i32* %justone, align 4, !dbg !11994
  br label %if.end66, !dbg !11996

if.end66:                                         ; preds = %if.then65, %do.body
  %30 = bitcast %struct.glob_t* %g to i8*, !dbg !11997
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 96, i1 false), !dbg !11997
  %31 = load i8*, i8** %arg.addr, align 8, !dbg !11998
  %32 = load i32, i32* @opt_a, align 4, !dbg !11999
  %tobool67 = icmp ne i32 %32, 0, !dbg !11999
  %33 = zext i1 %tobool67 to i64, !dbg !11999
  %cond = select i1 %tobool67, i32 8192, i32 8192, !dbg !11999
  %34 = load i32, i32* @max_ls_files, align 4, !dbg !12000
  %add = add i32 %34, 2, !dbg !12001
  %conv68 = zext i32 %add to i64, !dbg !12000
  %35 = load i32, i32* @max_ls_depth, align 4, !dbg !12002
  %mul = mul i32 %35, 2, !dbg !12003
  %call69 = call i32 @sglob(i8* %31, i32 %cond, i32 (i8*, i32)* null, %struct.glob_t* %g, i64 %conv68, i32 %mul), !dbg !12004
  store i32 %call69, i32* %a, align 4, !dbg !12005
  %36 = load i32, i32* %a, align 4, !dbg !12006
  %cmp70 = icmp eq i32 %36, 0, !dbg !12008
  br i1 %cmp70, label %if.then72, label %if.else146, !dbg !12009

if.then72:                                        ; preds = %if.end66
  call void @llvm.dbg.declare(metadata i8*** %path, metadata !12010, metadata !DIExpression()), !dbg !12012
  %gl_pathc = getelementptr inbounds %struct.glob_t, %struct.glob_t* %g, i32 0, i32 2, !dbg !12013
  %37 = load i32, i32* %gl_pathc, align 4, !dbg !12013
  %cmp73 = icmp sle i32 %37, 0, !dbg !12015
  br i1 %cmp73, label %if.then75, label %if.else76, !dbg !12016

if.then75:                                        ; preds = %if.then72
  store i8** null, i8*** %path, align 8, !dbg !12017
  br label %if.end77, !dbg !12019

if.else76:                                        ; preds = %if.then72
  %gl_pathv = getelementptr inbounds %struct.glob_t, %struct.glob_t* %g, i32 0, i32 6, !dbg !12020
  %38 = load i8**, i8*** %gl_pathv, align 8, !dbg !12020
  store i8** %38, i8*** %path, align 8, !dbg !12022
  br label %if.end77

if.end77:                                         ; preds = %if.else76, %if.then75
  %39 = load i8**, i8*** %path, align 8, !dbg !12023
  %cmp78 = icmp ne i8** %39, null, !dbg !12025
  br i1 %cmp78, label %land.lhs.true80, label %if.end89, !dbg !12026

land.lhs.true80:                                  ; preds = %if.end77
  %40 = load i8**, i8*** %path, align 8, !dbg !12027
  %arrayidx81 = getelementptr i8*, i8** %40, i64 0, !dbg !12027
  %41 = load i8*, i8** %arrayidx81, align 8, !dbg !12027
  %cmp82 = icmp ne i8* %41, null, !dbg !12028
  br i1 %cmp82, label %land.lhs.true84, label %if.end89, !dbg !12029

land.lhs.true84:                                  ; preds = %land.lhs.true80
  %42 = load i8**, i8*** %path, align 8, !dbg !12030
  %arrayidx85 = getelementptr i8*, i8** %42, i64 1, !dbg !12030
  %43 = load i8*, i8** %arrayidx85, align 8, !dbg !12030
  %cmp86 = icmp ne i8* %43, null, !dbg !12031
  br i1 %cmp86, label %if.then88, label %if.end89, !dbg !12032

if.then88:                                        ; preds = %land.lhs.true84
  store i32 0, i32* %justone, align 4, !dbg !12033
  br label %if.end89, !dbg !12035

if.end89:                                         ; preds = %if.then88, %land.lhs.true84, %land.lhs.true80, %if.end77
  br label %while.cond90, !dbg !12036

while.cond90:                                     ; preds = %if.end110, %if.end89
  %44 = load i8**, i8*** %path, align 8, !dbg !12037
  %cmp91 = icmp ne i8** %44, null, !dbg !12038
  br i1 %cmp91, label %land.rhs93, label %land.end96, !dbg !12039

land.rhs93:                                       ; preds = %while.cond90
  %45 = load i8**, i8*** %path, align 8, !dbg !12040
  %46 = load i8*, i8** %45, align 8, !dbg !12041
  %cmp94 = icmp ne i8* %46, null, !dbg !12042
  br label %land.end96

land.end96:                                       ; preds = %land.rhs93, %while.cond90
  %47 = phi i1 [ false, %while.cond90 ], [ %cmp94, %land.rhs93 ], !dbg !12043
  br i1 %47, label %while.body97, label %while.end112, !dbg !12036

while.body97:                                     ; preds = %land.end96
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !12044, metadata !DIExpression()), !dbg !12046
  %48 = load i8**, i8*** %path, align 8, !dbg !12047
  %49 = load i8*, i8** %48, align 8, !dbg !12049
  %call98 = call i32 @stat(i8* %49, %struct.stat* %st) #7, !dbg !12050
  %cmp99 = icmp eq i32 %call98, 0, !dbg !12051
  br i1 %cmp99, label %if.then101, label %if.else109, !dbg !12052

if.then101:                                       ; preds = %while.body97
  %50 = load i32, i32* @opt_d, align 4, !dbg !12053
  %tobool102 = icmp ne i32 %50, 0, !dbg !12053
  br i1 %tobool102, label %if.then106, label %lor.lhs.false, !dbg !12056

lor.lhs.false:                                    ; preds = %if.then101
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !12057
  %51 = load i32, i32* %st_mode, align 8, !dbg !12057
  %and103 = and i32 %51, 61440, !dbg !12057
  %cmp104 = icmp eq i32 %and103, 16384, !dbg !12057
  br i1 %cmp104, label %if.end108, label %if.then106, !dbg !12058

if.then106:                                       ; preds = %lor.lhs.false, %if.then101
  %52 = load i8**, i8*** %path, align 8, !dbg !12059
  %53 = load i8*, i8** %52, align 8, !dbg !12061
  %call107 = call i32 @listfile(%struct.PureFileInfo_* null, i8* %53), !dbg !12062
  %54 = load i8**, i8*** %path, align 8, !dbg !12063
  %55 = load i8*, i8** %54, align 8, !dbg !12064
  store i8 0, i8* %55, align 1, !dbg !12065
  br label %if.end108, !dbg !12066

if.end108:                                        ; preds = %if.then106, %lor.lhs.false
  br label %if.end110, !dbg !12067

if.else109:                                       ; preds = %while.body97
  %56 = load i8**, i8*** %path, align 8, !dbg !12068
  %57 = load i8*, i8** %56, align 8, !dbg !12070
  store i8 0, i8* %57, align 1, !dbg !12071
  br label %if.end110

if.end110:                                        ; preds = %if.else109, %if.end108
  %58 = load i8**, i8*** %path, align 8, !dbg !12072
  %incdec.ptr111 = getelementptr i8*, i8** %58, i32 1, !dbg !12072
  store i8** %incdec.ptr111, i8*** %path, align 8, !dbg !12072
  br label %while.cond90, !dbg !12036, !llvm.loop !12073

while.end112:                                     ; preds = %land.end96
  %59 = load i32, i32* %c, align 4, !dbg !12075
  %60 = load i8*, i8** %tls_fd, align 8, !dbg !12076
  call void @outputfiles(i32 %59, i8* %60), !dbg !12077
  %gl_pathv113 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %g, i32 0, i32 6, !dbg !12078
  %61 = load i8**, i8*** %gl_pathv113, align 8, !dbg !12078
  store i8** %61, i8*** %path, align 8, !dbg !12079
  br label %while.cond114, !dbg !12080

while.cond114:                                    ; preds = %if.end143, %while.end112
  %62 = load i8**, i8*** %path, align 8, !dbg !12081
  %cmp115 = icmp ne i8** %62, null, !dbg !12082
  br i1 %cmp115, label %land.rhs117, label %land.end120, !dbg !12083

land.rhs117:                                      ; preds = %while.cond114
  %63 = load i8**, i8*** %path, align 8, !dbg !12084
  %64 = load i8*, i8** %63, align 8, !dbg !12085
  %cmp118 = icmp ne i8* %64, null, !dbg !12086
  br label %land.end120

land.end120:                                      ; preds = %land.rhs117, %while.cond114
  %65 = phi i1 [ false, %while.cond114 ], [ %cmp118, %land.rhs117 ], !dbg !12043
  br i1 %65, label %while.body121, label %while.end145, !dbg !12080

while.body121:                                    ; preds = %land.end120
  %66 = load i32, i32* @matches, align 4, !dbg !12087
  %67 = load i32, i32* @max_ls_files, align 4, !dbg !12090
  %cmp122 = icmp uge i32 %66, %67, !dbg !12091
  br i1 %cmp122, label %if.then124, label %if.end125, !dbg !12092

if.then124:                                       ; preds = %while.body121
  br label %while.end145, !dbg !12093

if.end125:                                        ; preds = %while.body121
  %68 = load i8**, i8*** %path, align 8, !dbg !12095
  %69 = load i8*, i8** %68, align 8, !dbg !12097
  %70 = load i8, i8* %69, align 1, !dbg !12098
  %conv126 = sext i8 %70 to i32, !dbg !12098
  %cmp127 = icmp ne i32 %conv126, 0, !dbg !12099
  br i1 %cmp127, label %if.then129, label %if.end143, !dbg !12100

if.then129:                                       ; preds = %if.end125
  %71 = load i32, i32* %justone, align 4, !dbg !12101
  %tobool130 = icmp ne i32 %71, 0, !dbg !12101
  br i1 %tobool130, label %if.end132, label %if.then131, !dbg !12104

if.then131:                                       ; preds = %if.then129
  %72 = load i32, i32* %c, align 4, !dbg !12105
  %73 = load i8*, i8** %tls_fd, align 8, !dbg !12107
  call void @wrstr(i32 %72, i8* %73, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.474, i64 0, i64 0)), !dbg !12108
  %74 = load i32, i32* %c, align 4, !dbg !12109
  %75 = load i8*, i8** %tls_fd, align 8, !dbg !12110
  %76 = load i8**, i8*** %path, align 8, !dbg !12111
  %77 = load i8*, i8** %76, align 8, !dbg !12112
  call void @wrstr(i32 %74, i8* %75, i8* %77), !dbg !12113
  %78 = load i32, i32* %c, align 4, !dbg !12114
  %79 = load i8*, i8** %tls_fd, align 8, !dbg !12115
  call void @wrstr(i32 %78, i8* %79, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4.475, i64 0, i64 0)), !dbg !12116
  br label %if.end132, !dbg !12117

if.end132:                                        ; preds = %if.then131, %if.then129
  %80 = load i8**, i8*** %path, align 8, !dbg !12118
  %81 = load i8*, i8** %80, align 8, !dbg !12120
  %call133 = call i32 @chdir(i8* %81) #7, !dbg !12121
  %tobool134 = icmp ne i32 %call133, 0, !dbg !12121
  br i1 %tobool134, label %if.end142, label %if.then135, !dbg !12122

if.then135:                                       ; preds = %if.end132
  %82 = load i32, i32* %c, align 4, !dbg !12123
  %83 = load i8*, i8** %tls_fd, align 8, !dbg !12125
  %84 = load i8**, i8*** %path, align 8, !dbg !12126
  %85 = load i8*, i8** %84, align 8, !dbg !12127
  call void @listdir(i32 0, i32 %82, i8* %83, i8* %85), !dbg !12128
  %call136 = call i32 @chdir(i8* getelementptr inbounds ([4097 x i8], [4097 x i8]* @wd, i64 0, i64 0)) #7, !dbg !12129
  %tobool137 = icmp ne i32 %call136, 0, !dbg !12129
  br i1 %tobool137, label %if.then138, label %if.end141, !dbg !12131

if.then138:                                       ; preds = %if.then135
  %call139 = call i32* @__errno_location() #14, !dbg !12132
  %86 = load i32, i32* %call139, align 4, !dbg !12132
  %call140 = call i8* @strerror(i32 %86) #7, !dbg !12134
  call void (i32, i32, i8*, ...) @die(i32 421, i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5.476, i64 0, i64 0), i8* %call140) #11, !dbg !12135
  unreachable, !dbg !12135

if.end141:                                        ; preds = %if.then135
  br label %if.end142, !dbg !12136

if.end142:                                        ; preds = %if.end141, %if.end132
  br label %if.end143, !dbg !12137

if.end143:                                        ; preds = %if.end142, %if.end125
  %87 = load i8**, i8*** %path, align 8, !dbg !12138
  %incdec.ptr144 = getelementptr i8*, i8** %87, i32 1, !dbg !12138
  store i8** %incdec.ptr144, i8*** %path, align 8, !dbg !12138
  br label %while.cond114, !dbg !12080, !llvm.loop !12139

while.end145:                                     ; preds = %if.then124, %land.end120
  br label %if.end161, !dbg !12141

if.else146:                                       ; preds = %if.end66
  %88 = load i32, i32* %a, align 4, !dbg !12142
  %cmp147 = icmp eq i32 %88, -1, !dbg !12145
  br i1 %cmp147, label %if.then149, label %if.else150, !dbg !12146

if.then149:                                       ; preds = %if.else146
  %89 = load i8*, i8** %arg.addr, align 8, !dbg !12147
  call void (i32, i8*, ...) @addreply(i32 226, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.6.477, i64 0, i64 0), i8* %89), !dbg !12149
  call void @addreply_noformat(i32 0, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.7.478, i64 0, i64 0)), !dbg !12150
  br label %if.end160, !dbg !12151

if.else150:                                       ; preds = %if.else146
  %90 = load i32, i32* %a, align 4, !dbg !12152
  %cmp151 = icmp eq i32 %90, -2, !dbg !12154
  br i1 %cmp151, label %if.then153, label %if.else154, !dbg !12155

if.then153:                                       ; preds = %if.else150
  %91 = load i8*, i8** %arg.addr, align 8, !dbg !12156
  call void (i32, i8*, ...) @addreply(i32 226, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8.479, i64 0, i64 0), i8* %91), !dbg !12158
  br label %if.end159, !dbg !12159

if.else154:                                       ; preds = %if.else150
  %92 = load i32, i32* %a, align 4, !dbg !12160
  %cmp155 = icmp ne i32 %92, -3, !dbg !12162
  br i1 %cmp155, label %if.then157, label %if.end158, !dbg !12163

if.then157:                                       ; preds = %if.else154
  %93 = load i8*, i8** %arg.addr, align 8, !dbg !12164
  call void (i32, i8*, ...) @addreply(i32 226, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8.479, i64 0, i64 0), i8* %93), !dbg !12166
  call void @addreply_noformat(i32 0, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.7.478, i64 0, i64 0)), !dbg !12167
  br label %if.end158, !dbg !12168

if.end158:                                        ; preds = %if.then157, %if.else154
  br label %if.end159

if.end159:                                        ; preds = %if.end158, %if.then153
  br label %if.end160

if.end160:                                        ; preds = %if.end159, %if.then149
  br label %if.end161

if.end161:                                        ; preds = %if.end160, %while.end145
  call void @globfree(%struct.glob_t* %g), !dbg !12169
  %94 = load i8*, i8** %endarg, align 8, !dbg !12170
  store i8* %94, i8** %arg.addr, align 8, !dbg !12171
  br label %do.cond, !dbg !12172

do.cond:                                          ; preds = %if.end161
  %95 = load i8*, i8** %arg.addr, align 8, !dbg !12173
  %cmp162 = icmp ne i8* %95, null, !dbg !12174
  br i1 %cmp162, label %do.body, label %do.end, !dbg !12172, !llvm.loop !12175

do.end:                                           ; preds = %do.cond
  br label %if.end175, !dbg !12177

if.else164:                                       ; preds = %land.lhs.true, %if.end55
  %96 = load i32, i32* @opt_d, align 4, !dbg !12178
  %tobool165 = icmp ne i32 %96, 0, !dbg !12178
  br i1 %tobool165, label %if.then166, label %if.else168, !dbg !12181

if.then166:                                       ; preds = %if.else164
  %call167 = call i32 @listfile(%struct.PureFileInfo_* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.480, i64 0, i64 0)), !dbg !12182
  br label %if.end174, !dbg !12184

if.else168:                                       ; preds = %if.else164
  %call169 = call i64 @random() #7, !dbg !12185
  %cmp170 = icmp slt i64 %call169, 21474836, !dbg !12188
  br i1 %cmp170, label %if.then172, label %if.end173, !dbg !12189

if.then172:                                       ; preds = %if.else168
  %97 = load i32, i32* %c, align 4, !dbg !12190
  %98 = load i8*, i8** %tls_fd, align 8, !dbg !12192
  call void @listdir(i32 0, i32 %97, i8* %98, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.480, i64 0, i64 0)), !dbg !12193
  br label %if.end173, !dbg !12194

if.end173:                                        ; preds = %if.then172, %if.else168
  br label %if.end174

if.end174:                                        ; preds = %if.end173, %if.then166
  %99 = load i32, i32* %c, align 4, !dbg !12195
  %100 = load i8*, i8** %tls_fd, align 8, !dbg !12196
  call void @outputfiles(i32 %99, i8* %100), !dbg !12197
  br label %if.end175

if.end175:                                        ; preds = %if.end174, %do.end
  %101 = load i32, i32* %c, align 4, !dbg !12198
  %102 = load i8*, i8** %tls_fd, align 8, !dbg !12199
  call void @wrstr(i32 %101, i8* %102, i8* null), !dbg !12200
  %103 = load i32, i32* %on_ctrl_conn.addr, align 4, !dbg !12201
  %cmp176 = icmp eq i32 %103, 0, !dbg !12203
  br i1 %cmp176, label %if.then178, label %if.else180, !dbg !12204

if.then178:                                       ; preds = %if.end175
  %104 = load i32, i32* %c, align 4, !dbg !12205
  %call179 = call i32 @close(i32 %104), !dbg !12207
  br label %if.end181, !dbg !12208

if.else180:                                       ; preds = %if.end175
  call void @addreply_noformat(i32 213, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10.481, i64 0, i64 0)), !dbg !12209
  br label %end, !dbg !12211

if.end181:                                        ; preds = %if.then178
  %105 = load i32, i32* @opt_a, align 4, !dbg !12212
  %tobool182 = icmp ne i32 %105, 0, !dbg !12212
  br i1 %tobool182, label %if.then199, label %lor.lhs.false183, !dbg !12214

lor.lhs.false183:                                 ; preds = %if.end181
  %106 = load i32, i32* @opt_C, align 4, !dbg !12215
  %tobool184 = icmp ne i32 %106, 0, !dbg !12215
  br i1 %tobool184, label %if.then199, label %lor.lhs.false185, !dbg !12216

lor.lhs.false185:                                 ; preds = %lor.lhs.false183
  %107 = load i32, i32* @opt_d, align 4, !dbg !12217
  %tobool186 = icmp ne i32 %107, 0, !dbg !12217
  br i1 %tobool186, label %if.then199, label %lor.lhs.false187, !dbg !12218

lor.lhs.false187:                                 ; preds = %lor.lhs.false185
  %108 = load i32, i32* @opt_F, align 4, !dbg !12219
  %tobool188 = icmp ne i32 %108, 0, !dbg !12219
  br i1 %tobool188, label %if.then199, label %lor.lhs.false189, !dbg !12220

lor.lhs.false189:                                 ; preds = %lor.lhs.false187
  %109 = load i32, i32* @opt_l, align 4, !dbg !12221
  %tobool190 = icmp ne i32 %109, 0, !dbg !12221
  br i1 %tobool190, label %if.then199, label %lor.lhs.false191, !dbg !12222

lor.lhs.false191:                                 ; preds = %lor.lhs.false189
  %110 = load i32, i32* @opt_r, align 4, !dbg !12223
  %tobool192 = icmp ne i32 %110, 0, !dbg !12223
  br i1 %tobool192, label %if.then199, label %lor.lhs.false193, !dbg !12224

lor.lhs.false193:                                 ; preds = %lor.lhs.false191
  %111 = load i32, i32* @opt_R, align 4, !dbg !12225
  %tobool194 = icmp ne i32 %111, 0, !dbg !12225
  br i1 %tobool194, label %if.then199, label %lor.lhs.false195, !dbg !12226

lor.lhs.false195:                                 ; preds = %lor.lhs.false193
  %112 = load i32, i32* @opt_t, align 4, !dbg !12227
  %tobool196 = icmp ne i32 %112, 0, !dbg !12227
  br i1 %tobool196, label %if.then199, label %lor.lhs.false197, !dbg !12228

lor.lhs.false197:                                 ; preds = %lor.lhs.false195
  %113 = load i32, i32* @opt_S, align 4, !dbg !12229
  %tobool198 = icmp ne i32 %113, 0, !dbg !12229
  br i1 %tobool198, label %if.then199, label %if.end218, !dbg !12230

if.then199:                                       ; preds = %lor.lhs.false197, %lor.lhs.false195, %lor.lhs.false193, %lor.lhs.false191, %lor.lhs.false189, %lor.lhs.false187, %lor.lhs.false185, %lor.lhs.false183, %if.end181
  %114 = load i32, i32* @opt_a, align 4, !dbg !12231
  %tobool200 = icmp ne i32 %114, 0, !dbg !12231
  %115 = zext i1 %tobool200 to i64, !dbg !12231
  %cond201 = select i1 %tobool200, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12.482, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13.483, i64 0, i64 0), !dbg !12231
  %116 = load i32, i32* @opt_C, align 4, !dbg !12232
  %tobool202 = icmp ne i32 %116, 0, !dbg !12232
  %117 = zext i1 %tobool202 to i64, !dbg !12232
  %cond203 = select i1 %tobool202, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.484, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13.483, i64 0, i64 0), !dbg !12232
  %118 = load i32, i32* @opt_d, align 4, !dbg !12233
  %tobool204 = icmp ne i32 %118, 0, !dbg !12233
  %119 = zext i1 %tobool204 to i64, !dbg !12233
  %cond205 = select i1 %tobool204, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.485, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13.483, i64 0, i64 0), !dbg !12233
  %120 = load i32, i32* @opt_F, align 4, !dbg !12234
  %tobool206 = icmp ne i32 %120, 0, !dbg !12234
  %121 = zext i1 %tobool206 to i64, !dbg !12234
  %cond207 = select i1 %tobool206, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16.486, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13.483, i64 0, i64 0), !dbg !12234
  %122 = load i32, i32* @opt_l, align 4, !dbg !12235
  %tobool208 = icmp ne i32 %122, 0, !dbg !12235
  %123 = zext i1 %tobool208 to i64, !dbg !12235
  %cond209 = select i1 %tobool208, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.487, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13.483, i64 0, i64 0), !dbg !12235
  %124 = load i32, i32* @opt_r, align 4, !dbg !12236
  %tobool210 = icmp ne i32 %124, 0, !dbg !12236
  %125 = zext i1 %tobool210 to i64, !dbg !12236
  %cond211 = select i1 %tobool210, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18.488, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13.483, i64 0, i64 0), !dbg !12236
  %126 = load i32, i32* @opt_R, align 4, !dbg !12237
  %tobool212 = icmp ne i32 %126, 0, !dbg !12237
  %127 = zext i1 %tobool212 to i64, !dbg !12237
  %cond213 = select i1 %tobool212, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19.489, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13.483, i64 0, i64 0), !dbg !12237
  %128 = load i32, i32* @opt_S, align 4, !dbg !12238
  %tobool214 = icmp ne i32 %128, 0, !dbg !12238
  %129 = zext i1 %tobool214 to i64, !dbg !12238
  %cond215 = select i1 %tobool214, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20.490, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13.483, i64 0, i64 0), !dbg !12238
  %130 = load i32, i32* @opt_t, align 4, !dbg !12239
  %tobool216 = icmp ne i32 %130, 0, !dbg !12239
  %131 = zext i1 %tobool216 to i64, !dbg !12239
  %cond217 = select i1 %tobool216, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21.491, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13.483, i64 0, i64 0), !dbg !12239
  call void (i32, i8*, ...) @addreply(i32 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.492, i64 0, i64 0), i8* %cond201, i8* %cond203, i8* %cond205, i8* %cond207, i8* %cond209, i8* %cond211, i8* %cond213, i8* %cond215, i8* %cond217), !dbg !12240
  br label %if.end218, !dbg !12240

if.end218:                                        ; preds = %if.then199, %lor.lhs.false197
  %132 = load i32, i32* @matches, align 4, !dbg !12241
  %133 = load i32, i32* @max_ls_files, align 4, !dbg !12243
  %cmp219 = icmp uge i32 %132, %133, !dbg !12244
  br i1 %cmp219, label %if.then221, label %if.else222, !dbg !12245

if.then221:                                       ; preds = %if.end218
  %134 = load i32, i32* @matches, align 4, !dbg !12246
  call void (i32, i8*, ...) @addreply(i32 226, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.22.493, i64 0, i64 0), i32 %134), !dbg !12248
  br label %if.end223, !dbg !12249

if.else222:                                       ; preds = %if.end218
  %135 = load i32, i32* @matches, align 4, !dbg !12250
  call void (i32, i8*, ...) @addreply(i32 226, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23.494, i64 0, i64 0), i32 %135), !dbg !12252
  br label %if.end223

if.end223:                                        ; preds = %if.else222, %if.then221
  br label %end, !dbg !12243

end:                                              ; preds = %if.end223, %if.else180
  call void @llvm.dbg.label(metadata !12253), !dbg !12254
  %call224 = call i32 @chdir(i8* getelementptr inbounds ([4097 x i8], [4097 x i8]* @wd, i64 0, i64 0)) #7, !dbg !12255
  %tobool225 = icmp ne i32 %call224, 0, !dbg !12255
  br i1 %tobool225, label %if.then226, label %if.end229, !dbg !12257

if.then226:                                       ; preds = %end
  %call227 = call i32* @__errno_location() #14, !dbg !12258
  %136 = load i32, i32* %call227, align 4, !dbg !12258
  %call228 = call i8* @strerror(i32 %136) #7, !dbg !12260
  call void (i32, i32, i8*, ...) @die(i32 421, i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5.476, i64 0, i64 0), i8* %call228) #11, !dbg !12261
  unreachable, !dbg !12261

if.end229:                                        ; preds = %if.then52, %end
  ret void, !dbg !12262
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i8* @unescape_and_return_next_file(i8* %str) #0 !dbg !12263 {
entry:
  %retval = alloca i8*, align 8
  %str.addr = alloca i8*, align 8
  %pnt = alloca i8*, align 8
  %seen_backslash = alloca i8, align 1
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !12266, metadata !DIExpression()), !dbg !12267
  call void @llvm.dbg.declare(metadata i8** %pnt, metadata !12268, metadata !DIExpression()), !dbg !12269
  %0 = load i8*, i8** %str.addr, align 8, !dbg !12270
  store i8* %0, i8** %pnt, align 8, !dbg !12269
  call void @llvm.dbg.declare(metadata i8* %seen_backslash, metadata !12271, metadata !DIExpression()), !dbg !12272
  store i8 0, i8* %seen_backslash, align 1, !dbg !12272
  br label %while.cond, !dbg !12273

while.cond:                                       ; preds = %if.end37, %entry
  %1 = load i8*, i8** %pnt, align 8, !dbg !12274
  %2 = load i8, i8* %1, align 1, !dbg !12275
  %conv = sext i8 %2 to i32, !dbg !12275
  %cmp = icmp ne i32 %conv, 0, !dbg !12276
  br i1 %cmp, label %while.body, label %while.end, !dbg !12273

while.body:                                       ; preds = %while.cond
  %3 = load i8, i8* %seen_backslash, align 1, !dbg !12277
  %conv2 = sext i8 %3 to i32, !dbg !12277
  %cmp3 = icmp eq i32 %conv2, 0, !dbg !12280
  br i1 %cmp3, label %if.then, label %if.else20, !dbg !12281

if.then:                                          ; preds = %while.body
  %4 = load i8*, i8** %pnt, align 8, !dbg !12282
  %5 = load i8, i8* %4, align 1, !dbg !12285
  %conv5 = sext i8 %5 to i32, !dbg !12285
  %cmp6 = icmp eq i32 %conv5, 92, !dbg !12286
  br i1 %cmp6, label %if.then8, label %if.else, !dbg !12287

if.then8:                                         ; preds = %if.then
  store i8 1, i8* %seen_backslash, align 1, !dbg !12288
  br label %if.end18, !dbg !12290

if.else:                                          ; preds = %if.then
  %6 = load i8*, i8** %pnt, align 8, !dbg !12291
  %7 = load i8, i8* %6, align 1, !dbg !12293
  %conv9 = sext i8 %7 to i32, !dbg !12293
  %cmp10 = icmp eq i32 %conv9, 32, !dbg !12294
  br i1 %cmp10, label %if.then12, label %if.end17, !dbg !12295

if.then12:                                        ; preds = %if.else
  %8 = load i8*, i8** %pnt, align 8, !dbg !12296
  %incdec.ptr = getelementptr i8, i8* %8, i32 1, !dbg !12296
  store i8* %incdec.ptr, i8** %pnt, align 8, !dbg !12296
  store i8 0, i8* %8, align 1, !dbg !12298
  %9 = load i8*, i8** %pnt, align 8, !dbg !12299
  %10 = load i8, i8* %9, align 1, !dbg !12301
  %conv13 = sext i8 %10 to i32, !dbg !12301
  %cmp14 = icmp ne i32 %conv13, 0, !dbg !12302
  br i1 %cmp14, label %if.then16, label %if.end, !dbg !12303

if.then16:                                        ; preds = %if.then12
  %11 = load i8*, i8** %pnt, align 8, !dbg !12304
  store i8* %11, i8** %retval, align 8, !dbg !12306
  br label %return, !dbg !12306

if.end:                                           ; preds = %if.then12
  br label %while.end, !dbg !12307

if.end17:                                         ; preds = %if.else
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then8
  %12 = load i8*, i8** %pnt, align 8, !dbg !12308
  %incdec.ptr19 = getelementptr i8, i8* %12, i32 1, !dbg !12308
  store i8* %incdec.ptr19, i8** %pnt, align 8, !dbg !12308
  br label %if.end37, !dbg !12309

if.else20:                                        ; preds = %while.body
  store i8 0, i8* %seen_backslash, align 1, !dbg !12310
  %13 = load i8*, i8** %pnt, align 8, !dbg !12312
  %14 = load i8, i8* %13, align 1, !dbg !12314
  %conv21 = sext i8 %14 to i32, !dbg !12314
  %cmp22 = icmp eq i32 %conv21, 32, !dbg !12315
  br i1 %cmp22, label %if.then35, label %lor.lhs.false, !dbg !12316

lor.lhs.false:                                    ; preds = %if.else20
  %15 = load i8*, i8** %pnt, align 8, !dbg !12317
  %16 = load i8, i8* %15, align 1, !dbg !12318
  %conv24 = sext i8 %16 to i32, !dbg !12318
  %cmp25 = icmp eq i32 %conv24, 92, !dbg !12319
  br i1 %cmp25, label %if.then35, label %lor.lhs.false27, !dbg !12320

lor.lhs.false27:                                  ; preds = %lor.lhs.false
  %17 = load i8*, i8** %pnt, align 8, !dbg !12321
  %18 = load i8, i8* %17, align 1, !dbg !12322
  %conv28 = sext i8 %18 to i32, !dbg !12322
  %cmp29 = icmp eq i32 %conv28, 123, !dbg !12323
  br i1 %cmp29, label %if.then35, label %lor.lhs.false31, !dbg !12324

lor.lhs.false31:                                  ; preds = %lor.lhs.false27
  %19 = load i8*, i8** %pnt, align 8, !dbg !12325
  %20 = load i8, i8* %19, align 1, !dbg !12326
  %conv32 = sext i8 %20 to i32, !dbg !12326
  %cmp33 = icmp eq i32 %conv32, 125, !dbg !12327
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !12328

if.then35:                                        ; preds = %lor.lhs.false31, %lor.lhs.false27, %lor.lhs.false, %if.else20
  %21 = load i8*, i8** %pnt, align 8, !dbg !12329
  %add.ptr = getelementptr i8, i8* %21, i64 -1, !dbg !12331
  %22 = load i8*, i8** %pnt, align 8, !dbg !12332
  %23 = load i8*, i8** %pnt, align 8, !dbg !12333
  %call = call i64 @strlen(i8* %23) #12, !dbg !12334
  %add = add i64 %call, 1, !dbg !12335
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 1 %22, i64 %add, i1 false), !dbg !12336
  br label %if.end36, !dbg !12337

if.end36:                                         ; preds = %if.then35, %lor.lhs.false31
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.end18
  br label %while.cond, !dbg !12273, !llvm.loop !12338

while.end:                                        ; preds = %if.end, %while.cond
  store i8* null, i8** %retval, align 8, !dbg !12340
  br label %return, !dbg !12340

return:                                           ; preds = %while.end, %if.then16
  %24 = load i8*, i8** %retval, align 8, !dbg !12341
  ret i8* %24, !dbg !12341
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @listfile(%struct.PureFileInfo_* %fi, i8* %name) #0 !dbg !12342 {
entry:
  %retval = alloca i32, align 4
  %fi.addr = alloca %struct.PureFileInfo_*, align 8
  %name.addr = alloca i8*, align 8
  %rval = alloca i32, align 4
  %st = alloca %struct.stat, align 8
  %t = alloca %struct.tm*, align 8
  %suffix = alloca [2 x i8], align 1
  %m = alloca [4097 x i8], align 16
  %format = alloca i8*, align 8
  %sts = alloca %struct.stat, align 8
  %alloca_nameline = alloca i8*, align 8
  %sizeof_nameline = alloca i64, align 8
  %timeline = alloca [6 x i8], align 1
  %p = alloca i8*, align 8
  %sx = alloca i64, align 8
  store %struct.PureFileInfo_* %fi, %struct.PureFileInfo_** %fi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PureFileInfo_** %fi.addr, metadata !12346, metadata !DIExpression()), !dbg !12347
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !12348, metadata !DIExpression()), !dbg !12349
  call void @llvm.dbg.declare(metadata i32* %rval, metadata !12350, metadata !DIExpression()), !dbg !12351
  store i32 0, i32* %rval, align 4, !dbg !12351
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !12352, metadata !DIExpression()), !dbg !12353
  call void @llvm.dbg.declare(metadata %struct.tm** %t, metadata !12354, metadata !DIExpression()), !dbg !12369
  call void @llvm.dbg.declare(metadata [2 x i8]* %suffix, metadata !12370, metadata !DIExpression()), !dbg !12372
  %0 = bitcast [2 x i8]* %suffix to i8*, !dbg !12372
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 2, i1 false), !dbg !12372
  call void @llvm.dbg.declare(metadata [4097 x i8]* %m, metadata !12373, metadata !DIExpression()), !dbg !12374
  call void @llvm.dbg.declare(metadata i8** %format, metadata !12375, metadata !DIExpression()), !dbg !12376
  %1 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %fi.addr, align 8, !dbg !12377
  %cmp = icmp eq %struct.PureFileInfo_* %1, null, !dbg !12379
  br i1 %cmp, label %if.then, label %if.else, !dbg !12380

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %name.addr, align 8, !dbg !12381
  %call = call i32 @lstat(i8* %2, %struct.stat* %st) #7, !dbg !12384
  %cmp1 = icmp slt i32 %call, 0, !dbg !12385
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !12386

if.then2:                                         ; preds = %if.then
  store i32 0, i32* %retval, align 4, !dbg !12387
  br label %return, !dbg !12387

if.end:                                           ; preds = %if.then
  br label %if.end3, !dbg !12389

if.else:                                          ; preds = %entry
  %3 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %fi.addr, align 8, !dbg !12390
  %size = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %3, i32 0, i32 2, !dbg !12392
  %4 = load i64, i64* %size, align 8, !dbg !12392
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 8, !dbg !12393
  store i64 %4, i64* %st_size, align 8, !dbg !12394
  %5 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %fi.addr, align 8, !dbg !12395
  %mtime = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %5, i32 0, i32 3, !dbg !12396
  %6 = load i64, i64* %mtime, align 8, !dbg !12396
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 12, !dbg !12397
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim, i32 0, i32 0, !dbg !12397
  store i64 %6, i64* %tv_sec, align 8, !dbg !12398
  %7 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %fi.addr, align 8, !dbg !12399
  %mode = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %7, i32 0, i32 4, !dbg !12400
  %8 = load i32, i32* %mode, align 8, !dbg !12400
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !12401
  store i32 %8, i32* %st_mode, align 8, !dbg !12402
  %9 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %fi.addr, align 8, !dbg !12403
  %nlink = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %9, i32 0, i32 5, !dbg !12404
  %10 = load i64, i64* %nlink, align 8, !dbg !12404
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 2, !dbg !12405
  store i64 %10, i64* %st_nlink, align 8, !dbg !12406
  %11 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %fi.addr, align 8, !dbg !12407
  %uid = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %11, i32 0, i32 6, !dbg !12408
  %12 = load i32, i32* %uid, align 8, !dbg !12408
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 4, !dbg !12409
  store i32 %12, i32* %st_uid, align 4, !dbg !12410
  %13 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %fi.addr, align 8, !dbg !12411
  %gid = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %13, i32 0, i32 7, !dbg !12412
  %14 = load i32, i32* %gid, align 4, !dbg !12412
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 5, !dbg !12413
  store i32 %14, i32* %st_gid, align 8, !dbg !12414
  %15 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %fi.addr, align 8, !dbg !12415
  %names_pnt = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %15, i32 0, i32 0, !dbg !12415
  %16 = load i8**, i8*** %names_pnt, align 8, !dbg !12415
  %17 = load i8*, i8** %16, align 8, !dbg !12415
  %18 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %fi.addr, align 8, !dbg !12415
  %name_offset = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %18, i32 0, i32 1, !dbg !12415
  %19 = load i64, i64* %name_offset, align 8, !dbg !12415
  %add.ptr = getelementptr i8, i8* %17, i64 %19, !dbg !12415
  store i8* %add.ptr, i8** %name.addr, align 8, !dbg !12416
  br label %if.end3

if.end3:                                          ; preds = %if.else, %if.end
  %20 = load i8, i8* @broken_client_compat, align 1, !dbg !12417
  %conv = sext i8 %20 to i32, !dbg !12417
  %cmp4 = icmp ne i32 %conv, 0, !dbg !12419
  br i1 %cmp4, label %land.lhs.true, label %if.end20, !dbg !12420

land.lhs.true:                                    ; preds = %if.end3
  %st_mode6 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !12421
  %21 = load i32, i32* %st_mode6, align 8, !dbg !12421
  %and = and i32 %21, 61440, !dbg !12421
  %cmp7 = icmp eq i32 %and, 40960, !dbg !12421
  br i1 %cmp7, label %if.then9, label %if.end20, !dbg !12422

if.then9:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.stat* %sts, metadata !12423, metadata !DIExpression()), !dbg !12425
  %22 = load i8*, i8** %name.addr, align 8, !dbg !12426
  %call10 = call i32 @stat(i8* %22, %struct.stat* %sts) #7, !dbg !12428
  %cmp11 = icmp eq i32 %call10, 0, !dbg !12429
  br i1 %cmp11, label %land.lhs.true13, label %if.end19, !dbg !12430

land.lhs.true13:                                  ; preds = %if.then9
  %st_mode14 = getelementptr inbounds %struct.stat, %struct.stat* %sts, i32 0, i32 3, !dbg !12431
  %23 = load i32, i32* %st_mode14, align 8, !dbg !12431
  %and15 = and i32 %23, 61440, !dbg !12431
  %cmp16 = icmp eq i32 %and15, 40960, !dbg !12431
  br i1 %cmp16, label %if.end19, label %if.then18, !dbg !12432

if.then18:                                        ; preds = %land.lhs.true13
  %24 = bitcast %struct.stat* %st to i8*, !dbg !12433
  %25 = bitcast %struct.stat* %sts to i8*, !dbg !12433
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 144, i1 false), !dbg !12433
  br label %if.end19, !dbg !12435

if.end19:                                         ; preds = %if.then18, %land.lhs.true13, %if.then9
  br label %if.end20, !dbg !12436

if.end20:                                         ; preds = %if.end19, %land.lhs.true, %if.end3
  %st_mtim21 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 12, !dbg !12437
  %tv_sec22 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim21, i32 0, i32 0, !dbg !12437
  %call23 = call %struct.tm* @localtime(i64* %tv_sec22) #7, !dbg !12438
  store %struct.tm* %call23, %struct.tm** %t, align 8, !dbg !12439
  %26 = load %struct.tm*, %struct.tm** %t, align 8, !dbg !12440
  %cmp24 = icmp eq %struct.tm* %26, null, !dbg !12442
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !12443

if.then26:                                        ; preds = %if.end20
  %27 = load i8*, i8** %name.addr, align 8, !dbg !12444
  call void (i32, i8*, ...) @logfile(i32 3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27.498, i64 0, i64 0), i8* %27), !dbg !12446
  store i32 0, i32* %retval, align 4, !dbg !12447
  br label %return, !dbg !12447

if.end27:                                         ; preds = %if.end20
  %28 = load i32, i32* @opt_F, align 4, !dbg !12448
  %tobool = icmp ne i32 %28, 0, !dbg !12448
  br i1 %tobool, label %if.then28, label %if.end50, !dbg !12450

if.then28:                                        ; preds = %if.end27
  %st_mode29 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !12451
  %29 = load i32, i32* %st_mode29, align 8, !dbg !12451
  %and30 = and i32 %29, 61440, !dbg !12451
  %cmp31 = icmp eq i32 %and30, 40960, !dbg !12451
  br i1 %cmp31, label %if.then33, label %if.else34, !dbg !12454

if.then33:                                        ; preds = %if.then28
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %suffix, i64 0, i64 0, !dbg !12455
  store i8 64, i8* %arrayidx, align 1, !dbg !12456
  br label %if.end49, !dbg !12455

if.else34:                                        ; preds = %if.then28
  %st_mode35 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !12457
  %30 = load i32, i32* %st_mode35, align 8, !dbg !12457
  %and36 = and i32 %30, 61440, !dbg !12457
  %cmp37 = icmp eq i32 %and36, 16384, !dbg !12457
  br i1 %cmp37, label %if.then39, label %if.else41, !dbg !12459

if.then39:                                        ; preds = %if.else34
  %arrayidx40 = getelementptr [2 x i8], [2 x i8]* %suffix, i64 0, i64 0, !dbg !12460
  store i8 47, i8* %arrayidx40, align 1, !dbg !12462
  store i32 1, i32* %rval, align 4, !dbg !12463
  br label %if.end48, !dbg !12464

if.else41:                                        ; preds = %if.else34
  %st_mode42 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !12465
  %31 = load i32, i32* %st_mode42, align 8, !dbg !12465
  %and43 = and i32 %31, 4161, !dbg !12467
  %tobool44 = icmp ne i32 %and43, 0, !dbg !12467
  br i1 %tobool44, label %if.then45, label %if.end47, !dbg !12468

if.then45:                                        ; preds = %if.else41
  %arrayidx46 = getelementptr [2 x i8], [2 x i8]* %suffix, i64 0, i64 0, !dbg !12469
  store i8 42, i8* %arrayidx46, align 1, !dbg !12471
  br label %if.end47, !dbg !12472

if.end47:                                         ; preds = %if.then45, %if.else41
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.then39
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.then33
  br label %if.end50, !dbg !12473

if.end50:                                         ; preds = %if.end49, %if.end27
  %32 = load i32, i32* @opt_l, align 4, !dbg !12474
  %tobool51 = icmp ne i32 %32, 0, !dbg !12474
  br i1 %tobool51, label %if.then52, label %if.else267, !dbg !12476

if.then52:                                        ; preds = %if.end50
  %arraydecay = getelementptr inbounds [4097 x i8], [4097 x i8]* %m, i64 0, i64 0, !dbg !12477
  %call53 = call i8* @strncpy(i8* %arraydecay, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28.499, i64 0, i64 0), i64 4096) #7, !dbg !12479
  %arrayidx54 = getelementptr [4097 x i8], [4097 x i8]* %m, i64 0, i64 4096, !dbg !12480
  store i8 0, i8* %arrayidx54, align 16, !dbg !12481
  %st_mode55 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !12482
  %33 = load i32, i32* %st_mode55, align 8, !dbg !12482
  %and56 = and i32 %33, 61440, !dbg !12483
  switch i32 %and56, label %sw.epilog [
    i32 32768, label %sw.bb
    i32 40960, label %sw.bb58
    i32 16384, label %sw.bb60
  ], !dbg !12484

sw.bb:                                            ; preds = %if.then52
  %arrayidx57 = getelementptr [4097 x i8], [4097 x i8]* %m, i64 0, i64 0, !dbg !12485
  store i8 45, i8* %arrayidx57, align 16, !dbg !12487
  br label %sw.epilog, !dbg !12488

sw.bb58:                                          ; preds = %if.then52
  %arrayidx59 = getelementptr [4097 x i8], [4097 x i8]* %m, i64 0, i64 0, !dbg !12489
  store i8 108, i8* %arrayidx59, align 16, !dbg !12490
  br label %sw.epilog, !dbg !12491

sw.bb60:                                          ; preds = %if.then52
  %arrayidx61 = getelementptr [4097 x i8], [4097 x i8]* %m, i64 0, i64 0, !dbg !12492
  store i8 100, i8* %arrayidx61, align 16, !dbg !12493
  store i32 1, i32* %rval, align 4, !dbg !12494
  br label %sw.epilog, !dbg !12495

sw.epilog:                                        ; preds = %if.then52, %sw.bb60, %sw.bb58, %sw.bb
  %arrayidx62 = getelementptr [4097 x i8], [4097 x i8]* %m, i64 0, i64 0, !dbg !12496
  %34 = load i8, i8* %arrayidx62, align 16, !dbg !12496
  %conv63 = sext i8 %34 to i32, !dbg !12496
  %cmp64 = icmp ne i32 %conv63, 32, !dbg !12498
  br i1 %cmp64, label %if.then66, label %if.end266, !dbg !12499

if.then66:                                        ; preds = %sw.epilog
  call void @llvm.dbg.declare(metadata i8** %alloca_nameline, metadata !12500, metadata !DIExpression()), !dbg !12502
  call void @llvm.dbg.declare(metadata i64* %sizeof_nameline, metadata !12503, metadata !DIExpression()), !dbg !12504
  store i64 8320, i64* %sizeof_nameline, align 8, !dbg !12504
  call void @llvm.dbg.declare(metadata [6 x i8]* %timeline, metadata !12505, metadata !DIExpression()), !dbg !12507
  %st_mode67 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !12508
  %35 = load i32, i32* %st_mode67, align 8, !dbg !12508
  %and68 = and i32 %35, 256, !dbg !12510
  %tobool69 = icmp ne i32 %and68, 0, !dbg !12510
  br i1 %tobool69, label %if.then70, label %if.end72, !dbg !12511

if.then70:                                        ; preds = %if.then66
  %arrayidx71 = getelementptr [4097 x i8], [4097 x i8]* %m, i64 0, i64 1, !dbg !12512
  store i8 114, i8* %arrayidx71, align 1, !dbg !12514
  br label %if.end72, !dbg !12515

if.end72:                                         ; preds = %if.then70, %if.then66
  %st_mode73 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !12516
  %36 = load i32, i32* %st_mode73, align 8, !dbg !12516
  %and74 = and i32 %36, 128, !dbg !12518
  %tobool75 = icmp ne i32 %and74, 0, !dbg !12518
  br i1 %tobool75, label %if.then76, label %if.end78, !dbg !12519

if.then76:                                        ; preds = %if.end72
  %arrayidx77 = getelementptr [4097 x i8], [4097 x i8]* %m, i64 0, i64 2, !dbg !12520
  store i8 119, i8* %arrayidx77, align 2, !dbg !12522
  br label %if.end78, !dbg !12523

if.end78:                                         ; preds = %if.then76, %if.end72
  %st_mode79 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !12524
  %37 = load i32, i32* %st_mode79, align 8, !dbg !12524
  %and80 = and i32 %37, 64, !dbg !12526
  %tobool81 = icmp ne i32 %and80, 0, !dbg !12526
  br i1 %tobool81, label %if.then82, label %if.else88, !dbg !12527

if.then82:                                        ; preds = %if.end78
  %st_mode83 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !12528
  %38 = load i32, i32* %st_mode83, align 8, !dbg !12528
  %and84 = and i32 %38, 2048, !dbg !12530
  %tobool85 = icmp ne i32 %and84, 0, !dbg !12531
  %39 = zext i1 %tobool85 to i64, !dbg !12531
  %cond = select i1 %tobool85, i32 115, i32 120, !dbg !12531
  %conv86 = trunc i32 %cond to i8, !dbg !12532
  %arrayidx87 = getelementptr [4097 x i8], [4097 x i8]* %m, i64 0, i64 3, !dbg !12533
  store i8 %conv86, i8* %arrayidx87, align 1, !dbg !12534
  br label %if.end95, !dbg !12535

if.else88:                                        ; preds = %if.end78
  %st_mode89 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !12536
  %40 = load i32, i32* %st_mode89, align 8, !dbg !12536
  %and90 = and i32 %40, 2048, !dbg !12538
  %tobool91 = icmp ne i32 %and90, 0, !dbg !12538
  br i1 %tobool91, label %if.then92, label %if.end94, !dbg !12539

if.then92:                                        ; preds = %if.else88
  %arrayidx93 = getelementptr [4097 x i8], [4097 x i8]* %m, i64 0, i64 3, !dbg !12540
  store i8 83, i8* %arrayidx93, align 1, !dbg !12542
  br label %if.end94, !dbg !12543

if.end94:                                         ; preds = %if.then92, %if.else88
  br label %if.end95

if.end95:                                         ; preds = %if.end94, %if.then82
  %st_mode96 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !12544
  %41 = load i32, i32* %st_mode96, align 8, !dbg !12544
  %and97 = and i32 %41, 32, !dbg !12546
  %tobool98 = icmp ne i32 %and97, 0, !dbg !12546
  br i1 %tobool98, label %if.then99, label %if.end101, !dbg !12547

if.then99:                                        ; preds = %if.end95
  %arrayidx100 = getelementptr [4097 x i8], [4097 x i8]* %m, i64 0, i64 4, !dbg !12548
  store i8 114, i8* %arrayidx100, align 4, !dbg !12550
  br label %if.end101, !dbg !12551

if.end101:                                        ; preds = %if.then99, %if.end95
  %st_mode102 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !12552
  %42 = load i32, i32* %st_mode102, align 8, !dbg !12552
  %and103 = and i32 %42, 16, !dbg !12554
  %tobool104 = icmp ne i32 %and103, 0, !dbg !12554
  br i1 %tobool104, label %if.then105, label %if.end107, !dbg !12555

if.then105:                                       ; preds = %if.end101
  %arrayidx106 = getelementptr [4097 x i8], [4097 x i8]* %m, i64 0, i64 5, !dbg !12556
  store i8 119, i8* %arrayidx106, align 1, !dbg !12558
  br label %if.end107, !dbg !12559

if.end107:                                        ; preds = %if.then105, %if.end101
  %st_mode108 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !12560
  %43 = load i32, i32* %st_mode108, align 8, !dbg !12560
  %and109 = and i32 %43, 8, !dbg !12562
  %tobool110 = icmp ne i32 %and109, 0, !dbg !12562
  br i1 %tobool110, label %if.then111, label %if.else118, !dbg !12563

if.then111:                                       ; preds = %if.end107
  %st_mode112 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !12564
  %44 = load i32, i32* %st_mode112, align 8, !dbg !12564
  %and113 = and i32 %44, 1024, !dbg !12566
  %tobool114 = icmp ne i32 %and113, 0, !dbg !12567
  %45 = zext i1 %tobool114 to i64, !dbg !12567
  %cond115 = select i1 %tobool114, i32 115, i32 120, !dbg !12567
  %conv116 = trunc i32 %cond115 to i8, !dbg !12568
  %arrayidx117 = getelementptr [4097 x i8], [4097 x i8]* %m, i64 0, i64 6, !dbg !12569
  store i8 %conv116, i8* %arrayidx117, align 2, !dbg !12570
  br label %if.end125, !dbg !12571

if.else118:                                       ; preds = %if.end107
  %st_mode119 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !12572
  %46 = load i32, i32* %st_mode119, align 8, !dbg !12572
  %and120 = and i32 %46, 1024, !dbg !12574
  %tobool121 = icmp ne i32 %and120, 0, !dbg !12574
  br i1 %tobool121, label %if.then122, label %if.end124, !dbg !12575

if.then122:                                       ; preds = %if.else118
  %arrayidx123 = getelementptr [4097 x i8], [4097 x i8]* %m, i64 0, i64 6, !dbg !12576
  store i8 83, i8* %arrayidx123, align 2, !dbg !12578
  br label %if.end124, !dbg !12579

if.end124:                                        ; preds = %if.then122, %if.else118
  br label %if.end125

if.end125:                                        ; preds = %if.end124, %if.then111
  %st_mode126 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !12580
  %47 = load i32, i32* %st_mode126, align 8, !dbg !12580
  %and127 = and i32 %47, 4, !dbg !12582
  %tobool128 = icmp ne i32 %and127, 0, !dbg !12582
  br i1 %tobool128, label %if.then129, label %if.end131, !dbg !12583

if.then129:                                       ; preds = %if.end125
  %arrayidx130 = getelementptr [4097 x i8], [4097 x i8]* %m, i64 0, i64 7, !dbg !12584
  store i8 114, i8* %arrayidx130, align 1, !dbg !12586
  br label %if.end131, !dbg !12587

if.end131:                                        ; preds = %if.then129, %if.end125
  %st_mode132 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !12588
  %48 = load i32, i32* %st_mode132, align 8, !dbg !12588
  %and133 = and i32 %48, 2, !dbg !12590
  %tobool134 = icmp ne i32 %and133, 0, !dbg !12590
  br i1 %tobool134, label %if.then135, label %if.end137, !dbg !12591

if.then135:                                       ; preds = %if.end131
  %arrayidx136 = getelementptr [4097 x i8], [4097 x i8]* %m, i64 0, i64 8, !dbg !12592
  store i8 119, i8* %arrayidx136, align 8, !dbg !12594
  br label %if.end137, !dbg !12595

if.end137:                                        ; preds = %if.then135, %if.end131
  %st_mode138 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !12596
  %49 = load i32, i32* %st_mode138, align 8, !dbg !12596
  %and139 = and i32 %49, 1, !dbg !12598
  %tobool140 = icmp ne i32 %and139, 0, !dbg !12598
  br i1 %tobool140, label %if.then141, label %if.else148, !dbg !12599

if.then141:                                       ; preds = %if.end137
  %st_mode142 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !12600
  %50 = load i32, i32* %st_mode142, align 8, !dbg !12600
  %and143 = and i32 %50, 512, !dbg !12602
  %tobool144 = icmp ne i32 %and143, 0, !dbg !12603
  %51 = zext i1 %tobool144 to i64, !dbg !12603
  %cond145 = select i1 %tobool144, i32 116, i32 120, !dbg !12603
  %conv146 = trunc i32 %cond145 to i8, !dbg !12604
  %arrayidx147 = getelementptr [4097 x i8], [4097 x i8]* %m, i64 0, i64 9, !dbg !12605
  store i8 %conv146, i8* %arrayidx147, align 1, !dbg !12606
  br label %if.end155, !dbg !12607

if.else148:                                       ; preds = %if.end137
  %st_mode149 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !12608
  %52 = load i32, i32* %st_mode149, align 8, !dbg !12608
  %and150 = and i32 %52, 512, !dbg !12610
  %tobool151 = icmp ne i32 %and150, 0, !dbg !12610
  br i1 %tobool151, label %if.then152, label %if.end154, !dbg !12611

if.then152:                                       ; preds = %if.else148
  %arrayidx153 = getelementptr [4097 x i8], [4097 x i8]* %m, i64 0, i64 9, !dbg !12612
  store i8 84, i8* %arrayidx153, align 1, !dbg !12614
  br label %if.end154, !dbg !12615

if.end154:                                        ; preds = %if.then152, %if.else148
  br label %if.end155

if.end155:                                        ; preds = %if.end154, %if.then141
  %call156 = call i64 @time(i64* null) #7, !dbg !12616
  %st_mtim157 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 12, !dbg !12618
  %tv_sec158 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim157, i32 0, i32 0, !dbg !12618
  %53 = load i64, i64* %tv_sec158, align 8, !dbg !12618
  %sub = sub i64 %call156, %53, !dbg !12619
  %cmp159 = icmp sgt i64 %sub, 15552000, !dbg !12620
  br i1 %cmp159, label %if.then161, label %if.else168, !dbg !12621

if.then161:                                       ; preds = %if.end155
  %arraydecay162 = getelementptr inbounds [6 x i8], [6 x i8]* %timeline, i64 0, i64 0, !dbg !12622
  %54 = load %struct.tm*, %struct.tm** %t, align 8, !dbg !12622
  %tm_year = getelementptr inbounds %struct.tm, %struct.tm* %54, i32 0, i32 5, !dbg !12622
  %55 = load i32, i32* %tm_year, align 4, !dbg !12622
  %add = add i32 %55, 1900, !dbg !12622
  %call163 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay162, i64 6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29.500, i64 0, i64 0), i32 %add) #7, !dbg !12622
  %cmp164 = icmp sge i32 %call163, 6, !dbg !12622
  br i1 %cmp164, label %if.then166, label %if.end167, !dbg !12625

if.then166:                                       ; preds = %if.then161
  call void @_EXIT(i32 1) #11, !dbg !12626
  unreachable, !dbg !12626

if.end167:                                        ; preds = %if.then161
  br label %if.end175, !dbg !12628

if.else168:                                       ; preds = %if.end155
  %arraydecay169 = getelementptr inbounds [6 x i8], [6 x i8]* %timeline, i64 0, i64 0, !dbg !12629
  %56 = load %struct.tm*, %struct.tm** %t, align 8, !dbg !12629
  %tm_hour = getelementptr inbounds %struct.tm, %struct.tm* %56, i32 0, i32 2, !dbg !12629
  %57 = load i32, i32* %tm_hour, align 8, !dbg !12629
  %58 = load %struct.tm*, %struct.tm** %t, align 8, !dbg !12629
  %tm_min = getelementptr inbounds %struct.tm, %struct.tm* %58, i32 0, i32 1, !dbg !12629
  %59 = load i32, i32* %tm_min, align 4, !dbg !12629
  %call170 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay169, i64 6, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30.501, i64 0, i64 0), i32 %57, i32 %59) #7, !dbg !12629
  %cmp171 = icmp sge i32 %call170, 6, !dbg !12629
  br i1 %cmp171, label %if.then173, label %if.end174, !dbg !12632

if.then173:                                       ; preds = %if.else168
  call void @_EXIT(i32 1) #11, !dbg !12633
  unreachable, !dbg !12633

if.end174:                                        ; preds = %if.else168
  br label %if.end175

if.end175:                                        ; preds = %if.end174, %if.end167
  %60 = alloca i8, i64 8320, align 16, !dbg !12635
  store i8* %60, i8** %alloca_nameline, align 8, !dbg !12637
  %cmp176 = icmp eq i8* %60, null, !dbg !12638
  br i1 %cmp176, label %if.then178, label %if.end179, !dbg !12639

if.then178:                                       ; preds = %if.end175
  store i32 0, i32* %retval, align 4, !dbg !12640
  br label %return, !dbg !12640

if.end179:                                        ; preds = %if.end175
  %st_size180 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 8, !dbg !12642
  %61 = load i64, i64* %st_size180, align 8, !dbg !12642
  %cmp181 = icmp ult i64 %61, 10000000000, !dbg !12644
  br i1 %cmp181, label %if.then183, label %if.else184, !dbg !12645

if.then183:                                       ; preds = %if.end179
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.31.502, i64 0, i64 0), i8** %format, align 8, !dbg !12646
  br label %if.end185, !dbg !12648

if.else184:                                       ; preds = %if.end179
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.32.503, i64 0, i64 0), i8** %format, align 8, !dbg !12649
  br label %if.end185

if.end185:                                        ; preds = %if.else184, %if.then183
  %62 = load i8*, i8** %alloca_nameline, align 8, !dbg !12651
  %63 = load i8*, i8** %format, align 8, !dbg !12651
  %arraydecay186 = getelementptr inbounds [4097 x i8], [4097 x i8]* %m, i64 0, i64 0, !dbg !12651
  %st_nlink187 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 2, !dbg !12651
  %64 = load i64, i64* %st_nlink187, align 8, !dbg !12651
  %conv188 = trunc i64 %64 to i32, !dbg !12651
  %st_uid189 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 4, !dbg !12651
  %65 = load i32, i32* %st_uid189, align 4, !dbg !12651
  %call190 = call i8* @getname(i32 %65), !dbg !12651
  %st_gid191 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 5, !dbg !12651
  %66 = load i32, i32* %st_gid191, align 8, !dbg !12651
  %call192 = call i8* @getgroup(i32 %66), !dbg !12651
  %st_size193 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 8, !dbg !12651
  %67 = load i64, i64* %st_size193, align 8, !dbg !12651
  %68 = load %struct.tm*, %struct.tm** %t, align 8, !dbg !12651
  %tm_mon = getelementptr inbounds %struct.tm, %struct.tm* %68, i32 0, i32 4, !dbg !12651
  %69 = load i32, i32* %tm_mon, align 8, !dbg !12651
  %idxprom = sext i32 %69 to i64, !dbg !12651
  %arrayidx194 = getelementptr [12 x i8*], [12 x i8*]* @months, i64 0, i64 %idxprom, !dbg !12651
  %70 = load i8*, i8** %arrayidx194, align 8, !dbg !12651
  %71 = load %struct.tm*, %struct.tm** %t, align 8, !dbg !12651
  %tm_mday = getelementptr inbounds %struct.tm, %struct.tm* %71, i32 0, i32 3, !dbg !12651
  %72 = load i32, i32* %tm_mday, align 4, !dbg !12651
  %arraydecay195 = getelementptr inbounds [6 x i8], [6 x i8]* %timeline, i64 0, i64 0, !dbg !12651
  %73 = load i8*, i8** %name.addr, align 8, !dbg !12651
  %call196 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %62, i64 8320, i8* %63, i8* %arraydecay186, i32 %conv188, i8* %call190, i8* %call192, i64 %67, i8* %70, i32 %72, i8* %arraydecay195, i8* %73) #7, !dbg !12651
  %cmp197 = icmp sge i32 %call196, 8320, !dbg !12651
  br i1 %cmp197, label %if.then199, label %if.end200, !dbg !12653

if.then199:                                       ; preds = %if.end185
  br label %do.body, !dbg !12654

do.body:                                          ; preds = %if.then199
  br label %do.end, !dbg !12656

do.end:                                           ; preds = %do.body
  call void @_EXIT(i32 1) #11, !dbg !12658
  unreachable, !dbg !12658

if.end200:                                        ; preds = %if.end185
  %st_mode201 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !12659
  %74 = load i32, i32* %st_mode201, align 8, !dbg !12659
  %and202 = and i32 %74, 61440, !dbg !12659
  %cmp203 = icmp eq i32 %and202, 40960, !dbg !12659
  br i1 %cmp203, label %if.then205, label %if.end262, !dbg !12661

if.then205:                                       ; preds = %if.end200
  call void @llvm.dbg.declare(metadata i8** %p, metadata !12662, metadata !DIExpression()), !dbg !12664
  %75 = load i8*, i8** %alloca_nameline, align 8, !dbg !12665
  %76 = load i8*, i8** %alloca_nameline, align 8, !dbg !12666
  %call206 = call i64 @strlen(i8* %76) #12, !dbg !12667
  %add.ptr207 = getelementptr i8, i8* %75, i64 %call206, !dbg !12668
  store i8* %add.ptr207, i8** %p, align 8, !dbg !12664
  call void @llvm.dbg.declare(metadata i64* %sx, metadata !12669, metadata !DIExpression()), !dbg !12671
  %77 = load i8*, i8** %name.addr, align 8, !dbg !12672
  %arraydecay208 = getelementptr inbounds [4097 x i8], [4097 x i8]* %m, i64 0, i64 0, !dbg !12674
  %call209 = call i64 @readlink(i8* %77, i8* %arraydecay208, i64 4096) #7, !dbg !12675
  store i64 %call209, i64* %sx, align 8, !dbg !12676
  %cmp210 = icmp sgt i64 %call209, 0, !dbg !12677
  br i1 %cmp210, label %if.then212, label %if.else214, !dbg !12678

if.then212:                                       ; preds = %if.then205
  %78 = load i64, i64* %sx, align 8, !dbg !12679
  %arrayidx213 = getelementptr [4097 x i8], [4097 x i8]* %m, i64 0, i64 %78, !dbg !12681
  store i8 0, i8* %arrayidx213, align 1, !dbg !12682
  br label %if.end218, !dbg !12683

if.else214:                                       ; preds = %if.then205
  %arrayidx215 = getelementptr [4097 x i8], [4097 x i8]* %m, i64 0, i64 1, !dbg !12684
  store i8 46, i8* %arrayidx215, align 1, !dbg !12686
  %arrayidx216 = getelementptr [4097 x i8], [4097 x i8]* %m, i64 0, i64 0, !dbg !12687
  store i8 46, i8* %arrayidx216, align 16, !dbg !12688
  %arrayidx217 = getelementptr [4097 x i8], [4097 x i8]* %m, i64 0, i64 2, !dbg !12689
  store i8 0, i8* %arrayidx217, align 2, !dbg !12690
  br label %if.end218

if.end218:                                        ; preds = %if.else214, %if.then212
  %arrayidx219 = getelementptr [2 x i8], [2 x i8]* %suffix, i64 0, i64 0, !dbg !12691
  store i8 0, i8* %arrayidx219, align 1, !dbg !12692
  %79 = load i32, i32* @opt_F, align 4, !dbg !12693
  %tobool220 = icmp ne i32 %79, 0, !dbg !12693
  br i1 %tobool220, label %land.lhs.true221, label %if.end248, !dbg !12695

land.lhs.true221:                                 ; preds = %if.end218
  %80 = load i8*, i8** %name.addr, align 8, !dbg !12696
  %call222 = call i32 @stat(i8* %80, %struct.stat* %st) #7, !dbg !12697
  %cmp223 = icmp eq i32 %call222, 0, !dbg !12698
  br i1 %cmp223, label %if.then225, label %if.end248, !dbg !12699

if.then225:                                       ; preds = %land.lhs.true221
  %st_mode226 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !12700
  %81 = load i32, i32* %st_mode226, align 8, !dbg !12700
  %and227 = and i32 %81, 61440, !dbg !12700
  %cmp228 = icmp eq i32 %and227, 40960, !dbg !12700
  br i1 %cmp228, label %if.then230, label %if.else232, !dbg !12703

if.then230:                                       ; preds = %if.then225
  %arrayidx231 = getelementptr [2 x i8], [2 x i8]* %suffix, i64 0, i64 0, !dbg !12704
  store i8 64, i8* %arrayidx231, align 1, !dbg !12706
  br label %if.end247, !dbg !12707

if.else232:                                       ; preds = %if.then225
  %st_mode233 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !12708
  %82 = load i32, i32* %st_mode233, align 8, !dbg !12708
  %and234 = and i32 %82, 61440, !dbg !12708
  %cmp235 = icmp eq i32 %and234, 16384, !dbg !12708
  br i1 %cmp235, label %if.then237, label %if.else239, !dbg !12710

if.then237:                                       ; preds = %if.else232
  %arrayidx238 = getelementptr [2 x i8], [2 x i8]* %suffix, i64 0, i64 0, !dbg !12711
  store i8 47, i8* %arrayidx238, align 1, !dbg !12713
  br label %if.end246, !dbg !12714

if.else239:                                       ; preds = %if.else232
  %st_mode240 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !12715
  %83 = load i32, i32* %st_mode240, align 8, !dbg !12715
  %and241 = and i32 %83, 4161, !dbg !12717
  %tobool242 = icmp ne i32 %and241, 0, !dbg !12717
  br i1 %tobool242, label %if.then243, label %if.end245, !dbg !12718

if.then243:                                       ; preds = %if.else239
  %arrayidx244 = getelementptr [2 x i8], [2 x i8]* %suffix, i64 0, i64 0, !dbg !12719
  store i8 42, i8* %arrayidx244, align 1, !dbg !12721
  br label %if.end245, !dbg !12722

if.end245:                                        ; preds = %if.then243, %if.else239
  br label %if.end246

if.end246:                                        ; preds = %if.end245, %if.then237
  br label %if.end247

if.end247:                                        ; preds = %if.end246, %if.then230
  br label %if.end248, !dbg !12723

if.end248:                                        ; preds = %if.end247, %land.lhs.true221, %if.end218
  %84 = load i8*, i8** %p, align 8, !dbg !12724
  %85 = load i8*, i8** %alloca_nameline, align 8, !dbg !12724
  %call249 = call i64 @strlen(i8* %85) #12, !dbg !12724
  %sub250 = sub i64 8320, %call249, !dbg !12724
  %arraydecay251 = getelementptr inbounds [4097 x i8], [4097 x i8]* %m, i64 0, i64 0, !dbg !12724
  %call252 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %84, i64 %sub250, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33.504, i64 0, i64 0), i8* %arraydecay251) #7, !dbg !12724
  %86 = load i8*, i8** %alloca_nameline, align 8, !dbg !12724
  %call253 = call i64 @strlen(i8* %86) #12, !dbg !12724
  %sub254 = sub i64 8320, %call253, !dbg !12724
  %conv255 = trunc i64 %sub254 to i32, !dbg !12724
  %cmp256 = icmp sge i32 %call252, %conv255, !dbg !12724
  br i1 %cmp256, label %if.then258, label %if.end261, !dbg !12726

if.then258:                                       ; preds = %if.end248
  br label %do.body259, !dbg !12727

do.body259:                                       ; preds = %if.then258
  br label %do.end260, !dbg !12729

do.end260:                                        ; preds = %do.body259
  call void @_EXIT(i32 1) #11, !dbg !12731
  unreachable, !dbg !12731

if.end261:                                        ; preds = %if.end248
  br label %if.end262, !dbg !12732

if.end262:                                        ; preds = %if.end261, %if.end200
  %87 = load i8*, i8** %alloca_nameline, align 8, !dbg !12733
  %arraydecay263 = getelementptr inbounds [2 x i8], [2 x i8]* %suffix, i64 0, i64 0, !dbg !12734
  call void @addfile(i8* %87, i8* %arraydecay263), !dbg !12735
  br label %do.body264, !dbg !12736

do.body264:                                       ; preds = %if.end262
  br label %do.end265, !dbg !12737

do.end265:                                        ; preds = %do.body264
  br label %if.end266, !dbg !12739

if.end266:                                        ; preds = %do.end265, %sw.epilog
  br label %if.end284, !dbg !12740

if.else267:                                       ; preds = %if.end50
  %st_mode268 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !12741
  %88 = load i32, i32* %st_mode268, align 8, !dbg !12741
  %and269 = and i32 %88, 61440, !dbg !12741
  %cmp270 = icmp eq i32 %and269, 32768, !dbg !12741
  br i1 %cmp270, label %if.then281, label %lor.lhs.false, !dbg !12744

lor.lhs.false:                                    ; preds = %if.else267
  %st_mode272 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !12745
  %89 = load i32, i32* %st_mode272, align 8, !dbg !12745
  %and273 = and i32 %89, 61440, !dbg !12745
  %cmp274 = icmp eq i32 %and273, 16384, !dbg !12745
  br i1 %cmp274, label %if.then281, label %lor.lhs.false276, !dbg !12746

lor.lhs.false276:                                 ; preds = %lor.lhs.false
  %st_mode277 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !12747
  %90 = load i32, i32* %st_mode277, align 8, !dbg !12747
  %and278 = and i32 %90, 61440, !dbg !12747
  %cmp279 = icmp eq i32 %and278, 40960, !dbg !12747
  br i1 %cmp279, label %if.then281, label %if.end283, !dbg !12748

if.then281:                                       ; preds = %lor.lhs.false276, %lor.lhs.false, %if.else267
  %91 = load i8*, i8** %name.addr, align 8, !dbg !12749
  %arraydecay282 = getelementptr inbounds [2 x i8], [2 x i8]* %suffix, i64 0, i64 0, !dbg !12751
  call void @addfile(i8* %91, i8* %arraydecay282), !dbg !12752
  br label %if.end283, !dbg !12753

if.end283:                                        ; preds = %if.then281, %lor.lhs.false276
  br label %if.end284

if.end284:                                        ; preds = %if.end283, %if.end266
  %92 = load i32, i32* %rval, align 4, !dbg !12754
  store i32 %92, i32* %retval, align 4, !dbg !12755
  br label %return, !dbg !12755

return:                                           ; preds = %if.end284, %if.then178, %if.then26, %if.then2
  %93 = load i32, i32* %retval, align 4, !dbg !12756
  ret i32 %93, !dbg !12756
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal void @outputfiles(i32 %f, i8* %tls_fd) #0 !dbg !12757 {
entry:
  %f.addr = alloca i32, align 4
  %tls_fd.addr = alloca i8*, align 8
  %n = alloca i32, align 4
  %p = alloca %struct.filename*, align 8
  %q = alloca %struct.filename*, align 8
  %pad = alloca [6 x i8], align 1
  %tmp = alloca i8*, align 8
  store i32 %f, i32* %f.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %f.addr, metadata !12760, metadata !DIExpression()), !dbg !12761
  store i8* %tls_fd, i8** %tls_fd.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tls_fd.addr, metadata !12762, metadata !DIExpression()), !dbg !12763
  call void @llvm.dbg.declare(metadata i32* %n, metadata !12764, metadata !DIExpression()), !dbg !12765
  call void @llvm.dbg.declare(metadata %struct.filename** %p, metadata !12766, metadata !DIExpression()), !dbg !12767
  call void @llvm.dbg.declare(metadata %struct.filename** %q, metadata !12768, metadata !DIExpression()), !dbg !12769
  %0 = load %struct.filename*, %struct.filename** @head, align 8, !dbg !12770
  %tobool = icmp ne %struct.filename* %0, null, !dbg !12770
  br i1 %tobool, label %if.end, label %if.then, !dbg !12772

if.then:                                          ; preds = %entry
  br label %return, !dbg !12773

if.end:                                           ; preds = %entry
  %1 = load %struct.filename*, %struct.filename** @tail, align 8, !dbg !12775
  %down = getelementptr inbounds %struct.filename, %struct.filename* %1, i32 0, i32 0, !dbg !12776
  store %struct.filename* null, %struct.filename** %down, align 8, !dbg !12777
  store %struct.filename* null, %struct.filename** @tail, align 8, !dbg !12778
  %2 = load i32, i32* @colwidth, align 4, !dbg !12779
  %or = or i32 %2, 7, !dbg !12780
  %add = add i32 %or, 1, !dbg !12781
  store i32 %add, i32* @colwidth, align 4, !dbg !12782
  %3 = load i32, i32* @opt_l, align 4, !dbg !12783
  %cmp = icmp ne i32 %3, 0, !dbg !12785
  br i1 %cmp, label %if.then2, label %lor.lhs.false, !dbg !12786

lor.lhs.false:                                    ; preds = %if.end
  %4 = load i32, i32* @opt_C, align 4, !dbg !12787
  %cmp1 = icmp eq i32 %4, 0, !dbg !12788
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !12789

if.then2:                                         ; preds = %lor.lhs.false, %if.end
  store i32 75, i32* @colwidth, align 4, !dbg !12790
  br label %if.end3, !dbg !12792

if.end3:                                          ; preds = %if.then2, %lor.lhs.false
  %5 = load %struct.filename*, %struct.filename** @head, align 8, !dbg !12793
  store %struct.filename* %5, %struct.filename** %p, align 8, !dbg !12794
  %6 = load %struct.filename*, %struct.filename** %p, align 8, !dbg !12795
  %top = getelementptr inbounds %struct.filename, %struct.filename* %6, i32 0, i32 2, !dbg !12796
  store i32 1, i32* %top, align 8, !dbg !12797
  %7 = load i32, i32* @colwidth, align 4, !dbg !12798
  %cmp4 = icmp ugt i32 %7, 75, !dbg !12800
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !12801

if.then5:                                         ; preds = %if.end3
  %8 = load i32, i32* @filenames, align 4, !dbg !12802
  store i32 %8, i32* %n, align 4, !dbg !12804
  br label %if.end9, !dbg !12805

if.else:                                          ; preds = %if.end3
  %9 = load i32, i32* @filenames, align 4, !dbg !12806
  %10 = load i32, i32* @colwidth, align 4, !dbg !12808
  %div = udiv i32 75, %10, !dbg !12809
  %add6 = add i32 %9, %div, !dbg !12810
  %sub = sub i32 %add6, 1, !dbg !12811
  %11 = load i32, i32* @colwidth, align 4, !dbg !12812
  %div7 = udiv i32 75, %11, !dbg !12813
  %div8 = udiv i32 %sub, %div7, !dbg !12814
  store i32 %div8, i32* %n, align 4, !dbg !12815
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then5
  br label %while.cond, !dbg !12816

while.cond:                                       ; preds = %if.end16, %if.end9
  %12 = load i32, i32* %n, align 4, !dbg !12817
  %tobool10 = icmp ne i32 %12, 0, !dbg !12817
  br i1 %tobool10, label %land.rhs, label %land.end, !dbg !12818

land.rhs:                                         ; preds = %while.cond
  %13 = load %struct.filename*, %struct.filename** %p, align 8, !dbg !12819
  %tobool11 = icmp ne %struct.filename* %13, null, !dbg !12818
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %14 = phi i1 [ false, %while.cond ], [ %tobool11, %land.rhs ], !dbg !12820
  br i1 %14, label %while.body, label %while.end, !dbg !12816

while.body:                                       ; preds = %land.end
  %15 = load %struct.filename*, %struct.filename** %p, align 8, !dbg !12821
  %down12 = getelementptr inbounds %struct.filename, %struct.filename* %15, i32 0, i32 0, !dbg !12823
  %16 = load %struct.filename*, %struct.filename** %down12, align 8, !dbg !12823
  store %struct.filename* %16, %struct.filename** %p, align 8, !dbg !12824
  %17 = load %struct.filename*, %struct.filename** %p, align 8, !dbg !12825
  %cmp13 = icmp ne %struct.filename* %17, null, !dbg !12827
  br i1 %cmp13, label %if.then14, label %if.end16, !dbg !12828

if.then14:                                        ; preds = %while.body
  %18 = load %struct.filename*, %struct.filename** %p, align 8, !dbg !12829
  %top15 = getelementptr inbounds %struct.filename, %struct.filename* %18, i32 0, i32 2, !dbg !12831
  store i32 0, i32* %top15, align 8, !dbg !12832
  br label %if.end16, !dbg !12833

if.end16:                                         ; preds = %if.then14, %while.body
  %19 = load i32, i32* %n, align 4, !dbg !12834
  %dec = add i32 %19, -1, !dbg !12834
  store i32 %dec, i32* %n, align 4, !dbg !12834
  br label %while.cond, !dbg !12816, !llvm.loop !12835

while.end:                                        ; preds = %land.end
  %20 = load %struct.filename*, %struct.filename** @head, align 8, !dbg !12837
  store %struct.filename* %20, %struct.filename** %q, align 8, !dbg !12838
  br label %while.cond17, !dbg !12839

while.cond17:                                     ; preds = %while.body19, %while.end
  %21 = load %struct.filename*, %struct.filename** %p, align 8, !dbg !12840
  %tobool18 = icmp ne %struct.filename* %21, null, !dbg !12839
  br i1 %tobool18, label %while.body19, label %while.end24, !dbg !12839

while.body19:                                     ; preds = %while.cond17
  %22 = load %struct.filename*, %struct.filename** %q, align 8, !dbg !12841
  %top20 = getelementptr inbounds %struct.filename, %struct.filename* %22, i32 0, i32 2, !dbg !12843
  %23 = load i32, i32* %top20, align 8, !dbg !12843
  %24 = load %struct.filename*, %struct.filename** %p, align 8, !dbg !12844
  %top21 = getelementptr inbounds %struct.filename, %struct.filename* %24, i32 0, i32 2, !dbg !12845
  store i32 %23, i32* %top21, align 8, !dbg !12846
  %25 = load %struct.filename*, %struct.filename** %p, align 8, !dbg !12847
  %26 = load %struct.filename*, %struct.filename** %q, align 8, !dbg !12848
  %right = getelementptr inbounds %struct.filename, %struct.filename* %26, i32 0, i32 1, !dbg !12849
  store %struct.filename* %25, %struct.filename** %right, align 8, !dbg !12850
  %27 = load %struct.filename*, %struct.filename** %q, align 8, !dbg !12851
  %down22 = getelementptr inbounds %struct.filename, %struct.filename* %27, i32 0, i32 0, !dbg !12852
  %28 = load %struct.filename*, %struct.filename** %down22, align 8, !dbg !12852
  store %struct.filename* %28, %struct.filename** %q, align 8, !dbg !12853
  %29 = load %struct.filename*, %struct.filename** %p, align 8, !dbg !12854
  %down23 = getelementptr inbounds %struct.filename, %struct.filename* %29, i32 0, i32 0, !dbg !12855
  %30 = load %struct.filename*, %struct.filename** %down23, align 8, !dbg !12855
  store %struct.filename* %30, %struct.filename** %p, align 8, !dbg !12856
  br label %while.cond17, !dbg !12839, !llvm.loop !12857

while.end24:                                      ; preds = %while.cond17
  br label %while.cond25, !dbg !12859

while.cond25:                                     ; preds = %while.body27, %while.end24
  %31 = load %struct.filename*, %struct.filename** %q, align 8, !dbg !12860
  %tobool26 = icmp ne %struct.filename* %31, null, !dbg !12859
  br i1 %tobool26, label %while.body27, label %while.end30, !dbg !12859

while.body27:                                     ; preds = %while.cond25
  %32 = load %struct.filename*, %struct.filename** %q, align 8, !dbg !12861
  %right28 = getelementptr inbounds %struct.filename, %struct.filename* %32, i32 0, i32 1, !dbg !12863
  store %struct.filename* null, %struct.filename** %right28, align 8, !dbg !12864
  %33 = load %struct.filename*, %struct.filename** %q, align 8, !dbg !12865
  %down29 = getelementptr inbounds %struct.filename, %struct.filename* %33, i32 0, i32 0, !dbg !12866
  %34 = load %struct.filename*, %struct.filename** %down29, align 8, !dbg !12866
  store %struct.filename* %34, %struct.filename** %q, align 8, !dbg !12867
  br label %while.cond25, !dbg !12859, !llvm.loop !12868

while.end30:                                      ; preds = %while.cond25
  %35 = load %struct.filename*, %struct.filename** @head, align 8, !dbg !12870
  store %struct.filename* %35, %struct.filename** %p, align 8, !dbg !12871
  br label %while.cond31, !dbg !12872

while.cond31:                                     ; preds = %while.body40, %while.end30
  %36 = load %struct.filename*, %struct.filename** %p, align 8, !dbg !12873
  %tobool32 = icmp ne %struct.filename* %36, null, !dbg !12873
  br i1 %tobool32, label %land.lhs.true, label %land.end39, !dbg !12874

land.lhs.true:                                    ; preds = %while.cond31
  %37 = load %struct.filename*, %struct.filename** %p, align 8, !dbg !12875
  %down33 = getelementptr inbounds %struct.filename, %struct.filename* %37, i32 0, i32 0, !dbg !12876
  %38 = load %struct.filename*, %struct.filename** %down33, align 8, !dbg !12876
  %tobool34 = icmp ne %struct.filename* %38, null, !dbg !12875
  br i1 %tobool34, label %land.rhs35, label %land.end39, !dbg !12877

land.rhs35:                                       ; preds = %land.lhs.true
  %39 = load %struct.filename*, %struct.filename** %p, align 8, !dbg !12878
  %down36 = getelementptr inbounds %struct.filename, %struct.filename* %39, i32 0, i32 0, !dbg !12879
  %40 = load %struct.filename*, %struct.filename** %down36, align 8, !dbg !12879
  %top37 = getelementptr inbounds %struct.filename, %struct.filename* %40, i32 0, i32 2, !dbg !12880
  %41 = load i32, i32* %top37, align 8, !dbg !12880
  %tobool38 = icmp ne i32 %41, 0, !dbg !12881
  %lnot = xor i1 %tobool38, true, !dbg !12881
  br label %land.end39

land.end39:                                       ; preds = %land.rhs35, %land.lhs.true, %while.cond31
  %42 = phi i1 [ false, %land.lhs.true ], [ false, %while.cond31 ], [ %lnot, %land.rhs35 ], !dbg !12820
  br i1 %42, label %while.body40, label %while.end42, !dbg !12872

while.body40:                                     ; preds = %land.end39
  %43 = load %struct.filename*, %struct.filename** %p, align 8, !dbg !12882
  %down41 = getelementptr inbounds %struct.filename, %struct.filename* %43, i32 0, i32 0, !dbg !12884
  %44 = load %struct.filename*, %struct.filename** %down41, align 8, !dbg !12884
  store %struct.filename* %44, %struct.filename** %p, align 8, !dbg !12885
  br label %while.cond31, !dbg !12872, !llvm.loop !12886

while.end42:                                      ; preds = %land.end39
  %45 = load %struct.filename*, %struct.filename** %p, align 8, !dbg !12888
  %tobool43 = icmp ne %struct.filename* %45, null, !dbg !12888
  br i1 %tobool43, label %land.lhs.true44, label %if.end49, !dbg !12890

land.lhs.true44:                                  ; preds = %while.end42
  %46 = load %struct.filename*, %struct.filename** %p, align 8, !dbg !12891
  %down45 = getelementptr inbounds %struct.filename, %struct.filename* %46, i32 0, i32 0, !dbg !12892
  %47 = load %struct.filename*, %struct.filename** %down45, align 8, !dbg !12892
  %tobool46 = icmp ne %struct.filename* %47, null, !dbg !12891
  br i1 %tobool46, label %if.then47, label %if.end49, !dbg !12893

if.then47:                                        ; preds = %land.lhs.true44
  %48 = load %struct.filename*, %struct.filename** %p, align 8, !dbg !12894
  %down48 = getelementptr inbounds %struct.filename, %struct.filename* %48, i32 0, i32 0, !dbg !12896
  store %struct.filename* null, %struct.filename** %down48, align 8, !dbg !12897
  br label %if.end49, !dbg !12898

if.end49:                                         ; preds = %if.then47, %land.lhs.true44, %while.end42
  %49 = load %struct.filename*, %struct.filename** @head, align 8, !dbg !12899
  store %struct.filename* %49, %struct.filename** %p, align 8, !dbg !12900
  br label %while.cond50, !dbg !12901

while.cond50:                                     ; preds = %while.end74, %if.end49
  %50 = load %struct.filename*, %struct.filename** %p, align 8, !dbg !12902
  %tobool51 = icmp ne %struct.filename* %50, null, !dbg !12901
  br i1 %tobool51, label %while.body52, label %while.end75, !dbg !12901

while.body52:                                     ; preds = %while.cond50
  %51 = load %struct.filename*, %struct.filename** %p, align 8, !dbg !12903
  store %struct.filename* %51, %struct.filename** %q, align 8, !dbg !12905
  %52 = load %struct.filename*, %struct.filename** %p, align 8, !dbg !12906
  %down53 = getelementptr inbounds %struct.filename, %struct.filename* %52, i32 0, i32 0, !dbg !12907
  %53 = load %struct.filename*, %struct.filename** %down53, align 8, !dbg !12907
  store %struct.filename* %53, %struct.filename** %p, align 8, !dbg !12908
  br label %while.cond54, !dbg !12909

while.cond54:                                     ; preds = %if.end69, %while.body52
  %54 = load %struct.filename*, %struct.filename** %q, align 8, !dbg !12910
  %tobool55 = icmp ne %struct.filename* %54, null, !dbg !12909
  br i1 %tobool55, label %while.body56, label %while.end74, !dbg !12909

while.body56:                                     ; preds = %while.cond54
  call void @llvm.dbg.declare(metadata [6 x i8]* %pad, metadata !12911, metadata !DIExpression()), !dbg !12913
  call void @llvm.dbg.declare(metadata i8** %tmp, metadata !12914, metadata !DIExpression()), !dbg !12915
  %55 = load %struct.filename*, %struct.filename** %q, align 8, !dbg !12916
  %56 = bitcast %struct.filename* %55 to i8*, !dbg !12917
  store i8* %56, i8** %tmp, align 8, !dbg !12915
  %57 = load %struct.filename*, %struct.filename** %q, align 8, !dbg !12918
  %right57 = getelementptr inbounds %struct.filename, %struct.filename* %57, i32 0, i32 1, !dbg !12920
  %58 = load %struct.filename*, %struct.filename** %right57, align 8, !dbg !12920
  %tobool58 = icmp ne %struct.filename* %58, null, !dbg !12918
  br i1 %tobool58, label %if.then59, label %if.else65, !dbg !12921

if.then59:                                        ; preds = %while.body56
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %pad, i64 0, i64 0, !dbg !12922
  call void @llvm.memset.p0i8.i64(i8* align 1 %arraydecay, i8 9, i64 5, i1 false), !dbg !12922
  %arrayidx = getelementptr [6 x i8], [6 x i8]* %pad, i64 0, i64 5, !dbg !12924
  store i8 0, i8* %arrayidx, align 1, !dbg !12925
  %59 = load i32, i32* @colwidth, align 4, !dbg !12926
  %add60 = add i32 %59, 7, !dbg !12927
  %conv = zext i32 %add60 to i64, !dbg !12926
  %60 = load %struct.filename*, %struct.filename** %q, align 8, !dbg !12928
  %line = getelementptr inbounds %struct.filename, %struct.filename* %60, i32 0, i32 3, !dbg !12929
  %arraydecay61 = getelementptr inbounds [1 x i8], [1 x i8]* %line, i64 0, i64 0, !dbg !12928
  %call = call i64 @strlen(i8* %arraydecay61) #12, !dbg !12930
  %sub62 = sub i64 %conv, %call, !dbg !12931
  %div63 = udiv i64 %sub62, 8, !dbg !12932
  %arrayidx64 = getelementptr [6 x i8], [6 x i8]* %pad, i64 0, i64 %div63, !dbg !12933
  store i8 0, i8* %arrayidx64, align 1, !dbg !12934
  br label %if.end69, !dbg !12935

if.else65:                                        ; preds = %while.body56
  %arrayidx66 = getelementptr [6 x i8], [6 x i8]* %pad, i64 0, i64 0, !dbg !12936
  store i8 13, i8* %arrayidx66, align 1, !dbg !12938
  %arrayidx67 = getelementptr [6 x i8], [6 x i8]* %pad, i64 0, i64 1, !dbg !12939
  store i8 10, i8* %arrayidx67, align 1, !dbg !12940
  %arrayidx68 = getelementptr [6 x i8], [6 x i8]* %pad, i64 0, i64 2, !dbg !12941
  store i8 0, i8* %arrayidx68, align 1, !dbg !12942
  br label %if.end69

if.end69:                                         ; preds = %if.else65, %if.then59
  %61 = load i32, i32* %f.addr, align 4, !dbg !12943
  %62 = load i8*, i8** %tls_fd.addr, align 8, !dbg !12944
  %63 = load %struct.filename*, %struct.filename** %q, align 8, !dbg !12945
  %line70 = getelementptr inbounds %struct.filename, %struct.filename* %63, i32 0, i32 3, !dbg !12946
  %arraydecay71 = getelementptr inbounds [1 x i8], [1 x i8]* %line70, i64 0, i64 0, !dbg !12945
  call void @wrstr(i32 %61, i8* %62, i8* %arraydecay71), !dbg !12947
  %64 = load i32, i32* %f.addr, align 4, !dbg !12948
  %65 = load i8*, i8** %tls_fd.addr, align 8, !dbg !12949
  %arraydecay72 = getelementptr inbounds [6 x i8], [6 x i8]* %pad, i64 0, i64 0, !dbg !12950
  call void @wrstr(i32 %64, i8* %65, i8* %arraydecay72), !dbg !12951
  %66 = load %struct.filename*, %struct.filename** %q, align 8, !dbg !12952
  %right73 = getelementptr inbounds %struct.filename, %struct.filename* %66, i32 0, i32 1, !dbg !12953
  %67 = load %struct.filename*, %struct.filename** %right73, align 8, !dbg !12953
  store %struct.filename* %67, %struct.filename** %q, align 8, !dbg !12954
  %68 = load i8*, i8** %tmp, align 8, !dbg !12955
  call void @free(i8* %68) #7, !dbg !12956
  store i8* null, i8** %tmp, align 8, !dbg !12957
  br label %while.cond54, !dbg !12909, !llvm.loop !12958

while.end74:                                      ; preds = %while.cond54
  br label %while.cond50, !dbg !12901, !llvm.loop !12960

while.end75:                                      ; preds = %while.cond50
  store %struct.filename* null, %struct.filename** @tail, align 8, !dbg !12962
  store %struct.filename* null, %struct.filename** @head, align 8, !dbg !12963
  store i32 0, i32* @colwidth, align 4, !dbg !12964
  store i32 0, i32* @filenames, align 4, !dbg !12965
  br label %return, !dbg !12966

return:                                           ; preds = %while.end75, %if.then
  ret void, !dbg !12966
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal void @wrstr(i32 %f, i8* %tls_fd, i8* %s) #0 !dbg !889 {
entry:
  %f.addr = alloca i32, align 4
  %tls_fd.addr = alloca i8*, align 8
  %s.addr = alloca i8*, align 8
  %l = alloca i64, align 8
  %rest = alloca i64, align 8
  store i32 %f, i32* %f.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %f.addr, metadata !12967, metadata !DIExpression()), !dbg !12968
  store i8* %tls_fd, i8** %tls_fd.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tls_fd.addr, metadata !12969, metadata !DIExpression()), !dbg !12970
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !12971, metadata !DIExpression()), !dbg !12972
  call void @llvm.dbg.declare(metadata i64* %l, metadata !12973, metadata !DIExpression()), !dbg !12974
  %0 = load i8*, i8** %s.addr, align 8, !dbg !12975
  %cmp = icmp eq i8* %0, null, !dbg !12977
  br i1 %cmp, label %if.then, label %if.end6, !dbg !12978

if.then:                                          ; preds = %entry
  %1 = load i64, i64* @wrstr.outcnt, align 8, !dbg !12979
  %cmp1 = icmp ugt i64 %1, 0, !dbg !12982
  br i1 %cmp1, label %if.then2, label %if.end5, !dbg !12983

if.then2:                                         ; preds = %if.then
  %2 = load i8*, i8** %tls_fd.addr, align 8, !dbg !12984
  %3 = load i32, i32* %f.addr, align 4, !dbg !12987
  %4 = load i64, i64* @wrstr.outcnt, align 8, !dbg !12989
  %call = call i64 @safe_write(i32 %3, i8* getelementptr inbounds ([65536 x i8], [65536 x i8]* @wrstr.outbuf, i64 0, i64 0), i64 %4, i32 -1), !dbg !12990
  %5 = load i64, i64* @wrstr.outcnt, align 8, !dbg !12991
  %cmp3 = icmp ne i64 %call, %5, !dbg !12992
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !12993

if.then4:                                         ; preds = %if.then2
  br label %if.end34, !dbg !12994

if.end:                                           ; preds = %if.then2
  br label %if.end5, !dbg !12996

if.end5:                                          ; preds = %if.end, %if.then
  store i64 0, i64* @wrstr.outcnt, align 8, !dbg !12997
  br label %if.end34, !dbg !12998

if.end6:                                          ; preds = %entry
  %6 = load i8*, i8** %s.addr, align 8, !dbg !12999
  %call7 = call i64 @strlen(i8* %6) #12, !dbg !13001
  store i64 %call7, i64* %l, align 8, !dbg !13002
  %cmp8 = icmp ule i64 %call7, 0, !dbg !13003
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !13004

if.then9:                                         ; preds = %if.end6
  br label %if.end34, !dbg !13005

if.end10:                                         ; preds = %if.end6
  %7 = load i64, i64* %l, align 8, !dbg !13007
  %8 = load i64, i64* @wrstr.outcnt, align 8, !dbg !13009
  %sub = sub i64 65536, %8, !dbg !13010
  %cmp11 = icmp ule i64 %7, %sub, !dbg !13011
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !13012

if.then12:                                        ; preds = %if.end10
  %9 = load i64, i64* @wrstr.outcnt, align 8, !dbg !13013
  %add.ptr = getelementptr i8, i8* getelementptr inbounds ([65536 x i8], [65536 x i8]* @wrstr.outbuf, i64 0, i64 0), i64 %9, !dbg !13015
  %10 = load i8*, i8** %s.addr, align 8, !dbg !13016
  %11 = load i64, i64* %l, align 8, !dbg !13017
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 1 %10, i64 %11, i1 false), !dbg !13018
  %12 = load i64, i64* %l, align 8, !dbg !13019
  %13 = load i64, i64* @wrstr.outcnt, align 8, !dbg !13020
  %add = add i64 %13, %12, !dbg !13020
  store i64 %add, i64* @wrstr.outcnt, align 8, !dbg !13020
  br label %if.end34, !dbg !13021

if.end13:                                         ; preds = %if.end10
  %14 = load i64, i64* @wrstr.outcnt, align 8, !dbg !13022
  %cmp14 = icmp ult i64 %14, 65536, !dbg !13024
  br i1 %cmp14, label %if.then15, label %if.end20, !dbg !13025

if.then15:                                        ; preds = %if.end13
  call void @llvm.dbg.declare(metadata i64* %rest, metadata !13026, metadata !DIExpression()), !dbg !13028
  %15 = load i64, i64* @wrstr.outcnt, align 8, !dbg !13029
  %sub16 = sub i64 65536, %15, !dbg !13030
  store i64 %sub16, i64* %rest, align 8, !dbg !13028
  %16 = load i64, i64* @wrstr.outcnt, align 8, !dbg !13031
  %add.ptr17 = getelementptr i8, i8* getelementptr inbounds ([65536 x i8], [65536 x i8]* @wrstr.outbuf, i64 0, i64 0), i64 %16, !dbg !13032
  %17 = load i8*, i8** %s.addr, align 8, !dbg !13033
  %18 = load i64, i64* %rest, align 8, !dbg !13034
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr17, i8* align 1 %17, i64 %18, i1 false), !dbg !13035
  %19 = load i64, i64* %rest, align 8, !dbg !13036
  %20 = load i8*, i8** %s.addr, align 8, !dbg !13037
  %add.ptr18 = getelementptr i8, i8* %20, i64 %19, !dbg !13037
  store i8* %add.ptr18, i8** %s.addr, align 8, !dbg !13037
  %21 = load i64, i64* %rest, align 8, !dbg !13038
  %22 = load i64, i64* %l, align 8, !dbg !13039
  %sub19 = sub i64 %22, %21, !dbg !13039
  store i64 %sub19, i64* %l, align 8, !dbg !13039
  br label %if.end20, !dbg !13040

if.end20:                                         ; preds = %if.then15, %if.end13
  %23 = load i32, i32* %f.addr, align 4, !dbg !13041
  %call21 = call i64 @safe_write(i32 %23, i8* getelementptr inbounds ([65536 x i8], [65536 x i8]* @wrstr.outbuf, i64 0, i64 0), i64 65536, i32 -1), !dbg !13044
  %cmp22 = icmp ne i64 %call21, 65536, !dbg !13045
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !13046

if.then23:                                        ; preds = %if.end20
  br label %if.end34, !dbg !13047

if.end24:                                         ; preds = %if.end20
  br label %while.cond, !dbg !13049

while.cond:                                       ; preds = %if.end29, %if.end24
  %24 = load i64, i64* %l, align 8, !dbg !13051
  %cmp25 = icmp ugt i64 %24, 65536, !dbg !13052
  br i1 %cmp25, label %while.body, label %while.end, !dbg !13049

while.body:                                       ; preds = %while.cond
  %25 = load i32, i32* %f.addr, align 4, !dbg !13053
  %26 = load i8*, i8** %s.addr, align 8, !dbg !13056
  %call26 = call i64 @safe_write(i32 %25, i8* %26, i64 65536, i32 -1), !dbg !13057
  %cmp27 = icmp ne i64 %call26, 65536, !dbg !13058
  br i1 %cmp27, label %if.then28, label %if.end29, !dbg !13059

if.then28:                                        ; preds = %while.body
  br label %if.end34, !dbg !13060

if.end29:                                         ; preds = %while.body
  %27 = load i8*, i8** %s.addr, align 8, !dbg !13062
  %add.ptr30 = getelementptr i8, i8* %27, i64 65536, !dbg !13062
  store i8* %add.ptr30, i8** %s.addr, align 8, !dbg !13062
  %28 = load i64, i64* %l, align 8, !dbg !13063
  %sub31 = sub i64 %28, 65536, !dbg !13063
  store i64 %sub31, i64* %l, align 8, !dbg !13063
  br label %while.cond, !dbg !13049, !llvm.loop !13064

while.end:                                        ; preds = %while.cond
  %29 = load i64, i64* %l, align 8, !dbg !13066
  %cmp32 = icmp ugt i64 %29, 0, !dbg !13068
  br i1 %cmp32, label %if.then33, label %if.end34, !dbg !13069

if.then33:                                        ; preds = %while.end
  %30 = load i8*, i8** %s.addr, align 8, !dbg !13070
  %31 = load i64, i64* %l, align 8, !dbg !13072
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 getelementptr inbounds ([65536 x i8], [65536 x i8]* @wrstr.outbuf, i64 0, i64 0), i8* align 1 %30, i64 %31, i1 false), !dbg !13073
  %32 = load i64, i64* %l, align 8, !dbg !13074
  store i64 %32, i64* @wrstr.outcnt, align 8, !dbg !13075
  br label %if.end34, !dbg !13076

if.end34:                                         ; preds = %if.then4, %if.end5, %if.then9, %if.then12, %if.then23, %if.then28, %if.then33, %while.end
  ret void, !dbg !13077
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal void @listdir(i32 %depth, i32 %f, i8* %tls_fd, i8* %name) #0 !dbg !13078 {
entry:
  %depth.addr = alloca i32, align 4
  %f.addr = alloca i32, align 4
  %tls_fd.addr = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %dir = alloca %struct.PureFileInfo_*, align 8
  %names = alloca i8*, align 8
  %s = alloca %struct.PureFileInfo_*, align 8
  %r = alloca %struct.PureFileInfo_*, align 8
  %d = alloca i32, align 4
  %alloca_subdir = alloca i8*, align 8
  %sizeof_subdir = alloca i64, align 8
  store i32 %depth, i32* %depth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %depth.addr, metadata !13081, metadata !DIExpression()), !dbg !13082
  store i32 %f, i32* %f.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %f.addr, metadata !13083, metadata !DIExpression()), !dbg !13084
  store i8* %tls_fd, i8** %tls_fd.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tls_fd.addr, metadata !13085, metadata !DIExpression()), !dbg !13086
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !13087, metadata !DIExpression()), !dbg !13088
  call void @llvm.dbg.declare(metadata %struct.PureFileInfo_** %dir, metadata !13089, metadata !DIExpression()), !dbg !13091
  call void @llvm.dbg.declare(metadata i8** %names, metadata !13092, metadata !DIExpression()), !dbg !13093
  call void @llvm.dbg.declare(metadata %struct.PureFileInfo_** %s, metadata !13094, metadata !DIExpression()), !dbg !13095
  call void @llvm.dbg.declare(metadata %struct.PureFileInfo_** %r, metadata !13096, metadata !DIExpression()), !dbg !13097
  call void @llvm.dbg.declare(metadata i32* %d, metadata !13098, metadata !DIExpression()), !dbg !13099
  %0 = load i32, i32* %depth.addr, align 4, !dbg !13100
  %1 = load i32, i32* @max_ls_depth, align 4, !dbg !13102
  %cmp = icmp uge i32 %0, %1, !dbg !13103
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !13104

lor.lhs.false:                                    ; preds = %entry
  %2 = load i32, i32* @matches, align 4, !dbg !13105
  %3 = load i32, i32* @max_ls_files, align 4, !dbg !13106
  %cmp1 = icmp uge i32 %2, %3, !dbg !13107
  br i1 %cmp1, label %if.then, label %if.end, !dbg !13108

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !13109

if.end:                                           ; preds = %lor.lhs.false
  %call = call %struct.PureFileInfo_* @sreaddir(i8** %names), !dbg !13111
  store %struct.PureFileInfo_* %call, %struct.PureFileInfo_** %dir, align 8, !dbg !13113
  %cmp2 = icmp eq %struct.PureFileInfo_* %call, null, !dbg !13114
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !13115

if.then3:                                         ; preds = %if.end
  %4 = load i8*, i8** %name.addr, align 8, !dbg !13116
  call void (i32, i8*, ...) @addreply(i32 226, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.35.495, i64 0, i64 0), i8* %4), !dbg !13118
  br label %return, !dbg !13119

if.end4:                                          ; preds = %if.end
  %5 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %dir, align 8, !dbg !13120
  store %struct.PureFileInfo_* %5, %struct.PureFileInfo_** %s, align 8, !dbg !13121
  br label %while.cond, !dbg !13122

while.cond:                                       ; preds = %if.end44, %if.end4
  %6 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %s, align 8, !dbg !13123
  %name_offset = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %6, i32 0, i32 1, !dbg !13124
  %7 = load i64, i64* %name_offset, align 8, !dbg !13124
  %cmp5 = icmp ne i64 %7, -1, !dbg !13125
  br i1 %cmp5, label %while.body, label %while.end, !dbg !13122

while.body:                                       ; preds = %while.cond
  store i32 0, i32* %d, align 4, !dbg !13126
  %8 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %s, align 8, !dbg !13128
  %names_pnt = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %8, i32 0, i32 0, !dbg !13128
  %9 = load i8**, i8*** %names_pnt, align 8, !dbg !13128
  %10 = load i8*, i8** %9, align 8, !dbg !13128
  %11 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %s, align 8, !dbg !13128
  %name_offset6 = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %11, i32 0, i32 1, !dbg !13128
  %12 = load i64, i64* %name_offset6, align 8, !dbg !13128
  %add.ptr = getelementptr i8, i8* %10, i64 %12, !dbg !13128
  %arrayidx = getelementptr i8, i8* %add.ptr, i64 0, !dbg !13128
  %13 = load i8, i8* %arrayidx, align 1, !dbg !13128
  %conv = sext i8 %13 to i32, !dbg !13128
  %cmp7 = icmp ne i32 %conv, 46, !dbg !13130
  br i1 %cmp7, label %if.then9, label %if.else, !dbg !13131

if.then9:                                         ; preds = %while.body
  %14 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %s, align 8, !dbg !13132
  %call10 = call i32 @listfile(%struct.PureFileInfo_* %14, i8* null), !dbg !13134
  store i32 %call10, i32* %d, align 4, !dbg !13135
  br label %if.end40, !dbg !13136

if.else:                                          ; preds = %while.body
  %15 = load i32, i32* @opt_a, align 4, !dbg !13137
  %tobool = icmp ne i32 %15, 0, !dbg !13137
  br i1 %tobool, label %if.then11, label %if.end39, !dbg !13139

if.then11:                                        ; preds = %if.else
  %16 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %s, align 8, !dbg !13140
  %names_pnt12 = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %16, i32 0, i32 0, !dbg !13140
  %17 = load i8**, i8*** %names_pnt12, align 8, !dbg !13140
  %18 = load i8*, i8** %17, align 8, !dbg !13140
  %19 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %s, align 8, !dbg !13140
  %name_offset13 = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %19, i32 0, i32 1, !dbg !13140
  %20 = load i64, i64* %name_offset13, align 8, !dbg !13140
  %add.ptr14 = getelementptr i8, i8* %18, i64 %20, !dbg !13140
  %arrayidx15 = getelementptr i8, i8* %add.ptr14, i64 1, !dbg !13140
  %21 = load i8, i8* %arrayidx15, align 1, !dbg !13140
  %conv16 = sext i8 %21 to i32, !dbg !13140
  %cmp17 = icmp eq i32 %conv16, 0, !dbg !13143
  br i1 %cmp17, label %if.then34, label %lor.lhs.false19, !dbg !13144

lor.lhs.false19:                                  ; preds = %if.then11
  %22 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %s, align 8, !dbg !13145
  %names_pnt20 = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %22, i32 0, i32 0, !dbg !13145
  %23 = load i8**, i8*** %names_pnt20, align 8, !dbg !13145
  %24 = load i8*, i8** %23, align 8, !dbg !13145
  %25 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %s, align 8, !dbg !13145
  %name_offset21 = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %25, i32 0, i32 1, !dbg !13145
  %26 = load i64, i64* %name_offset21, align 8, !dbg !13145
  %add.ptr22 = getelementptr i8, i8* %24, i64 %26, !dbg !13145
  %arrayidx23 = getelementptr i8, i8* %add.ptr22, i64 1, !dbg !13145
  %27 = load i8, i8* %arrayidx23, align 1, !dbg !13145
  %conv24 = sext i8 %27 to i32, !dbg !13145
  %cmp25 = icmp eq i32 %conv24, 46, !dbg !13146
  br i1 %cmp25, label %land.lhs.true, label %if.else36, !dbg !13147

land.lhs.true:                                    ; preds = %lor.lhs.false19
  %28 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %s, align 8, !dbg !13148
  %names_pnt27 = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %28, i32 0, i32 0, !dbg !13148
  %29 = load i8**, i8*** %names_pnt27, align 8, !dbg !13148
  %30 = load i8*, i8** %29, align 8, !dbg !13148
  %31 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %s, align 8, !dbg !13148
  %name_offset28 = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %31, i32 0, i32 1, !dbg !13148
  %32 = load i64, i64* %name_offset28, align 8, !dbg !13148
  %add.ptr29 = getelementptr i8, i8* %30, i64 %32, !dbg !13148
  %arrayidx30 = getelementptr i8, i8* %add.ptr29, i64 2, !dbg !13148
  %33 = load i8, i8* %arrayidx30, align 1, !dbg !13148
  %conv31 = sext i8 %33 to i32, !dbg !13148
  %cmp32 = icmp eq i32 %conv31, 0, !dbg !13149
  br i1 %cmp32, label %if.then34, label %if.else36, !dbg !13150

if.then34:                                        ; preds = %land.lhs.true, %if.then11
  %34 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %s, align 8, !dbg !13151
  %call35 = call i32 @listfile(%struct.PureFileInfo_* %34, i8* null), !dbg !13153
  br label %if.end38, !dbg !13154

if.else36:                                        ; preds = %land.lhs.true, %lor.lhs.false19
  %35 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %s, align 8, !dbg !13155
  %call37 = call i32 @listfile(%struct.PureFileInfo_* %35, i8* null), !dbg !13157
  store i32 %call37, i32* %d, align 4, !dbg !13158
  br label %if.end38

if.end38:                                         ; preds = %if.else36, %if.then34
  br label %if.end39, !dbg !13159

if.end39:                                         ; preds = %if.end38, %if.else
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.then9
  %36 = load i32, i32* %d, align 4, !dbg !13160
  %tobool41 = icmp ne i32 %36, 0, !dbg !13160
  br i1 %tobool41, label %if.end44, label %if.then42, !dbg !13162

if.then42:                                        ; preds = %if.end40
  %37 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %s, align 8, !dbg !13163
  %name_offset43 = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %37, i32 0, i32 1, !dbg !13165
  store i64 -1, i64* %name_offset43, align 8, !dbg !13166
  br label %if.end44, !dbg !13167

if.end44:                                         ; preds = %if.then42, %if.end40
  %38 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %s, align 8, !dbg !13168
  %incdec.ptr = getelementptr %struct.PureFileInfo_, %struct.PureFileInfo_* %38, i32 1, !dbg !13168
  store %struct.PureFileInfo_* %incdec.ptr, %struct.PureFileInfo_** %s, align 8, !dbg !13168
  br label %while.cond, !dbg !13122, !llvm.loop !13169

while.end:                                        ; preds = %while.cond
  %39 = load i32, i32* %f.addr, align 4, !dbg !13171
  %40 = load i8*, i8** %tls_fd.addr, align 8, !dbg !13172
  call void @outputfiles(i32 %39, i8* %40), !dbg !13173
  %41 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %dir, align 8, !dbg !13174
  store %struct.PureFileInfo_* %41, %struct.PureFileInfo_** %r, align 8, !dbg !13175
  br label %while.cond45, !dbg !13176

while.cond45:                                     ; preds = %if.end89, %while.end
  %42 = load i32, i32* @opt_R, align 4, !dbg !13177
  %tobool46 = icmp ne i32 %42, 0, !dbg !13177
  br i1 %tobool46, label %land.rhs, label %land.end, !dbg !13178

land.rhs:                                         ; preds = %while.cond45
  %43 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %r, align 8, !dbg !13179
  %44 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %s, align 8, !dbg !13180
  %cmp47 = icmp ne %struct.PureFileInfo_* %43, %44, !dbg !13181
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond45
  %45 = phi i1 [ false, %while.cond45 ], [ %cmp47, %land.rhs ], !dbg !13182
  br i1 %45, label %while.body49, label %while.end91, !dbg !13176

while.body49:                                     ; preds = %land.end
  %46 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %r, align 8, !dbg !13183
  %name_offset50 = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %46, i32 0, i32 1, !dbg !13186
  %47 = load i64, i64* %name_offset50, align 8, !dbg !13186
  %cmp51 = icmp ne i64 %47, -1, !dbg !13187
  br i1 %cmp51, label %land.lhs.true53, label %if.end89, !dbg !13188

land.lhs.true53:                                  ; preds = %while.body49
  %48 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %r, align 8, !dbg !13189
  %names_pnt54 = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %48, i32 0, i32 0, !dbg !13189
  %49 = load i8**, i8*** %names_pnt54, align 8, !dbg !13189
  %50 = load i8*, i8** %49, align 8, !dbg !13189
  %51 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %r, align 8, !dbg !13189
  %name_offset55 = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %51, i32 0, i32 1, !dbg !13189
  %52 = load i64, i64* %name_offset55, align 8, !dbg !13189
  %add.ptr56 = getelementptr i8, i8* %50, i64 %52, !dbg !13189
  %call57 = call i32 @chdir(i8* %add.ptr56) #7, !dbg !13190
  %tobool58 = icmp ne i32 %call57, 0, !dbg !13190
  br i1 %tobool58, label %if.end89, label %if.then59, !dbg !13191

if.then59:                                        ; preds = %land.lhs.true53
  call void @llvm.dbg.declare(metadata i8** %alloca_subdir, metadata !13192, metadata !DIExpression()), !dbg !13194
  call void @llvm.dbg.declare(metadata i64* %sizeof_subdir, metadata !13195, metadata !DIExpression()), !dbg !13196
  store i64 4097, i64* %sizeof_subdir, align 8, !dbg !13196
  %53 = alloca i8, i64 4097, align 16, !dbg !13197
  store i8* %53, i8** %alloca_subdir, align 8, !dbg !13199
  %cmp60 = icmp eq i8* %53, null, !dbg !13200
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !13201

if.then62:                                        ; preds = %if.then59
  br label %toomany, !dbg !13202

if.end63:                                         ; preds = %if.then59
  %54 = load i8*, i8** %alloca_subdir, align 8, !dbg !13204
  %55 = load i8*, i8** %name.addr, align 8, !dbg !13204
  %56 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %r, align 8, !dbg !13204
  %names_pnt64 = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %56, i32 0, i32 0, !dbg !13204
  %57 = load i8**, i8*** %names_pnt64, align 8, !dbg !13204
  %58 = load i8*, i8** %57, align 8, !dbg !13204
  %59 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %r, align 8, !dbg !13204
  %name_offset65 = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %59, i32 0, i32 1, !dbg !13204
  %60 = load i64, i64* %name_offset65, align 8, !dbg !13204
  %add.ptr66 = getelementptr i8, i8* %58, i64 %60, !dbg !13204
  %call67 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %54, i64 4097, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36.496, i64 0, i64 0), i8* %55, i8* %add.ptr66) #7, !dbg !13204
  %cmp68 = icmp sge i32 %call67, 4097, !dbg !13204
  br i1 %cmp68, label %if.then70, label %if.end71, !dbg !13206

if.then70:                                        ; preds = %if.end63
  br label %nolist, !dbg !13207

if.end71:                                         ; preds = %if.end63
  %61 = load i32, i32* %f.addr, align 4, !dbg !13209
  %62 = load i8*, i8** %tls_fd.addr, align 8, !dbg !13210
  call void @wrstr(i32 %61, i8* %62, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.474, i64 0, i64 0)), !dbg !13211
  %63 = load i32, i32* %f.addr, align 4, !dbg !13212
  %64 = load i8*, i8** %tls_fd.addr, align 8, !dbg !13213
  %65 = load i8*, i8** %alloca_subdir, align 8, !dbg !13214
  call void @wrstr(i32 %63, i8* %64, i8* %65), !dbg !13215
  %66 = load i32, i32* %f.addr, align 4, !dbg !13216
  %67 = load i8*, i8** %tls_fd.addr, align 8, !dbg !13217
  call void @wrstr(i32 %66, i8* %67, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4.475, i64 0, i64 0)), !dbg !13218
  %68 = load i32, i32* %depth.addr, align 4, !dbg !13219
  %add = add i32 %68, 1, !dbg !13220
  %69 = load i32, i32* %f.addr, align 4, !dbg !13221
  %70 = load i8*, i8** %tls_fd.addr, align 8, !dbg !13222
  %71 = load i8*, i8** %alloca_subdir, align 8, !dbg !13223
  call void @listdir(i32 %add, i32 %69, i8* %70, i8* %71), !dbg !13224
  br label %nolist, !dbg !13224

nolist:                                           ; preds = %if.end71, %if.then70
  call void @llvm.dbg.label(metadata !13225), !dbg !13226
  br label %do.body, !dbg !13227

do.body:                                          ; preds = %nolist
  br label %do.end, !dbg !13228

do.end:                                           ; preds = %do.body
  %72 = load i32, i32* @matches, align 4, !dbg !13230
  %73 = load i32, i32* @max_ls_files, align 4, !dbg !13232
  %cmp72 = icmp uge i32 %72, %73, !dbg !13233
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !13234

if.then74:                                        ; preds = %do.end
  br label %toomany, !dbg !13235

if.end75:                                         ; preds = %do.end
  %call76 = call i32 @chdir(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.37.497, i64 0, i64 0)) #7, !dbg !13237
  %tobool77 = icmp ne i32 %call76, 0, !dbg !13237
  br i1 %tobool77, label %if.then78, label %if.end88, !dbg !13239

if.then78:                                        ; preds = %if.end75
  %call79 = call i32 @chdir(i8* getelementptr inbounds ([4097 x i8], [4097 x i8]* @wd, i64 0, i64 0)) #7, !dbg !13240
  %tobool80 = icmp ne i32 %call79, 0, !dbg !13240
  br i1 %tobool80, label %if.then84, label %lor.lhs.false81, !dbg !13243

lor.lhs.false81:                                  ; preds = %if.then78
  %74 = load i8*, i8** %name.addr, align 8, !dbg !13244
  %call82 = call i32 @chdir(i8* %74) #7, !dbg !13245
  %tobool83 = icmp ne i32 %call82, 0, !dbg !13245
  br i1 %tobool83, label %if.then84, label %if.end87, !dbg !13246

if.then84:                                        ; preds = %lor.lhs.false81, %if.then78
  %call85 = call i32* @__errno_location() #14, !dbg !13247
  %75 = load i32, i32* %call85, align 4, !dbg !13247
  %call86 = call i8* @strerror(i32 %75) #7, !dbg !13249
  call void (i32, i32, i8*, ...) @die(i32 421, i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5.476, i64 0, i64 0), i8* %call86) #11, !dbg !13250
  unreachable, !dbg !13250

if.end87:                                         ; preds = %lor.lhs.false81
  br label %if.end88, !dbg !13251

if.end88:                                         ; preds = %if.end87, %if.end75
  br label %if.end89, !dbg !13252

if.end89:                                         ; preds = %if.end88, %land.lhs.true53, %while.body49
  %76 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %r, align 8, !dbg !13253
  %incdec.ptr90 = getelementptr %struct.PureFileInfo_, %struct.PureFileInfo_* %76, i32 1, !dbg !13253
  store %struct.PureFileInfo_* %incdec.ptr90, %struct.PureFileInfo_** %r, align 8, !dbg !13253
  br label %while.cond45, !dbg !13176, !llvm.loop !13254

while.end91:                                      ; preds = %land.end
  br label %toomany, !dbg !13176

toomany:                                          ; preds = %while.end91, %if.then74, %if.then62
  call void @llvm.dbg.label(metadata !13256), !dbg !13257
  %77 = load i8*, i8** %names, align 8, !dbg !13258
  call void @free(i8* %77) #7, !dbg !13259
  %78 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %dir, align 8, !dbg !13260
  %79 = bitcast %struct.PureFileInfo_* %78 to i8*, !dbg !13260
  call void @free(i8* %79) #7, !dbg !13261
  store i8* null, i8** %names, align 8, !dbg !13262
  br label %return, !dbg !13263

return:                                           ; preds = %toomany, %if.then3, %if.then
  ret void, !dbg !13263
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal %struct.PureFileInfo_* @sreaddir(i8** %names_pnt) #0 !dbg !13264 {
entry:
  %retval = alloca %struct.PureFileInfo_*, align 8
  %names_pnt.addr = alloca i8**, align 8
  %st = alloca %struct.stat, align 8
  %d = alloca %struct.__dirstream*, align 8
  %de = alloca %struct.dirent*, align 8
  %files_info = alloca %struct.PureFileInfo_*, align 8
  %file_info = alloca %struct.PureFileInfo_*, align 8
  %files_info_size = alloca i64, align 8
  %files_info_counter = alloca i64, align 8
  %names = alloca i8*, align 8
  %names_size = alloca i64, align 8
  %names_counter = alloca i64, align 8
  %name_len = alloca i64, align 8
  %cmp_func = alloca i32 (i8*, i8*)*, align 8
  %new_names = alloca i8*, align 8
  %new_files_info = alloca %struct.PureFileInfo_*, align 8
  store i8** %names_pnt, i8*** %names_pnt.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %names_pnt.addr, metadata !13267, metadata !DIExpression()), !dbg !13268
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !13269, metadata !DIExpression()), !dbg !13270
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %d, metadata !13271, metadata !DIExpression()), !dbg !13276
  call void @llvm.dbg.declare(metadata %struct.dirent** %de, metadata !13277, metadata !DIExpression()), !dbg !13278
  call void @llvm.dbg.declare(metadata %struct.PureFileInfo_** %files_info, metadata !13279, metadata !DIExpression()), !dbg !13280
  call void @llvm.dbg.declare(metadata %struct.PureFileInfo_** %file_info, metadata !13281, metadata !DIExpression()), !dbg !13282
  call void @llvm.dbg.declare(metadata i64* %files_info_size, metadata !13283, metadata !DIExpression()), !dbg !13284
  call void @llvm.dbg.declare(metadata i64* %files_info_counter, metadata !13285, metadata !DIExpression()), !dbg !13286
  store i64 0, i64* %files_info_counter, align 8, !dbg !13286
  call void @llvm.dbg.declare(metadata i8** %names, metadata !13287, metadata !DIExpression()), !dbg !13288
  call void @llvm.dbg.declare(metadata i64* %names_size, metadata !13289, metadata !DIExpression()), !dbg !13290
  call void @llvm.dbg.declare(metadata i64* %names_counter, metadata !13291, metadata !DIExpression()), !dbg !13292
  store i64 0, i64* %names_counter, align 8, !dbg !13292
  call void @llvm.dbg.declare(metadata i64* %name_len, metadata !13293, metadata !DIExpression()), !dbg !13294
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp_func, metadata !13295, metadata !DIExpression()), !dbg !13300
  %call = call %struct.__dirstream* @opendir(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.480, i64 0, i64 0)), !dbg !13301
  store %struct.__dirstream* %call, %struct.__dirstream** %d, align 8, !dbg !13303
  %cmp = icmp eq %struct.__dirstream* %call, null, !dbg !13304
  br i1 %cmp, label %if.then, label %if.end, !dbg !13305

if.then:                                          ; preds = %entry
  store %struct.PureFileInfo_* null, %struct.PureFileInfo_** %retval, align 8, !dbg !13306
  br label %return, !dbg !13306

if.end:                                           ; preds = %entry
  %0 = load i64, i64* @page_size, align 8, !dbg !13308
  store i64 %0, i64* %names_size, align 8, !dbg !13309
  %1 = load i64, i64* %names_size, align 8, !dbg !13310
  %call1 = call noalias i8* @malloc(i64 %1) #7, !dbg !13312
  store i8* %call1, i8** %names, align 8, !dbg !13313
  %cmp2 = icmp eq i8* %call1, null, !dbg !13314
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !13315

if.then3:                                         ; preds = %if.end
  %2 = load %struct.__dirstream*, %struct.__dirstream** %d, align 8, !dbg !13316
  %call4 = call i32 @closedir(%struct.__dirstream* %2), !dbg !13318
  store %struct.PureFileInfo_* null, %struct.PureFileInfo_** %retval, align 8, !dbg !13319
  br label %return, !dbg !13319

if.end5:                                          ; preds = %if.end
  %3 = load i64, i64* @page_size, align 8, !dbg !13320
  %div = udiv i64 %3, 56, !dbg !13321
  store i64 %div, i64* %files_info_size, align 8, !dbg !13322
  %4 = load i64, i64* %files_info_size, align 8, !dbg !13323
  %mul = mul i64 %4, 56, !dbg !13325
  %call6 = call noalias i8* @malloc(i64 %mul) #7, !dbg !13326
  %5 = bitcast i8* %call6 to %struct.PureFileInfo_*, !dbg !13326
  store %struct.PureFileInfo_* %5, %struct.PureFileInfo_** %files_info, align 8, !dbg !13327
  %cmp7 = icmp eq %struct.PureFileInfo_* %5, null, !dbg !13328
  br i1 %cmp7, label %if.then8, label %if.end10, !dbg !13329

if.then8:                                         ; preds = %if.end5
  %6 = load %struct.__dirstream*, %struct.__dirstream** %d, align 8, !dbg !13330
  %call9 = call i32 @closedir(%struct.__dirstream* %6), !dbg !13332
  %7 = load i8*, i8** %names, align 8, !dbg !13333
  call void @free(i8* %7) #7, !dbg !13334
  store %struct.PureFileInfo_* null, %struct.PureFileInfo_** %retval, align 8, !dbg !13335
  br label %return, !dbg !13335

if.end10:                                         ; preds = %if.end5
  br label %while.cond, !dbg !13336

while.cond:                                       ; preds = %while.end50, %if.then19, %if.end10
  %8 = load %struct.__dirstream*, %struct.__dirstream** %d, align 8, !dbg !13337
  %call11 = call %struct.dirent* @readdir(%struct.__dirstream* %8), !dbg !13338
  store %struct.dirent* %call11, %struct.dirent** %de, align 8, !dbg !13339
  %cmp12 = icmp ne %struct.dirent* %call11, null, !dbg !13340
  br i1 %cmp12, label %while.body, label %while.end58, !dbg !13336

while.body:                                       ; preds = %while.cond
  %9 = load %struct.dirent*, %struct.dirent** %de, align 8, !dbg !13341
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %9, i32 0, i32 4, !dbg !13344
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !13341
  %call13 = call i32 @checkprintable(i8* %arraydecay), !dbg !13345
  %cmp14 = icmp ne i32 %call13, 0, !dbg !13346
  br i1 %cmp14, label %if.then19, label %lor.lhs.false, !dbg !13347

lor.lhs.false:                                    ; preds = %while.body
  %10 = load %struct.dirent*, %struct.dirent** %de, align 8, !dbg !13348
  %d_name15 = getelementptr inbounds %struct.dirent, %struct.dirent* %10, i32 0, i32 4, !dbg !13349
  %arraydecay16 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name15, i64 0, i64 0, !dbg !13348
  %call17 = call i32 @lstat(i8* %arraydecay16, %struct.stat* %st) #7, !dbg !13350
  %cmp18 = icmp slt i32 %call17, 0, !dbg !13351
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !13352

if.then19:                                        ; preds = %lor.lhs.false, %while.body
  br label %while.cond, !dbg !13353, !llvm.loop !13355

if.end20:                                         ; preds = %lor.lhs.false
  %11 = load %struct.dirent*, %struct.dirent** %de, align 8, !dbg !13357
  %d_name21 = getelementptr inbounds %struct.dirent, %struct.dirent* %11, i32 0, i32 4, !dbg !13358
  %arraydecay22 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name21, i64 0, i64 0, !dbg !13357
  %call23 = call i64 @strlen(i8* %arraydecay22) #12, !dbg !13359
  %add = add i64 %call23, 1, !dbg !13360
  store i64 %add, i64* %name_len, align 8, !dbg !13361
  br label %while.cond24, !dbg !13362

while.cond24:                                     ; preds = %if.end38, %if.end20
  %12 = load i64, i64* %names_counter, align 8, !dbg !13363
  %13 = load i64, i64* %name_len, align 8, !dbg !13364
  %add25 = add i64 %12, %13, !dbg !13365
  %14 = load i64, i64* %names_size, align 8, !dbg !13366
  %cmp26 = icmp uge i64 %add25, %14, !dbg !13367
  br i1 %cmp26, label %while.body27, label %while.end, !dbg !13362

while.body27:                                     ; preds = %while.cond24
  call void @llvm.dbg.declare(metadata i8** %new_names, metadata !13368, metadata !DIExpression()), !dbg !13370
  %15 = load i64, i64* %name_len, align 8, !dbg !13371
  %16 = load i64, i64* @page_size, align 8, !dbg !13373
  %cmp28 = icmp uge i64 %15, %16, !dbg !13374
  br i1 %cmp28, label %if.then29, label %if.else, !dbg !13375

if.then29:                                        ; preds = %while.body27
  %17 = load i64, i64* %name_len, align 8, !dbg !13376
  %18 = load i64, i64* @page_size, align 8, !dbg !13378
  %add30 = add i64 %17, %18, !dbg !13379
  %19 = load i64, i64* %names_size, align 8, !dbg !13380
  %add31 = add i64 %19, %add30, !dbg !13380
  store i64 %add31, i64* %names_size, align 8, !dbg !13380
  br label %if.end33, !dbg !13381

if.else:                                          ; preds = %while.body27
  %20 = load i64, i64* @page_size, align 8, !dbg !13382
  %21 = load i64, i64* %names_size, align 8, !dbg !13384
  %add32 = add i64 %21, %20, !dbg !13384
  store i64 %add32, i64* %names_size, align 8, !dbg !13384
  br label %if.end33

if.end33:                                         ; preds = %if.else, %if.then29
  %22 = load i8*, i8** %names, align 8, !dbg !13385
  %23 = load i64, i64* %names_size, align 8, !dbg !13387
  %call34 = call i8* @realloc(i8* %22, i64 %23) #7, !dbg !13388
  store i8* %call34, i8** %new_names, align 8, !dbg !13389
  %cmp35 = icmp eq i8* %call34, null, !dbg !13390
  br i1 %cmp35, label %if.then36, label %if.end38, !dbg !13391

if.then36:                                        ; preds = %if.end33
  br label %nomem, !dbg !13392

nomem:                                            ; preds = %if.then48, %if.then36
  call void @llvm.dbg.label(metadata !13393), !dbg !13395
  %24 = load %struct.__dirstream*, %struct.__dirstream** %d, align 8, !dbg !13396
  %call37 = call i32 @closedir(%struct.__dirstream* %24), !dbg !13397
  %25 = load i8*, i8** %names, align 8, !dbg !13398
  call void @free(i8* %25) #7, !dbg !13399
  %26 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %files_info, align 8, !dbg !13400
  %27 = bitcast %struct.PureFileInfo_* %26 to i8*, !dbg !13400
  call void @free(i8* %27) #7, !dbg !13401
  store %struct.PureFileInfo_* null, %struct.PureFileInfo_** %retval, align 8, !dbg !13402
  br label %return, !dbg !13402

if.end38:                                         ; preds = %if.end33
  %28 = load i8*, i8** %new_names, align 8, !dbg !13403
  store i8* %28, i8** %names, align 8, !dbg !13404
  br label %while.cond24, !dbg !13362, !llvm.loop !13405

while.end:                                        ; preds = %while.cond24
  br label %while.cond39, !dbg !13407

while.cond39:                                     ; preds = %if.end49, %while.end
  %29 = load i64, i64* %files_info_counter, align 8, !dbg !13408
  %add40 = add i64 %29, 1, !dbg !13409
  %30 = load i64, i64* %files_info_size, align 8, !dbg !13410
  %cmp41 = icmp uge i64 %add40, %30, !dbg !13411
  br i1 %cmp41, label %while.body42, label %while.end50, !dbg !13407

while.body42:                                     ; preds = %while.cond39
  call void @llvm.dbg.declare(metadata %struct.PureFileInfo_** %new_files_info, metadata !13412, metadata !DIExpression()), !dbg !13414
  %31 = load i64, i64* @page_size, align 8, !dbg !13415
  %div43 = udiv i64 %31, 56, !dbg !13416
  %32 = load i64, i64* %files_info_size, align 8, !dbg !13417
  %add44 = add i64 %32, %div43, !dbg !13417
  store i64 %add44, i64* %files_info_size, align 8, !dbg !13417
  %33 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %files_info, align 8, !dbg !13418
  %34 = bitcast %struct.PureFileInfo_* %33 to i8*, !dbg !13418
  %35 = load i64, i64* %files_info_size, align 8, !dbg !13420
  %mul45 = mul i64 %35, 56, !dbg !13421
  %call46 = call i8* @realloc(i8* %34, i64 %mul45) #7, !dbg !13422
  %36 = bitcast i8* %call46 to %struct.PureFileInfo_*, !dbg !13422
  store %struct.PureFileInfo_* %36, %struct.PureFileInfo_** %new_files_info, align 8, !dbg !13423
  %cmp47 = icmp eq %struct.PureFileInfo_* %36, null, !dbg !13424
  br i1 %cmp47, label %if.then48, label %if.end49, !dbg !13425

if.then48:                                        ; preds = %while.body42
  br label %nomem, !dbg !13426

if.end49:                                         ; preds = %while.body42
  %37 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %new_files_info, align 8, !dbg !13428
  store %struct.PureFileInfo_* %37, %struct.PureFileInfo_** %files_info, align 8, !dbg !13429
  br label %while.cond39, !dbg !13407, !llvm.loop !13430

while.end50:                                      ; preds = %while.cond39
  %38 = load i8*, i8** %names, align 8, !dbg !13432
  %39 = load i64, i64* %names_counter, align 8, !dbg !13433
  %arrayidx = getelementptr i8, i8* %38, i64 %39, !dbg !13432
  %40 = load %struct.dirent*, %struct.dirent** %de, align 8, !dbg !13434
  %d_name51 = getelementptr inbounds %struct.dirent, %struct.dirent* %40, i32 0, i32 4, !dbg !13435
  %arraydecay52 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name51, i64 0, i64 0, !dbg !13436
  %41 = load i64, i64* %name_len, align 8, !dbg !13437
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arrayidx, i8* align 1 %arraydecay52, i64 %41, i1 false), !dbg !13436
  %42 = load i8*, i8** %names, align 8, !dbg !13438
  %43 = load i64, i64* %names_counter, align 8, !dbg !13439
  %44 = load i64, i64* %name_len, align 8, !dbg !13440
  %add53 = add i64 %43, %44, !dbg !13441
  %sub = sub i64 %add53, 1, !dbg !13442
  %arrayidx54 = getelementptr i8, i8* %42, i64 %sub, !dbg !13438
  store i8 0, i8* %arrayidx54, align 1, !dbg !13443
  %45 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %files_info, align 8, !dbg !13444
  %46 = load i64, i64* %files_info_counter, align 8, !dbg !13445
  %arrayidx55 = getelementptr %struct.PureFileInfo_, %struct.PureFileInfo_* %45, i64 %46, !dbg !13444
  store %struct.PureFileInfo_* %arrayidx55, %struct.PureFileInfo_** %file_info, align 8, !dbg !13446
  %47 = load i8**, i8*** %names_pnt.addr, align 8, !dbg !13447
  %48 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %file_info, align 8, !dbg !13448
  %names_pnt56 = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %48, i32 0, i32 0, !dbg !13449
  store i8** %47, i8*** %names_pnt56, align 8, !dbg !13450
  %49 = load i64, i64* %names_counter, align 8, !dbg !13451
  %50 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %file_info, align 8, !dbg !13452
  %name_offset = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %50, i32 0, i32 1, !dbg !13453
  store i64 %49, i64* %name_offset, align 8, !dbg !13454
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 8, !dbg !13455
  %51 = load i64, i64* %st_size, align 8, !dbg !13455
  %52 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %file_info, align 8, !dbg !13456
  %size = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %52, i32 0, i32 2, !dbg !13457
  store i64 %51, i64* %size, align 8, !dbg !13458
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 12, !dbg !13459
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim, i32 0, i32 0, !dbg !13459
  %53 = load i64, i64* %tv_sec, align 8, !dbg !13459
  %54 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %file_info, align 8, !dbg !13460
  %mtime = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %54, i32 0, i32 3, !dbg !13461
  store i64 %53, i64* %mtime, align 8, !dbg !13462
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !13463
  %55 = load i32, i32* %st_mode, align 8, !dbg !13463
  %56 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %file_info, align 8, !dbg !13464
  %mode = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %56, i32 0, i32 4, !dbg !13465
  store i32 %55, i32* %mode, align 8, !dbg !13466
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 2, !dbg !13467
  %57 = load i64, i64* %st_nlink, align 8, !dbg !13467
  %58 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %file_info, align 8, !dbg !13468
  %nlink = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %58, i32 0, i32 5, !dbg !13469
  store i64 %57, i64* %nlink, align 8, !dbg !13470
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 4, !dbg !13471
  %59 = load i32, i32* %st_uid, align 4, !dbg !13471
  %60 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %file_info, align 8, !dbg !13472
  %uid = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %60, i32 0, i32 6, !dbg !13473
  store i32 %59, i32* %uid, align 8, !dbg !13474
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 5, !dbg !13475
  %61 = load i32, i32* %st_gid, align 8, !dbg !13475
  %62 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %file_info, align 8, !dbg !13476
  %gid = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %62, i32 0, i32 7, !dbg !13477
  store i32 %61, i32* %gid, align 4, !dbg !13478
  %63 = load i64, i64* %name_len, align 8, !dbg !13479
  %64 = load i64, i64* %names_counter, align 8, !dbg !13480
  %add57 = add i64 %64, %63, !dbg !13480
  store i64 %add57, i64* %names_counter, align 8, !dbg !13480
  %65 = load i64, i64* %files_info_counter, align 8, !dbg !13481
  %inc = add i64 %65, 1, !dbg !13481
  store i64 %inc, i64* %files_info_counter, align 8, !dbg !13481
  br label %while.cond, !dbg !13336, !llvm.loop !13355

while.end58:                                      ; preds = %while.cond
  %66 = load %struct.__dirstream*, %struct.__dirstream** %d, align 8, !dbg !13482
  %call59 = call i32 @closedir(%struct.__dirstream* %66), !dbg !13483
  %67 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %files_info, align 8, !dbg !13484
  %68 = load i64, i64* %files_info_counter, align 8, !dbg !13485
  %arrayidx60 = getelementptr %struct.PureFileInfo_, %struct.PureFileInfo_* %67, i64 %68, !dbg !13484
  %name_offset61 = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %arrayidx60, i32 0, i32 1, !dbg !13486
  store i64 -1, i64* %name_offset61, align 8, !dbg !13487
  %69 = load i8*, i8** %names, align 8, !dbg !13488
  %70 = load i8**, i8*** %names_pnt.addr, align 8, !dbg !13489
  store i8* %69, i8** %70, align 8, !dbg !13490
  %71 = load i32, i32* @opt_t, align 4, !dbg !13491
  %tobool = icmp ne i32 %71, 0, !dbg !13491
  br i1 %tobool, label %if.then62, label %if.else67, !dbg !13493

if.then62:                                        ; preds = %while.end58
  %72 = load i32, i32* @opt_r, align 4, !dbg !13494
  %tobool63 = icmp ne i32 %72, 0, !dbg !13494
  br i1 %tobool63, label %if.then64, label %if.else65, !dbg !13497

if.then64:                                        ; preds = %if.then62
  store i32 (i8*, i8*)* @cmp_rt, i32 (i8*, i8*)** %cmp_func, align 8, !dbg !13498
  br label %if.end66, !dbg !13500

if.else65:                                        ; preds = %if.then62
  store i32 (i8*, i8*)* @cmp_t, i32 (i8*, i8*)** %cmp_func, align 8, !dbg !13501
  br label %if.end66

if.end66:                                         ; preds = %if.else65, %if.then64
  br label %if.end80, !dbg !13503

if.else67:                                        ; preds = %while.end58
  %73 = load i32, i32* @opt_S, align 4, !dbg !13504
  %tobool68 = icmp ne i32 %73, 0, !dbg !13504
  br i1 %tobool68, label %if.then69, label %if.else74, !dbg !13506

if.then69:                                        ; preds = %if.else67
  %74 = load i32, i32* @opt_r, align 4, !dbg !13507
  %tobool70 = icmp ne i32 %74, 0, !dbg !13507
  br i1 %tobool70, label %if.then71, label %if.else72, !dbg !13510

if.then71:                                        ; preds = %if.then69
  store i32 (i8*, i8*)* @cmp_rS, i32 (i8*, i8*)** %cmp_func, align 8, !dbg !13511
  br label %if.end73, !dbg !13513

if.else72:                                        ; preds = %if.then69
  store i32 (i8*, i8*)* @cmp_S, i32 (i8*, i8*)** %cmp_func, align 8, !dbg !13514
  br label %if.end73

if.end73:                                         ; preds = %if.else72, %if.then71
  br label %if.end79, !dbg !13516

if.else74:                                        ; preds = %if.else67
  %75 = load i32, i32* @opt_r, align 4, !dbg !13517
  %tobool75 = icmp ne i32 %75, 0, !dbg !13517
  br i1 %tobool75, label %if.then76, label %if.else77, !dbg !13519

if.then76:                                        ; preds = %if.else74
  store i32 (i8*, i8*)* @cmp_r, i32 (i8*, i8*)** %cmp_func, align 8, !dbg !13520
  br label %if.end78, !dbg !13522

if.else77:                                        ; preds = %if.else74
  store i32 (i8*, i8*)* @cmp, i32 (i8*, i8*)** %cmp_func, align 8, !dbg !13523
  br label %if.end78

if.end78:                                         ; preds = %if.else77, %if.then76
  br label %if.end79

if.end79:                                         ; preds = %if.end78, %if.end73
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %if.end66
  %76 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %files_info, align 8, !dbg !13525
  %77 = bitcast %struct.PureFileInfo_* %76 to i8*, !dbg !13525
  %78 = load i64, i64* %files_info_counter, align 8, !dbg !13526
  %79 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp_func, align 8, !dbg !13527
  call void @qsort(i8* %77, i64 %78, i64 56, i32 (i8*, i8*)* %79), !dbg !13528
  %80 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %files_info, align 8, !dbg !13529
  store %struct.PureFileInfo_* %80, %struct.PureFileInfo_** %retval, align 8, !dbg !13530
  br label %return, !dbg !13530

return:                                           ; preds = %if.end80, %nomem, %if.then8, %if.then3, %if.then
  %81 = load %struct.PureFileInfo_*, %struct.PureFileInfo_** %retval, align 8, !dbg !13531
  ret %struct.PureFileInfo_* %81, !dbg !13531
}

declare %struct.__dirstream* @opendir(i8*) #9

declare i32 @closedir(%struct.__dirstream*) #9

declare %struct.dirent* @readdir(%struct.__dirstream*) #9

; Function Attrs: nounwind
declare i8* @realloc(i8*, i64) #2

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @cmp_rt(i8* %a, i8* %b) #0 !dbg !13532 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !13533, metadata !DIExpression()), !dbg !13534
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !13535, metadata !DIExpression()), !dbg !13536
  %0 = load i8*, i8** %b.addr, align 8, !dbg !13537
  %1 = load i8*, i8** %a.addr, align 8, !dbg !13538
  %call = call i32 @cmp_t(i8* %0, i8* %1), !dbg !13539
  ret i32 %call, !dbg !13540
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @cmp_t(i8* %a, i8* %b) #0 !dbg !13541 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !13542, metadata !DIExpression()), !dbg !13543
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !13544, metadata !DIExpression()), !dbg !13545
  %0 = load i8*, i8** %a.addr, align 8, !dbg !13546
  %1 = bitcast i8* %0 to %struct.PureFileInfo_*, !dbg !13548
  %mtime = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %1, i32 0, i32 3, !dbg !13549
  %2 = load i64, i64* %mtime, align 8, !dbg !13549
  %3 = load i8*, i8** %b.addr, align 8, !dbg !13550
  %4 = bitcast i8* %3 to %struct.PureFileInfo_*, !dbg !13551
  %mtime1 = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %4, i32 0, i32 3, !dbg !13552
  %5 = load i64, i64* %mtime1, align 8, !dbg !13552
  %cmp = icmp slt i64 %2, %5, !dbg !13553
  br i1 %cmp, label %if.then, label %if.end, !dbg !13554

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !13555
  br label %return, !dbg !13555

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %a.addr, align 8, !dbg !13557
  %7 = bitcast i8* %6 to %struct.PureFileInfo_*, !dbg !13559
  %mtime2 = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %7, i32 0, i32 3, !dbg !13560
  %8 = load i64, i64* %mtime2, align 8, !dbg !13560
  %9 = load i8*, i8** %b.addr, align 8, !dbg !13561
  %10 = bitcast i8* %9 to %struct.PureFileInfo_*, !dbg !13562
  %mtime3 = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %10, i32 0, i32 3, !dbg !13563
  %11 = load i64, i64* %mtime3, align 8, !dbg !13563
  %cmp4 = icmp sgt i64 %8, %11, !dbg !13564
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !13565

if.then5:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !13566
  br label %return, !dbg !13566

if.end6:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !13568
  br label %return, !dbg !13568

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !13569
  ret i32 %12, !dbg !13569
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @cmp_rS(i8* %a, i8* %b) #0 !dbg !13570 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !13571, metadata !DIExpression()), !dbg !13572
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !13573, metadata !DIExpression()), !dbg !13574
  %0 = load i8*, i8** %b.addr, align 8, !dbg !13575
  %1 = load i8*, i8** %a.addr, align 8, !dbg !13576
  %call = call i32 @cmp_S(i8* %0, i8* %1), !dbg !13577
  ret i32 %call, !dbg !13578
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @cmp_S(i8* %a, i8* %b) #0 !dbg !13579 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !13580, metadata !DIExpression()), !dbg !13581
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !13582, metadata !DIExpression()), !dbg !13583
  %0 = load i8*, i8** %a.addr, align 8, !dbg !13584
  %1 = bitcast i8* %0 to %struct.PureFileInfo_*, !dbg !13586
  %size = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %1, i32 0, i32 2, !dbg !13587
  %2 = load i64, i64* %size, align 8, !dbg !13587
  %3 = load i8*, i8** %b.addr, align 8, !dbg !13588
  %4 = bitcast i8* %3 to %struct.PureFileInfo_*, !dbg !13589
  %size1 = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %4, i32 0, i32 2, !dbg !13590
  %5 = load i64, i64* %size1, align 8, !dbg !13590
  %cmp = icmp slt i64 %2, %5, !dbg !13591
  br i1 %cmp, label %if.then, label %if.end, !dbg !13592

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !13593
  br label %return, !dbg !13593

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %a.addr, align 8, !dbg !13595
  %7 = bitcast i8* %6 to %struct.PureFileInfo_*, !dbg !13597
  %size2 = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %7, i32 0, i32 2, !dbg !13598
  %8 = load i64, i64* %size2, align 8, !dbg !13598
  %9 = load i8*, i8** %b.addr, align 8, !dbg !13599
  %10 = bitcast i8* %9 to %struct.PureFileInfo_*, !dbg !13600
  %size3 = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %10, i32 0, i32 2, !dbg !13601
  %11 = load i64, i64* %size3, align 8, !dbg !13601
  %cmp4 = icmp sgt i64 %8, %11, !dbg !13602
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !13603

if.then5:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !13604
  br label %return, !dbg !13604

if.end6:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !13606
  br label %return, !dbg !13606

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !13607
  ret i32 %12, !dbg !13607
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @cmp_r(i8* %a, i8* %b) #0 !dbg !13608 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !13609, metadata !DIExpression()), !dbg !13610
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !13611, metadata !DIExpression()), !dbg !13612
  %0 = load i8*, i8** %b.addr, align 8, !dbg !13613
  %1 = bitcast i8* %0 to %struct.PureFileInfo_*, !dbg !13613
  %names_pnt = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %1, i32 0, i32 0, !dbg !13613
  %2 = load i8**, i8*** %names_pnt, align 8, !dbg !13613
  %3 = load i8*, i8** %2, align 8, !dbg !13613
  %4 = load i8*, i8** %b.addr, align 8, !dbg !13613
  %5 = bitcast i8* %4 to %struct.PureFileInfo_*, !dbg !13613
  %name_offset = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %5, i32 0, i32 1, !dbg !13613
  %6 = load i64, i64* %name_offset, align 8, !dbg !13613
  %add.ptr = getelementptr i8, i8* %3, i64 %6, !dbg !13613
  %7 = load i8*, i8** %a.addr, align 8, !dbg !13614
  %8 = bitcast i8* %7 to %struct.PureFileInfo_*, !dbg !13614
  %names_pnt1 = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %8, i32 0, i32 0, !dbg !13614
  %9 = load i8**, i8*** %names_pnt1, align 8, !dbg !13614
  %10 = load i8*, i8** %9, align 8, !dbg !13614
  %11 = load i8*, i8** %a.addr, align 8, !dbg !13614
  %12 = bitcast i8* %11 to %struct.PureFileInfo_*, !dbg !13614
  %name_offset2 = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %12, i32 0, i32 1, !dbg !13614
  %13 = load i64, i64* %name_offset2, align 8, !dbg !13614
  %add.ptr3 = getelementptr i8, i8* %10, i64 %13, !dbg !13614
  %call = call i32 @strcmp(i8* %add.ptr, i8* %add.ptr3) #12, !dbg !13615
  ret i32 %call, !dbg !13616
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @cmp(i8* %a, i8* %b) #0 !dbg !13617 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !13618, metadata !DIExpression()), !dbg !13619
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !13620, metadata !DIExpression()), !dbg !13621
  %0 = load i8*, i8** %a.addr, align 8, !dbg !13622
  %1 = bitcast i8* %0 to %struct.PureFileInfo_*, !dbg !13622
  %names_pnt = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %1, i32 0, i32 0, !dbg !13622
  %2 = load i8**, i8*** %names_pnt, align 8, !dbg !13622
  %3 = load i8*, i8** %2, align 8, !dbg !13622
  %4 = load i8*, i8** %a.addr, align 8, !dbg !13622
  %5 = bitcast i8* %4 to %struct.PureFileInfo_*, !dbg !13622
  %name_offset = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %5, i32 0, i32 1, !dbg !13622
  %6 = load i64, i64* %name_offset, align 8, !dbg !13622
  %add.ptr = getelementptr i8, i8* %3, i64 %6, !dbg !13622
  %7 = load i8*, i8** %b.addr, align 8, !dbg !13623
  %8 = bitcast i8* %7 to %struct.PureFileInfo_*, !dbg !13623
  %names_pnt1 = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %8, i32 0, i32 0, !dbg !13623
  %9 = load i8**, i8*** %names_pnt1, align 8, !dbg !13623
  %10 = load i8*, i8** %9, align 8, !dbg !13623
  %11 = load i8*, i8** %b.addr, align 8, !dbg !13623
  %12 = bitcast i8* %11 to %struct.PureFileInfo_*, !dbg !13623
  %name_offset2 = getelementptr inbounds %struct.PureFileInfo_, %struct.PureFileInfo_* %12, i32 0, i32 1, !dbg !13623
  %13 = load i64, i64* %name_offset2, align 8, !dbg !13623
  %add.ptr3 = getelementptr i8, i8* %10, i64 %13, !dbg !13623
  %call = call i32 @strcmp(i8* %add.ptr, i8* %add.ptr3) #12, !dbg !13624
  ret i32 %call, !dbg !13625
}

declare void @qsort(i8*, i64, i64, i32 (i8*, i8*)*) #9

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal void @addfile(i8* %name, i8* %suffix) #0 !dbg !13626 {
entry:
  %name.addr = alloca i8*, align 8
  %suffix.addr = alloca i8*, align 8
  %p = alloca %struct.filename*, align 8
  %l = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !13629, metadata !DIExpression()), !dbg !13630
  store i8* %suffix, i8** %suffix.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %suffix.addr, metadata !13631, metadata !DIExpression()), !dbg !13632
  call void @llvm.dbg.declare(metadata %struct.filename** %p, metadata !13633, metadata !DIExpression()), !dbg !13634
  call void @llvm.dbg.declare(metadata i32* %l, metadata !13635, metadata !DIExpression()), !dbg !13636
  %0 = load i8*, i8** %name.addr, align 8, !dbg !13637
  %tobool = icmp ne i8* %0, null, !dbg !13637
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !13639

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %suffix.addr, align 8, !dbg !13640
  %tobool1 = icmp ne i8* %1, null, !dbg !13640
  br i1 %tobool1, label %if.end, label %if.then, !dbg !13641

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !13642

if.end:                                           ; preds = %lor.lhs.false
  %2 = load i32, i32* @matches, align 4, !dbg !13644
  %3 = load i32, i32* @max_ls_files, align 4, !dbg !13646
  %cmp = icmp uge i32 %2, %3, !dbg !13647
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !13648

if.then2:                                         ; preds = %if.end
  br label %return, !dbg !13649

if.end3:                                          ; preds = %if.end
  %4 = load i32, i32* @matches, align 4, !dbg !13651
  %inc = add i32 %4, 1, !dbg !13651
  store i32 %inc, i32* @matches, align 4, !dbg !13651
  %5 = load i8*, i8** %name.addr, align 8, !dbg !13652
  %call = call i64 @strlen(i8* %5) #12, !dbg !13653
  %6 = load i8*, i8** %suffix.addr, align 8, !dbg !13654
  %call4 = call i64 @strlen(i8* %6) #12, !dbg !13655
  %add = add i64 %call, %call4, !dbg !13656
  %conv = trunc i64 %add to i32, !dbg !13657
  store i32 %conv, i32* %l, align 4, !dbg !13658
  %7 = load i32, i32* %l, align 4, !dbg !13659
  %8 = load i32, i32* @colwidth, align 4, !dbg !13661
  %cmp5 = icmp ugt i32 %7, %8, !dbg !13662
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !13663

if.then7:                                         ; preds = %if.end3
  %9 = load i32, i32* %l, align 4, !dbg !13664
  store i32 %9, i32* @colwidth, align 4, !dbg !13666
  br label %if.end8, !dbg !13667

if.end8:                                          ; preds = %if.then7, %if.end3
  %10 = load i32, i32* %l, align 4, !dbg !13668
  %conv9 = zext i32 %10 to i64, !dbg !13668
  %add10 = add i64 20, %conv9, !dbg !13670
  %add11 = add i64 %add10, 1, !dbg !13671
  %call12 = call noalias i8* @malloc(i64 %add11) #7, !dbg !13672
  %11 = bitcast i8* %call12 to %struct.filename*, !dbg !13672
  store %struct.filename* %11, %struct.filename** %p, align 8, !dbg !13673
  %cmp13 = icmp eq %struct.filename* %11, null, !dbg !13674
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !13675

if.then15:                                        ; preds = %if.end8
  br label %return, !dbg !13676

if.end16:                                         ; preds = %if.end8
  %12 = load %struct.filename*, %struct.filename** %p, align 8, !dbg !13678
  %line = getelementptr inbounds %struct.filename, %struct.filename* %12, i32 0, i32 3, !dbg !13678
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %line, i64 0, i64 0, !dbg !13678
  %13 = load i32, i32* %l, align 4, !dbg !13678
  %add17 = add i32 %13, 1, !dbg !13678
  %conv18 = zext i32 %add17 to i64, !dbg !13678
  %14 = load i8*, i8** %name.addr, align 8, !dbg !13678
  %15 = load i8*, i8** %suffix.addr, align 8, !dbg !13678
  %call19 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 %conv18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.34.505, i64 0, i64 0), i8* %14, i8* %15) #7, !dbg !13678
  %16 = load i32, i32* %l, align 4, !dbg !13678
  %add20 = add i32 %16, 1, !dbg !13678
  %cmp21 = icmp sge i32 %call19, %add20, !dbg !13678
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !13680

if.then23:                                        ; preds = %if.end16
  call void @_EXIT(i32 1) #11, !dbg !13681
  unreachable, !dbg !13681

if.end24:                                         ; preds = %if.end16
  %17 = load %struct.filename*, %struct.filename** @tail, align 8, !dbg !13683
  %cmp25 = icmp ne %struct.filename* %17, null, !dbg !13685
  br i1 %cmp25, label %if.then27, label %if.else, !dbg !13686

if.then27:                                        ; preds = %if.end24
  %18 = load %struct.filename*, %struct.filename** %p, align 8, !dbg !13687
  %19 = load %struct.filename*, %struct.filename** @tail, align 8, !dbg !13689
  %down = getelementptr inbounds %struct.filename, %struct.filename* %19, i32 0, i32 0, !dbg !13690
  store %struct.filename* %18, %struct.filename** %down, align 8, !dbg !13691
  br label %if.end28, !dbg !13692

if.else:                                          ; preds = %if.end24
  %20 = load %struct.filename*, %struct.filename** %p, align 8, !dbg !13693
  store %struct.filename* %20, %struct.filename** @head, align 8, !dbg !13695
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.then27
  %21 = load %struct.filename*, %struct.filename** %p, align 8, !dbg !13696
  store %struct.filename* %21, %struct.filename** @tail, align 8, !dbg !13697
  %22 = load i32, i32* @filenames, align 4, !dbg !13698
  %inc29 = add i32 %22, 1, !dbg !13698
  store i32 %inc29, i32* @filenames, align 4, !dbg !13698
  br label %return, !dbg !13699

return:                                           ; preds = %if.end28, %if.then15, %if.then2, %if.then
  ret void, !dbg !13699
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @donlst(i8* %base) #0 !dbg !13700 {
entry:
  %base.addr = alloca i8*, align 8
  %line = alloca [4099 x i8], align 16
  %dir = alloca %struct.__dirstream*, align 8
  %tls_fd = alloca i8*, align 8
  %de = alloca %struct.dirent*, align 8
  %name_len = alloca i64, align 8
  %matches = alloca i32, align 4
  %c = alloca i32, align 4
  %base_has_trailing_slash = alloca i32, align 4
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !13701, metadata !DIExpression()), !dbg !13702
  call void @llvm.dbg.declare(metadata [4099 x i8]* %line, metadata !13703, metadata !DIExpression()), !dbg !13707
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dir, metadata !13708, metadata !DIExpression()), !dbg !13709
  call void @llvm.dbg.declare(metadata i8** %tls_fd, metadata !13710, metadata !DIExpression()), !dbg !13711
  store i8* null, i8** %tls_fd, align 8, !dbg !13711
  call void @llvm.dbg.declare(metadata %struct.dirent** %de, metadata !13712, metadata !DIExpression()), !dbg !13713
  call void @llvm.dbg.declare(metadata i64* %name_len, metadata !13714, metadata !DIExpression()), !dbg !13715
  call void @llvm.dbg.declare(metadata i32* %matches, metadata !13716, metadata !DIExpression()), !dbg !13717
  store i32 0, i32* %matches, align 4, !dbg !13717
  call void @llvm.dbg.declare(metadata i32* %c, metadata !13718, metadata !DIExpression()), !dbg !13719
  call void @llvm.dbg.declare(metadata i32* %base_has_trailing_slash, metadata !13720, metadata !DIExpression()), !dbg !13721
  store i32 0, i32* %base_has_trailing_slash, align 4, !dbg !13721
  %0 = load i8*, i8** %base.addr, align 8, !dbg !13722
  %1 = load i8, i8* %0, align 1, !dbg !13724
  %conv = sext i8 %1 to i32, !dbg !13724
  %cmp = icmp ne i32 %conv, 0, !dbg !13725
  br i1 %cmp, label %land.lhs.true, label %if.end32, !dbg !13726

land.lhs.true:                                    ; preds = %entry
  %2 = load i8*, i8** %base.addr, align 8, !dbg !13727
  %call = call i32 @chdir(i8* %2) #7, !dbg !13728
  %cmp2 = icmp ne i32 %call, 0, !dbg !13729
  br i1 %cmp2, label %if.then, label %if.end32, !dbg !13730

if.then:                                          ; preds = %land.lhs.true
  %3 = load i8*, i8** %base.addr, align 8, !dbg !13731
  %incdec.ptr = getelementptr i8, i8* %3, i32 1, !dbg !13731
  store i8* %incdec.ptr, i8** %base.addr, align 8, !dbg !13731
  %4 = load i8, i8* %3, align 1, !dbg !13734
  %conv4 = sext i8 %4 to i32, !dbg !13734
  %cmp5 = icmp eq i32 %conv4, 45, !dbg !13735
  br i1 %cmp5, label %if.then7, label %if.else, !dbg !13736

if.then7:                                         ; preds = %if.then
  br label %while.cond, !dbg !13737

while.cond:                                       ; preds = %while.body, %if.then7
  %call8 = call i16** @__ctype_b_loc() #14, !dbg !13739
  %5 = load i16*, i16** %call8, align 8, !dbg !13739
  %6 = load i8*, i8** %base.addr, align 8, !dbg !13739
  %incdec.ptr9 = getelementptr i8, i8* %6, i32 1, !dbg !13739
  store i8* %incdec.ptr9, i8** %base.addr, align 8, !dbg !13739
  %7 = load i8, i8* %6, align 1, !dbg !13739
  %conv10 = zext i8 %7 to i32, !dbg !13739
  %idxprom = sext i32 %conv10 to i64, !dbg !13739
  %arrayidx = getelementptr i16, i16* %5, i64 %idxprom, !dbg !13739
  %8 = load i16, i16* %arrayidx, align 2, !dbg !13739
  %conv11 = zext i16 %8 to i32, !dbg !13739
  %and = and i32 %conv11, 8192, !dbg !13739
  %tobool = icmp ne i32 %and, 0, !dbg !13740
  %lnot = xor i1 %tobool, true, !dbg !13740
  br i1 %lnot, label %while.body, label %while.end, !dbg !13737

while.body:                                       ; preds = %while.cond
  br label %while.cond, !dbg !13737, !llvm.loop !13741

while.end:                                        ; preds = %while.cond
  br label %while.cond12, !dbg !13743

while.cond12:                                     ; preds = %while.body21, %while.end
  %call13 = call i16** @__ctype_b_loc() #14, !dbg !13744
  %9 = load i16*, i16** %call13, align 8, !dbg !13744
  %10 = load i8*, i8** %base.addr, align 8, !dbg !13744
  %incdec.ptr14 = getelementptr i8, i8* %10, i32 1, !dbg !13744
  store i8* %incdec.ptr14, i8** %base.addr, align 8, !dbg !13744
  %11 = load i8, i8* %10, align 1, !dbg !13744
  %conv15 = zext i8 %11 to i32, !dbg !13744
  %idxprom16 = sext i32 %conv15 to i64, !dbg !13744
  %arrayidx17 = getelementptr i16, i16* %9, i64 %idxprom16, !dbg !13744
  %12 = load i16, i16* %arrayidx17, align 2, !dbg !13744
  %conv18 = zext i16 %12 to i32, !dbg !13744
  %and19 = and i32 %conv18, 8192, !dbg !13744
  %tobool20 = icmp ne i32 %and19, 0, !dbg !13743
  br i1 %tobool20, label %while.body21, label %while.end22, !dbg !13743

while.body21:                                     ; preds = %while.cond12
  br label %while.cond12, !dbg !13743, !llvm.loop !13745

while.end22:                                      ; preds = %while.cond12
  %13 = load i8*, i8** %base.addr, align 8, !dbg !13747
  %14 = load i8, i8* %13, align 1, !dbg !13749
  %conv23 = sext i8 %14 to i32, !dbg !13749
  %cmp24 = icmp ne i32 %conv23, 0, !dbg !13750
  br i1 %cmp24, label %land.lhs.true26, label %if.end, !dbg !13751

land.lhs.true26:                                  ; preds = %while.end22
  %15 = load i8*, i8** %base.addr, align 8, !dbg !13752
  %call27 = call i32 @chdir(i8* %15) #7, !dbg !13753
  %cmp28 = icmp ne i32 %call27, 0, !dbg !13754
  br i1 %cmp28, label %if.then30, label %if.end, !dbg !13755

if.then30:                                        ; preds = %land.lhs.true26
  call void @addreply_noformat(i32 550, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24.506, i64 0, i64 0)), !dbg !13756
  br label %if.end102, !dbg !13758

if.end:                                           ; preds = %land.lhs.true26, %while.end22
  br label %if.end31, !dbg !13759

if.else:                                          ; preds = %if.then
  call void @addreply_noformat(i32 550, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24.506, i64 0, i64 0)), !dbg !13760
  br label %if.end102, !dbg !13762

if.end31:                                         ; preds = %if.end
  br label %if.end32, !dbg !13763

if.end32:                                         ; preds = %if.end31, %land.lhs.true, %entry
  %16 = load i8*, i8** %base.addr, align 8, !dbg !13764
  %17 = load i8, i8* %16, align 1, !dbg !13766
  %conv33 = sext i8 %17 to i32, !dbg !13766
  %cmp34 = icmp ne i32 %conv33, 0, !dbg !13767
  br i1 %cmp34, label %land.lhs.true36, label %if.end43, !dbg !13768

land.lhs.true36:                                  ; preds = %if.end32
  %18 = load i8*, i8** %base.addr, align 8, !dbg !13769
  %19 = load i8*, i8** %base.addr, align 8, !dbg !13770
  %call37 = call i64 @strlen(i8* %19) #12, !dbg !13771
  %sub = sub i64 %call37, 1, !dbg !13772
  %arrayidx38 = getelementptr i8, i8* %18, i64 %sub, !dbg !13769
  %20 = load i8, i8* %arrayidx38, align 1, !dbg !13769
  %conv39 = sext i8 %20 to i32, !dbg !13769
  %cmp40 = icmp eq i32 %conv39, 47, !dbg !13773
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !13774

if.then42:                                        ; preds = %land.lhs.true36
  store i32 1, i32* %base_has_trailing_slash, align 4, !dbg !13775
  br label %if.end43, !dbg !13777

if.end43:                                         ; preds = %if.then42, %land.lhs.true36, %if.end32
  %call44 = call %struct.__dirstream* @opendir(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.480, i64 0, i64 0)), !dbg !13778
  store %struct.__dirstream* %call44, %struct.__dirstream** %dir, align 8, !dbg !13780
  %cmp45 = icmp eq %struct.__dirstream* %call44, null, !dbg !13781
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !13782

if.then47:                                        ; preds = %if.end43
  call void @addreply_noformat(i32 550, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24.506, i64 0, i64 0)), !dbg !13783
  br label %bye, !dbg !13785

if.end48:                                         ; preds = %if.end43
  call void @opendata(), !dbg !13786
  %21 = load volatile i32, i32* @xferfd, align 4, !dbg !13787
  store i32 %21, i32* %c, align 4, !dbg !13789
  %cmp49 = icmp eq i32 %21, -1, !dbg !13790
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !13791

if.then51:                                        ; preds = %if.end48
  br label %bye, !dbg !13792

if.end52:                                         ; preds = %if.end48
  call void @doreply(), !dbg !13794
  br label %while.cond53, !dbg !13795

while.cond53:                                     ; preds = %if.end88, %if.then68, %if.then61, %if.end52
  %22 = load %struct.__dirstream*, %struct.__dirstream** %dir, align 8, !dbg !13796
  %call54 = call %struct.dirent* @readdir(%struct.__dirstream* %22), !dbg !13797
  store %struct.dirent* %call54, %struct.dirent** %de, align 8, !dbg !13798
  %cmp55 = icmp ne %struct.dirent* %call54, null, !dbg !13799
  br i1 %cmp55, label %while.body57, label %while.end89, !dbg !13795

while.body57:                                     ; preds = %while.cond53
  %23 = load %struct.dirent*, %struct.dirent** %de, align 8, !dbg !13800
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %23, i32 0, i32 4, !dbg !13803
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !13800
  %call58 = call i32 @checkprintable(i8* %arraydecay), !dbg !13804
  %cmp59 = icmp ne i32 %call58, 0, !dbg !13805
  br i1 %cmp59, label %if.then61, label %if.end62, !dbg !13806

if.then61:                                        ; preds = %while.body57
  br label %while.cond53, !dbg !13807, !llvm.loop !13809

if.end62:                                         ; preds = %while.body57
  %24 = load %struct.dirent*, %struct.dirent** %de, align 8, !dbg !13811
  %d_name63 = getelementptr inbounds %struct.dirent, %struct.dirent* %24, i32 0, i32 4, !dbg !13812
  %arraydecay64 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name63, i64 0, i64 0, !dbg !13811
  %call65 = call i64 @strlen(i8* %arraydecay64) #12, !dbg !13813
  store i64 %call65, i64* %name_len, align 8, !dbg !13814
  %25 = load i64, i64* %name_len, align 8, !dbg !13815
  %cmp66 = icmp ugt i64 %25, 4096, !dbg !13817
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !13818

if.then68:                                        ; preds = %if.end62
  br label %while.cond53, !dbg !13819, !llvm.loop !13809

if.end69:                                         ; preds = %if.end62
  %arraydecay70 = getelementptr inbounds [4099 x i8], [4099 x i8]* %line, i64 0, i64 0, !dbg !13821
  %26 = load %struct.dirent*, %struct.dirent** %de, align 8, !dbg !13822
  %d_name71 = getelementptr inbounds %struct.dirent, %struct.dirent* %26, i32 0, i32 4, !dbg !13823
  %arraydecay72 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name71, i64 0, i64 0, !dbg !13821
  %27 = load i64, i64* %name_len, align 8, !dbg !13824
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %arraydecay70, i8* align 1 %arraydecay72, i64 %27, i1 false), !dbg !13821
  %28 = load i64, i64* %name_len, align 8, !dbg !13825
  %arrayidx73 = getelementptr [4099 x i8], [4099 x i8]* %line, i64 0, i64 %28, !dbg !13826
  store i8 13, i8* %arrayidx73, align 1, !dbg !13827
  %29 = load i64, i64* %name_len, align 8, !dbg !13828
  %add = add i64 %29, 1, !dbg !13829
  %arrayidx74 = getelementptr [4099 x i8], [4099 x i8]* %line, i64 0, i64 %add, !dbg !13830
  store i8 10, i8* %arrayidx74, align 1, !dbg !13831
  %30 = load i64, i64* %name_len, align 8, !dbg !13832
  %add75 = add i64 %30, 2, !dbg !13833
  %arrayidx76 = getelementptr [4099 x i8], [4099 x i8]* %line, i64 0, i64 %add75, !dbg !13834
  store i8 0, i8* %arrayidx76, align 1, !dbg !13835
  %31 = load i8*, i8** %base.addr, align 8, !dbg !13836
  %32 = load i8, i8* %31, align 1, !dbg !13838
  %tobool77 = icmp ne i8 %32, 0, !dbg !13838
  br i1 %tobool77, label %if.then78, label %if.end83, !dbg !13839

if.then78:                                        ; preds = %if.end69
  %33 = load i32, i32* %c, align 4, !dbg !13840
  %34 = load i8*, i8** %tls_fd, align 8, !dbg !13842
  %35 = load i8*, i8** %base.addr, align 8, !dbg !13843
  call void @wrstr(i32 %33, i8* %34, i8* %35), !dbg !13844
  %36 = load i32, i32* %base_has_trailing_slash, align 4, !dbg !13845
  %cmp79 = icmp eq i32 %36, 0, !dbg !13847
  br i1 %cmp79, label %if.then81, label %if.end82, !dbg !13848

if.then81:                                        ; preds = %if.then78
  %37 = load i32, i32* %c, align 4, !dbg !13849
  %38 = load i8*, i8** %tls_fd, align 8, !dbg !13851
  call void @wrstr(i32 %37, i8* %38, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25.507, i64 0, i64 0)), !dbg !13852
  br label %if.end82, !dbg !13853

if.end82:                                         ; preds = %if.then81, %if.then78
  br label %if.end83, !dbg !13854

if.end83:                                         ; preds = %if.end82, %if.end69
  %39 = load i32, i32* %c, align 4, !dbg !13855
  %40 = load i8*, i8** %tls_fd, align 8, !dbg !13856
  %arraydecay84 = getelementptr inbounds [4099 x i8], [4099 x i8]* %line, i64 0, i64 0, !dbg !13857
  call void @wrstr(i32 %39, i8* %40, i8* %arraydecay84), !dbg !13858
  %41 = load i32, i32* %matches, align 4, !dbg !13859
  %inc = add i32 %41, 1, !dbg !13859
  store i32 %inc, i32* %matches, align 4, !dbg !13859
  %42 = load i32, i32* %matches, align 4, !dbg !13860
  %43 = load i32, i32* @max_ls_files, align 4, !dbg !13862
  %cmp85 = icmp uge i32 %42, %43, !dbg !13863
  br i1 %cmp85, label %if.then87, label %if.end88, !dbg !13864

if.then87:                                        ; preds = %if.end83
  br label %while.end89, !dbg !13865

if.end88:                                         ; preds = %if.end83
  br label %while.cond53, !dbg !13795, !llvm.loop !13809

while.end89:                                      ; preds = %if.then87, %while.cond53
  %44 = load %struct.__dirstream*, %struct.__dirstream** %dir, align 8, !dbg !13867
  %call90 = call i32 @closedir(%struct.__dirstream* %44), !dbg !13868
  %45 = load i32, i32* %c, align 4, !dbg !13869
  %46 = load i8*, i8** %tls_fd, align 8, !dbg !13870
  call void @wrstr(i32 %45, i8* %46, i8* null), !dbg !13871
  call void @closedata(), !dbg !13872
  %47 = load i32, i32* %matches, align 4, !dbg !13873
  %48 = load i32, i32* @max_ls_files, align 4, !dbg !13875
  %cmp91 = icmp uge i32 %47, %48, !dbg !13876
  br i1 %cmp91, label %if.then93, label %if.else94, !dbg !13877

if.then93:                                        ; preds = %while.end89
  %49 = load i32, i32* %matches, align 4, !dbg !13878
  call void (i32, i8*, ...) @addreply(i32 226, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.22.493, i64 0, i64 0), i32 %49), !dbg !13880
  br label %if.end95, !dbg !13881

if.else94:                                        ; preds = %while.end89
  %50 = load i32, i32* %matches, align 4, !dbg !13882
  call void (i32, i8*, ...) @addreply(i32 226, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23.494, i64 0, i64 0), i32 %50), !dbg !13884
  br label %if.end95

if.end95:                                         ; preds = %if.else94, %if.then93
  br label %bye, !dbg !13875

bye:                                              ; preds = %if.end95, %if.then51, %if.then47
  call void @llvm.dbg.label(metadata !13885), !dbg !13886
  %call96 = call i32 @chdir(i8* getelementptr inbounds ([4097 x i8], [4097 x i8]* @wd, i64 0, i64 0)) #7, !dbg !13887
  %cmp97 = icmp ne i32 %call96, 0, !dbg !13889
  br i1 %cmp97, label %if.then99, label %if.end102, !dbg !13890

if.then99:                                        ; preds = %bye
  %call100 = call i32* @__errno_location() #14, !dbg !13891
  %51 = load i32, i32* %call100, align 4, !dbg !13891
  %call101 = call i8* @strerror(i32 %51) #7, !dbg !13893
  call void (i32, i32, i8*, ...) @die(i32 421, i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5.476, i64 0, i64 0), i8* %call101) #11, !dbg !13894
  unreachable, !dbg !13894

if.end102:                                        ; preds = %if.then30, %if.else, %bye
  ret void, !dbg !13895
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @domlsd(i8* %base) #0 !dbg !13896 {
entry:
  %base.addr = alloca i8*, align 8
  %line = alloca [4097 x i8], align 16
  %dir = alloca %struct.__dirstream*, align 8
  %tls_fd = alloca i8*, align 8
  %de = alloca %struct.dirent*, align 8
  %matches = alloca i32, align 4
  %c = alloca i32, align 4
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !13897, metadata !DIExpression()), !dbg !13898
  call void @llvm.dbg.declare(metadata [4097 x i8]* %line, metadata !13899, metadata !DIExpression()), !dbg !13900
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dir, metadata !13901, metadata !DIExpression()), !dbg !13902
  store %struct.__dirstream* null, %struct.__dirstream** %dir, align 8, !dbg !13902
  call void @llvm.dbg.declare(metadata i8** %tls_fd, metadata !13903, metadata !DIExpression()), !dbg !13904
  store i8* null, i8** %tls_fd, align 8, !dbg !13904
  call void @llvm.dbg.declare(metadata %struct.dirent** %de, metadata !13905, metadata !DIExpression()), !dbg !13906
  call void @llvm.dbg.declare(metadata i32* %matches, metadata !13907, metadata !DIExpression()), !dbg !13908
  store i32 0, i32* %matches, align 4, !dbg !13908
  call void @llvm.dbg.declare(metadata i32* %c, metadata !13909, metadata !DIExpression()), !dbg !13910
  %0 = load i8*, i8** %base.addr, align 8, !dbg !13911
  %1 = load i8, i8* %0, align 1, !dbg !13913
  %conv = sext i8 %1 to i32, !dbg !13913
  %cmp = icmp ne i32 %conv, 0, !dbg !13914
  br i1 %cmp, label %land.lhs.true, label %if.end32, !dbg !13915

land.lhs.true:                                    ; preds = %entry
  %2 = load i8*, i8** %base.addr, align 8, !dbg !13916
  %call = call i32 @chdir(i8* %2) #7, !dbg !13917
  %cmp2 = icmp ne i32 %call, 0, !dbg !13918
  br i1 %cmp2, label %if.then, label %if.end32, !dbg !13919

if.then:                                          ; preds = %land.lhs.true
  %3 = load i8*, i8** %base.addr, align 8, !dbg !13920
  %incdec.ptr = getelementptr i8, i8* %3, i32 1, !dbg !13920
  store i8* %incdec.ptr, i8** %base.addr, align 8, !dbg !13920
  %4 = load i8, i8* %3, align 1, !dbg !13923
  %conv4 = sext i8 %4 to i32, !dbg !13923
  %cmp5 = icmp eq i32 %conv4, 45, !dbg !13924
  br i1 %cmp5, label %if.then7, label %if.else, !dbg !13925

if.then7:                                         ; preds = %if.then
  br label %while.cond, !dbg !13926

while.cond:                                       ; preds = %while.body, %if.then7
  %call8 = call i16** @__ctype_b_loc() #14, !dbg !13928
  %5 = load i16*, i16** %call8, align 8, !dbg !13928
  %6 = load i8*, i8** %base.addr, align 8, !dbg !13928
  %incdec.ptr9 = getelementptr i8, i8* %6, i32 1, !dbg !13928
  store i8* %incdec.ptr9, i8** %base.addr, align 8, !dbg !13928
  %7 = load i8, i8* %6, align 1, !dbg !13928
  %conv10 = zext i8 %7 to i32, !dbg !13928
  %idxprom = sext i32 %conv10 to i64, !dbg !13928
  %arrayidx = getelementptr i16, i16* %5, i64 %idxprom, !dbg !13928
  %8 = load i16, i16* %arrayidx, align 2, !dbg !13928
  %conv11 = zext i16 %8 to i32, !dbg !13928
  %and = and i32 %conv11, 8192, !dbg !13928
  %tobool = icmp ne i32 %and, 0, !dbg !13929
  %lnot = xor i1 %tobool, true, !dbg !13929
  br i1 %lnot, label %while.body, label %while.end, !dbg !13926

while.body:                                       ; preds = %while.cond
  br label %while.cond, !dbg !13926, !llvm.loop !13930

while.end:                                        ; preds = %while.cond
  br label %while.cond12, !dbg !13932

while.cond12:                                     ; preds = %while.body21, %while.end
  %call13 = call i16** @__ctype_b_loc() #14, !dbg !13933
  %9 = load i16*, i16** %call13, align 8, !dbg !13933
  %10 = load i8*, i8** %base.addr, align 8, !dbg !13933
  %incdec.ptr14 = getelementptr i8, i8* %10, i32 1, !dbg !13933
  store i8* %incdec.ptr14, i8** %base.addr, align 8, !dbg !13933
  %11 = load i8, i8* %10, align 1, !dbg !13933
  %conv15 = zext i8 %11 to i32, !dbg !13933
  %idxprom16 = sext i32 %conv15 to i64, !dbg !13933
  %arrayidx17 = getelementptr i16, i16* %9, i64 %idxprom16, !dbg !13933
  %12 = load i16, i16* %arrayidx17, align 2, !dbg !13933
  %conv18 = zext i16 %12 to i32, !dbg !13933
  %and19 = and i32 %conv18, 8192, !dbg !13933
  %tobool20 = icmp ne i32 %and19, 0, !dbg !13932
  br i1 %tobool20, label %while.body21, label %while.end22, !dbg !13932

while.body21:                                     ; preds = %while.cond12
  br label %while.cond12, !dbg !13932, !llvm.loop !13934

while.end22:                                      ; preds = %while.cond12
  %13 = load i8*, i8** %base.addr, align 8, !dbg !13936
  %14 = load i8, i8* %13, align 1, !dbg !13938
  %conv23 = sext i8 %14 to i32, !dbg !13938
  %cmp24 = icmp ne i32 %conv23, 0, !dbg !13939
  br i1 %cmp24, label %land.lhs.true26, label %if.end, !dbg !13940

land.lhs.true26:                                  ; preds = %while.end22
  %15 = load i8*, i8** %base.addr, align 8, !dbg !13941
  %call27 = call i32 @chdir(i8* %15) #7, !dbg !13942
  %cmp28 = icmp ne i32 %call27, 0, !dbg !13943
  br i1 %cmp28, label %if.then30, label %if.end, !dbg !13944

if.then30:                                        ; preds = %land.lhs.true26
  call void @addreply_noformat(i32 550, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24.506, i64 0, i64 0)), !dbg !13945
  br label %if.end80, !dbg !13947

if.end:                                           ; preds = %land.lhs.true26, %while.end22
  br label %if.end31, !dbg !13948

if.else:                                          ; preds = %if.then
  call void @addreply_noformat(i32 550, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24.506, i64 0, i64 0)), !dbg !13949
  br label %if.end80, !dbg !13951

if.end31:                                         ; preds = %if.end
  br label %if.end32, !dbg !13952

if.end32:                                         ; preds = %if.end31, %land.lhs.true, %entry
  %call33 = call %struct.__dirstream* @opendir(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.480, i64 0, i64 0)), !dbg !13953
  store %struct.__dirstream* %call33, %struct.__dirstream** %dir, align 8, !dbg !13955
  %cmp34 = icmp eq %struct.__dirstream* %call33, null, !dbg !13956
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !13957

if.then36:                                        ; preds = %if.end32
  call void @addreply_noformat(i32 550, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24.506, i64 0, i64 0)), !dbg !13958
  br label %bye, !dbg !13960

if.end37:                                         ; preds = %if.end32
  call void @opendata(), !dbg !13961
  %16 = load volatile i32, i32* @xferfd, align 4, !dbg !13962
  store i32 %16, i32* %c, align 4, !dbg !13964
  %cmp38 = icmp eq i32 %16, -1, !dbg !13965
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !13966

if.then40:                                        ; preds = %if.end37
  br label %bye, !dbg !13967

if.end41:                                         ; preds = %if.end37
  call void @doreply(), !dbg !13969
  br label %while.cond42, !dbg !13970

while.cond42:                                     ; preds = %if.end62, %if.then56, %if.end41
  %17 = load %struct.__dirstream*, %struct.__dirstream** %dir, align 8, !dbg !13971
  %call43 = call %struct.dirent* @readdir(%struct.__dirstream* %17), !dbg !13972
  store %struct.dirent* %call43, %struct.dirent** %de, align 8, !dbg !13973
  %cmp44 = icmp ne %struct.dirent* %call43, null, !dbg !13974
  br i1 %cmp44, label %while.body46, label %while.end63, !dbg !13970

while.body46:                                     ; preds = %while.cond42
  %18 = load %struct.dirent*, %struct.dirent** %de, align 8, !dbg !13975
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %18, i32 0, i32 4, !dbg !13978
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !13975
  %call47 = call i32 @checkprintable(i8* %arraydecay), !dbg !13979
  %cmp48 = icmp ne i32 %call47, 0, !dbg !13980
  br i1 %cmp48, label %if.then56, label %lor.lhs.false, !dbg !13981

lor.lhs.false:                                    ; preds = %while.body46
  %19 = load %struct.dirent*, %struct.dirent** %de, align 8, !dbg !13982
  %d_name50 = getelementptr inbounds %struct.dirent, %struct.dirent* %19, i32 0, i32 4, !dbg !13983
  %arraydecay51 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name50, i64 0, i64 0, !dbg !13982
  %arraydecay52 = getelementptr inbounds [4097 x i8], [4097 x i8]* %line, i64 0, i64 0, !dbg !13984
  %call53 = call i32 @modernformat(i8* %arraydecay51, i8* %arraydecay52, i64 4097, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13.483, i64 0, i64 0)), !dbg !13985
  %cmp54 = icmp slt i32 %call53, 0, !dbg !13986
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !13987

if.then56:                                        ; preds = %lor.lhs.false, %while.body46
  br label %while.cond42, !dbg !13988, !llvm.loop !13990

if.end57:                                         ; preds = %lor.lhs.false
  %20 = load i32, i32* %c, align 4, !dbg !13992
  %21 = load i8*, i8** %tls_fd, align 8, !dbg !13993
  %arraydecay58 = getelementptr inbounds [4097 x i8], [4097 x i8]* %line, i64 0, i64 0, !dbg !13994
  call void @wrstr(i32 %20, i8* %21, i8* %arraydecay58), !dbg !13995
  %22 = load i32, i32* %c, align 4, !dbg !13996
  %23 = load i8*, i8** %tls_fd, align 8, !dbg !13997
  call void @wrstr(i32 %22, i8* %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.508, i64 0, i64 0)), !dbg !13998
  %24 = load i32, i32* %matches, align 4, !dbg !13999
  %inc = add i32 %24, 1, !dbg !13999
  store i32 %inc, i32* %matches, align 4, !dbg !13999
  %25 = load i32, i32* %matches, align 4, !dbg !14000
  %26 = load i32, i32* @max_ls_files, align 4, !dbg !14002
  %cmp59 = icmp uge i32 %25, %26, !dbg !14003
  br i1 %cmp59, label %if.then61, label %if.end62, !dbg !14004

if.then61:                                        ; preds = %if.end57
  br label %while.end63, !dbg !14005

if.end62:                                         ; preds = %if.end57
  br label %while.cond42, !dbg !13970, !llvm.loop !13990

while.end63:                                      ; preds = %if.then61, %while.cond42
  %27 = load i32, i32* %c, align 4, !dbg !14007
  %28 = load i8*, i8** %tls_fd, align 8, !dbg !14008
  call void @wrstr(i32 %27, i8* %28, i8* null), !dbg !14009
  call void @closedata(), !dbg !14010
  %29 = load i32, i32* %matches, align 4, !dbg !14011
  %30 = load i32, i32* @max_ls_files, align 4, !dbg !14013
  %cmp64 = icmp uge i32 %29, %30, !dbg !14014
  br i1 %cmp64, label %if.then66, label %if.else67, !dbg !14015

if.then66:                                        ; preds = %while.end63
  %31 = load i32, i32* %matches, align 4, !dbg !14016
  call void (i32, i8*, ...) @addreply(i32 226, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.22.493, i64 0, i64 0), i32 %31), !dbg !14018
  br label %if.end68, !dbg !14019

if.else67:                                        ; preds = %while.end63
  %32 = load i32, i32* %matches, align 4, !dbg !14020
  call void (i32, i8*, ...) @addreply(i32 226, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23.494, i64 0, i64 0), i32 %32), !dbg !14022
  br label %if.end68

if.end68:                                         ; preds = %if.else67, %if.then66
  br label %bye, !dbg !14013

bye:                                              ; preds = %if.end68, %if.then40, %if.then36
  call void @llvm.dbg.label(metadata !14023), !dbg !14024
  %33 = load %struct.__dirstream*, %struct.__dirstream** %dir, align 8, !dbg !14025
  %cmp69 = icmp ne %struct.__dirstream* %33, null, !dbg !14027
  br i1 %cmp69, label %if.then71, label %if.end73, !dbg !14028

if.then71:                                        ; preds = %bye
  %34 = load %struct.__dirstream*, %struct.__dirstream** %dir, align 8, !dbg !14029
  %call72 = call i32 @closedir(%struct.__dirstream* %34), !dbg !14031
  br label %if.end73, !dbg !14032

if.end73:                                         ; preds = %if.then71, %bye
  %call74 = call i32 @chdir(i8* getelementptr inbounds ([4097 x i8], [4097 x i8]* @wd, i64 0, i64 0)) #7, !dbg !14033
  %cmp75 = icmp ne i32 %call74, 0, !dbg !14035
  br i1 %cmp75, label %if.then77, label %if.end80, !dbg !14036

if.then77:                                        ; preds = %if.end73
  %call78 = call i32* @__errno_location() #14, !dbg !14037
  %35 = load i32, i32* %call78, align 4, !dbg !14037
  %call79 = call i8* @strerror(i32 %35) #7, !dbg !14039
  call void (i32, i32, i8*, ...) @die(i32 421, i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5.476, i64 0, i64 0), i8* %call79) #11, !dbg !14040
  unreachable, !dbg !14040

if.end80:                                         ; preds = %if.then30, %if.else, %if.end73
  ret void, !dbg !14041
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local i64 @safe_write(i32 %fd, i8* %buf_, i64 %count, i32 %timeout) #0 !dbg !14042 {
entry:
  %fd.addr = alloca i32, align 4
  %buf_.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %timeout.addr = alloca i32, align 4
  %pfd = alloca %struct.pollfd, align 4
  %buf = alloca i8*, align 8
  %written = alloca i64, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !14045, metadata !DIExpression()), !dbg !14046
  store i8* %buf_, i8** %buf_.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf_.addr, metadata !14047, metadata !DIExpression()), !dbg !14048
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !14049, metadata !DIExpression()), !dbg !14050
  store i32 %timeout, i32* %timeout.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timeout.addr, metadata !14051, metadata !DIExpression()), !dbg !14052
  call void @llvm.dbg.declare(metadata %struct.pollfd* %pfd, metadata !14053, metadata !DIExpression()), !dbg !14059
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !14060, metadata !DIExpression()), !dbg !14061
  %0 = load i8*, i8** %buf_.addr, align 8, !dbg !14062
  store i8* %0, i8** %buf, align 8, !dbg !14061
  call void @llvm.dbg.declare(metadata i64* %written, metadata !14063, metadata !DIExpression()), !dbg !14064
  %1 = load i32, i32* %fd.addr, align 4, !dbg !14065
  %fd1 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %pfd, i32 0, i32 0, !dbg !14066
  store i32 %1, i32* %fd1, align 4, !dbg !14067
  %events = getelementptr inbounds %struct.pollfd, %struct.pollfd* %pfd, i32 0, i32 1, !dbg !14068
  store i16 4, i16* %events, align 4, !dbg !14069
  br label %while.cond, !dbg !14070

while.cond:                                       ; preds = %while.end, %entry
  %2 = load i64, i64* %count.addr, align 8, !dbg !14071
  %cmp = icmp ugt i64 %2, 0, !dbg !14072
  br i1 %cmp, label %while.body, label %while.end16, !dbg !14070

while.body:                                       ; preds = %while.cond
  br label %while.cond2, !dbg !14073

while.cond2:                                      ; preds = %if.end15, %while.body
  %3 = load i8*, i8** %buf, align 8, !dbg !14075
  %4 = load i64, i64* %count.addr, align 8, !dbg !14076
  %call = call i64 @write(i32 2, i8* %3, i64 %4), !dbg !14077
  store i64 %call, i64* %written, align 8, !dbg !14078
  %cmp3 = icmp sle i64 %call, 0, !dbg !14079
  br i1 %cmp3, label %while.body4, label %while.end, !dbg !14073

while.body4:                                      ; preds = %while.cond2
  %call5 = call i32* @__errno_location() #14, !dbg !14080
  %5 = load i32, i32* %call5, align 4, !dbg !14080
  %cmp6 = icmp eq i32 %5, 11, !dbg !14083
  br i1 %cmp6, label %if.then, label %if.else, !dbg !14084

if.then:                                          ; preds = %while.body4
  %6 = load i32, i32* %timeout.addr, align 4, !dbg !14085
  %call7 = call i32 @poll(%struct.pollfd* %pfd, i64 1, i32 %6), !dbg !14088
  %cmp8 = icmp eq i32 %call7, 0, !dbg !14089
  br i1 %cmp8, label %if.then9, label %if.end, !dbg !14090

if.then9:                                         ; preds = %if.then
  %call10 = call i32* @__errno_location() #14, !dbg !14091
  store i32 110, i32* %call10, align 4, !dbg !14093
  br label %ret, !dbg !14094

if.end:                                           ; preds = %if.then
  br label %if.end15, !dbg !14095

if.else:                                          ; preds = %while.body4
  %call11 = call i32* @__errno_location() #14, !dbg !14096
  %7 = load i32, i32* %call11, align 4, !dbg !14096
  %cmp12 = icmp ne i32 %7, 4, !dbg !14098
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !14099

if.then13:                                        ; preds = %if.else
  br label %ret, !dbg !14100

if.end14:                                         ; preds = %if.else
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.end
  br label %while.cond2, !dbg !14073, !llvm.loop !14102

while.end:                                        ; preds = %while.cond2
  %8 = load i64, i64* %written, align 8, !dbg !14104
  %9 = load i8*, i8** %buf, align 8, !dbg !14105
  %add.ptr = getelementptr i8, i8* %9, i64 %8, !dbg !14105
  store i8* %add.ptr, i8** %buf, align 8, !dbg !14105
  %10 = load i64, i64* %written, align 8, !dbg !14106
  %11 = load i64, i64* %count.addr, align 8, !dbg !14107
  %sub = sub i64 %11, %10, !dbg !14107
  store i64 %sub, i64* %count.addr, align 8, !dbg !14107
  br label %while.cond, !dbg !14070, !llvm.loop !14108

while.end16:                                      ; preds = %while.cond
  br label %ret, !dbg !14070

ret:                                              ; preds = %while.end16, %if.then13, %if.then9
  call void @llvm.dbg.label(metadata !14110), !dbg !14111
  %12 = load i8*, i8** %buf, align 8, !dbg !14112
  %13 = load i8*, i8** %buf_.addr, align 8, !dbg !14113
  %sub.ptr.lhs.cast = ptrtoint i8* %12 to i64, !dbg !14114
  %sub.ptr.rhs.cast = ptrtoint i8* %13 to i64, !dbg !14114
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !14114
  ret i64 %sub.ptr.sub, !dbg !14115
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local i64 @safe_read(i32 %fd, i8* %buf_, i64 %count) #0 !dbg !14116 {
entry:
  %retval = alloca i64, align 8
  %fd.addr = alloca i32, align 4
  %buf_.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %buf = alloca i8*, align 8
  %readnb = alloca i64, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !14119, metadata !DIExpression()), !dbg !14120
  store i8* %buf_, i8** %buf_.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf_.addr, metadata !14121, metadata !DIExpression()), !dbg !14122
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !14123, metadata !DIExpression()), !dbg !14124
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !14125, metadata !DIExpression()), !dbg !14126
  %0 = load i8*, i8** %buf_.addr, align 8, !dbg !14127
  store i8* %0, i8** %buf, align 8, !dbg !14126
  call void @llvm.dbg.declare(metadata i64* %readnb, metadata !14128, metadata !DIExpression()), !dbg !14129
  br label %while.cond, !dbg !14130

while.cond:                                       ; preds = %if.end9, %entry
  %1 = load i64, i64* %count.addr, align 8, !dbg !14131
  %cmp = icmp ugt i64 %1, 0, !dbg !14132
  br i1 %cmp, label %while.body, label %while.end10, !dbg !14130

while.body:                                       ; preds = %while.cond
  br label %while.cond1, !dbg !14133

while.cond1:                                      ; preds = %while.body5, %while.body
  %2 = load i32, i32* %fd.addr, align 4, !dbg !14135
  %3 = load i8*, i8** %buf, align 8, !dbg !14136
  %4 = load i64, i64* %count.addr, align 8, !dbg !14137
  %call = call i64 @read(i32 %2, i8* %3, i64 %4), !dbg !14138
  store i64 %call, i64* %readnb, align 8, !dbg !14139
  %cmp2 = icmp slt i64 %call, 0, !dbg !14140
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !14141

land.rhs:                                         ; preds = %while.cond1
  %call3 = call i32* @__errno_location() #14, !dbg !14142
  %5 = load i32, i32* %call3, align 4, !dbg !14142
  %cmp4 = icmp eq i32 %5, 4, !dbg !14143
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond1
  %6 = phi i1 [ false, %while.cond1 ], [ %cmp4, %land.rhs ], !dbg !14144
  br i1 %6, label %while.body5, label %while.end, !dbg !14133

while.body5:                                      ; preds = %land.end
  br label %while.cond1, !dbg !14133, !llvm.loop !14145

while.end:                                        ; preds = %land.end
  %7 = load i64, i64* %readnb, align 8, !dbg !14147
  %cmp6 = icmp slt i64 %7, 0, !dbg !14149
  br i1 %cmp6, label %if.then, label %if.end, !dbg !14150

if.then:                                          ; preds = %while.end
  %8 = load i64, i64* %readnb, align 8, !dbg !14151
  store i64 %8, i64* %retval, align 8, !dbg !14153
  br label %return, !dbg !14153

if.end:                                           ; preds = %while.end
  %9 = load i64, i64* %readnb, align 8, !dbg !14154
  %cmp7 = icmp eq i64 %9, 0, !dbg !14156
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !14157

if.then8:                                         ; preds = %if.end
  br label %while.end10, !dbg !14158

if.end9:                                          ; preds = %if.end
  %10 = load i64, i64* %readnb, align 8, !dbg !14160
  %11 = load i64, i64* %count.addr, align 8, !dbg !14161
  %sub = sub i64 %11, %10, !dbg !14161
  store i64 %sub, i64* %count.addr, align 8, !dbg !14161
  %12 = load i64, i64* %readnb, align 8, !dbg !14162
  %13 = load i8*, i8** %buf, align 8, !dbg !14163
  %add.ptr = getelementptr i8, i8* %13, i64 %12, !dbg !14163
  store i8* %add.ptr, i8** %buf, align 8, !dbg !14163
  br label %while.cond, !dbg !14130, !llvm.loop !14164

while.end10:                                      ; preds = %if.then8, %while.cond
  %14 = load i8*, i8** %buf, align 8, !dbg !14166
  %15 = load i8*, i8** %buf_.addr, align 8, !dbg !14167
  %sub.ptr.lhs.cast = ptrtoint i8* %14 to i64, !dbg !14168
  %sub.ptr.rhs.cast = ptrtoint i8* %15 to i64, !dbg !14168
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !14168
  store i64 %sub.ptr.sub, i64* %retval, align 8, !dbg !14169
  br label %return, !dbg !14169

return:                                           ; preds = %while.end10, %if.then
  %16 = load i64, i64* %retval, align 8, !dbg !14170
  ret i64 %16, !dbg !14170
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local i64 @safe_read_partial(i32 %fd, i8* %buf_, i64 %max_count) #0 !dbg !14171 {
entry:
  %fd.addr = alloca i32, align 4
  %buf_.addr = alloca i8*, align 8
  %max_count.addr = alloca i64, align 8
  %buf = alloca i8*, align 8
  %readnb = alloca i64, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !14174, metadata !DIExpression()), !dbg !14175
  store i8* %buf_, i8** %buf_.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf_.addr, metadata !14176, metadata !DIExpression()), !dbg !14177
  store i64 %max_count, i64* %max_count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %max_count.addr, metadata !14178, metadata !DIExpression()), !dbg !14179
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !14180, metadata !DIExpression()), !dbg !14182
  %0 = load i8*, i8** %buf_.addr, align 8, !dbg !14183
  store i8* %0, i8** %buf, align 8, !dbg !14182
  call void @llvm.dbg.declare(metadata i64* %readnb, metadata !14184, metadata !DIExpression()), !dbg !14185
  br label %while.cond, !dbg !14186

while.cond:                                       ; preds = %while.body, %entry
  %1 = load i32, i32* %fd.addr, align 4, !dbg !14187
  %2 = load i8*, i8** %buf, align 8, !dbg !14188
  %3 = load i64, i64* %max_count.addr, align 8, !dbg !14189
  %call = call i64 @read(i32 %1, i8* %2, i64 %3), !dbg !14190
  store i64 %call, i64* %readnb, align 8, !dbg !14191
  %cmp = icmp slt i64 %call, 0, !dbg !14192
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !14193

land.rhs:                                         ; preds = %while.cond
  %call1 = call i32* @__errno_location() #14, !dbg !14194
  %4 = load i32, i32* %call1, align 4, !dbg !14194
  %cmp2 = icmp eq i32 %4, 4, !dbg !14195
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %5 = phi i1 [ false, %while.cond ], [ %cmp2, %land.rhs ], !dbg !14196
  br i1 %5, label %while.body, label %while.end, !dbg !14186

while.body:                                       ; preds = %land.end
  br label %while.cond, !dbg !14186, !llvm.loop !14197

while.end:                                        ; preds = %land.end
  %6 = load i64, i64* %readnb, align 8, !dbg !14199
  ret i64 %6, !dbg !14200
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @sc_argv_free(i32 %argc, i8** %argv) #0 !dbg !14201 {
entry:
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %i = alloca i32, align 4
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !14202, metadata !DIExpression()), !dbg !14203
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !14204, metadata !DIExpression()), !dbg !14205
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14206, metadata !DIExpression()), !dbg !14207
  store i32 0, i32* %i, align 4, !dbg !14208
  br label %for.cond, !dbg !14210

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !14211
  %1 = load i32, i32* %argc.addr, align 4, !dbg !14213
  %cmp = icmp slt i32 %0, %1, !dbg !14214
  br i1 %cmp, label %for.body, label %for.end, !dbg !14215

for.body:                                         ; preds = %for.cond
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !14216
  %3 = load i32, i32* %i, align 4, !dbg !14218
  %idxprom = sext i32 %3 to i64, !dbg !14216
  %arrayidx = getelementptr i8*, i8** %2, i64 %idxprom, !dbg !14216
  %4 = load i8*, i8** %arrayidx, align 8, !dbg !14216
  call void @free(i8* %4) #7, !dbg !14219
  br label %for.inc, !dbg !14220

for.inc:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !dbg !14221
  %inc = add i32 %5, 1, !dbg !14221
  store i32 %inc, i32* %i, align 4, !dbg !14221
  br label %for.cond, !dbg !14222, !llvm.loop !14223

for.end:                                          ; preds = %for.cond
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !14225
  %7 = bitcast i8** %6 to i8*, !dbg !14225
  call void @free(i8* %7) #7, !dbg !14226
  ret void, !dbg !14227
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local i32 @sc_build_command_line_from_file(i8* %file_name, %struct.SimpleConfConfig_* %config, %struct.SimpleConfEntry_* %entries, i64 %entries_count, i8* %app_name, i32* %argc_p, i8*** %argv_p) #0 !dbg !14228 {
entry:
  %retval = alloca i32, align 4
  %file_name.addr = alloca i8*, align 8
  %config.addr = alloca %struct.SimpleConfConfig_*, align 8
  %entries.addr = alloca %struct.SimpleConfEntry_*, align 8
  %entries_count.addr = alloca i64, align 8
  %app_name.addr = alloca i8*, align 8
  %argc_p.addr = alloca i32*, align 8
  %argv_p.addr = alloca i8***, align 8
  %argv = alloca i8**, align 8
  %argc = alloca i32, align 4
  store i8* %file_name, i8** %file_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file_name.addr, metadata !14251, metadata !DIExpression()), !dbg !14252
  store %struct.SimpleConfConfig_* %config, %struct.SimpleConfConfig_** %config.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SimpleConfConfig_** %config.addr, metadata !14253, metadata !DIExpression()), !dbg !14254
  store %struct.SimpleConfEntry_* %entries, %struct.SimpleConfEntry_** %entries.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SimpleConfEntry_** %entries.addr, metadata !14255, metadata !DIExpression()), !dbg !14256
  store i64 %entries_count, i64* %entries_count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %entries_count.addr, metadata !14257, metadata !DIExpression()), !dbg !14258
  store i8* %app_name, i8** %app_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %app_name.addr, metadata !14259, metadata !DIExpression()), !dbg !14260
  store i32* %argc_p, i32** %argc_p.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %argc_p.addr, metadata !14261, metadata !DIExpression()), !dbg !14262
  store i8*** %argv_p, i8**** %argv_p.addr, align 8
  call void @llvm.dbg.declare(metadata i8**** %argv_p.addr, metadata !14263, metadata !DIExpression()), !dbg !14264
  call void @llvm.dbg.declare(metadata i8*** %argv, metadata !14265, metadata !DIExpression()), !dbg !14266
  store i8** null, i8*** %argv, align 8, !dbg !14266
  call void @llvm.dbg.declare(metadata i32* %argc, metadata !14267, metadata !DIExpression()), !dbg !14268
  store i32 0, i32* %argc, align 4, !dbg !14268
  %0 = load i32*, i32** %argc_p.addr, align 8, !dbg !14269
  store i32 0, i32* %0, align 4, !dbg !14270
  %1 = load i8***, i8**** %argv_p.addr, align 8, !dbg !14271
  store i8** null, i8*** %1, align 8, !dbg !14272
  %call = call noalias i8* @malloc(i64 8) #7, !dbg !14273
  %2 = bitcast i8* %call to i8**, !dbg !14273
  store i8** %2, i8*** %argv, align 8, !dbg !14275
  %cmp = icmp eq i8** %2, null, !dbg !14276
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !14277

lor.lhs.false:                                    ; preds = %entry
  %3 = load i8*, i8** %app_name.addr, align 8, !dbg !14278
  %call1 = call noalias i8* @strdup(i8* %3) #7, !dbg !14279
  store i8* %call1, i8** %app_name.addr, align 8, !dbg !14280
  %cmp2 = icmp eq i8* %call1, null, !dbg !14281
  br i1 %cmp2, label %if.then, label %if.end, !dbg !14282

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load i32, i32* %argc, align 4, !dbg !14283
  %5 = load i8**, i8*** %argv, align 8, !dbg !14285
  call void @sc_argv_free(i32 %4, i8** %5), !dbg !14286
  store i32 -1, i32* %retval, align 4, !dbg !14287
  br label %return, !dbg !14287

if.end:                                           ; preds = %lor.lhs.false
  %6 = load i8*, i8** %app_name.addr, align 8, !dbg !14288
  %7 = load i8**, i8*** %argv, align 8, !dbg !14289
  %8 = load i32, i32* %argc, align 4, !dbg !14290
  %inc = add i32 %8, 1, !dbg !14290
  store i32 %inc, i32* %argc, align 4, !dbg !14290
  %idxprom = sext i32 %8 to i64, !dbg !14289
  %arrayidx = getelementptr i8*, i8** %7, i64 %idxprom, !dbg !14289
  store i8* %6, i8** %arrayidx, align 8, !dbg !14291
  %9 = load i8*, i8** %file_name.addr, align 8, !dbg !14292
  %10 = load %struct.SimpleConfConfig_*, %struct.SimpleConfConfig_** %config.addr, align 8, !dbg !14294
  %11 = load %struct.SimpleConfEntry_*, %struct.SimpleConfEntry_** %entries.addr, align 8, !dbg !14295
  %12 = load i64, i64* %entries_count.addr, align 8, !dbg !14296
  %call3 = call i32 @append_to_command_line_from_file(i8* %9, %struct.SimpleConfConfig_* %10, %struct.SimpleConfEntry_* %11, i64 %12, i32* %argc, i8*** %argv, i32 0), !dbg !14297
  %cmp4 = icmp ne i32 %call3, 0, !dbg !14298
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !14299

if.then5:                                         ; preds = %if.end
  %13 = load i32, i32* %argc, align 4, !dbg !14300
  %14 = load i8**, i8*** %argv, align 8, !dbg !14302
  call void @sc_argv_free(i32 %13, i8** %14), !dbg !14303
  store i32 -1, i32* %retval, align 4, !dbg !14304
  br label %return, !dbg !14304

if.end6:                                          ; preds = %if.end
  %15 = load i32, i32* %argc, align 4, !dbg !14305
  %16 = load i32*, i32** %argc_p.addr, align 8, !dbg !14306
  store i32 %15, i32* %16, align 4, !dbg !14307
  %17 = load i8**, i8*** %argv, align 8, !dbg !14308
  %18 = load i8***, i8**** %argv_p.addr, align 8, !dbg !14309
  store i8** %17, i8*** %18, align 8, !dbg !14310
  store i32 0, i32* %retval, align 4, !dbg !14311
  br label %return, !dbg !14311

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !14312
  ret i32 %19, !dbg !14312
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @append_to_command_line_from_file(i8* %file_name, %struct.SimpleConfConfig_* %config, %struct.SimpleConfEntry_* %entries, i64 %entries_count, i32* %argc_p, i8*** %argv_p, i32 %depth) #0 !dbg !14313 {
entry:
  %retval = alloca i32, align 4
  %file_name.addr = alloca i8*, align 8
  %config.addr = alloca %struct.SimpleConfConfig_*, align 8
  %entries.addr = alloca %struct.SimpleConfEntry_*, align 8
  %entries_count.addr = alloca i64, align 8
  %argc_p.addr = alloca i32*, align 8
  %argv_p.addr = alloca i8***, align 8
  %depth.addr = alloca i32, align 4
  %line = alloca [65536 x i8], align 16
  %fp = alloca %struct._IO_FILE*, align 8
  %arg = alloca i8*, align 8
  %argv_tmp = alloca i8**, align 8
  %err = alloca i8*, align 8
  %err_tmp = alloca i8*, align 8
  %i = alloca i64, align 8
  %line_count = alloca i32, align 4
  %try_next = alloca i32, align 4
  %output = alloca i8*, align 8
  %special_result = alloca i32, align 4
  %ret = alloca i32, align 4
  store i8* %file_name, i8** %file_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file_name.addr, metadata !14316, metadata !DIExpression()), !dbg !14317
  store %struct.SimpleConfConfig_* %config, %struct.SimpleConfConfig_** %config.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SimpleConfConfig_** %config.addr, metadata !14318, metadata !DIExpression()), !dbg !14319
  store %struct.SimpleConfEntry_* %entries, %struct.SimpleConfEntry_** %entries.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SimpleConfEntry_** %entries.addr, metadata !14320, metadata !DIExpression()), !dbg !14321
  store i64 %entries_count, i64* %entries_count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %entries_count.addr, metadata !14322, metadata !DIExpression()), !dbg !14323
  store i32* %argc_p, i32** %argc_p.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %argc_p.addr, metadata !14324, metadata !DIExpression()), !dbg !14325
  store i8*** %argv_p, i8**** %argv_p.addr, align 8
  call void @llvm.dbg.declare(metadata i8**** %argv_p.addr, metadata !14326, metadata !DIExpression()), !dbg !14327
  store i32 %depth, i32* %depth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %depth.addr, metadata !14328, metadata !DIExpression()), !dbg !14329
  call void @llvm.dbg.declare(metadata [65536 x i8]* %line, metadata !14330, metadata !DIExpression()), !dbg !14331
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp, metadata !14332, metadata !DIExpression()), !dbg !14367
  store %struct._IO_FILE* null, %struct._IO_FILE** %fp, align 8, !dbg !14367
  call void @llvm.dbg.declare(metadata i8** %arg, metadata !14368, metadata !DIExpression()), !dbg !14369
  call void @llvm.dbg.declare(metadata i8*** %argv_tmp, metadata !14370, metadata !DIExpression()), !dbg !14371
  call void @llvm.dbg.declare(metadata i8** %err, metadata !14372, metadata !DIExpression()), !dbg !14373
  store i8* null, i8** %err, align 8, !dbg !14373
  call void @llvm.dbg.declare(metadata i8** %err_tmp, metadata !14374, metadata !DIExpression()), !dbg !14375
  call void @llvm.dbg.declare(metadata i64* %i, metadata !14376, metadata !DIExpression()), !dbg !14377
  call void @llvm.dbg.declare(metadata i32* %line_count, metadata !14378, metadata !DIExpression()), !dbg !14379
  store i32 0, i32* %line_count, align 4, !dbg !14379
  call void @llvm.dbg.declare(metadata i32* %try_next, metadata !14380, metadata !DIExpression()), !dbg !14381
  store i32 1, i32* %try_next, align 4, !dbg !14381
  %0 = load i32, i32* %depth.addr, align 4, !dbg !14382
  %cmp = icmp uge i32 %0, 16, !dbg !14384
  br i1 %cmp, label %if.then, label %if.end, !dbg !14385

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !14386
  %2 = load i8*, i8** %file_name.addr, align 8, !dbg !14388
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.513, i64 0, i64 0), i8* %2), !dbg !14389
  store i32 -1, i32* %retval, align 4, !dbg !14390
  br label %return, !dbg !14390

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %file_name.addr, align 8, !dbg !14391
  %call1 = call %struct._IO_FILE* @fopen(i8* %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.514, i64 0, i64 0)), !dbg !14393
  store %struct._IO_FILE* %call1, %struct._IO_FILE** %fp, align 8, !dbg !14394
  %cmp2 = icmp eq %struct._IO_FILE* %call1, null, !dbg !14395
  br i1 %cmp2, label %if.then3, label %if.end7, !dbg !14396

if.then3:                                         ; preds = %if.end
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !14397
  %5 = load i8*, i8** %file_name.addr, align 8, !dbg !14399
  %call4 = call i32* @__errno_location() #14, !dbg !14400
  %6 = load i32, i32* %call4, align 4, !dbg !14400
  %call5 = call i8* @strerror(i32 %6) #7, !dbg !14401
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2.515, i64 0, i64 0), i8* %5, i8* %call5), !dbg !14402
  store i32 -1, i32* %retval, align 4, !dbg !14403
  br label %return, !dbg !14403

if.end7:                                          ; preds = %if.end
  br label %while.cond, !dbg !14404

while.cond:                                       ; preds = %if.end121, %if.end7
  %arraydecay = getelementptr inbounds [65536 x i8], [65536 x i8]* %line, i64 0, i64 0, !dbg !14405
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !14406
  %call8 = call i8* @fgets(i8* %arraydecay, i32 65536, %struct._IO_FILE* %7), !dbg !14407
  %cmp9 = icmp ne i8* %call8, null, !dbg !14408
  br i1 %cmp9, label %while.body, label %while.end, !dbg !14404

while.body:                                       ; preds = %while.cond
  %arraydecay10 = getelementptr inbounds [65536 x i8], [65536 x i8]* %line, i64 0, i64 0, !dbg !14409
  %call11 = call i8* @chomp(i8* %arraydecay10), !dbg !14411
  %8 = load i32, i32* %line_count, align 4, !dbg !14412
  %inc = add i32 %8, 1, !dbg !14412
  store i32 %inc, i32* %line_count, align 4, !dbg !14412
  store i64 0, i64* %i, align 8, !dbg !14413
  br label %for.cond, !dbg !14415

for.cond:                                         ; preds = %for.inc, %while.body
  %9 = load i64, i64* %i, align 8, !dbg !14416
  %10 = load i64, i64* %entries_count.addr, align 8, !dbg !14418
  %cmp12 = icmp ult i64 %9, %10, !dbg !14419
  br i1 %cmp12, label %for.body, label %for.end, !dbg !14420

for.body:                                         ; preds = %for.cond
  store i32 1, i32* %try_next, align 4, !dbg !14421
  %11 = load %struct.SimpleConfEntry_*, %struct.SimpleConfEntry_** %entries.addr, align 8, !dbg !14423
  %12 = load i64, i64* %i, align 8, !dbg !14424
  %arrayidx = getelementptr %struct.SimpleConfEntry_, %struct.SimpleConfEntry_* %11, i64 %12, !dbg !14423
  %arraydecay13 = getelementptr inbounds [65536 x i8], [65536 x i8]* %line, i64 0, i64 0, !dbg !14425
  %call14 = call i32 @try_entry(%struct.SimpleConfEntry_* %arrayidx, i8* %arraydecay13, i8** %arg, i8** %err_tmp), !dbg !14426
  switch i32 %call14, label %sw.default [
    i32 2, label %sw.bb
    i32 3, label %sw.bb15
    i32 8, label %sw.bb16
    i32 6, label %sw.bb18
    i32 7, label %sw.bb21
    i32 4, label %sw.bb23
    i32 5, label %sw.bb24
    i32 1, label %sw.bb36
    i32 9, label %sw.bb58
  ], !dbg !14427

sw.bb:                                            ; preds = %for.body
  store i32 0, i32* %try_next, align 4, !dbg !14428
  br label %sw.epilog, !dbg !14430

sw.bb15:                                          ; preds = %for.body
  br label %sw.epilog, !dbg !14431

sw.bb16:                                          ; preds = %for.body
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !14432
  %call17 = call i32 @fclose(%struct._IO_FILE* %13), !dbg !14433
  store i32 -1, i32* %retval, align 4, !dbg !14434
  br label %return, !dbg !14434

sw.bb18:                                          ; preds = %for.body
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !14435
  %15 = load %struct.SimpleConfEntry_*, %struct.SimpleConfEntry_** %entries.addr, align 8, !dbg !14436
  %16 = load i64, i64* %i, align 8, !dbg !14437
  %arrayidx19 = getelementptr %struct.SimpleConfEntry_, %struct.SimpleConfEntry_* %15, i64 %16, !dbg !14436
  %in = getelementptr inbounds %struct.SimpleConfEntry_, %struct.SimpleConfEntry_* %arrayidx19, i32 0, i32 0, !dbg !14438
  %17 = load i8*, i8** %in, align 8, !dbg !14438
  %call20 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3.516, i64 0, i64 0), i8* %17), !dbg !14439
  call void @abort() #13, !dbg !14440
  unreachable, !dbg !14440

sw.bb21:                                          ; preds = %for.body
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !14441
  %call22 = call i32 @fclose(%struct._IO_FILE* %18), !dbg !14442
  store i32 -1, i32* %retval, align 4, !dbg !14443
  br label %return, !dbg !14443

sw.bb23:                                          ; preds = %for.body
  %19 = load i8*, i8** %err_tmp, align 8, !dbg !14444
  store i8* %19, i8** %err, align 8, !dbg !14445
  br label %for.inc, !dbg !14446

sw.bb24:                                          ; preds = %for.body
  %20 = load i8*, i8** %err_tmp, align 8, !dbg !14447
  store i8* %20, i8** %err, align 8, !dbg !14449
  %21 = load i8*, i8** %err, align 8, !dbg !14450
  %cmp25 = icmp ne i8* %21, null, !dbg !14452
  br i1 %cmp25, label %land.lhs.true, label %if.else, !dbg !14453

land.lhs.true:                                    ; preds = %sw.bb24
  %22 = load i8*, i8** %err, align 8, !dbg !14454
  %23 = load i8, i8* %22, align 1, !dbg !14455
  %conv = sext i8 %23 to i32, !dbg !14455
  %cmp26 = icmp ne i32 %conv, 0, !dbg !14456
  br i1 %cmp26, label %if.then28, label %if.else, !dbg !14457

if.then28:                                        ; preds = %land.lhs.true
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !14458
  %25 = load i8*, i8** %file_name.addr, align 8, !dbg !14460
  %26 = load i32, i32* %line_count, align 4, !dbg !14461
  %27 = load i8*, i8** %err, align 8, !dbg !14462
  %arraydecay29 = getelementptr inbounds [65536 x i8], [65536 x i8]* %line, i64 0, i64 0, !dbg !14463
  %sub.ptr.lhs.cast = ptrtoint i8* %27 to i64, !dbg !14464
  %sub.ptr.rhs.cast = ptrtoint i8* %arraydecay29 to i64, !dbg !14464
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !14464
  %add = add i64 %sub.ptr.sub, 1, !dbg !14465
  %conv30 = trunc i64 %add to i32, !dbg !14466
  %28 = load i32, i32* %line_count, align 4, !dbg !14467
  %29 = load i8*, i8** %err, align 8, !dbg !14468
  %call31 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %24, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.4.517, i64 0, i64 0), i8* %25, i32 %26, i32 %conv30, i32 %28, i8* %29), !dbg !14469
  br label %if.end34, !dbg !14470

if.else:                                          ; preds = %land.lhs.true, %sw.bb24
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !14471
  %31 = load i8*, i8** %file_name.addr, align 8, !dbg !14473
  %32 = load i32, i32* %line_count, align 4, !dbg !14474
  %33 = load i32, i32* %line_count, align 4, !dbg !14475
  %arraydecay32 = getelementptr inbounds [65536 x i8], [65536 x i8]* %line, i64 0, i64 0, !dbg !14476
  %call33 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %30, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.518, i64 0, i64 0), i8* %31, i32 %32, i32 %33, i8* %arraydecay32), !dbg !14477
  br label %if.end34

if.end34:                                         ; preds = %if.else, %if.then28
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !14478
  %call35 = call i32 @fclose(%struct._IO_FILE* %34), !dbg !14479
  store i32 -1, i32* %retval, align 4, !dbg !14480
  br label %return, !dbg !14480

sw.bb36:                                          ; preds = %for.body
  store i32 0, i32* %try_next, align 4, !dbg !14481
  %35 = load i8*, i8** %arg, align 8, !dbg !14482
  %cmp37 = icmp eq i8* %35, null, !dbg !14484
  br i1 %cmp37, label %if.then42, label %lor.lhs.false, !dbg !14485

lor.lhs.false:                                    ; preds = %sw.bb36
  %36 = load i8*, i8** %arg, align 8, !dbg !14486
  %37 = load i8, i8* %36, align 1, !dbg !14487
  %conv39 = sext i8 %37 to i32, !dbg !14487
  %cmp40 = icmp eq i32 %conv39, 0, !dbg !14488
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !14489

if.then42:                                        ; preds = %lor.lhs.false, %sw.bb36
  %38 = load i8*, i8** %arg, align 8, !dbg !14490
  call void @free(i8* %38) #7, !dbg !14492
  br label %sw.epilog, !dbg !14493

if.end43:                                         ; preds = %lor.lhs.false
  %39 = load i32*, i32** %argc_p.addr, align 8, !dbg !14494
  %40 = load i32, i32* %39, align 4, !dbg !14496
  %cmp44 = icmp sge i32 %40, 2147483647, !dbg !14497
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !14498

if.then46:                                        ; preds = %if.end43
  call void @abort() #13, !dbg !14499
  unreachable, !dbg !14499

if.end47:                                         ; preds = %if.end43
  %41 = load i8***, i8**** %argv_p.addr, align 8, !dbg !14501
  %42 = load i8**, i8*** %41, align 8, !dbg !14503
  %43 = bitcast i8** %42 to i8*, !dbg !14503
  %44 = load i32*, i32** %argc_p.addr, align 8, !dbg !14504
  %45 = load i32, i32* %44, align 4, !dbg !14505
  %conv48 = sext i32 %45 to i64, !dbg !14506
  %add49 = add i64 %conv48, 1, !dbg !14507
  %mul = mul i64 8, %add49, !dbg !14508
  %call50 = call i8* @realloc(i8* %43, i64 %mul) #7, !dbg !14509
  %46 = bitcast i8* %call50 to i8**, !dbg !14509
  store i8** %46, i8*** %argv_tmp, align 8, !dbg !14510
  %cmp51 = icmp eq i8** %46, null, !dbg !14511
  br i1 %cmp51, label %if.then53, label %if.end55, !dbg !14512

if.then53:                                        ; preds = %if.end47
  %47 = load i8*, i8** %arg, align 8, !dbg !14513
  call void @free(i8* %47) #7, !dbg !14515
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !14516
  %call54 = call i32 @fclose(%struct._IO_FILE* %48), !dbg !14517
  store i32 -1, i32* %retval, align 4, !dbg !14518
  br label %return, !dbg !14518

if.end55:                                         ; preds = %if.end47
  %49 = load i8**, i8*** %argv_tmp, align 8, !dbg !14519
  %50 = load i8***, i8**** %argv_p.addr, align 8, !dbg !14520
  store i8** %49, i8*** %50, align 8, !dbg !14521
  %51 = load i8*, i8** %arg, align 8, !dbg !14522
  %52 = load i8***, i8**** %argv_p.addr, align 8, !dbg !14523
  %53 = load i8**, i8*** %52, align 8, !dbg !14524
  %54 = load i32*, i32** %argc_p.addr, align 8, !dbg !14525
  %55 = load i32, i32* %54, align 4, !dbg !14526
  %inc56 = add i32 %55, 1, !dbg !14526
  store i32 %inc56, i32* %54, align 4, !dbg !14526
  %idxprom = sext i32 %55 to i64, !dbg !14527
  %arrayidx57 = getelementptr i8*, i8** %53, i64 %idxprom, !dbg !14527
  store i8* %51, i8** %arrayidx57, align 8, !dbg !14528
  br label %sw.epilog, !dbg !14529

sw.bb58:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %output, metadata !14530, metadata !DIExpression()), !dbg !14532
  store i8* null, i8** %output, align 8, !dbg !14532
  call void @llvm.dbg.declare(metadata i32* %special_result, metadata !14533, metadata !DIExpression()), !dbg !14534
  store i32 0, i32* %try_next, align 4, !dbg !14535
  %56 = load %struct.SimpleConfConfig_*, %struct.SimpleConfConfig_** %config.addr, align 8, !dbg !14536
  %cmp59 = icmp eq %struct.SimpleConfConfig_* %56, null, !dbg !14538
  br i1 %cmp59, label %if.then64, label %lor.lhs.false61, !dbg !14539

lor.lhs.false61:                                  ; preds = %sw.bb58
  %57 = load %struct.SimpleConfConfig_*, %struct.SimpleConfConfig_** %config.addr, align 8, !dbg !14540
  %special_handler = getelementptr inbounds %struct.SimpleConfConfig_, %struct.SimpleConfConfig_* %57, i32 0, i32 1, !dbg !14541
  %58 = load i32 (i8**, i8*, i8*)*, i32 (i8**, i8*, i8*)** %special_handler, align 8, !dbg !14541
  %cmp62 = icmp eq i32 (i8**, i8*, i8*)* %58, null, !dbg !14542
  br i1 %cmp62, label %if.then64, label %if.end66, !dbg !14543

if.then64:                                        ; preds = %lor.lhs.false61, %sw.bb58
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !14544
  %call65 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %59, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6.519, i64 0, i64 0)), !dbg !14546
  call void @abort() #13, !dbg !14547
  unreachable, !dbg !14547

if.end66:                                         ; preds = %lor.lhs.false61
  %60 = load %struct.SimpleConfConfig_*, %struct.SimpleConfConfig_** %config.addr, align 8, !dbg !14548
  %special_handler67 = getelementptr inbounds %struct.SimpleConfConfig_, %struct.SimpleConfConfig_* %60, i32 0, i32 1, !dbg !14549
  %61 = load i32 (i8**, i8*, i8*)*, i32 (i8**, i8*, i8*)** %special_handler67, align 8, !dbg !14549
  %62 = load i8*, i8** %arg, align 8, !dbg !14550
  %63 = load %struct.SimpleConfConfig_*, %struct.SimpleConfConfig_** %config.addr, align 8, !dbg !14551
  %user_data = getelementptr inbounds %struct.SimpleConfConfig_, %struct.SimpleConfConfig_* %63, i32 0, i32 0, !dbg !14552
  %64 = load i8*, i8** %user_data, align 8, !dbg !14552
  %call68 = call i32 %61(i8** %output, i8* %62, i8* %64), !dbg !14548
  store i32 %call68, i32* %special_result, align 4, !dbg !14553
  %65 = load i32, i32* %special_result, align 4, !dbg !14554
  %cmp69 = icmp eq i32 %65, 1, !dbg !14556
  br i1 %cmp69, label %if.then71, label %if.else72, !dbg !14557

if.then71:                                        ; preds = %if.end66
  %66 = load i8*, i8** %arg, align 8, !dbg !14558
  call void @free(i8* %66) #7, !dbg !14560
  br label %sw.epilog, !dbg !14561

if.else72:                                        ; preds = %if.end66
  %67 = load i32, i32* %special_result, align 4, !dbg !14562
  %cmp73 = icmp eq i32 %67, 2, !dbg !14564
  br i1 %cmp73, label %if.then75, label %if.else77, !dbg !14565

if.then75:                                        ; preds = %if.else72
  %68 = load i8*, i8** %arg, align 8, !dbg !14566
  call void @free(i8* %68) #7, !dbg !14568
  %69 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !14569
  %call76 = call i32 @fclose(%struct._IO_FILE* %69), !dbg !14570
  store i32 -1, i32* %retval, align 4, !dbg !14571
  br label %return, !dbg !14571

if.else77:                                        ; preds = %if.else72
  %70 = load i32, i32* %special_result, align 4, !dbg !14572
  %cmp78 = icmp eq i32 %70, 3, !dbg !14574
  br i1 %cmp78, label %if.then80, label %if.end88, !dbg !14575

if.then80:                                        ; preds = %if.else77
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !14576, metadata !DIExpression()), !dbg !14578
  %71 = load i8*, i8** %output, align 8, !dbg !14579
  %72 = load %struct.SimpleConfConfig_*, %struct.SimpleConfConfig_** %config.addr, align 8, !dbg !14580
  %73 = load %struct.SimpleConfEntry_*, %struct.SimpleConfEntry_** %entries.addr, align 8, !dbg !14581
  %74 = load i64, i64* %entries_count.addr, align 8, !dbg !14582
  %75 = load i32*, i32** %argc_p.addr, align 8, !dbg !14583
  %76 = load i8***, i8**** %argv_p.addr, align 8, !dbg !14584
  %77 = load i32, i32* %depth.addr, align 4, !dbg !14585
  %add81 = add i32 %77, 1, !dbg !14586
  %call82 = call i32 @append_to_command_line_from_file(i8* %71, %struct.SimpleConfConfig_* %72, %struct.SimpleConfEntry_* %73, i64 %74, i32* %75, i8*** %76, i32 %add81), !dbg !14587
  store i32 %call82, i32* %ret, align 4, !dbg !14578
  %78 = load i8*, i8** %output, align 8, !dbg !14588
  call void @free(i8* %78) #7, !dbg !14589
  %79 = load i8*, i8** %arg, align 8, !dbg !14590
  call void @free(i8* %79) #7, !dbg !14591
  %80 = load i32, i32* %ret, align 4, !dbg !14592
  %cmp83 = icmp ne i32 %80, 0, !dbg !14594
  br i1 %cmp83, label %if.then85, label %if.end87, !dbg !14595

if.then85:                                        ; preds = %if.then80
  %81 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !14596
  %call86 = call i32 @fclose(%struct._IO_FILE* %81), !dbg !14598
  store i32 -1, i32* %retval, align 4, !dbg !14599
  br label %return, !dbg !14599

if.end87:                                         ; preds = %if.then80
  br label %sw.epilog, !dbg !14600

if.end88:                                         ; preds = %if.else77
  br label %if.end89

if.end89:                                         ; preds = %if.end88
  br label %if.end90

if.end90:                                         ; preds = %if.end89
  call void @abort() #13, !dbg !14601
  unreachable, !dbg !14601

sw.default:                                       ; preds = %for.body
  call void @abort() #13, !dbg !14602
  unreachable, !dbg !14602

sw.epilog:                                        ; preds = %if.end87, %if.then71, %if.end55, %if.then42, %sw.bb15, %sw.bb
  %82 = load i32, i32* %try_next, align 4, !dbg !14603
  %cmp91 = icmp eq i32 %82, 0, !dbg !14605
  br i1 %cmp91, label %if.then93, label %if.end94, !dbg !14606

if.then93:                                        ; preds = %sw.epilog
  br label %for.end, !dbg !14607

if.end94:                                         ; preds = %sw.epilog
  br label %for.inc, !dbg !14609

for.inc:                                          ; preds = %if.end94, %sw.bb23
  %83 = load i64, i64* %i, align 8, !dbg !14610
  %inc95 = add i64 %83, 1, !dbg !14610
  store i64 %inc95, i64* %i, align 8, !dbg !14610
  br label %for.cond, !dbg !14611, !llvm.loop !14612

for.end:                                          ; preds = %if.then93, %for.cond
  %84 = load i32, i32* %try_next, align 4, !dbg !14614
  %cmp96 = icmp ne i32 %84, 0, !dbg !14616
  br i1 %cmp96, label %land.lhs.true98, label %if.end121, !dbg !14617

land.lhs.true98:                                  ; preds = %for.end
  %85 = load i64, i64* %i, align 8, !dbg !14618
  %86 = load i64, i64* %entries_count.addr, align 8, !dbg !14619
  %cmp99 = icmp uge i64 %85, %86, !dbg !14620
  br i1 %cmp99, label %if.then101, label %if.end121, !dbg !14621

if.then101:                                       ; preds = %land.lhs.true98
  %87 = load i8*, i8** %err, align 8, !dbg !14622
  %cmp102 = icmp ne i8* %87, null, !dbg !14625
  br i1 %cmp102, label %land.lhs.true104, label %if.else116, !dbg !14626

land.lhs.true104:                                 ; preds = %if.then101
  %88 = load i8*, i8** %err, align 8, !dbg !14627
  %89 = load i8, i8* %88, align 1, !dbg !14628
  %conv105 = sext i8 %89 to i32, !dbg !14628
  %cmp106 = icmp ne i32 %conv105, 0, !dbg !14629
  br i1 %cmp106, label %if.then108, label %if.else116, !dbg !14630

if.then108:                                       ; preds = %land.lhs.true104
  %90 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !14631
  %91 = load i8*, i8** %file_name.addr, align 8, !dbg !14633
  %92 = load i32, i32* %line_count, align 4, !dbg !14634
  %93 = load i8*, i8** %err, align 8, !dbg !14635
  %arraydecay109 = getelementptr inbounds [65536 x i8], [65536 x i8]* %line, i64 0, i64 0, !dbg !14636
  %sub.ptr.lhs.cast110 = ptrtoint i8* %93 to i64, !dbg !14637
  %sub.ptr.rhs.cast111 = ptrtoint i8* %arraydecay109 to i64, !dbg !14637
  %sub.ptr.sub112 = sub i64 %sub.ptr.lhs.cast110, %sub.ptr.rhs.cast111, !dbg !14637
  %add113 = add i64 %sub.ptr.sub112, 1, !dbg !14638
  %conv114 = trunc i64 %add113 to i32, !dbg !14639
  %94 = load i32, i32* %line_count, align 4, !dbg !14640
  %95 = load i8*, i8** %err, align 8, !dbg !14641
  %call115 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %90, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.4.517, i64 0, i64 0), i8* %91, i32 %92, i32 %conv114, i32 %94, i8* %95), !dbg !14642
  br label %if.end119, !dbg !14643

if.else116:                                       ; preds = %land.lhs.true104, %if.then101
  %96 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !14644
  %97 = load i8*, i8** %file_name.addr, align 8, !dbg !14646
  %98 = load i32, i32* %line_count, align 4, !dbg !14647
  %99 = load i32, i32* %line_count, align 4, !dbg !14648
  %arraydecay117 = getelementptr inbounds [65536 x i8], [65536 x i8]* %line, i64 0, i64 0, !dbg !14649
  %call118 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %96, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7.520, i64 0, i64 0), i8* %97, i32 %98, i32 %99, i8* %arraydecay117), !dbg !14650
  br label %if.end119

if.end119:                                        ; preds = %if.else116, %if.then108
  %100 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !14651
  %call120 = call i32 @fclose(%struct._IO_FILE* %100), !dbg !14652
  store i32 -1, i32* %retval, align 4, !dbg !14653
  br label %return, !dbg !14653

if.end121:                                        ; preds = %land.lhs.true98, %for.end
  br label %while.cond, !dbg !14404, !llvm.loop !14654

while.end:                                        ; preds = %while.cond
  %101 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !14656
  %call122 = call i32 @fclose(%struct._IO_FILE* %101), !dbg !14657
  store i32 0, i32* %retval, align 4, !dbg !14658
  br label %return, !dbg !14658

return:                                           ; preds = %while.end, %if.end119, %if.then85, %if.then75, %if.then53, %if.end34, %sw.bb21, %sw.bb16, %if.then3, %if.then
  %102 = load i32, i32* %retval, align 4, !dbg !14659
  ret i32 %102, !dbg !14659
}

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #9

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i8* @chomp(i8* %str) #0 !dbg !14660 {
entry:
  %retval = alloca i8*, align 8
  %str.addr = alloca i8*, align 8
  %i = alloca i64, align 8
  %c = alloca i32, align 4
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !14663, metadata !DIExpression()), !dbg !14664
  call void @llvm.dbg.declare(metadata i64* %i, metadata !14665, metadata !DIExpression()), !dbg !14666
  %0 = load i8*, i8** %str.addr, align 8, !dbg !14667
  %call = call i64 @strlen(i8* %0) #12, !dbg !14668
  store i64 %call, i64* %i, align 8, !dbg !14666
  call void @llvm.dbg.declare(metadata i32* %c, metadata !14669, metadata !DIExpression()), !dbg !14670
  %1 = load i64, i64* %i, align 8, !dbg !14671
  %cmp = icmp eq i64 %1, 0, !dbg !14673
  br i1 %cmp, label %if.then, label %if.end, !dbg !14674

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %str.addr, align 8, !dbg !14675
  store i8* %2, i8** %retval, align 8, !dbg !14677
  br label %return, !dbg !14677

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !14678

do.body:                                          ; preds = %do.cond, %if.end
  %3 = load i64, i64* %i, align 8, !dbg !14679
  %dec = add i64 %3, -1, !dbg !14679
  store i64 %dec, i64* %i, align 8, !dbg !14679
  %4 = load i8*, i8** %str.addr, align 8, !dbg !14681
  %5 = load i64, i64* %i, align 8, !dbg !14682
  %arrayidx = getelementptr i8, i8* %4, i64 %5, !dbg !14681
  %6 = load i8, i8* %arrayidx, align 1, !dbg !14681
  %conv = zext i8 %6 to i32, !dbg !14683
  store i32 %conv, i32* %c, align 4, !dbg !14684
  %call1 = call i16** @__ctype_b_loc() #14, !dbg !14685
  %7 = load i16*, i16** %call1, align 8, !dbg !14685
  %8 = load i32, i32* %c, align 4, !dbg !14685
  %idxprom = sext i32 %8 to i64, !dbg !14685
  %arrayidx2 = getelementptr i16, i16* %7, i64 %idxprom, !dbg !14685
  %9 = load i16, i16* %arrayidx2, align 2, !dbg !14685
  %conv3 = zext i16 %9 to i32, !dbg !14685
  %and = and i32 %conv3, 8192, !dbg !14685
  %tobool = icmp ne i32 %and, 0, !dbg !14685
  br i1 %tobool, label %if.then4, label %if.else, !dbg !14687

if.then4:                                         ; preds = %do.body
  %10 = load i8*, i8** %str.addr, align 8, !dbg !14688
  %11 = load i64, i64* %i, align 8, !dbg !14690
  %arrayidx5 = getelementptr i8, i8* %10, i64 %11, !dbg !14688
  store i8 0, i8* %arrayidx5, align 1, !dbg !14691
  br label %if.end6, !dbg !14692

if.else:                                          ; preds = %do.body
  br label %do.end, !dbg !14693

if.end6:                                          ; preds = %if.then4
  br label %do.cond, !dbg !14695

do.cond:                                          ; preds = %if.end6
  %12 = load i64, i64* %i, align 8, !dbg !14696
  %cmp7 = icmp ne i64 %12, 0, !dbg !14697
  br i1 %cmp7, label %do.body, label %do.end, !dbg !14695, !llvm.loop !14698

do.end:                                           ; preds = %do.cond, %if.else
  %13 = load i8*, i8** %str.addr, align 8, !dbg !14700
  store i8* %13, i8** %retval, align 8, !dbg !14701
  br label %return, !dbg !14701

return:                                           ; preds = %do.end, %if.then
  %14 = load i8*, i8** %retval, align 8, !dbg !14702
  ret i8* %14, !dbg !14702
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @try_entry(%struct.SimpleConfEntry_* %entry1, i8* %line, i8** %arg_p, i8** %err_p) #0 !dbg !14703 {
entry:
  %retval = alloca i32, align 4
  %entry.addr = alloca %struct.SimpleConfEntry_*, align 8
  %line.addr = alloca i8*, align 8
  %arg_p.addr = alloca i8**, align 8
  %err_p.addr = alloca i8**, align 8
  %in_pnt = alloca i8*, align 8
  %line_pnt = alloca i8*, align 8
  %match_start = alloca i8*, align 8
  %out_pnt = alloca i8*, align 8
  %prop_name = alloca i8*, align 8
  %wildcard_start = alloca i8*, align 8
  %arg = alloca i8*, align 8
  %matches = alloca [10 x %struct.Match_], align 16
  %arg_len = alloca i64, align 8
  %matches_len = alloca i64, align 8
  %wildcard_len = alloca i64, align 8
  %state = alloca i32, align 4
  %expect_char = alloca i32, align 4
  %is_boolean = alloca i32, align 4
  %is_enabled = alloca i32, align 4
  %is_special = alloca i32, align 4
  %c = alloca i32, align 4
  %d = alloca i32, align 4
  %i = alloca i64, align 8
  %match_id = alloca i64, align 8
  %i495 = alloca i64, align 8
  store %struct.SimpleConfEntry_* %entry1, %struct.SimpleConfEntry_** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SimpleConfEntry_** %entry.addr, metadata !14708, metadata !DIExpression()), !dbg !14709
  store i8* %line, i8** %line.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %line.addr, metadata !14710, metadata !DIExpression()), !dbg !14711
  store i8** %arg_p, i8*** %arg_p.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %arg_p.addr, metadata !14712, metadata !DIExpression()), !dbg !14713
  store i8** %err_p, i8*** %err_p.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %err_p.addr, metadata !14714, metadata !DIExpression()), !dbg !14715
  call void @llvm.dbg.declare(metadata i8** %in_pnt, metadata !14716, metadata !DIExpression()), !dbg !14717
  call void @llvm.dbg.declare(metadata i8** %line_pnt, metadata !14718, metadata !DIExpression()), !dbg !14719
  call void @llvm.dbg.declare(metadata i8** %match_start, metadata !14720, metadata !DIExpression()), !dbg !14721
  store i8* null, i8** %match_start, align 8, !dbg !14721
  call void @llvm.dbg.declare(metadata i8** %out_pnt, metadata !14722, metadata !DIExpression()), !dbg !14723
  call void @llvm.dbg.declare(metadata i8** %prop_name, metadata !14724, metadata !DIExpression()), !dbg !14725
  store i8* null, i8** %prop_name, align 8, !dbg !14725
  call void @llvm.dbg.declare(metadata i8** %wildcard_start, metadata !14726, metadata !DIExpression()), !dbg !14727
  store i8* null, i8** %wildcard_start, align 8, !dbg !14727
  call void @llvm.dbg.declare(metadata i8** %arg, metadata !14728, metadata !DIExpression()), !dbg !14729
  call void @llvm.dbg.declare(metadata [10 x %struct.Match_]* %matches, metadata !14730, metadata !DIExpression()), !dbg !14737
  call void @llvm.dbg.declare(metadata i64* %arg_len, metadata !14738, metadata !DIExpression()), !dbg !14739
  call void @llvm.dbg.declare(metadata i64* %matches_len, metadata !14740, metadata !DIExpression()), !dbg !14741
  call void @llvm.dbg.declare(metadata i64* %wildcard_len, metadata !14742, metadata !DIExpression()), !dbg !14743
  call void @llvm.dbg.declare(metadata i32* %state, metadata !14744, metadata !DIExpression()), !dbg !14746
  store i32 0, i32* %state, align 4, !dbg !14746
  call void @llvm.dbg.declare(metadata i32* %expect_char, metadata !14747, metadata !DIExpression()), !dbg !14748
  call void @llvm.dbg.declare(metadata i32* %is_boolean, metadata !14749, metadata !DIExpression()), !dbg !14750
  call void @llvm.dbg.declare(metadata i32* %is_enabled, metadata !14751, metadata !DIExpression()), !dbg !14752
  call void @llvm.dbg.declare(metadata i32* %is_special, metadata !14753, metadata !DIExpression()), !dbg !14754
  call void @llvm.dbg.declare(metadata i32* %c, metadata !14755, metadata !DIExpression()), !dbg !14756
  store i32 0, i32* %c, align 4, !dbg !14756
  call void @llvm.dbg.declare(metadata i32* %d, metadata !14757, metadata !DIExpression()), !dbg !14758
  store i32 0, i32* %d, align 4, !dbg !14758
  %0 = load i8**, i8*** %err_p.addr, align 8, !dbg !14759
  store i8* null, i8** %0, align 8, !dbg !14760
  %1 = load i8**, i8*** %arg_p.addr, align 8, !dbg !14761
  store i8* null, i8** %1, align 8, !dbg !14762
  %2 = load i8*, i8** %line.addr, align 8, !dbg !14763
  %call = call i8* @skip_spaces(i8* %2), !dbg !14764
  store i8* %call, i8** %line.addr, align 8, !dbg !14765
  %3 = load i8*, i8** %line.addr, align 8, !dbg !14766
  %4 = load i8, i8* %3, align 1, !dbg !14768
  %conv = sext i8 %4 to i32, !dbg !14768
  %cmp = icmp eq i32 %conv, 0, !dbg !14769
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !14770

lor.lhs.false:                                    ; preds = %entry
  %5 = load i8*, i8** %line.addr, align 8, !dbg !14771
  %6 = load i8, i8* %5, align 1, !dbg !14772
  %conv3 = sext i8 %6 to i32, !dbg !14772
  %cmp4 = icmp eq i32 %conv3, 35, !dbg !14773
  br i1 %cmp4, label %if.then, label %if.end, !dbg !14774

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 2, i32* %retval, align 4, !dbg !14775
  br label %return, !dbg !14775

if.end:                                           ; preds = %lor.lhs.false
  %7 = load %struct.SimpleConfEntry_*, %struct.SimpleConfEntry_** %entry.addr, align 8, !dbg !14777
  %in = getelementptr inbounds %struct.SimpleConfEntry_, %struct.SimpleConfEntry_* %7, i32 0, i32 0, !dbg !14778
  %8 = load i8*, i8** %in, align 8, !dbg !14778
  store i8* %8, i8** %in_pnt, align 8, !dbg !14779
  %9 = load i8*, i8** %line.addr, align 8, !dbg !14780
  store i8* %9, i8** %line_pnt, align 8, !dbg !14781
  %10 = load i8*, i8** %in_pnt, align 8, !dbg !14782
  store i8* %10, i8** %prop_name, align 8, !dbg !14783
  store i64 0, i64* %matches_len, align 8, !dbg !14784
  store i32 0, i32* %expect_char, align 4, !dbg !14785
  store i32 0, i32* %is_boolean, align 4, !dbg !14786
  store i32 0, i32* %is_enabled, align 4, !dbg !14787
  store i32 0, i32* %is_special, align 4, !dbg !14788
  store i32 1, i32* %state, align 4, !dbg !14789
  br label %while.cond, !dbg !14790

while.cond:                                       ; preds = %if.end408, %if.end378, %if.end367, %if.end356, %if.end345, %if.end325, %if.end308, %if.end281, %if.end270, %if.end259, %if.end248, %if.end237, %if.end226, %if.end119, %if.end90, %if.end70, %if.end49, %if.end
  %11 = load i8*, i8** %in_pnt, align 8, !dbg !14791
  %12 = load i8, i8* %11, align 1, !dbg !14792
  %conv6 = sext i8 %12 to i32, !dbg !14792
  %cmp7 = icmp ne i32 %conv6, 0, !dbg !14793
  br i1 %cmp7, label %lor.end, label %lor.rhs, !dbg !14794

lor.rhs:                                          ; preds = %while.cond
  %13 = load i8*, i8** %line_pnt, align 8, !dbg !14795
  %14 = load i8, i8* %13, align 1, !dbg !14796
  %conv9 = sext i8 %14 to i32, !dbg !14796
  %cmp10 = icmp ne i32 %conv9, 0, !dbg !14797
  br label %lor.end, !dbg !14794

lor.end:                                          ; preds = %lor.rhs, %while.cond
  %15 = phi i1 [ true, %while.cond ], [ %cmp10, %lor.rhs ]
  br i1 %15, label %while.body, label %while.end, !dbg !14790

while.body:                                       ; preds = %lor.end
  %16 = load i8*, i8** %line_pnt, align 8, !dbg !14798
  %17 = load i8, i8* %16, align 1, !dbg !14800
  %conv12 = zext i8 %17 to i32, !dbg !14800
  store i32 %conv12, i32* %c, align 4, !dbg !14801
  %18 = load i8*, i8** %in_pnt, align 8, !dbg !14802
  %19 = load i8, i8* %18, align 1, !dbg !14803
  %conv13 = zext i8 %19 to i32, !dbg !14803
  store i32 %conv13, i32* %d, align 4, !dbg !14804
  %20 = load i32, i32* %state, align 4, !dbg !14805
  switch i32 %20, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb50
    i32 3, label %sw.bb71
    i32 4, label %sw.bb91
    i32 5, label %sw.bb120
    i32 6, label %sw.bb227
    i32 7, label %sw.bb238
    i32 8, label %sw.bb249
    i32 9, label %sw.bb260
    i32 10, label %sw.bb271
    i32 11, label %sw.bb282
    i32 12, label %sw.bb309
    i32 13, label %sw.bb326
    i32 15, label %sw.bb346
    i32 14, label %sw.bb357
    i32 16, label %sw.bb368
    i32 17, label %sw.bb379
  ], !dbg !14806

sw.bb:                                            ; preds = %while.body
  %call14 = call i16** @__ctype_b_loc() #14, !dbg !14807
  %21 = load i16*, i16** %call14, align 8, !dbg !14807
  %22 = load i32, i32* %d, align 4, !dbg !14807
  %idxprom = sext i32 %22 to i64, !dbg !14807
  %arrayidx = getelementptr i16, i16* %21, i64 %idxprom, !dbg !14807
  %23 = load i16, i16* %arrayidx, align 2, !dbg !14807
  %conv15 = zext i16 %23 to i32, !dbg !14807
  %and = and i32 %conv15, 8192, !dbg !14807
  %tobool = icmp ne i32 %and, 0, !dbg !14807
  br i1 %tobool, label %if.then16, label %if.else, !dbg !14810

if.then16:                                        ; preds = %sw.bb
  %24 = load i8*, i8** %in_pnt, align 8, !dbg !14811
  %incdec.ptr = getelementptr i8, i8* %24, i32 1, !dbg !14811
  store i8* %incdec.ptr, i8** %in_pnt, align 8, !dbg !14811
  store i32 2, i32* %state, align 4, !dbg !14813
  br label %if.end49, !dbg !14814

if.else:                                          ; preds = %sw.bb
  %25 = load i32, i32* %d, align 4, !dbg !14815
  %cmp17 = icmp eq i32 %25, 63, !dbg !14817
  br i1 %cmp17, label %land.lhs.true, label %if.else23, !dbg !14818

land.lhs.true:                                    ; preds = %if.else
  %26 = load i32, i32* %is_boolean, align 4, !dbg !14819
  %cmp19 = icmp eq i32 %26, 0, !dbg !14820
  br i1 %cmp19, label %if.then21, label %if.else23, !dbg !14821

if.then21:                                        ; preds = %land.lhs.true
  store i32 1, i32* %is_boolean, align 4, !dbg !14822
  %27 = load i8*, i8** %in_pnt, align 8, !dbg !14824
  %incdec.ptr22 = getelementptr i8, i8* %27, i32 1, !dbg !14824
  store i8* %incdec.ptr22, i8** %in_pnt, align 8, !dbg !14824
  br label %if.end48, !dbg !14825

if.else23:                                        ; preds = %land.lhs.true, %if.else
  %28 = load i32, i32* %d, align 4, !dbg !14826
  %cmp24 = icmp eq i32 %28, 33, !dbg !14828
  br i1 %cmp24, label %land.lhs.true26, label %if.else31, !dbg !14829

land.lhs.true26:                                  ; preds = %if.else23
  %29 = load i32, i32* %is_special, align 4, !dbg !14830
  %cmp27 = icmp eq i32 %29, 0, !dbg !14831
  br i1 %cmp27, label %if.then29, label %if.else31, !dbg !14832

if.then29:                                        ; preds = %land.lhs.true26
  store i32 1, i32* %is_special, align 4, !dbg !14833
  %30 = load i8*, i8** %in_pnt, align 8, !dbg !14835
  %incdec.ptr30 = getelementptr i8, i8* %30, i32 1, !dbg !14835
  store i8* %incdec.ptr30, i8** %in_pnt, align 8, !dbg !14835
  br label %if.end47, !dbg !14836

if.else31:                                        ; preds = %land.lhs.true26, %if.else23
  %31 = load i32, i32* %c, align 4, !dbg !14837
  %cmp32 = icmp ne i32 %31, 0, !dbg !14839
  br i1 %cmp32, label %land.lhs.true34, label %if.else45, !dbg !14840

land.lhs.true34:                                  ; preds = %if.else31
  %32 = load i32, i32* %d, align 4, !dbg !14841
  %cmp35 = icmp ne i32 %32, 0, !dbg !14842
  br i1 %cmp35, label %land.lhs.true37, label %if.else45, !dbg !14843

land.lhs.true37:                                  ; preds = %land.lhs.true34
  %33 = load i32, i32* %c, align 4, !dbg !14844
  %call38 = call i32 @tolower(i32 %33) #12, !dbg !14845
  %34 = load i32, i32* %d, align 4, !dbg !14846
  %call39 = call i32 @tolower(i32 %34) #12, !dbg !14847
  %cmp40 = icmp eq i32 %call38, %call39, !dbg !14848
  br i1 %cmp40, label %if.then42, label %if.else45, !dbg !14849

if.then42:                                        ; preds = %land.lhs.true37
  %35 = load i8*, i8** %in_pnt, align 8, !dbg !14850
  %incdec.ptr43 = getelementptr i8, i8* %35, i32 1, !dbg !14850
  store i8* %incdec.ptr43, i8** %in_pnt, align 8, !dbg !14850
  %36 = load i8*, i8** %line_pnt, align 8, !dbg !14852
  %incdec.ptr44 = getelementptr i8, i8* %36, i32 1, !dbg !14852
  store i8* %incdec.ptr44, i8** %line_pnt, align 8, !dbg !14852
  br label %if.end46, !dbg !14853

if.else45:                                        ; preds = %land.lhs.true37, %land.lhs.true34, %if.else31
  store i32 3, i32* %retval, align 4, !dbg !14854
  br label %return, !dbg !14854

if.end46:                                         ; preds = %if.then42
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.then29
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.then21
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.then16
  br label %while.cond, !dbg !14856, !llvm.loop !14857

sw.bb50:                                          ; preds = %while.body
  %37 = load i32, i32* %c, align 4, !dbg !14859
  %cmp51 = icmp eq i32 %37, 61, !dbg !14861
  br i1 %cmp51, label %if.then56, label %lor.lhs.false53, !dbg !14862

lor.lhs.false53:                                  ; preds = %sw.bb50
  %38 = load i32, i32* %c, align 4, !dbg !14863
  %cmp54 = icmp eq i32 %38, 58, !dbg !14864
  br i1 %cmp54, label %if.then56, label %if.else58, !dbg !14865

if.then56:                                        ; preds = %lor.lhs.false53, %sw.bb50
  store i32 4, i32* %state, align 4, !dbg !14866
  %39 = load i8*, i8** %line_pnt, align 8, !dbg !14868
  %incdec.ptr57 = getelementptr i8, i8* %39, i32 1, !dbg !14868
  store i8* %incdec.ptr57, i8** %line_pnt, align 8, !dbg !14868
  br label %if.end70, !dbg !14869

if.else58:                                        ; preds = %lor.lhs.false53
  %call59 = call i16** @__ctype_b_loc() #14, !dbg !14870
  %40 = load i16*, i16** %call59, align 8, !dbg !14870
  %41 = load i32, i32* %c, align 4, !dbg !14870
  %idxprom60 = sext i32 %41 to i64, !dbg !14870
  %arrayidx61 = getelementptr i16, i16* %40, i64 %idxprom60, !dbg !14870
  %42 = load i16, i16* %arrayidx61, align 2, !dbg !14870
  %conv62 = zext i16 %42 to i32, !dbg !14870
  %and63 = and i32 %conv62, 8192, !dbg !14870
  %tobool64 = icmp ne i32 %and63, 0, !dbg !14870
  br i1 %tobool64, label %if.then65, label %if.else67, !dbg !14872

if.then65:                                        ; preds = %if.else58
  store i32 3, i32* %state, align 4, !dbg !14873
  %43 = load i8*, i8** %line_pnt, align 8, !dbg !14875
  %incdec.ptr66 = getelementptr i8, i8* %43, i32 1, !dbg !14875
  store i8* %incdec.ptr66, i8** %line_pnt, align 8, !dbg !14875
  br label %if.end69, !dbg !14876

if.else67:                                        ; preds = %if.else58
  %44 = load i8**, i8*** %err_p.addr, align 8, !dbg !14877
  %45 = load i8*, i8** %line_pnt, align 8, !dbg !14879
  %46 = load i8*, i8** %line.addr, align 8, !dbg !14880
  %call68 = call i32 @err_syntax(i8** %44, i8* %45, i8* %46), !dbg !14881
  store i32 %call68, i32* %retval, align 4, !dbg !14882
  br label %return, !dbg !14882

if.end69:                                         ; preds = %if.then65
  br label %if.end70

if.end70:                                         ; preds = %if.end69, %if.then56
  br label %while.cond, !dbg !14883, !llvm.loop !14857

sw.bb71:                                          ; preds = %while.body
  %47 = load i32, i32* %c, align 4, !dbg !14884
  %cmp72 = icmp eq i32 %47, 61, !dbg !14886
  br i1 %cmp72, label %if.then77, label %lor.lhs.false74, !dbg !14887

lor.lhs.false74:                                  ; preds = %sw.bb71
  %48 = load i32, i32* %c, align 4, !dbg !14888
  %cmp75 = icmp eq i32 %48, 58, !dbg !14889
  br i1 %cmp75, label %if.then77, label %if.else79, !dbg !14890

if.then77:                                        ; preds = %lor.lhs.false74, %sw.bb71
  store i32 4, i32* %state, align 4, !dbg !14891
  %49 = load i8*, i8** %line_pnt, align 8, !dbg !14893
  %incdec.ptr78 = getelementptr i8, i8* %49, i32 1, !dbg !14893
  store i8* %incdec.ptr78, i8** %line_pnt, align 8, !dbg !14893
  br label %if.end90, !dbg !14894

if.else79:                                        ; preds = %lor.lhs.false74
  %call80 = call i16** @__ctype_b_loc() #14, !dbg !14895
  %50 = load i16*, i16** %call80, align 8, !dbg !14895
  %51 = load i32, i32* %c, align 4, !dbg !14895
  %idxprom81 = sext i32 %51 to i64, !dbg !14895
  %arrayidx82 = getelementptr i16, i16* %50, i64 %idxprom81, !dbg !14895
  %52 = load i16, i16* %arrayidx82, align 2, !dbg !14895
  %conv83 = zext i16 %52 to i32, !dbg !14895
  %and84 = and i32 %conv83, 8192, !dbg !14895
  %tobool85 = icmp ne i32 %and84, 0, !dbg !14895
  br i1 %tobool85, label %if.then86, label %if.else88, !dbg !14897

if.then86:                                        ; preds = %if.else79
  %53 = load i8*, i8** %line_pnt, align 8, !dbg !14898
  %incdec.ptr87 = getelementptr i8, i8* %53, i32 1, !dbg !14898
  store i8* %incdec.ptr87, i8** %line_pnt, align 8, !dbg !14898
  br label %if.end89, !dbg !14900

if.else88:                                        ; preds = %if.else79
  store i32 4, i32* %state, align 4, !dbg !14901
  br label %if.end89

if.end89:                                         ; preds = %if.else88, %if.then86
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %if.then77
  br label %while.cond, !dbg !14903, !llvm.loop !14857

sw.bb91:                                          ; preds = %while.body
  %54 = load i32, i32* %c, align 4, !dbg !14904
  %cmp92 = icmp eq i32 %54, 61, !dbg !14906
  br i1 %cmp92, label %if.then97, label %lor.lhs.false94, !dbg !14907

lor.lhs.false94:                                  ; preds = %sw.bb91
  %55 = load i32, i32* %c, align 4, !dbg !14908
  %cmp95 = icmp eq i32 %55, 58, !dbg !14909
  br i1 %cmp95, label %if.then97, label %if.else99, !dbg !14910

if.then97:                                        ; preds = %lor.lhs.false94, %sw.bb91
  %56 = load i8**, i8*** %err_p.addr, align 8, !dbg !14911
  %57 = load i8*, i8** %line_pnt, align 8, !dbg !14913
  %58 = load i8*, i8** %line.addr, align 8, !dbg !14914
  %call98 = call i32 @err_syntax(i8** %56, i8* %57, i8* %58), !dbg !14915
  store i32 %call98, i32* %retval, align 4, !dbg !14916
  br label %return, !dbg !14916

if.else99:                                        ; preds = %lor.lhs.false94
  %call100 = call i16** @__ctype_b_loc() #14, !dbg !14917
  %59 = load i16*, i16** %call100, align 8, !dbg !14917
  %60 = load i32, i32* %c, align 4, !dbg !14917
  %idxprom101 = sext i32 %60 to i64, !dbg !14917
  %arrayidx102 = getelementptr i16, i16* %59, i64 %idxprom101, !dbg !14917
  %61 = load i16, i16* %arrayidx102, align 2, !dbg !14917
  %conv103 = zext i16 %61 to i32, !dbg !14917
  %and104 = and i32 %conv103, 8192, !dbg !14917
  %tobool105 = icmp ne i32 %and104, 0, !dbg !14917
  br i1 %tobool105, label %if.then106, label %if.else108, !dbg !14919

if.then106:                                       ; preds = %if.else99
  %62 = load i8*, i8** %line_pnt, align 8, !dbg !14920
  %incdec.ptr107 = getelementptr i8, i8* %62, i32 1, !dbg !14920
  store i8* %incdec.ptr107, i8** %line_pnt, align 8, !dbg !14920
  br label %if.end118, !dbg !14922

if.else108:                                       ; preds = %if.else99
  %63 = load i8*, i8** %in_pnt, align 8, !dbg !14923
  %64 = load i8, i8* %63, align 1, !dbg !14926
  %conv109 = sext i8 %64 to i32, !dbg !14926
  %cmp110 = icmp eq i32 %conv109, 0, !dbg !14927
  br i1 %cmp110, label %if.then115, label %lor.lhs.false112, !dbg !14928

lor.lhs.false112:                                 ; preds = %if.else108
  %65 = load i8*, i8** %in_pnt, align 8, !dbg !14929
  %66 = load i8*, i8** %prop_name, align 8, !dbg !14930
  %cmp113 = icmp eq i8* %65, %66, !dbg !14931
  br i1 %cmp113, label %if.then115, label %if.end117, !dbg !14932

if.then115:                                       ; preds = %lor.lhs.false112, %if.else108
  %67 = load i8**, i8*** %err_p.addr, align 8, !dbg !14933
  %68 = load i8*, i8** %line_pnt, align 8, !dbg !14935
  %69 = load i8*, i8** %line.addr, align 8, !dbg !14936
  %call116 = call i32 @err_syntax(i8** %67, i8* %68, i8* %69), !dbg !14937
  store i32 %call116, i32* %retval, align 4, !dbg !14938
  br label %return, !dbg !14938

if.end117:                                        ; preds = %lor.lhs.false112
  %70 = load i8*, i8** %line_pnt, align 8, !dbg !14939
  store i8* %70, i8** %wildcard_start, align 8, !dbg !14940
  store i32 5, i32* %state, align 4, !dbg !14941
  br label %if.end118

if.end118:                                        ; preds = %if.end117, %if.then106
  br label %if.end119

if.end119:                                        ; preds = %if.end118
  br label %while.cond, !dbg !14942, !llvm.loop !14857

sw.bb120:                                         ; preds = %while.body
  %71 = load i32, i32* %d, align 4, !dbg !14943
  %cmp121 = icmp eq i32 %71, 0, !dbg !14945
  br i1 %cmp121, label %if.then123, label %if.else125, !dbg !14946

if.then123:                                       ; preds = %sw.bb120
  %72 = load i8**, i8*** %err_p.addr, align 8, !dbg !14947
  %73 = load i8*, i8** %line_pnt, align 8, !dbg !14949
  %74 = load i8*, i8** %line.addr, align 8, !dbg !14950
  %call124 = call i32 @err_mismatch(i8** %72, i8* %73, i8* %74), !dbg !14951
  store i32 %call124, i32* %retval, align 4, !dbg !14952
  br label %return, !dbg !14952

if.else125:                                       ; preds = %sw.bb120
  %75 = load i32, i32* %d, align 4, !dbg !14953
  %cmp126 = icmp eq i32 %75, 40, !dbg !14955
  br i1 %cmp126, label %if.then128, label %if.else130, !dbg !14956

if.then128:                                       ; preds = %if.else125
  %76 = load i8*, i8** %line_pnt, align 8, !dbg !14957
  store i8* %76, i8** %match_start, align 8, !dbg !14959
  %77 = load i8*, i8** %in_pnt, align 8, !dbg !14960
  %incdec.ptr129 = getelementptr i8, i8* %77, i32 1, !dbg !14960
  store i8* %incdec.ptr129, i8** %in_pnt, align 8, !dbg !14960
  br label %if.end225, !dbg !14961

if.else130:                                       ; preds = %if.else125
  %78 = load i32, i32* %d, align 4, !dbg !14962
  %cmp131 = icmp eq i32 %78, 41, !dbg !14964
  br i1 %cmp131, label %if.then133, label %if.else147, !dbg !14965

if.then133:                                       ; preds = %if.else130
  %79 = load i8*, i8** %match_start, align 8, !dbg !14966
  %cmp134 = icmp eq i8* %79, null, !dbg !14969
  br i1 %cmp134, label %if.then143, label %lor.lhs.false136, !dbg !14970

lor.lhs.false136:                                 ; preds = %if.then133
  %80 = load i64, i64* %matches_len, align 8, !dbg !14971
  %cmp137 = icmp uge i64 %80, 10, !dbg !14972
  br i1 %cmp137, label %if.then143, label %lor.lhs.false139, !dbg !14973

lor.lhs.false139:                                 ; preds = %lor.lhs.false136
  %arraydecay = getelementptr inbounds [10 x %struct.Match_], [10 x %struct.Match_]* %matches, i64 0, i64 0, !dbg !14974
  %81 = load i8*, i8** %match_start, align 8, !dbg !14975
  %82 = load i8*, i8** %line_pnt, align 8, !dbg !14976
  %call140 = call i32 @add_to_matches(%struct.Match_* %arraydecay, i64* %matches_len, i8* %81, i8* %82), !dbg !14977
  %cmp141 = icmp ne i32 %call140, 0, !dbg !14978
  br i1 %cmp141, label %if.then143, label %if.end145, !dbg !14979

if.then143:                                       ; preds = %lor.lhs.false139, %lor.lhs.false136, %if.then133
  %83 = load i8**, i8*** %err_p.addr, align 8, !dbg !14980
  %84 = load i8*, i8** %line.addr, align 8, !dbg !14982
  %85 = load i8*, i8** %line.addr, align 8, !dbg !14983
  %call144 = call i32 @err_mismatch(i8** %83, i8* %84, i8* %85), !dbg !14984
  store i32 %call144, i32* %retval, align 4, !dbg !14985
  br label %return, !dbg !14985

if.end145:                                        ; preds = %lor.lhs.false139
  %86 = load i8*, i8** %in_pnt, align 8, !dbg !14986
  %incdec.ptr146 = getelementptr i8, i8* %86, i32 1, !dbg !14986
  store i8* %incdec.ptr146, i8** %in_pnt, align 8, !dbg !14986
  br label %if.end224, !dbg !14987

if.else147:                                       ; preds = %if.else130
  %call148 = call i32 @prefix_match(i8** %in_pnt, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8.521, i64 0, i64 0)), !dbg !14988
  %tobool149 = icmp ne i32 %call148, 0, !dbg !14988
  br i1 %tobool149, label %if.then150, label %if.else151, !dbg !14990

if.then150:                                       ; preds = %if.else147
  store i32 1, i32* %expect_char, align 4, !dbg !14991
  store i32 6, i32* %state, align 4, !dbg !14993
  br label %if.end223, !dbg !14994

if.else151:                                       ; preds = %if.else147
  %call152 = call i32 @prefix_match(i8** %in_pnt, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9.522, i64 0, i64 0)), !dbg !14995
  %tobool153 = icmp ne i32 %call152, 0, !dbg !14995
  br i1 %tobool153, label %if.then154, label %if.else155, !dbg !14997

if.then154:                                       ; preds = %if.else151
  store i32 1, i32* %expect_char, align 4, !dbg !14998
  store i32 7, i32* %state, align 4, !dbg !15000
  br label %if.end222, !dbg !15001

if.else155:                                       ; preds = %if.else151
  %call156 = call i32 @prefix_match(i8** %in_pnt, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10.523, i64 0, i64 0)), !dbg !15002
  %tobool157 = icmp ne i32 %call156, 0, !dbg !15002
  br i1 %tobool157, label %if.then158, label %if.else159, !dbg !15004

if.then158:                                       ; preds = %if.else155
  store i32 1, i32* %expect_char, align 4, !dbg !15005
  store i32 8, i32* %state, align 4, !dbg !15007
  br label %if.end221, !dbg !15008

if.else159:                                       ; preds = %if.else155
  %call160 = call i32 @prefix_match(i8** %in_pnt, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11.524, i64 0, i64 0)), !dbg !15009
  %tobool161 = icmp ne i32 %call160, 0, !dbg !15009
  br i1 %tobool161, label %if.then162, label %if.else163, !dbg !15011

if.then162:                                       ; preds = %if.else159
  store i32 1, i32* %expect_char, align 4, !dbg !15012
  store i32 9, i32* %state, align 4, !dbg !15014
  br label %if.end220, !dbg !15015

if.else163:                                       ; preds = %if.else159
  %call164 = call i32 @prefix_match(i8** %in_pnt, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12.525, i64 0, i64 0)), !dbg !15016
  %tobool165 = icmp ne i32 %call164, 0, !dbg !15016
  br i1 %tobool165, label %if.then166, label %if.else167, !dbg !15018

if.then166:                                       ; preds = %if.else163
  store i32 1, i32* %expect_char, align 4, !dbg !15019
  store i32 10, i32* %state, align 4, !dbg !15021
  br label %if.end219, !dbg !15022

if.else167:                                       ; preds = %if.else163
  %call168 = call i32 @prefix_match(i8** %in_pnt, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.526, i64 0, i64 0)), !dbg !15023
  %tobool169 = icmp ne i32 %call168, 0, !dbg !15023
  br i1 %tobool169, label %if.then170, label %if.else171, !dbg !15025

if.then170:                                       ; preds = %if.else167
  store i32 1, i32* %expect_char, align 4, !dbg !15026
  store i32 11, i32* %state, align 4, !dbg !15028
  br label %if.end218, !dbg !15029

if.else171:                                       ; preds = %if.else167
  %call172 = call i32 @prefix_match(i8** %in_pnt, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14.527, i64 0, i64 0)), !dbg !15030
  %tobool173 = icmp ne i32 %call172, 0, !dbg !15030
  br i1 %tobool173, label %if.then174, label %if.else175, !dbg !15032

if.then174:                                       ; preds = %if.else171
  store i32 1, i32* %expect_char, align 4, !dbg !15033
  store i32 15, i32* %state, align 4, !dbg !15035
  br label %if.end217, !dbg !15036

if.else175:                                       ; preds = %if.else171
  %call176 = call i32 @prefix_match(i8** %in_pnt, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15.528, i64 0, i64 0)), !dbg !15037
  %tobool177 = icmp ne i32 %call176, 0, !dbg !15037
  br i1 %tobool177, label %if.then178, label %if.else182, !dbg !15039

if.then178:                                       ; preds = %if.else175
  %87 = load i32, i32* %is_enabled, align 4, !dbg !15040
  %tobool179 = icmp ne i32 %87, 0, !dbg !15040
  br i1 %tobool179, label %if.then180, label %if.end181, !dbg !15043

if.then180:                                       ; preds = %if.then178
  store i32 6, i32* %retval, align 4, !dbg !15044
  br label %return, !dbg !15044

if.end181:                                        ; preds = %if.then178
  store i32 17, i32* %state, align 4, !dbg !15046
  br label %if.end216, !dbg !15047

if.else182:                                       ; preds = %if.else175
  %88 = load i32, i32* %d, align 4, !dbg !15048
  %cmp183 = icmp eq i32 %88, 60, !dbg !15050
  br i1 %cmp183, label %if.then185, label %if.else186, !dbg !15051

if.then185:                                       ; preds = %if.else182
  store i32 6, i32* %retval, align 4, !dbg !15052
  br label %return, !dbg !15052

if.else186:                                       ; preds = %if.else182
  %call187 = call i16** @__ctype_b_loc() #14, !dbg !15054
  %89 = load i16*, i16** %call187, align 8, !dbg !15054
  %90 = load i32, i32* %d, align 4, !dbg !15054
  %idxprom188 = sext i32 %90 to i64, !dbg !15054
  %arrayidx189 = getelementptr i16, i16* %89, i64 %idxprom188, !dbg !15054
  %91 = load i16, i16* %arrayidx189, align 2, !dbg !15054
  %conv190 = zext i16 %91 to i32, !dbg !15054
  %and191 = and i32 %conv190, 8192, !dbg !15054
  %tobool192 = icmp ne i32 %and191, 0, !dbg !15054
  br i1 %tobool192, label %if.then193, label %if.else195, !dbg !15056

if.then193:                                       ; preds = %if.else186
  %92 = load i8*, i8** %in_pnt, align 8, !dbg !15057
  %incdec.ptr194 = getelementptr i8, i8* %92, i32 1, !dbg !15057
  store i8* %incdec.ptr194, i8** %in_pnt, align 8, !dbg !15057
  store i32 1, i32* %expect_char, align 4, !dbg !15059
  store i32 16, i32* %state, align 4, !dbg !15060
  br label %if.end214, !dbg !15061

if.else195:                                       ; preds = %if.else186
  %call196 = call i16** @__ctype_b_loc() #14, !dbg !15062
  %93 = load i16*, i16** %call196, align 8, !dbg !15062
  %94 = load i32, i32* %d, align 4, !dbg !15062
  %idxprom197 = sext i32 %94 to i64, !dbg !15062
  %arrayidx198 = getelementptr i16, i16* %93, i64 %idxprom197, !dbg !15062
  %95 = load i16, i16* %arrayidx198, align 2, !dbg !15062
  %conv199 = zext i16 %95 to i32, !dbg !15062
  %and200 = and i32 %conv199, 32768, !dbg !15062
  %tobool201 = icmp ne i32 %and200, 0, !dbg !15062
  br i1 %tobool201, label %if.then202, label %if.else211, !dbg !15064

if.then202:                                       ; preds = %if.else195
  %96 = load i32, i32* %c, align 4, !dbg !15065
  %97 = load i32, i32* %d, align 4, !dbg !15068
  %cmp203 = icmp eq i32 %96, %97, !dbg !15069
  br i1 %cmp203, label %if.then205, label %if.else208, !dbg !15070

if.then205:                                       ; preds = %if.then202
  %98 = load i8*, i8** %in_pnt, align 8, !dbg !15071
  %incdec.ptr206 = getelementptr i8, i8* %98, i32 1, !dbg !15071
  store i8* %incdec.ptr206, i8** %in_pnt, align 8, !dbg !15071
  %99 = load i8*, i8** %line_pnt, align 8, !dbg !15073
  %incdec.ptr207 = getelementptr i8, i8* %99, i32 1, !dbg !15073
  store i8* %incdec.ptr207, i8** %line_pnt, align 8, !dbg !15073
  br label %if.end210, !dbg !15074

if.else208:                                       ; preds = %if.then202
  %100 = load i8**, i8*** %err_p.addr, align 8, !dbg !15075
  %101 = load i8*, i8** %line_pnt, align 8, !dbg !15077
  %102 = load i8*, i8** %line.addr, align 8, !dbg !15078
  %call209 = call i32 @err_mismatch(i8** %100, i8* %101, i8* %102), !dbg !15079
  store i32 %call209, i32* %retval, align 4, !dbg !15080
  br label %return, !dbg !15080

if.end210:                                        ; preds = %if.then205
  br label %if.end213, !dbg !15081

if.else211:                                       ; preds = %if.else195
  %103 = load i8**, i8*** %err_p.addr, align 8, !dbg !15082
  %104 = load i8*, i8** %line_pnt, align 8, !dbg !15084
  %105 = load i8*, i8** %line.addr, align 8, !dbg !15085
  %call212 = call i32 @err_mismatch(i8** %103, i8* %104, i8* %105), !dbg !15086
  store i32 %call212, i32* %retval, align 4, !dbg !15087
  br label %return, !dbg !15087

if.end213:                                        ; preds = %if.end210
  br label %if.end214

if.end214:                                        ; preds = %if.end213, %if.then193
  br label %if.end215

if.end215:                                        ; preds = %if.end214
  br label %if.end216

if.end216:                                        ; preds = %if.end215, %if.end181
  br label %if.end217

if.end217:                                        ; preds = %if.end216, %if.then174
  br label %if.end218

if.end218:                                        ; preds = %if.end217, %if.then170
  br label %if.end219

if.end219:                                        ; preds = %if.end218, %if.then166
  br label %if.end220

if.end220:                                        ; preds = %if.end219, %if.then162
  br label %if.end221

if.end221:                                        ; preds = %if.end220, %if.then158
  br label %if.end222

if.end222:                                        ; preds = %if.end221, %if.then154
  br label %if.end223

if.end223:                                        ; preds = %if.end222, %if.then150
  br label %if.end224

if.end224:                                        ; preds = %if.end223, %if.end145
  br label %if.end225

if.end225:                                        ; preds = %if.end224, %if.then128
  br label %if.end226

if.end226:                                        ; preds = %if.end225
  br label %while.cond, !dbg !15088, !llvm.loop !14857

sw.bb227:                                         ; preds = %while.body
  %call228 = call i16** @__ctype_b_loc() #14, !dbg !15089
  %106 = load i16*, i16** %call228, align 8, !dbg !15089
  %107 = load i32, i32* %c, align 4, !dbg !15089
  %idxprom229 = sext i32 %107 to i64, !dbg !15089
  %arrayidx230 = getelementptr i16, i16* %106, i64 %idxprom229, !dbg !15089
  %108 = load i16, i16* %arrayidx230, align 2, !dbg !15089
  %conv231 = zext i16 %108 to i32, !dbg !15089
  %and232 = and i32 %conv231, 1024, !dbg !15089
  %tobool233 = icmp ne i32 %and232, 0, !dbg !15089
  br i1 %tobool233, label %if.then234, label %if.else236, !dbg !15091

if.then234:                                       ; preds = %sw.bb227
  store i32 0, i32* %expect_char, align 4, !dbg !15092
  %109 = load i8*, i8** %line_pnt, align 8, !dbg !15094
  %incdec.ptr235 = getelementptr i8, i8* %109, i32 1, !dbg !15094
  store i8* %incdec.ptr235, i8** %line_pnt, align 8, !dbg !15094
  br label %if.end237, !dbg !15095

if.else236:                                       ; preds = %sw.bb227
  store i32 5, i32* %state, align 4, !dbg !15096
  br label %if.end237

if.end237:                                        ; preds = %if.else236, %if.then234
  br label %while.cond, !dbg !15098, !llvm.loop !14857

sw.bb238:                                         ; preds = %while.body
  %call239 = call i16** @__ctype_b_loc() #14, !dbg !15099
  %110 = load i16*, i16** %call239, align 8, !dbg !15099
  %111 = load i32, i32* %c, align 4, !dbg !15099
  %idxprom240 = sext i32 %111 to i64, !dbg !15099
  %arrayidx241 = getelementptr i16, i16* %110, i64 %idxprom240, !dbg !15099
  %112 = load i16, i16* %arrayidx241, align 2, !dbg !15099
  %conv242 = zext i16 %112 to i32, !dbg !15099
  %and243 = and i32 %conv242, 8, !dbg !15099
  %tobool244 = icmp ne i32 %and243, 0, !dbg !15099
  br i1 %tobool244, label %if.then245, label %if.else247, !dbg !15101

if.then245:                                       ; preds = %sw.bb238
  store i32 0, i32* %expect_char, align 4, !dbg !15102
  %113 = load i8*, i8** %line_pnt, align 8, !dbg !15104
  %incdec.ptr246 = getelementptr i8, i8* %113, i32 1, !dbg !15104
  store i8* %incdec.ptr246, i8** %line_pnt, align 8, !dbg !15104
  br label %if.end248, !dbg !15105

if.else247:                                       ; preds = %sw.bb238
  store i32 5, i32* %state, align 4, !dbg !15106
  br label %if.end248

if.end248:                                        ; preds = %if.else247, %if.then245
  br label %while.cond, !dbg !15108, !llvm.loop !14857

sw.bb249:                                         ; preds = %while.body
  %call250 = call i16** @__ctype_b_loc() #14, !dbg !15109
  %114 = load i16*, i16** %call250, align 8, !dbg !15109
  %115 = load i32, i32* %c, align 4, !dbg !15109
  %idxprom251 = sext i32 %115 to i64, !dbg !15109
  %arrayidx252 = getelementptr i16, i16* %114, i64 %idxprom251, !dbg !15109
  %116 = load i16, i16* %arrayidx252, align 2, !dbg !15109
  %conv253 = zext i16 %116 to i32, !dbg !15109
  %and254 = and i32 %conv253, 2048, !dbg !15109
  %tobool255 = icmp ne i32 %and254, 0, !dbg !15109
  br i1 %tobool255, label %if.then256, label %if.else258, !dbg !15111

if.then256:                                       ; preds = %sw.bb249
  store i32 0, i32* %expect_char, align 4, !dbg !15112
  %117 = load i8*, i8** %line_pnt, align 8, !dbg !15114
  %incdec.ptr257 = getelementptr i8, i8* %117, i32 1, !dbg !15114
  store i8* %incdec.ptr257, i8** %line_pnt, align 8, !dbg !15114
  br label %if.end259, !dbg !15115

if.else258:                                       ; preds = %sw.bb249
  store i32 5, i32* %state, align 4, !dbg !15116
  br label %if.end259

if.end259:                                        ; preds = %if.else258, %if.then256
  br label %while.cond, !dbg !15118, !llvm.loop !14857

sw.bb260:                                         ; preds = %while.body
  %call261 = call i16** @__ctype_b_loc() #14, !dbg !15119
  %118 = load i16*, i16** %call261, align 8, !dbg !15119
  %119 = load i32, i32* %c, align 4, !dbg !15119
  %idxprom262 = sext i32 %119 to i64, !dbg !15119
  %arrayidx263 = getelementptr i16, i16* %118, i64 %idxprom262, !dbg !15119
  %120 = load i16, i16* %arrayidx263, align 2, !dbg !15119
  %conv264 = zext i16 %120 to i32, !dbg !15119
  %and265 = and i32 %conv264, 4096, !dbg !15119
  %tobool266 = icmp ne i32 %and265, 0, !dbg !15119
  br i1 %tobool266, label %if.then267, label %if.else269, !dbg !15121

if.then267:                                       ; preds = %sw.bb260
  %121 = load i8*, i8** %line_pnt, align 8, !dbg !15122
  %incdec.ptr268 = getelementptr i8, i8* %121, i32 1, !dbg !15122
  store i8* %incdec.ptr268, i8** %line_pnt, align 8, !dbg !15122
  br label %if.end270, !dbg !15124

if.else269:                                       ; preds = %sw.bb260
  store i32 5, i32* %state, align 4, !dbg !15125
  br label %if.end270

if.end270:                                        ; preds = %if.else269, %if.then267
  br label %while.cond, !dbg !15127, !llvm.loop !14857

sw.bb271:                                         ; preds = %while.body
  %call272 = call i16** @__ctype_b_loc() #14, !dbg !15128
  %122 = load i16*, i16** %call272, align 8, !dbg !15128
  %123 = load i32, i32* %c, align 4, !dbg !15128
  %idxprom273 = sext i32 %123 to i64, !dbg !15128
  %arrayidx274 = getelementptr i16, i16* %122, i64 %idxprom273, !dbg !15128
  %124 = load i16, i16* %arrayidx274, align 2, !dbg !15128
  %conv275 = zext i16 %124 to i32, !dbg !15128
  %and276 = and i32 %conv275, 32768, !dbg !15128
  %tobool277 = icmp ne i32 %and276, 0, !dbg !15128
  br i1 %tobool277, label %if.then278, label %if.else280, !dbg !15130

if.then278:                                       ; preds = %sw.bb271
  store i32 0, i32* %expect_char, align 4, !dbg !15131
  %125 = load i8*, i8** %line_pnt, align 8, !dbg !15133
  %incdec.ptr279 = getelementptr i8, i8* %125, i32 1, !dbg !15133
  store i8* %incdec.ptr279, i8** %line_pnt, align 8, !dbg !15133
  br label %if.end281, !dbg !15134

if.else280:                                       ; preds = %sw.bb271
  store i32 5, i32* %state, align 4, !dbg !15135
  br label %if.end281

if.end281:                                        ; preds = %if.else280, %if.then278
  br label %while.cond, !dbg !15137, !llvm.loop !14857

sw.bb282:                                         ; preds = %while.body
  %126 = load i32, i32* %c, align 4, !dbg !15138
  %cmp283 = icmp eq i32 %126, 34, !dbg !15140
  br i1 %cmp283, label %if.then285, label %if.else297, !dbg !15141

if.then285:                                       ; preds = %sw.bb282
  %127 = load i8*, i8** %match_start, align 8, !dbg !15142
  %128 = load i8*, i8** %line_pnt, align 8, !dbg !15145
  %cmp286 = icmp eq i8* %127, %128, !dbg !15146
  br i1 %cmp286, label %if.then288, label %if.else290, !dbg !15147

if.then288:                                       ; preds = %if.then285
  %129 = load i8*, i8** %match_start, align 8, !dbg !15148
  %incdec.ptr289 = getelementptr i8, i8* %129, i32 1, !dbg !15148
  store i8* %incdec.ptr289, i8** %match_start, align 8, !dbg !15148
  br label %if.end295, !dbg !15150

if.else290:                                       ; preds = %if.then285
  %130 = load i8*, i8** %match_start, align 8, !dbg !15151
  %cmp291 = icmp ne i8* %130, null, !dbg !15153
  br i1 %cmp291, label %if.then293, label %if.end294, !dbg !15154

if.then293:                                       ; preds = %if.else290
  store i32 6, i32* %retval, align 4, !dbg !15155
  br label %return, !dbg !15155

if.end294:                                        ; preds = %if.else290
  br label %if.end295

if.end295:                                        ; preds = %if.end294, %if.then288
  %131 = load i8*, i8** %line_pnt, align 8, !dbg !15157
  %incdec.ptr296 = getelementptr i8, i8* %131, i32 1, !dbg !15157
  store i8* %incdec.ptr296, i8** %line_pnt, align 8, !dbg !15157
  store i32 12, i32* %state, align 4, !dbg !15158
  br label %if.end308, !dbg !15159

if.else297:                                       ; preds = %sw.bb282
  %call298 = call i16** @__ctype_b_loc() #14, !dbg !15160
  %132 = load i16*, i16** %call298, align 8, !dbg !15160
  %133 = load i32, i32* %c, align 4, !dbg !15160
  %idxprom299 = sext i32 %133 to i64, !dbg !15160
  %arrayidx300 = getelementptr i16, i16* %132, i64 %idxprom299, !dbg !15160
  %134 = load i16, i16* %arrayidx300, align 2, !dbg !15160
  %conv301 = zext i16 %134 to i32, !dbg !15160
  %and302 = and i32 %conv301, 32768, !dbg !15160
  %tobool303 = icmp ne i32 %and302, 0, !dbg !15160
  br i1 %tobool303, label %if.then304, label %if.else306, !dbg !15162

if.then304:                                       ; preds = %if.else297
  store i32 0, i32* %expect_char, align 4, !dbg !15163
  %135 = load i8*, i8** %line_pnt, align 8, !dbg !15165
  %incdec.ptr305 = getelementptr i8, i8* %135, i32 1, !dbg !15165
  store i8* %incdec.ptr305, i8** %line_pnt, align 8, !dbg !15165
  store i32 14, i32* %state, align 4, !dbg !15166
  br label %if.end307, !dbg !15167

if.else306:                                       ; preds = %if.else297
  store i32 5, i32* %state, align 4, !dbg !15168
  br label %if.end307

if.end307:                                        ; preds = %if.else306, %if.then304
  br label %if.end308

if.end308:                                        ; preds = %if.end307, %if.end295
  br label %while.cond, !dbg !15170, !llvm.loop !14857

sw.bb309:                                         ; preds = %while.body
  %136 = load i32, i32* %c, align 4, !dbg !15171
  %cmp310 = icmp eq i32 %136, 34, !dbg !15173
  br i1 %cmp310, label %if.then312, label %if.else313, !dbg !15174

if.then312:                                       ; preds = %sw.bb309
  store i32 13, i32* %state, align 4, !dbg !15175
  br label %if.end325, !dbg !15177

if.else313:                                       ; preds = %sw.bb309
  %call314 = call i16** @__ctype_b_loc() #14, !dbg !15178
  %137 = load i16*, i16** %call314, align 8, !dbg !15178
  %138 = load i32, i32* %c, align 4, !dbg !15178
  %idxprom315 = sext i32 %138 to i64, !dbg !15178
  %arrayidx316 = getelementptr i16, i16* %137, i64 %idxprom315, !dbg !15178
  %139 = load i16, i16* %arrayidx316, align 2, !dbg !15178
  %conv317 = zext i16 %139 to i32, !dbg !15178
  %and318 = and i32 %conv317, 16384, !dbg !15178
  %tobool319 = icmp ne i32 %and318, 0, !dbg !15178
  br i1 %tobool319, label %if.then320, label %if.else322, !dbg !15180

if.then320:                                       ; preds = %if.else313
  store i32 0, i32* %expect_char, align 4, !dbg !15181
  %140 = load i8*, i8** %line_pnt, align 8, !dbg !15183
  %incdec.ptr321 = getelementptr i8, i8* %140, i32 1, !dbg !15183
  store i8* %incdec.ptr321, i8** %line_pnt, align 8, !dbg !15183
  br label %if.end324, !dbg !15184

if.else322:                                       ; preds = %if.else313
  %141 = load i8**, i8*** %err_p.addr, align 8, !dbg !15185
  %142 = load i8*, i8** %line_pnt, align 8, !dbg !15187
  %143 = load i8*, i8** %line.addr, align 8, !dbg !15188
  %call323 = call i32 @err_syntax(i8** %141, i8* %142, i8* %143), !dbg !15189
  store i32 %call323, i32* %retval, align 4, !dbg !15190
  br label %return, !dbg !15190

if.end324:                                        ; preds = %if.then320
  br label %if.end325

if.end325:                                        ; preds = %if.end324, %if.then312
  br label %while.cond, !dbg !15191, !llvm.loop !14857

sw.bb326:                                         ; preds = %while.body
  %144 = load i32, i32* %d, align 4, !dbg !15192
  %cmp327 = icmp eq i32 %144, 41, !dbg !15194
  br i1 %cmp327, label %if.then329, label %if.end345, !dbg !15195

if.then329:                                       ; preds = %sw.bb326
  %145 = load i8*, i8** %match_start, align 8, !dbg !15196
  %cmp330 = icmp eq i8* %145, null, !dbg !15199
  br i1 %cmp330, label %if.then340, label %lor.lhs.false332, !dbg !15200

lor.lhs.false332:                                 ; preds = %if.then329
  %146 = load i64, i64* %matches_len, align 8, !dbg !15201
  %cmp333 = icmp uge i64 %146, 10, !dbg !15202
  br i1 %cmp333, label %if.then340, label %lor.lhs.false335, !dbg !15203

lor.lhs.false335:                                 ; preds = %lor.lhs.false332
  %arraydecay336 = getelementptr inbounds [10 x %struct.Match_], [10 x %struct.Match_]* %matches, i64 0, i64 0, !dbg !15204
  %147 = load i8*, i8** %match_start, align 8, !dbg !15205
  %148 = load i8*, i8** %line_pnt, align 8, !dbg !15206
  %call337 = call i32 @add_to_matches(%struct.Match_* %arraydecay336, i64* %matches_len, i8* %147, i8* %148), !dbg !15207
  %cmp338 = icmp ne i32 %call337, 0, !dbg !15208
  br i1 %cmp338, label %if.then340, label %if.end342, !dbg !15209

if.then340:                                       ; preds = %lor.lhs.false335, %lor.lhs.false332, %if.then329
  %149 = load i8**, i8*** %err_p.addr, align 8, !dbg !15210
  %150 = load i8*, i8** %line.addr, align 8, !dbg !15212
  %151 = load i8*, i8** %line.addr, align 8, !dbg !15213
  %call341 = call i32 @err_mismatch(i8** %149, i8* %150, i8* %151), !dbg !15214
  store i32 %call341, i32* %retval, align 4, !dbg !15215
  br label %return, !dbg !15215

if.end342:                                        ; preds = %lor.lhs.false335
  store i8* null, i8** %match_start, align 8, !dbg !15216
  %152 = load i8*, i8** %line_pnt, align 8, !dbg !15217
  %incdec.ptr343 = getelementptr i8, i8* %152, i32 1, !dbg !15217
  store i8* %incdec.ptr343, i8** %line_pnt, align 8, !dbg !15217
  %153 = load i8*, i8** %in_pnt, align 8, !dbg !15218
  %incdec.ptr344 = getelementptr i8, i8* %153, i32 1, !dbg !15218
  store i8* %incdec.ptr344, i8** %in_pnt, align 8, !dbg !15218
  br label %if.end345, !dbg !15219

if.end345:                                        ; preds = %if.end342, %sw.bb326
  store i32 5, i32* %state, align 4, !dbg !15220
  br label %while.cond, !dbg !15221, !llvm.loop !14857

sw.bb346:                                         ; preds = %while.body
  %call347 = call i16** @__ctype_b_loc() #14, !dbg !15222
  %154 = load i16*, i16** %call347, align 8, !dbg !15222
  %155 = load i32, i32* %c, align 4, !dbg !15222
  %idxprom348 = sext i32 %155 to i64, !dbg !15222
  %arrayidx349 = getelementptr i16, i16* %154, i64 %idxprom348, !dbg !15222
  %156 = load i16, i16* %arrayidx349, align 2, !dbg !15222
  %conv350 = zext i16 %156 to i32, !dbg !15222
  %and351 = and i32 %conv350, 16384, !dbg !15222
  %tobool352 = icmp ne i32 %and351, 0, !dbg !15222
  br i1 %tobool352, label %if.then353, label %if.else355, !dbg !15224

if.then353:                                       ; preds = %sw.bb346
  store i32 0, i32* %expect_char, align 4, !dbg !15225
  %157 = load i8*, i8** %line_pnt, align 8, !dbg !15227
  %incdec.ptr354 = getelementptr i8, i8* %157, i32 1, !dbg !15227
  store i8* %incdec.ptr354, i8** %line_pnt, align 8, !dbg !15227
  br label %if.end356, !dbg !15228

if.else355:                                       ; preds = %sw.bb346
  store i32 5, i32* %state, align 4, !dbg !15229
  br label %if.end356

if.end356:                                        ; preds = %if.else355, %if.then353
  br label %while.cond, !dbg !15231, !llvm.loop !14857

sw.bb357:                                         ; preds = %while.body
  %call358 = call i16** @__ctype_b_loc() #14, !dbg !15232
  %158 = load i16*, i16** %call358, align 8, !dbg !15232
  %159 = load i32, i32* %c, align 4, !dbg !15232
  %idxprom359 = sext i32 %159 to i64, !dbg !15232
  %arrayidx360 = getelementptr i16, i16* %158, i64 %idxprom359, !dbg !15232
  %160 = load i16, i16* %arrayidx360, align 2, !dbg !15232
  %conv361 = zext i16 %160 to i32, !dbg !15232
  %and362 = and i32 %conv361, 32768, !dbg !15232
  %tobool363 = icmp ne i32 %and362, 0, !dbg !15232
  br i1 %tobool363, label %if.then364, label %if.else366, !dbg !15234

if.then364:                                       ; preds = %sw.bb357
  store i32 0, i32* %expect_char, align 4, !dbg !15235
  %161 = load i8*, i8** %line_pnt, align 8, !dbg !15237
  %incdec.ptr365 = getelementptr i8, i8* %161, i32 1, !dbg !15237
  store i8* %incdec.ptr365, i8** %line_pnt, align 8, !dbg !15237
  br label %if.end367, !dbg !15238

if.else366:                                       ; preds = %sw.bb357
  store i32 5, i32* %state, align 4, !dbg !15239
  br label %if.end367

if.end367:                                        ; preds = %if.else366, %if.then364
  br label %while.cond, !dbg !15241, !llvm.loop !14857

sw.bb368:                                         ; preds = %while.body
  %call369 = call i16** @__ctype_b_loc() #14, !dbg !15242
  %162 = load i16*, i16** %call369, align 8, !dbg !15242
  %163 = load i32, i32* %c, align 4, !dbg !15242
  %idxprom370 = sext i32 %163 to i64, !dbg !15242
  %arrayidx371 = getelementptr i16, i16* %162, i64 %idxprom370, !dbg !15242
  %164 = load i16, i16* %arrayidx371, align 2, !dbg !15242
  %conv372 = zext i16 %164 to i32, !dbg !15242
  %and373 = and i32 %conv372, 8192, !dbg !15242
  %tobool374 = icmp ne i32 %and373, 0, !dbg !15242
  br i1 %tobool374, label %if.then375, label %if.else377, !dbg !15244

if.then375:                                       ; preds = %sw.bb368
  store i32 0, i32* %expect_char, align 4, !dbg !15245
  %165 = load i8*, i8** %line_pnt, align 8, !dbg !15247
  %incdec.ptr376 = getelementptr i8, i8* %165, i32 1, !dbg !15247
  store i8* %incdec.ptr376, i8** %line_pnt, align 8, !dbg !15247
  br label %if.end378, !dbg !15248

if.else377:                                       ; preds = %sw.bb368
  store i32 5, i32* %state, align 4, !dbg !15249
  br label %if.end378

if.end378:                                        ; preds = %if.else377, %if.then375
  br label %while.cond, !dbg !15251, !llvm.loop !14857

sw.bb379:                                         ; preds = %while.body
  %call380 = call i32 @prefix_match(i8** %line_pnt, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16.529, i64 0, i64 0)), !dbg !15252
  %tobool381 = icmp ne i32 %call380, 0, !dbg !15252
  br i1 %tobool381, label %if.then391, label %lor.lhs.false382, !dbg !15255

lor.lhs.false382:                                 ; preds = %sw.bb379
  %call383 = call i32 @prefix_match(i8** %line_pnt, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17.530, i64 0, i64 0)), !dbg !15256
  %tobool384 = icmp ne i32 %call383, 0, !dbg !15256
  br i1 %tobool384, label %if.then391, label %lor.lhs.false385, !dbg !15257

lor.lhs.false385:                                 ; preds = %lor.lhs.false382
  %call386 = call i32 @prefix_match(i8** %line_pnt, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18.531, i64 0, i64 0)), !dbg !15258
  %tobool387 = icmp ne i32 %call386, 0, !dbg !15258
  br i1 %tobool387, label %if.then391, label %lor.lhs.false388, !dbg !15259

lor.lhs.false388:                                 ; preds = %lor.lhs.false385
  %call389 = call i32 @prefix_match(i8** %line_pnt, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19.532, i64 0, i64 0)), !dbg !15260
  %tobool390 = icmp ne i32 %call389, 0, !dbg !15260
  br i1 %tobool390, label %if.then391, label %if.else392, !dbg !15261

if.then391:                                       ; preds = %lor.lhs.false388, %lor.lhs.false385, %lor.lhs.false382, %sw.bb379
  store i32 1, i32* %is_enabled, align 4, !dbg !15262
  store i32 5, i32* %state, align 4, !dbg !15264
  br label %if.end408, !dbg !15265

if.else392:                                       ; preds = %lor.lhs.false388
  %call393 = call i32 @prefix_match(i8** %line_pnt, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20.533, i64 0, i64 0)), !dbg !15266
  %tobool394 = icmp ne i32 %call393, 0, !dbg !15266
  br i1 %tobool394, label %if.then404, label %lor.lhs.false395, !dbg !15268

lor.lhs.false395:                                 ; preds = %if.else392
  %call396 = call i32 @prefix_match(i8** %line_pnt, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21.534, i64 0, i64 0)), !dbg !15269
  %tobool397 = icmp ne i32 %call396, 0, !dbg !15269
  br i1 %tobool397, label %if.then404, label %lor.lhs.false398, !dbg !15270

lor.lhs.false398:                                 ; preds = %lor.lhs.false395
  %call399 = call i32 @prefix_match(i8** %line_pnt, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22.535, i64 0, i64 0)), !dbg !15271
  %tobool400 = icmp ne i32 %call399, 0, !dbg !15271
  br i1 %tobool400, label %if.then404, label %lor.lhs.false401, !dbg !15272

lor.lhs.false401:                                 ; preds = %lor.lhs.false398
  %call402 = call i32 @prefix_match(i8** %line_pnt, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23.536, i64 0, i64 0)), !dbg !15273
  %tobool403 = icmp ne i32 %call402, 0, !dbg !15273
  br i1 %tobool403, label %if.then404, label %if.else405, !dbg !15274

if.then404:                                       ; preds = %lor.lhs.false401, %lor.lhs.false398, %lor.lhs.false395, %if.else392
  store i32 0, i32* %is_enabled, align 4, !dbg !15275
  store i32 5, i32* %state, align 4, !dbg !15277
  br label %if.end407, !dbg !15278

if.else405:                                       ; preds = %lor.lhs.false401
  %166 = load i8**, i8*** %err_p.addr, align 8, !dbg !15279
  %167 = load i8*, i8** %line_pnt, align 8, !dbg !15281
  %168 = load i8*, i8** %line.addr, align 8, !dbg !15282
  %call406 = call i32 @err_syntax(i8** %166, i8* %167, i8* %168), !dbg !15283
  store i32 %call406, i32* %retval, align 4, !dbg !15284
  br label %return, !dbg !15284

if.end407:                                        ; preds = %if.then404
  br label %if.end408

if.end408:                                        ; preds = %if.end407, %if.then391
  br label %while.cond, !dbg !15285, !llvm.loop !14857

sw.default:                                       ; preds = %while.body
  store i32 6, i32* %retval, align 4, !dbg !15286
  br label %return, !dbg !15286

while.end:                                        ; preds = %lor.end
  %169 = load i32, i32* %state, align 4, !dbg !15287
  switch i32 %169, label %sw.default410 [
    i32 5, label %sw.bb409
    i32 6, label %sw.bb409
    i32 7, label %sw.bb409
    i32 8, label %sw.bb409
    i32 9, label %sw.bb409
    i32 10, label %sw.bb409
    i32 11, label %sw.bb409
    i32 13, label %sw.bb409
    i32 14, label %sw.bb409
    i32 15, label %sw.bb409
    i32 16, label %sw.bb409
    i32 17, label %sw.bb409
  ], !dbg !15288

sw.bb409:                                         ; preds = %while.end, %while.end, %while.end, %while.end, %while.end, %while.end, %while.end, %while.end, %while.end, %while.end, %while.end, %while.end
  br label %sw.epilog, !dbg !15289

sw.default410:                                    ; preds = %while.end
  %170 = load i8**, i8*** %err_p.addr, align 8, !dbg !15291
  %171 = load i8*, i8** %line_pnt, align 8, !dbg !15292
  %172 = load i8*, i8** %line.addr, align 8, !dbg !15293
  %call411 = call i32 @err_mismatch(i8** %170, i8* %171, i8* %172), !dbg !15294
  store i32 %call411, i32* %retval, align 4, !dbg !15295
  br label %return, !dbg !15295

sw.epilog:                                        ; preds = %sw.bb409
  %173 = load i32, i32* %expect_char, align 4, !dbg !15296
  %cmp412 = icmp ne i32 %173, 0, !dbg !15298
  br i1 %cmp412, label %if.then414, label %if.end416, !dbg !15299

if.then414:                                       ; preds = %sw.epilog
  %174 = load i8**, i8*** %err_p.addr, align 8, !dbg !15300
  %175 = load i8*, i8** %line_pnt, align 8, !dbg !15302
  %176 = load i8*, i8** %line.addr, align 8, !dbg !15303
  %call415 = call i32 @err_mismatch(i8** %174, i8* %175, i8* %176), !dbg !15304
  store i32 %call415, i32* %retval, align 4, !dbg !15305
  br label %return, !dbg !15305

if.end416:                                        ; preds = %sw.epilog
  %177 = load i8*, i8** %in_pnt, align 8, !dbg !15306
  %178 = load i8, i8* %177, align 1, !dbg !15308
  %conv417 = sext i8 %178 to i32, !dbg !15308
  %cmp418 = icmp eq i32 %conv417, 41, !dbg !15309
  br i1 %cmp418, label %if.then420, label %if.end433, !dbg !15310

if.then420:                                       ; preds = %if.end416
  %179 = load i8*, i8** %match_start, align 8, !dbg !15311
  %cmp421 = icmp eq i8* %179, null, !dbg !15314
  br i1 %cmp421, label %if.then431, label %lor.lhs.false423, !dbg !15315

lor.lhs.false423:                                 ; preds = %if.then420
  %180 = load i64, i64* %matches_len, align 8, !dbg !15316
  %cmp424 = icmp uge i64 %180, 10, !dbg !15317
  br i1 %cmp424, label %if.then431, label %lor.lhs.false426, !dbg !15318

lor.lhs.false426:                                 ; preds = %lor.lhs.false423
  %arraydecay427 = getelementptr inbounds [10 x %struct.Match_], [10 x %struct.Match_]* %matches, i64 0, i64 0, !dbg !15319
  %181 = load i8*, i8** %match_start, align 8, !dbg !15320
  %182 = load i8*, i8** %line_pnt, align 8, !dbg !15321
  %call428 = call i32 @add_to_matches(%struct.Match_* %arraydecay427, i64* %matches_len, i8* %181, i8* %182), !dbg !15322
  %cmp429 = icmp ne i32 %call428, 0, !dbg !15323
  br i1 %cmp429, label %if.then431, label %if.end432, !dbg !15324

if.then431:                                       ; preds = %lor.lhs.false426, %lor.lhs.false423, %if.then420
  store i32 5, i32* %retval, align 4, !dbg !15325
  br label %return, !dbg !15325

if.end432:                                        ; preds = %lor.lhs.false426
  store i8* null, i8** %match_start, align 8, !dbg !15327
  br label %if.end433, !dbg !15328

if.end433:                                        ; preds = %if.end432, %if.end416
  %183 = load i32, i32* %is_boolean, align 4, !dbg !15329
  %cmp434 = icmp ne i32 %183, 0, !dbg !15331
  br i1 %cmp434, label %land.lhs.true436, label %if.end440, !dbg !15332

land.lhs.true436:                                 ; preds = %if.end433
  %184 = load i32, i32* %is_enabled, align 4, !dbg !15333
  %cmp437 = icmp eq i32 %184, 0, !dbg !15334
  br i1 %cmp437, label %if.then439, label %if.end440, !dbg !15335

if.then439:                                       ; preds = %land.lhs.true436
  store i32 2, i32* %retval, align 4, !dbg !15336
  br label %return, !dbg !15336

if.end440:                                        ; preds = %land.lhs.true436, %if.end433
  %185 = load i8*, i8** %wildcard_start, align 8, !dbg !15338
  %cmp441 = icmp eq i8* %185, null, !dbg !15340
  br i1 %cmp441, label %if.then443, label %if.else444, !dbg !15341

if.then443:                                       ; preds = %if.end440
  store i64 0, i64* %wildcard_len, align 8, !dbg !15342
  br label %if.end445, !dbg !15344

if.else444:                                       ; preds = %if.end440
  %186 = load i8*, i8** %line_pnt, align 8, !dbg !15345
  %187 = load i8*, i8** %wildcard_start, align 8, !dbg !15347
  %sub.ptr.lhs.cast = ptrtoint i8* %186 to i64, !dbg !15348
  %sub.ptr.rhs.cast = ptrtoint i8* %187 to i64, !dbg !15348
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !15348
  store i64 %sub.ptr.sub, i64* %wildcard_len, align 8, !dbg !15349
  br label %if.end445

if.end445:                                        ; preds = %if.else444, %if.then443
  %188 = load %struct.SimpleConfEntry_*, %struct.SimpleConfEntry_** %entry.addr, align 8, !dbg !15350
  %out = getelementptr inbounds %struct.SimpleConfEntry_, %struct.SimpleConfEntry_* %188, i32 0, i32 1, !dbg !15351
  %189 = load i8*, i8** %out, align 8, !dbg !15351
  store i8* %189, i8** %out_pnt, align 8, !dbg !15352
  %call446 = call noalias i8* @malloc(i64 65537) #7, !dbg !15353
  store i8* %call446, i8** %arg, align 8, !dbg !15355
  %cmp447 = icmp eq i8* %call446, null, !dbg !15356
  br i1 %cmp447, label %if.then449, label %if.end450, !dbg !15357

if.then449:                                       ; preds = %if.end445
  store i32 7, i32* %retval, align 4, !dbg !15358
  br label %return, !dbg !15358

if.end450:                                        ; preds = %if.end445
  store i64 0, i64* %arg_len, align 8, !dbg !15360
  store i32 19, i32* %state, align 4, !dbg !15361
  br label %while.cond451, !dbg !15362

while.cond451:                                    ; preds = %if.end518, %if.end468, %if.end450
  %190 = load i64, i64* %arg_len, align 8, !dbg !15363
  %cmp452 = icmp ult i64 %190, 65536, !dbg !15364
  br i1 %cmp452, label %land.rhs, label %land.end, !dbg !15365

land.rhs:                                         ; preds = %while.cond451
  %191 = load i8*, i8** %out_pnt, align 8, !dbg !15366
  %192 = load i8, i8* %191, align 1, !dbg !15367
  %conv454 = sext i8 %192 to i32, !dbg !15367
  %cmp455 = icmp ne i32 %conv454, 0, !dbg !15368
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond451
  %193 = phi i1 [ false, %while.cond451 ], [ %cmp455, %land.rhs ], !dbg !15369
  br i1 %193, label %while.body457, label %while.end520, !dbg !15362

while.body457:                                    ; preds = %land.end
  %194 = load i8*, i8** %out_pnt, align 8, !dbg !15370
  %195 = load i8, i8* %194, align 1, !dbg !15372
  %conv458 = zext i8 %195 to i32, !dbg !15372
  store i32 %conv458, i32* %d, align 4, !dbg !15373
  %196 = load i32, i32* %state, align 4, !dbg !15374
  switch i32 %196, label %sw.default519 [
    i32 19, label %sw.bb459
    i32 20, label %sw.bb469
  ], !dbg !15375

sw.bb459:                                         ; preds = %while.body457
  %197 = load i32, i32* %d, align 4, !dbg !15376
  %cmp460 = icmp eq i32 %197, 36, !dbg !15379
  br i1 %cmp460, label %if.then462, label %if.else464, !dbg !15380

if.then462:                                       ; preds = %sw.bb459
  %198 = load i8*, i8** %out_pnt, align 8, !dbg !15381
  %incdec.ptr463 = getelementptr i8, i8* %198, i32 1, !dbg !15381
  store i8* %incdec.ptr463, i8** %out_pnt, align 8, !dbg !15381
  store i32 20, i32* %state, align 4, !dbg !15383
  br label %if.end468, !dbg !15384

if.else464:                                       ; preds = %sw.bb459
  %199 = load i32, i32* %d, align 4, !dbg !15385
  %conv465 = trunc i32 %199 to i8, !dbg !15387
  %200 = load i8*, i8** %arg, align 8, !dbg !15388
  %201 = load i64, i64* %arg_len, align 8, !dbg !15389
  %arrayidx466 = getelementptr i8, i8* %200, i64 %201, !dbg !15388
  store i8 %conv465, i8* %arrayidx466, align 1, !dbg !15390
  %202 = load i64, i64* %arg_len, align 8, !dbg !15391
  %inc = add i64 %202, 1, !dbg !15391
  store i64 %inc, i64* %arg_len, align 8, !dbg !15391
  %203 = load i8*, i8** %out_pnt, align 8, !dbg !15392
  %incdec.ptr467 = getelementptr i8, i8* %203, i32 1, !dbg !15392
  store i8* %incdec.ptr467, i8** %out_pnt, align 8, !dbg !15392
  br label %if.end468

if.end468:                                        ; preds = %if.else464, %if.then462
  br label %while.cond451, !dbg !15393, !llvm.loop !15394

sw.bb469:                                         ; preds = %while.body457
  %204 = load i32, i32* %d, align 4, !dbg !15396
  %cmp470 = icmp eq i32 %204, 42, !dbg !15398
  br i1 %cmp470, label %if.then472, label %if.else487, !dbg !15399

if.then472:                                       ; preds = %sw.bb469
  call void @llvm.dbg.declare(metadata i64* %i, metadata !15400, metadata !DIExpression()), !dbg !15402
  store i64 0, i64* %i, align 8, !dbg !15402
  br label %while.cond473, !dbg !15403

while.cond473:                                    ; preds = %while.body480, %if.then472
  %205 = load i64, i64* %arg_len, align 8, !dbg !15404
  %cmp474 = icmp ult i64 %205, 65536, !dbg !15405
  br i1 %cmp474, label %land.rhs476, label %land.end479, !dbg !15406

land.rhs476:                                      ; preds = %while.cond473
  %206 = load i64, i64* %i, align 8, !dbg !15407
  %207 = load i64, i64* %wildcard_len, align 8, !dbg !15408
  %cmp477 = icmp ult i64 %206, %207, !dbg !15409
  br label %land.end479

land.end479:                                      ; preds = %land.rhs476, %while.cond473
  %208 = phi i1 [ false, %while.cond473 ], [ %cmp477, %land.rhs476 ], !dbg !15410
  br i1 %208, label %while.body480, label %while.end485, !dbg !15403

while.body480:                                    ; preds = %land.end479
  %209 = load i8*, i8** %wildcard_start, align 8, !dbg !15411
  %210 = load i64, i64* %i, align 8, !dbg !15413
  %inc481 = add i64 %210, 1, !dbg !15413
  store i64 %inc481, i64* %i, align 8, !dbg !15413
  %arrayidx482 = getelementptr i8, i8* %209, i64 %210, !dbg !15411
  %211 = load i8, i8* %arrayidx482, align 1, !dbg !15411
  %212 = load i8*, i8** %arg, align 8, !dbg !15414
  %213 = load i64, i64* %arg_len, align 8, !dbg !15415
  %inc483 = add i64 %213, 1, !dbg !15415
  store i64 %inc483, i64* %arg_len, align 8, !dbg !15415
  %arrayidx484 = getelementptr i8, i8* %212, i64 %213, !dbg !15414
  store i8 %211, i8* %arrayidx484, align 1, !dbg !15416
  br label %while.cond473, !dbg !15403, !llvm.loop !15417

while.end485:                                     ; preds = %land.end479
  %214 = load i8*, i8** %out_pnt, align 8, !dbg !15419
  %incdec.ptr486 = getelementptr i8, i8* %214, i32 1, !dbg !15419
  store i8* %incdec.ptr486, i8** %out_pnt, align 8, !dbg !15419
  store i32 19, i32* %state, align 4, !dbg !15420
  br label %if.end518, !dbg !15421

if.else487:                                       ; preds = %sw.bb469
  %215 = load i32, i32* %d, align 4, !dbg !15422
  %cmp488 = icmp sge i32 %215, 48, !dbg !15424
  br i1 %cmp488, label %land.lhs.true490, label %if.else516, !dbg !15425

land.lhs.true490:                                 ; preds = %if.else487
  %216 = load i32, i32* %d, align 4, !dbg !15426
  %cmp491 = icmp sle i32 %216, 57, !dbg !15427
  br i1 %cmp491, label %if.then493, label %if.else516, !dbg !15428

if.then493:                                       ; preds = %land.lhs.true490
  call void @llvm.dbg.declare(metadata i64* %match_id, metadata !15429, metadata !DIExpression()), !dbg !15431
  %217 = load i32, i32* %d, align 4, !dbg !15432
  %sub = sub i32 %217, 48, !dbg !15433
  %conv494 = sext i32 %sub to i64, !dbg !15434
  store i64 %conv494, i64* %match_id, align 8, !dbg !15431
  call void @llvm.dbg.declare(metadata i64* %i495, metadata !15435, metadata !DIExpression()), !dbg !15436
  store i64 0, i64* %i495, align 8, !dbg !15436
  %218 = load i64, i64* %match_id, align 8, !dbg !15437
  %219 = load i64, i64* %matches_len, align 8, !dbg !15439
  %cmp496 = icmp uge i64 %218, %219, !dbg !15440
  br i1 %cmp496, label %if.then498, label %if.end499, !dbg !15441

if.then498:                                       ; preds = %if.then493
  store i32 6, i32* %retval, align 4, !dbg !15442
  br label %return, !dbg !15442

if.end499:                                        ; preds = %if.then493
  br label %while.cond500, !dbg !15444

while.cond500:                                    ; preds = %while.body508, %if.end499
  %220 = load i64, i64* %arg_len, align 8, !dbg !15445
  %cmp501 = icmp ult i64 %220, 65536, !dbg !15446
  br i1 %cmp501, label %land.rhs503, label %land.end507, !dbg !15447

land.rhs503:                                      ; preds = %while.cond500
  %221 = load i64, i64* %i495, align 8, !dbg !15448
  %222 = load i64, i64* %match_id, align 8, !dbg !15449
  %arrayidx504 = getelementptr [10 x %struct.Match_], [10 x %struct.Match_]* %matches, i64 0, i64 %222, !dbg !15450
  %str_len = getelementptr inbounds %struct.Match_, %struct.Match_* %arrayidx504, i32 0, i32 1, !dbg !15451
  %223 = load i64, i64* %str_len, align 8, !dbg !15451
  %cmp505 = icmp ult i64 %221, %223, !dbg !15452
  br label %land.end507

land.end507:                                      ; preds = %land.rhs503, %while.cond500
  %224 = phi i1 [ false, %while.cond500 ], [ %cmp505, %land.rhs503 ], !dbg !15453
  br i1 %224, label %while.body508, label %while.end514, !dbg !15444

while.body508:                                    ; preds = %land.end507
  %225 = load i64, i64* %match_id, align 8, !dbg !15454
  %arrayidx509 = getelementptr [10 x %struct.Match_], [10 x %struct.Match_]* %matches, i64 0, i64 %225, !dbg !15456
  %str = getelementptr inbounds %struct.Match_, %struct.Match_* %arrayidx509, i32 0, i32 0, !dbg !15457
  %226 = load i8*, i8** %str, align 16, !dbg !15457
  %227 = load i64, i64* %i495, align 8, !dbg !15458
  %inc510 = add i64 %227, 1, !dbg !15458
  store i64 %inc510, i64* %i495, align 8, !dbg !15458
  %arrayidx511 = getelementptr i8, i8* %226, i64 %227, !dbg !15456
  %228 = load i8, i8* %arrayidx511, align 1, !dbg !15456
  %229 = load i8*, i8** %arg, align 8, !dbg !15459
  %230 = load i64, i64* %arg_len, align 8, !dbg !15460
  %inc512 = add i64 %230, 1, !dbg !15460
  store i64 %inc512, i64* %arg_len, align 8, !dbg !15460
  %arrayidx513 = getelementptr i8, i8* %229, i64 %230, !dbg !15459
  store i8 %228, i8* %arrayidx513, align 1, !dbg !15461
  br label %while.cond500, !dbg !15444, !llvm.loop !15462

while.end514:                                     ; preds = %land.end507
  %231 = load i8*, i8** %out_pnt, align 8, !dbg !15464
  %incdec.ptr515 = getelementptr i8, i8* %231, i32 1, !dbg !15464
  store i8* %incdec.ptr515, i8** %out_pnt, align 8, !dbg !15464
  store i32 19, i32* %state, align 4, !dbg !15465
  br label %if.end517, !dbg !15466

if.else516:                                       ; preds = %land.lhs.true490, %if.else487
  %232 = load i8*, i8** %arg, align 8, !dbg !15467
  call void @free(i8* %232) #7, !dbg !15469
  store i32 6, i32* %retval, align 4, !dbg !15470
  br label %return, !dbg !15470

if.end517:                                        ; preds = %while.end514
  br label %if.end518

if.end518:                                        ; preds = %if.end517, %while.end485
  br label %while.cond451, !dbg !15471, !llvm.loop !15394

sw.default519:                                    ; preds = %while.body457
  call void @abort() #13, !dbg !15472
  unreachable, !dbg !15472

while.end520:                                     ; preds = %land.end
  %233 = load i64, i64* %arg_len, align 8, !dbg !15473
  %cmp521 = icmp uge i64 %233, 65536, !dbg !15475
  br i1 %cmp521, label %if.then523, label %if.end525, !dbg !15476

if.then523:                                       ; preds = %while.end520
  %234 = load i8*, i8** %arg, align 8, !dbg !15477
  call void @free(i8* %234) #7, !dbg !15479
  %call524 = call i32* @__errno_location() #14, !dbg !15480
  store i32 7, i32* %call524, align 4, !dbg !15481
  store i32 8, i32* %retval, align 4, !dbg !15482
  br label %return, !dbg !15482

if.end525:                                        ; preds = %while.end520
  %235 = load i8*, i8** %arg, align 8, !dbg !15483
  %236 = load i64, i64* %arg_len, align 8, !dbg !15484
  %arrayidx526 = getelementptr i8, i8* %235, i64 %236, !dbg !15483
  store i8 0, i8* %arrayidx526, align 1, !dbg !15485
  %237 = load i8*, i8** %arg, align 8, !dbg !15486
  %238 = load i8**, i8*** %arg_p.addr, align 8, !dbg !15487
  store i8* %237, i8** %238, align 8, !dbg !15488
  %239 = load i32, i32* %is_special, align 4, !dbg !15489
  %tobool527 = icmp ne i32 %239, 0, !dbg !15489
  br i1 %tobool527, label %if.then528, label %if.end529, !dbg !15491

if.then528:                                       ; preds = %if.end525
  store i32 9, i32* %retval, align 4, !dbg !15492
  br label %return, !dbg !15492

if.end529:                                        ; preds = %if.end525
  store i32 1, i32* %retval, align 4, !dbg !15494
  br label %return, !dbg !15494

return:                                           ; preds = %if.end529, %if.then528, %if.then523, %if.else516, %if.then498, %if.then449, %if.then439, %if.then431, %if.then414, %sw.default410, %sw.default, %if.else405, %if.then340, %if.else322, %if.then293, %if.else211, %if.else208, %if.then185, %if.then180, %if.then143, %if.then123, %if.then115, %if.then97, %if.else67, %if.else45, %if.then
  %240 = load i32, i32* %retval, align 4, !dbg !15495
  ret i32 %240, !dbg !15495
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i8* @skip_spaces(i8* %str) #0 !dbg !15496 {
entry:
  %str.addr = alloca i8*, align 8
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !15499, metadata !DIExpression()), !dbg !15500
  br label %while.cond, !dbg !15501

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i8*, i8** %str.addr, align 8, !dbg !15502
  %1 = load i8, i8* %0, align 1, !dbg !15503
  %conv = sext i8 %1 to i32, !dbg !15503
  %cmp = icmp ne i32 %conv, 0, !dbg !15504
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !15505

land.rhs:                                         ; preds = %while.cond
  %call = call i16** @__ctype_b_loc() #14, !dbg !15506
  %2 = load i16*, i16** %call, align 8, !dbg !15506
  %3 = load i8*, i8** %str.addr, align 8, !dbg !15506
  %4 = load i8, i8* %3, align 1, !dbg !15506
  %conv2 = zext i8 %4 to i32, !dbg !15506
  %idxprom = sext i32 %conv2 to i64, !dbg !15506
  %arrayidx = getelementptr i16, i16* %2, i64 %idxprom, !dbg !15506
  %5 = load i16, i16* %arrayidx, align 2, !dbg !15506
  %conv3 = zext i16 %5 to i32, !dbg !15506
  %and = and i32 %conv3, 8192, !dbg !15506
  %tobool = icmp ne i32 %and, 0, !dbg !15505
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %6 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ], !dbg !15507
  br i1 %6, label %while.body, label %while.end, !dbg !15501

while.body:                                       ; preds = %land.end
  %7 = load i8*, i8** %str.addr, align 8, !dbg !15508
  %incdec.ptr = getelementptr i8, i8* %7, i32 1, !dbg !15508
  store i8* %incdec.ptr, i8** %str.addr, align 8, !dbg !15508
  br label %while.cond, !dbg !15501, !llvm.loop !15510

while.end:                                        ; preds = %land.end
  %8 = load i8*, i8** %str.addr, align 8, !dbg !15512
  ret i8* %8, !dbg !15513
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @err_syntax(i8** %err_p, i8* %line_pnt, i8* %line) #0 !dbg !15514 {
entry:
  %err_p.addr = alloca i8**, align 8
  %line_pnt.addr = alloca i8*, align 8
  %line.addr = alloca i8*, align 8
  store i8** %err_p, i8*** %err_p.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %err_p.addr, metadata !15517, metadata !DIExpression()), !dbg !15518
  store i8* %line_pnt, i8** %line_pnt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %line_pnt.addr, metadata !15519, metadata !DIExpression()), !dbg !15520
  store i8* %line, i8** %line.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %line.addr, metadata !15521, metadata !DIExpression()), !dbg !15522
  %0 = load i8*, i8** %line_pnt.addr, align 8, !dbg !15523
  %1 = load i8, i8* %0, align 1, !dbg !15524
  %conv = sext i8 %1 to i32, !dbg !15524
  %cmp = icmp ne i32 %conv, 0, !dbg !15525
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !15524

cond.true:                                        ; preds = %entry
  %2 = load i8*, i8** %line_pnt.addr, align 8, !dbg !15526
  br label %cond.end, !dbg !15524

cond.false:                                       ; preds = %entry
  %3 = load i8*, i8** %line.addr, align 8, !dbg !15527
  br label %cond.end, !dbg !15524

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %2, %cond.true ], [ %3, %cond.false ], !dbg !15524
  %4 = load i8**, i8*** %err_p.addr, align 8, !dbg !15528
  store i8* %cond, i8** %4, align 8, !dbg !15529
  ret i32 5, !dbg !15530
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @err_mismatch(i8** %err_p, i8* %line_pnt, i8* %line) #0 !dbg !15531 {
entry:
  %err_p.addr = alloca i8**, align 8
  %line_pnt.addr = alloca i8*, align 8
  %line.addr = alloca i8*, align 8
  store i8** %err_p, i8*** %err_p.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %err_p.addr, metadata !15532, metadata !DIExpression()), !dbg !15533
  store i8* %line_pnt, i8** %line_pnt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %line_pnt.addr, metadata !15534, metadata !DIExpression()), !dbg !15535
  store i8* %line, i8** %line.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %line.addr, metadata !15536, metadata !DIExpression()), !dbg !15537
  %0 = load i8*, i8** %line_pnt.addr, align 8, !dbg !15538
  %1 = load i8, i8* %0, align 1, !dbg !15539
  %conv = sext i8 %1 to i32, !dbg !15539
  %cmp = icmp ne i32 %conv, 0, !dbg !15540
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !15539

cond.true:                                        ; preds = %entry
  %2 = load i8*, i8** %line_pnt.addr, align 8, !dbg !15541
  br label %cond.end, !dbg !15539

cond.false:                                       ; preds = %entry
  %3 = load i8*, i8** %line.addr, align 8, !dbg !15542
  br label %cond.end, !dbg !15539

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %2, %cond.true ], [ %3, %cond.false ], !dbg !15539
  %4 = load i8**, i8*** %err_p.addr, align 8, !dbg !15543
  store i8* %cond, i8** %4, align 8, !dbg !15544
  ret i32 4, !dbg !15545
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @add_to_matches(%struct.Match_* %matches, i64* %matches_len, i8* %start, i8* %end) #0 !dbg !15546 {
entry:
  %retval = alloca i32, align 4
  %matches.addr = alloca %struct.Match_*, align 8
  %matches_len.addr = alloca i64*, align 8
  %start.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %len = alloca i64, align 8
  store %struct.Match_* %matches, %struct.Match_** %matches.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Match_** %matches.addr, metadata !15552, metadata !DIExpression()), !dbg !15553
  store i64* %matches_len, i64** %matches_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %matches_len.addr, metadata !15554, metadata !DIExpression()), !dbg !15555
  store i8* %start, i8** %start.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %start.addr, metadata !15556, metadata !DIExpression()), !dbg !15557
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !15558, metadata !DIExpression()), !dbg !15559
  call void @llvm.dbg.declare(metadata i64* %len, metadata !15560, metadata !DIExpression()), !dbg !15561
  %0 = load i8*, i8** %start.addr, align 8, !dbg !15562
  %call = call i8* @skip_spaces(i8* %0), !dbg !15563
  store i8* %call, i8** %start.addr, align 8, !dbg !15564
  %1 = load i8*, i8** %end.addr, align 8, !dbg !15565
  %2 = load i8*, i8** %start.addr, align 8, !dbg !15566
  %sub.ptr.lhs.cast = ptrtoint i8* %1 to i64, !dbg !15567
  %sub.ptr.rhs.cast = ptrtoint i8* %2 to i64, !dbg !15567
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !15567
  store i64 %sub.ptr.sub, i64* %len, align 8, !dbg !15568
  br label %while.cond, !dbg !15569

while.cond:                                       ; preds = %while.body, %entry
  %3 = load i64, i64* %len, align 8, !dbg !15570
  %cmp = icmp ugt i64 %3, 0, !dbg !15571
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !15572

land.rhs:                                         ; preds = %while.cond
  %call1 = call i16** @__ctype_b_loc() #14, !dbg !15573
  %4 = load i16*, i16** %call1, align 8, !dbg !15573
  %5 = load i8*, i8** %start.addr, align 8, !dbg !15573
  %6 = load i64, i64* %len, align 8, !dbg !15573
  %sub = sub i64 %6, 1, !dbg !15573
  %arrayidx = getelementptr i8, i8* %5, i64 %sub, !dbg !15573
  %7 = load i8, i8* %arrayidx, align 1, !dbg !15573
  %conv = zext i8 %7 to i32, !dbg !15573
  %idxprom = sext i32 %conv to i64, !dbg !15573
  %arrayidx2 = getelementptr i16, i16* %4, i64 %idxprom, !dbg !15573
  %8 = load i16, i16* %arrayidx2, align 2, !dbg !15573
  %conv3 = zext i16 %8 to i32, !dbg !15573
  %and = and i32 %conv3, 8192, !dbg !15573
  %tobool = icmp ne i32 %and, 0, !dbg !15572
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %9 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ], !dbg !15574
  br i1 %9, label %while.body, label %while.end, !dbg !15569

while.body:                                       ; preds = %land.end
  %10 = load i64, i64* %len, align 8, !dbg !15575
  %dec = add i64 %10, -1, !dbg !15575
  store i64 %dec, i64* %len, align 8, !dbg !15575
  br label %while.cond, !dbg !15569, !llvm.loop !15577

while.end:                                        ; preds = %land.end
  %11 = load i64, i64* %len, align 8, !dbg !15579
  %cmp4 = icmp eq i64 %11, 0, !dbg !15581
  br i1 %cmp4, label %if.then, label %if.end, !dbg !15582

if.then:                                          ; preds = %while.end
  store i32 -1, i32* %retval, align 4, !dbg !15583
  br label %return, !dbg !15583

if.end:                                           ; preds = %while.end
  %12 = load i8*, i8** %start.addr, align 8, !dbg !15585
  %13 = load %struct.Match_*, %struct.Match_** %matches.addr, align 8, !dbg !15586
  %14 = load i64*, i64** %matches_len.addr, align 8, !dbg !15587
  %15 = load i64, i64* %14, align 8, !dbg !15588
  %arrayidx6 = getelementptr %struct.Match_, %struct.Match_* %13, i64 %15, !dbg !15586
  %str = getelementptr inbounds %struct.Match_, %struct.Match_* %arrayidx6, i32 0, i32 0, !dbg !15589
  store i8* %12, i8** %str, align 8, !dbg !15590
  %16 = load i64, i64* %len, align 8, !dbg !15591
  %17 = load %struct.Match_*, %struct.Match_** %matches.addr, align 8, !dbg !15592
  %18 = load i64*, i64** %matches_len.addr, align 8, !dbg !15593
  %19 = load i64, i64* %18, align 8, !dbg !15594
  %arrayidx7 = getelementptr %struct.Match_, %struct.Match_* %17, i64 %19, !dbg !15592
  %str_len = getelementptr inbounds %struct.Match_, %struct.Match_* %arrayidx7, i32 0, i32 1, !dbg !15595
  store i64 %16, i64* %str_len, align 8, !dbg !15596
  %20 = load i64*, i64** %matches_len.addr, align 8, !dbg !15597
  %21 = load i64, i64* %20, align 8, !dbg !15598
  %inc = add i64 %21, 1, !dbg !15598
  store i64 %inc, i64* %20, align 8, !dbg !15598
  store i32 0, i32* %retval, align 4, !dbg !15599
  br label %return, !dbg !15599

return:                                           ; preds = %if.end, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !15600
  ret i32 %22, !dbg !15600
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @prefix_match(i8** %str, i8* %prefix) #0 !dbg !15601 {
entry:
  %retval = alloca i32, align 4
  %str.addr = alloca i8**, align 8
  %prefix.addr = alloca i8*, align 8
  %prefix_len = alloca i64, align 8
  %str_len = alloca i64, align 8
  %i = alloca i64, align 8
  %x = alloca i32, align 4
  store i8** %str, i8*** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %str.addr, metadata !15604, metadata !DIExpression()), !dbg !15605
  store i8* %prefix, i8** %prefix.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %prefix.addr, metadata !15606, metadata !DIExpression()), !dbg !15607
  call void @llvm.dbg.declare(metadata i64* %prefix_len, metadata !15608, metadata !DIExpression()), !dbg !15609
  %0 = load i8*, i8** %prefix.addr, align 8, !dbg !15610
  %call = call i64 @strlen(i8* %0) #12, !dbg !15611
  store i64 %call, i64* %prefix_len, align 8, !dbg !15609
  call void @llvm.dbg.declare(metadata i64* %str_len, metadata !15612, metadata !DIExpression()), !dbg !15613
  %1 = load i8**, i8*** %str.addr, align 8, !dbg !15614
  %2 = load i8*, i8** %1, align 8, !dbg !15615
  %call1 = call i64 @strlen(i8* %2) #12, !dbg !15616
  store i64 %call1, i64* %str_len, align 8, !dbg !15613
  call void @llvm.dbg.declare(metadata i64* %i, metadata !15617, metadata !DIExpression()), !dbg !15618
  call void @llvm.dbg.declare(metadata i32* %x, metadata !15619, metadata !DIExpression()), !dbg !15620
  store i32 0, i32* %x, align 4, !dbg !15620
  %3 = load i64, i64* %str_len, align 8, !dbg !15621
  %4 = load i64, i64* %prefix_len, align 8, !dbg !15623
  %cmp = icmp ult i64 %3, %4, !dbg !15624
  br i1 %cmp, label %if.then, label %if.end, !dbg !15625

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !15626
  br label %return, !dbg !15626

if.end:                                           ; preds = %entry
  store i64 0, i64* %i, align 8, !dbg !15628
  br label %for.cond, !dbg !15630

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i64, i64* %i, align 8, !dbg !15631
  %6 = load i64, i64* %prefix_len, align 8, !dbg !15633
  %cmp2 = icmp ult i64 %5, %6, !dbg !15634
  br i1 %cmp2, label %for.body, label %for.end, !dbg !15635

for.body:                                         ; preds = %for.cond
  %7 = load i8**, i8*** %str.addr, align 8, !dbg !15636
  %8 = load i8*, i8** %7, align 8, !dbg !15638
  %9 = load i64, i64* %i, align 8, !dbg !15639
  %arrayidx = getelementptr i8, i8* %8, i64 %9, !dbg !15640
  %10 = load i8, i8* %arrayidx, align 1, !dbg !15640
  %conv = zext i8 %10 to i32, !dbg !15641
  %call3 = call i32 @tolower(i32 %conv) #12, !dbg !15642
  %11 = load i8*, i8** %prefix.addr, align 8, !dbg !15643
  %12 = load i64, i64* %i, align 8, !dbg !15644
  %arrayidx4 = getelementptr i8, i8* %11, i64 %12, !dbg !15643
  %13 = load i8, i8* %arrayidx4, align 1, !dbg !15643
  %conv5 = zext i8 %13 to i32, !dbg !15645
  %call6 = call i32 @tolower(i32 %conv5) #12, !dbg !15646
  %xor = xor i32 %call3, %call6, !dbg !15647
  %14 = load i32, i32* %x, align 4, !dbg !15648
  %or = or i32 %14, %xor, !dbg !15648
  store i32 %or, i32* %x, align 4, !dbg !15648
  br label %for.inc, !dbg !15649

for.inc:                                          ; preds = %for.body
  %15 = load i64, i64* %i, align 8, !dbg !15650
  %inc = add i64 %15, 1, !dbg !15650
  store i64 %inc, i64* %i, align 8, !dbg !15650
  br label %for.cond, !dbg !15651, !llvm.loop !15652

for.end:                                          ; preds = %for.cond
  %16 = load i32, i32* %x, align 4, !dbg !15654
  %cmp7 = icmp eq i32 %16, 0, !dbg !15656
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !15657

if.then9:                                         ; preds = %for.end
  %17 = load i64, i64* %prefix_len, align 8, !dbg !15658
  %18 = load i8**, i8*** %str.addr, align 8, !dbg !15660
  %19 = load i8*, i8** %18, align 8, !dbg !15661
  %add.ptr = getelementptr i8, i8* %19, i64 %17, !dbg !15661
  store i8* %add.ptr, i8** %18, align 8, !dbg !15661
  store i32 1, i32* %retval, align 4, !dbg !15662
  br label %return, !dbg !15662

if.end10:                                         ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !15663
  br label %return, !dbg !15663

return:                                           ; preds = %if.end10, %if.then9, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !15664
  ret i32 %20, !dbg !15664
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local i32 @pure_strcmp(i8* %s1, i8* %s2) #0 !dbg !15665 {
entry:
  %s1.addr = alloca i8*, align 8
  %s2.addr = alloca i8*, align 8
  store i8* %s1, i8** %s1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !15668, metadata !DIExpression()), !dbg !15669
  store i8* %s2, i8** %s2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !15670, metadata !DIExpression()), !dbg !15671
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !15672
  %1 = load i8*, i8** %s2.addr, align 8, !dbg !15672
  %2 = load i8*, i8** %s1.addr, align 8, !dbg !15672
  %call = call i64 @strlen(i8* %2) #12, !dbg !15672
  %add = add i64 %call, 1, !dbg !15672
  %call1 = call i32 @sodium_memcmp(i8* %0, i8* %1, i64 %add), !dbg !15672
  ret i32 %call1, !dbg !15673
}

declare i32 @sodium_memcmp(i8*, i8*, i64) #9

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @alt_arc4random_stir() #0 !dbg !15674 {
entry:
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (%struct.rng_state* @rng_state to i8*), i8 0, i64 560, i1 false), !dbg !15675
  ret void, !dbg !15676
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @alt_arc4random_buf(i8* %buffer, i64 %len) #0 !dbg !15677 {
entry:
  %buffer.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %buffer_ = alloca i8*, align 8
  %off = alloca i64, align 8
  %remaining = alloca i64, align 8
  %partial = alloca i64, align 8
  %ret = alloca i32, align 4
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !15680, metadata !DIExpression()), !dbg !15681
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !15682, metadata !DIExpression()), !dbg !15683
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !15684
  %1 = load i64, i64* %len.addr, align 8, !dbg !15685
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %1, i1 false), !dbg !15686
  ret void, !dbg !15687
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local i32 @alt_arc4random() #0 !dbg !15688 {
entry:
  %v = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %v, metadata !15691, metadata !DIExpression()), !dbg !15692
  %0 = bitcast i32* %v to i8*, !dbg !15693
  call void @alt_arc4random_buf(i8* %0, i64 4), !dbg !15694
  %1 = load i32, i32* %v, align 4, !dbg !15695
  ret i32 %1, !dbg !15696
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local i32 @alt_arc4random_uniform(i32 %upper_bound) #0 !dbg !15697 {
entry:
  %retval = alloca i32, align 4
  %upper_bound.addr = alloca i32, align 4
  %min = alloca i32, align 4
  %r = alloca i32, align 4
  store i32 %upper_bound, i32* %upper_bound.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %upper_bound.addr, metadata !15701, metadata !DIExpression()), !dbg !15702
  call void @llvm.dbg.declare(metadata i32* %min, metadata !15703, metadata !DIExpression()), !dbg !15704
  call void @llvm.dbg.declare(metadata i32* %r, metadata !15705, metadata !DIExpression()), !dbg !15706
  %0 = load i32, i32* %upper_bound.addr, align 4, !dbg !15707
  %cmp = icmp ult i32 %0, 2, !dbg !15709
  br i1 %cmp, label %if.then, label %if.end, !dbg !15710

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !15711
  br label %return, !dbg !15711

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %upper_bound.addr, align 4, !dbg !15713
  %neg = xor i32 %1, -1, !dbg !15714
  %add = add i32 1, %neg, !dbg !15715
  %2 = load i32, i32* %upper_bound.addr, align 4, !dbg !15716
  %rem = urem i32 %add, %2, !dbg !15717
  store i32 %rem, i32* %min, align 4, !dbg !15718
  br label %do.body, !dbg !15719

do.body:                                          ; preds = %do.cond, %if.end
  %call = call i32 @alt_arc4random(), !dbg !15720
  store i32 %call, i32* %r, align 4, !dbg !15722
  br label %do.cond, !dbg !15723

do.cond:                                          ; preds = %do.body
  %3 = load i32, i32* %r, align 4, !dbg !15724
  %4 = load i32, i32* %min, align 4, !dbg !15725
  %cmp1 = icmp ult i32 %3, %4, !dbg !15726
  br i1 %cmp1, label %do.body, label %do.end, !dbg !15723, !llvm.loop !15727

do.end:                                           ; preds = %do.cond
  %5 = load i32, i32* %r, align 4, !dbg !15729
  %6 = load i32, i32* %upper_bound.addr, align 4, !dbg !15730
  %rem2 = urem i32 %5, %6, !dbg !15731
  store i32 %rem2, i32* %retval, align 4, !dbg !15732
  br label %return, !dbg !15732

return:                                           ; preds = %do.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !15733
  ret i32 %7, !dbg !15733
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local i32 @alt_arc4random_close() #0 !dbg !15734 {
entry:
  %retval = alloca i32, align 4
  store i32 0, i32* getelementptr inbounds (%struct.rng_state, %struct.rng_state* @rng_state, i32 0, i32 0), align 8, !dbg !15735
  call void @sodium_memzero(i8* getelementptr inbounds (%struct.rng_state, %struct.rng_state* @rng_state, i32 0, i32 3, i64 0), i64 32), !dbg !15736
  %0 = load i32, i32* getelementptr inbounds (%struct.rng_state, %struct.rng_state* @rng_state, i32 0, i32 1), align 4, !dbg !15737
  %cmp = icmp ne i32 %0, -1, !dbg !15739
  br i1 %cmp, label %if.then, label %if.end, !dbg !15740

if.then:                                          ; preds = %entry
  %1 = load i32, i32* getelementptr inbounds (%struct.rng_state, %struct.rng_state* @rng_state, i32 0, i32 1), align 4, !dbg !15741
  %call = call i32 @close(i32 %1), !dbg !15743
  store i32 %call, i32* %retval, align 4, !dbg !15744
  br label %return, !dbg !15744

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !15745
  br label %return, !dbg !15745

return:                                           ; preds = %if.end, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !15746
  ret i32 %2, !dbg !15746
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local i32 @glob(i8* %pattern, i32 %flags, i32 (i8*, i32)* %errfunc, %struct.glob_t* %pglob) #0 !dbg !15747 {
entry:
  %pattern.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %errfunc.addr = alloca i32 (i8*, i32)*, align 8
  %pglob.addr = alloca %struct.glob_t*, align 8
  store i8* %pattern, i8** %pattern.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pattern.addr, metadata !15772, metadata !DIExpression()), !dbg !15773
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !15774, metadata !DIExpression()), !dbg !15775
  store i32 (i8*, i32)* %errfunc, i32 (i8*, i32)** %errfunc.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i32)** %errfunc.addr, metadata !15776, metadata !DIExpression()), !dbg !15777
  store %struct.glob_t* %pglob, %struct.glob_t** %pglob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.glob_t** %pglob.addr, metadata !15778, metadata !DIExpression()), !dbg !15779
  %0 = load i8*, i8** %pattern.addr, align 8, !dbg !15780
  %1 = load i32, i32* %flags.addr, align 4, !dbg !15781
  %2 = load i32 (i8*, i32)*, i32 (i8*, i32)** %errfunc.addr, align 8, !dbg !15782
  %3 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !15783
  %call = call i32 @glob_(i8* %0, i32 %1, i32 (i8*, i32)* %2, %struct.glob_t* %3, i64 -1, i32 0), !dbg !15784
  ret i32 %call, !dbg !15785
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @glob_(i8* %pattern, i32 %flags, i32 (i8*, i32)* %errfunc, %struct.glob_t* %pglob, i64 %maxfiles, i32 %maxdepth) #0 !dbg !15786 {
entry:
  %retval = alloca i32, align 4
  %pattern.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %errfunc.addr = alloca i32 (i8*, i32)*, align 8
  %pglob.addr = alloca %struct.glob_t*, align 8
  %maxfiles.addr = alloca i64, align 8
  %maxdepth.addr = alloca i32, align 4
  %patnext = alloca i8*, align 8
  %c = alloca i32, align 4
  %bufnext = alloca i16*, align 8
  %bufend = alloca i16*, align 8
  %patbuf = alloca [4096 x i16], align 16
  %limit = alloca %struct.glob_lim, align 8
  store i8* %pattern, i8** %pattern.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pattern.addr, metadata !15789, metadata !DIExpression()), !dbg !15790
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !15791, metadata !DIExpression()), !dbg !15792
  store i32 (i8*, i32)* %errfunc, i32 (i8*, i32)** %errfunc.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i32)** %errfunc.addr, metadata !15793, metadata !DIExpression()), !dbg !15794
  store %struct.glob_t* %pglob, %struct.glob_t** %pglob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.glob_t** %pglob.addr, metadata !15795, metadata !DIExpression()), !dbg !15796
  store i64 %maxfiles, i64* %maxfiles.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %maxfiles.addr, metadata !15797, metadata !DIExpression()), !dbg !15798
  store i32 %maxdepth, i32* %maxdepth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %maxdepth.addr, metadata !15799, metadata !DIExpression()), !dbg !15800
  call void @llvm.dbg.declare(metadata i8** %patnext, metadata !15801, metadata !DIExpression()), !dbg !15802
  call void @llvm.dbg.declare(metadata i32* %c, metadata !15803, metadata !DIExpression()), !dbg !15804
  call void @llvm.dbg.declare(metadata i16** %bufnext, metadata !15805, metadata !DIExpression()), !dbg !15806
  call void @llvm.dbg.declare(metadata i16** %bufend, metadata !15807, metadata !DIExpression()), !dbg !15808
  call void @llvm.dbg.declare(metadata [4096 x i16]* %patbuf, metadata !15809, metadata !DIExpression()), !dbg !15811
  call void @llvm.dbg.declare(metadata %struct.glob_lim* %limit, metadata !15812, metadata !DIExpression()), !dbg !15818
  %0 = bitcast %struct.glob_lim* %limit to i8*, !dbg !15818
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 24, i1 false), !dbg !15818
  %1 = load i32, i32* %flags.addr, align 4, !dbg !15819
  %and = and i32 %1, 8192, !dbg !15821
  %cmp = icmp eq i32 %and, 8192, !dbg !15822
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !15823

land.lhs.true:                                    ; preds = %entry
  %2 = load i8*, i8** %pattern.addr, align 8, !dbg !15824
  %call = call i32 @check_stars(i8* %2), !dbg !15825
  %cmp1 = icmp eq i32 %call, -1, !dbg !15826
  br i1 %cmp1, label %if.then, label %if.end, !dbg !15827

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !15828
  br label %return, !dbg !15828

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load i32, i32* %maxdepth.addr, align 4, !dbg !15830
  %4 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !15831
  %gl_maxdepth = getelementptr inbounds %struct.glob_t, %struct.glob_t* %4, i32 0, i32 1, !dbg !15832
  store i32 %3, i32* %gl_maxdepth, align 8, !dbg !15833
  %5 = load i64, i64* %maxfiles.addr, align 8, !dbg !15834
  %6 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !15835
  %gl_maxfiles = getelementptr inbounds %struct.glob_t, %struct.glob_t* %6, i32 0, i32 0, !dbg !15836
  store i64 %5, i64* %gl_maxfiles, align 8, !dbg !15837
  %7 = load i8*, i8** %pattern.addr, align 8, !dbg !15838
  store i8* %7, i8** %patnext, align 8, !dbg !15839
  %8 = load i32, i32* %flags.addr, align 4, !dbg !15840
  %and2 = and i32 %8, 1, !dbg !15842
  %tobool = icmp ne i32 %and2, 0, !dbg !15842
  br i1 %tobool, label %if.end8, label %if.then3, !dbg !15843

if.then3:                                         ; preds = %if.end
  %9 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !15844
  %gl_pathc = getelementptr inbounds %struct.glob_t, %struct.glob_t* %9, i32 0, i32 2, !dbg !15846
  store i32 0, i32* %gl_pathc, align 4, !dbg !15847
  %10 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !15848
  %gl_pathv = getelementptr inbounds %struct.glob_t, %struct.glob_t* %10, i32 0, i32 6, !dbg !15849
  store i8** null, i8*** %gl_pathv, align 8, !dbg !15850
  %11 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !15851
  %gl_statv = getelementptr inbounds %struct.glob_t, %struct.glob_t* %11, i32 0, i32 7, !dbg !15852
  store %struct.stat** null, %struct.stat*** %gl_statv, align 8, !dbg !15853
  %12 = load i32, i32* %flags.addr, align 4, !dbg !15854
  %and4 = and i32 %12, 2, !dbg !15856
  %tobool5 = icmp ne i32 %and4, 0, !dbg !15856
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !15857

if.then6:                                         ; preds = %if.then3
  %13 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !15858
  %gl_offs = getelementptr inbounds %struct.glob_t, %struct.glob_t* %13, i32 0, i32 4, !dbg !15860
  store i32 0, i32* %gl_offs, align 4, !dbg !15861
  br label %if.end7, !dbg !15862

if.end7:                                          ; preds = %if.then6, %if.then3
  br label %if.end8, !dbg !15863

if.end8:                                          ; preds = %if.end7, %if.end
  %14 = load i32, i32* %flags.addr, align 4, !dbg !15864
  %and9 = and i32 %14, -257, !dbg !15865
  %15 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !15866
  %gl_flags = getelementptr inbounds %struct.glob_t, %struct.glob_t* %15, i32 0, i32 5, !dbg !15867
  store i32 %and9, i32* %gl_flags, align 8, !dbg !15868
  %16 = load i32 (i8*, i32)*, i32 (i8*, i32)** %errfunc.addr, align 8, !dbg !15869
  %17 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !15870
  %gl_errfunc = getelementptr inbounds %struct.glob_t, %struct.glob_t* %17, i32 0, i32 8, !dbg !15871
  store i32 (i8*, i32)* %16, i32 (i8*, i32)** %gl_errfunc, align 8, !dbg !15872
  %18 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !15873
  %gl_matchc = getelementptr inbounds %struct.glob_t, %struct.glob_t* %18, i32 0, i32 3, !dbg !15874
  store i32 0, i32* %gl_matchc, align 8, !dbg !15875
  %19 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !15876
  %gl_offs10 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %19, i32 0, i32 4, !dbg !15878
  %20 = load i32, i32* %gl_offs10, align 4, !dbg !15878
  %cmp11 = icmp slt i32 %20, 0, !dbg !15879
  br i1 %cmp11, label %if.then25, label %lor.lhs.false, !dbg !15880

lor.lhs.false:                                    ; preds = %if.end8
  %21 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !15881
  %gl_pathc12 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %21, i32 0, i32 2, !dbg !15882
  %22 = load i32, i32* %gl_pathc12, align 4, !dbg !15882
  %cmp13 = icmp slt i32 %22, 0, !dbg !15883
  br i1 %cmp13, label %if.then25, label %lor.lhs.false14, !dbg !15884

lor.lhs.false14:                                  ; preds = %lor.lhs.false
  %23 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !15885
  %gl_offs15 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %23, i32 0, i32 4, !dbg !15886
  %24 = load i32, i32* %gl_offs15, align 4, !dbg !15886
  %cmp16 = icmp sge i32 %24, 2147483647, !dbg !15887
  br i1 %cmp16, label %if.then25, label %lor.lhs.false17, !dbg !15888

lor.lhs.false17:                                  ; preds = %lor.lhs.false14
  %25 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !15889
  %gl_pathc18 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %25, i32 0, i32 2, !dbg !15890
  %26 = load i32, i32* %gl_pathc18, align 4, !dbg !15890
  %cmp19 = icmp sge i32 %26, 2147483647, !dbg !15891
  br i1 %cmp19, label %if.then25, label %lor.lhs.false20, !dbg !15892

lor.lhs.false20:                                  ; preds = %lor.lhs.false17
  %27 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !15893
  %gl_pathc21 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %27, i32 0, i32 2, !dbg !15894
  %28 = load i32, i32* %gl_pathc21, align 4, !dbg !15894
  %29 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !15895
  %gl_offs22 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %29, i32 0, i32 4, !dbg !15896
  %30 = load i32, i32* %gl_offs22, align 4, !dbg !15896
  %sub = sub i32 2147483647, %30, !dbg !15897
  %sub23 = sub i32 %sub, 1, !dbg !15898
  %cmp24 = icmp sge i32 %28, %sub23, !dbg !15899
  br i1 %cmp24, label %if.then25, label %if.end26, !dbg !15900

if.then25:                                        ; preds = %lor.lhs.false20, %lor.lhs.false17, %lor.lhs.false14, %lor.lhs.false, %if.end8
  store i32 -1, i32* %retval, align 4, !dbg !15901
  br label %return, !dbg !15901

if.end26:                                         ; preds = %lor.lhs.false20
  %31 = load i8*, i8** %pattern.addr, align 8, !dbg !15903
  %call27 = call i64 @strlen(i8* %31) #12, !dbg !15905
  %cmp28 = icmp uge i64 %call27, 4096, !dbg !15906
  br i1 %cmp28, label %if.then29, label %if.end30, !dbg !15907

if.then29:                                        ; preds = %if.end26
  store i32 -3, i32* %retval, align 4, !dbg !15908
  br label %return, !dbg !15908

if.end30:                                         ; preds = %if.end26
  %arraydecay = getelementptr inbounds [4096 x i16], [4096 x i16]* %patbuf, i64 0, i64 0, !dbg !15910
  store i16* %arraydecay, i16** %bufnext, align 8, !dbg !15911
  %32 = load i16*, i16** %bufnext, align 8, !dbg !15912
  %add.ptr = getelementptr i16, i16* %32, i64 4096, !dbg !15913
  %add.ptr31 = getelementptr i16, i16* %add.ptr, i64 -1, !dbg !15914
  store i16* %add.ptr31, i16** %bufend, align 8, !dbg !15915
  %33 = load i32, i32* %flags.addr, align 4, !dbg !15916
  %and32 = and i32 %33, 4096, !dbg !15918
  %tobool33 = icmp ne i32 %and32, 0, !dbg !15918
  br i1 %tobool33, label %if.then34, label %if.else, !dbg !15919

if.then34:                                        ; preds = %if.end30
  br label %while.cond, !dbg !15920

while.cond:                                       ; preds = %while.body, %if.then34
  %34 = load i16*, i16** %bufnext, align 8, !dbg !15922
  %35 = load i16*, i16** %bufend, align 8, !dbg !15923
  %cmp35 = icmp ult i16* %34, %35, !dbg !15924
  br i1 %cmp35, label %land.rhs, label %land.end, !dbg !15925

land.rhs:                                         ; preds = %while.cond
  %36 = load i8*, i8** %patnext, align 8, !dbg !15926
  %incdec.ptr = getelementptr i8, i8* %36, i32 1, !dbg !15926
  store i8* %incdec.ptr, i8** %patnext, align 8, !dbg !15926
  %37 = load i8, i8* %36, align 1, !dbg !15927
  %conv = zext i8 %37 to i32, !dbg !15927
  store i32 %conv, i32* %c, align 4, !dbg !15928
  %cmp36 = icmp ne i32 %conv, 0, !dbg !15929
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %38 = phi i1 [ false, %while.cond ], [ %cmp36, %land.rhs ], !dbg !15930
  br i1 %38, label %while.body, label %while.end, !dbg !15920

while.body:                                       ; preds = %land.end
  %39 = load i32, i32* %c, align 4, !dbg !15931
  %conv38 = trunc i32 %39 to i16, !dbg !15931
  %40 = load i16*, i16** %bufnext, align 8, !dbg !15933
  %incdec.ptr39 = getelementptr i16, i16* %40, i32 1, !dbg !15933
  store i16* %incdec.ptr39, i16** %bufnext, align 8, !dbg !15933
  store i16 %conv38, i16* %40, align 2, !dbg !15934
  br label %while.cond, !dbg !15920, !llvm.loop !15935

while.end:                                        ; preds = %land.end
  br label %if.end67, !dbg !15937

if.else:                                          ; preds = %if.end30
  br label %while.cond40, !dbg !15938

while.cond40:                                     ; preds = %if.end65, %if.else
  %41 = load i16*, i16** %bufnext, align 8, !dbg !15940
  %42 = load i16*, i16** %bufend, align 8, !dbg !15941
  %cmp41 = icmp ult i16* %41, %42, !dbg !15942
  br i1 %cmp41, label %land.rhs43, label %land.end48, !dbg !15943

land.rhs43:                                       ; preds = %while.cond40
  %43 = load i8*, i8** %patnext, align 8, !dbg !15944
  %incdec.ptr44 = getelementptr i8, i8* %43, i32 1, !dbg !15944
  store i8* %incdec.ptr44, i8** %patnext, align 8, !dbg !15944
  %44 = load i8, i8* %43, align 1, !dbg !15945
  %conv45 = zext i8 %44 to i32, !dbg !15945
  store i32 %conv45, i32* %c, align 4, !dbg !15946
  %cmp46 = icmp ne i32 %conv45, 0, !dbg !15947
  br label %land.end48

land.end48:                                       ; preds = %land.rhs43, %while.cond40
  %45 = phi i1 [ false, %while.cond40 ], [ %cmp46, %land.rhs43 ], !dbg !15948
  br i1 %45, label %while.body49, label %while.end66, !dbg !15938

while.body49:                                     ; preds = %land.end48
  %46 = load i32, i32* %c, align 4, !dbg !15949
  %cmp50 = icmp eq i32 %46, 92, !dbg !15952
  br i1 %cmp50, label %if.then52, label %if.else62, !dbg !15953

if.then52:                                        ; preds = %while.body49
  %47 = load i8*, i8** %patnext, align 8, !dbg !15954
  %incdec.ptr53 = getelementptr i8, i8* %47, i32 1, !dbg !15954
  store i8* %incdec.ptr53, i8** %patnext, align 8, !dbg !15954
  %48 = load i8, i8* %47, align 1, !dbg !15957
  %conv54 = zext i8 %48 to i32, !dbg !15957
  store i32 %conv54, i32* %c, align 4, !dbg !15958
  %cmp55 = icmp eq i32 %conv54, 0, !dbg !15959
  br i1 %cmp55, label %if.then57, label %if.end59, !dbg !15960

if.then57:                                        ; preds = %if.then52
  store i32 92, i32* %c, align 4, !dbg !15961
  %49 = load i8*, i8** %patnext, align 8, !dbg !15963
  %incdec.ptr58 = getelementptr i8, i8* %49, i32 -1, !dbg !15963
  store i8* %incdec.ptr58, i8** %patnext, align 8, !dbg !15963
  br label %if.end59, !dbg !15964

if.end59:                                         ; preds = %if.then57, %if.then52
  %50 = load i32, i32* %c, align 4, !dbg !15965
  %or = or i32 %50, 16384, !dbg !15966
  %conv60 = trunc i32 %or to i16, !dbg !15965
  %51 = load i16*, i16** %bufnext, align 8, !dbg !15967
  %incdec.ptr61 = getelementptr i16, i16* %51, i32 1, !dbg !15967
  store i16* %incdec.ptr61, i16** %bufnext, align 8, !dbg !15967
  store i16 %conv60, i16* %51, align 2, !dbg !15968
  br label %if.end65, !dbg !15969

if.else62:                                        ; preds = %while.body49
  %52 = load i32, i32* %c, align 4, !dbg !15970
  %conv63 = trunc i32 %52 to i16, !dbg !15970
  %53 = load i16*, i16** %bufnext, align 8, !dbg !15972
  %incdec.ptr64 = getelementptr i16, i16* %53, i32 1, !dbg !15972
  store i16* %incdec.ptr64, i16** %bufnext, align 8, !dbg !15972
  store i16 %conv63, i16* %53, align 2, !dbg !15973
  br label %if.end65

if.end65:                                         ; preds = %if.else62, %if.end59
  br label %while.cond40, !dbg !15938, !llvm.loop !15974

while.end66:                                      ; preds = %land.end48
  br label %if.end67

if.end67:                                         ; preds = %while.end66, %while.end
  %54 = load i16*, i16** %bufnext, align 8, !dbg !15976
  store i16 0, i16* %54, align 2, !dbg !15977
  %55 = load i32, i32* %flags.addr, align 4, !dbg !15978
  %and68 = and i32 %55, 128, !dbg !15980
  %tobool69 = icmp ne i32 %and68, 0, !dbg !15980
  br i1 %tobool69, label %if.then70, label %if.else73, !dbg !15981

if.then70:                                        ; preds = %if.end67
  %arraydecay71 = getelementptr inbounds [4096 x i16], [4096 x i16]* %patbuf, i64 0, i64 0, !dbg !15982
  %56 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !15984
  %call72 = call i32 @globexp1(i16* %arraydecay71, %struct.glob_t* %56, %struct.glob_lim* %limit, i32 0), !dbg !15985
  store i32 %call72, i32* %retval, align 4, !dbg !15986
  br label %return, !dbg !15986

if.else73:                                        ; preds = %if.end67
  %arraydecay74 = getelementptr inbounds [4096 x i16], [4096 x i16]* %patbuf, i64 0, i64 0, !dbg !15987
  %57 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !15989
  %call75 = call i32 @glob0(i16* %arraydecay74, %struct.glob_t* %57, %struct.glob_lim* %limit), !dbg !15990
  store i32 %call75, i32* %retval, align 4, !dbg !15991
  br label %return, !dbg !15991

return:                                           ; preds = %if.else73, %if.then70, %if.then29, %if.then25, %if.then
  %58 = load i32, i32* %retval, align 4, !dbg !15992
  ret i32 %58, !dbg !15992
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @check_stars(i8* %pattern) #0 !dbg !15993 {
entry:
  %retval = alloca i32, align 4
  %pattern.addr = alloca i8*, align 8
  %stars = alloca i64, align 8
  %c = alloca i32, align 4
  store i8* %pattern, i8** %pattern.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pattern.addr, metadata !15994, metadata !DIExpression()), !dbg !15995
  call void @llvm.dbg.declare(metadata i64* %stars, metadata !15996, metadata !DIExpression()), !dbg !15997
  store i64 0, i64* %stars, align 8, !dbg !15997
  call void @llvm.dbg.declare(metadata i32* %c, metadata !15998, metadata !DIExpression()), !dbg !15999
  br label %while.cond, !dbg !16000

while.cond:                                       ; preds = %if.end, %entry
  %0 = load i8*, i8** %pattern.addr, align 8, !dbg !16001
  %incdec.ptr = getelementptr i8, i8* %0, i32 1, !dbg !16001
  store i8* %incdec.ptr, i8** %pattern.addr, align 8, !dbg !16001
  %1 = load i8, i8* %0, align 1, !dbg !16002
  %conv = sext i8 %1 to i32, !dbg !16002
  store i32 %conv, i32* %c, align 4, !dbg !16003
  %cmp = icmp ne i32 %conv, 0, !dbg !16004
  br i1 %cmp, label %while.body, label %while.end, !dbg !16000

while.body:                                       ; preds = %while.cond
  %2 = load i32, i32* %c, align 4, !dbg !16005
  %cmp2 = icmp eq i32 %2, 42, !dbg !16008
  br i1 %cmp2, label %land.lhs.true, label %if.end, !dbg !16009

land.lhs.true:                                    ; preds = %while.body
  %3 = load i64, i64* %stars, align 8, !dbg !16010
  %inc = add i64 %3, 1, !dbg !16010
  store i64 %inc, i64* %stars, align 8, !dbg !16010
  %cmp4 = icmp ugt i64 %inc, 3, !dbg !16011
  br i1 %cmp4, label %if.then, label %if.end, !dbg !16012

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !16013
  br label %return, !dbg !16013

if.end:                                           ; preds = %land.lhs.true, %while.body
  br label %while.cond, !dbg !16000, !llvm.loop !16015

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !16017
  br label %return, !dbg !16017

return:                                           ; preds = %while.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !16018
  ret i32 %4, !dbg !16018
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @globexp1(i16* %pattern, %struct.glob_t* %pglob, %struct.glob_lim* %limitp, i32 %recursion) #0 !dbg !16019 {
entry:
  %retval = alloca i32, align 4
  %pattern.addr = alloca i16*, align 8
  %pglob.addr = alloca %struct.glob_t*, align 8
  %limitp.addr = alloca %struct.glob_lim*, align 8
  %recursion.addr = alloca i32, align 4
  %ptr = alloca i16*, align 8
  store i16* %pattern, i16** %pattern.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %pattern.addr, metadata !16023, metadata !DIExpression()), !dbg !16024
  store %struct.glob_t* %pglob, %struct.glob_t** %pglob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.glob_t** %pglob.addr, metadata !16025, metadata !DIExpression()), !dbg !16026
  store %struct.glob_lim* %limitp, %struct.glob_lim** %limitp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.glob_lim** %limitp.addr, metadata !16027, metadata !DIExpression()), !dbg !16028
  store i32 %recursion, i32* %recursion.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %recursion.addr, metadata !16029, metadata !DIExpression()), !dbg !16030
  call void @llvm.dbg.declare(metadata i16** %ptr, metadata !16031, metadata !DIExpression()), !dbg !16032
  %0 = load i16*, i16** %pattern.addr, align 8, !dbg !16033
  store i16* %0, i16** %ptr, align 8, !dbg !16032
  %1 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16034
  %gl_maxdepth = getelementptr inbounds %struct.glob_t, %struct.glob_t* %1, i32 0, i32 1, !dbg !16036
  %2 = load i32, i32* %gl_maxdepth, align 8, !dbg !16036
  %cmp = icmp sgt i32 %2, 0, !dbg !16037
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !16038

land.lhs.true:                                    ; preds = %entry
  %3 = load i32, i32* %recursion.addr, align 4, !dbg !16039
  %4 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16040
  %gl_maxdepth1 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %4, i32 0, i32 1, !dbg !16041
  %5 = load i32, i32* %gl_maxdepth1, align 8, !dbg !16041
  %cmp2 = icmp sgt i32 %3, %5, !dbg !16042
  br i1 %cmp2, label %if.then, label %if.end, !dbg !16043

if.then:                                          ; preds = %land.lhs.true
  %call = call i32* @__errno_location() #14, !dbg !16044
  store i32 0, i32* %call, align 4, !dbg !16046
  store i32 0, i32* %retval, align 4, !dbg !16047
  br label %return, !dbg !16047

if.end:                                           ; preds = %land.lhs.true, %entry
  %6 = load i16*, i16** %pattern.addr, align 8, !dbg !16048
  %arrayidx = getelementptr i16, i16* %6, i64 0, !dbg !16048
  %7 = load i16, i16* %arrayidx, align 2, !dbg !16048
  %conv = zext i16 %7 to i32, !dbg !16048
  %cmp3 = icmp eq i32 %conv, 123, !dbg !16050
  br i1 %cmp3, label %land.lhs.true5, label %if.end17, !dbg !16051

land.lhs.true5:                                   ; preds = %if.end
  %8 = load i16*, i16** %pattern.addr, align 8, !dbg !16052
  %arrayidx6 = getelementptr i16, i16* %8, i64 1, !dbg !16052
  %9 = load i16, i16* %arrayidx6, align 2, !dbg !16052
  %conv7 = zext i16 %9 to i32, !dbg !16052
  %cmp8 = icmp eq i32 %conv7, 125, !dbg !16053
  br i1 %cmp8, label %land.lhs.true10, label %if.end17, !dbg !16054

land.lhs.true10:                                  ; preds = %land.lhs.true5
  %10 = load i16*, i16** %pattern.addr, align 8, !dbg !16055
  %arrayidx11 = getelementptr i16, i16* %10, i64 2, !dbg !16055
  %11 = load i16, i16* %arrayidx11, align 2, !dbg !16055
  %conv12 = zext i16 %11 to i32, !dbg !16055
  %cmp13 = icmp eq i32 %conv12, 0, !dbg !16056
  br i1 %cmp13, label %if.then15, label %if.end17, !dbg !16057

if.then15:                                        ; preds = %land.lhs.true10
  %12 = load i16*, i16** %pattern.addr, align 8, !dbg !16058
  %13 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16060
  %14 = load %struct.glob_lim*, %struct.glob_lim** %limitp.addr, align 8, !dbg !16061
  %call16 = call i32 @glob0(i16* %12, %struct.glob_t* %13, %struct.glob_lim* %14), !dbg !16062
  store i32 %call16, i32* %retval, align 4, !dbg !16063
  br label %return, !dbg !16063

if.end17:                                         ; preds = %land.lhs.true10, %land.lhs.true5, %if.end
  %15 = load i16*, i16** %ptr, align 8, !dbg !16064
  %call18 = call i16* @g_strchr(i16* %15, i32 123), !dbg !16066
  store i16* %call18, i16** %ptr, align 8, !dbg !16067
  %cmp19 = icmp ne i16* %call18, null, !dbg !16068
  br i1 %cmp19, label %if.then21, label %if.end23, !dbg !16069

if.then21:                                        ; preds = %if.end17
  %16 = load i16*, i16** %ptr, align 8, !dbg !16070
  %17 = load i16*, i16** %pattern.addr, align 8, !dbg !16072
  %18 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16073
  %19 = load %struct.glob_lim*, %struct.glob_lim** %limitp.addr, align 8, !dbg !16074
  %20 = load i32, i32* %recursion.addr, align 4, !dbg !16075
  %add = add i32 %20, 1, !dbg !16076
  %call22 = call i32 @globexp2(i16* %16, i16* %17, %struct.glob_t* %18, %struct.glob_lim* %19, i32 %add), !dbg !16077
  store i32 %call22, i32* %retval, align 4, !dbg !16078
  br label %return, !dbg !16078

if.end23:                                         ; preds = %if.end17
  %21 = load i16*, i16** %pattern.addr, align 8, !dbg !16079
  %22 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16080
  %23 = load %struct.glob_lim*, %struct.glob_lim** %limitp.addr, align 8, !dbg !16081
  %call24 = call i32 @glob0(i16* %21, %struct.glob_t* %22, %struct.glob_lim* %23), !dbg !16082
  store i32 %call24, i32* %retval, align 4, !dbg !16083
  br label %return, !dbg !16083

return:                                           ; preds = %if.end23, %if.then21, %if.then15, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !16084
  ret i32 %24, !dbg !16084
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @glob0(i16* %pattern, %struct.glob_t* %pglob, %struct.glob_lim* %limitp) #0 !dbg !16085 {
entry:
  %retval = alloca i32, align 4
  %pattern.addr = alloca i16*, align 8
  %pglob.addr = alloca %struct.glob_t*, align 8
  %limitp.addr = alloca %struct.glob_lim*, align 8
  %qpatnext = alloca i16*, align 8
  %c = alloca i32, align 4
  %err = alloca i32, align 4
  %oldpathc = alloca i32, align 4
  %bufnext = alloca i16*, align 8
  %patbuf = alloca [4096 x i16], align 16
  %path_stat = alloca %struct.glob_path_stat*, align 8
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  %o = alloca i32, align 4
  store i16* %pattern, i16** %pattern.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %pattern.addr, metadata !16088, metadata !DIExpression()), !dbg !16089
  store %struct.glob_t* %pglob, %struct.glob_t** %pglob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.glob_t** %pglob.addr, metadata !16090, metadata !DIExpression()), !dbg !16091
  store %struct.glob_lim* %limitp, %struct.glob_lim** %limitp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.glob_lim** %limitp.addr, metadata !16092, metadata !DIExpression()), !dbg !16093
  call void @llvm.dbg.declare(metadata i16** %qpatnext, metadata !16094, metadata !DIExpression()), !dbg !16095
  call void @llvm.dbg.declare(metadata i32* %c, metadata !16096, metadata !DIExpression()), !dbg !16097
  call void @llvm.dbg.declare(metadata i32* %err, metadata !16098, metadata !DIExpression()), !dbg !16099
  call void @llvm.dbg.declare(metadata i32* %oldpathc, metadata !16100, metadata !DIExpression()), !dbg !16101
  call void @llvm.dbg.declare(metadata i16** %bufnext, metadata !16102, metadata !DIExpression()), !dbg !16103
  call void @llvm.dbg.declare(metadata [4096 x i16]* %patbuf, metadata !16104, metadata !DIExpression()), !dbg !16105
  %0 = load i16*, i16** %pattern.addr, align 8, !dbg !16106
  store i16* %0, i16** %qpatnext, align 8, !dbg !16107
  %1 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16108
  %gl_pathc = getelementptr inbounds %struct.glob_t, %struct.glob_t* %1, i32 0, i32 2, !dbg !16109
  %2 = load i32, i32* %gl_pathc, align 4, !dbg !16109
  store i32 %2, i32* %oldpathc, align 4, !dbg !16110
  %arraydecay = getelementptr inbounds [4096 x i16], [4096 x i16]* %patbuf, i64 0, i64 0, !dbg !16111
  store i16* %arraydecay, i16** %bufnext, align 8, !dbg !16112
  br label %while.cond, !dbg !16113

while.cond:                                       ; preds = %sw.epilog, %entry
  %3 = load i16*, i16** %qpatnext, align 8, !dbg !16114
  %incdec.ptr = getelementptr i16, i16* %3, i32 1, !dbg !16114
  store i16* %incdec.ptr, i16** %qpatnext, align 8, !dbg !16114
  %4 = load i16, i16* %3, align 2, !dbg !16115
  %conv = zext i16 %4 to i32, !dbg !16115
  store i32 %conv, i32* %c, align 4, !dbg !16116
  %cmp = icmp ne i32 %conv, 0, !dbg !16117
  br i1 %cmp, label %while.body, label %while.end, !dbg !16113

while.body:                                       ; preds = %while.cond
  %5 = load i32, i32* %c, align 4, !dbg !16118
  switch i32 %5, label %sw.default [
    i32 91, label %sw.bb
    i32 63, label %sw.bb47
    i32 42, label %sw.bb51
  ], !dbg !16120

sw.bb:                                            ; preds = %while.body
  %6 = load i16*, i16** %qpatnext, align 8, !dbg !16121
  %7 = load i16, i16* %6, align 2, !dbg !16123
  %conv2 = zext i16 %7 to i32, !dbg !16123
  store i32 %conv2, i32* %c, align 4, !dbg !16124
  %8 = load i32, i32* %c, align 4, !dbg !16125
  %cmp3 = icmp eq i32 %8, 33, !dbg !16127
  br i1 %cmp3, label %if.then, label %if.end, !dbg !16128

if.then:                                          ; preds = %sw.bb
  %9 = load i16*, i16** %qpatnext, align 8, !dbg !16129
  %incdec.ptr5 = getelementptr i16, i16* %9, i32 1, !dbg !16129
  store i16* %incdec.ptr5, i16** %qpatnext, align 8, !dbg !16129
  br label %if.end, !dbg !16131

if.end:                                           ; preds = %if.then, %sw.bb
  %10 = load i16*, i16** %qpatnext, align 8, !dbg !16132
  %11 = load i16, i16* %10, align 2, !dbg !16134
  %conv6 = zext i16 %11 to i32, !dbg !16134
  %cmp7 = icmp eq i32 %conv6, 0, !dbg !16135
  br i1 %cmp7, label %if.then11, label %lor.lhs.false, !dbg !16136

lor.lhs.false:                                    ; preds = %if.end
  %12 = load i16*, i16** %qpatnext, align 8, !dbg !16137
  %add.ptr = getelementptr i16, i16* %12, i64 1, !dbg !16138
  %call = call i16* @g_strchr(i16* %add.ptr, i32 93), !dbg !16139
  %cmp9 = icmp eq i16* %call, null, !dbg !16140
  br i1 %cmp9, label %if.then11, label %if.end18, !dbg !16141

if.then11:                                        ; preds = %lor.lhs.false, %if.end
  %13 = load i16*, i16** %bufnext, align 8, !dbg !16142
  %incdec.ptr12 = getelementptr i16, i16* %13, i32 1, !dbg !16142
  store i16* %incdec.ptr12, i16** %bufnext, align 8, !dbg !16142
  store i16 91, i16* %13, align 2, !dbg !16144
  %14 = load i32, i32* %c, align 4, !dbg !16145
  %cmp13 = icmp eq i32 %14, 33, !dbg !16147
  br i1 %cmp13, label %if.then15, label %if.end17, !dbg !16148

if.then15:                                        ; preds = %if.then11
  %15 = load i16*, i16** %qpatnext, align 8, !dbg !16149
  %incdec.ptr16 = getelementptr i16, i16* %15, i32 -1, !dbg !16149
  store i16* %incdec.ptr16, i16** %qpatnext, align 8, !dbg !16149
  br label %if.end17, !dbg !16151

if.end17:                                         ; preds = %if.then15, %if.then11
  br label %sw.epilog, !dbg !16152

if.end18:                                         ; preds = %lor.lhs.false
  %16 = load i16*, i16** %bufnext, align 8, !dbg !16153
  %incdec.ptr19 = getelementptr i16, i16* %16, i32 1, !dbg !16153
  store i16* %incdec.ptr19, i16** %bufnext, align 8, !dbg !16153
  store i16 -32677, i16* %16, align 2, !dbg !16154
  %17 = load i32, i32* %c, align 4, !dbg !16155
  %cmp20 = icmp eq i32 %17, 33, !dbg !16157
  br i1 %cmp20, label %if.then22, label %if.end24, !dbg !16158

if.then22:                                        ; preds = %if.end18
  %18 = load i16*, i16** %bufnext, align 8, !dbg !16159
  %incdec.ptr23 = getelementptr i16, i16* %18, i32 1, !dbg !16159
  store i16* %incdec.ptr23, i16** %bufnext, align 8, !dbg !16159
  store i16 -32735, i16* %18, align 2, !dbg !16161
  br label %if.end24, !dbg !16162

if.end24:                                         ; preds = %if.then22, %if.end18
  %19 = load i16*, i16** %qpatnext, align 8, !dbg !16163
  %incdec.ptr25 = getelementptr i16, i16* %19, i32 1, !dbg !16163
  store i16* %incdec.ptr25, i16** %qpatnext, align 8, !dbg !16163
  %20 = load i16, i16* %19, align 2, !dbg !16164
  %conv26 = zext i16 %20 to i32, !dbg !16164
  store i32 %conv26, i32* %c, align 4, !dbg !16165
  br label %do.body, !dbg !16166

do.body:                                          ; preds = %do.cond, %if.end24
  %21 = load i32, i32* %c, align 4, !dbg !16167
  %and = and i32 %21, 255, !dbg !16167
  %conv27 = trunc i32 %and to i16, !dbg !16167
  %22 = load i16*, i16** %bufnext, align 8, !dbg !16169
  %incdec.ptr28 = getelementptr i16, i16* %22, i32 1, !dbg !16169
  store i16* %incdec.ptr28, i16** %bufnext, align 8, !dbg !16169
  store i16 %conv27, i16* %22, align 2, !dbg !16170
  %23 = load i16*, i16** %qpatnext, align 8, !dbg !16171
  %24 = load i16, i16* %23, align 2, !dbg !16173
  %conv29 = zext i16 %24 to i32, !dbg !16173
  %cmp30 = icmp eq i32 %conv29, 45, !dbg !16174
  br i1 %cmp30, label %land.lhs.true, label %if.end41, !dbg !16175

land.lhs.true:                                    ; preds = %do.body
  %25 = load i16*, i16** %qpatnext, align 8, !dbg !16176
  %arrayidx = getelementptr i16, i16* %25, i64 1, !dbg !16176
  %26 = load i16, i16* %arrayidx, align 2, !dbg !16176
  %conv32 = zext i16 %26 to i32, !dbg !16176
  store i32 %conv32, i32* %c, align 4, !dbg !16177
  %cmp33 = icmp ne i32 %conv32, 93, !dbg !16178
  br i1 %cmp33, label %if.then35, label %if.end41, !dbg !16179

if.then35:                                        ; preds = %land.lhs.true
  %27 = load i16*, i16** %bufnext, align 8, !dbg !16180
  %incdec.ptr36 = getelementptr i16, i16* %27, i32 1, !dbg !16180
  store i16* %incdec.ptr36, i16** %bufnext, align 8, !dbg !16180
  store i16 -32723, i16* %27, align 2, !dbg !16182
  %28 = load i32, i32* %c, align 4, !dbg !16183
  %and37 = and i32 %28, 255, !dbg !16183
  %conv38 = trunc i32 %and37 to i16, !dbg !16183
  %29 = load i16*, i16** %bufnext, align 8, !dbg !16184
  %incdec.ptr39 = getelementptr i16, i16* %29, i32 1, !dbg !16184
  store i16* %incdec.ptr39, i16** %bufnext, align 8, !dbg !16184
  store i16 %conv38, i16* %29, align 2, !dbg !16185
  %30 = load i16*, i16** %qpatnext, align 8, !dbg !16186
  %add.ptr40 = getelementptr i16, i16* %30, i64 2, !dbg !16186
  store i16* %add.ptr40, i16** %qpatnext, align 8, !dbg !16186
  br label %if.end41, !dbg !16187

if.end41:                                         ; preds = %if.then35, %land.lhs.true, %do.body
  br label %do.cond, !dbg !16188

do.cond:                                          ; preds = %if.end41
  %31 = load i16*, i16** %qpatnext, align 8, !dbg !16189
  %incdec.ptr42 = getelementptr i16, i16* %31, i32 1, !dbg !16189
  store i16* %incdec.ptr42, i16** %qpatnext, align 8, !dbg !16189
  %32 = load i16, i16* %31, align 2, !dbg !16190
  %conv43 = zext i16 %32 to i32, !dbg !16190
  store i32 %conv43, i32* %c, align 4, !dbg !16191
  %cmp44 = icmp ne i32 %conv43, 93, !dbg !16192
  br i1 %cmp44, label %do.body, label %do.end, !dbg !16188, !llvm.loop !16193

do.end:                                           ; preds = %do.cond
  %33 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16195
  %gl_flags = getelementptr inbounds %struct.glob_t, %struct.glob_t* %33, i32 0, i32 5, !dbg !16196
  %34 = load i32, i32* %gl_flags, align 8, !dbg !16197
  %or = or i32 %34, 256, !dbg !16197
  store i32 %or, i32* %gl_flags, align 8, !dbg !16197
  %35 = load i16*, i16** %bufnext, align 8, !dbg !16198
  %incdec.ptr46 = getelementptr i16, i16* %35, i32 1, !dbg !16198
  store i16* %incdec.ptr46, i16** %bufnext, align 8, !dbg !16198
  store i16 -32675, i16* %35, align 2, !dbg !16199
  br label %sw.epilog, !dbg !16200

sw.bb47:                                          ; preds = %while.body
  %36 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16201
  %gl_flags48 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %36, i32 0, i32 5, !dbg !16202
  %37 = load i32, i32* %gl_flags48, align 8, !dbg !16203
  %or49 = or i32 %37, 256, !dbg !16203
  store i32 %or49, i32* %gl_flags48, align 8, !dbg !16203
  %38 = load i16*, i16** %bufnext, align 8, !dbg !16204
  %incdec.ptr50 = getelementptr i16, i16* %38, i32 1, !dbg !16204
  store i16* %incdec.ptr50, i16** %bufnext, align 8, !dbg !16204
  store i16 -32705, i16* %38, align 2, !dbg !16205
  br label %sw.epilog, !dbg !16206

sw.bb51:                                          ; preds = %while.body
  %39 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16207
  %gl_flags52 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %39, i32 0, i32 5, !dbg !16208
  %40 = load i32, i32* %gl_flags52, align 8, !dbg !16209
  %or53 = or i32 %40, 256, !dbg !16209
  store i32 %or53, i32* %gl_flags52, align 8, !dbg !16209
  %41 = load i16*, i16** %bufnext, align 8, !dbg !16210
  %arraydecay54 = getelementptr inbounds [4096 x i16], [4096 x i16]* %patbuf, i64 0, i64 0, !dbg !16212
  %cmp55 = icmp eq i16* %41, %arraydecay54, !dbg !16213
  br i1 %cmp55, label %if.then62, label %lor.lhs.false57, !dbg !16214

lor.lhs.false57:                                  ; preds = %sw.bb51
  %42 = load i16*, i16** %bufnext, align 8, !dbg !16215
  %arrayidx58 = getelementptr i16, i16* %42, i64 -1, !dbg !16215
  %43 = load i16, i16* %arrayidx58, align 2, !dbg !16215
  %conv59 = zext i16 %43 to i32, !dbg !16215
  %cmp60 = icmp ne i32 %conv59, 32810, !dbg !16216
  br i1 %cmp60, label %if.then62, label %if.end64, !dbg !16217

if.then62:                                        ; preds = %lor.lhs.false57, %sw.bb51
  %44 = load i16*, i16** %bufnext, align 8, !dbg !16218
  %incdec.ptr63 = getelementptr i16, i16* %44, i32 1, !dbg !16218
  store i16* %incdec.ptr63, i16** %bufnext, align 8, !dbg !16218
  store i16 -32726, i16* %44, align 2, !dbg !16220
  br label %if.end64, !dbg !16221

if.end64:                                         ; preds = %if.then62, %lor.lhs.false57
  br label %sw.epilog, !dbg !16222

sw.default:                                       ; preds = %while.body
  %45 = load i32, i32* %c, align 4, !dbg !16223
  %and65 = and i32 %45, 255, !dbg !16223
  %conv66 = trunc i32 %and65 to i16, !dbg !16223
  %46 = load i16*, i16** %bufnext, align 8, !dbg !16224
  %incdec.ptr67 = getelementptr i16, i16* %46, i32 1, !dbg !16224
  store i16* %incdec.ptr67, i16** %bufnext, align 8, !dbg !16224
  store i16 %conv66, i16* %46, align 2, !dbg !16225
  br label %sw.epilog, !dbg !16226

sw.epilog:                                        ; preds = %sw.default, %if.end64, %sw.bb47, %do.end, %if.end17
  br label %while.cond, !dbg !16113, !llvm.loop !16227

while.end:                                        ; preds = %while.cond
  %47 = load i16*, i16** %bufnext, align 8, !dbg !16229
  store i16 0, i16* %47, align 2, !dbg !16230
  %arraydecay68 = getelementptr inbounds [4096 x i16], [4096 x i16]* %patbuf, i64 0, i64 0, !dbg !16231
  %arraydecay69 = getelementptr inbounds [4096 x i16], [4096 x i16]* %patbuf, i64 0, i64 0, !dbg !16233
  %add.ptr70 = getelementptr i16, i16* %arraydecay69, i64 4096, !dbg !16234
  %add.ptr71 = getelementptr i16, i16* %add.ptr70, i64 -1, !dbg !16235
  %48 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16236
  %49 = load %struct.glob_lim*, %struct.glob_lim** %limitp.addr, align 8, !dbg !16237
  %call72 = call i32 @glob1(i16* %arraydecay68, i16* %add.ptr71, %struct.glob_t* %48, %struct.glob_lim* %49, i32 1), !dbg !16238
  store i32 %call72, i32* %err, align 4, !dbg !16239
  %cmp73 = icmp ne i32 %call72, 0, !dbg !16240
  br i1 %cmp73, label %if.then75, label %if.end76, !dbg !16241

if.then75:                                        ; preds = %while.end
  %50 = load i32, i32* %err, align 4, !dbg !16242
  store i32 %50, i32* %retval, align 4, !dbg !16244
  br label %return, !dbg !16244

if.end76:                                         ; preds = %while.end
  %51 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16245
  %gl_pathc77 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %51, i32 0, i32 2, !dbg !16247
  %52 = load i32, i32* %gl_pathc77, align 4, !dbg !16247
  %53 = load i32, i32* %oldpathc, align 4, !dbg !16248
  %cmp78 = icmp eq i32 %52, %53, !dbg !16249
  br i1 %cmp78, label %if.then80, label %if.end93, !dbg !16250

if.then80:                                        ; preds = %if.end76
  %54 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16251
  %gl_flags81 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %54, i32 0, i32 5, !dbg !16254
  %55 = load i32, i32* %gl_flags81, align 8, !dbg !16254
  %and82 = and i32 %55, 16, !dbg !16255
  %tobool = icmp ne i32 %and82, 0, !dbg !16255
  br i1 %tobool, label %if.then91, label %lor.lhs.false83, !dbg !16256

lor.lhs.false83:                                  ; preds = %if.then80
  %56 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16257
  %gl_flags84 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %56, i32 0, i32 5, !dbg !16258
  %57 = load i32, i32* %gl_flags84, align 8, !dbg !16258
  %and85 = and i32 %57, 512, !dbg !16259
  %tobool86 = icmp ne i32 %and85, 0, !dbg !16259
  br i1 %tobool86, label %land.lhs.true87, label %if.else, !dbg !16260

land.lhs.true87:                                  ; preds = %lor.lhs.false83
  %58 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16261
  %gl_flags88 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %58, i32 0, i32 5, !dbg !16262
  %59 = load i32, i32* %gl_flags88, align 8, !dbg !16262
  %and89 = and i32 %59, 256, !dbg !16263
  %tobool90 = icmp ne i32 %and89, 0, !dbg !16263
  br i1 %tobool90, label %if.else, label %if.then91, !dbg !16264

if.then91:                                        ; preds = %land.lhs.true87, %if.then80
  %60 = load i16*, i16** %pattern.addr, align 8, !dbg !16265
  %61 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16267
  %62 = load %struct.glob_lim*, %struct.glob_lim** %limitp.addr, align 8, !dbg !16268
  %call92 = call i32 @globextend(i16* %60, %struct.glob_t* %61, %struct.glob_lim* %62, %struct.stat* null), !dbg !16269
  store i32 %call92, i32* %retval, align 4, !dbg !16270
  br label %return, !dbg !16270

if.else:                                          ; preds = %land.lhs.true87, %lor.lhs.false83
  store i32 -3, i32* %retval, align 4, !dbg !16271
  br label %return, !dbg !16271

if.end93:                                         ; preds = %if.end76
  %63 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16273
  %gl_flags94 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %63, i32 0, i32 5, !dbg !16275
  %64 = load i32, i32* %gl_flags94, align 8, !dbg !16275
  %and95 = and i32 %64, 32, !dbg !16276
  %tobool96 = icmp ne i32 %and95, 0, !dbg !16276
  br i1 %tobool96, label %if.end152, label %if.then97, !dbg !16277

if.then97:                                        ; preds = %if.end93
  %65 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16278
  %gl_flags98 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %65, i32 0, i32 5, !dbg !16281
  %66 = load i32, i32* %gl_flags98, align 8, !dbg !16281
  %and99 = and i32 %66, 16384, !dbg !16282
  %tobool100 = icmp ne i32 %and99, 0, !dbg !16282
  br i1 %tobool100, label %if.then101, label %if.else142, !dbg !16283

if.then101:                                       ; preds = %if.then97
  call void @llvm.dbg.declare(metadata %struct.glob_path_stat** %path_stat, metadata !16284, metadata !DIExpression()), !dbg !16287
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16288, metadata !DIExpression()), !dbg !16289
  call void @llvm.dbg.declare(metadata i32* %n, metadata !16290, metadata !DIExpression()), !dbg !16291
  %67 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16292
  %gl_pathc102 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %67, i32 0, i32 2, !dbg !16293
  %68 = load i32, i32* %gl_pathc102, align 4, !dbg !16293
  %69 = load i32, i32* %oldpathc, align 4, !dbg !16294
  %sub = sub i32 %68, %69, !dbg !16295
  store i32 %sub, i32* %n, align 4, !dbg !16291
  call void @llvm.dbg.declare(metadata i32* %o, metadata !16296, metadata !DIExpression()), !dbg !16297
  %70 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16298
  %gl_offs = getelementptr inbounds %struct.glob_t, %struct.glob_t* %70, i32 0, i32 4, !dbg !16299
  %71 = load i32, i32* %gl_offs, align 4, !dbg !16299
  %72 = load i32, i32* %oldpathc, align 4, !dbg !16300
  %add = add i32 %71, %72, !dbg !16301
  store i32 %add, i32* %o, align 4, !dbg !16297
  %73 = load i32, i32* %n, align 4, !dbg !16302
  %conv103 = sext i32 %73 to i64, !dbg !16302
  %call104 = call noalias i8* @calloc(i64 %conv103, i64 16) #7, !dbg !16304
  %74 = bitcast i8* %call104 to %struct.glob_path_stat*, !dbg !16304
  store %struct.glob_path_stat* %74, %struct.glob_path_stat** %path_stat, align 8, !dbg !16305
  %cmp105 = icmp eq %struct.glob_path_stat* %74, null, !dbg !16306
  br i1 %cmp105, label %if.then107, label %if.end108, !dbg !16307

if.then107:                                       ; preds = %if.then101
  store i32 -1, i32* %retval, align 4, !dbg !16308
  br label %return, !dbg !16308

if.end108:                                        ; preds = %if.then101
  store i32 0, i32* %i, align 4, !dbg !16310
  br label %for.cond, !dbg !16312

for.cond:                                         ; preds = %for.inc, %if.end108
  %75 = load i32, i32* %i, align 4, !dbg !16313
  %76 = load i32, i32* %n, align 4, !dbg !16315
  %cmp109 = icmp slt i32 %75, %76, !dbg !16316
  br i1 %cmp109, label %for.body, label %for.end, !dbg !16317

for.body:                                         ; preds = %for.cond
  %77 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16318
  %gl_pathv = getelementptr inbounds %struct.glob_t, %struct.glob_t* %77, i32 0, i32 6, !dbg !16320
  %78 = load i8**, i8*** %gl_pathv, align 8, !dbg !16320
  %79 = load i32, i32* %o, align 4, !dbg !16321
  %80 = load i32, i32* %i, align 4, !dbg !16322
  %add111 = add i32 %79, %80, !dbg !16323
  %idxprom = sext i32 %add111 to i64, !dbg !16318
  %arrayidx112 = getelementptr i8*, i8** %78, i64 %idxprom, !dbg !16318
  %81 = load i8*, i8** %arrayidx112, align 8, !dbg !16318
  %82 = load %struct.glob_path_stat*, %struct.glob_path_stat** %path_stat, align 8, !dbg !16324
  %83 = load i32, i32* %i, align 4, !dbg !16325
  %idxprom113 = sext i32 %83 to i64, !dbg !16324
  %arrayidx114 = getelementptr %struct.glob_path_stat, %struct.glob_path_stat* %82, i64 %idxprom113, !dbg !16324
  %gps_path = getelementptr inbounds %struct.glob_path_stat, %struct.glob_path_stat* %arrayidx114, i32 0, i32 0, !dbg !16326
  store i8* %81, i8** %gps_path, align 8, !dbg !16327
  %84 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16328
  %gl_statv = getelementptr inbounds %struct.glob_t, %struct.glob_t* %84, i32 0, i32 7, !dbg !16329
  %85 = load %struct.stat**, %struct.stat*** %gl_statv, align 8, !dbg !16329
  %86 = load i32, i32* %o, align 4, !dbg !16330
  %87 = load i32, i32* %i, align 4, !dbg !16331
  %add115 = add i32 %86, %87, !dbg !16332
  %idxprom116 = sext i32 %add115 to i64, !dbg !16328
  %arrayidx117 = getelementptr %struct.stat*, %struct.stat** %85, i64 %idxprom116, !dbg !16328
  %88 = load %struct.stat*, %struct.stat** %arrayidx117, align 8, !dbg !16328
  %89 = load %struct.glob_path_stat*, %struct.glob_path_stat** %path_stat, align 8, !dbg !16333
  %90 = load i32, i32* %i, align 4, !dbg !16334
  %idxprom118 = sext i32 %90 to i64, !dbg !16333
  %arrayidx119 = getelementptr %struct.glob_path_stat, %struct.glob_path_stat* %89, i64 %idxprom118, !dbg !16333
  %gps_stat = getelementptr inbounds %struct.glob_path_stat, %struct.glob_path_stat* %arrayidx119, i32 0, i32 1, !dbg !16335
  store %struct.stat* %88, %struct.stat** %gps_stat, align 8, !dbg !16336
  br label %for.inc, !dbg !16337

for.inc:                                          ; preds = %for.body
  %91 = load i32, i32* %i, align 4, !dbg !16338
  %inc = add i32 %91, 1, !dbg !16338
  store i32 %inc, i32* %i, align 4, !dbg !16338
  br label %for.cond, !dbg !16339, !llvm.loop !16340

for.end:                                          ; preds = %for.cond
  %92 = load %struct.glob_path_stat*, %struct.glob_path_stat** %path_stat, align 8, !dbg !16342
  %93 = bitcast %struct.glob_path_stat* %92 to i8*, !dbg !16342
  %94 = load i32, i32* %n, align 4, !dbg !16343
  %conv120 = sext i32 %94 to i64, !dbg !16343
  call void @qsort(i8* %93, i64 %conv120, i64 16, i32 (i8*, i8*)* @compare_gps), !dbg !16344
  store i32 0, i32* %i, align 4, !dbg !16345
  br label %for.cond121, !dbg !16347

for.cond121:                                      ; preds = %for.inc139, %for.end
  %95 = load i32, i32* %i, align 4, !dbg !16348
  %96 = load i32, i32* %n, align 4, !dbg !16350
  %cmp122 = icmp slt i32 %95, %96, !dbg !16351
  br i1 %cmp122, label %for.body124, label %for.end141, !dbg !16352

for.body124:                                      ; preds = %for.cond121
  %97 = load %struct.glob_path_stat*, %struct.glob_path_stat** %path_stat, align 8, !dbg !16353
  %98 = load i32, i32* %i, align 4, !dbg !16355
  %idxprom125 = sext i32 %98 to i64, !dbg !16353
  %arrayidx126 = getelementptr %struct.glob_path_stat, %struct.glob_path_stat* %97, i64 %idxprom125, !dbg !16353
  %gps_path127 = getelementptr inbounds %struct.glob_path_stat, %struct.glob_path_stat* %arrayidx126, i32 0, i32 0, !dbg !16356
  %99 = load i8*, i8** %gps_path127, align 8, !dbg !16356
  %100 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16357
  %gl_pathv128 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %100, i32 0, i32 6, !dbg !16358
  %101 = load i8**, i8*** %gl_pathv128, align 8, !dbg !16358
  %102 = load i32, i32* %o, align 4, !dbg !16359
  %103 = load i32, i32* %i, align 4, !dbg !16360
  %add129 = add i32 %102, %103, !dbg !16361
  %idxprom130 = sext i32 %add129 to i64, !dbg !16357
  %arrayidx131 = getelementptr i8*, i8** %101, i64 %idxprom130, !dbg !16357
  store i8* %99, i8** %arrayidx131, align 8, !dbg !16362
  %104 = load %struct.glob_path_stat*, %struct.glob_path_stat** %path_stat, align 8, !dbg !16363
  %105 = load i32, i32* %i, align 4, !dbg !16364
  %idxprom132 = sext i32 %105 to i64, !dbg !16363
  %arrayidx133 = getelementptr %struct.glob_path_stat, %struct.glob_path_stat* %104, i64 %idxprom132, !dbg !16363
  %gps_stat134 = getelementptr inbounds %struct.glob_path_stat, %struct.glob_path_stat* %arrayidx133, i32 0, i32 1, !dbg !16365
  %106 = load %struct.stat*, %struct.stat** %gps_stat134, align 8, !dbg !16365
  %107 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16366
  %gl_statv135 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %107, i32 0, i32 7, !dbg !16367
  %108 = load %struct.stat**, %struct.stat*** %gl_statv135, align 8, !dbg !16367
  %109 = load i32, i32* %o, align 4, !dbg !16368
  %110 = load i32, i32* %i, align 4, !dbg !16369
  %add136 = add i32 %109, %110, !dbg !16370
  %idxprom137 = sext i32 %add136 to i64, !dbg !16366
  %arrayidx138 = getelementptr %struct.stat*, %struct.stat** %108, i64 %idxprom137, !dbg !16366
  store %struct.stat* %106, %struct.stat** %arrayidx138, align 8, !dbg !16371
  br label %for.inc139, !dbg !16372

for.inc139:                                       ; preds = %for.body124
  %111 = load i32, i32* %i, align 4, !dbg !16373
  %inc140 = add i32 %111, 1, !dbg !16373
  store i32 %inc140, i32* %i, align 4, !dbg !16373
  br label %for.cond121, !dbg !16374, !llvm.loop !16375

for.end141:                                       ; preds = %for.cond121
  %112 = load %struct.glob_path_stat*, %struct.glob_path_stat** %path_stat, align 8, !dbg !16377
  %113 = bitcast %struct.glob_path_stat* %112 to i8*, !dbg !16377
  call void @free(i8* %113) #7, !dbg !16378
  br label %if.end151, !dbg !16379

if.else142:                                       ; preds = %if.then97
  %114 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16380
  %gl_pathv143 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %114, i32 0, i32 6, !dbg !16382
  %115 = load i8**, i8*** %gl_pathv143, align 8, !dbg !16382
  %116 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16383
  %gl_offs144 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %116, i32 0, i32 4, !dbg !16384
  %117 = load i32, i32* %gl_offs144, align 4, !dbg !16384
  %idx.ext = sext i32 %117 to i64, !dbg !16385
  %add.ptr145 = getelementptr i8*, i8** %115, i64 %idx.ext, !dbg !16385
  %118 = load i32, i32* %oldpathc, align 4, !dbg !16386
  %idx.ext146 = sext i32 %118 to i64, !dbg !16387
  %add.ptr147 = getelementptr i8*, i8** %add.ptr145, i64 %idx.ext146, !dbg !16387
  %119 = bitcast i8** %add.ptr147 to i8*, !dbg !16380
  %120 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16388
  %gl_pathc148 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %120, i32 0, i32 2, !dbg !16389
  %121 = load i32, i32* %gl_pathc148, align 4, !dbg !16389
  %122 = load i32, i32* %oldpathc, align 4, !dbg !16390
  %sub149 = sub i32 %121, %122, !dbg !16391
  %conv150 = sext i32 %sub149 to i64, !dbg !16388
  call void @qsort(i8* %119, i64 %conv150, i64 8, i32 (i8*, i8*)* @compare), !dbg !16392
  br label %if.end151

if.end151:                                        ; preds = %if.else142, %for.end141
  br label %if.end152, !dbg !16393

if.end152:                                        ; preds = %if.end151, %if.end93
  store i32 0, i32* %retval, align 4, !dbg !16394
  br label %return, !dbg !16394

return:                                           ; preds = %if.end152, %if.then107, %if.else, %if.then91, %if.then75
  %123 = load i32, i32* %retval, align 4, !dbg !16395
  ret i32 %123, !dbg !16395
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i16* @g_strchr(i16* %str, i32 %ch) #0 !dbg !16396 {
entry:
  %retval = alloca i16*, align 8
  %str.addr = alloca i16*, align 8
  %ch.addr = alloca i32, align 4
  store i16* %str, i16** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %str.addr, metadata !16399, metadata !DIExpression()), !dbg !16400
  store i32 %ch, i32* %ch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.addr, metadata !16401, metadata !DIExpression()), !dbg !16402
  br label %do.body, !dbg !16403

do.body:                                          ; preds = %do.cond, %entry
  %0 = load i16*, i16** %str.addr, align 8, !dbg !16404
  %1 = load i16, i16* %0, align 2, !dbg !16407
  %conv = zext i16 %1 to i32, !dbg !16407
  %2 = load i32, i32* %ch.addr, align 4, !dbg !16408
  %cmp = icmp eq i32 %conv, %2, !dbg !16409
  br i1 %cmp, label %if.then, label %if.end, !dbg !16410

if.then:                                          ; preds = %do.body
  %3 = load i16*, i16** %str.addr, align 8, !dbg !16411
  store i16* %3, i16** %retval, align 8, !dbg !16413
  br label %return, !dbg !16413

if.end:                                           ; preds = %do.body
  br label %do.cond, !dbg !16414

do.cond:                                          ; preds = %if.end
  %4 = load i16*, i16** %str.addr, align 8, !dbg !16415
  %incdec.ptr = getelementptr i16, i16* %4, i32 1, !dbg !16415
  store i16* %incdec.ptr, i16** %str.addr, align 8, !dbg !16415
  %5 = load i16, i16* %4, align 2, !dbg !16416
  %tobool = icmp ne i16 %5, 0, !dbg !16414
  br i1 %tobool, label %do.body, label %do.end, !dbg !16414, !llvm.loop !16417

do.end:                                           ; preds = %do.cond
  store i16* null, i16** %retval, align 8, !dbg !16419
  br label %return, !dbg !16419

return:                                           ; preds = %do.end, %if.then
  %6 = load i16*, i16** %retval, align 8, !dbg !16420
  ret i16* %6, !dbg !16420
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @glob1(i16* %pattern, i16* %pattern_last, %struct.glob_t* %pglob, %struct.glob_lim* %limitp, i32 %recursion) #0 !dbg !16421 {
entry:
  %retval = alloca i32, align 4
  %pattern.addr = alloca i16*, align 8
  %pattern_last.addr = alloca i16*, align 8
  %pglob.addr = alloca %struct.glob_t*, align 8
  %limitp.addr = alloca %struct.glob_lim*, align 8
  %recursion.addr = alloca i32, align 4
  %pathbuf = alloca [4096 x i16], align 16
  store i16* %pattern, i16** %pattern.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %pattern.addr, metadata !16424, metadata !DIExpression()), !dbg !16425
  store i16* %pattern_last, i16** %pattern_last.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %pattern_last.addr, metadata !16426, metadata !DIExpression()), !dbg !16427
  store %struct.glob_t* %pglob, %struct.glob_t** %pglob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.glob_t** %pglob.addr, metadata !16428, metadata !DIExpression()), !dbg !16429
  store %struct.glob_lim* %limitp, %struct.glob_lim** %limitp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.glob_lim** %limitp.addr, metadata !16430, metadata !DIExpression()), !dbg !16431
  store i32 %recursion, i32* %recursion.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %recursion.addr, metadata !16432, metadata !DIExpression()), !dbg !16433
  call void @llvm.dbg.declare(metadata [4096 x i16]* %pathbuf, metadata !16434, metadata !DIExpression()), !dbg !16435
  %0 = load i16*, i16** %pattern.addr, align 8, !dbg !16436
  %1 = load i16, i16* %0, align 2, !dbg !16438
  %conv = zext i16 %1 to i32, !dbg !16438
  %cmp = icmp eq i32 %conv, 0, !dbg !16439
  br i1 %cmp, label %if.then, label %if.end, !dbg !16440

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !16441
  br label %return, !dbg !16441

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [4096 x i16], [4096 x i16]* %pathbuf, i64 0, i64 0, !dbg !16443
  %arraydecay2 = getelementptr inbounds [4096 x i16], [4096 x i16]* %pathbuf, i64 0, i64 0, !dbg !16444
  %add.ptr = getelementptr i16, i16* %arraydecay2, i64 4096, !dbg !16445
  %add.ptr3 = getelementptr i16, i16* %add.ptr, i64 -1, !dbg !16446
  %arraydecay4 = getelementptr inbounds [4096 x i16], [4096 x i16]* %pathbuf, i64 0, i64 0, !dbg !16447
  %arraydecay5 = getelementptr inbounds [4096 x i16], [4096 x i16]* %pathbuf, i64 0, i64 0, !dbg !16448
  %add.ptr6 = getelementptr i16, i16* %arraydecay5, i64 4096, !dbg !16449
  %add.ptr7 = getelementptr i16, i16* %add.ptr6, i64 -1, !dbg !16450
  %2 = load i16*, i16** %pattern.addr, align 8, !dbg !16451
  %3 = load i16*, i16** %pattern_last.addr, align 8, !dbg !16452
  %4 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16453
  %5 = load %struct.glob_lim*, %struct.glob_lim** %limitp.addr, align 8, !dbg !16454
  %6 = load i32, i32* %recursion.addr, align 4, !dbg !16455
  %call = call i32 @glob2(i16* %arraydecay, i16* %add.ptr3, i16* %arraydecay4, i16* %add.ptr7, i16* %2, i16* %3, %struct.glob_t* %4, %struct.glob_lim* %5, i32 %6), !dbg !16456
  store i32 %call, i32* %retval, align 4, !dbg !16457
  br label %return, !dbg !16457

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !16458
  ret i32 %7, !dbg !16458
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @globextend(i16* %path, %struct.glob_t* %pglob, %struct.glob_lim* %limitp, %struct.stat* %sb) #0 !dbg !16459 {
entry:
  %retval = alloca i32, align 4
  %path.addr = alloca i16*, align 8
  %pglob.addr = alloca %struct.glob_t*, align 8
  %limitp.addr = alloca %struct.glob_lim*, align 8
  %sb.addr = alloca %struct.stat*, align 8
  %pathv = alloca i8**, align 8
  %i = alloca i64, align 8
  %newn = alloca i64, align 8
  %len = alloca i64, align 8
  %copy = alloca i8*, align 8
  %p = alloca i16*, align 8
  %statv = alloca %struct.stat**, align 8
  store i16* %path, i16** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %path.addr, metadata !16462, metadata !DIExpression()), !dbg !16463
  store %struct.glob_t* %pglob, %struct.glob_t** %pglob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.glob_t** %pglob.addr, metadata !16464, metadata !DIExpression()), !dbg !16465
  store %struct.glob_lim* %limitp, %struct.glob_lim** %limitp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.glob_lim** %limitp.addr, metadata !16466, metadata !DIExpression()), !dbg !16467
  store %struct.stat* %sb, %struct.stat** %sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %sb.addr, metadata !16468, metadata !DIExpression()), !dbg !16469
  call void @llvm.dbg.declare(metadata i8*** %pathv, metadata !16470, metadata !DIExpression()), !dbg !16471
  call void @llvm.dbg.declare(metadata i64* %i, metadata !16472, metadata !DIExpression()), !dbg !16473
  call void @llvm.dbg.declare(metadata i64* %newn, metadata !16474, metadata !DIExpression()), !dbg !16475
  call void @llvm.dbg.declare(metadata i64* %len, metadata !16476, metadata !DIExpression()), !dbg !16477
  call void @llvm.dbg.declare(metadata i8** %copy, metadata !16478, metadata !DIExpression()), !dbg !16479
  store i8* null, i8** %copy, align 8, !dbg !16479
  call void @llvm.dbg.declare(metadata i16** %p, metadata !16480, metadata !DIExpression()), !dbg !16481
  call void @llvm.dbg.declare(metadata %struct.stat*** %statv, metadata !16482, metadata !DIExpression()), !dbg !16483
  %0 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16484
  %gl_pathc = getelementptr inbounds %struct.glob_t, %struct.glob_t* %0, i32 0, i32 2, !dbg !16485
  %1 = load i32, i32* %gl_pathc, align 4, !dbg !16485
  %add = add i32 2, %1, !dbg !16486
  %2 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16487
  %gl_offs = getelementptr inbounds %struct.glob_t, %struct.glob_t* %2, i32 0, i32 4, !dbg !16488
  %3 = load i32, i32* %gl_offs, align 4, !dbg !16488
  %add1 = add i32 %add, %3, !dbg !16489
  %conv = sext i32 %add1 to i64, !dbg !16490
  store i64 %conv, i64* %newn, align 8, !dbg !16491
  %4 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16492
  %gl_offs2 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %4, i32 0, i32 4, !dbg !16494
  %5 = load i32, i32* %gl_offs2, align 4, !dbg !16494
  %cmp = icmp sge i32 %5, 2147483647, !dbg !16495
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !16496

lor.lhs.false:                                    ; preds = %entry
  %6 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16497
  %gl_pathc4 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %6, i32 0, i32 2, !dbg !16498
  %7 = load i32, i32* %gl_pathc4, align 4, !dbg !16498
  %cmp5 = icmp sge i32 %7, 2147483647, !dbg !16499
  br i1 %cmp5, label %if.then, label %lor.lhs.false7, !dbg !16500

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %8 = load i64, i64* %newn, align 8, !dbg !16501
  %cmp8 = icmp uge i64 %8, 2147483647, !dbg !16502
  br i1 %cmp8, label %if.then, label %lor.lhs.false10, !dbg !16503

lor.lhs.false10:                                  ; preds = %lor.lhs.false7
  %9 = load i64, i64* %newn, align 8, !dbg !16504
  %cmp11 = icmp ule i64 2305843009213693951, %9, !dbg !16505
  br i1 %cmp11, label %if.then, label %lor.lhs.false13, !dbg !16506

lor.lhs.false13:                                  ; preds = %lor.lhs.false10
  %10 = load i64, i64* %newn, align 8, !dbg !16507
  %cmp14 = icmp ule i64 2305843009213693951, %10, !dbg !16508
  br i1 %cmp14, label %if.then, label %if.end41, !dbg !16509

if.then:                                          ; preds = %lor.lhs.false13, %lor.lhs.false10, %lor.lhs.false7, %lor.lhs.false, %entry
  br label %nospace, !dbg !16510

nospace:                                          ; preds = %if.then75, %if.then45, %if.then
  call void @llvm.dbg.label(metadata !16511), !dbg !16513
  %11 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16514
  %gl_offs16 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %11, i32 0, i32 4, !dbg !16516
  %12 = load i32, i32* %gl_offs16, align 4, !dbg !16516
  %conv17 = sext i32 %12 to i64, !dbg !16514
  store i64 %conv17, i64* %i, align 8, !dbg !16517
  br label %for.cond, !dbg !16518

for.cond:                                         ; preds = %for.inc, %nospace
  %13 = load i64, i64* %i, align 8, !dbg !16519
  %14 = load i64, i64* %newn, align 8, !dbg !16521
  %sub = sub i64 %14, 2, !dbg !16522
  %cmp18 = icmp slt i64 %13, %sub, !dbg !16523
  br i1 %cmp18, label %for.body, label %for.end, !dbg !16524

for.body:                                         ; preds = %for.cond
  %15 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16525
  %gl_pathv = getelementptr inbounds %struct.glob_t, %struct.glob_t* %15, i32 0, i32 6, !dbg !16528
  %16 = load i8**, i8*** %gl_pathv, align 8, !dbg !16528
  %tobool = icmp ne i8** %16, null, !dbg !16525
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !16529

land.lhs.true:                                    ; preds = %for.body
  %17 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16530
  %gl_pathv20 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %17, i32 0, i32 6, !dbg !16531
  %18 = load i8**, i8*** %gl_pathv20, align 8, !dbg !16531
  %19 = load i64, i64* %i, align 8, !dbg !16532
  %arrayidx = getelementptr i8*, i8** %18, i64 %19, !dbg !16530
  %20 = load i8*, i8** %arrayidx, align 8, !dbg !16530
  %tobool21 = icmp ne i8* %20, null, !dbg !16530
  br i1 %tobool21, label %if.then22, label %if.end, !dbg !16533

if.then22:                                        ; preds = %land.lhs.true
  %21 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16534
  %gl_pathv23 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %21, i32 0, i32 6, !dbg !16536
  %22 = load i8**, i8*** %gl_pathv23, align 8, !dbg !16536
  %23 = load i64, i64* %i, align 8, !dbg !16537
  %arrayidx24 = getelementptr i8*, i8** %22, i64 %23, !dbg !16534
  %24 = load i8*, i8** %arrayidx24, align 8, !dbg !16534
  call void @free(i8* %24) #7, !dbg !16538
  br label %if.end, !dbg !16539

if.end:                                           ; preds = %if.then22, %land.lhs.true, %for.body
  %25 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16540
  %gl_flags = getelementptr inbounds %struct.glob_t, %struct.glob_t* %25, i32 0, i32 5, !dbg !16542
  %26 = load i32, i32* %gl_flags, align 8, !dbg !16542
  %and = and i32 %26, 16384, !dbg !16543
  %cmp25 = icmp ne i32 %and, 0, !dbg !16544
  br i1 %cmp25, label %land.lhs.true27, label %if.end36, !dbg !16545

land.lhs.true27:                                  ; preds = %if.end
  %27 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16546
  %gl_pathv28 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %27, i32 0, i32 6, !dbg !16547
  %28 = load i8**, i8*** %gl_pathv28, align 8, !dbg !16547
  %tobool29 = icmp ne i8** %28, null, !dbg !16546
  br i1 %tobool29, label %land.lhs.true30, label %if.end36, !dbg !16548

land.lhs.true30:                                  ; preds = %land.lhs.true27
  %29 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16549
  %gl_pathv31 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %29, i32 0, i32 6, !dbg !16550
  %30 = load i8**, i8*** %gl_pathv31, align 8, !dbg !16550
  %31 = load i64, i64* %i, align 8, !dbg !16551
  %arrayidx32 = getelementptr i8*, i8** %30, i64 %31, !dbg !16549
  %32 = load i8*, i8** %arrayidx32, align 8, !dbg !16549
  %tobool33 = icmp ne i8* %32, null, !dbg !16549
  br i1 %tobool33, label %if.then34, label %if.end36, !dbg !16552

if.then34:                                        ; preds = %land.lhs.true30
  %33 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16553
  %gl_statv = getelementptr inbounds %struct.glob_t, %struct.glob_t* %33, i32 0, i32 7, !dbg !16555
  %34 = load %struct.stat**, %struct.stat*** %gl_statv, align 8, !dbg !16555
  %35 = load i64, i64* %i, align 8, !dbg !16556
  %arrayidx35 = getelementptr %struct.stat*, %struct.stat** %34, i64 %35, !dbg !16553
  %36 = load %struct.stat*, %struct.stat** %arrayidx35, align 8, !dbg !16553
  %37 = bitcast %struct.stat* %36 to i8*, !dbg !16553
  call void @free(i8* %37) #7, !dbg !16557
  br label %if.end36, !dbg !16558

if.end36:                                         ; preds = %if.then34, %land.lhs.true30, %land.lhs.true27, %if.end
  br label %for.inc, !dbg !16559

for.inc:                                          ; preds = %if.end36
  %38 = load i64, i64* %i, align 8, !dbg !16560
  %inc = add i64 %38, 1, !dbg !16560
  store i64 %inc, i64* %i, align 8, !dbg !16560
  br label %for.cond, !dbg !16561, !llvm.loop !16562

for.end:                                          ; preds = %for.cond
  %39 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16564
  %gl_pathv37 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %39, i32 0, i32 6, !dbg !16565
  %40 = load i8**, i8*** %gl_pathv37, align 8, !dbg !16565
  %41 = bitcast i8** %40 to i8*, !dbg !16564
  call void @free(i8* %41) #7, !dbg !16566
  %42 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16567
  %gl_pathv38 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %42, i32 0, i32 6, !dbg !16568
  store i8** null, i8*** %gl_pathv38, align 8, !dbg !16569
  %43 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16570
  %gl_statv39 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %43, i32 0, i32 7, !dbg !16571
  %44 = load %struct.stat**, %struct.stat*** %gl_statv39, align 8, !dbg !16571
  %45 = bitcast %struct.stat** %44 to i8*, !dbg !16570
  call void @free(i8* %45) #7, !dbg !16572
  %46 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16573
  %gl_statv40 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %46, i32 0, i32 7, !dbg !16574
  store %struct.stat** null, %struct.stat*** %gl_statv40, align 8, !dbg !16575
  store i32 -1, i32* %retval, align 4, !dbg !16576
  br label %return, !dbg !16576

if.end41:                                         ; preds = %lor.lhs.false13
  %47 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16577
  %gl_pathv42 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %47, i32 0, i32 6, !dbg !16578
  %48 = load i8**, i8*** %gl_pathv42, align 8, !dbg !16578
  %49 = bitcast i8** %48 to i8*, !dbg !16577
  %50 = load i64, i64* %newn, align 8, !dbg !16579
  %mul = mul i64 %50, 8, !dbg !16580
  %call = call i8* @realloc(i8* %49, i64 %mul) #7, !dbg !16581
  %51 = bitcast i8* %call to i8**, !dbg !16581
  store i8** %51, i8*** %pathv, align 8, !dbg !16582
  %52 = load i8**, i8*** %pathv, align 8, !dbg !16583
  %cmp43 = icmp eq i8** %52, null, !dbg !16585
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !16586

if.then45:                                        ; preds = %if.end41
  br label %nospace, !dbg !16587

if.end46:                                         ; preds = %if.end41
  %53 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16589
  %gl_pathv47 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %53, i32 0, i32 6, !dbg !16591
  %54 = load i8**, i8*** %gl_pathv47, align 8, !dbg !16591
  %cmp48 = icmp eq i8** %54, null, !dbg !16592
  br i1 %cmp48, label %land.lhs.true50, label %if.end63, !dbg !16593

land.lhs.true50:                                  ; preds = %if.end46
  %55 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16594
  %gl_offs51 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %55, i32 0, i32 4, !dbg !16595
  %56 = load i32, i32* %gl_offs51, align 4, !dbg !16595
  %cmp52 = icmp sgt i32 %56, 0, !dbg !16596
  br i1 %cmp52, label %if.then54, label %if.end63, !dbg !16597

if.then54:                                        ; preds = %land.lhs.true50
  %57 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16598
  %gl_offs55 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %57, i32 0, i32 4, !dbg !16600
  %58 = load i32, i32* %gl_offs55, align 4, !dbg !16600
  %59 = load i8**, i8*** %pathv, align 8, !dbg !16601
  %idx.ext = sext i32 %58 to i64, !dbg !16601
  %add.ptr = getelementptr i8*, i8** %59, i64 %idx.ext, !dbg !16601
  store i8** %add.ptr, i8*** %pathv, align 8, !dbg !16601
  %60 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16602
  %gl_offs56 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %60, i32 0, i32 4, !dbg !16604
  %61 = load i32, i32* %gl_offs56, align 4, !dbg !16604
  %conv57 = sext i32 %61 to i64, !dbg !16602
  store i64 %conv57, i64* %i, align 8, !dbg !16605
  br label %for.cond58, !dbg !16606

for.cond58:                                       ; preds = %for.body61, %if.then54
  %62 = load i64, i64* %i, align 8, !dbg !16607
  %dec = add i64 %62, -1, !dbg !16607
  store i64 %dec, i64* %i, align 8, !dbg !16607
  %cmp59 = icmp sge i64 %dec, 0, !dbg !16609
  br i1 %cmp59, label %for.body61, label %for.end62, !dbg !16610

for.body61:                                       ; preds = %for.cond58
  %63 = load i8**, i8*** %pathv, align 8, !dbg !16611
  %incdec.ptr = getelementptr i8*, i8** %63, i32 -1, !dbg !16611
  store i8** %incdec.ptr, i8*** %pathv, align 8, !dbg !16611
  store i8* null, i8** %incdec.ptr, align 8, !dbg !16613
  br label %for.cond58, !dbg !16614, !llvm.loop !16615

for.end62:                                        ; preds = %for.cond58
  br label %if.end63, !dbg !16617

if.end63:                                         ; preds = %for.end62, %land.lhs.true50, %if.end46
  %64 = load i8**, i8*** %pathv, align 8, !dbg !16618
  %65 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16619
  %gl_pathv64 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %65, i32 0, i32 6, !dbg !16620
  store i8** %64, i8*** %gl_pathv64, align 8, !dbg !16621
  %66 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16622
  %gl_flags65 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %66, i32 0, i32 5, !dbg !16624
  %67 = load i32, i32* %gl_flags65, align 8, !dbg !16624
  %and66 = and i32 %67, 16384, !dbg !16625
  %cmp67 = icmp ne i32 %and66, 0, !dbg !16626
  br i1 %cmp67, label %if.then69, label %if.end135, !dbg !16627

if.then69:                                        ; preds = %if.end63
  %68 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16628
  %gl_statv70 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %68, i32 0, i32 7, !dbg !16630
  %69 = load %struct.stat**, %struct.stat*** %gl_statv70, align 8, !dbg !16630
  %70 = bitcast %struct.stat** %69 to i8*, !dbg !16628
  %71 = load i64, i64* %newn, align 8, !dbg !16631
  %mul71 = mul i64 %71, 8, !dbg !16632
  %call72 = call i8* @realloc(i8* %70, i64 %mul71) #7, !dbg !16633
  %72 = bitcast i8* %call72 to %struct.stat**, !dbg !16633
  store %struct.stat** %72, %struct.stat*** %statv, align 8, !dbg !16634
  %73 = load %struct.stat**, %struct.stat*** %statv, align 8, !dbg !16635
  %cmp73 = icmp eq %struct.stat** %73, null, !dbg !16637
  br i1 %cmp73, label %if.then75, label %if.end76, !dbg !16638

if.then75:                                        ; preds = %if.then69
  br label %nospace, !dbg !16639

if.end76:                                         ; preds = %if.then69
  %74 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16641
  %gl_statv77 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %74, i32 0, i32 7, !dbg !16643
  %75 = load %struct.stat**, %struct.stat*** %gl_statv77, align 8, !dbg !16643
  %cmp78 = icmp eq %struct.stat** %75, null, !dbg !16644
  br i1 %cmp78, label %land.lhs.true80, label %if.end97, !dbg !16645

land.lhs.true80:                                  ; preds = %if.end76
  %76 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16646
  %gl_offs81 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %76, i32 0, i32 4, !dbg !16647
  %77 = load i32, i32* %gl_offs81, align 4, !dbg !16647
  %cmp82 = icmp sgt i32 %77, 0, !dbg !16648
  br i1 %cmp82, label %if.then84, label %if.end97, !dbg !16649

if.then84:                                        ; preds = %land.lhs.true80
  %78 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16650
  %gl_offs85 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %78, i32 0, i32 4, !dbg !16652
  %79 = load i32, i32* %gl_offs85, align 4, !dbg !16652
  %80 = load %struct.stat**, %struct.stat*** %statv, align 8, !dbg !16653
  %idx.ext86 = sext i32 %79 to i64, !dbg !16653
  %add.ptr87 = getelementptr %struct.stat*, %struct.stat** %80, i64 %idx.ext86, !dbg !16653
  store %struct.stat** %add.ptr87, %struct.stat*** %statv, align 8, !dbg !16653
  %81 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16654
  %gl_offs88 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %81, i32 0, i32 4, !dbg !16656
  %82 = load i32, i32* %gl_offs88, align 4, !dbg !16656
  %conv89 = sext i32 %82 to i64, !dbg !16654
  store i64 %conv89, i64* %i, align 8, !dbg !16657
  br label %for.cond90, !dbg !16658

for.cond90:                                       ; preds = %for.body94, %if.then84
  %83 = load i64, i64* %i, align 8, !dbg !16659
  %dec91 = add i64 %83, -1, !dbg !16659
  store i64 %dec91, i64* %i, align 8, !dbg !16659
  %cmp92 = icmp sge i64 %dec91, 0, !dbg !16661
  br i1 %cmp92, label %for.body94, label %for.end96, !dbg !16662

for.body94:                                       ; preds = %for.cond90
  %84 = load %struct.stat**, %struct.stat*** %statv, align 8, !dbg !16663
  %incdec.ptr95 = getelementptr %struct.stat*, %struct.stat** %84, i32 -1, !dbg !16663
  store %struct.stat** %incdec.ptr95, %struct.stat*** %statv, align 8, !dbg !16663
  store %struct.stat* null, %struct.stat** %incdec.ptr95, align 8, !dbg !16665
  br label %for.cond90, !dbg !16666, !llvm.loop !16667

for.end96:                                        ; preds = %for.cond90
  br label %if.end97, !dbg !16669

if.end97:                                         ; preds = %for.end96, %land.lhs.true80, %if.end76
  %85 = load %struct.stat**, %struct.stat*** %statv, align 8, !dbg !16670
  %86 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16671
  %gl_statv98 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %86, i32 0, i32 7, !dbg !16672
  store %struct.stat** %85, %struct.stat*** %gl_statv98, align 8, !dbg !16673
  %87 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !16674
  %cmp99 = icmp eq %struct.stat* %87, null, !dbg !16676
  br i1 %cmp99, label %if.then101, label %if.else, !dbg !16677

if.then101:                                       ; preds = %if.end97
  %88 = load %struct.stat**, %struct.stat*** %statv, align 8, !dbg !16678
  %89 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16680
  %gl_offs102 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %89, i32 0, i32 4, !dbg !16681
  %90 = load i32, i32* %gl_offs102, align 4, !dbg !16681
  %91 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16682
  %gl_pathc103 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %91, i32 0, i32 2, !dbg !16683
  %92 = load i32, i32* %gl_pathc103, align 4, !dbg !16683
  %add104 = add i32 %90, %92, !dbg !16684
  %idxprom = sext i32 %add104 to i64, !dbg !16678
  %arrayidx105 = getelementptr %struct.stat*, %struct.stat** %88, i64 %idxprom, !dbg !16678
  store %struct.stat* null, %struct.stat** %arrayidx105, align 8, !dbg !16685
  br label %if.end128, !dbg !16686

if.else:                                          ; preds = %if.end97
  %93 = load %struct.glob_lim*, %struct.glob_lim** %limitp.addr, align 8, !dbg !16687
  %glim_malloc = getelementptr inbounds %struct.glob_lim, %struct.glob_lim* %93, i32 0, i32 0, !dbg !16689
  %94 = load i64, i64* %glim_malloc, align 8, !dbg !16690
  %add106 = add i64 %94, 144, !dbg !16690
  store i64 %add106, i64* %glim_malloc, align 8, !dbg !16690
  %95 = load %struct.glob_lim*, %struct.glob_lim** %limitp.addr, align 8, !dbg !16691
  %glim_malloc107 = getelementptr inbounds %struct.glob_lim, %struct.glob_lim* %95, i32 0, i32 0, !dbg !16693
  %96 = load i64, i64* %glim_malloc107, align 8, !dbg !16693
  %cmp108 = icmp uge i64 %96, 65536, !dbg !16694
  br i1 %cmp108, label %if.then110, label %if.end112, !dbg !16695

if.then110:                                       ; preds = %if.else
  %call111 = call i32* @__errno_location() #14, !dbg !16696
  store i32 0, i32* %call111, align 4, !dbg !16698
  store i32 -1, i32* %retval, align 4, !dbg !16699
  br label %return, !dbg !16699

if.end112:                                        ; preds = %if.else
  %call113 = call noalias i8* @malloc(i64 144) #7, !dbg !16700
  %97 = bitcast i8* %call113 to %struct.stat*, !dbg !16700
  %98 = load %struct.stat**, %struct.stat*** %statv, align 8, !dbg !16702
  %99 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16703
  %gl_offs114 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %99, i32 0, i32 4, !dbg !16704
  %100 = load i32, i32* %gl_offs114, align 4, !dbg !16704
  %101 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16705
  %gl_pathc115 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %101, i32 0, i32 2, !dbg !16706
  %102 = load i32, i32* %gl_pathc115, align 4, !dbg !16706
  %add116 = add i32 %100, %102, !dbg !16707
  %idxprom117 = sext i32 %add116 to i64, !dbg !16702
  %arrayidx118 = getelementptr %struct.stat*, %struct.stat** %98, i64 %idxprom117, !dbg !16702
  store %struct.stat* %97, %struct.stat** %arrayidx118, align 8, !dbg !16708
  %cmp119 = icmp eq %struct.stat* %97, null, !dbg !16709
  br i1 %cmp119, label %if.then121, label %if.end122, !dbg !16710

if.then121:                                       ; preds = %if.end112
  br label %copy_error, !dbg !16711

if.end122:                                        ; preds = %if.end112
  %103 = load %struct.stat**, %struct.stat*** %statv, align 8, !dbg !16713
  %104 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16714
  %gl_offs123 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %104, i32 0, i32 4, !dbg !16715
  %105 = load i32, i32* %gl_offs123, align 4, !dbg !16715
  %106 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16716
  %gl_pathc124 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %106, i32 0, i32 2, !dbg !16717
  %107 = load i32, i32* %gl_pathc124, align 4, !dbg !16717
  %add125 = add i32 %105, %107, !dbg !16718
  %idxprom126 = sext i32 %add125 to i64, !dbg !16713
  %arrayidx127 = getelementptr %struct.stat*, %struct.stat** %103, i64 %idxprom126, !dbg !16713
  %108 = load %struct.stat*, %struct.stat** %arrayidx127, align 8, !dbg !16713
  %109 = bitcast %struct.stat* %108 to i8*, !dbg !16719
  %110 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !16720
  %111 = bitcast %struct.stat* %110 to i8*, !dbg !16719
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* align 8 %111, i64 144, i1 false), !dbg !16719
  br label %if.end128

if.end128:                                        ; preds = %if.end122, %if.then101
  %112 = load %struct.stat**, %struct.stat*** %statv, align 8, !dbg !16721
  %113 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16722
  %gl_offs129 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %113, i32 0, i32 4, !dbg !16723
  %114 = load i32, i32* %gl_offs129, align 4, !dbg !16723
  %115 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16724
  %gl_pathc130 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %115, i32 0, i32 2, !dbg !16725
  %116 = load i32, i32* %gl_pathc130, align 4, !dbg !16725
  %add131 = add i32 %114, %116, !dbg !16726
  %add132 = add i32 %add131, 1, !dbg !16727
  %idxprom133 = sext i32 %add132 to i64, !dbg !16721
  %arrayidx134 = getelementptr %struct.stat*, %struct.stat** %112, i64 %idxprom133, !dbg !16721
  store %struct.stat* null, %struct.stat** %arrayidx134, align 8, !dbg !16728
  br label %if.end135, !dbg !16729

if.end135:                                        ; preds = %if.end128, %if.end63
  %117 = load i16*, i16** %path.addr, align 8, !dbg !16730
  store i16* %117, i16** %p, align 8, !dbg !16732
  br label %for.cond136, !dbg !16733

for.cond136:                                      ; preds = %for.body139, %if.end135
  %118 = load i16*, i16** %p, align 8, !dbg !16734
  %incdec.ptr137 = getelementptr i16, i16* %118, i32 1, !dbg !16734
  store i16* %incdec.ptr137, i16** %p, align 8, !dbg !16734
  %119 = load i16, i16* %118, align 2, !dbg !16736
  %tobool138 = icmp ne i16 %119, 0, !dbg !16737
  br i1 %tobool138, label %for.body139, label %for.end140, !dbg !16737

for.body139:                                      ; preds = %for.cond136
  br label %for.cond136, !dbg !16738, !llvm.loop !16739

for.end140:                                       ; preds = %for.cond136
  %120 = load i16*, i16** %p, align 8, !dbg !16741
  %121 = load i16*, i16** %path.addr, align 8, !dbg !16742
  %sub.ptr.lhs.cast = ptrtoint i16* %120 to i64, !dbg !16743
  %sub.ptr.rhs.cast = ptrtoint i16* %121 to i64, !dbg !16743
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !16743
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 2, !dbg !16743
  store i64 %sub.ptr.div, i64* %len, align 8, !dbg !16744
  %122 = load i64, i64* %len, align 8, !dbg !16745
  %123 = load %struct.glob_lim*, %struct.glob_lim** %limitp.addr, align 8, !dbg !16746
  %glim_malloc141 = getelementptr inbounds %struct.glob_lim, %struct.glob_lim* %123, i32 0, i32 0, !dbg !16747
  %124 = load i64, i64* %glim_malloc141, align 8, !dbg !16748
  %add142 = add i64 %124, %122, !dbg !16748
  store i64 %add142, i64* %glim_malloc141, align 8, !dbg !16748
  %125 = load i64, i64* %len, align 8, !dbg !16749
  %call143 = call noalias i8* @malloc(i64 %125) #7, !dbg !16751
  store i8* %call143, i8** %copy, align 8, !dbg !16752
  %cmp144 = icmp ne i8* %call143, null, !dbg !16753
  br i1 %cmp144, label %if.then146, label %if.end158, !dbg !16754

if.then146:                                       ; preds = %for.end140
  %126 = load i16*, i16** %path.addr, align 8, !dbg !16755
  %127 = load i8*, i8** %copy, align 8, !dbg !16758
  %128 = load i64, i64* %len, align 8, !dbg !16759
  %conv147 = trunc i64 %128 to i32, !dbg !16759
  %call148 = call i32 @g_Ctoc(i16* %126, i8* %127, i32 %conv147), !dbg !16760
  %tobool149 = icmp ne i32 %call148, 0, !dbg !16760
  br i1 %tobool149, label %if.then150, label %if.end151, !dbg !16761

if.then150:                                       ; preds = %if.then146
  %129 = load i8*, i8** %copy, align 8, !dbg !16762
  call void @free(i8* %129) #7, !dbg !16764
  store i32 -1, i32* %retval, align 4, !dbg !16765
  br label %return, !dbg !16765

if.end151:                                        ; preds = %if.then146
  %130 = load i8*, i8** %copy, align 8, !dbg !16766
  %131 = load i8**, i8*** %pathv, align 8, !dbg !16767
  %132 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16768
  %gl_offs152 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %132, i32 0, i32 4, !dbg !16769
  %133 = load i32, i32* %gl_offs152, align 4, !dbg !16769
  %134 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16770
  %gl_pathc153 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %134, i32 0, i32 2, !dbg !16771
  %135 = load i32, i32* %gl_pathc153, align 4, !dbg !16772
  %inc154 = add i32 %135, 1, !dbg !16772
  store i32 %inc154, i32* %gl_pathc153, align 4, !dbg !16772
  %add155 = add i32 %133, %135, !dbg !16773
  %idxprom156 = sext i32 %add155 to i64, !dbg !16767
  %arrayidx157 = getelementptr i8*, i8** %131, i64 %idxprom156, !dbg !16767
  store i8* %130, i8** %arrayidx157, align 8, !dbg !16774
  br label %if.end158, !dbg !16775

if.end158:                                        ; preds = %if.end151, %for.end140
  %136 = load i8**, i8*** %pathv, align 8, !dbg !16776
  %137 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16777
  %gl_offs159 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %137, i32 0, i32 4, !dbg !16778
  %138 = load i32, i32* %gl_offs159, align 4, !dbg !16778
  %139 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16779
  %gl_pathc160 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %139, i32 0, i32 2, !dbg !16780
  %140 = load i32, i32* %gl_pathc160, align 4, !dbg !16780
  %add161 = add i32 %138, %140, !dbg !16781
  %idxprom162 = sext i32 %add161 to i64, !dbg !16776
  %arrayidx163 = getelementptr i8*, i8** %136, i64 %idxprom162, !dbg !16776
  store i8* null, i8** %arrayidx163, align 8, !dbg !16782
  %141 = load i64, i64* %newn, align 8, !dbg !16783
  %mul164 = mul i64 %141, 8, !dbg !16785
  %142 = load %struct.glob_lim*, %struct.glob_lim** %limitp.addr, align 8, !dbg !16786
  %glim_malloc165 = getelementptr inbounds %struct.glob_lim, %struct.glob_lim* %142, i32 0, i32 0, !dbg !16787
  %143 = load i64, i64* %glim_malloc165, align 8, !dbg !16787
  %add166 = add i64 %mul164, %143, !dbg !16788
  %cmp167 = icmp ugt i64 %add166, 65536, !dbg !16789
  br i1 %cmp167, label %if.then169, label %if.end171, !dbg !16790

if.then169:                                       ; preds = %if.end158
  %call170 = call i32* @__errno_location() #14, !dbg !16791
  store i32 0, i32* %call170, align 4, !dbg !16793
  store i32 -1, i32* %retval, align 4, !dbg !16794
  br label %return, !dbg !16794

if.end171:                                        ; preds = %if.end158
  br label %copy_error, !dbg !16795

copy_error:                                       ; preds = %if.end171, %if.then121
  call void @llvm.dbg.label(metadata !16796), !dbg !16797
  %144 = load i8*, i8** %copy, align 8, !dbg !16798
  %cmp172 = icmp eq i8* %144, null, !dbg !16799
  %145 = zext i1 %cmp172 to i64, !dbg !16798
  %cond = select i1 %cmp172, i32 -1, i32 0, !dbg !16798
  store i32 %cond, i32* %retval, align 4, !dbg !16800
  br label %return, !dbg !16800

return:                                           ; preds = %copy_error, %if.then169, %if.then150, %if.then110, %for.end
  %146 = load i32, i32* %retval, align 4, !dbg !16801
  ret i32 %146, !dbg !16801
}

; Function Attrs: nounwind
declare noalias i8* @calloc(i64, i64) #2

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @compare_gps(i8* %_p, i8* %_q) #0 !dbg !16802 {
entry:
  %_p.addr = alloca i8*, align 8
  %_q.addr = alloca i8*, align 8
  %p = alloca %struct.glob_path_stat*, align 8
  %q = alloca %struct.glob_path_stat*, align 8
  store i8* %_p, i8** %_p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_p.addr, metadata !16805, metadata !DIExpression()), !dbg !16806
  store i8* %_q, i8** %_q.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_q.addr, metadata !16807, metadata !DIExpression()), !dbg !16808
  call void @llvm.dbg.declare(metadata %struct.glob_path_stat** %p, metadata !16809, metadata !DIExpression()), !dbg !16810
  %0 = load i8*, i8** %_p.addr, align 8, !dbg !16811
  %1 = bitcast i8* %0 to %struct.glob_path_stat*, !dbg !16812
  store %struct.glob_path_stat* %1, %struct.glob_path_stat** %p, align 8, !dbg !16810
  call void @llvm.dbg.declare(metadata %struct.glob_path_stat** %q, metadata !16813, metadata !DIExpression()), !dbg !16814
  %2 = load i8*, i8** %_q.addr, align 8, !dbg !16815
  %3 = bitcast i8* %2 to %struct.glob_path_stat*, !dbg !16816
  store %struct.glob_path_stat* %3, %struct.glob_path_stat** %q, align 8, !dbg !16814
  %4 = load %struct.glob_path_stat*, %struct.glob_path_stat** %p, align 8, !dbg !16817
  %gps_path = getelementptr inbounds %struct.glob_path_stat, %struct.glob_path_stat* %4, i32 0, i32 0, !dbg !16818
  %5 = load i8*, i8** %gps_path, align 8, !dbg !16818
  %6 = load %struct.glob_path_stat*, %struct.glob_path_stat** %q, align 8, !dbg !16819
  %gps_path1 = getelementptr inbounds %struct.glob_path_stat, %struct.glob_path_stat* %6, i32 0, i32 0, !dbg !16820
  %7 = load i8*, i8** %gps_path1, align 8, !dbg !16820
  %call = call i32 @strcmp(i8* %5, i8* %7) #12, !dbg !16821
  ret i32 %call, !dbg !16822
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @compare(i8* %p, i8* %q) #0 !dbg !16823 {
entry:
  %p.addr = alloca i8*, align 8
  %q.addr = alloca i8*, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !16824, metadata !DIExpression()), !dbg !16825
  store i8* %q, i8** %q.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %q.addr, metadata !16826, metadata !DIExpression()), !dbg !16827
  %0 = load i8*, i8** %p.addr, align 8, !dbg !16828
  %1 = bitcast i8* %0 to i8**, !dbg !16829
  %2 = load i8*, i8** %1, align 8, !dbg !16830
  %3 = load i8*, i8** %q.addr, align 8, !dbg !16831
  %4 = bitcast i8* %3 to i8**, !dbg !16832
  %5 = load i8*, i8** %4, align 8, !dbg !16833
  %call = call i32 @strcmp(i8* %2, i8* %5) #12, !dbg !16834
  ret i32 %call, !dbg !16835
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @g_Ctoc(i16* %str, i8* %buf, i32 %len) #0 !dbg !16836 {
entry:
  %retval = alloca i32, align 4
  %str.addr = alloca i16*, align 8
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  store i16* %str, i16** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %str.addr, metadata !16839, metadata !DIExpression()), !dbg !16840
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16841, metadata !DIExpression()), !dbg !16842
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !16843, metadata !DIExpression()), !dbg !16844
  br label %while.cond, !dbg !16845

while.cond:                                       ; preds = %if.end, %entry
  %0 = load i32, i32* %len.addr, align 4, !dbg !16846
  %dec = add i32 %0, -1, !dbg !16846
  store i32 %dec, i32* %len.addr, align 4, !dbg !16846
  %tobool = icmp ne i32 %0, 0, !dbg !16845
  br i1 %tobool, label %while.body, label %while.end, !dbg !16845

while.body:                                       ; preds = %while.cond
  %1 = load i16*, i16** %str.addr, align 8, !dbg !16847
  %incdec.ptr = getelementptr i16, i16* %1, i32 1, !dbg !16847
  store i16* %incdec.ptr, i16** %str.addr, align 8, !dbg !16847
  %2 = load i16, i16* %1, align 2, !dbg !16850
  %conv = trunc i16 %2 to i8, !dbg !16850
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !16851
  %incdec.ptr1 = getelementptr i8, i8* %3, i32 1, !dbg !16851
  store i8* %incdec.ptr1, i8** %buf.addr, align 8, !dbg !16851
  store i8 %conv, i8* %3, align 1, !dbg !16852
  %conv2 = sext i8 %conv to i32, !dbg !16853
  %cmp = icmp eq i32 %conv2, 0, !dbg !16854
  br i1 %cmp, label %if.then, label %if.end, !dbg !16855

if.then:                                          ; preds = %while.body
  store i32 0, i32* %retval, align 4, !dbg !16856
  br label %return, !dbg !16856

if.end:                                           ; preds = %while.body
  br label %while.cond, !dbg !16845, !llvm.loop !16858

while.end:                                        ; preds = %while.cond
  store i32 1, i32* %retval, align 4, !dbg !16860
  br label %return, !dbg !16860

return:                                           ; preds = %while.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !16861
  ret i32 %4, !dbg !16861
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @glob2(i16* %pathbuf, i16* %pathbuf_last, i16* %pathend, i16* %pathend_last, i16* %pattern, i16* %pattern_last, %struct.glob_t* %pglob, %struct.glob_lim* %limitp, i32 %recursion) #0 !dbg !16862 {
entry:
  %retval = alloca i32, align 4
  %pathbuf.addr = alloca i16*, align 8
  %pathbuf_last.addr = alloca i16*, align 8
  %pathend.addr = alloca i16*, align 8
  %pathend_last.addr = alloca i16*, align 8
  %pattern.addr = alloca i16*, align 8
  %pattern_last.addr = alloca i16*, align 8
  %pglob.addr = alloca %struct.glob_t*, align 8
  %limitp.addr = alloca %struct.glob_lim*, align 8
  %recursion.addr = alloca i32, align 4
  %sb = alloca %struct.stat, align 8
  %p = alloca i16*, align 8
  %q = alloca i16*, align 8
  %anymeta = alloca i32, align 4
  store i16* %pathbuf, i16** %pathbuf.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %pathbuf.addr, metadata !16865, metadata !DIExpression()), !dbg !16866
  store i16* %pathbuf_last, i16** %pathbuf_last.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %pathbuf_last.addr, metadata !16867, metadata !DIExpression()), !dbg !16868
  store i16* %pathend, i16** %pathend.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %pathend.addr, metadata !16869, metadata !DIExpression()), !dbg !16870
  store i16* %pathend_last, i16** %pathend_last.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %pathend_last.addr, metadata !16871, metadata !DIExpression()), !dbg !16872
  store i16* %pattern, i16** %pattern.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %pattern.addr, metadata !16873, metadata !DIExpression()), !dbg !16874
  store i16* %pattern_last, i16** %pattern_last.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %pattern_last.addr, metadata !16875, metadata !DIExpression()), !dbg !16876
  store %struct.glob_t* %pglob, %struct.glob_t** %pglob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.glob_t** %pglob.addr, metadata !16877, metadata !DIExpression()), !dbg !16878
  store %struct.glob_lim* %limitp, %struct.glob_lim** %limitp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.glob_lim** %limitp.addr, metadata !16879, metadata !DIExpression()), !dbg !16880
  store i32 %recursion, i32* %recursion.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %recursion.addr, metadata !16881, metadata !DIExpression()), !dbg !16882
  call void @llvm.dbg.declare(metadata %struct.stat* %sb, metadata !16883, metadata !DIExpression()), !dbg !16884
  call void @llvm.dbg.declare(metadata i16** %p, metadata !16885, metadata !DIExpression()), !dbg !16886
  call void @llvm.dbg.declare(metadata i16** %q, metadata !16887, metadata !DIExpression()), !dbg !16888
  call void @llvm.dbg.declare(metadata i32* %anymeta, metadata !16889, metadata !DIExpression()), !dbg !16890
  store i32 0, i32* %anymeta, align 4, !dbg !16891
  br label %for.cond, !dbg !16893

for.cond:                                         ; preds = %if.end74, %entry
  %0 = load i16*, i16** %pattern.addr, align 8, !dbg !16894
  %1 = load i16, i16* %0, align 2, !dbg !16898
  %conv = zext i16 %1 to i32, !dbg !16898
  %cmp = icmp eq i32 %conv, 0, !dbg !16899
  br i1 %cmp, label %if.then, label %if.end38, !dbg !16900

if.then:                                          ; preds = %for.cond
  %2 = load i16*, i16** %pathend.addr, align 8, !dbg !16901
  store i16 0, i16* %2, align 2, !dbg !16903
  %3 = load %struct.glob_lim*, %struct.glob_lim** %limitp.addr, align 8, !dbg !16904
  %glim_stat = getelementptr inbounds %struct.glob_lim, %struct.glob_lim* %3, i32 0, i32 1, !dbg !16906
  %4 = load i64, i64* %glim_stat, align 8, !dbg !16907
  %inc = add i64 %4, 1, !dbg !16907
  store i64 %inc, i64* %glim_stat, align 8, !dbg !16907
  %5 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16908
  %gl_maxfiles = getelementptr inbounds %struct.glob_t, %struct.glob_t* %5, i32 0, i32 0, !dbg !16909
  %6 = load i64, i64* %gl_maxfiles, align 8, !dbg !16909
  %cmp2 = icmp uge i64 %4, %6, !dbg !16910
  br i1 %cmp2, label %if.then4, label %if.end, !dbg !16911

if.then4:                                         ; preds = %if.then
  %call = call i32* @__errno_location() #14, !dbg !16912
  store i32 0, i32* %call, align 4, !dbg !16914
  %7 = load i16*, i16** %pathend.addr, align 8, !dbg !16915
  %incdec.ptr = getelementptr i16, i16* %7, i32 1, !dbg !16915
  store i16* %incdec.ptr, i16** %pathend.addr, align 8, !dbg !16915
  store i16 47, i16* %7, align 2, !dbg !16916
  %8 = load i16*, i16** %pathend.addr, align 8, !dbg !16917
  store i16 0, i16* %8, align 2, !dbg !16918
  store i32 -1, i32* %retval, align 4, !dbg !16919
  br label %return, !dbg !16919

if.end:                                           ; preds = %if.then
  %9 = load i16*, i16** %pathbuf.addr, align 8, !dbg !16920
  %10 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16922
  %call5 = call i32 @g_lstat(i16* %9, %struct.stat* %sb, %struct.glob_t* %10), !dbg !16923
  %tobool = icmp ne i32 %call5, 0, !dbg !16923
  br i1 %tobool, label %if.then6, label %if.end7, !dbg !16924

if.then6:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !16925
  br label %return, !dbg !16925

if.end7:                                          ; preds = %if.end
  %11 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16927
  %gl_flags = getelementptr inbounds %struct.glob_t, %struct.glob_t* %11, i32 0, i32 5, !dbg !16929
  %12 = load i32, i32* %gl_flags, align 8, !dbg !16929
  %and = and i32 %12, 8, !dbg !16930
  %tobool8 = icmp ne i32 %and, 0, !dbg !16930
  br i1 %tobool8, label %land.lhs.true, label %if.end35, !dbg !16931

land.lhs.true:                                    ; preds = %if.end7
  %13 = load i16*, i16** %pathend.addr, align 8, !dbg !16932
  %arrayidx = getelementptr i16, i16* %13, i64 -1, !dbg !16932
  %14 = load i16, i16* %arrayidx, align 2, !dbg !16932
  %conv9 = zext i16 %14 to i32, !dbg !16932
  %cmp10 = icmp ne i32 %conv9, 47, !dbg !16933
  br i1 %cmp10, label %land.lhs.true12, label %if.end35, !dbg !16934

land.lhs.true12:                                  ; preds = %land.lhs.true
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 3, !dbg !16935
  %15 = load i32, i32* %st_mode, align 8, !dbg !16935
  %and13 = and i32 %15, 61440, !dbg !16935
  %cmp14 = icmp eq i32 %and13, 16384, !dbg !16935
  br i1 %cmp14, label %if.then29, label %lor.lhs.false, !dbg !16936

lor.lhs.false:                                    ; preds = %land.lhs.true12
  %st_mode16 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 3, !dbg !16937
  %16 = load i32, i32* %st_mode16, align 8, !dbg !16937
  %and17 = and i32 %16, 61440, !dbg !16937
  %cmp18 = icmp eq i32 %and17, 40960, !dbg !16937
  br i1 %cmp18, label %land.lhs.true20, label %if.end35, !dbg !16938

land.lhs.true20:                                  ; preds = %lor.lhs.false
  %17 = load i16*, i16** %pathbuf.addr, align 8, !dbg !16939
  %18 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16940
  %call21 = call i32 @g_stat(i16* %17, %struct.stat* %sb, %struct.glob_t* %18), !dbg !16941
  %cmp22 = icmp eq i32 %call21, 0, !dbg !16942
  br i1 %cmp22, label %land.lhs.true24, label %if.end35, !dbg !16943

land.lhs.true24:                                  ; preds = %land.lhs.true20
  %st_mode25 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 3, !dbg !16944
  %19 = load i32, i32* %st_mode25, align 8, !dbg !16944
  %and26 = and i32 %19, 61440, !dbg !16944
  %cmp27 = icmp eq i32 %and26, 16384, !dbg !16944
  br i1 %cmp27, label %if.then29, label %if.end35, !dbg !16945

if.then29:                                        ; preds = %land.lhs.true24, %land.lhs.true12
  %20 = load i16*, i16** %pathend.addr, align 8, !dbg !16946
  %add.ptr = getelementptr i16, i16* %20, i64 1, !dbg !16949
  %21 = load i16*, i16** %pathend_last.addr, align 8, !dbg !16950
  %cmp30 = icmp ugt i16* %add.ptr, %21, !dbg !16951
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !16952

if.then32:                                        ; preds = %if.then29
  store i32 1, i32* %retval, align 4, !dbg !16953
  br label %return, !dbg !16953

if.end33:                                         ; preds = %if.then29
  %22 = load i16*, i16** %pathend.addr, align 8, !dbg !16955
  %incdec.ptr34 = getelementptr i16, i16* %22, i32 1, !dbg !16955
  store i16* %incdec.ptr34, i16** %pathend.addr, align 8, !dbg !16955
  store i16 47, i16* %22, align 2, !dbg !16956
  %23 = load i16*, i16** %pathend.addr, align 8, !dbg !16957
  store i16 0, i16* %23, align 2, !dbg !16958
  br label %if.end35, !dbg !16959

if.end35:                                         ; preds = %if.end33, %land.lhs.true24, %land.lhs.true20, %lor.lhs.false, %land.lhs.true, %if.end7
  %24 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16960
  %gl_matchc = getelementptr inbounds %struct.glob_t, %struct.glob_t* %24, i32 0, i32 3, !dbg !16961
  %25 = load i32, i32* %gl_matchc, align 8, !dbg !16962
  %inc36 = add i32 %25, 1, !dbg !16962
  store i32 %inc36, i32* %gl_matchc, align 8, !dbg !16962
  %26 = load i16*, i16** %pathbuf.addr, align 8, !dbg !16963
  %27 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !16964
  %28 = load %struct.glob_lim*, %struct.glob_lim** %limitp.addr, align 8, !dbg !16965
  %call37 = call i32 @globextend(i16* %26, %struct.glob_t* %27, %struct.glob_lim* %28, %struct.stat* %sb), !dbg !16966
  store i32 %call37, i32* %retval, align 4, !dbg !16967
  br label %return, !dbg !16967

if.end38:                                         ; preds = %for.cond
  %29 = load i16*, i16** %pathend.addr, align 8, !dbg !16968
  store i16* %29, i16** %q, align 8, !dbg !16969
  %30 = load i16*, i16** %pattern.addr, align 8, !dbg !16970
  store i16* %30, i16** %p, align 8, !dbg !16971
  br label %while.cond, !dbg !16972

while.cond:                                       ; preds = %if.end55, %if.end38
  %31 = load i16*, i16** %p, align 8, !dbg !16973
  %32 = load i16, i16* %31, align 2, !dbg !16974
  %conv39 = zext i16 %32 to i32, !dbg !16974
  %cmp40 = icmp ne i32 %conv39, 0, !dbg !16975
  br i1 %cmp40, label %land.rhs, label %land.end, !dbg !16976

land.rhs:                                         ; preds = %while.cond
  %33 = load i16*, i16** %p, align 8, !dbg !16977
  %34 = load i16, i16* %33, align 2, !dbg !16978
  %conv42 = zext i16 %34 to i32, !dbg !16978
  %cmp43 = icmp ne i32 %conv42, 47, !dbg !16979
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %35 = phi i1 [ false, %while.cond ], [ %cmp43, %land.rhs ], !dbg !16980
  br i1 %35, label %while.body, label %while.end, !dbg !16972

while.body:                                       ; preds = %land.end
  %36 = load i16*, i16** %p, align 8, !dbg !16981
  %37 = load i16, i16* %36, align 2, !dbg !16981
  %conv45 = zext i16 %37 to i32, !dbg !16981
  %and46 = and i32 %conv45, 32768, !dbg !16981
  %cmp47 = icmp ne i32 %and46, 0, !dbg !16981
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !16984

if.then49:                                        ; preds = %while.body
  store i32 1, i32* %anymeta, align 4, !dbg !16985
  br label %if.end50, !dbg !16987

if.end50:                                         ; preds = %if.then49, %while.body
  %38 = load i16*, i16** %q, align 8, !dbg !16988
  %add.ptr51 = getelementptr i16, i16* %38, i64 1, !dbg !16990
  %39 = load i16*, i16** %pathend_last.addr, align 8, !dbg !16991
  %cmp52 = icmp ugt i16* %add.ptr51, %39, !dbg !16992
  br i1 %cmp52, label %if.then54, label %if.end55, !dbg !16993

if.then54:                                        ; preds = %if.end50
  store i32 1, i32* %retval, align 4, !dbg !16994
  br label %return, !dbg !16994

if.end55:                                         ; preds = %if.end50
  %40 = load i16*, i16** %p, align 8, !dbg !16996
  %incdec.ptr56 = getelementptr i16, i16* %40, i32 1, !dbg !16996
  store i16* %incdec.ptr56, i16** %p, align 8, !dbg !16996
  %41 = load i16, i16* %40, align 2, !dbg !16997
  %42 = load i16*, i16** %q, align 8, !dbg !16998
  %incdec.ptr57 = getelementptr i16, i16* %42, i32 1, !dbg !16998
  store i16* %incdec.ptr57, i16** %q, align 8, !dbg !16998
  store i16 %41, i16* %42, align 2, !dbg !16999
  br label %while.cond, !dbg !16972, !llvm.loop !17000

while.end:                                        ; preds = %land.end
  %43 = load i32, i32* %anymeta, align 4, !dbg !17002
  %tobool58 = icmp ne i32 %43, 0, !dbg !17002
  br i1 %tobool58, label %if.else, label %if.then59, !dbg !17004

if.then59:                                        ; preds = %while.end
  %44 = load i16*, i16** %q, align 8, !dbg !17005
  store i16* %44, i16** %pathend.addr, align 8, !dbg !17007
  %45 = load i16*, i16** %p, align 8, !dbg !17008
  store i16* %45, i16** %pattern.addr, align 8, !dbg !17009
  br label %while.cond60, !dbg !17010

while.cond60:                                     ; preds = %if.end69, %if.then59
  %46 = load i16*, i16** %pattern.addr, align 8, !dbg !17011
  %47 = load i16, i16* %46, align 2, !dbg !17012
  %conv61 = zext i16 %47 to i32, !dbg !17012
  %cmp62 = icmp eq i32 %conv61, 47, !dbg !17013
  br i1 %cmp62, label %while.body64, label %while.end72, !dbg !17010

while.body64:                                     ; preds = %while.cond60
  %48 = load i16*, i16** %pathend.addr, align 8, !dbg !17014
  %add.ptr65 = getelementptr i16, i16* %48, i64 1, !dbg !17017
  %49 = load i16*, i16** %pathend_last.addr, align 8, !dbg !17018
  %cmp66 = icmp ugt i16* %add.ptr65, %49, !dbg !17019
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !17020

if.then68:                                        ; preds = %while.body64
  store i32 1, i32* %retval, align 4, !dbg !17021
  br label %return, !dbg !17021

if.end69:                                         ; preds = %while.body64
  %50 = load i16*, i16** %pattern.addr, align 8, !dbg !17023
  %incdec.ptr70 = getelementptr i16, i16* %50, i32 1, !dbg !17023
  store i16* %incdec.ptr70, i16** %pattern.addr, align 8, !dbg !17023
  %51 = load i16, i16* %50, align 2, !dbg !17024
  %52 = load i16*, i16** %pathend.addr, align 8, !dbg !17025
  %incdec.ptr71 = getelementptr i16, i16* %52, i32 1, !dbg !17025
  store i16* %incdec.ptr71, i16** %pathend.addr, align 8, !dbg !17025
  store i16 %51, i16* %52, align 2, !dbg !17026
  br label %while.cond60, !dbg !17010, !llvm.loop !17027

while.end72:                                      ; preds = %while.cond60
  br label %if.end74, !dbg !17029

if.else:                                          ; preds = %while.end
  %53 = load i16*, i16** %pathbuf.addr, align 8, !dbg !17030
  %54 = load i16*, i16** %pathbuf_last.addr, align 8, !dbg !17032
  %55 = load i16*, i16** %pathend.addr, align 8, !dbg !17033
  %56 = load i16*, i16** %pathend_last.addr, align 8, !dbg !17034
  %57 = load i16*, i16** %pattern.addr, align 8, !dbg !17035
  %58 = load i16*, i16** %p, align 8, !dbg !17036
  %59 = load i16*, i16** %pattern_last.addr, align 8, !dbg !17037
  %60 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !17038
  %61 = load %struct.glob_lim*, %struct.glob_lim** %limitp.addr, align 8, !dbg !17039
  %62 = load i32, i32* %recursion.addr, align 4, !dbg !17040
  %add = add i32 %62, 1, !dbg !17041
  %call73 = call i32 @glob3(i16* %53, i16* %54, i16* %55, i16* %56, i16* %57, i16* %58, i16* %59, %struct.glob_t* %60, %struct.glob_lim* %61, i32 %add), !dbg !17042
  store i32 %call73, i32* %retval, align 4, !dbg !17043
  br label %return, !dbg !17043

if.end74:                                         ; preds = %while.end72
  br label %for.cond, !dbg !17044, !llvm.loop !17045

return:                                           ; preds = %if.else, %if.then68, %if.then54, %if.end35, %if.then32, %if.then6, %if.then4
  %63 = load i32, i32* %retval, align 4, !dbg !17048
  ret i32 %63, !dbg !17048
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @g_lstat(i16* %fn, %struct.stat* %sb, %struct.glob_t* %pglob) #0 !dbg !17049 {
entry:
  %retval = alloca i32, align 4
  %fn.addr = alloca i16*, align 8
  %sb.addr = alloca %struct.stat*, align 8
  %pglob.addr = alloca %struct.glob_t*, align 8
  %buf = alloca [4096 x i8], align 16
  store i16* %fn, i16** %fn.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %fn.addr, metadata !17052, metadata !DIExpression()), !dbg !17053
  store %struct.stat* %sb, %struct.stat** %sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %sb.addr, metadata !17054, metadata !DIExpression()), !dbg !17055
  store %struct.glob_t* %pglob, %struct.glob_t** %pglob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.glob_t** %pglob.addr, metadata !17056, metadata !DIExpression()), !dbg !17057
  call void @llvm.dbg.declare(metadata [4096 x i8]* %buf, metadata !17058, metadata !DIExpression()), !dbg !17059
  %0 = load i16*, i16** %fn.addr, align 8, !dbg !17060
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %buf, i64 0, i64 0, !dbg !17062
  %call = call i32 @g_Ctoc(i16* %0, i8* %arraydecay, i32 4096), !dbg !17063
  %tobool = icmp ne i32 %call, 0, !dbg !17063
  br i1 %tobool, label %if.then, label %if.end, !dbg !17064

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !17065
  br label %return, !dbg !17065

if.end:                                           ; preds = %entry
  %1 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !17067
  %gl_flags = getelementptr inbounds %struct.glob_t, %struct.glob_t* %1, i32 0, i32 5, !dbg !17069
  %2 = load i32, i32* %gl_flags, align 8, !dbg !17069
  %and = and i32 %2, 64, !dbg !17070
  %tobool1 = icmp ne i32 %and, 0, !dbg !17070
  br i1 %tobool1, label %if.then2, label %if.end5, !dbg !17071

if.then2:                                         ; preds = %if.end
  %3 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !17072
  %gl_lstat = getelementptr inbounds %struct.glob_t, %struct.glob_t* %3, i32 0, i32 12, !dbg !17074
  %4 = load i32 (i8*, %struct.stat*)*, i32 (i8*, %struct.stat*)** %gl_lstat, align 8, !dbg !17074
  %arraydecay3 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buf, i64 0, i64 0, !dbg !17075
  %5 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !17076
  %call4 = call i32 %4(i8* %arraydecay3, %struct.stat* %5), !dbg !17077
  store i32 %call4, i32* %retval, align 4, !dbg !17078
  br label %return, !dbg !17078

if.end5:                                          ; preds = %if.end
  %arraydecay6 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buf, i64 0, i64 0, !dbg !17079
  %6 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !17080
  %call7 = call i32 @lstat(i8* %arraydecay6, %struct.stat* %6) #7, !dbg !17081
  store i32 %call7, i32* %retval, align 4, !dbg !17082
  br label %return, !dbg !17082

return:                                           ; preds = %if.end5, %if.then2, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !17083
  ret i32 %7, !dbg !17083
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @g_stat(i16* %fn, %struct.stat* %sb, %struct.glob_t* %pglob) #0 !dbg !17084 {
entry:
  %retval = alloca i32, align 4
  %fn.addr = alloca i16*, align 8
  %sb.addr = alloca %struct.stat*, align 8
  %pglob.addr = alloca %struct.glob_t*, align 8
  %buf = alloca [4096 x i8], align 16
  store i16* %fn, i16** %fn.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %fn.addr, metadata !17085, metadata !DIExpression()), !dbg !17086
  store %struct.stat* %sb, %struct.stat** %sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %sb.addr, metadata !17087, metadata !DIExpression()), !dbg !17088
  store %struct.glob_t* %pglob, %struct.glob_t** %pglob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.glob_t** %pglob.addr, metadata !17089, metadata !DIExpression()), !dbg !17090
  call void @llvm.dbg.declare(metadata [4096 x i8]* %buf, metadata !17091, metadata !DIExpression()), !dbg !17092
  %0 = load i16*, i16** %fn.addr, align 8, !dbg !17093
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %buf, i64 0, i64 0, !dbg !17095
  %call = call i32 @g_Ctoc(i16* %0, i8* %arraydecay, i32 4096), !dbg !17096
  %tobool = icmp ne i32 %call, 0, !dbg !17096
  br i1 %tobool, label %if.then, label %if.end, !dbg !17097

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !17098
  br label %return, !dbg !17098

if.end:                                           ; preds = %entry
  %1 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !17100
  %gl_flags = getelementptr inbounds %struct.glob_t, %struct.glob_t* %1, i32 0, i32 5, !dbg !17102
  %2 = load i32, i32* %gl_flags, align 8, !dbg !17102
  %and = and i32 %2, 64, !dbg !17103
  %tobool1 = icmp ne i32 %and, 0, !dbg !17103
  br i1 %tobool1, label %if.then2, label %if.end5, !dbg !17104

if.then2:                                         ; preds = %if.end
  %3 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !17105
  %gl_stat = getelementptr inbounds %struct.glob_t, %struct.glob_t* %3, i32 0, i32 13, !dbg !17107
  %4 = load i32 (i8*, %struct.stat*)*, i32 (i8*, %struct.stat*)** %gl_stat, align 8, !dbg !17107
  %arraydecay3 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buf, i64 0, i64 0, !dbg !17108
  %5 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !17109
  %call4 = call i32 %4(i8* %arraydecay3, %struct.stat* %5), !dbg !17110
  store i32 %call4, i32* %retval, align 4, !dbg !17111
  br label %return, !dbg !17111

if.end5:                                          ; preds = %if.end
  %arraydecay6 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buf, i64 0, i64 0, !dbg !17112
  %6 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !17113
  %call7 = call i32 @stat(i8* %arraydecay6, %struct.stat* %6) #7, !dbg !17114
  store i32 %call7, i32* %retval, align 4, !dbg !17115
  br label %return, !dbg !17115

return:                                           ; preds = %if.end5, %if.then2, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !17116
  ret i32 %7, !dbg !17116
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @glob3(i16* %pathbuf, i16* %pathbuf_last, i16* %pathend, i16* %pathend_last, i16* %pattern, i16* %restpattern, i16* %restpattern_last, %struct.glob_t* %pglob, %struct.glob_lim* %limitp, i32 %recursion) #0 !dbg !17117 {
entry:
  %retval = alloca i32, align 4
  %pathbuf.addr = alloca i16*, align 8
  %pathbuf_last.addr = alloca i16*, align 8
  %pathend.addr = alloca i16*, align 8
  %pathend_last.addr = alloca i16*, align 8
  %pattern.addr = alloca i16*, align 8
  %restpattern.addr = alloca i16*, align 8
  %restpattern_last.addr = alloca i16*, align 8
  %pglob.addr = alloca %struct.glob_t*, align 8
  %limitp.addr = alloca %struct.glob_lim*, align 8
  %recursion.addr = alloca i32, align 4
  %dp = alloca %struct.dirent*, align 8
  %dirp = alloca %struct.__dirstream*, align 8
  %err = alloca i32, align 4
  %buf = alloca [4096 x i8], align 16
  %readdirfunc = alloca %struct.dirent* (i8*)*, align 8
  %sc = alloca i8*, align 8
  %dc = alloca i16*, align 8
  store i16* %pathbuf, i16** %pathbuf.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %pathbuf.addr, metadata !17120, metadata !DIExpression()), !dbg !17121
  store i16* %pathbuf_last, i16** %pathbuf_last.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %pathbuf_last.addr, metadata !17122, metadata !DIExpression()), !dbg !17123
  store i16* %pathend, i16** %pathend.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %pathend.addr, metadata !17124, metadata !DIExpression()), !dbg !17125
  store i16* %pathend_last, i16** %pathend_last.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %pathend_last.addr, metadata !17126, metadata !DIExpression()), !dbg !17127
  store i16* %pattern, i16** %pattern.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %pattern.addr, metadata !17128, metadata !DIExpression()), !dbg !17129
  store i16* %restpattern, i16** %restpattern.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %restpattern.addr, metadata !17130, metadata !DIExpression()), !dbg !17131
  store i16* %restpattern_last, i16** %restpattern_last.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %restpattern_last.addr, metadata !17132, metadata !DIExpression()), !dbg !17133
  store %struct.glob_t* %pglob, %struct.glob_t** %pglob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.glob_t** %pglob.addr, metadata !17134, metadata !DIExpression()), !dbg !17135
  store %struct.glob_lim* %limitp, %struct.glob_lim** %limitp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.glob_lim** %limitp.addr, metadata !17136, metadata !DIExpression()), !dbg !17137
  store i32 %recursion, i32* %recursion.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %recursion.addr, metadata !17138, metadata !DIExpression()), !dbg !17139
  call void @llvm.dbg.declare(metadata %struct.dirent** %dp, metadata !17140, metadata !DIExpression()), !dbg !17141
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !17142, metadata !DIExpression()), !dbg !17143
  call void @llvm.dbg.declare(metadata i32* %err, metadata !17144, metadata !DIExpression()), !dbg !17145
  call void @llvm.dbg.declare(metadata [4096 x i8]* %buf, metadata !17146, metadata !DIExpression()), !dbg !17147
  call void @llvm.dbg.declare(metadata %struct.dirent* (i8*)** %readdirfunc, metadata !17148, metadata !DIExpression()), !dbg !17149
  %0 = load i16*, i16** %pathend.addr, align 8, !dbg !17150
  %1 = load i16*, i16** %pathend_last.addr, align 8, !dbg !17152
  %cmp = icmp ugt i16* %0, %1, !dbg !17153
  br i1 %cmp, label %if.then, label %if.end, !dbg !17154

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !17155
  br label %return, !dbg !17155

if.end:                                           ; preds = %entry
  %2 = load i16*, i16** %pathend.addr, align 8, !dbg !17157
  store i16 0, i16* %2, align 2, !dbg !17158
  %call = call i32* @__errno_location() #14, !dbg !17159
  store i32 0, i32* %call, align 4, !dbg !17160
  %3 = load i32, i32* %recursion.addr, align 4, !dbg !17161
  %4 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !17163
  %gl_maxdepth = getelementptr inbounds %struct.glob_t, %struct.glob_t* %4, i32 0, i32 1, !dbg !17164
  %5 = load i32, i32* %gl_maxdepth, align 8, !dbg !17164
  %cmp1 = icmp sge i32 %3, %5, !dbg !17165
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !17166

if.then2:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !17167
  br label %return, !dbg !17167

if.end3:                                          ; preds = %if.end
  %6 = load i16*, i16** %pathbuf.addr, align 8, !dbg !17169
  %7 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !17171
  %call4 = call %struct.__dirstream* @g_opendir(i16* %6, %struct.glob_t* %7), !dbg !17172
  store %struct.__dirstream* %call4, %struct.__dirstream** %dirp, align 8, !dbg !17173
  %cmp5 = icmp eq %struct.__dirstream* %call4, null, !dbg !17174
  br i1 %cmp5, label %if.then6, label %if.end21, !dbg !17175

if.then6:                                         ; preds = %if.end3
  %8 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !17176
  %gl_errfunc = getelementptr inbounds %struct.glob_t, %struct.glob_t* %8, i32 0, i32 8, !dbg !17179
  %9 = load i32 (i8*, i32)*, i32 (i8*, i32)** %gl_errfunc, align 8, !dbg !17179
  %tobool = icmp ne i32 (i8*, i32)* %9, null, !dbg !17176
  br i1 %tobool, label %if.then7, label %if.end20, !dbg !17180

if.then7:                                         ; preds = %if.then6
  %10 = load i16*, i16** %pathbuf.addr, align 8, !dbg !17181
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %buf, i64 0, i64 0, !dbg !17184
  %call8 = call i32 @g_Ctoc(i16* %10, i8* %arraydecay, i32 4096), !dbg !17185
  %tobool9 = icmp ne i32 %call8, 0, !dbg !17185
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !17186

if.then10:                                        ; preds = %if.then7
  store i32 -2, i32* %retval, align 4, !dbg !17187
  br label %return, !dbg !17187

if.end11:                                         ; preds = %if.then7
  %11 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !17189
  %gl_errfunc12 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %11, i32 0, i32 8, !dbg !17191
  %12 = load i32 (i8*, i32)*, i32 (i8*, i32)** %gl_errfunc12, align 8, !dbg !17191
  %arraydecay13 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buf, i64 0, i64 0, !dbg !17192
  %call14 = call i32* @__errno_location() #14, !dbg !17193
  %13 = load i32, i32* %call14, align 4, !dbg !17193
  %call15 = call i32 %12(i8* %arraydecay13, i32 %13), !dbg !17189
  %tobool16 = icmp ne i32 %call15, 0, !dbg !17189
  br i1 %tobool16, label %if.then18, label %lor.lhs.false, !dbg !17194

lor.lhs.false:                                    ; preds = %if.end11
  %14 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !17195
  %gl_flags = getelementptr inbounds %struct.glob_t, %struct.glob_t* %14, i32 0, i32 5, !dbg !17196
  %15 = load i32, i32* %gl_flags, align 8, !dbg !17196
  %and = and i32 %15, 4, !dbg !17197
  %tobool17 = icmp ne i32 %and, 0, !dbg !17197
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !17198

if.then18:                                        ; preds = %lor.lhs.false, %if.end11
  store i32 -2, i32* %retval, align 4, !dbg !17199
  br label %return, !dbg !17199

if.end19:                                         ; preds = %lor.lhs.false
  br label %if.end20, !dbg !17201

if.end20:                                         ; preds = %if.end19, %if.then6
  store i32 0, i32* %retval, align 4, !dbg !17202
  br label %return, !dbg !17202

if.end21:                                         ; preds = %if.end3
  store i32 0, i32* %err, align 4, !dbg !17203
  %16 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !17204
  %gl_flags22 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %16, i32 0, i32 5, !dbg !17206
  %17 = load i32, i32* %gl_flags22, align 8, !dbg !17206
  %and23 = and i32 %17, 64, !dbg !17207
  %tobool24 = icmp ne i32 %and23, 0, !dbg !17207
  br i1 %tobool24, label %if.then25, label %if.else, !dbg !17208

if.then25:                                        ; preds = %if.end21
  %18 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !17209
  %gl_readdir = getelementptr inbounds %struct.glob_t, %struct.glob_t* %18, i32 0, i32 10, !dbg !17211
  %19 = load %struct.dirent* (i8*)*, %struct.dirent* (i8*)** %gl_readdir, align 8, !dbg !17211
  store %struct.dirent* (i8*)* %19, %struct.dirent* (i8*)** %readdirfunc, align 8, !dbg !17212
  br label %if.end26, !dbg !17213

if.else:                                          ; preds = %if.end21
  store %struct.dirent* (i8*)* bitcast (%struct.dirent* (%struct.__dirstream*)* @readdir to %struct.dirent* (i8*)*), %struct.dirent* (i8*)** %readdirfunc, align 8, !dbg !17214
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.then25
  br label %while.cond, !dbg !17216

while.cond:                                       ; preds = %if.end65, %if.then59, %if.then38, %if.end26
  %20 = load %struct.dirent* (i8*)*, %struct.dirent* (i8*)** %readdirfunc, align 8, !dbg !17217
  %21 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !17218
  %22 = bitcast %struct.__dirstream* %21 to i8*, !dbg !17218
  %call27 = call %struct.dirent* %20(i8* %22), !dbg !17219
  store %struct.dirent* %call27, %struct.dirent** %dp, align 8, !dbg !17220
  %tobool28 = icmp ne %struct.dirent* %call27, null, !dbg !17216
  br i1 %tobool28, label %while.body, label %while.end66, !dbg !17216

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8** %sc, metadata !17221, metadata !DIExpression()), !dbg !17223
  call void @llvm.dbg.declare(metadata i16** %dc, metadata !17224, metadata !DIExpression()), !dbg !17225
  %23 = load %struct.glob_lim*, %struct.glob_lim** %limitp.addr, align 8, !dbg !17226
  %glim_readdir = getelementptr inbounds %struct.glob_lim, %struct.glob_lim* %23, i32 0, i32 2, !dbg !17228
  %24 = load i64, i64* %glim_readdir, align 8, !dbg !17229
  %inc = add i64 %24, 1, !dbg !17229
  store i64 %inc, i64* %glim_readdir, align 8, !dbg !17229
  %25 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !17230
  %gl_maxfiles = getelementptr inbounds %struct.glob_t, %struct.glob_t* %25, i32 0, i32 0, !dbg !17231
  %26 = load i64, i64* %gl_maxfiles, align 8, !dbg !17231
  %cmp29 = icmp uge i64 %24, %26, !dbg !17232
  br i1 %cmp29, label %if.then30, label %if.end32, !dbg !17233

if.then30:                                        ; preds = %while.body
  %call31 = call i32* @__errno_location() #14, !dbg !17234
  store i32 0, i32* %call31, align 4, !dbg !17236
  %27 = load i16*, i16** %pathend.addr, align 8, !dbg !17237
  %incdec.ptr = getelementptr i16, i16* %27, i32 1, !dbg !17237
  store i16* %incdec.ptr, i16** %pathend.addr, align 8, !dbg !17237
  store i16 47, i16* %27, align 2, !dbg !17238
  %28 = load i16*, i16** %pathend.addr, align 8, !dbg !17239
  store i16 0, i16* %28, align 2, !dbg !17240
  store i32 -1, i32* %err, align 4, !dbg !17241
  br label %while.end66, !dbg !17242

if.end32:                                         ; preds = %while.body
  %29 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !17243
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %29, i32 0, i32 4, !dbg !17245
  %arrayidx = getelementptr [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !17243
  %30 = load i8, i8* %arrayidx, align 1, !dbg !17243
  %conv = sext i8 %30 to i32, !dbg !17243
  %cmp33 = icmp eq i32 %conv, 46, !dbg !17246
  br i1 %cmp33, label %land.lhs.true, label %if.end39, !dbg !17247

land.lhs.true:                                    ; preds = %if.end32
  %31 = load i16*, i16** %pattern.addr, align 8, !dbg !17248
  %32 = load i16, i16* %31, align 2, !dbg !17249
  %conv35 = zext i16 %32 to i32, !dbg !17249
  %cmp36 = icmp ne i32 %conv35, 46, !dbg !17250
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !17251

if.then38:                                        ; preds = %land.lhs.true
  br label %while.cond, !dbg !17252, !llvm.loop !17254

if.end39:                                         ; preds = %land.lhs.true, %if.end32
  %33 = load i16*, i16** %pathend.addr, align 8, !dbg !17256
  store i16* %33, i16** %dc, align 8, !dbg !17257
  %34 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !17258
  %d_name40 = getelementptr inbounds %struct.dirent, %struct.dirent* %34, i32 0, i32 4, !dbg !17259
  %arraydecay41 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name40, i64 0, i64 0, !dbg !17258
  store i8* %arraydecay41, i8** %sc, align 8, !dbg !17260
  br label %while.cond42, !dbg !17261

while.cond42:                                     ; preds = %while.body51, %if.end39
  %35 = load i16*, i16** %dc, align 8, !dbg !17262
  %36 = load i16*, i16** %pathend_last.addr, align 8, !dbg !17263
  %cmp43 = icmp ult i16* %35, %36, !dbg !17264
  br i1 %cmp43, label %land.rhs, label %land.end, !dbg !17265

land.rhs:                                         ; preds = %while.cond42
  %37 = load i8*, i8** %sc, align 8, !dbg !17266
  %incdec.ptr45 = getelementptr i8, i8* %37, i32 1, !dbg !17266
  store i8* %incdec.ptr45, i8** %sc, align 8, !dbg !17266
  %38 = load i8, i8* %37, align 1, !dbg !17267
  %conv46 = zext i8 %38 to i16, !dbg !17267
  %39 = load i16*, i16** %dc, align 8, !dbg !17268
  %incdec.ptr47 = getelementptr i16, i16* %39, i32 1, !dbg !17268
  store i16* %incdec.ptr47, i16** %dc, align 8, !dbg !17268
  store i16 %conv46, i16* %39, align 2, !dbg !17269
  %conv48 = zext i16 %conv46 to i32, !dbg !17270
  %cmp49 = icmp ne i32 %conv48, 0, !dbg !17271
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond42
  %40 = phi i1 [ false, %while.cond42 ], [ %cmp49, %land.rhs ], !dbg !17272
  br i1 %40, label %while.body51, label %while.end, !dbg !17261

while.body51:                                     ; preds = %land.end
  br label %while.cond42, !dbg !17261, !llvm.loop !17273

while.end:                                        ; preds = %land.end
  %41 = load i16*, i16** %dc, align 8, !dbg !17275
  %42 = load i16*, i16** %pathend_last.addr, align 8, !dbg !17277
  %cmp52 = icmp uge i16* %41, %42, !dbg !17278
  br i1 %cmp52, label %if.then54, label %if.end55, !dbg !17279

if.then54:                                        ; preds = %while.end
  %43 = load i16*, i16** %dc, align 8, !dbg !17280
  store i16 0, i16* %43, align 2, !dbg !17282
  store i32 1, i32* %err, align 4, !dbg !17283
  br label %while.end66, !dbg !17284

if.end55:                                         ; preds = %while.end
  %44 = load i16*, i16** %pathend.addr, align 8, !dbg !17285
  %45 = load i16*, i16** %pattern.addr, align 8, !dbg !17287
  %46 = load i16*, i16** %restpattern.addr, align 8, !dbg !17288
  %47 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !17289
  %gl_maxdepth56 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %47, i32 0, i32 1, !dbg !17290
  %48 = load i32, i32* %gl_maxdepth56, align 8, !dbg !17290
  %call57 = call i32 @match(i16* %44, i16* %45, i16* %46, i32 %48), !dbg !17291
  %tobool58 = icmp ne i32 %call57, 0, !dbg !17291
  br i1 %tobool58, label %if.end60, label %if.then59, !dbg !17292

if.then59:                                        ; preds = %if.end55
  %49 = load i16*, i16** %pathend.addr, align 8, !dbg !17293
  store i16 0, i16* %49, align 2, !dbg !17295
  br label %while.cond, !dbg !17296, !llvm.loop !17254

if.end60:                                         ; preds = %if.end55
  %50 = load i16*, i16** %pathbuf.addr, align 8, !dbg !17297
  %51 = load i16*, i16** %pathbuf_last.addr, align 8, !dbg !17298
  %52 = load i16*, i16** %dc, align 8, !dbg !17299
  %incdec.ptr61 = getelementptr i16, i16* %52, i32 -1, !dbg !17299
  store i16* %incdec.ptr61, i16** %dc, align 8, !dbg !17299
  %53 = load i16*, i16** %pathend_last.addr, align 8, !dbg !17300
  %54 = load i16*, i16** %restpattern.addr, align 8, !dbg !17301
  %55 = load i16*, i16** %restpattern_last.addr, align 8, !dbg !17302
  %56 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !17303
  %57 = load %struct.glob_lim*, %struct.glob_lim** %limitp.addr, align 8, !dbg !17304
  %58 = load i32, i32* %recursion.addr, align 4, !dbg !17305
  %call62 = call i32 @glob2(i16* %50, i16* %51, i16* %incdec.ptr61, i16* %53, i16* %54, i16* %55, %struct.glob_t* %56, %struct.glob_lim* %57, i32 %58), !dbg !17306
  store i32 %call62, i32* %err, align 4, !dbg !17307
  %59 = load i32, i32* %err, align 4, !dbg !17308
  %tobool63 = icmp ne i32 %59, 0, !dbg !17308
  br i1 %tobool63, label %if.then64, label %if.end65, !dbg !17310

if.then64:                                        ; preds = %if.end60
  br label %while.end66, !dbg !17311

if.end65:                                         ; preds = %if.end60
  br label %while.cond, !dbg !17216, !llvm.loop !17254

while.end66:                                      ; preds = %if.then64, %if.then54, %if.then30, %while.cond
  %60 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !17313
  %gl_flags67 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %60, i32 0, i32 5, !dbg !17315
  %61 = load i32, i32* %gl_flags67, align 8, !dbg !17315
  %and68 = and i32 %61, 64, !dbg !17316
  %tobool69 = icmp ne i32 %and68, 0, !dbg !17316
  br i1 %tobool69, label %if.then70, label %if.else71, !dbg !17317

if.then70:                                        ; preds = %while.end66
  %62 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !17318
  %gl_closedir = getelementptr inbounds %struct.glob_t, %struct.glob_t* %62, i32 0, i32 9, !dbg !17320
  %63 = load void (i8*)*, void (i8*)** %gl_closedir, align 8, !dbg !17320
  %64 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !17321
  %65 = bitcast %struct.__dirstream* %64 to i8*, !dbg !17321
  call void %63(i8* %65), !dbg !17322
  br label %if.end73, !dbg !17323

if.else71:                                        ; preds = %while.end66
  %66 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !17324
  %call72 = call i32 @closedir(%struct.__dirstream* %66), !dbg !17326
  br label %if.end73

if.end73:                                         ; preds = %if.else71, %if.then70
  %67 = load i32, i32* %err, align 4, !dbg !17327
  store i32 %67, i32* %retval, align 4, !dbg !17328
  br label %return, !dbg !17328

return:                                           ; preds = %if.end73, %if.end20, %if.then18, %if.then10, %if.then2, %if.then
  %68 = load i32, i32* %retval, align 4, !dbg !17329
  ret i32 %68, !dbg !17329
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal %struct.__dirstream* @g_opendir(i16* %str, %struct.glob_t* %pglob) #0 !dbg !17330 {
entry:
  %retval = alloca %struct.__dirstream*, align 8
  %str.addr = alloca i16*, align 8
  %pglob.addr = alloca %struct.glob_t*, align 8
  %buf = alloca [4096 x i8], align 16
  store i16* %str, i16** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %str.addr, metadata !17333, metadata !DIExpression()), !dbg !17334
  store %struct.glob_t* %pglob, %struct.glob_t** %pglob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.glob_t** %pglob.addr, metadata !17335, metadata !DIExpression()), !dbg !17336
  call void @llvm.dbg.declare(metadata [4096 x i8]* %buf, metadata !17337, metadata !DIExpression()), !dbg !17338
  %0 = load i16*, i16** %str.addr, align 8, !dbg !17339
  %1 = load i16, i16* %0, align 2, !dbg !17341
  %tobool = icmp ne i16 %1, 0, !dbg !17341
  br i1 %tobool, label %if.else, label %if.then, !dbg !17342

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr [4096 x i8], [4096 x i8]* %buf, i64 0, i64 0, !dbg !17343
  store i8 46, i8* %arrayidx, align 16, !dbg !17345
  %arrayidx1 = getelementptr [4096 x i8], [4096 x i8]* %buf, i64 0, i64 1, !dbg !17346
  store i8 0, i8* %arrayidx1, align 1, !dbg !17347
  br label %if.end4, !dbg !17348

if.else:                                          ; preds = %entry
  %2 = load i16*, i16** %str.addr, align 8, !dbg !17349
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %buf, i64 0, i64 0, !dbg !17352
  %call = call i32 @g_Ctoc(i16* %2, i8* %arraydecay, i32 4096), !dbg !17353
  %tobool2 = icmp ne i32 %call, 0, !dbg !17353
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !17354

if.then3:                                         ; preds = %if.else
  store %struct.__dirstream* null, %struct.__dirstream** %retval, align 8, !dbg !17355
  br label %return, !dbg !17355

if.end:                                           ; preds = %if.else
  br label %if.end4

if.end4:                                          ; preds = %if.end, %if.then
  %3 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !17357
  %gl_flags = getelementptr inbounds %struct.glob_t, %struct.glob_t* %3, i32 0, i32 5, !dbg !17359
  %4 = load i32, i32* %gl_flags, align 8, !dbg !17359
  %and = and i32 %4, 64, !dbg !17360
  %tobool5 = icmp ne i32 %and, 0, !dbg !17360
  br i1 %tobool5, label %if.then6, label %if.end9, !dbg !17361

if.then6:                                         ; preds = %if.end4
  %5 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !17362
  %gl_opendir = getelementptr inbounds %struct.glob_t, %struct.glob_t* %5, i32 0, i32 11, !dbg !17364
  %6 = load i8* (i8*)*, i8* (i8*)** %gl_opendir, align 8, !dbg !17364
  %arraydecay7 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buf, i64 0, i64 0, !dbg !17365
  %call8 = call i8* %6(i8* %arraydecay7), !dbg !17366
  %7 = bitcast i8* %call8 to %struct.__dirstream*, !dbg !17366
  store %struct.__dirstream* %7, %struct.__dirstream** %retval, align 8, !dbg !17367
  br label %return, !dbg !17367

if.end9:                                          ; preds = %if.end4
  %arraydecay10 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buf, i64 0, i64 0, !dbg !17368
  %call11 = call %struct.__dirstream* @opendir(i8* %arraydecay10), !dbg !17369
  store %struct.__dirstream* %call11, %struct.__dirstream** %retval, align 8, !dbg !17370
  br label %return, !dbg !17370

return:                                           ; preds = %if.end9, %if.then6, %if.then3
  %8 = load %struct.__dirstream*, %struct.__dirstream** %retval, align 8, !dbg !17371
  ret %struct.__dirstream* %8, !dbg !17371
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @match(i16* %name, i16* %pat, i16* %patend, i32 %recur) #0 !dbg !17372 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i16*, align 8
  %pat.addr = alloca i16*, align 8
  %patend.addr = alloca i16*, align 8
  %recur.addr = alloca i32, align 4
  %ok = alloca i32, align 4
  %negate_range = alloca i32, align 4
  %c = alloca i16, align 2
  %k = alloca i16, align 2
  store i16* %name, i16** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %name.addr, metadata !17375, metadata !DIExpression()), !dbg !17376
  store i16* %pat, i16** %pat.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %pat.addr, metadata !17377, metadata !DIExpression()), !dbg !17378
  store i16* %patend, i16** %patend.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %patend.addr, metadata !17379, metadata !DIExpression()), !dbg !17380
  store i32 %recur, i32* %recur.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %recur.addr, metadata !17381, metadata !DIExpression()), !dbg !17382
  call void @llvm.dbg.declare(metadata i32* %ok, metadata !17383, metadata !DIExpression()), !dbg !17384
  call void @llvm.dbg.declare(metadata i32* %negate_range, metadata !17385, metadata !DIExpression()), !dbg !17386
  call void @llvm.dbg.declare(metadata i16* %c, metadata !17387, metadata !DIExpression()), !dbg !17388
  call void @llvm.dbg.declare(metadata i16* %k, metadata !17389, metadata !DIExpression()), !dbg !17390
  %0 = load i32, i32* %recur.addr, align 4, !dbg !17391
  %dec = add i32 %0, -1, !dbg !17391
  store i32 %dec, i32* %recur.addr, align 4, !dbg !17391
  %cmp = icmp eq i32 %0, 0, !dbg !17393
  br i1 %cmp, label %if.then, label %if.end, !dbg !17394

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !17395
  br label %return, !dbg !17395

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !17397

while.cond:                                       ; preds = %sw.epilog, %if.end
  %1 = load i16*, i16** %pat.addr, align 8, !dbg !17398
  %2 = load i16*, i16** %patend.addr, align 8, !dbg !17399
  %cmp1 = icmp ult i16* %1, %2, !dbg !17400
  br i1 %cmp1, label %while.body, label %while.end85, !dbg !17397

while.body:                                       ; preds = %while.cond
  %3 = load i16*, i16** %pat.addr, align 8, !dbg !17401
  %incdec.ptr = getelementptr i16, i16* %3, i32 1, !dbg !17401
  store i16* %incdec.ptr, i16** %pat.addr, align 8, !dbg !17401
  %4 = load i16, i16* %3, align 2, !dbg !17403
  store i16 %4, i16* %c, align 2, !dbg !17404
  %5 = load i16, i16* %c, align 2, !dbg !17405
  %conv = zext i16 %5 to i32, !dbg !17405
  %and = and i32 %conv, 65535, !dbg !17406
  switch i32 %and, label %sw.default [
    i32 32810, label %sw.bb
    i32 32831, label %sw.bb21
    i32 32859, label %sw.bb28
  ], !dbg !17407

sw.bb:                                            ; preds = %while.body
  br label %while.cond2, !dbg !17408

while.cond2:                                      ; preds = %while.body9, %sw.bb
  %6 = load i16*, i16** %pat.addr, align 8, !dbg !17410
  %7 = load i16*, i16** %patend.addr, align 8, !dbg !17411
  %cmp3 = icmp ult i16* %6, %7, !dbg !17412
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !17413

land.rhs:                                         ; preds = %while.cond2
  %8 = load i16*, i16** %pat.addr, align 8, !dbg !17414
  %9 = load i16, i16* %8, align 2, !dbg !17415
  %conv5 = zext i16 %9 to i32, !dbg !17415
  %and6 = and i32 %conv5, 65535, !dbg !17416
  %cmp7 = icmp eq i32 %and6, 32810, !dbg !17417
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond2
  %10 = phi i1 [ false, %while.cond2 ], [ %cmp7, %land.rhs ], !dbg !17418
  br i1 %10, label %while.body9, label %while.end, !dbg !17408

while.body9:                                      ; preds = %land.end
  %11 = load i16*, i16** %pat.addr, align 8, !dbg !17419
  %incdec.ptr10 = getelementptr i16, i16* %11, i32 1, !dbg !17419
  store i16* %incdec.ptr10, i16** %pat.addr, align 8, !dbg !17419
  br label %while.cond2, !dbg !17408, !llvm.loop !17421

while.end:                                        ; preds = %land.end
  %12 = load i16*, i16** %pat.addr, align 8, !dbg !17423
  %13 = load i16*, i16** %patend.addr, align 8, !dbg !17425
  %cmp11 = icmp eq i16* %12, %13, !dbg !17426
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !17427

if.then13:                                        ; preds = %while.end
  store i32 1, i32* %retval, align 4, !dbg !17428
  br label %return, !dbg !17428

if.end14:                                         ; preds = %while.end
  br label %do.body, !dbg !17430

do.body:                                          ; preds = %do.cond, %if.end14
  %14 = load i16*, i16** %name.addr, align 8, !dbg !17431
  %15 = load i16*, i16** %pat.addr, align 8, !dbg !17434
  %16 = load i16*, i16** %patend.addr, align 8, !dbg !17435
  %17 = load i32, i32* %recur.addr, align 4, !dbg !17436
  %call = call i32 @match(i16* %14, i16* %15, i16* %16, i32 %17), !dbg !17437
  %tobool = icmp ne i32 %call, 0, !dbg !17437
  br i1 %tobool, label %if.then15, label %if.end16, !dbg !17438

if.then15:                                        ; preds = %do.body
  store i32 1, i32* %retval, align 4, !dbg !17439
  br label %return, !dbg !17439

if.end16:                                         ; preds = %do.body
  br label %do.cond, !dbg !17441

do.cond:                                          ; preds = %if.end16
  %18 = load i16*, i16** %name.addr, align 8, !dbg !17442
  %incdec.ptr17 = getelementptr i16, i16* %18, i32 1, !dbg !17442
  store i16* %incdec.ptr17, i16** %name.addr, align 8, !dbg !17442
  %19 = load i16, i16* %18, align 2, !dbg !17443
  %conv18 = zext i16 %19 to i32, !dbg !17443
  %cmp19 = icmp ne i32 %conv18, 0, !dbg !17444
  br i1 %cmp19, label %do.body, label %do.end, !dbg !17441, !llvm.loop !17445

do.end:                                           ; preds = %do.cond
  store i32 0, i32* %retval, align 4, !dbg !17447
  br label %return, !dbg !17447

sw.bb21:                                          ; preds = %while.body
  %20 = load i16*, i16** %name.addr, align 8, !dbg !17448
  %incdec.ptr22 = getelementptr i16, i16* %20, i32 1, !dbg !17448
  store i16* %incdec.ptr22, i16** %name.addr, align 8, !dbg !17448
  %21 = load i16, i16* %20, align 2, !dbg !17450
  %conv23 = zext i16 %21 to i32, !dbg !17450
  %cmp24 = icmp eq i32 %conv23, 0, !dbg !17451
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !17452

if.then26:                                        ; preds = %sw.bb21
  store i32 0, i32* %retval, align 4, !dbg !17453
  br label %return, !dbg !17453

if.end27:                                         ; preds = %sw.bb21
  br label %sw.epilog, !dbg !17455

sw.bb28:                                          ; preds = %while.body
  store i32 0, i32* %ok, align 4, !dbg !17456
  %22 = load i16*, i16** %name.addr, align 8, !dbg !17457
  %incdec.ptr29 = getelementptr i16, i16* %22, i32 1, !dbg !17457
  store i16* %incdec.ptr29, i16** %name.addr, align 8, !dbg !17457
  %23 = load i16, i16* %22, align 2, !dbg !17459
  store i16 %23, i16* %k, align 2, !dbg !17460
  %conv30 = zext i16 %23 to i32, !dbg !17461
  %cmp31 = icmp eq i32 %conv30, 0, !dbg !17462
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !17463

if.then33:                                        ; preds = %sw.bb28
  store i32 0, i32* %retval, align 4, !dbg !17464
  br label %return, !dbg !17464

if.end34:                                         ; preds = %sw.bb28
  %24 = load i16*, i16** %pat.addr, align 8, !dbg !17466
  %25 = load i16, i16* %24, align 2, !dbg !17468
  %conv35 = zext i16 %25 to i32, !dbg !17468
  %and36 = and i32 %conv35, 65535, !dbg !17469
  %cmp37 = icmp eq i32 %and36, 32801, !dbg !17470
  %conv38 = zext i1 %cmp37 to i32, !dbg !17470
  store i32 %conv38, i32* %negate_range, align 4, !dbg !17471
  %cmp39 = icmp ne i32 %conv38, 0, !dbg !17472
  br i1 %cmp39, label %if.then41, label %if.end43, !dbg !17473

if.then41:                                        ; preds = %if.end34
  %26 = load i16*, i16** %pat.addr, align 8, !dbg !17474
  %incdec.ptr42 = getelementptr i16, i16* %26, i32 1, !dbg !17474
  store i16* %incdec.ptr42, i16** %pat.addr, align 8, !dbg !17474
  br label %if.end43, !dbg !17476

if.end43:                                         ; preds = %if.then41, %if.end34
  br label %while.cond44, !dbg !17477

while.cond44:                                     ; preds = %if.end72, %if.end43
  %27 = load i16*, i16** %pat.addr, align 8, !dbg !17478
  %incdec.ptr45 = getelementptr i16, i16* %27, i32 1, !dbg !17478
  store i16* %incdec.ptr45, i16** %pat.addr, align 8, !dbg !17478
  %28 = load i16, i16* %27, align 2, !dbg !17479
  store i16 %28, i16* %c, align 2, !dbg !17480
  %conv46 = zext i16 %28 to i32, !dbg !17481
  %and47 = and i32 %conv46, 65535, !dbg !17482
  %cmp48 = icmp ne i32 %and47, 32861, !dbg !17483
  br i1 %cmp48, label %while.body50, label %while.end73, !dbg !17477

while.body50:                                     ; preds = %while.cond44
  %29 = load i16*, i16** %pat.addr, align 8, !dbg !17484
  %30 = load i16, i16* %29, align 2, !dbg !17487
  %conv51 = zext i16 %30 to i32, !dbg !17487
  %and52 = and i32 %conv51, 65535, !dbg !17488
  %cmp53 = icmp eq i32 %and52, 32813, !dbg !17489
  br i1 %cmp53, label %if.then55, label %if.else, !dbg !17490

if.then55:                                        ; preds = %while.body50
  %31 = load i16, i16* %c, align 2, !dbg !17491
  %conv56 = zext i16 %31 to i32, !dbg !17491
  %32 = load i16, i16* %k, align 2, !dbg !17494
  %conv57 = zext i16 %32 to i32, !dbg !17494
  %cmp58 = icmp sle i32 %conv56, %conv57, !dbg !17495
  br i1 %cmp58, label %land.lhs.true, label %if.end65, !dbg !17496

land.lhs.true:                                    ; preds = %if.then55
  %33 = load i16, i16* %k, align 2, !dbg !17497
  %conv60 = zext i16 %33 to i32, !dbg !17497
  %34 = load i16*, i16** %pat.addr, align 8, !dbg !17498
  %arrayidx = getelementptr i16, i16* %34, i64 1, !dbg !17498
  %35 = load i16, i16* %arrayidx, align 2, !dbg !17498
  %conv61 = zext i16 %35 to i32, !dbg !17498
  %cmp62 = icmp sle i32 %conv60, %conv61, !dbg !17499
  br i1 %cmp62, label %if.then64, label %if.end65, !dbg !17500

if.then64:                                        ; preds = %land.lhs.true
  store i32 1, i32* %ok, align 4, !dbg !17501
  br label %if.end65, !dbg !17503

if.end65:                                         ; preds = %if.then64, %land.lhs.true, %if.then55
  %36 = load i16*, i16** %pat.addr, align 8, !dbg !17504
  %add.ptr = getelementptr i16, i16* %36, i64 2, !dbg !17504
  store i16* %add.ptr, i16** %pat.addr, align 8, !dbg !17504
  br label %if.end72, !dbg !17505

if.else:                                          ; preds = %while.body50
  %37 = load i16, i16* %c, align 2, !dbg !17506
  %conv66 = zext i16 %37 to i32, !dbg !17506
  %38 = load i16, i16* %k, align 2, !dbg !17508
  %conv67 = zext i16 %38 to i32, !dbg !17508
  %cmp68 = icmp eq i32 %conv66, %conv67, !dbg !17509
  br i1 %cmp68, label %if.then70, label %if.end71, !dbg !17510

if.then70:                                        ; preds = %if.else
  store i32 1, i32* %ok, align 4, !dbg !17511
  br label %if.end71, !dbg !17513

if.end71:                                         ; preds = %if.then70, %if.else
  br label %if.end72

if.end72:                                         ; preds = %if.end71, %if.end65
  br label %while.cond44, !dbg !17477, !llvm.loop !17514

while.end73:                                      ; preds = %while.cond44
  %39 = load i32, i32* %ok, align 4, !dbg !17516
  %40 = load i32, i32* %negate_range, align 4, !dbg !17518
  %cmp74 = icmp eq i32 %39, %40, !dbg !17519
  br i1 %cmp74, label %if.then76, label %if.end77, !dbg !17520

if.then76:                                        ; preds = %while.end73
  store i32 0, i32* %retval, align 4, !dbg !17521
  br label %return, !dbg !17521

if.end77:                                         ; preds = %while.end73
  br label %sw.epilog, !dbg !17523

sw.default:                                       ; preds = %while.body
  %41 = load i16*, i16** %name.addr, align 8, !dbg !17524
  %incdec.ptr78 = getelementptr i16, i16* %41, i32 1, !dbg !17524
  store i16* %incdec.ptr78, i16** %name.addr, align 8, !dbg !17524
  %42 = load i16, i16* %41, align 2, !dbg !17526
  %conv79 = zext i16 %42 to i32, !dbg !17526
  %43 = load i16, i16* %c, align 2, !dbg !17527
  %conv80 = zext i16 %43 to i32, !dbg !17527
  %cmp81 = icmp ne i32 %conv79, %conv80, !dbg !17528
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !17529

if.then83:                                        ; preds = %sw.default
  store i32 0, i32* %retval, align 4, !dbg !17530
  br label %return, !dbg !17530

if.end84:                                         ; preds = %sw.default
  br label %sw.epilog, !dbg !17532

sw.epilog:                                        ; preds = %if.end84, %if.end77, %if.end27
  br label %while.cond, !dbg !17397, !llvm.loop !17533

while.end85:                                      ; preds = %while.cond
  %44 = load i16*, i16** %name.addr, align 8, !dbg !17535
  %45 = load i16, i16* %44, align 2, !dbg !17536
  %conv86 = zext i16 %45 to i32, !dbg !17536
  %cmp87 = icmp eq i32 %conv86, 0, !dbg !17537
  %conv88 = zext i1 %cmp87 to i32, !dbg !17537
  store i32 %conv88, i32* %retval, align 4, !dbg !17538
  br label %return, !dbg !17538

return:                                           ; preds = %while.end85, %if.then83, %if.then76, %if.then33, %if.then26, %do.end, %if.then15, %if.then13, %if.then
  %46 = load i32, i32* %retval, align 4, !dbg !17539
  ret i32 %46, !dbg !17539
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @globexp2(i16* %ptr, i16* %pattern, %struct.glob_t* %pglob, %struct.glob_lim* %limitp, i32 %recursion) #0 !dbg !17540 {
entry:
  %retval = alloca i32, align 4
  %ptr.addr = alloca i16*, align 8
  %pattern.addr = alloca i16*, align 8
  %pglob.addr = alloca %struct.glob_t*, align 8
  %limitp.addr = alloca %struct.glob_lim*, align 8
  %recursion.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %rv = alloca i32, align 4
  %lm = alloca i16*, align 8
  %ls = alloca i16*, align 8
  %pe = alloca i16*, align 8
  %pm = alloca i16*, align 8
  %pl = alloca i16*, align 8
  %patbuf = alloca [4096 x i16], align 16
  store i16* %ptr, i16** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %ptr.addr, metadata !17543, metadata !DIExpression()), !dbg !17544
  store i16* %pattern, i16** %pattern.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %pattern.addr, metadata !17545, metadata !DIExpression()), !dbg !17546
  store %struct.glob_t* %pglob, %struct.glob_t** %pglob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.glob_t** %pglob.addr, metadata !17547, metadata !DIExpression()), !dbg !17548
  store %struct.glob_lim* %limitp, %struct.glob_lim** %limitp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.glob_lim** %limitp.addr, metadata !17549, metadata !DIExpression()), !dbg !17550
  store i32 %recursion, i32* %recursion.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %recursion.addr, metadata !17551, metadata !DIExpression()), !dbg !17552
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17553, metadata !DIExpression()), !dbg !17554
  call void @llvm.dbg.declare(metadata i32* %rv, metadata !17555, metadata !DIExpression()), !dbg !17556
  call void @llvm.dbg.declare(metadata i16** %lm, metadata !17557, metadata !DIExpression()), !dbg !17558
  call void @llvm.dbg.declare(metadata i16** %ls, metadata !17559, metadata !DIExpression()), !dbg !17560
  call void @llvm.dbg.declare(metadata i16** %pe, metadata !17561, metadata !DIExpression()), !dbg !17562
  call void @llvm.dbg.declare(metadata i16** %pm, metadata !17563, metadata !DIExpression()), !dbg !17564
  call void @llvm.dbg.declare(metadata i16** %pl, metadata !17565, metadata !DIExpression()), !dbg !17566
  call void @llvm.dbg.declare(metadata [4096 x i16]* %patbuf, metadata !17567, metadata !DIExpression()), !dbg !17568
  %arraydecay = getelementptr inbounds [4096 x i16], [4096 x i16]* %patbuf, i64 0, i64 0, !dbg !17569
  store i16* %arraydecay, i16** %lm, align 8, !dbg !17571
  %0 = load i16*, i16** %pattern.addr, align 8, !dbg !17572
  store i16* %0, i16** %pm, align 8, !dbg !17573
  br label %for.cond, !dbg !17574

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i16*, i16** %pm, align 8, !dbg !17575
  %2 = load i16*, i16** %ptr.addr, align 8, !dbg !17577
  %cmp = icmp ne i16* %1, %2, !dbg !17578
  br i1 %cmp, label %for.body, label %for.end, !dbg !17579

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !17579

for.inc:                                          ; preds = %for.body
  %3 = load i16*, i16** %pm, align 8, !dbg !17580
  %incdec.ptr = getelementptr i16, i16* %3, i32 1, !dbg !17580
  store i16* %incdec.ptr, i16** %pm, align 8, !dbg !17580
  %4 = load i16, i16* %3, align 2, !dbg !17581
  %5 = load i16*, i16** %lm, align 8, !dbg !17582
  %incdec.ptr1 = getelementptr i16, i16* %5, i32 1, !dbg !17582
  store i16* %incdec.ptr1, i16** %lm, align 8, !dbg !17582
  store i16 %4, i16* %5, align 2, !dbg !17583
  br label %for.cond, !dbg !17584, !llvm.loop !17585

for.end:                                          ; preds = %for.cond
  %6 = load i16*, i16** %lm, align 8, !dbg !17587
  store i16 0, i16* %6, align 2, !dbg !17588
  %7 = load i16*, i16** %lm, align 8, !dbg !17589
  store i16* %7, i16** %ls, align 8, !dbg !17590
  store i32 0, i32* %i, align 4, !dbg !17591
  %8 = load i16*, i16** %ptr.addr, align 8, !dbg !17593
  %incdec.ptr2 = getelementptr i16, i16* %8, i32 1, !dbg !17593
  store i16* %incdec.ptr2, i16** %ptr.addr, align 8, !dbg !17593
  store i16* %incdec.ptr2, i16** %pe, align 8, !dbg !17594
  br label %for.cond3, !dbg !17595

for.cond3:                                        ; preds = %for.inc39, %for.end
  %9 = load i16*, i16** %pe, align 8, !dbg !17596
  %10 = load i16, i16* %9, align 2, !dbg !17598
  %tobool = icmp ne i16 %10, 0, !dbg !17599
  br i1 %tobool, label %for.body4, label %for.end41, !dbg !17599

for.body4:                                        ; preds = %for.cond3
  %11 = load i16*, i16** %pe, align 8, !dbg !17600
  %12 = load i16, i16* %11, align 2, !dbg !17603
  %conv = zext i16 %12 to i32, !dbg !17603
  %cmp5 = icmp eq i32 %conv, 91, !dbg !17604
  br i1 %cmp5, label %if.then, label %if.else, !dbg !17605

if.then:                                          ; preds = %for.body4
  %13 = load i16*, i16** %pe, align 8, !dbg !17606
  %incdec.ptr7 = getelementptr i16, i16* %13, i32 1, !dbg !17606
  store i16* %incdec.ptr7, i16** %pe, align 8, !dbg !17606
  store i16* %13, i16** %pm, align 8, !dbg !17609
  br label %for.cond8, !dbg !17610

for.cond8:                                        ; preds = %for.inc16, %if.then
  %14 = load i16*, i16** %pe, align 8, !dbg !17611
  %15 = load i16, i16* %14, align 2, !dbg !17613
  %conv9 = zext i16 %15 to i32, !dbg !17613
  %cmp10 = icmp ne i32 %conv9, 93, !dbg !17614
  br i1 %cmp10, label %land.rhs, label %land.end, !dbg !17615

land.rhs:                                         ; preds = %for.cond8
  %16 = load i16*, i16** %pe, align 8, !dbg !17616
  %17 = load i16, i16* %16, align 2, !dbg !17617
  %conv12 = zext i16 %17 to i32, !dbg !17617
  %cmp13 = icmp ne i32 %conv12, 0, !dbg !17618
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond8
  %18 = phi i1 [ false, %for.cond8 ], [ %cmp13, %land.rhs ], !dbg !17619
  br i1 %18, label %for.body15, label %for.end18, !dbg !17620

for.body15:                                       ; preds = %land.end
  br label %for.inc16, !dbg !17620

for.inc16:                                        ; preds = %for.body15
  %19 = load i16*, i16** %pe, align 8, !dbg !17621
  %incdec.ptr17 = getelementptr i16, i16* %19, i32 1, !dbg !17621
  store i16* %incdec.ptr17, i16** %pe, align 8, !dbg !17621
  br label %for.cond8, !dbg !17622, !llvm.loop !17623

for.end18:                                        ; preds = %land.end
  %20 = load i16*, i16** %pe, align 8, !dbg !17625
  %21 = load i16, i16* %20, align 2, !dbg !17627
  %conv19 = zext i16 %21 to i32, !dbg !17627
  %cmp20 = icmp eq i32 %conv19, 0, !dbg !17628
  br i1 %cmp20, label %if.then22, label %if.end, !dbg !17629

if.then22:                                        ; preds = %for.end18
  %22 = load i16*, i16** %pm, align 8, !dbg !17630
  store i16* %22, i16** %pe, align 8, !dbg !17632
  br label %if.end, !dbg !17633

if.end:                                           ; preds = %if.then22, %for.end18
  br label %if.end38, !dbg !17634

if.else:                                          ; preds = %for.body4
  %23 = load i16*, i16** %pe, align 8, !dbg !17635
  %24 = load i16, i16* %23, align 2, !dbg !17637
  %conv23 = zext i16 %24 to i32, !dbg !17637
  %cmp24 = icmp eq i32 %conv23, 123, !dbg !17638
  br i1 %cmp24, label %if.then26, label %if.else27, !dbg !17639

if.then26:                                        ; preds = %if.else
  %25 = load i32, i32* %i, align 4, !dbg !17640
  %inc = add i32 %25, 1, !dbg !17640
  store i32 %inc, i32* %i, align 4, !dbg !17640
  br label %if.end37, !dbg !17642

if.else27:                                        ; preds = %if.else
  %26 = load i16*, i16** %pe, align 8, !dbg !17643
  %27 = load i16, i16* %26, align 2, !dbg !17645
  %conv28 = zext i16 %27 to i32, !dbg !17645
  %cmp29 = icmp eq i32 %conv28, 125, !dbg !17646
  br i1 %cmp29, label %if.then31, label %if.end36, !dbg !17647

if.then31:                                        ; preds = %if.else27
  %28 = load i32, i32* %i, align 4, !dbg !17648
  %cmp32 = icmp eq i32 %28, 0, !dbg !17651
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !17652

if.then34:                                        ; preds = %if.then31
  br label %for.end41, !dbg !17653

if.end35:                                         ; preds = %if.then31
  %29 = load i32, i32* %i, align 4, !dbg !17655
  %dec = add i32 %29, -1, !dbg !17655
  store i32 %dec, i32* %i, align 4, !dbg !17655
  br label %if.end36, !dbg !17656

if.end36:                                         ; preds = %if.end35, %if.else27
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.then26
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.end
  br label %for.inc39, !dbg !17657

for.inc39:                                        ; preds = %if.end38
  %30 = load i16*, i16** %pe, align 8, !dbg !17658
  %incdec.ptr40 = getelementptr i16, i16* %30, i32 1, !dbg !17658
  store i16* %incdec.ptr40, i16** %pe, align 8, !dbg !17658
  br label %for.cond3, !dbg !17659, !llvm.loop !17660

for.end41:                                        ; preds = %if.then34, %for.cond3
  %31 = load i32, i32* %i, align 4, !dbg !17662
  %cmp42 = icmp ne i32 %31, 0, !dbg !17664
  br i1 %cmp42, label %if.then47, label %lor.lhs.false, !dbg !17665

lor.lhs.false:                                    ; preds = %for.end41
  %32 = load i16*, i16** %pe, align 8, !dbg !17666
  %33 = load i16, i16* %32, align 2, !dbg !17667
  %conv44 = zext i16 %33 to i32, !dbg !17667
  %cmp45 = icmp eq i32 %conv44, 0, !dbg !17668
  br i1 %cmp45, label %if.then47, label %if.end49, !dbg !17669

if.then47:                                        ; preds = %lor.lhs.false, %for.end41
  %arraydecay48 = getelementptr inbounds [4096 x i16], [4096 x i16]* %patbuf, i64 0, i64 0, !dbg !17670
  %34 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !17672
  %35 = load %struct.glob_lim*, %struct.glob_lim** %limitp.addr, align 8, !dbg !17673
  %call = call i32 @glob0(i16* %arraydecay48, %struct.glob_t* %34, %struct.glob_lim* %35), !dbg !17674
  store i32 %call, i32* %retval, align 4, !dbg !17675
  br label %return, !dbg !17675

if.end49:                                         ; preds = %lor.lhs.false
  store i32 0, i32* %i, align 4, !dbg !17676
  %36 = load i16*, i16** %ptr.addr, align 8, !dbg !17678
  store i16* %36, i16** %pm, align 8, !dbg !17679
  store i16* %36, i16** %pl, align 8, !dbg !17680
  br label %for.cond50, !dbg !17681

for.cond50:                                       ; preds = %for.inc114, %if.end49
  %37 = load i16*, i16** %pm, align 8, !dbg !17682
  %38 = load i16*, i16** %pe, align 8, !dbg !17684
  %cmp51 = icmp ule i16* %37, %38, !dbg !17685
  br i1 %cmp51, label %for.body53, label %for.end116, !dbg !17686

for.body53:                                       ; preds = %for.cond50
  %39 = load i16*, i16** %pm, align 8, !dbg !17687
  %40 = load i16, i16* %39, align 2, !dbg !17689
  %conv54 = zext i16 %40 to i32, !dbg !17689
  switch i32 %conv54, label %sw.default [
    i32 91, label %sw.bb
    i32 123, label %sw.bb74
    i32 125, label %sw.bb76
    i32 44, label %sw.bb81
  ], !dbg !17690

sw.bb:                                            ; preds = %for.body53
  %41 = load i16*, i16** %pm, align 8, !dbg !17691
  %incdec.ptr55 = getelementptr i16, i16* %41, i32 1, !dbg !17691
  store i16* %incdec.ptr55, i16** %pm, align 8, !dbg !17691
  store i16* %41, i16** %pl, align 8, !dbg !17694
  br label %for.cond56, !dbg !17695

for.cond56:                                       ; preds = %for.inc66, %sw.bb
  %42 = load i16*, i16** %pm, align 8, !dbg !17696
  %43 = load i16, i16* %42, align 2, !dbg !17698
  %conv57 = zext i16 %43 to i32, !dbg !17698
  %cmp58 = icmp ne i32 %conv57, 93, !dbg !17699
  br i1 %cmp58, label %land.rhs60, label %land.end64, !dbg !17700

land.rhs60:                                       ; preds = %for.cond56
  %44 = load i16*, i16** %pm, align 8, !dbg !17701
  %45 = load i16, i16* %44, align 2, !dbg !17702
  %conv61 = zext i16 %45 to i32, !dbg !17702
  %cmp62 = icmp ne i32 %conv61, 0, !dbg !17703
  br label %land.end64

land.end64:                                       ; preds = %land.rhs60, %for.cond56
  %46 = phi i1 [ false, %for.cond56 ], [ %cmp62, %land.rhs60 ], !dbg !17704
  br i1 %46, label %for.body65, label %for.end68, !dbg !17705

for.body65:                                       ; preds = %land.end64
  br label %for.inc66, !dbg !17705

for.inc66:                                        ; preds = %for.body65
  %47 = load i16*, i16** %pm, align 8, !dbg !17706
  %incdec.ptr67 = getelementptr i16, i16* %47, i32 1, !dbg !17706
  store i16* %incdec.ptr67, i16** %pm, align 8, !dbg !17706
  br label %for.cond56, !dbg !17707, !llvm.loop !17708

for.end68:                                        ; preds = %land.end64
  %48 = load i16*, i16** %pm, align 8, !dbg !17710
  %49 = load i16, i16* %48, align 2, !dbg !17712
  %conv69 = zext i16 %49 to i32, !dbg !17712
  %cmp70 = icmp eq i32 %conv69, 0, !dbg !17713
  br i1 %cmp70, label %if.then72, label %if.end73, !dbg !17714

if.then72:                                        ; preds = %for.end68
  %50 = load i16*, i16** %pl, align 8, !dbg !17715
  store i16* %50, i16** %pm, align 8, !dbg !17717
  br label %if.end73, !dbg !17718

if.end73:                                         ; preds = %if.then72, %for.end68
  br label %sw.epilog, !dbg !17719

sw.bb74:                                          ; preds = %for.body53
  %51 = load i32, i32* %i, align 4, !dbg !17720
  %inc75 = add i32 %51, 1, !dbg !17720
  store i32 %inc75, i32* %i, align 4, !dbg !17720
  br label %sw.epilog, !dbg !17721

sw.bb76:                                          ; preds = %for.body53
  %52 = load i32, i32* %i, align 4, !dbg !17722
  %tobool77 = icmp ne i32 %52, 0, !dbg !17722
  br i1 %tobool77, label %if.then78, label %if.end80, !dbg !17724

if.then78:                                        ; preds = %sw.bb76
  %53 = load i32, i32* %i, align 4, !dbg !17725
  %dec79 = add i32 %53, -1, !dbg !17725
  store i32 %dec79, i32* %i, align 4, !dbg !17725
  br label %sw.epilog, !dbg !17727

if.end80:                                         ; preds = %sw.bb76
  br label %sw.bb81, !dbg !17722

sw.bb81:                                          ; preds = %for.body53, %if.end80
  %54 = load i32, i32* %i, align 4, !dbg !17728
  %tobool82 = icmp ne i32 %54, 0, !dbg !17728
  br i1 %tobool82, label %land.lhs.true, label %if.else87, !dbg !17730

land.lhs.true:                                    ; preds = %sw.bb81
  %55 = load i16*, i16** %pm, align 8, !dbg !17731
  %56 = load i16, i16* %55, align 2, !dbg !17732
  %conv83 = zext i16 %56 to i32, !dbg !17732
  %cmp84 = icmp eq i32 %conv83, 44, !dbg !17733
  br i1 %cmp84, label %if.then86, label %if.else87, !dbg !17734

if.then86:                                        ; preds = %land.lhs.true
  br label %sw.epilog, !dbg !17735

if.else87:                                        ; preds = %land.lhs.true, %sw.bb81
  %57 = load i16*, i16** %ls, align 8, !dbg !17737
  store i16* %57, i16** %lm, align 8, !dbg !17740
  br label %for.cond88, !dbg !17741

for.cond88:                                       ; preds = %for.inc92, %if.else87
  %58 = load i16*, i16** %pl, align 8, !dbg !17742
  %59 = load i16*, i16** %pm, align 8, !dbg !17744
  %cmp89 = icmp ult i16* %58, %59, !dbg !17745
  br i1 %cmp89, label %for.body91, label %for.end95, !dbg !17746

for.body91:                                       ; preds = %for.cond88
  br label %for.inc92, !dbg !17746

for.inc92:                                        ; preds = %for.body91
  %60 = load i16*, i16** %pl, align 8, !dbg !17747
  %incdec.ptr93 = getelementptr i16, i16* %60, i32 1, !dbg !17747
  store i16* %incdec.ptr93, i16** %pl, align 8, !dbg !17747
  %61 = load i16, i16* %60, align 2, !dbg !17748
  %62 = load i16*, i16** %lm, align 8, !dbg !17749
  %incdec.ptr94 = getelementptr i16, i16* %62, i32 1, !dbg !17749
  store i16* %incdec.ptr94, i16** %lm, align 8, !dbg !17749
  store i16 %61, i16* %62, align 2, !dbg !17750
  br label %for.cond88, !dbg !17751, !llvm.loop !17752

for.end95:                                        ; preds = %for.cond88
  %63 = load i16*, i16** %pe, align 8, !dbg !17754
  %add.ptr = getelementptr i16, i16* %63, i64 1, !dbg !17756
  store i16* %add.ptr, i16** %pl, align 8, !dbg !17757
  br label %for.cond96, !dbg !17758

for.cond96:                                       ; preds = %for.body102, %for.end95
  %64 = load i16*, i16** %pl, align 8, !dbg !17759
  %incdec.ptr97 = getelementptr i16, i16* %64, i32 1, !dbg !17759
  store i16* %incdec.ptr97, i16** %pl, align 8, !dbg !17759
  %65 = load i16, i16* %64, align 2, !dbg !17761
  %66 = load i16*, i16** %lm, align 8, !dbg !17762
  %incdec.ptr98 = getelementptr i16, i16* %66, i32 1, !dbg !17762
  store i16* %incdec.ptr98, i16** %lm, align 8, !dbg !17762
  store i16 %65, i16* %66, align 2, !dbg !17763
  %conv99 = zext i16 %65 to i32, !dbg !17764
  %cmp100 = icmp ne i32 %conv99, 0, !dbg !17765
  br i1 %cmp100, label %for.body102, label %for.end103, !dbg !17766

for.body102:                                      ; preds = %for.cond96
  br label %for.cond96, !dbg !17767, !llvm.loop !17768

for.end103:                                       ; preds = %for.cond96
  %arraydecay104 = getelementptr inbounds [4096 x i16], [4096 x i16]* %patbuf, i64 0, i64 0, !dbg !17770
  %67 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !17771
  %68 = load %struct.glob_lim*, %struct.glob_lim** %limitp.addr, align 8, !dbg !17772
  %69 = load i32, i32* %recursion.addr, align 4, !dbg !17773
  %add = add i32 %69, 1, !dbg !17774
  %call105 = call i32 @globexp1(i16* %arraydecay104, %struct.glob_t* %67, %struct.glob_lim* %68, i32 %add), !dbg !17775
  store i32 %call105, i32* %rv, align 4, !dbg !17776
  %70 = load i32, i32* %rv, align 4, !dbg !17777
  %tobool106 = icmp ne i32 %70, 0, !dbg !17777
  br i1 %tobool106, label %land.lhs.true107, label %if.end111, !dbg !17779

land.lhs.true107:                                 ; preds = %for.end103
  %71 = load i32, i32* %rv, align 4, !dbg !17780
  %cmp108 = icmp ne i32 %71, -3, !dbg !17781
  br i1 %cmp108, label %if.then110, label %if.end111, !dbg !17782

if.then110:                                       ; preds = %land.lhs.true107
  %72 = load i32, i32* %rv, align 4, !dbg !17783
  store i32 %72, i32* %retval, align 4, !dbg !17785
  br label %return, !dbg !17785

if.end111:                                        ; preds = %land.lhs.true107, %for.end103
  %73 = load i16*, i16** %pm, align 8, !dbg !17786
  %add.ptr112 = getelementptr i16, i16* %73, i64 1, !dbg !17787
  store i16* %add.ptr112, i16** %pl, align 8, !dbg !17788
  br label %if.end113

if.end113:                                        ; preds = %if.end111
  br label %sw.epilog, !dbg !17789

sw.default:                                       ; preds = %for.body53
  br label %sw.epilog, !dbg !17790

sw.epilog:                                        ; preds = %sw.default, %if.end113, %if.then86, %if.then78, %sw.bb74, %if.end73
  br label %for.inc114, !dbg !17791

for.inc114:                                       ; preds = %sw.epilog
  %74 = load i16*, i16** %pm, align 8, !dbg !17792
  %incdec.ptr115 = getelementptr i16, i16* %74, i32 1, !dbg !17792
  store i16* %incdec.ptr115, i16** %pm, align 8, !dbg !17792
  br label %for.cond50, !dbg !17793, !llvm.loop !17794

for.end116:                                       ; preds = %for.cond50
  store i32 0, i32* %retval, align 4, !dbg !17796
  br label %return, !dbg !17796

return:                                           ; preds = %for.end116, %if.then110, %if.then47
  %75 = load i32, i32* %retval, align 4, !dbg !17797
  ret i32 %75, !dbg !17797
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local i32 @sglob(i8* %pattern, i32 %flags, i32 (i8*, i32)* %errfunc, %struct.glob_t* %pglob, i64 %maxfiles, i32 %maxdepth) #0 !dbg !17798 {
entry:
  %pattern.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %errfunc.addr = alloca i32 (i8*, i32)*, align 8
  %pglob.addr = alloca %struct.glob_t*, align 8
  %maxfiles.addr = alloca i64, align 8
  %maxdepth.addr = alloca i32, align 4
  store i8* %pattern, i8** %pattern.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pattern.addr, metadata !17801, metadata !DIExpression()), !dbg !17802
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !17803, metadata !DIExpression()), !dbg !17804
  store i32 (i8*, i32)* %errfunc, i32 (i8*, i32)** %errfunc.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i32)** %errfunc.addr, metadata !17805, metadata !DIExpression()), !dbg !17806
  store %struct.glob_t* %pglob, %struct.glob_t** %pglob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.glob_t** %pglob.addr, metadata !17807, metadata !DIExpression()), !dbg !17808
  store i64 %maxfiles, i64* %maxfiles.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %maxfiles.addr, metadata !17809, metadata !DIExpression()), !dbg !17810
  store i32 %maxdepth, i32* %maxdepth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %maxdepth.addr, metadata !17811, metadata !DIExpression()), !dbg !17812
  %0 = load i8*, i8** %pattern.addr, align 8, !dbg !17813
  call void @simplify(i8* %0), !dbg !17814
  %1 = load i8*, i8** %pattern.addr, align 8, !dbg !17815
  %2 = load i32, i32* %flags.addr, align 4, !dbg !17816
  %3 = load i32 (i8*, i32)*, i32 (i8*, i32)** %errfunc.addr, align 8, !dbg !17817
  %4 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !17818
  %5 = load i64, i64* %maxfiles.addr, align 8, !dbg !17819
  %6 = load i32, i32* %maxdepth.addr, align 4, !dbg !17820
  %call = call i32 @glob_(i8* %1, i32 %2, i32 (i8*, i32)* %3, %struct.glob_t* %4, i64 %5, i32 %6), !dbg !17821
  ret i32 %call, !dbg !17822
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @globfree(%struct.glob_t* %pglob) #0 !dbg !17823 {
entry:
  %pglob.addr = alloca %struct.glob_t*, align 8
  %i = alloca i32, align 4
  %pp = alloca i8**, align 8
  store %struct.glob_t* %pglob, %struct.glob_t** %pglob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.glob_t** %pglob.addr, metadata !17826, metadata !DIExpression()), !dbg !17827
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17828, metadata !DIExpression()), !dbg !17829
  call void @llvm.dbg.declare(metadata i8*** %pp, metadata !17830, metadata !DIExpression()), !dbg !17831
  %0 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !17832
  %gl_pathv = getelementptr inbounds %struct.glob_t, %struct.glob_t* %0, i32 0, i32 6, !dbg !17834
  %1 = load i8**, i8*** %gl_pathv, align 8, !dbg !17834
  %cmp = icmp ne i8** %1, null, !dbg !17835
  br i1 %cmp, label %if.then, label %if.end, !dbg !17836

if.then:                                          ; preds = %entry
  %2 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !17837
  %gl_pathv1 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %2, i32 0, i32 6, !dbg !17839
  %3 = load i8**, i8*** %gl_pathv1, align 8, !dbg !17839
  %4 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !17840
  %gl_offs = getelementptr inbounds %struct.glob_t, %struct.glob_t* %4, i32 0, i32 4, !dbg !17841
  %5 = load i32, i32* %gl_offs, align 4, !dbg !17841
  %idx.ext = sext i32 %5 to i64, !dbg !17842
  %add.ptr = getelementptr i8*, i8** %3, i64 %idx.ext, !dbg !17842
  store i8** %add.ptr, i8*** %pp, align 8, !dbg !17843
  %6 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !17844
  %gl_pathc = getelementptr inbounds %struct.glob_t, %struct.glob_t* %6, i32 0, i32 2, !dbg !17846
  %7 = load i32, i32* %gl_pathc, align 4, !dbg !17846
  store i32 %7, i32* %i, align 4, !dbg !17847
  br label %for.cond, !dbg !17848

for.cond:                                         ; preds = %for.inc, %if.then
  %8 = load i32, i32* %i, align 4, !dbg !17849
  %dec = add i32 %8, -1, !dbg !17849
  store i32 %dec, i32* %i, align 4, !dbg !17849
  %tobool = icmp ne i32 %8, 0, !dbg !17851
  br i1 %tobool, label %for.body, label %for.end, !dbg !17851

for.body:                                         ; preds = %for.cond
  %9 = load i8**, i8*** %pp, align 8, !dbg !17852
  %10 = load i8*, i8** %9, align 8, !dbg !17854
  call void @free(i8* %10) #7, !dbg !17855
  br label %for.inc, !dbg !17856

for.inc:                                          ; preds = %for.body
  %11 = load i8**, i8*** %pp, align 8, !dbg !17857
  %incdec.ptr = getelementptr i8*, i8** %11, i32 1, !dbg !17857
  store i8** %incdec.ptr, i8*** %pp, align 8, !dbg !17857
  br label %for.cond, !dbg !17858, !llvm.loop !17859

for.end:                                          ; preds = %for.cond
  %12 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !17861
  %gl_pathv2 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %12, i32 0, i32 6, !dbg !17862
  %13 = load i8**, i8*** %gl_pathv2, align 8, !dbg !17862
  %14 = bitcast i8** %13 to i8*, !dbg !17861
  call void @free(i8* %14) #7, !dbg !17863
  %15 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !17864
  %gl_pathv3 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %15, i32 0, i32 6, !dbg !17865
  store i8** null, i8*** %gl_pathv3, align 8, !dbg !17866
  br label %if.end, !dbg !17867

if.end:                                           ; preds = %for.end, %entry
  %16 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !17868
  %gl_statv = getelementptr inbounds %struct.glob_t, %struct.glob_t* %16, i32 0, i32 7, !dbg !17870
  %17 = load %struct.stat**, %struct.stat*** %gl_statv, align 8, !dbg !17870
  %cmp4 = icmp ne %struct.stat** %17, null, !dbg !17871
  br i1 %cmp4, label %if.then5, label %if.end15, !dbg !17872

if.then5:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !17873
  br label %for.cond6, !dbg !17876

for.cond6:                                        ; preds = %for.inc11, %if.then5
  %18 = load i32, i32* %i, align 4, !dbg !17877
  %19 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !17879
  %gl_pathc7 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %19, i32 0, i32 2, !dbg !17880
  %20 = load i32, i32* %gl_pathc7, align 4, !dbg !17880
  %cmp8 = icmp slt i32 %18, %20, !dbg !17881
  br i1 %cmp8, label %for.body9, label %for.end12, !dbg !17882

for.body9:                                        ; preds = %for.cond6
  %21 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !17883
  %gl_statv10 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %21, i32 0, i32 7, !dbg !17885
  %22 = load %struct.stat**, %struct.stat*** %gl_statv10, align 8, !dbg !17885
  %23 = load i32, i32* %i, align 4, !dbg !17886
  %idxprom = sext i32 %23 to i64, !dbg !17883
  %arrayidx = getelementptr %struct.stat*, %struct.stat** %22, i64 %idxprom, !dbg !17883
  %24 = load %struct.stat*, %struct.stat** %arrayidx, align 8, !dbg !17883
  %25 = bitcast %struct.stat* %24 to i8*, !dbg !17883
  call void @free(i8* %25) #7, !dbg !17887
  br label %for.inc11, !dbg !17888

for.inc11:                                        ; preds = %for.body9
  %26 = load i32, i32* %i, align 4, !dbg !17889
  %inc = add i32 %26, 1, !dbg !17889
  store i32 %inc, i32* %i, align 4, !dbg !17889
  br label %for.cond6, !dbg !17890, !llvm.loop !17891

for.end12:                                        ; preds = %for.cond6
  %27 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !17893
  %gl_statv13 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %27, i32 0, i32 7, !dbg !17894
  %28 = load %struct.stat**, %struct.stat*** %gl_statv13, align 8, !dbg !17894
  %29 = bitcast %struct.stat** %28 to i8*, !dbg !17893
  call void @free(i8* %29) #7, !dbg !17895
  %30 = load %struct.glob_t*, %struct.glob_t** %pglob.addr, align 8, !dbg !17896
  %gl_statv14 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %30, i32 0, i32 7, !dbg !17897
  store %struct.stat** null, %struct.stat*** %gl_statv14, align 8, !dbg !17898
  br label %if.end15, !dbg !17899

if.end15:                                         ; preds = %for.end12, %if.end
  ret void, !dbg !17900
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local i32 @daemons(i16 zeroext %server_port) #0 !dbg !17901 {
entry:
  %server_port.addr = alloca i16, align 2
  %nbcnx = alloca i32, align 4
  store i16 %server_port, i16* %server_port.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %server_port.addr, metadata !17904, metadata !DIExpression()), !dbg !17905
  call void @llvm.dbg.declare(metadata i32* %nbcnx, metadata !17906, metadata !DIExpression()), !dbg !17907
  %0 = load i16, i16* %server_port.addr, align 2, !dbg !17908
  %call = call i32 @count(i16 zeroext %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.551, i64 0, i64 0)), !dbg !17909
  store i32 %call, i32* %nbcnx, align 4, !dbg !17910
  %1 = load i16, i16* %server_port.addr, align 2, !dbg !17911
  %call1 = call i32 @count(i16 zeroext %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1.552, i64 0, i64 0)), !dbg !17912
  %2 = load i32, i32* %nbcnx, align 4, !dbg !17913
  %add = add i32 %2, %call1, !dbg !17913
  store i32 %add, i32* %nbcnx, align 4, !dbg !17913
  %3 = load i32, i32* %nbcnx, align 4, !dbg !17914
  ret i32 %3, !dbg !17915
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @count(i16 zeroext %server_port, i8* %file) #0 !dbg !17916 {
entry:
  %retval = alloca i32, align 4
  %server_port.addr = alloca i16, align 2
  %file.addr = alloca i8*, align 8
  %f = alloca i32, align 4
  %r = alloca i32, align 4
  %c = alloca i32, align 4
  %b = alloca i32, align 4
  %e = alloca i32, align 4
  %d = alloca i32, align 4
  %buf = alloca [2049 x i8], align 16
  store i16 %server_port, i16* %server_port.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %server_port.addr, metadata !17919, metadata !DIExpression()), !dbg !17920
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !17921, metadata !DIExpression()), !dbg !17922
  call void @llvm.dbg.declare(metadata i32* %f, metadata !17923, metadata !DIExpression()), !dbg !17924
  call void @llvm.dbg.declare(metadata i32* %r, metadata !17925, metadata !DIExpression()), !dbg !17926
  call void @llvm.dbg.declare(metadata i32* %c, metadata !17927, metadata !DIExpression()), !dbg !17928
  call void @llvm.dbg.declare(metadata i32* %b, metadata !17929, metadata !DIExpression()), !dbg !17930
  store i32 0, i32* %b, align 4, !dbg !17930
  call void @llvm.dbg.declare(metadata i32* %e, metadata !17931, metadata !DIExpression()), !dbg !17932
  store i32 0, i32* %e, align 4, !dbg !17932
  call void @llvm.dbg.declare(metadata i32* %d, metadata !17933, metadata !DIExpression()), !dbg !17934
  store i32 0, i32* %d, align 4, !dbg !17934
  call void @llvm.dbg.declare(metadata [2049 x i8]* %buf, metadata !17935, metadata !DIExpression()), !dbg !17939
  %0 = load i8*, i8** %file.addr, align 8, !dbg !17940
  %call = call i32 (i8*, i32, ...) @open(i8* %0, i32 0), !dbg !17942
  store i32 %call, i32* %f, align 4, !dbg !17943
  %cmp = icmp eq i32 %call, -1, !dbg !17944
  br i1 %cmp, label %if.then, label %if.end, !dbg !17945

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !17946
  br label %return, !dbg !17946

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr [2049 x i8], [2049 x i8]* %buf, i64 0, i64 2048, !dbg !17948
  store i8 0, i8* %arrayidx, align 16, !dbg !17949
  br label %for.cond, !dbg !17950

for.cond:                                         ; preds = %if.end158, %if.end
  br label %while.cond, !dbg !17951

while.cond:                                       ; preds = %while.body, %for.cond
  %1 = load i32, i32* %f, align 4, !dbg !17955
  %arraydecay = getelementptr inbounds [2049 x i8], [2049 x i8]* %buf, i64 0, i64 0, !dbg !17956
  %2 = load i32, i32* %e, align 4, !dbg !17957
  %idx.ext = sext i32 %2 to i64, !dbg !17958
  %add.ptr = getelementptr i8, i8* %arraydecay, i64 %idx.ext, !dbg !17958
  %3 = load i32, i32* %e, align 4, !dbg !17959
  %sub = sub i32 2048, %3, !dbg !17960
  %conv = zext i32 %sub to i64, !dbg !17961
  %call1 = call i64 @read(i32 %1, i8* %add.ptr, i64 %conv), !dbg !17962
  %conv2 = trunc i64 %call1 to i32, !dbg !17963
  store i32 %conv2, i32* %r, align 4, !dbg !17964
  %conv3 = sext i32 %conv2 to i64, !dbg !17965
  %cmp4 = icmp slt i64 %conv3, 0, !dbg !17966
  br i1 %cmp4, label %land.rhs, label %land.end, !dbg !17967

land.rhs:                                         ; preds = %while.cond
  %call6 = call i32* @__errno_location() #14, !dbg !17968
  %4 = load i32, i32* %call6, align 4, !dbg !17968
  %cmp7 = icmp eq i32 %4, 4, !dbg !17969
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %5 = phi i1 [ false, %while.cond ], [ %cmp7, %land.rhs ], !dbg !17970
  br i1 %5, label %while.body, label %while.end, !dbg !17951

while.body:                                       ; preds = %land.end
  br label %while.cond, !dbg !17951, !llvm.loop !17971

while.end:                                        ; preds = %land.end
  %6 = load i32, i32* %r, align 4, !dbg !17973
  %conv9 = sext i32 %6 to i64, !dbg !17973
  %cmp10 = icmp sle i64 %conv9, 0, !dbg !17975
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !17976

if.then12:                                        ; preds = %while.end
  br label %for.end, !dbg !17977

if.end13:                                         ; preds = %while.end
  %7 = load i32, i32* %r, align 4, !dbg !17979
  %8 = load i32, i32* %e, align 4, !dbg !17980
  %add = add i32 %8, %7, !dbg !17980
  store i32 %add, i32* %e, align 4, !dbg !17980
  %9 = load i32, i32* %b, align 4, !dbg !17981
  store i32 %9, i32* %c, align 4, !dbg !17982
  br label %while.cond14, !dbg !17983

while.cond14:                                     ; preds = %while.body23, %if.end13
  %10 = load i32, i32* %c, align 4, !dbg !17984
  %11 = load i32, i32* %e, align 4, !dbg !17985
  %cmp15 = icmp slt i32 %10, %11, !dbg !17986
  br i1 %cmp15, label %land.rhs17, label %land.end22, !dbg !17987

land.rhs17:                                       ; preds = %while.cond14
  %12 = load i32, i32* %c, align 4, !dbg !17988
  %idxprom = sext i32 %12 to i64, !dbg !17989
  %arrayidx18 = getelementptr [2049 x i8], [2049 x i8]* %buf, i64 0, i64 %idxprom, !dbg !17989
  %13 = load i8, i8* %arrayidx18, align 1, !dbg !17989
  %conv19 = sext i8 %13 to i32, !dbg !17989
  %cmp20 = icmp ne i32 %conv19, 10, !dbg !17990
  br label %land.end22

land.end22:                                       ; preds = %land.rhs17, %while.cond14
  %14 = phi i1 [ false, %while.cond14 ], [ %cmp20, %land.rhs17 ], !dbg !17970
  br i1 %14, label %while.body23, label %while.end24, !dbg !17983

while.body23:                                     ; preds = %land.end22
  %15 = load i32, i32* %c, align 4, !dbg !17991
  %inc = add i32 %15, 1, !dbg !17991
  store i32 %inc, i32* %c, align 4, !dbg !17991
  br label %while.cond14, !dbg !17983, !llvm.loop !17993

while.end24:                                      ; preds = %land.end22
  br label %while.cond25, !dbg !17995

while.cond25:                                     ; preds = %while.end147, %while.end24
  %16 = load i32, i32* %c, align 4, !dbg !17996
  %17 = load i32, i32* %e, align 4, !dbg !17997
  %cmp26 = icmp slt i32 %16, %17, !dbg !17998
  br i1 %cmp26, label %while.body28, label %while.end148, !dbg !17995

while.body28:                                     ; preds = %while.cond25
  %18 = load i32, i32* %c, align 4, !dbg !17999
  %inc29 = add i32 %18, 1, !dbg !17999
  store i32 %inc29, i32* %c, align 4, !dbg !17999
  %idxprom30 = sext i32 %18 to i64, !dbg !18001
  %arrayidx31 = getelementptr [2049 x i8], [2049 x i8]* %buf, i64 0, i64 %idxprom30, !dbg !18001
  store i8 0, i8* %arrayidx31, align 1, !dbg !18002
  br label %while.cond32, !dbg !18003

while.cond32:                                     ; preds = %while.body47, %while.body28
  %19 = load i32, i32* %b, align 4, !dbg !18004
  %20 = load i32, i32* %c, align 4, !dbg !18005
  %cmp33 = icmp slt i32 %19, %20, !dbg !18006
  br i1 %cmp33, label %land.lhs.true, label %land.end46, !dbg !18007

land.lhs.true:                                    ; preds = %while.cond32
  %21 = load i32, i32* %b, align 4, !dbg !18008
  %idxprom35 = sext i32 %21 to i64, !dbg !18009
  %arrayidx36 = getelementptr [2049 x i8], [2049 x i8]* %buf, i64 0, i64 %idxprom35, !dbg !18009
  %22 = load i8, i8* %arrayidx36, align 1, !dbg !18009
  %conv37 = sext i8 %22 to i32, !dbg !18009
  %cmp38 = icmp ne i32 %conv37, 58, !dbg !18010
  br i1 %cmp38, label %land.rhs40, label %land.end46, !dbg !18011

land.rhs40:                                       ; preds = %land.lhs.true
  %23 = load i32, i32* %b, align 4, !dbg !18012
  %idxprom41 = sext i32 %23 to i64, !dbg !18013
  %arrayidx42 = getelementptr [2049 x i8], [2049 x i8]* %buf, i64 0, i64 %idxprom41, !dbg !18013
  %24 = load i8, i8* %arrayidx42, align 1, !dbg !18013
  %conv43 = sext i8 %24 to i32, !dbg !18013
  %cmp44 = icmp ne i32 %conv43, 10, !dbg !18014
  br label %land.end46

land.end46:                                       ; preds = %land.rhs40, %land.lhs.true, %while.cond32
  %25 = phi i1 [ false, %land.lhs.true ], [ false, %while.cond32 ], [ %cmp44, %land.rhs40 ], !dbg !18015
  br i1 %25, label %while.body47, label %while.end49, !dbg !18003

while.body47:                                     ; preds = %land.end46
  %26 = load i32, i32* %b, align 4, !dbg !18016
  %inc48 = add i32 %26, 1, !dbg !18016
  store i32 %inc48, i32* %b, align 4, !dbg !18016
  br label %while.cond32, !dbg !18003, !llvm.loop !18018

while.end49:                                      ; preds = %land.end46
  %27 = load i32, i32* %b, align 4, !dbg !18020
  %28 = load i32, i32* %c, align 4, !dbg !18022
  %cmp50 = icmp slt i32 %27, %28, !dbg !18023
  br i1 %cmp50, label %land.lhs.true52, label %if.end134, !dbg !18024

land.lhs.true52:                                  ; preds = %while.end49
  %29 = load i32, i32* %b, align 4, !dbg !18025
  %idxprom53 = sext i32 %29 to i64, !dbg !18026
  %arrayidx54 = getelementptr [2049 x i8], [2049 x i8]* %buf, i64 0, i64 %idxprom53, !dbg !18026
  %30 = load i8, i8* %arrayidx54, align 1, !dbg !18026
  %conv55 = sext i8 %30 to i32, !dbg !18026
  %cmp56 = icmp eq i32 %conv55, 58, !dbg !18027
  br i1 %cmp56, label %if.then58, label %if.end134, !dbg !18028

if.then58:                                        ; preds = %land.lhs.true52
  %31 = load i32, i32* %b, align 4, !dbg !18029
  %inc59 = add i32 %31, 1, !dbg !18029
  store i32 %inc59, i32* %b, align 4, !dbg !18029
  br label %while.cond60, !dbg !18031

while.cond60:                                     ; preds = %while.body70, %if.then58
  %32 = load i32, i32* %b, align 4, !dbg !18032
  %33 = load i32, i32* %e, align 4, !dbg !18033
  %cmp61 = icmp slt i32 %32, %33, !dbg !18034
  br i1 %cmp61, label %land.rhs63, label %land.end69, !dbg !18035

land.rhs63:                                       ; preds = %while.cond60
  %34 = load i32, i32* %b, align 4, !dbg !18036
  %idxprom64 = sext i32 %34 to i64, !dbg !18037
  %arrayidx65 = getelementptr [2049 x i8], [2049 x i8]* %buf, i64 0, i64 %idxprom64, !dbg !18037
  %35 = load i8, i8* %arrayidx65, align 1, !dbg !18037
  %conv66 = sext i8 %35 to i32, !dbg !18037
  %cmp67 = icmp ne i32 %conv66, 58, !dbg !18038
  br label %land.end69

land.end69:                                       ; preds = %land.rhs63, %while.cond60
  %36 = phi i1 [ false, %while.cond60 ], [ %cmp67, %land.rhs63 ], !dbg !18039
  br i1 %36, label %while.body70, label %while.end72, !dbg !18031

while.body70:                                     ; preds = %land.end69
  %37 = load i32, i32* %b, align 4, !dbg !18040
  %inc71 = add i32 %37, 1, !dbg !18040
  store i32 %inc71, i32* %b, align 4, !dbg !18040
  br label %while.cond60, !dbg !18031, !llvm.loop !18042

while.end72:                                      ; preds = %land.end69
  %38 = load i32, i32* %b, align 4, !dbg !18044
  %inc73 = add i32 %38, 1, !dbg !18044
  store i32 %inc73, i32* %b, align 4, !dbg !18044
  %arraydecay74 = getelementptr inbounds [2049 x i8], [2049 x i8]* %buf, i64 0, i64 0, !dbg !18045
  %39 = load i32, i32* %b, align 4, !dbg !18047
  %idx.ext75 = sext i32 %39 to i64, !dbg !18048
  %add.ptr76 = getelementptr i8, i8* %arraydecay74, i64 %idx.ext75, !dbg !18048
  %call77 = call i64 @strtoul(i8* %add.ptr76, i8** null, i32 16) #7, !dbg !18049
  %40 = load i16, i16* %server_port.addr, align 2, !dbg !18050
  %conv78 = zext i16 %40 to i64, !dbg !18051
  %cmp79 = icmp eq i64 %call77, %conv78, !dbg !18052
  br i1 %cmp79, label %if.then81, label %if.end133, !dbg !18053

if.then81:                                        ; preds = %while.end72
  br label %while.cond82, !dbg !18054

while.cond82:                                     ; preds = %while.body92, %if.then81
  %41 = load i32, i32* %b, align 4, !dbg !18056
  %42 = load i32, i32* %e, align 4, !dbg !18057
  %cmp83 = icmp slt i32 %41, %42, !dbg !18058
  br i1 %cmp83, label %land.rhs85, label %land.end91, !dbg !18059

land.rhs85:                                       ; preds = %while.cond82
  %43 = load i32, i32* %b, align 4, !dbg !18060
  %idxprom86 = sext i32 %43 to i64, !dbg !18061
  %arrayidx87 = getelementptr [2049 x i8], [2049 x i8]* %buf, i64 0, i64 %idxprom86, !dbg !18061
  %44 = load i8, i8* %arrayidx87, align 1, !dbg !18061
  %conv88 = sext i8 %44 to i32, !dbg !18061
  %cmp89 = icmp ne i32 %conv88, 58, !dbg !18062
  br label %land.end91

land.end91:                                       ; preds = %land.rhs85, %while.cond82
  %45 = phi i1 [ false, %while.cond82 ], [ %cmp89, %land.rhs85 ], !dbg !18063
  br i1 %45, label %while.body92, label %while.end94, !dbg !18054

while.body92:                                     ; preds = %land.end91
  %46 = load i32, i32* %b, align 4, !dbg !18064
  %inc93 = add i32 %46, 1, !dbg !18064
  store i32 %inc93, i32* %b, align 4, !dbg !18064
  br label %while.cond82, !dbg !18054, !llvm.loop !18066

while.end94:                                      ; preds = %land.end91
  %47 = load i32, i32* %b, align 4, !dbg !18068
  %idxprom95 = sext i32 %47 to i64, !dbg !18070
  %arrayidx96 = getelementptr [2049 x i8], [2049 x i8]* %buf, i64 0, i64 %idxprom95, !dbg !18070
  %48 = load i8, i8* %arrayidx96, align 1, !dbg !18070
  %conv97 = sext i8 %48 to i32, !dbg !18070
  %cmp98 = icmp eq i32 %conv97, 58, !dbg !18071
  br i1 %cmp98, label %if.then100, label %if.end132, !dbg !18072

if.then100:                                       ; preds = %while.end94
  %49 = load i32, i32* %b, align 4, !dbg !18073
  %inc101 = add i32 %49, 1, !dbg !18073
  store i32 %inc101, i32* %b, align 4, !dbg !18073
  br label %while.cond102, !dbg !18075

while.cond102:                                    ; preds = %while.body112, %if.then100
  %50 = load i32, i32* %b, align 4, !dbg !18076
  %51 = load i32, i32* %e, align 4, !dbg !18077
  %cmp103 = icmp slt i32 %50, %51, !dbg !18078
  br i1 %cmp103, label %land.rhs105, label %land.end111, !dbg !18079

land.rhs105:                                      ; preds = %while.cond102
  %52 = load i32, i32* %b, align 4, !dbg !18080
  %idxprom106 = sext i32 %52 to i64, !dbg !18081
  %arrayidx107 = getelementptr [2049 x i8], [2049 x i8]* %buf, i64 0, i64 %idxprom106, !dbg !18081
  %53 = load i8, i8* %arrayidx107, align 1, !dbg !18081
  %conv108 = sext i8 %53 to i32, !dbg !18081
  %cmp109 = icmp ne i32 %conv108, 32, !dbg !18082
  br label %land.end111

land.end111:                                      ; preds = %land.rhs105, %while.cond102
  %54 = phi i1 [ false, %while.cond102 ], [ %cmp109, %land.rhs105 ], !dbg !18083
  br i1 %54, label %while.body112, label %while.end114, !dbg !18075

while.body112:                                    ; preds = %land.end111
  %55 = load i32, i32* %b, align 4, !dbg !18084
  %inc113 = add i32 %55, 1, !dbg !18084
  store i32 %inc113, i32* %b, align 4, !dbg !18084
  br label %while.cond102, !dbg !18075, !llvm.loop !18086

while.end114:                                     ; preds = %land.end111
  %56 = load i32, i32* %b, align 4, !dbg !18088
  %idxprom115 = sext i32 %56 to i64, !dbg !18090
  %arrayidx116 = getelementptr [2049 x i8], [2049 x i8]* %buf, i64 0, i64 %idxprom115, !dbg !18090
  %57 = load i8, i8* %arrayidx116, align 1, !dbg !18090
  %conv117 = sext i8 %57 to i32, !dbg !18090
  %cmp118 = icmp eq i32 %conv117, 32, !dbg !18091
  br i1 %cmp118, label %if.then120, label %if.end131, !dbg !18092

if.then120:                                       ; preds = %while.end114
  %58 = load i32, i32* %b, align 4, !dbg !18093
  %inc121 = add i32 %58, 1, !dbg !18093
  store i32 %inc121, i32* %b, align 4, !dbg !18093
  %arraydecay122 = getelementptr inbounds [2049 x i8], [2049 x i8]* %buf, i64 0, i64 0, !dbg !18095
  %59 = load i32, i32* %b, align 4, !dbg !18097
  %idx.ext123 = sext i32 %59 to i64, !dbg !18098
  %add.ptr124 = getelementptr i8, i8* %arraydecay122, i64 %idx.ext123, !dbg !18098
  %call125 = call i64 @strtoul(i8* %add.ptr124, i8** null, i32 16) #7, !dbg !18099
  %cmp126 = icmp eq i64 %call125, 1, !dbg !18100
  br i1 %cmp126, label %if.then128, label %if.end130, !dbg !18101

if.then128:                                       ; preds = %if.then120
  %60 = load i32, i32* %d, align 4, !dbg !18102
  %inc129 = add i32 %60, 1, !dbg !18102
  store i32 %inc129, i32* %d, align 4, !dbg !18102
  br label %if.end130, !dbg !18104

if.end130:                                        ; preds = %if.then128, %if.then120
  br label %if.end131, !dbg !18105

if.end131:                                        ; preds = %if.end130, %while.end114
  br label %if.end132, !dbg !18106

if.end132:                                        ; preds = %if.end131, %while.end94
  br label %if.end133, !dbg !18107

if.end133:                                        ; preds = %if.end132, %while.end72
  br label %if.end134, !dbg !18108

if.end134:                                        ; preds = %if.end133, %land.lhs.true52, %while.end49
  %61 = load i32, i32* %c, align 4, !dbg !18109
  store i32 %61, i32* %b, align 4, !dbg !18110
  br label %while.cond135, !dbg !18111

while.cond135:                                    ; preds = %while.body145, %if.end134
  %62 = load i32, i32* %c, align 4, !dbg !18112
  %63 = load i32, i32* %e, align 4, !dbg !18113
  %cmp136 = icmp slt i32 %62, %63, !dbg !18114
  br i1 %cmp136, label %land.rhs138, label %land.end144, !dbg !18115

land.rhs138:                                      ; preds = %while.cond135
  %64 = load i32, i32* %c, align 4, !dbg !18116
  %idxprom139 = sext i32 %64 to i64, !dbg !18117
  %arrayidx140 = getelementptr [2049 x i8], [2049 x i8]* %buf, i64 0, i64 %idxprom139, !dbg !18117
  %65 = load i8, i8* %arrayidx140, align 1, !dbg !18117
  %conv141 = sext i8 %65 to i32, !dbg !18117
  %cmp142 = icmp ne i32 %conv141, 10, !dbg !18118
  br label %land.end144

land.end144:                                      ; preds = %land.rhs138, %while.cond135
  %66 = phi i1 [ false, %while.cond135 ], [ %cmp142, %land.rhs138 ], !dbg !18015
  br i1 %66, label %while.body145, label %while.end147, !dbg !18111

while.body145:                                    ; preds = %land.end144
  %67 = load i32, i32* %c, align 4, !dbg !18119
  %inc146 = add i32 %67, 1, !dbg !18119
  store i32 %inc146, i32* %c, align 4, !dbg !18119
  br label %while.cond135, !dbg !18111, !llvm.loop !18121

while.end147:                                     ; preds = %land.end144
  br label %while.cond25, !dbg !17995, !llvm.loop !18123

while.end148:                                     ; preds = %while.cond25
  %68 = load i32, i32* %e, align 4, !dbg !18125
  %69 = load i32, i32* %b, align 4, !dbg !18127
  %cmp149 = icmp sgt i32 %68, %69, !dbg !18128
  br i1 %cmp149, label %if.then151, label %if.end158, !dbg !18129

if.then151:                                       ; preds = %while.end148
  %arraydecay152 = getelementptr inbounds [2049 x i8], [2049 x i8]* %buf, i64 0, i64 0, !dbg !18130
  %arraydecay153 = getelementptr inbounds [2049 x i8], [2049 x i8]* %buf, i64 0, i64 0, !dbg !18132
  %70 = load i32, i32* %b, align 4, !dbg !18133
  %idx.ext154 = sext i32 %70 to i64, !dbg !18134
  %add.ptr155 = getelementptr i8, i8* %arraydecay153, i64 %idx.ext154, !dbg !18134
  %71 = load i32, i32* %e, align 4, !dbg !18135
  %72 = load i32, i32* %b, align 4, !dbg !18136
  %sub156 = sub i32 %71, %72, !dbg !18137
  %conv157 = sext i32 %sub156 to i64, !dbg !18138
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 16 %arraydecay152, i8* align 1 %add.ptr155, i64 %conv157, i1 false), !dbg !18130
  br label %if.end158, !dbg !18139

if.end158:                                        ; preds = %if.then151, %while.end148
  %73 = load i32, i32* %b, align 4, !dbg !18140
  %74 = load i32, i32* %e, align 4, !dbg !18141
  %sub159 = sub i32 %74, %73, !dbg !18141
  store i32 %sub159, i32* %e, align 4, !dbg !18141
  store i32 0, i32* %b, align 4, !dbg !18142
  br label %for.cond, !dbg !18143, !llvm.loop !18144

for.end:                                          ; preds = %if.then12
  %75 = load i32, i32* %f, align 4, !dbg !18147
  %call160 = call i32 @close(i32 %75), !dbg !18148
  %76 = load i32, i32* %d, align 4, !dbg !18149
  store i32 %76, i32* %retval, align 4, !dbg !18150
  br label %return, !dbg !18150

return:                                           ; preds = %for.end, %if.then
  %77 = load i32, i32* %retval, align 4, !dbg !18151
  ret i32 %77, !dbg !18151
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local i32 @init_aliases() #0 !dbg !18152 {
entry:
  %retval = alloca i32, align 4
  %fp = alloca %struct._IO_FILE*, align 8
  %alias = alloca [257 x i8], align 16
  %dir = alloca [4097 x i8], align 16
  %z = alloca i8*, align 8
  %z37 = alloca i8*, align 8
  %curr = alloca %struct.DirAlias_*, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp, metadata !18153, metadata !DIExpression()), !dbg !18188
  call void @llvm.dbg.declare(metadata [257 x i8]* %alias, metadata !18189, metadata !DIExpression()), !dbg !18193
  call void @llvm.dbg.declare(metadata [4097 x i8]* %dir, metadata !18194, metadata !DIExpression()), !dbg !18195
  %call = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.555, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.556, i64 0, i64 0)), !dbg !18196
  store %struct._IO_FILE* %call, %struct._IO_FILE** %fp, align 8, !dbg !18198
  %cmp = icmp eq %struct._IO_FILE* %call, null, !dbg !18199
  br i1 %cmp, label %if.then, label %if.end, !dbg !18200

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !18201
  br label %return, !dbg !18201

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !18203

while.cond:                                       ; preds = %if.end94, %if.then15, %if.end
  %arraydecay = getelementptr inbounds [257 x i8], [257 x i8]* %alias, i64 0, i64 0, !dbg !18204
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !18205
  %call1 = call i8* @fgets(i8* %arraydecay, i32 257, %struct._IO_FILE* %0), !dbg !18206
  %cmp2 = icmp ne i8* %call1, null, !dbg !18207
  br i1 %cmp2, label %while.body, label %while.end, !dbg !18203

while.body:                                       ; preds = %while.cond
  %arraydecay3 = getelementptr inbounds [257 x i8], [257 x i8]* %alias, i64 0, i64 0, !dbg !18208
  %1 = load i8, i8* %arraydecay3, align 16, !dbg !18208
  %conv = sext i8 %1 to i32, !dbg !18208
  %cmp4 = icmp eq i32 %conv, 35, !dbg !18211
  br i1 %cmp4, label %if.then15, label %lor.lhs.false, !dbg !18212

lor.lhs.false:                                    ; preds = %while.body
  %arraydecay6 = getelementptr inbounds [257 x i8], [257 x i8]* %alias, i64 0, i64 0, !dbg !18213
  %2 = load i8, i8* %arraydecay6, align 16, !dbg !18213
  %conv7 = sext i8 %2 to i32, !dbg !18213
  %cmp8 = icmp eq i32 %conv7, 10, !dbg !18214
  br i1 %cmp8, label %if.then15, label %lor.lhs.false10, !dbg !18215

lor.lhs.false10:                                  ; preds = %lor.lhs.false
  %arraydecay11 = getelementptr inbounds [257 x i8], [257 x i8]* %alias, i64 0, i64 0, !dbg !18216
  %3 = load i8, i8* %arraydecay11, align 16, !dbg !18216
  %conv12 = sext i8 %3 to i32, !dbg !18216
  %cmp13 = icmp eq i32 %conv12, 0, !dbg !18217
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !18218

if.then15:                                        ; preds = %lor.lhs.false10, %lor.lhs.false, %while.body
  br label %while.cond, !dbg !18219, !llvm.loop !18221

if.end16:                                         ; preds = %lor.lhs.false10
  call void @llvm.dbg.declare(metadata i8** %z, metadata !18223, metadata !DIExpression()), !dbg !18225
  %arraydecay17 = getelementptr inbounds [257 x i8], [257 x i8]* %alias, i64 0, i64 0, !dbg !18226
  %arraydecay18 = getelementptr inbounds [257 x i8], [257 x i8]* %alias, i64 0, i64 0, !dbg !18227
  %call19 = call i64 @strlen(i8* %arraydecay18) #12, !dbg !18228
  %add.ptr = getelementptr i8, i8* %arraydecay17, i64 %call19, !dbg !18229
  %add.ptr20 = getelementptr i8, i8* %add.ptr, i64 -1, !dbg !18230
  store i8* %add.ptr20, i8** %z, align 8, !dbg !18225
  %4 = load i8*, i8** %z, align 8, !dbg !18231
  %5 = load i8, i8* %4, align 1, !dbg !18233
  %conv21 = sext i8 %5 to i32, !dbg !18233
  %cmp22 = icmp ne i32 %conv21, 10, !dbg !18234
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !18235

if.then24:                                        ; preds = %if.end16
  br label %bad, !dbg !18236

if.end25:                                         ; preds = %if.end16
  %6 = load i8*, i8** %z, align 8, !dbg !18238
  store i8 0, i8* %6, align 1, !dbg !18239
  br label %do.body, !dbg !18240

do.body:                                          ; preds = %lor.end, %if.end25
  %arraydecay26 = getelementptr inbounds [4097 x i8], [4097 x i8]* %dir, i64 0, i64 0, !dbg !18241
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !18244
  %call27 = call i8* @fgets(i8* %arraydecay26, i32 4097, %struct._IO_FILE* %7), !dbg !18245
  %cmp28 = icmp eq i8* %call27, null, !dbg !18246
  br i1 %cmp28, label %if.then35, label %lor.lhs.false30, !dbg !18247

lor.lhs.false30:                                  ; preds = %do.body
  %arraydecay31 = getelementptr inbounds [4097 x i8], [4097 x i8]* %dir, i64 0, i64 0, !dbg !18248
  %8 = load i8, i8* %arraydecay31, align 16, !dbg !18248
  %conv32 = sext i8 %8 to i32, !dbg !18248
  %cmp33 = icmp eq i32 %conv32, 0, !dbg !18249
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !18250

if.then35:                                        ; preds = %lor.lhs.false30, %do.body
  br label %bad, !dbg !18251

if.end36:                                         ; preds = %lor.lhs.false30
  call void @llvm.dbg.declare(metadata i8** %z37, metadata !18253, metadata !DIExpression()), !dbg !18255
  %arraydecay38 = getelementptr inbounds [4097 x i8], [4097 x i8]* %dir, i64 0, i64 0, !dbg !18256
  %arraydecay39 = getelementptr inbounds [4097 x i8], [4097 x i8]* %dir, i64 0, i64 0, !dbg !18257
  %call40 = call i64 @strlen(i8* %arraydecay39) #12, !dbg !18258
  %add.ptr41 = getelementptr i8, i8* %arraydecay38, i64 %call40, !dbg !18259
  %add.ptr42 = getelementptr i8, i8* %add.ptr41, i64 -1, !dbg !18260
  store i8* %add.ptr42, i8** %z37, align 8, !dbg !18255
  %9 = load i8*, i8** %z37, align 8, !dbg !18261
  %10 = load i8, i8* %9, align 1, !dbg !18263
  %conv43 = sext i8 %10 to i32, !dbg !18263
  %cmp44 = icmp eq i32 %conv43, 10, !dbg !18264
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !18265

if.then46:                                        ; preds = %if.end36
  %11 = load i8*, i8** %z37, align 8, !dbg !18266
  store i8 0, i8* %11, align 1, !dbg !18268
  br label %if.end47, !dbg !18269

if.end47:                                         ; preds = %if.then46, %if.end36
  br label %do.cond, !dbg !18270

do.cond:                                          ; preds = %if.end47
  %arraydecay48 = getelementptr inbounds [4097 x i8], [4097 x i8]* %dir, i64 0, i64 0, !dbg !18271
  %12 = load i8, i8* %arraydecay48, align 16, !dbg !18271
  %conv49 = sext i8 %12 to i32, !dbg !18271
  %cmp50 = icmp eq i32 %conv49, 35, !dbg !18272
  br i1 %cmp50, label %lor.end, label %lor.rhs, !dbg !18273

lor.rhs:                                          ; preds = %do.cond
  %arraydecay52 = getelementptr inbounds [4097 x i8], [4097 x i8]* %dir, i64 0, i64 0, !dbg !18274
  %13 = load i8, i8* %arraydecay52, align 16, !dbg !18274
  %conv53 = sext i8 %13 to i32, !dbg !18274
  %cmp54 = icmp eq i32 %conv53, 0, !dbg !18275
  br label %lor.end, !dbg !18273

lor.end:                                          ; preds = %lor.rhs, %do.cond
  %14 = phi i1 [ true, %do.cond ], [ %cmp54, %lor.rhs ]
  br i1 %14, label %do.body, label %do.end, !dbg !18270, !llvm.loop !18276

do.end:                                           ; preds = %lor.end
  %15 = load %struct.DirAlias_*, %struct.DirAlias_** @head.557, align 8, !dbg !18278
  %cmp56 = icmp eq %struct.DirAlias_* %15, null, !dbg !18280
  br i1 %cmp56, label %if.then58, label %if.else, !dbg !18281

if.then58:                                        ; preds = %do.end
  %call59 = call noalias i8* @malloc(i64 24) #7, !dbg !18282
  %16 = bitcast i8* %call59 to %struct.DirAlias_*, !dbg !18282
  store %struct.DirAlias_* %16, %struct.DirAlias_** @tail.558, align 8, !dbg !18285
  store %struct.DirAlias_* %16, %struct.DirAlias_** @head.557, align 8, !dbg !18286
  %cmp60 = icmp eq %struct.DirAlias_* %16, null, !dbg !18287
  br i1 %cmp60, label %if.then74, label %lor.lhs.false62, !dbg !18288

lor.lhs.false62:                                  ; preds = %if.then58
  %arraydecay63 = getelementptr inbounds [257 x i8], [257 x i8]* %alias, i64 0, i64 0, !dbg !18289
  %call64 = call noalias i8* @strdup(i8* %arraydecay63) #7, !dbg !18290
  %17 = load %struct.DirAlias_*, %struct.DirAlias_** @tail.558, align 8, !dbg !18291
  %alias65 = getelementptr inbounds %struct.DirAlias_, %struct.DirAlias_* %17, i32 0, i32 0, !dbg !18292
  store i8* %call64, i8** %alias65, align 8, !dbg !18293
  %cmp66 = icmp eq i8* %call64, null, !dbg !18294
  br i1 %cmp66, label %if.then74, label %lor.lhs.false68, !dbg !18295

lor.lhs.false68:                                  ; preds = %lor.lhs.false62
  %arraydecay69 = getelementptr inbounds [4097 x i8], [4097 x i8]* %dir, i64 0, i64 0, !dbg !18296
  %call70 = call noalias i8* @strdup(i8* %arraydecay69) #7, !dbg !18297
  %18 = load %struct.DirAlias_*, %struct.DirAlias_** @tail.558, align 8, !dbg !18298
  %dir71 = getelementptr inbounds %struct.DirAlias_, %struct.DirAlias_* %18, i32 0, i32 1, !dbg !18299
  store i8* %call70, i8** %dir71, align 8, !dbg !18300
  %cmp72 = icmp eq i8* %call70, null, !dbg !18301
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !18302

if.then74:                                        ; preds = %lor.lhs.false68, %lor.lhs.false62, %if.then58
  call void @die_mem() #11, !dbg !18303
  unreachable, !dbg !18303

if.end75:                                         ; preds = %lor.lhs.false68
  %19 = load %struct.DirAlias_*, %struct.DirAlias_** @tail.558, align 8, !dbg !18305
  %next = getelementptr inbounds %struct.DirAlias_, %struct.DirAlias_* %19, i32 0, i32 2, !dbg !18306
  store %struct.DirAlias_* null, %struct.DirAlias_** %next, align 8, !dbg !18307
  br label %if.end94, !dbg !18308

if.else:                                          ; preds = %do.end
  call void @llvm.dbg.declare(metadata %struct.DirAlias_** %curr, metadata !18309, metadata !DIExpression()), !dbg !18311
  %call76 = call noalias i8* @malloc(i64 24) #7, !dbg !18312
  %20 = bitcast i8* %call76 to %struct.DirAlias_*, !dbg !18312
  store %struct.DirAlias_* %20, %struct.DirAlias_** %curr, align 8, !dbg !18314
  %cmp77 = icmp eq %struct.DirAlias_* %20, null, !dbg !18315
  br i1 %cmp77, label %if.then91, label %lor.lhs.false79, !dbg !18316

lor.lhs.false79:                                  ; preds = %if.else
  %arraydecay80 = getelementptr inbounds [257 x i8], [257 x i8]* %alias, i64 0, i64 0, !dbg !18317
  %call81 = call noalias i8* @strdup(i8* %arraydecay80) #7, !dbg !18318
  %21 = load %struct.DirAlias_*, %struct.DirAlias_** %curr, align 8, !dbg !18319
  %alias82 = getelementptr inbounds %struct.DirAlias_, %struct.DirAlias_* %21, i32 0, i32 0, !dbg !18320
  store i8* %call81, i8** %alias82, align 8, !dbg !18321
  %cmp83 = icmp eq i8* %call81, null, !dbg !18322
  br i1 %cmp83, label %if.then91, label %lor.lhs.false85, !dbg !18323

lor.lhs.false85:                                  ; preds = %lor.lhs.false79
  %arraydecay86 = getelementptr inbounds [4097 x i8], [4097 x i8]* %dir, i64 0, i64 0, !dbg !18324
  %call87 = call noalias i8* @strdup(i8* %arraydecay86) #7, !dbg !18325
  %22 = load %struct.DirAlias_*, %struct.DirAlias_** %curr, align 8, !dbg !18326
  %dir88 = getelementptr inbounds %struct.DirAlias_, %struct.DirAlias_* %22, i32 0, i32 1, !dbg !18327
  store i8* %call87, i8** %dir88, align 8, !dbg !18328
  %cmp89 = icmp eq i8* %call87, null, !dbg !18329
  br i1 %cmp89, label %if.then91, label %if.end92, !dbg !18330

if.then91:                                        ; preds = %lor.lhs.false85, %lor.lhs.false79, %if.else
  call void @die_mem() #11, !dbg !18331
  unreachable, !dbg !18331

if.end92:                                         ; preds = %lor.lhs.false85
  %23 = load %struct.DirAlias_*, %struct.DirAlias_** %curr, align 8, !dbg !18333
  %24 = load %struct.DirAlias_*, %struct.DirAlias_** @tail.558, align 8, !dbg !18334
  %next93 = getelementptr inbounds %struct.DirAlias_, %struct.DirAlias_* %24, i32 0, i32 2, !dbg !18335
  store %struct.DirAlias_* %23, %struct.DirAlias_** %next93, align 8, !dbg !18336
  %25 = load %struct.DirAlias_*, %struct.DirAlias_** %curr, align 8, !dbg !18337
  store %struct.DirAlias_* %25, %struct.DirAlias_** @tail.558, align 8, !dbg !18338
  br label %if.end94

if.end94:                                         ; preds = %if.end92, %if.end75
  br label %while.cond, !dbg !18203, !llvm.loop !18221

while.end:                                        ; preds = %while.cond
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !18339
  %call95 = call i32 @fclose(%struct._IO_FILE* %26), !dbg !18340
  %27 = load i8, i8* @aliases_up, align 1, !dbg !18341
  %inc = add i8 %27, 1, !dbg !18341
  store i8 %inc, i8* @aliases_up, align 1, !dbg !18341
  store i32 0, i32* %retval, align 4, !dbg !18342
  br label %return, !dbg !18342

bad:                                              ; preds = %if.then35, %if.then24
  call void @llvm.dbg.label(metadata !18343), !dbg !18344
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !18345
  %call96 = call i32 @fclose(%struct._IO_FILE* %28), !dbg !18346
  call void (i32, i8*, ...) @logfile(i32 3, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2.559, i64 0, i64 0)), !dbg !18347
  store i32 -1, i32* %retval, align 4, !dbg !18348
  br label %return, !dbg !18348

return:                                           ; preds = %bad, %while.end, %if.then
  %29 = load i32, i32* %retval, align 4, !dbg !18349
  ret i32 %29, !dbg !18349
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local i8* @lookup_alias(i8* %alias) #0 !dbg !18350 {
entry:
  %retval = alloca i8*, align 8
  %alias.addr = alloca i8*, align 8
  %curr = alloca %struct.DirAlias_*, align 8
  store i8* %alias, i8** %alias.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %alias.addr, metadata !18351, metadata !DIExpression()), !dbg !18352
  call void @llvm.dbg.declare(metadata %struct.DirAlias_** %curr, metadata !18353, metadata !DIExpression()), !dbg !18356
  %0 = load %struct.DirAlias_*, %struct.DirAlias_** @head.557, align 8, !dbg !18357
  store %struct.DirAlias_* %0, %struct.DirAlias_** %curr, align 8, !dbg !18356
  %1 = load i8, i8* @aliases_up, align 1, !dbg !18358
  %conv = sext i8 %1 to i32, !dbg !18358
  %cmp = icmp eq i32 %conv, 0, !dbg !18360
  br i1 %cmp, label %if.then, label %if.end, !dbg !18361

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !18362
  br label %return, !dbg !18362

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !18364

while.cond:                                       ; preds = %if.end8, %if.end
  %2 = load %struct.DirAlias_*, %struct.DirAlias_** %curr, align 8, !dbg !18365
  %cmp2 = icmp ne %struct.DirAlias_* %2, null, !dbg !18366
  br i1 %cmp2, label %while.body, label %while.end, !dbg !18364

while.body:                                       ; preds = %while.cond
  %3 = load %struct.DirAlias_*, %struct.DirAlias_** %curr, align 8, !dbg !18367
  %alias4 = getelementptr inbounds %struct.DirAlias_, %struct.DirAlias_* %3, i32 0, i32 0, !dbg !18370
  %4 = load i8*, i8** %alias4, align 8, !dbg !18370
  %5 = load i8*, i8** %alias.addr, align 8, !dbg !18371
  %call = call i32 @strcmp(i8* %4, i8* %5) #12, !dbg !18372
  %cmp5 = icmp eq i32 %call, 0, !dbg !18373
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !18374

if.then7:                                         ; preds = %while.body
  %6 = load %struct.DirAlias_*, %struct.DirAlias_** %curr, align 8, !dbg !18375
  %dir = getelementptr inbounds %struct.DirAlias_, %struct.DirAlias_* %6, i32 0, i32 1, !dbg !18377
  %7 = load i8*, i8** %dir, align 8, !dbg !18377
  store i8* %7, i8** %retval, align 8, !dbg !18378
  br label %return, !dbg !18378

if.end8:                                          ; preds = %while.body
  %8 = load %struct.DirAlias_*, %struct.DirAlias_** %curr, align 8, !dbg !18379
  %next = getelementptr inbounds %struct.DirAlias_, %struct.DirAlias_* %8, i32 0, i32 2, !dbg !18380
  %9 = load %struct.DirAlias_*, %struct.DirAlias_** %next, align 8, !dbg !18380
  store %struct.DirAlias_* %9, %struct.DirAlias_** %curr, align 8, !dbg !18381
  br label %while.cond, !dbg !18364, !llvm.loop !18382

while.end:                                        ; preds = %while.cond
  store i8* null, i8** %retval, align 8, !dbg !18384
  br label %return, !dbg !18384

return:                                           ; preds = %while.end, %if.then7, %if.then
  %10 = load i8*, i8** %retval, align 8, !dbg !18385
  ret i8* %10, !dbg !18385
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @print_aliases() #0 !dbg !18386 {
entry:
  %curr = alloca %struct.DirAlias_*, align 8
  %line = alloca [4355 x i8], align 16
  call void @llvm.dbg.declare(metadata %struct.DirAlias_** %curr, metadata !18387, metadata !DIExpression()), !dbg !18388
  %0 = load %struct.DirAlias_*, %struct.DirAlias_** @head.557, align 8, !dbg !18389
  store %struct.DirAlias_* %0, %struct.DirAlias_** %curr, align 8, !dbg !18388
  %1 = load i8, i8* @aliases_up, align 1, !dbg !18390
  %conv = sext i8 %1 to i32, !dbg !18390
  %cmp = icmp eq i32 %conv, 0, !dbg !18392
  br i1 %cmp, label %if.then, label %if.end, !dbg !18393

if.then:                                          ; preds = %entry
  call void @addreply_noformat(i32 502, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3.562, i64 0, i64 0)), !dbg !18394
  br label %return, !dbg !18396

if.end:                                           ; preds = %entry
  call void @addreply_noformat(i32 214, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4.563, i64 0, i64 0)), !dbg !18397
  br label %while.cond, !dbg !18398

while.cond:                                       ; preds = %while.body, %if.end
  %2 = load %struct.DirAlias_*, %struct.DirAlias_** %curr, align 8, !dbg !18399
  %cmp2 = icmp ne %struct.DirAlias_* %2, null, !dbg !18400
  br i1 %cmp2, label %while.body, label %while.end, !dbg !18398

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata [4355 x i8]* %line, metadata !18401, metadata !DIExpression()), !dbg !18406
  %arraydecay = getelementptr inbounds [4355 x i8], [4355 x i8]* %line, i64 0, i64 0, !dbg !18407
  %3 = load %struct.DirAlias_*, %struct.DirAlias_** %curr, align 8, !dbg !18408
  %alias = getelementptr inbounds %struct.DirAlias_, %struct.DirAlias_* %3, i32 0, i32 0, !dbg !18409
  %4 = load i8*, i8** %alias, align 8, !dbg !18409
  %5 = load %struct.DirAlias_*, %struct.DirAlias_** %curr, align 8, !dbg !18410
  %dir = getelementptr inbounds %struct.DirAlias_, %struct.DirAlias_* %5, i32 0, i32 1, !dbg !18411
  %6 = load i8*, i8** %dir, align 8, !dbg !18411
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 4355, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5.564, i64 0, i64 0), i8* %4, i8* %6) #7, !dbg !18412
  %arraydecay4 = getelementptr inbounds [4355 x i8], [4355 x i8]* %line, i64 0, i64 0, !dbg !18413
  call void @addreply_noformat(i32 0, i8* %arraydecay4), !dbg !18414
  %7 = load %struct.DirAlias_*, %struct.DirAlias_** %curr, align 8, !dbg !18415
  %next = getelementptr inbounds %struct.DirAlias_, %struct.DirAlias_* %7, i32 0, i32 2, !dbg !18416
  %8 = load %struct.DirAlias_*, %struct.DirAlias_** %next, align 8, !dbg !18416
  store %struct.DirAlias_* %8, %struct.DirAlias_** %curr, align 8, !dbg !18417
  br label %while.cond, !dbg !18398, !llvm.loop !18418

while.end:                                        ; preds = %while.cond
  call void @addreply_noformat(i32 214, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.565, i64 0, i64 0)), !dbg !18420
  br label %return, !dbg !18421

return:                                           ; preds = %while.end, %if.then
  ret void, !dbg !18421
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @iptrack_delete_pid(i32 %pid) #0 !dbg !18422 {
entry:
  %pid.addr = alloca i32, align 4
  %c = alloca i32, align 4
  store i32 %pid, i32* %pid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pid.addr, metadata !18426, metadata !DIExpression()), !dbg !18427
  call void @llvm.dbg.declare(metadata i32* %c, metadata !18428, metadata !DIExpression()), !dbg !18429
  store i32 0, i32* %c, align 4, !dbg !18429
  %0 = load %struct.IPTrack_*, %struct.IPTrack_** @iptrack_list, align 8, !dbg !18430
  %cmp = icmp eq %struct.IPTrack_* %0, null, !dbg !18432
  br i1 %cmp, label %if.then, label %if.end, !dbg !18433

if.then:                                          ; preds = %entry
  br label %do.end, !dbg !18434

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !18436

do.body:                                          ; preds = %do.cond, %if.end
  %1 = load %struct.IPTrack_*, %struct.IPTrack_** @iptrack_list, align 8, !dbg !18437
  %2 = load i32, i32* %c, align 4, !dbg !18440
  %idxprom = zext i32 %2 to i64, !dbg !18437
  %arrayidx = getelementptr %struct.IPTrack_, %struct.IPTrack_* %1, i64 %idxprom, !dbg !18437
  %pid1 = getelementptr inbounds %struct.IPTrack_, %struct.IPTrack_* %arrayidx, i32 0, i32 1, !dbg !18441
  %3 = load i32, i32* %pid1, align 8, !dbg !18441
  %4 = load i32, i32* %pid.addr, align 4, !dbg !18442
  %cmp2 = icmp eq i32 %3, %4, !dbg !18443
  br i1 %cmp2, label %if.then3, label %if.end7, !dbg !18444

if.then3:                                         ; preds = %do.body
  %5 = load %struct.IPTrack_*, %struct.IPTrack_** @iptrack_list, align 8, !dbg !18445
  %6 = load i32, i32* %c, align 4, !dbg !18447
  %idxprom4 = zext i32 %6 to i64, !dbg !18445
  %arrayidx5 = getelementptr %struct.IPTrack_, %struct.IPTrack_* %5, i64 %idxprom4, !dbg !18445
  %pid6 = getelementptr inbounds %struct.IPTrack_, %struct.IPTrack_* %arrayidx5, i32 0, i32 1, !dbg !18448
  store i32 0, i32* %pid6, align 8, !dbg !18449
  br label %do.end, !dbg !18450

if.end7:                                          ; preds = %do.body
  %7 = load i32, i32* %c, align 4, !dbg !18451
  %inc = add i32 %7, 1, !dbg !18451
  store i32 %inc, i32* %c, align 4, !dbg !18451
  br label %do.cond, !dbg !18452

do.cond:                                          ; preds = %if.end7
  %8 = load i32, i32* %c, align 4, !dbg !18453
  %9 = load i32, i32* @maxusers, align 4, !dbg !18454
  %cmp8 = icmp ult i32 %8, %9, !dbg !18455
  br i1 %cmp8, label %do.body, label %do.end, !dbg !18452, !llvm.loop !18456

do.end:                                           ; preds = %if.then, %if.then3, %do.cond
  ret void, !dbg !18458
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @iptrack_free() #0 !dbg !18459 {
entry:
  %0 = load %struct.IPTrack_*, %struct.IPTrack_** @iptrack_list, align 8, !dbg !18460
  %1 = bitcast %struct.IPTrack_* %0 to i8*, !dbg !18460
  call void @free(i8* %1) #7, !dbg !18461
  store %struct.IPTrack_* null, %struct.IPTrack_** @iptrack_list, align 8, !dbg !18462
  ret void, !dbg !18463
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local i32 @iptrack_get(%struct.sockaddr_storage* %ip) #0 !dbg !18464 {
entry:
  %retval = alloca i32, align 4
  %ip.addr = alloca %struct.sockaddr_storage*, align 8
  %c = alloca i32, align 4
  %nb = alloca i32, align 4
  %__a = alloca %struct.in6_addr*, align 8
  %__b = alloca %struct.in6_addr*, align 8
  %tmp = alloca i32, align 4
  store %struct.sockaddr_storage* %ip, %struct.sockaddr_storage** %ip.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage** %ip.addr, metadata !18470, metadata !DIExpression()), !dbg !18471
  call void @llvm.dbg.declare(metadata i32* %c, metadata !18472, metadata !DIExpression()), !dbg !18473
  store i32 0, i32* %c, align 4, !dbg !18473
  call void @llvm.dbg.declare(metadata i32* %nb, metadata !18474, metadata !DIExpression()), !dbg !18475
  store i32 0, i32* %nb, align 4, !dbg !18475
  %0 = load %struct.IPTrack_*, %struct.IPTrack_** @iptrack_list, align 8, !dbg !18476
  %cmp = icmp eq %struct.IPTrack_* %0, null, !dbg !18478
  br i1 %cmp, label %if.then, label %if.end, !dbg !18479

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !18480
  br label %return, !dbg !18480

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !18482

do.body:                                          ; preds = %do.cond, %if.end
  %1 = load %struct.IPTrack_*, %struct.IPTrack_** @iptrack_list, align 8, !dbg !18483
  %2 = load i32, i32* %c, align 4, !dbg !18486
  %idxprom = zext i32 %2 to i64, !dbg !18483
  %arrayidx = getelementptr %struct.IPTrack_, %struct.IPTrack_* %1, i64 %idxprom, !dbg !18483
  %pid = getelementptr inbounds %struct.IPTrack_, %struct.IPTrack_* %arrayidx, i32 0, i32 1, !dbg !18487
  %3 = load i32, i32* %pid, align 8, !dbg !18487
  %cmp1 = icmp ne i32 %3, 0, !dbg !18488
  br i1 %cmp1, label %land.lhs.true, label %if.end75, !dbg !18489

land.lhs.true:                                    ; preds = %do.body
  %4 = load %struct.IPTrack_*, %struct.IPTrack_** @iptrack_list, align 8, !dbg !18490
  %5 = load i32, i32* %c, align 4, !dbg !18490
  %idxprom2 = zext i32 %5 to i64, !dbg !18490
  %arrayidx3 = getelementptr %struct.IPTrack_, %struct.IPTrack_* %4, i64 %idxprom2, !dbg !18490
  %ip4 = getelementptr inbounds %struct.IPTrack_, %struct.IPTrack_* %arrayidx3, i32 0, i32 0, !dbg !18490
  %ss_family = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %ip4, i32 0, i32 0, !dbg !18490
  %6 = load i16, i16* %ss_family, align 8, !dbg !18490
  %conv = zext i16 %6 to i32, !dbg !18490
  %7 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %ip.addr, align 8, !dbg !18491
  %ss_family5 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %7, i32 0, i32 0, !dbg !18491
  %8 = load i16, i16* %ss_family5, align 8, !dbg !18491
  %conv6 = zext i16 %8 to i32, !dbg !18491
  %cmp7 = icmp eq i32 %conv, %conv6, !dbg !18492
  br i1 %cmp7, label %if.then9, label %if.end75, !dbg !18493

if.then9:                                         ; preds = %land.lhs.true
  %9 = load %struct.IPTrack_*, %struct.IPTrack_** @iptrack_list, align 8, !dbg !18494
  %10 = load i32, i32* %c, align 4, !dbg !18494
  %idxprom10 = zext i32 %10 to i64, !dbg !18494
  %arrayidx11 = getelementptr %struct.IPTrack_, %struct.IPTrack_* %9, i64 %idxprom10, !dbg !18494
  %ip12 = getelementptr inbounds %struct.IPTrack_, %struct.IPTrack_* %arrayidx11, i32 0, i32 0, !dbg !18494
  %ss_family13 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %ip12, i32 0, i32 0, !dbg !18494
  %11 = load i16, i16* %ss_family13, align 8, !dbg !18494
  %conv14 = zext i16 %11 to i32, !dbg !18494
  %cmp15 = icmp eq i32 %conv14, 2, !dbg !18497
  br i1 %cmp15, label %land.lhs.true17, label %if.else, !dbg !18498

land.lhs.true17:                                  ; preds = %if.then9
  %12 = load %struct.IPTrack_*, %struct.IPTrack_** @iptrack_list, align 8, !dbg !18499
  %13 = load i32, i32* %c, align 4, !dbg !18499
  %idxprom18 = zext i32 %13 to i64, !dbg !18499
  %arrayidx19 = getelementptr %struct.IPTrack_, %struct.IPTrack_* %12, i64 %idxprom18, !dbg !18499
  %ip20 = getelementptr inbounds %struct.IPTrack_, %struct.IPTrack_* %arrayidx19, i32 0, i32 0, !dbg !18499
  %call = call %struct.in_addr* @storage_sin_addr_const(%struct.sockaddr_storage* %ip20), !dbg !18499
  %s_addr = getelementptr inbounds %struct.in_addr, %struct.in_addr* %call, i32 0, i32 0, !dbg !18499
  %14 = load i32, i32* %s_addr, align 4, !dbg !18499
  %15 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %ip.addr, align 8, !dbg !18500
  %call21 = call %struct.in_addr* @storage_sin_addr_const(%struct.sockaddr_storage* %15), !dbg !18500
  %s_addr22 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %call21, i32 0, i32 0, !dbg !18500
  %16 = load i32, i32* %s_addr22, align 4, !dbg !18500
  %cmp23 = icmp eq i32 %14, %16, !dbg !18501
  br i1 %cmp23, label %if.then25, label %if.else, !dbg !18502

if.then25:                                        ; preds = %land.lhs.true17
  %17 = load i32, i32* %nb, align 4, !dbg !18503
  %inc = add i32 %17, 1, !dbg !18503
  store i32 %inc, i32* %nb, align 4, !dbg !18503
  br label %if.end74, !dbg !18505

if.else:                                          ; preds = %land.lhs.true17, %if.then9
  %18 = load %struct.IPTrack_*, %struct.IPTrack_** @iptrack_list, align 8, !dbg !18506
  %19 = load i32, i32* %c, align 4, !dbg !18506
  %idxprom26 = zext i32 %19 to i64, !dbg !18506
  %arrayidx27 = getelementptr %struct.IPTrack_, %struct.IPTrack_* %18, i64 %idxprom26, !dbg !18506
  %ip28 = getelementptr inbounds %struct.IPTrack_, %struct.IPTrack_* %arrayidx27, i32 0, i32 0, !dbg !18506
  %ss_family29 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %ip28, i32 0, i32 0, !dbg !18506
  %20 = load i16, i16* %ss_family29, align 8, !dbg !18506
  %conv30 = zext i16 %20 to i32, !dbg !18506
  %cmp31 = icmp eq i32 %conv30, 10, !dbg !18508
  br i1 %cmp31, label %land.lhs.true33, label %if.end73, !dbg !18509

land.lhs.true33:                                  ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.in6_addr** %__a, metadata !18510, metadata !DIExpression()), !dbg !18512
  %21 = load %struct.IPTrack_*, %struct.IPTrack_** @iptrack_list, align 8, !dbg !18512
  %22 = load i32, i32* %c, align 4, !dbg !18512
  %idxprom34 = zext i32 %22 to i64, !dbg !18512
  %arrayidx35 = getelementptr %struct.IPTrack_, %struct.IPTrack_* %21, i64 %idxprom34, !dbg !18512
  %ip36 = getelementptr inbounds %struct.IPTrack_, %struct.IPTrack_* %arrayidx35, i32 0, i32 0, !dbg !18512
  %call37 = call %struct.in6_addr* @storage_sin_addr6_const(%struct.sockaddr_storage* %ip36), !dbg !18512
  store %struct.in6_addr* %call37, %struct.in6_addr** %__a, align 8, !dbg !18512
  call void @llvm.dbg.declare(metadata %struct.in6_addr** %__b, metadata !18513, metadata !DIExpression()), !dbg !18512
  %23 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %ip.addr, align 8, !dbg !18512
  %call38 = call %struct.in6_addr* @storage_sin_addr6_const(%struct.sockaddr_storage* %23), !dbg !18512
  store %struct.in6_addr* %call38, %struct.in6_addr** %__b, align 8, !dbg !18512
  %24 = load %struct.in6_addr*, %struct.in6_addr** %__a, align 8, !dbg !18512
  %__in6_u = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %24, i32 0, i32 0, !dbg !18512
  %__u6_addr32 = bitcast %union.anon* %__in6_u to [4 x i32]*, !dbg !18512
  %arrayidx39 = getelementptr [4 x i32], [4 x i32]* %__u6_addr32, i64 0, i64 0, !dbg !18512
  %25 = load i32, i32* %arrayidx39, align 4, !dbg !18512
  %26 = load %struct.in6_addr*, %struct.in6_addr** %__b, align 8, !dbg !18512
  %__in6_u40 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %26, i32 0, i32 0, !dbg !18512
  %__u6_addr3241 = bitcast %union.anon* %__in6_u40 to [4 x i32]*, !dbg !18512
  %arrayidx42 = getelementptr [4 x i32], [4 x i32]* %__u6_addr3241, i64 0, i64 0, !dbg !18512
  %27 = load i32, i32* %arrayidx42, align 4, !dbg !18512
  %cmp43 = icmp eq i32 %25, %27, !dbg !18512
  br i1 %cmp43, label %land.lhs.true45, label %land.end, !dbg !18512

land.lhs.true45:                                  ; preds = %land.lhs.true33
  %28 = load %struct.in6_addr*, %struct.in6_addr** %__a, align 8, !dbg !18512
  %__in6_u46 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %28, i32 0, i32 0, !dbg !18512
  %__u6_addr3247 = bitcast %union.anon* %__in6_u46 to [4 x i32]*, !dbg !18512
  %arrayidx48 = getelementptr [4 x i32], [4 x i32]* %__u6_addr3247, i64 0, i64 1, !dbg !18512
  %29 = load i32, i32* %arrayidx48, align 4, !dbg !18512
  %30 = load %struct.in6_addr*, %struct.in6_addr** %__b, align 8, !dbg !18512
  %__in6_u49 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %30, i32 0, i32 0, !dbg !18512
  %__u6_addr3250 = bitcast %union.anon* %__in6_u49 to [4 x i32]*, !dbg !18512
  %arrayidx51 = getelementptr [4 x i32], [4 x i32]* %__u6_addr3250, i64 0, i64 1, !dbg !18512
  %31 = load i32, i32* %arrayidx51, align 4, !dbg !18512
  %cmp52 = icmp eq i32 %29, %31, !dbg !18512
  br i1 %cmp52, label %land.lhs.true54, label %land.end, !dbg !18512

land.lhs.true54:                                  ; preds = %land.lhs.true45
  %32 = load %struct.in6_addr*, %struct.in6_addr** %__a, align 8, !dbg !18512
  %__in6_u55 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %32, i32 0, i32 0, !dbg !18512
  %__u6_addr3256 = bitcast %union.anon* %__in6_u55 to [4 x i32]*, !dbg !18512
  %arrayidx57 = getelementptr [4 x i32], [4 x i32]* %__u6_addr3256, i64 0, i64 2, !dbg !18512
  %33 = load i32, i32* %arrayidx57, align 4, !dbg !18512
  %34 = load %struct.in6_addr*, %struct.in6_addr** %__b, align 8, !dbg !18512
  %__in6_u58 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %34, i32 0, i32 0, !dbg !18512
  %__u6_addr3259 = bitcast %union.anon* %__in6_u58 to [4 x i32]*, !dbg !18512
  %arrayidx60 = getelementptr [4 x i32], [4 x i32]* %__u6_addr3259, i64 0, i64 2, !dbg !18512
  %35 = load i32, i32* %arrayidx60, align 4, !dbg !18512
  %cmp61 = icmp eq i32 %33, %35, !dbg !18512
  br i1 %cmp61, label %land.rhs, label %land.end, !dbg !18512

land.rhs:                                         ; preds = %land.lhs.true54
  %36 = load %struct.in6_addr*, %struct.in6_addr** %__a, align 8, !dbg !18512
  %__in6_u63 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %36, i32 0, i32 0, !dbg !18512
  %__u6_addr3264 = bitcast %union.anon* %__in6_u63 to [4 x i32]*, !dbg !18512
  %arrayidx65 = getelementptr [4 x i32], [4 x i32]* %__u6_addr3264, i64 0, i64 3, !dbg !18512
  %37 = load i32, i32* %arrayidx65, align 4, !dbg !18512
  %38 = load %struct.in6_addr*, %struct.in6_addr** %__b, align 8, !dbg !18512
  %__in6_u66 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %38, i32 0, i32 0, !dbg !18512
  %__u6_addr3267 = bitcast %union.anon* %__in6_u66 to [4 x i32]*, !dbg !18512
  %arrayidx68 = getelementptr [4 x i32], [4 x i32]* %__u6_addr3267, i64 0, i64 3, !dbg !18512
  %39 = load i32, i32* %arrayidx68, align 4, !dbg !18512
  %cmp69 = icmp eq i32 %37, %39, !dbg !18512
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true54, %land.lhs.true45, %land.lhs.true33
  %40 = phi i1 [ false, %land.lhs.true54 ], [ false, %land.lhs.true45 ], [ false, %land.lhs.true33 ], [ %cmp69, %land.rhs ], !dbg !18514
  %land.ext = zext i1 %40 to i32, !dbg !18512
  store i32 %land.ext, i32* %tmp, align 4, !dbg !18512
  %41 = load i32, i32* %tmp, align 4, !dbg !18512
  %tobool = icmp ne i32 %41, 0, !dbg !18515
  br i1 %tobool, label %if.then71, label %if.end73, !dbg !18516

if.then71:                                        ; preds = %land.end
  %42 = load i32, i32* %nb, align 4, !dbg !18517
  %inc72 = add i32 %42, 1, !dbg !18517
  store i32 %inc72, i32* %nb, align 4, !dbg !18517
  br label %if.end73, !dbg !18519

if.end73:                                         ; preds = %if.then71, %land.end, %if.else
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.then25
  br label %if.end75, !dbg !18520

if.end75:                                         ; preds = %if.end74, %land.lhs.true, %do.body
  %43 = load i32, i32* %c, align 4, !dbg !18521
  %inc76 = add i32 %43, 1, !dbg !18521
  store i32 %inc76, i32* %c, align 4, !dbg !18521
  br label %do.cond, !dbg !18522

do.cond:                                          ; preds = %if.end75
  %44 = load i32, i32* %c, align 4, !dbg !18523
  %45 = load i32, i32* @maxusers, align 4, !dbg !18524
  %cmp77 = icmp ult i32 %44, %45, !dbg !18525
  br i1 %cmp77, label %do.body, label %do.end, !dbg !18522, !llvm.loop !18526

do.end:                                           ; preds = %do.cond
  %46 = load i32, i32* %nb, align 4, !dbg !18528
  store i32 %46, i32* %retval, align 4, !dbg !18529
  br label %return, !dbg !18529

return:                                           ; preds = %do.end, %if.then
  %47 = load i32, i32* %retval, align 4, !dbg !18530
  ret i32 %47, !dbg !18530
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @iptrack_add(%struct.sockaddr_storage* %ip, i32 %pid) #0 !dbg !18531 {
entry:
  %ip.addr = alloca %struct.sockaddr_storage*, align 8
  %pid.addr = alloca i32, align 4
  %c = alloca i32, align 4
  %ci = alloca i32, align 4
  store %struct.sockaddr_storage* %ip, %struct.sockaddr_storage** %ip.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage** %ip.addr, metadata !18534, metadata !DIExpression()), !dbg !18535
  store i32 %pid, i32* %pid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pid.addr, metadata !18536, metadata !DIExpression()), !dbg !18537
  call void @llvm.dbg.declare(metadata i32* %c, metadata !18538, metadata !DIExpression()), !dbg !18539
  store i32 0, i32* %c, align 4, !dbg !18539
  %0 = load %struct.IPTrack_*, %struct.IPTrack_** @iptrack_list, align 8, !dbg !18540
  %cmp = icmp eq %struct.IPTrack_* %0, null, !dbg !18542
  br i1 %cmp, label %if.then, label %if.end7, !dbg !18543

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %ci, metadata !18544, metadata !DIExpression()), !dbg !18546
  store i32 0, i32* %ci, align 4, !dbg !18546
  %1 = load i32, i32* @maxusers, align 4, !dbg !18547
  %conv = zext i32 %1 to i64, !dbg !18547
  %mul = mul i64 %conv, 136, !dbg !18549
  %call = call noalias i8* @malloc(i64 %mul) #7, !dbg !18550
  %2 = bitcast i8* %call to %struct.IPTrack_*, !dbg !18550
  store %struct.IPTrack_* %2, %struct.IPTrack_** @iptrack_list, align 8, !dbg !18551
  %cmp1 = icmp eq %struct.IPTrack_* %2, null, !dbg !18552
  br i1 %cmp1, label %if.then3, label %if.end, !dbg !18553

if.then3:                                         ; preds = %if.then
  br label %return, !dbg !18554

if.end:                                           ; preds = %if.then
  br label %do.body, !dbg !18556

do.body:                                          ; preds = %do.cond, %if.end
  %3 = load %struct.IPTrack_*, %struct.IPTrack_** @iptrack_list, align 8, !dbg !18557
  %4 = load i32, i32* %ci, align 4, !dbg !18559
  %idxprom = zext i32 %4 to i64, !dbg !18557
  %arrayidx = getelementptr %struct.IPTrack_, %struct.IPTrack_* %3, i64 %idxprom, !dbg !18557
  %pid4 = getelementptr inbounds %struct.IPTrack_, %struct.IPTrack_* %arrayidx, i32 0, i32 1, !dbg !18560
  store i32 0, i32* %pid4, align 8, !dbg !18561
  %5 = load i32, i32* %ci, align 4, !dbg !18562
  %inc = add i32 %5, 1, !dbg !18562
  store i32 %inc, i32* %ci, align 4, !dbg !18562
  br label %do.cond, !dbg !18563

do.cond:                                          ; preds = %do.body
  %6 = load i32, i32* %ci, align 4, !dbg !18564
  %7 = load i32, i32* @maxusers, align 4, !dbg !18565
  %cmp5 = icmp ult i32 %6, %7, !dbg !18566
  br i1 %cmp5, label %do.body, label %do.end, !dbg !18563, !llvm.loop !18567

do.end:                                           ; preds = %do.cond
  br label %if.end7, !dbg !18569

if.end7:                                          ; preds = %do.end, %entry
  br label %do.body8, !dbg !18570

do.body8:                                         ; preds = %do.cond23, %if.end7
  %8 = load %struct.IPTrack_*, %struct.IPTrack_** @iptrack_list, align 8, !dbg !18571
  %9 = load i32, i32* %c, align 4, !dbg !18574
  %idxprom9 = zext i32 %9 to i64, !dbg !18571
  %arrayidx10 = getelementptr %struct.IPTrack_, %struct.IPTrack_* %8, i64 %idxprom9, !dbg !18571
  %pid11 = getelementptr inbounds %struct.IPTrack_, %struct.IPTrack_* %arrayidx10, i32 0, i32 1, !dbg !18575
  %10 = load i32, i32* %pid11, align 8, !dbg !18575
  %cmp12 = icmp eq i32 %10, 0, !dbg !18576
  br i1 %cmp12, label %if.then14, label %if.end21, !dbg !18577

if.then14:                                        ; preds = %do.body8
  br label %force, !dbg !18578

force:                                            ; preds = %do.end26, %if.then14
  call void @llvm.dbg.label(metadata !18579), !dbg !18581
  %11 = load i32, i32* %pid.addr, align 4, !dbg !18582
  %12 = load %struct.IPTrack_*, %struct.IPTrack_** @iptrack_list, align 8, !dbg !18583
  %13 = load i32, i32* %c, align 4, !dbg !18584
  %idxprom15 = zext i32 %13 to i64, !dbg !18583
  %arrayidx16 = getelementptr %struct.IPTrack_, %struct.IPTrack_* %12, i64 %idxprom15, !dbg !18583
  %pid17 = getelementptr inbounds %struct.IPTrack_, %struct.IPTrack_* %arrayidx16, i32 0, i32 1, !dbg !18585
  store i32 %11, i32* %pid17, align 8, !dbg !18586
  %14 = load %struct.IPTrack_*, %struct.IPTrack_** @iptrack_list, align 8, !dbg !18587
  %15 = load i32, i32* %c, align 4, !dbg !18588
  %idxprom18 = zext i32 %15 to i64, !dbg !18587
  %arrayidx19 = getelementptr %struct.IPTrack_, %struct.IPTrack_* %14, i64 %idxprom18, !dbg !18587
  %ip20 = getelementptr inbounds %struct.IPTrack_, %struct.IPTrack_* %arrayidx19, i32 0, i32 0, !dbg !18589
  %16 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %ip.addr, align 8, !dbg !18590
  %17 = bitcast %struct.sockaddr_storage* %ip20 to i8*, !dbg !18591
  %18 = bitcast %struct.sockaddr_storage* %16 to i8*, !dbg !18591
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 128, i1 false), !dbg !18591
  br label %return, !dbg !18592

if.end21:                                         ; preds = %do.body8
  %19 = load i32, i32* %c, align 4, !dbg !18593
  %inc22 = add i32 %19, 1, !dbg !18593
  store i32 %inc22, i32* %c, align 4, !dbg !18593
  br label %do.cond23, !dbg !18594

do.cond23:                                        ; preds = %if.end21
  %20 = load i32, i32* %c, align 4, !dbg !18595
  %21 = load i32, i32* @maxusers, align 4, !dbg !18596
  %cmp24 = icmp ult i32 %20, %21, !dbg !18597
  br i1 %cmp24, label %do.body8, label %do.end26, !dbg !18594, !llvm.loop !18598

do.end26:                                         ; preds = %do.cond23
  %22 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %ip.addr, align 8, !dbg !18600
  %call27 = call i32 @iptrack_find_ip_or_shift(%struct.sockaddr_storage* %22), !dbg !18601
  store i32 %call27, i32* %c, align 4, !dbg !18602
  br label %force, !dbg !18603

return:                                           ; preds = %force, %if.then3
  ret void, !dbg !18604
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i32 @iptrack_find_ip_or_shift(%struct.sockaddr_storage* %ip) #0 !dbg !18605 {
entry:
  %retval = alloca i32, align 4
  %ip.addr = alloca %struct.sockaddr_storage*, align 8
  %c = alloca i32, align 4
  %__a = alloca %struct.in6_addr*, align 8
  %__b = alloca %struct.in6_addr*, align 8
  %tmp = alloca i32, align 4
  store %struct.sockaddr_storage* %ip, %struct.sockaddr_storage** %ip.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage** %ip.addr, metadata !18606, metadata !DIExpression()), !dbg !18607
  call void @llvm.dbg.declare(metadata i32* %c, metadata !18608, metadata !DIExpression()), !dbg !18609
  store i32 0, i32* %c, align 4, !dbg !18609
  br label %do.body, !dbg !18610

do.body:                                          ; preds = %do.cond, %entry
  %0 = load %struct.IPTrack_*, %struct.IPTrack_** @iptrack_list, align 8, !dbg !18611
  %1 = load i32, i32* %c, align 4, !dbg !18614
  %idxprom = zext i32 %1 to i64, !dbg !18611
  %arrayidx = getelementptr %struct.IPTrack_, %struct.IPTrack_* %0, i64 %idxprom, !dbg !18611
  %pid = getelementptr inbounds %struct.IPTrack_, %struct.IPTrack_* %arrayidx, i32 0, i32 1, !dbg !18615
  %2 = load i32, i32* %pid, align 8, !dbg !18615
  %cmp = icmp ne i32 %2, 0, !dbg !18616
  br i1 %cmp, label %land.lhs.true, label %if.end71, !dbg !18617

land.lhs.true:                                    ; preds = %do.body
  %3 = load %struct.IPTrack_*, %struct.IPTrack_** @iptrack_list, align 8, !dbg !18618
  %4 = load i32, i32* %c, align 4, !dbg !18618
  %idxprom1 = zext i32 %4 to i64, !dbg !18618
  %arrayidx2 = getelementptr %struct.IPTrack_, %struct.IPTrack_* %3, i64 %idxprom1, !dbg !18618
  %ip3 = getelementptr inbounds %struct.IPTrack_, %struct.IPTrack_* %arrayidx2, i32 0, i32 0, !dbg !18618
  %ss_family = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %ip3, i32 0, i32 0, !dbg !18618
  %5 = load i16, i16* %ss_family, align 8, !dbg !18618
  %conv = zext i16 %5 to i32, !dbg !18618
  %6 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %ip.addr, align 8, !dbg !18619
  %ss_family4 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %6, i32 0, i32 0, !dbg !18619
  %7 = load i16, i16* %ss_family4, align 8, !dbg !18619
  %conv5 = zext i16 %7 to i32, !dbg !18619
  %cmp6 = icmp ne i32 %conv, %conv5, !dbg !18620
  br i1 %cmp6, label %if.then, label %if.end71, !dbg !18621

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.IPTrack_*, %struct.IPTrack_** @iptrack_list, align 8, !dbg !18622
  %9 = load i32, i32* %c, align 4, !dbg !18622
  %idxprom8 = zext i32 %9 to i64, !dbg !18622
  %arrayidx9 = getelementptr %struct.IPTrack_, %struct.IPTrack_* %8, i64 %idxprom8, !dbg !18622
  %ip10 = getelementptr inbounds %struct.IPTrack_, %struct.IPTrack_* %arrayidx9, i32 0, i32 0, !dbg !18622
  %ss_family11 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %ip10, i32 0, i32 0, !dbg !18622
  %10 = load i16, i16* %ss_family11, align 8, !dbg !18622
  %conv12 = zext i16 %10 to i32, !dbg !18622
  %cmp13 = icmp eq i32 %conv12, 2, !dbg !18625
  br i1 %cmp13, label %land.lhs.true15, label %if.else, !dbg !18626

land.lhs.true15:                                  ; preds = %if.then
  %11 = load %struct.IPTrack_*, %struct.IPTrack_** @iptrack_list, align 8, !dbg !18627
  %12 = load i32, i32* %c, align 4, !dbg !18627
  %idxprom16 = zext i32 %12 to i64, !dbg !18627
  %arrayidx17 = getelementptr %struct.IPTrack_, %struct.IPTrack_* %11, i64 %idxprom16, !dbg !18627
  %ip18 = getelementptr inbounds %struct.IPTrack_, %struct.IPTrack_* %arrayidx17, i32 0, i32 0, !dbg !18627
  %call = call %struct.in_addr* @storage_sin_addr_const(%struct.sockaddr_storage* %ip18), !dbg !18627
  %s_addr = getelementptr inbounds %struct.in_addr, %struct.in_addr* %call, i32 0, i32 0, !dbg !18627
  %13 = load i32, i32* %s_addr, align 4, !dbg !18627
  %14 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %ip.addr, align 8, !dbg !18628
  %call19 = call %struct.in_addr* @storage_sin_addr_const(%struct.sockaddr_storage* %14), !dbg !18628
  %s_addr20 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %call19, i32 0, i32 0, !dbg !18628
  %15 = load i32, i32* %s_addr20, align 4, !dbg !18628
  %cmp21 = icmp eq i32 %13, %15, !dbg !18629
  br i1 %cmp21, label %if.then23, label %if.else, !dbg !18630

if.then23:                                        ; preds = %land.lhs.true15
  %16 = load i32, i32* %c, align 4, !dbg !18631
  store i32 %16, i32* %retval, align 4, !dbg !18633
  br label %return, !dbg !18633

if.else:                                          ; preds = %land.lhs.true15, %if.then
  %17 = load %struct.IPTrack_*, %struct.IPTrack_** @iptrack_list, align 8, !dbg !18634
  %18 = load i32, i32* %c, align 4, !dbg !18634
  %idxprom24 = zext i32 %18 to i64, !dbg !18634
  %arrayidx25 = getelementptr %struct.IPTrack_, %struct.IPTrack_* %17, i64 %idxprom24, !dbg !18634
  %ip26 = getelementptr inbounds %struct.IPTrack_, %struct.IPTrack_* %arrayidx25, i32 0, i32 0, !dbg !18634
  %ss_family27 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %ip26, i32 0, i32 0, !dbg !18634
  %19 = load i16, i16* %ss_family27, align 8, !dbg !18634
  %conv28 = zext i16 %19 to i32, !dbg !18634
  %cmp29 = icmp eq i32 %conv28, 10, !dbg !18636
  br i1 %cmp29, label %land.lhs.true31, label %if.end, !dbg !18637

land.lhs.true31:                                  ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.in6_addr** %__a, metadata !18638, metadata !DIExpression()), !dbg !18640
  %20 = load %struct.IPTrack_*, %struct.IPTrack_** @iptrack_list, align 8, !dbg !18640
  %21 = load i32, i32* %c, align 4, !dbg !18640
  %idxprom32 = zext i32 %21 to i64, !dbg !18640
  %arrayidx33 = getelementptr %struct.IPTrack_, %struct.IPTrack_* %20, i64 %idxprom32, !dbg !18640
  %ip34 = getelementptr inbounds %struct.IPTrack_, %struct.IPTrack_* %arrayidx33, i32 0, i32 0, !dbg !18640
  %call35 = call %struct.in6_addr* @storage_sin_addr6_const(%struct.sockaddr_storage* %ip34), !dbg !18640
  store %struct.in6_addr* %call35, %struct.in6_addr** %__a, align 8, !dbg !18640
  call void @llvm.dbg.declare(metadata %struct.in6_addr** %__b, metadata !18641, metadata !DIExpression()), !dbg !18640
  %22 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %ip.addr, align 8, !dbg !18640
  %call36 = call %struct.in6_addr* @storage_sin_addr6_const(%struct.sockaddr_storage* %22), !dbg !18640
  store %struct.in6_addr* %call36, %struct.in6_addr** %__b, align 8, !dbg !18640
  %23 = load %struct.in6_addr*, %struct.in6_addr** %__a, align 8, !dbg !18640
  %__in6_u = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %23, i32 0, i32 0, !dbg !18640
  %__u6_addr32 = bitcast %union.anon* %__in6_u to [4 x i32]*, !dbg !18640
  %arrayidx37 = getelementptr [4 x i32], [4 x i32]* %__u6_addr32, i64 0, i64 0, !dbg !18640
  %24 = load i32, i32* %arrayidx37, align 4, !dbg !18640
  %25 = load %struct.in6_addr*, %struct.in6_addr** %__b, align 8, !dbg !18640
  %__in6_u38 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %25, i32 0, i32 0, !dbg !18640
  %__u6_addr3239 = bitcast %union.anon* %__in6_u38 to [4 x i32]*, !dbg !18640
  %arrayidx40 = getelementptr [4 x i32], [4 x i32]* %__u6_addr3239, i64 0, i64 0, !dbg !18640
  %26 = load i32, i32* %arrayidx40, align 4, !dbg !18640
  %cmp41 = icmp eq i32 %24, %26, !dbg !18640
  br i1 %cmp41, label %land.lhs.true43, label %land.end, !dbg !18640

land.lhs.true43:                                  ; preds = %land.lhs.true31
  %27 = load %struct.in6_addr*, %struct.in6_addr** %__a, align 8, !dbg !18640
  %__in6_u44 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %27, i32 0, i32 0, !dbg !18640
  %__u6_addr3245 = bitcast %union.anon* %__in6_u44 to [4 x i32]*, !dbg !18640
  %arrayidx46 = getelementptr [4 x i32], [4 x i32]* %__u6_addr3245, i64 0, i64 1, !dbg !18640
  %28 = load i32, i32* %arrayidx46, align 4, !dbg !18640
  %29 = load %struct.in6_addr*, %struct.in6_addr** %__b, align 8, !dbg !18640
  %__in6_u47 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %29, i32 0, i32 0, !dbg !18640
  %__u6_addr3248 = bitcast %union.anon* %__in6_u47 to [4 x i32]*, !dbg !18640
  %arrayidx49 = getelementptr [4 x i32], [4 x i32]* %__u6_addr3248, i64 0, i64 1, !dbg !18640
  %30 = load i32, i32* %arrayidx49, align 4, !dbg !18640
  %cmp50 = icmp eq i32 %28, %30, !dbg !18640
  br i1 %cmp50, label %land.lhs.true52, label %land.end, !dbg !18640

land.lhs.true52:                                  ; preds = %land.lhs.true43
  %31 = load %struct.in6_addr*, %struct.in6_addr** %__a, align 8, !dbg !18640
  %__in6_u53 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %31, i32 0, i32 0, !dbg !18640
  %__u6_addr3254 = bitcast %union.anon* %__in6_u53 to [4 x i32]*, !dbg !18640
  %arrayidx55 = getelementptr [4 x i32], [4 x i32]* %__u6_addr3254, i64 0, i64 2, !dbg !18640
  %32 = load i32, i32* %arrayidx55, align 4, !dbg !18640
  %33 = load %struct.in6_addr*, %struct.in6_addr** %__b, align 8, !dbg !18640
  %__in6_u56 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %33, i32 0, i32 0, !dbg !18640
  %__u6_addr3257 = bitcast %union.anon* %__in6_u56 to [4 x i32]*, !dbg !18640
  %arrayidx58 = getelementptr [4 x i32], [4 x i32]* %__u6_addr3257, i64 0, i64 2, !dbg !18640
  %34 = load i32, i32* %arrayidx58, align 4, !dbg !18640
  %cmp59 = icmp eq i32 %32, %34, !dbg !18640
  br i1 %cmp59, label %land.rhs, label %land.end, !dbg !18640

land.rhs:                                         ; preds = %land.lhs.true52
  %35 = load %struct.in6_addr*, %struct.in6_addr** %__a, align 8, !dbg !18640
  %__in6_u61 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %35, i32 0, i32 0, !dbg !18640
  %__u6_addr3262 = bitcast %union.anon* %__in6_u61 to [4 x i32]*, !dbg !18640
  %arrayidx63 = getelementptr [4 x i32], [4 x i32]* %__u6_addr3262, i64 0, i64 3, !dbg !18640
  %36 = load i32, i32* %arrayidx63, align 4, !dbg !18640
  %37 = load %struct.in6_addr*, %struct.in6_addr** %__b, align 8, !dbg !18640
  %__in6_u64 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %37, i32 0, i32 0, !dbg !18640
  %__u6_addr3265 = bitcast %union.anon* %__in6_u64 to [4 x i32]*, !dbg !18640
  %arrayidx66 = getelementptr [4 x i32], [4 x i32]* %__u6_addr3265, i64 0, i64 3, !dbg !18640
  %38 = load i32, i32* %arrayidx66, align 4, !dbg !18640
  %cmp67 = icmp eq i32 %36, %38, !dbg !18640
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true52, %land.lhs.true43, %land.lhs.true31
  %39 = phi i1 [ false, %land.lhs.true52 ], [ false, %land.lhs.true43 ], [ false, %land.lhs.true31 ], [ %cmp67, %land.rhs ], !dbg !18642
  %land.ext = zext i1 %39 to i32, !dbg !18640
  store i32 %land.ext, i32* %tmp, align 4, !dbg !18640
  %40 = load i32, i32* %tmp, align 4, !dbg !18640
  %tobool = icmp ne i32 %40, 0, !dbg !18643
  br i1 %tobool, label %if.then69, label %if.end, !dbg !18644

if.then69:                                        ; preds = %land.end
  %41 = load i32, i32* %c, align 4, !dbg !18645
  store i32 %41, i32* %retval, align 4, !dbg !18647
  br label %return, !dbg !18647

if.end:                                           ; preds = %land.end, %if.else
  br label %if.end70

if.end70:                                         ; preds = %if.end
  br label %if.end71, !dbg !18648

if.end71:                                         ; preds = %if.end70, %land.lhs.true, %do.body
  %42 = load i32, i32* %c, align 4, !dbg !18649
  %inc = add i32 %42, 1, !dbg !18649
  store i32 %inc, i32* %c, align 4, !dbg !18649
  br label %do.cond, !dbg !18650

do.cond:                                          ; preds = %if.end71
  %43 = load i32, i32* %c, align 4, !dbg !18651
  %44 = load i32, i32* @maxusers, align 4, !dbg !18652
  %cmp72 = icmp ult i32 %43, %44, !dbg !18653
  br i1 %cmp72, label %do.body, label %do.end, !dbg !18650, !llvm.loop !18654

do.end:                                           ; preds = %do.cond
  %45 = load i32, i32* %c, align 4, !dbg !18656
  %dec = add i32 %45, -1, !dbg !18656
  store i32 %dec, i32* %c, align 4, !dbg !18656
  %46 = load i32, i32* %c, align 4, !dbg !18657
  %cmp74 = icmp ne i32 %46, 0, !dbg !18659
  br i1 %cmp74, label %if.then76, label %if.end80, !dbg !18660

if.then76:                                        ; preds = %do.end
  %47 = load %struct.IPTrack_*, %struct.IPTrack_** @iptrack_list, align 8, !dbg !18661
  %arrayidx77 = getelementptr %struct.IPTrack_, %struct.IPTrack_* %47, i64 0, !dbg !18661
  %48 = bitcast %struct.IPTrack_* %arrayidx77 to i8*, !dbg !18663
  %49 = load %struct.IPTrack_*, %struct.IPTrack_** @iptrack_list, align 8, !dbg !18664
  %arrayidx78 = getelementptr %struct.IPTrack_, %struct.IPTrack_* %49, i64 1, !dbg !18664
  %50 = bitcast %struct.IPTrack_* %arrayidx78 to i8*, !dbg !18663
  %51 = load i32, i32* %c, align 4, !dbg !18665
  %conv79 = zext i32 %51 to i64, !dbg !18665
  %mul = mul i64 136, %conv79, !dbg !18666
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %50, i64 %mul, i1 false), !dbg !18663
  br label %if.end80, !dbg !18667

if.end80:                                         ; preds = %if.then76, %do.end
  %52 = load i32, i32* %c, align 4, !dbg !18668
  store i32 %52, i32* %retval, align 4, !dbg !18669
  br label %return, !dbg !18669

return:                                           ; preds = %if.end80, %if.then69, %if.then23
  %53 = load i32, i32* %retval, align 4, !dbg !18670
  ret i32 %53, !dbg !18670
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local i32 @sfgets() #0 !dbg !18671 {
entry:
  %retval = alloca i32, align 4
  %pfd = alloca %struct.pollfd, align 4
  %pollret = alloca i32, align 4
  %readnb = alloca i64, align 8
  %seen_r = alloca i8, align 1
  call void @llvm.dbg.declare(metadata %struct.pollfd* %pfd, metadata !18672, metadata !DIExpression()), !dbg !18678
  call void @llvm.dbg.declare(metadata i32* %pollret, metadata !18679, metadata !DIExpression()), !dbg !18680
  call void @llvm.dbg.declare(metadata i64* %readnb, metadata !18681, metadata !DIExpression()), !dbg !18682
  call void @llvm.dbg.declare(metadata i8* %seen_r, metadata !18683, metadata !DIExpression()), !dbg !18684
  store i8 0, i8* %seen_r, align 1, !dbg !18684
  %0 = load i64, i64* @scanned, align 8, !dbg !18685
  %cmp = icmp ugt i64 %0, 0, !dbg !18687
  br i1 %cmp, label %if.then, label %if.end, !dbg !18688

if.then:                                          ; preds = %entry
  %1 = load i64, i64* @scanned, align 8, !dbg !18689
  %2 = load i64, i64* @readnbd, align 8, !dbg !18691
  %sub = sub i64 %2, %1, !dbg !18691
  store i64 %sub, i64* @readnbd, align 8, !dbg !18691
  %3 = load i64, i64* @scanned, align 8, !dbg !18692
  %add.ptr = getelementptr i8, i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i64 %3, !dbg !18693
  %4 = load i64, i64* @readnbd, align 8, !dbg !18694
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 16 getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* align 1 %add.ptr, i64 %4, i1 false), !dbg !18695
  store i64 0, i64* @scanned, align 8, !dbg !18696
  br label %if.end, !dbg !18697

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* @clientfd, align 4, !dbg !18698
  %fd = getelementptr inbounds %struct.pollfd, %struct.pollfd* %pfd, i32 0, i32 0, !dbg !18699
  store i32 %5, i32* %fd, align 4, !dbg !18700
  %events = getelementptr inbounds %struct.pollfd, %struct.pollfd* %pfd, i32 0, i32 1, !dbg !18701
  store i16 27, i16* %events, align 4, !dbg !18702
  br label %while.cond, !dbg !18703

while.cond:                                       ; preds = %if.end90, %if.then28, %if.end
  %6 = load i64, i64* @scanned, align 8, !dbg !18704
  %7 = load i64, i64* @cmdsize, align 8, !dbg !18705
  %cmp1 = icmp ult i64 %6, %7, !dbg !18706
  br i1 %cmp1, label %while.body, label %while.end92, !dbg !18703

while.body:                                       ; preds = %while.cond
  %8 = load i64, i64* @scanned, align 8, !dbg !18707
  %9 = load i64, i64* @readnbd, align 8, !dbg !18710
  %cmp2 = icmp uge i64 %8, %9, !dbg !18711
  br i1 %cmp2, label %if.then3, label %if.end55, !dbg !18712

if.then3:                                         ; preds = %while.body
  %revents = getelementptr inbounds %struct.pollfd, %struct.pollfd* %pfd, i32 0, i32 2, !dbg !18713
  store i16 0, i16* %revents, align 2, !dbg !18715
  br label %while.cond4, !dbg !18716

while.cond4:                                      ; preds = %while.body10, %if.then3
  %10 = load i64, i64* @idletime, align 8, !dbg !18717
  %mul = mul i64 %10, 1000, !dbg !18718
  %conv = trunc i64 %mul to i32, !dbg !18717
  %call = call i32 @poll(%struct.pollfd* %pfd, i64 1, i32 %conv), !dbg !18719
  store i32 %call, i32* %pollret, align 4, !dbg !18720
  %cmp5 = icmp slt i32 %call, 0, !dbg !18721
  br i1 %cmp5, label %land.rhs, label %land.end, !dbg !18722

land.rhs:                                         ; preds = %while.cond4
  %call7 = call i32* @__errno_location() #14, !dbg !18723
  %11 = load i32, i32* %call7, align 4, !dbg !18723
  %cmp8 = icmp eq i32 %11, 4, !dbg !18724
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond4
  %12 = phi i1 [ false, %while.cond4 ], [ %cmp8, %land.rhs ], !dbg !18725
  br i1 %12, label %while.body10, label %while.end, !dbg !18716

while.body10:                                     ; preds = %land.end
  br label %while.cond4, !dbg !18716, !llvm.loop !18726

while.end:                                        ; preds = %land.end
  %13 = load i32, i32* %pollret, align 4, !dbg !18728
  %cmp11 = icmp eq i32 %13, 0, !dbg !18730
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !18731

if.then13:                                        ; preds = %while.end
  store i32 -1, i32* %retval, align 4, !dbg !18732
  br label %return, !dbg !18732

if.end14:                                         ; preds = %while.end
  %14 = load i32, i32* %pollret, align 4, !dbg !18734
  %cmp15 = icmp sle i32 %14, 0, !dbg !18736
  br i1 %cmp15, label %if.then21, label %lor.lhs.false, !dbg !18737

lor.lhs.false:                                    ; preds = %if.end14
  %revents17 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %pfd, i32 0, i32 2, !dbg !18738
  %15 = load i16, i16* %revents17, align 2, !dbg !18738
  %conv18 = sext i16 %15 to i32, !dbg !18739
  %and = and i32 %conv18, 56, !dbg !18740
  %cmp19 = icmp ne i32 %and, 0, !dbg !18741
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !18742

if.then21:                                        ; preds = %lor.lhs.false, %if.end14
  store i32 -2, i32* %retval, align 4, !dbg !18743
  br label %return, !dbg !18743

if.end22:                                         ; preds = %lor.lhs.false
  %revents23 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %pfd, i32 0, i32 2, !dbg !18745
  %16 = load i16, i16* %revents23, align 2, !dbg !18745
  %conv24 = sext i16 %16 to i32, !dbg !18747
  %and25 = and i32 %conv24, 3, !dbg !18748
  %cmp26 = icmp eq i32 %and25, 0, !dbg !18749
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !18750

if.then28:                                        ; preds = %if.end22
  br label %while.cond, !dbg !18751, !llvm.loop !18753

if.end29:                                         ; preds = %if.end22
  %17 = load i64, i64* @readnbd, align 8, !dbg !18755
  %18 = load i64, i64* @cmdsize, align 8, !dbg !18757
  %cmp30 = icmp uge i64 %17, %18, !dbg !18758
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !18759

if.then32:                                        ; preds = %if.end29
  br label %while.end92, !dbg !18760

if.end33:                                         ; preds = %if.end29
  br label %while.cond34, !dbg !18762

while.cond34:                                     ; preds = %while.body45, %if.end33
  %19 = load i32, i32* @clientfd, align 4, !dbg !18764
  %20 = load i64, i64* @readnbd, align 8, !dbg !18765
  %add.ptr35 = getelementptr i8, i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i64 %20, !dbg !18766
  %21 = load i64, i64* @cmdsize, align 8, !dbg !18767
  %22 = load i64, i64* @readnbd, align 8, !dbg !18768
  %sub36 = sub i64 %21, %22, !dbg !18769
  %call37 = call i64 @read(i32 %19, i8* %add.ptr35, i64 %sub36), !dbg !18770
  store i64 %call37, i64* %readnb, align 8, !dbg !18771
  %cmp38 = icmp slt i64 %call37, 0, !dbg !18772
  br i1 %cmp38, label %land.rhs40, label %land.end44, !dbg !18773

land.rhs40:                                       ; preds = %while.cond34
  %call41 = call i32* @__errno_location() #14, !dbg !18774
  %23 = load i32, i32* %call41, align 4, !dbg !18774
  %cmp42 = icmp eq i32 %23, 4, !dbg !18775
  br label %land.end44

land.end44:                                       ; preds = %land.rhs40, %while.cond34
  %24 = phi i1 [ false, %while.cond34 ], [ %cmp42, %land.rhs40 ], !dbg !18776
  br i1 %24, label %while.body45, label %while.end46, !dbg !18762

while.body45:                                     ; preds = %land.end44
  br label %while.cond34, !dbg !18762, !llvm.loop !18777

while.end46:                                      ; preds = %land.end44
  %25 = load i64, i64* %readnb, align 8, !dbg !18779
  %cmp47 = icmp sle i64 %25, 0, !dbg !18781
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !18782

if.then49:                                        ; preds = %while.end46
  store i32 -2, i32* %retval, align 4, !dbg !18783
  br label %return, !dbg !18783

if.end50:                                         ; preds = %while.end46
  %26 = load i64, i64* %readnb, align 8, !dbg !18785
  %27 = load i64, i64* @readnbd, align 8, !dbg !18786
  %add = add i64 %27, %26, !dbg !18786
  store i64 %add, i64* @readnbd, align 8, !dbg !18786
  %28 = load i64, i64* @readnbd, align 8, !dbg !18787
  %29 = load i64, i64* @cmdsize, align 8, !dbg !18789
  %cmp51 = icmp ugt i64 %28, %29, !dbg !18790
  br i1 %cmp51, label %if.then53, label %if.end54, !dbg !18791

if.then53:                                        ; preds = %if.end50
  store i32 -2, i32* %retval, align 4, !dbg !18792
  br label %return, !dbg !18792

if.end54:                                         ; preds = %if.end50
  br label %if.end55, !dbg !18794

if.end55:                                         ; preds = %if.end54, %while.body
  %30 = load i64, i64* @scanned, align 8, !dbg !18795
  %arrayidx = getelementptr [4128 x i8], [4128 x i8]* @cmd, i64 0, i64 %30, !dbg !18797
  %31 = load i8, i8* %arrayidx, align 1, !dbg !18797
  %conv56 = sext i8 %31 to i32, !dbg !18797
  %cmp57 = icmp eq i32 %conv56, 10, !dbg !18798
  br i1 %cmp57, label %if.then59, label %if.end72, !dbg !18799

if.then59:                                        ; preds = %if.end55
  %32 = load i8, i8* %seen_r, align 1, !dbg !18800
  %conv60 = sext i8 %32 to i32, !dbg !18800
  %cmp61 = icmp ne i32 %conv60, 0, !dbg !18803
  br i1 %cmp61, label %if.then63, label %if.else, !dbg !18804

if.then63:                                        ; preds = %if.then59
  %33 = load i64, i64* @scanned, align 8, !dbg !18805
  %sub64 = sub i64 %33, 1, !dbg !18807
  %arrayidx65 = getelementptr [4128 x i8], [4128 x i8]* @cmd, i64 0, i64 %sub64, !dbg !18808
  store i8 0, i8* %arrayidx65, align 1, !dbg !18809
  br label %if.end67, !dbg !18810

if.else:                                          ; preds = %if.then59
  %34 = load i64, i64* @scanned, align 8, !dbg !18811
  %arrayidx66 = getelementptr [4128 x i8], [4128 x i8]* @cmd, i64 0, i64 %34, !dbg !18813
  store i8 0, i8* %arrayidx66, align 1, !dbg !18814
  br label %if.end67

if.end67:                                         ; preds = %if.else, %if.then63
  %35 = load i64, i64* @scanned, align 8, !dbg !18815
  %inc = add i64 %35, 1, !dbg !18815
  store i64 %inc, i64* @scanned, align 8, !dbg !18815
  %36 = load i64, i64* @readnbd, align 8, !dbg !18817
  %cmp68 = icmp uge i64 %inc, %36, !dbg !18818
  br i1 %cmp68, label %if.then70, label %if.end71, !dbg !18819

if.then70:                                        ; preds = %if.end67
  store i64 0, i64* @readnbd, align 8, !dbg !18820
  store i64 0, i64* @scanned, align 8, !dbg !18822
  br label %if.end71, !dbg !18823

if.end71:                                         ; preds = %if.then70, %if.end67
  store i32 0, i32* %retval, align 4, !dbg !18824
  br label %return, !dbg !18824

if.end72:                                         ; preds = %if.end55
  store i8 0, i8* %seen_r, align 1, !dbg !18825
  %37 = load i64, i64* @scanned, align 8, !dbg !18826
  %arrayidx73 = getelementptr [4128 x i8], [4128 x i8]* @cmd, i64 0, i64 %37, !dbg !18826
  %38 = load i8, i8* %arrayidx73, align 1, !dbg !18826
  %conv74 = sext i8 %38 to i32, !dbg !18826
  %cmp75 = icmp eq i32 %conv74, 127, !dbg !18826
  br i1 %cmp75, label %if.then82, label %lor.lhs.false77, !dbg !18826

lor.lhs.false77:                                  ; preds = %if.end72
  %39 = load i64, i64* @scanned, align 8, !dbg !18826
  %arrayidx78 = getelementptr [4128 x i8], [4128 x i8]* @cmd, i64 0, i64 %39, !dbg !18826
  %40 = load i8, i8* %arrayidx78, align 1, !dbg !18826
  %conv79 = zext i8 %40 to i32, !dbg !18826
  %cmp80 = icmp ult i32 %conv79, 32, !dbg !18826
  br i1 %cmp80, label %if.then82, label %if.end90, !dbg !18828

if.then82:                                        ; preds = %lor.lhs.false77, %if.end72
  %41 = load i64, i64* @scanned, align 8, !dbg !18829
  %arrayidx83 = getelementptr [4128 x i8], [4128 x i8]* @cmd, i64 0, i64 %41, !dbg !18832
  %42 = load i8, i8* %arrayidx83, align 1, !dbg !18832
  %conv84 = sext i8 %42 to i32, !dbg !18832
  %cmp85 = icmp eq i32 %conv84, 13, !dbg !18833
  br i1 %cmp85, label %if.then87, label %if.end88, !dbg !18834

if.then87:                                        ; preds = %if.then82
  store i8 1, i8* %seen_r, align 1, !dbg !18835
  br label %if.end88, !dbg !18837

if.end88:                                         ; preds = %if.then87, %if.then82
  %43 = load i64, i64* @scanned, align 8, !dbg !18838
  %arrayidx89 = getelementptr [4128 x i8], [4128 x i8]* @cmd, i64 0, i64 %43, !dbg !18839
  store i8 95, i8* %arrayidx89, align 1, !dbg !18840
  br label %if.end90, !dbg !18841

if.end90:                                         ; preds = %if.end88, %lor.lhs.false77
  %44 = load i64, i64* @scanned, align 8, !dbg !18842
  %inc91 = add i64 %44, 1, !dbg !18842
  store i64 %inc91, i64* @scanned, align 8, !dbg !18842
  br label %while.cond, !dbg !18703, !llvm.loop !18753

while.end92:                                      ; preds = %if.then32, %while.cond
  call void (i32, i32, i8*, ...) @die(i32 421, i32 4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.574, i64 0, i64 0)) #11, !dbg !18843
  unreachable, !dbg !18843

return:                                           ; preds = %if.end71, %if.then53, %if.then49, %if.then21, %if.then13
  %45 = load i32, i32* %retval, align 4, !dbg !18844
  ret i32 %45, !dbg !18844
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define dso_local void @parser() #0 !dbg !18845 {
entry:
  %arg = alloca i8*, align 8
  %sitearg = alloca i8*, align 8
  %n = alloca i64, align 8
  %st = alloca %struct.stat, align 8
  %size = alloca i64, align 8
  %i = alloca i64, align 8
  %sitearg2 = alloca i8*, align 8
  %mode = alloca i32, align 4
  %sitearg2532 = alloca i8*, align 8
  %alias = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %arg, metadata !18846, metadata !DIExpression()), !dbg !18847
  call void @llvm.dbg.declare(metadata i8** %sitearg, metadata !18848, metadata !DIExpression()), !dbg !18849
  call void @llvm.dbg.declare(metadata i64* %n, metadata !18850, metadata !DIExpression()), !dbg !18851
  br label %for.cond, !dbg !18852

for.cond:                                         ; preds = %wayout, %nop, %entry
  store volatile i32 -1, i32* @xferfd, align 4, !dbg !18853
  %0 = load i8, i8* @state_needs_update, align 1, !dbg !18857
  %conv = sext i8 %0 to i32, !dbg !18857
  %cmp = icmp ne i32 %conv, 0, !dbg !18859
  br i1 %cmp, label %if.then, label %if.end, !dbg !18860

if.then:                                          ; preds = %for.cond
  store i8 0, i8* @state_needs_update, align 1, !dbg !18861
  call void @setprocessname(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.577, i64 0, i64 0)), !dbg !18863
  br label %if.end, !dbg !18864

if.end:                                           ; preds = %if.then, %for.cond
  call void @doreply(), !dbg !18865
  %call = call i32 @sfgets(), !dbg !18866
  switch i32 %call, label %sw.epilog [
    i32 -1, label %sw.bb
    i32 -2, label %sw.bb2
  ], !dbg !18867

sw.bb:                                            ; preds = %if.end
  call void (i32, i32, i8*, ...) @die(i32 421, i32 6, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.578, i64 0, i64 0)) #11, !dbg !18868
  unreachable, !dbg !18868

sw.bb2:                                           ; preds = %if.end
  br label %return, !dbg !18870

sw.epilog:                                        ; preds = %if.end
  store i64 0, i64* %n, align 8, !dbg !18871
  br label %while.cond, !dbg !18872

while.cond:                                       ; preds = %while.body, %sw.epilog
  %call3 = call i16** @__ctype_b_loc() #14, !dbg !18873
  %1 = load i16*, i16** %call3, align 8, !dbg !18873
  %2 = load i64, i64* %n, align 8, !dbg !18873
  %arrayidx = getelementptr [4128 x i8], [4128 x i8]* @cmd, i64 0, i64 %2, !dbg !18873
  %3 = load i8, i8* %arrayidx, align 1, !dbg !18873
  %conv4 = zext i8 %3 to i32, !dbg !18873
  %idxprom = sext i32 %conv4 to i64, !dbg !18873
  %arrayidx5 = getelementptr i16, i16* %1, i64 %idxprom, !dbg !18873
  %4 = load i16, i16* %arrayidx5, align 2, !dbg !18873
  %conv6 = zext i16 %4 to i32, !dbg !18873
  %and = and i32 %conv6, 8, !dbg !18873
  %tobool = icmp ne i32 %and, 0, !dbg !18873
  br i1 %tobool, label %land.rhs, label %lor.lhs.false, !dbg !18874

lor.lhs.false:                                    ; preds = %while.cond
  %5 = load i64, i64* %n, align 8, !dbg !18875
  %arrayidx7 = getelementptr [4128 x i8], [4128 x i8]* @cmd, i64 0, i64 %5, !dbg !18876
  %6 = load i8, i8* %arrayidx7, align 1, !dbg !18876
  %conv8 = sext i8 %6 to i32, !dbg !18876
  %cmp9 = icmp eq i32 %conv8, 64, !dbg !18877
  br i1 %cmp9, label %land.rhs, label %land.end, !dbg !18878

land.rhs:                                         ; preds = %lor.lhs.false, %while.cond
  %7 = load i64, i64* %n, align 8, !dbg !18879
  %8 = load i64, i64* @cmdsize, align 8, !dbg !18880
  %cmp11 = icmp ult i64 %7, %8, !dbg !18881
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false
  %9 = phi i1 [ false, %lor.lhs.false ], [ %cmp11, %land.rhs ], !dbg !18882
  br i1 %9, label %while.body, label %while.end, !dbg !18872

while.body:                                       ; preds = %land.end
  %10 = load i64, i64* %n, align 8, !dbg !18883
  %arrayidx13 = getelementptr [4128 x i8], [4128 x i8]* @cmd, i64 0, i64 %10, !dbg !18885
  %11 = load i8, i8* %arrayidx13, align 1, !dbg !18885
  %conv14 = zext i8 %11 to i32, !dbg !18886
  %call15 = call i32 @tolower(i32 %conv14) #12, !dbg !18887
  %conv16 = trunc i32 %call15 to i8, !dbg !18888
  %12 = load i64, i64* %n, align 8, !dbg !18889
  %arrayidx17 = getelementptr [4128 x i8], [4128 x i8]* @cmd, i64 0, i64 %12, !dbg !18890
  store i8 %conv16, i8* %arrayidx17, align 1, !dbg !18891
  %13 = load i64, i64* %n, align 8, !dbg !18892
  %inc = add i64 %13, 1, !dbg !18892
  store i64 %inc, i64* %n, align 8, !dbg !18892
  br label %while.cond, !dbg !18872, !llvm.loop !18893

while.end:                                        ; preds = %land.end
  %14 = load i64, i64* %n, align 8, !dbg !18895
  %15 = load i64, i64* @cmdsize, align 8, !dbg !18897
  %cmp18 = icmp uge i64 %14, %15, !dbg !18898
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !18899

if.then20:                                        ; preds = %while.end
  call void (i32, i32, i8*, ...) @die(i32 421, i32 4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.574, i64 0, i64 0)) #11, !dbg !18900
  unreachable, !dbg !18900

if.end21:                                         ; preds = %while.end
  %16 = load i64, i64* %n, align 8, !dbg !18902
  %cmp22 = icmp eq i64 %16, 0, !dbg !18904
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !18905

if.then24:                                        ; preds = %if.end21
  br label %nop, !dbg !18906

nop:                                              ; preds = %if.else43, %if.then24
  call void @llvm.dbg.label(metadata !18907), !dbg !18909
  br label %for.cond, !dbg !18910, !llvm.loop !18911

if.end25:                                         ; preds = %if.end21
  %17 = load i64, i64* %n, align 8, !dbg !18914
  %arrayidx26 = getelementptr [4128 x i8], [4128 x i8]* @cmd, i64 0, i64 %17, !dbg !18916
  %18 = load i8, i8* %arrayidx26, align 1, !dbg !18916
  %conv27 = sext i8 %18 to i32, !dbg !18916
  %cmp28 = icmp eq i32 %conv27, 0, !dbg !18917
  br i1 %cmp28, label %if.then30, label %if.else, !dbg !18918

if.then30:                                        ; preds = %if.end25
  %19 = load i64, i64* %n, align 8, !dbg !18919
  %add.ptr = getelementptr i8, i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i64 %19, !dbg !18921
  store i8* %add.ptr, i8** %arg, align 8, !dbg !18922
  br label %if.end45, !dbg !18923

if.else:                                          ; preds = %if.end25
  %call31 = call i16** @__ctype_b_loc() #14, !dbg !18924
  %20 = load i16*, i16** %call31, align 8, !dbg !18924
  %21 = load i64, i64* %n, align 8, !dbg !18924
  %arrayidx32 = getelementptr [4128 x i8], [4128 x i8]* @cmd, i64 0, i64 %21, !dbg !18924
  %22 = load i8, i8* %arrayidx32, align 1, !dbg !18924
  %conv33 = zext i8 %22 to i32, !dbg !18924
  %idxprom34 = sext i32 %conv33 to i64, !dbg !18924
  %arrayidx35 = getelementptr i16, i16* %20, i64 %idxprom34, !dbg !18924
  %23 = load i16, i16* %arrayidx35, align 2, !dbg !18924
  %conv36 = zext i16 %23 to i32, !dbg !18924
  %and37 = and i32 %conv36, 8192, !dbg !18924
  %tobool38 = icmp ne i32 %and37, 0, !dbg !18924
  br i1 %tobool38, label %if.then39, label %if.else43, !dbg !18926

if.then39:                                        ; preds = %if.else
  %24 = load i64, i64* %n, align 8, !dbg !18927
  %arrayidx40 = getelementptr [4128 x i8], [4128 x i8]* @cmd, i64 0, i64 %24, !dbg !18929
  store i8 0, i8* %arrayidx40, align 1, !dbg !18930
  %25 = load i64, i64* %n, align 8, !dbg !18931
  %add.ptr41 = getelementptr i8, i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i64 %25, !dbg !18932
  %add.ptr42 = getelementptr i8, i8* %add.ptr41, i64 1, !dbg !18933
  store i8* %add.ptr42, i8** %arg, align 8, !dbg !18934
  br label %if.end44, !dbg !18935

if.else43:                                        ; preds = %if.else
  br label %nop, !dbg !18936

if.end44:                                         ; preds = %if.then39
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.then30
  %26 = load volatile i8, i8* @logging, align 1, !dbg !18938
  %conv46 = sext i8 %26 to i32, !dbg !18938
  %cmp47 = icmp ne i32 %conv46, 0, !dbg !18940
  br i1 %cmp47, label %if.then49, label %if.end52, !dbg !18941

if.then49:                                        ; preds = %if.end45
  %call50 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.579, i64 0, i64 0)) #12, !dbg !18942
  %tobool51 = icmp ne i32 %call50, 0, !dbg !18942
  br i1 %tobool51, label %cond.true, label %cond.false, !dbg !18942

cond.true:                                        ; preds = %if.then49
  %27 = load i8*, i8** %arg, align 8, !dbg !18944
  br label %cond.end, !dbg !18942

cond.false:                                       ; preds = %if.then49
  br label %cond.end, !dbg !18942

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %27, %cond.true ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5.580, i64 0, i64 0), %cond.false ], !dbg !18942
  call void (i32, i8*, ...) @logfile(i32 7, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3.581, i64 0, i64 0), i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* %cond), !dbg !18945
  br label %if.end52, !dbg !18946

if.end52:                                         ; preds = %cond.end, %if.end45
  %call53 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.582, i64 0, i64 0)) #12, !dbg !18947
  %tobool54 = icmp ne i32 %call53, 0, !dbg !18947
  br i1 %tobool54, label %if.end56, label %if.then55, !dbg !18949

if.then55:                                        ; preds = %if.end52
  call void @antiidle(), !dbg !18950
  call void @donoop(), !dbg !18952
  br label %wayout, !dbg !18953

if.end56:                                         ; preds = %if.end52
  %call57 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7.583, i64 0, i64 0)) #12, !dbg !18954
  %tobool58 = icmp ne i32 %call57, 0, !dbg !18954
  br i1 %tobool58, label %if.else60, label %if.then59, !dbg !18956

if.then59:                                        ; preds = %if.end56
  %28 = load i8*, i8** %arg, align 8, !dbg !18957
  call void @douser(i8* %28), !dbg !18959
  br label %if.end699, !dbg !18960

if.else60:                                        ; preds = %if.end56
  %call61 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8.584, i64 0, i64 0)) #12, !dbg !18961
  %tobool62 = icmp ne i32 %call61, 0, !dbg !18961
  br i1 %tobool62, label %if.else64, label %if.then63, !dbg !18963

if.then63:                                        ; preds = %if.else60
  call void (i32, i8*, ...) @addreply(i32 202, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9.585, i64 0, i64 0)), !dbg !18964
  br label %if.end698, !dbg !18966

if.else64:                                        ; preds = %if.else60
  %call65 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.579, i64 0, i64 0)) #12, !dbg !18967
  %tobool66 = icmp ne i32 %call65, 0, !dbg !18967
  br i1 %tobool66, label %if.else73, label %if.then67, !dbg !18969

if.then67:                                        ; preds = %if.else64
  %29 = load i8, i8* @guest, align 1, !dbg !18970
  %conv68 = sext i8 %29 to i32, !dbg !18970
  %cmp69 = icmp eq i32 %conv68, 0, !dbg !18973
  br i1 %cmp69, label %if.then71, label %if.end72, !dbg !18974

if.then71:                                        ; preds = %if.then67
  call void @randomdelay(), !dbg !18975
  br label %if.end72, !dbg !18977

if.end72:                                         ; preds = %if.then71, %if.then67
  %30 = load i8*, i8** %arg, align 8, !dbg !18978
  call void @dopass(i8* %30), !dbg !18979
  br label %if.end697, !dbg !18980

if.else73:                                        ; preds = %if.else64
  %call74 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10.586, i64 0, i64 0)) #12, !dbg !18981
  %tobool75 = icmp ne i32 %call74, 0, !dbg !18981
  br i1 %tobool75, label %if.else79, label %if.then76, !dbg !18983

if.then76:                                        ; preds = %if.else73
  %31 = load i64, i64* @uploaded, align 8, !dbg !18984
  %add = add i64 %31, 1023, !dbg !18986
  %div = udiv i64 %add, 1024, !dbg !18987
  %32 = load i64, i64* @downloaded, align 8, !dbg !18988
  %add77 = add i64 %32, 1023, !dbg !18989
  %div78 = udiv i64 %add77, 1024, !dbg !18990
  call void (i32, i8*, ...) @addreply(i32 221, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.11.587, i64 0, i64 0), i64 %div, i64 %div78), !dbg !18991
  br label %return, !dbg !18992

if.else79:                                        ; preds = %if.else73
  %call80 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12.588, i64 0, i64 0)) #12, !dbg !18993
  %tobool81 = icmp ne i32 %call80, 0, !dbg !18993
  br i1 %tobool81, label %if.else83, label %if.then82, !dbg !18995

if.then82:                                        ; preds = %if.else79
  call void @antiidle(), !dbg !18996
  call void @addreply_noformat(i32 215, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13.589, i64 0, i64 0)), !dbg !18998
  br label %wayout, !dbg !18999

if.else83:                                        ; preds = %if.else79
  %call84 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14.590, i64 0, i64 0)) #12, !dbg !19000
  %tobool85 = icmp ne i32 %call84, 0, !dbg !19000
  br i1 %tobool85, label %lor.lhs.false86, label %if.then89, !dbg !19002

lor.lhs.false86:                                  ; preds = %if.else83
  %call87 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15.591, i64 0, i64 0)) #12, !dbg !19003
  %tobool88 = icmp ne i32 %call87, 0, !dbg !19003
  br i1 %tobool88, label %if.else90, label %if.then89, !dbg !19004

if.then89:                                        ; preds = %lor.lhs.false86, %if.else83
  call void @addreply_noformat(i32 500, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.16.592, i64 0, i64 0)), !dbg !19005
  br label %if.end694, !dbg !19007

if.else90:                                        ; preds = %lor.lhs.false86
  %call91 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17.593, i64 0, i64 0)) #12, !dbg !19008
  %tobool92 = icmp ne i32 %call91, 0, !dbg !19008
  br i1 %tobool92, label %if.else94, label %if.then93, !dbg !19010

if.then93:                                        ; preds = %if.else90
  call void @antiidle(), !dbg !19011
  %33 = load i8*, i8** %arg, align 8, !dbg !19013
  call void @dotype(i8* %33), !dbg !19014
  br label %wayout, !dbg !19015

if.else94:                                        ; preds = %if.else90
  %call95 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18.594, i64 0, i64 0)) #12, !dbg !19016
  %tobool96 = icmp ne i32 %call95, 0, !dbg !19016
  br i1 %tobool96, label %if.else98, label %if.then97, !dbg !19018

if.then97:                                        ; preds = %if.else94
  call void @antiidle(), !dbg !19019
  %34 = load i8*, i8** %arg, align 8, !dbg !19021
  call void @domode(i8* %34), !dbg !19022
  br label %wayout, !dbg !19023

if.else98:                                        ; preds = %if.else94
  %call99 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.595, i64 0, i64 0)) #12, !dbg !19024
  %tobool100 = icmp ne i32 %call99, 0, !dbg !19024
  br i1 %tobool100, label %if.else102, label %if.then101, !dbg !19026

if.then101:                                       ; preds = %if.else98
  call void @dofeat(), !dbg !19027
  br label %wayout, !dbg !19029

if.else102:                                       ; preds = %if.else98
  %call103 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20.596, i64 0, i64 0)) #12, !dbg !19030
  %tobool104 = icmp ne i32 %call103, 0, !dbg !19030
  br i1 %tobool104, label %if.else106, label %if.then105, !dbg !19032

if.then105:                                       ; preds = %if.else102
  %35 = load i8*, i8** %arg, align 8, !dbg !19033
  call void @doopts(i8* %35), !dbg !19035
  br label %wayout, !dbg !19036

if.else106:                                       ; preds = %if.else102
  %call107 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21.597, i64 0, i64 0)) #12, !dbg !19037
  %tobool108 = icmp ne i32 %call107, 0, !dbg !19037
  br i1 %tobool108, label %if.else110, label %if.then109, !dbg !19039

if.then109:                                       ; preds = %if.else106
  %36 = load i8*, i8** %arg, align 8, !dbg !19040
  call void @dostru(i8* %36), !dbg !19042
  br label %wayout, !dbg !19043

if.else110:                                       ; preds = %if.else106
  %call111 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.22.598, i64 0, i64 0)) #12, !dbg !19044
  %tobool112 = icmp ne i32 %call111, 0, !dbg !19044
  br i1 %tobool112, label %lor.lhs.false113, label %if.then131, !dbg !19046

lor.lhs.false113:                                 ; preds = %if.else110
  %call114 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23.599, i64 0, i64 0)) #12, !dbg !19047
  %tobool115 = icmp ne i32 %call114, 0, !dbg !19047
  br i1 %tobool115, label %lor.lhs.false116, label %if.then131, !dbg !19048

lor.lhs.false116:                                 ; preds = %lor.lhs.false113
  %call117 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24.600, i64 0, i64 0)) #12, !dbg !19049
  %tobool118 = icmp ne i32 %call117, 0, !dbg !19049
  br i1 %tobool118, label %lor.lhs.false119, label %if.then131, !dbg !19050

lor.lhs.false119:                                 ; preds = %lor.lhs.false116
  %call120 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25.601, i64 0, i64 0)) #12, !dbg !19051
  %tobool121 = icmp ne i32 %call120, 0, !dbg !19051
  br i1 %tobool121, label %lor.lhs.false122, label %if.then131, !dbg !19052

lor.lhs.false122:                                 ; preds = %lor.lhs.false119
  %call123 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26.602, i64 0, i64 0)) #12, !dbg !19053
  %tobool124 = icmp ne i32 %call123, 0, !dbg !19053
  br i1 %tobool124, label %lor.lhs.false125, label %if.then131, !dbg !19054

lor.lhs.false125:                                 ; preds = %lor.lhs.false122
  %call126 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27.603, i64 0, i64 0)) #12, !dbg !19055
  %tobool127 = icmp ne i32 %call126, 0, !dbg !19055
  br i1 %tobool127, label %lor.lhs.false128, label %if.then131, !dbg !19056

lor.lhs.false128:                                 ; preds = %lor.lhs.false125
  %call129 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28.604, i64 0, i64 0)) #12, !dbg !19057
  %tobool130 = icmp ne i32 %call129, 0, !dbg !19057
  br i1 %tobool130, label %if.else132, label %if.then131, !dbg !19058

if.then131:                                       ; preds = %lor.lhs.false128, %lor.lhs.false125, %lor.lhs.false122, %lor.lhs.false119, %lor.lhs.false116, %lor.lhs.false113, %if.else110
  call void (i32, i32, i8*, ...) @die(i32 500, i32 6, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.29.605, i64 0, i64 0), i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0)) #11, !dbg !19059
  unreachable, !dbg !19059

if.else132:                                       ; preds = %lor.lhs.false128
  %call133 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30.606, i64 0, i64 0)) #12, !dbg !19061
  %tobool134 = icmp ne i32 %call133, 0, !dbg !19061
  br i1 %tobool134, label %if.else136, label %if.then135, !dbg !19063

if.then135:                                       ; preds = %if.else132
  br label %help_site, !dbg !19064

if.else136:                                       ; preds = %if.else132
  %37 = load i8, i8* @loggedin, align 1, !dbg !19066
  %conv137 = sext i8 %37 to i32, !dbg !19066
  %cmp138 = icmp eq i32 %conv137, 0, !dbg !19068
  br i1 %cmp138, label %if.then140, label %if.else141, !dbg !19069

if.then140:                                       ; preds = %if.else136
  call void @addreply_noformat(i32 530, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.31.607, i64 0, i64 0)), !dbg !19070
  br label %wayout, !dbg !19072

if.else141:                                       ; preds = %if.else136
  %call142 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.32.608, i64 0, i64 0)) #12, !dbg !19073
  %tobool143 = icmp ne i32 %call142, 0, !dbg !19073
  br i1 %tobool143, label %lor.lhs.false144, label %if.then147, !dbg !19076

lor.lhs.false144:                                 ; preds = %if.else141
  %call145 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33.609, i64 0, i64 0)) #12, !dbg !19077
  %tobool146 = icmp ne i32 %call145, 0, !dbg !19077
  br i1 %tobool146, label %if.else148, label %if.then147, !dbg !19078

if.then147:                                       ; preds = %lor.lhs.false144, %if.else141
  call void @antiidle(), !dbg !19079
  %38 = load i8*, i8** %arg, align 8, !dbg !19081
  call void @docwd(i8* %38), !dbg !19082
  br label %wayout, !dbg !19083

if.else148:                                       ; preds = %lor.lhs.false144
  %call149 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.34.610, i64 0, i64 0)) #12, !dbg !19084
  %tobool150 = icmp ne i32 %call149, 0, !dbg !19084
  br i1 %tobool150, label %if.else152, label %if.then151, !dbg !19086

if.then151:                                       ; preds = %if.else148
  %39 = load i8*, i8** %arg, align 8, !dbg !19087
  call void @doport(i8* %39), !dbg !19089
  br label %if.end684, !dbg !19090

if.else152:                                       ; preds = %if.else148
  %call153 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35.611, i64 0, i64 0)) #12, !dbg !19091
  %tobool154 = icmp ne i32 %call153, 0, !dbg !19091
  br i1 %tobool154, label %if.else156, label %if.then155, !dbg !19093

if.then155:                                       ; preds = %if.else152
  %40 = load i8*, i8** %arg, align 8, !dbg !19094
  call void @doeprt(i8* %40), !dbg !19096
  br label %if.end683, !dbg !19097

if.else156:                                       ; preds = %if.else152
  %call157 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36.612, i64 0, i64 0)) #12, !dbg !19098
  %tobool158 = icmp ne i32 %call157, 0, !dbg !19098
  br i1 %tobool158, label %if.else167, label %land.lhs.true, !dbg !19100

land.lhs.true:                                    ; preds = %if.else156
  %41 = load i8, i8* @disallow_passive, align 1, !dbg !19101
  %conv159 = sext i8 %41 to i32, !dbg !19101
  %cmp160 = icmp eq i32 %conv159, 0, !dbg !19102
  br i1 %cmp160, label %land.lhs.true162, label %if.else167, !dbg !19103

land.lhs.true162:                                 ; preds = %land.lhs.true
  %42 = load i16, i16* getelementptr inbounds (%struct.sockaddr_storage, %struct.sockaddr_storage* @force_passive_ip, i32 0, i32 0), align 8, !dbg !19104
  %conv163 = zext i16 %42 to i32, !dbg !19104
  %cmp164 = icmp eq i32 %conv163, 0, !dbg !19105
  br i1 %cmp164, label %if.then166, label %if.else167, !dbg !19106

if.then166:                                       ; preds = %land.lhs.true162
  call void @doesta(), !dbg !19107
  br label %if.end682, !dbg !19109

if.else167:                                       ; preds = %land.lhs.true162, %land.lhs.true, %if.else156
  %call168 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.37.613, i64 0, i64 0)) #12, !dbg !19110
  %tobool169 = icmp ne i32 %call168, 0, !dbg !19110
  br i1 %tobool169, label %if.else171, label %if.then170, !dbg !19112

if.then170:                                       ; preds = %if.else167
  call void @doestp(), !dbg !19113
  br label %if.end681, !dbg !19115

if.else171:                                       ; preds = %if.else167
  %43 = load i8, i8* @disallow_passive, align 1, !dbg !19116
  %conv172 = sext i8 %43 to i32, !dbg !19116
  %cmp173 = icmp eq i32 %conv172, 0, !dbg !19118
  br i1 %cmp173, label %land.lhs.true175, label %if.else182, !dbg !19119

land.lhs.true175:                                 ; preds = %if.else171
  %call176 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.38.614, i64 0, i64 0)) #12, !dbg !19120
  %tobool177 = icmp ne i32 %call176, 0, !dbg !19120
  br i1 %tobool177, label %lor.lhs.false178, label %if.then181, !dbg !19121

lor.lhs.false178:                                 ; preds = %land.lhs.true175
  %call179 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39.615, i64 0, i64 0)) #12, !dbg !19122
  %tobool180 = icmp ne i32 %call179, 0, !dbg !19122
  br i1 %tobool180, label %if.else182, label %if.then181, !dbg !19123

if.then181:                                       ; preds = %lor.lhs.false178, %land.lhs.true175
  call void @dopasv(i32 0), !dbg !19124
  br label %if.end680, !dbg !19126

if.else182:                                       ; preds = %lor.lhs.false178, %if.else171
  %44 = load i8, i8* @disallow_passive, align 1, !dbg !19127
  %conv183 = sext i8 %44 to i32, !dbg !19127
  %cmp184 = icmp eq i32 %conv183, 0, !dbg !19129
  br i1 %cmp184, label %land.lhs.true186, label %if.else210, !dbg !19130

land.lhs.true186:                                 ; preds = %if.else182
  %call187 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.40.616, i64 0, i64 0)) #12, !dbg !19131
  %tobool188 = icmp ne i32 %call187, 0, !dbg !19131
  br i1 %tobool188, label %if.else210, label %land.lhs.true189, !dbg !19132

land.lhs.true189:                                 ; preds = %land.lhs.true186
  %45 = load i8, i8* @broken_client_compat, align 1, !dbg !19133
  %conv190 = sext i8 %45 to i32, !dbg !19133
  %cmp191 = icmp eq i32 %conv190, 0, !dbg !19134
  br i1 %cmp191, label %if.then197, label %lor.lhs.false193, !dbg !19135

lor.lhs.false193:                                 ; preds = %land.lhs.true189
  %46 = load i16, i16* getelementptr inbounds (%struct.sockaddr_storage, %struct.sockaddr_storage* @ctrlconn, i32 0, i32 0), align 8, !dbg !19136
  %conv194 = zext i16 %46 to i32, !dbg !19136
  %cmp195 = icmp eq i32 %conv194, 10, !dbg !19137
  br i1 %cmp195, label %if.then197, label %if.else210, !dbg !19138

if.then197:                                       ; preds = %lor.lhs.false193, %land.lhs.true189
  %47 = load i8*, i8** %arg, align 8, !dbg !19139
  %call198 = call i32 @strcasecmp(i8* %47, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41.617, i64 0, i64 0)) #12, !dbg !19142
  %tobool199 = icmp ne i32 %call198, 0, !dbg !19142
  br i1 %tobool199, label %if.else201, label %if.then200, !dbg !19143

if.then200:                                       ; preds = %if.then197
  store i8 1, i8* @epsv_all, align 1, !dbg !19144
  call void @addreply_noformat(i32 220, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.42.618, i64 0, i64 0)), !dbg !19146
  br label %if.end209, !dbg !19147

if.else201:                                       ; preds = %if.then197
  %48 = load i8*, i8** %arg, align 8, !dbg !19148
  %call202 = call i32 @strcmp(i8* %48, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.43.619, i64 0, i64 0)) #12, !dbg !19150
  %tobool203 = icmp ne i32 %call202, 0, !dbg !19150
  br i1 %tobool203, label %if.else207, label %land.lhs.true204, !dbg !19151

land.lhs.true204:                                 ; preds = %if.else201
  %49 = load i8, i8* @v6ready, align 1, !dbg !19152
  %tobool205 = icmp ne i8 %49, 0, !dbg !19152
  br i1 %tobool205, label %if.else207, label %if.then206, !dbg !19153

if.then206:                                       ; preds = %land.lhs.true204
  call void @addreply_noformat(i32 522, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.44.620, i64 0, i64 0)), !dbg !19154
  br label %if.end208, !dbg !19156

if.else207:                                       ; preds = %land.lhs.true204, %if.else201
  call void @dopasv(i32 1), !dbg !19157
  br label %if.end208

if.end208:                                        ; preds = %if.else207, %if.then206
  br label %if.end209

if.end209:                                        ; preds = %if.end208, %if.then200
  br label %if.end679, !dbg !19159

if.else210:                                       ; preds = %lor.lhs.false193, %land.lhs.true186, %if.else182
  %call211 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45.621, i64 0, i64 0)) #12, !dbg !19160
  %tobool212 = icmp ne i32 %call211, 0, !dbg !19160
  br i1 %tobool212, label %if.else239, label %if.then213, !dbg !19162

if.then213:                                       ; preds = %if.else210
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !19163, metadata !DIExpression()), !dbg !19186
  %50 = load i8*, i8** %arg, align 8, !dbg !19187
  %call214 = call i32 @strncasecmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.46.622, i64 0, i64 0), i8* %50, i64 5) #12, !dbg !19189
  %cmp215 = icmp eq i32 %call214, 0, !dbg !19190
  br i1 %cmp215, label %if.then217, label %if.end238, !dbg !19191

if.then217:                                       ; preds = %if.then213
  %51 = load i8*, i8** %arg, align 8, !dbg !19192
  %add.ptr218 = getelementptr i8, i8* %51, i64 5, !dbg !19192
  store i8* %add.ptr218, i8** %arg, align 8, !dbg !19192
  %52 = load i8*, i8** %arg, align 8, !dbg !19194
  %53 = load i8, i8* %52, align 1, !dbg !19196
  %conv219 = sext i8 %53 to i32, !dbg !19196
  %cmp220 = icmp eq i32 %conv219, 0, !dbg !19197
  br i1 %cmp220, label %if.then236, label %lor.lhs.false222, !dbg !19198

lor.lhs.false222:                                 ; preds = %if.then217
  %54 = load i8*, i8** %arg, align 8, !dbg !19199
  %call223 = call i32 @access(i8* %54, i32 4) #7, !dbg !19200
  %cmp224 = icmp ne i32 %call223, 0, !dbg !19201
  br i1 %cmp224, label %if.then236, label %lor.lhs.false226, !dbg !19202

lor.lhs.false226:                                 ; preds = %lor.lhs.false222
  %55 = load i8*, i8** %arg, align 8, !dbg !19203
  %call227 = call i32 @stat(i8* %55, %struct.stat* %st) #7, !dbg !19204
  %cmp228 = icmp ne i32 %call227, 0, !dbg !19205
  br i1 %cmp228, label %if.then236, label %lor.lhs.false230, !dbg !19206

lor.lhs.false230:                                 ; preds = %lor.lhs.false226
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !19207
  %56 = load i32, i32* %st_mode, align 8, !dbg !19207
  %and231 = and i32 %56, 61440, !dbg !19207
  %cmp232 = icmp eq i32 %and231, 32768, !dbg !19207
  %conv233 = zext i1 %cmp232 to i32, !dbg !19207
  %cmp234 = icmp eq i32 %conv233, 0, !dbg !19208
  br i1 %cmp234, label %if.then236, label %if.end237, !dbg !19209

if.then236:                                       ; preds = %lor.lhs.false230, %lor.lhs.false226, %lor.lhs.false222, %if.then217
  call void @addreply_noformat(i32 550, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.47.623, i64 0, i64 0)), !dbg !19210
  br label %wayout, !dbg !19212

if.end237:                                        ; preds = %lor.lhs.false230
  br label %if.end238, !dbg !19213

if.end238:                                        ; preds = %if.end237, %if.then213
  call void @addreply_noformat(i32 200, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.48.624, i64 0, i64 0)), !dbg !19214
  br label %if.end678, !dbg !19215

if.else239:                                       ; preds = %if.else210
  %57 = load i8, i8* @disallow_passive, align 1, !dbg !19216
  %conv240 = sext i8 %57 to i32, !dbg !19216
  %cmp241 = icmp eq i32 %conv240, 0, !dbg !19218
  br i1 %cmp241, label %land.lhs.true243, label %if.else247, !dbg !19219

land.lhs.true243:                                 ; preds = %if.else239
  %call244 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49.625, i64 0, i64 0)) #12, !dbg !19220
  %tobool245 = icmp ne i32 %call244, 0, !dbg !19220
  br i1 %tobool245, label %if.else247, label %if.then246, !dbg !19221

if.then246:                                       ; preds = %land.lhs.true243
  call void @dopasv(i32 2), !dbg !19222
  br label %if.end677, !dbg !19224

if.else247:                                       ; preds = %land.lhs.true243, %if.else239
  %call248 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50.626, i64 0, i64 0)) #12, !dbg !19225
  %tobool249 = icmp ne i32 %call248, 0, !dbg !19225
  br i1 %tobool249, label %if.else263, label %if.then250, !dbg !19227

if.then250:                                       ; preds = %if.else247
  %58 = load i8*, i8** %arg, align 8, !dbg !19228
  %59 = load i8, i8* %58, align 1, !dbg !19231
  %conv251 = sext i8 %59 to i32, !dbg !19231
  %cmp252 = icmp eq i32 %conv251, 0, !dbg !19232
  br i1 %cmp252, label %if.then254, label %if.else255, !dbg !19233

if.then254:                                       ; preds = %if.then250
  call void @addreply_noformat(i32 501, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.51.627, i64 0, i64 0)), !dbg !19234
  br label %if.end262, !dbg !19236

if.else255:                                       ; preds = %if.then250
  call void @llvm.dbg.declare(metadata i64* %size, metadata !19237, metadata !DIExpression()), !dbg !19239
  %60 = load i8*, i8** %arg, align 8, !dbg !19240
  %call256 = call i64 @strtoull(i8* %60, i8** null, i32 10) #7, !dbg !19241
  store i64 %call256, i64* %size, align 8, !dbg !19239
  %61 = load i64, i64* %size, align 8, !dbg !19242
  %cmp257 = icmp slt i64 %61, 0, !dbg !19244
  br i1 %cmp257, label %if.then259, label %if.else260, !dbg !19245

if.then259:                                       ; preds = %if.else255
  call void @addreply_noformat(i32 501, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.51.627, i64 0, i64 0)), !dbg !19246
  br label %if.end261, !dbg !19248

if.else260:                                       ; preds = %if.else255
  %62 = load i64, i64* %size, align 8, !dbg !19249
  call void @doallo(i64 %62), !dbg !19251
  br label %if.end261

if.end261:                                        ; preds = %if.else260, %if.then259
  br label %if.end262

if.end262:                                        ; preds = %if.end261, %if.then254
  br label %if.end676, !dbg !19252

if.else263:                                       ; preds = %if.else247
  %call264 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.52.628, i64 0, i64 0)) #12, !dbg !19253
  %tobool265 = icmp ne i32 %call264, 0, !dbg !19253
  br i1 %tobool265, label %lor.lhs.false266, label %if.then269, !dbg !19255

lor.lhs.false266:                                 ; preds = %if.else263
  %call267 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53.629, i64 0, i64 0)) #12, !dbg !19256
  %tobool268 = icmp ne i32 %call267, 0, !dbg !19256
  br i1 %tobool268, label %if.else270, label %if.then269, !dbg !19257

if.then269:                                       ; preds = %lor.lhs.false266, %if.else263
  call void @antiidle(), !dbg !19258
  call void (i32, i8*, ...) @addreply(i32 257, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.54.630, i64 0, i64 0), i8* getelementptr inbounds ([4097 x i8], [4097 x i8]* @wd, i64 0, i64 0)), !dbg !19260
  br label %wayout, !dbg !19261

if.else270:                                       ; preds = %lor.lhs.false266
  %call271 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.55.631, i64 0, i64 0)) #12, !dbg !19262
  %tobool272 = icmp ne i32 %call271, 0, !dbg !19262
  br i1 %tobool272, label %lor.lhs.false273, label %if.then276, !dbg !19264

lor.lhs.false273:                                 ; preds = %if.else270
  %call274 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56.632, i64 0, i64 0)) #12, !dbg !19265
  %tobool275 = icmp ne i32 %call274, 0, !dbg !19265
  br i1 %tobool275, label %if.else277, label %if.then276, !dbg !19266

if.then276:                                       ; preds = %lor.lhs.false273, %if.else270
  call void @docwd(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.57.633, i64 0, i64 0)), !dbg !19267
  br label %if.end674, !dbg !19269

if.else277:                                       ; preds = %lor.lhs.false273
  %call278 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.58.634, i64 0, i64 0)) #12, !dbg !19270
  %tobool279 = icmp ne i32 %call278, 0, !dbg !19270
  br i1 %tobool279, label %if.else287, label %if.then280, !dbg !19272

if.then280:                                       ; preds = %if.else277
  %63 = load i8*, i8** %arg, align 8, !dbg !19273
  %64 = load i8, i8* %63, align 1, !dbg !19276
  %conv281 = sext i8 %64 to i32, !dbg !19276
  %cmp282 = icmp ne i32 %conv281, 0, !dbg !19277
  br i1 %cmp282, label %if.then284, label %if.else285, !dbg !19278

if.then284:                                       ; preds = %if.then280
  %65 = load i8*, i8** %arg, align 8, !dbg !19279
  call void @doretr(i8* %65), !dbg !19282
  br label %if.end286, !dbg !19283

if.else285:                                       ; preds = %if.then280
  call void @addreply_noformat(i32 501, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.59.635, i64 0, i64 0)), !dbg !19284
  br label %if.end286

if.end286:                                        ; preds = %if.else285, %if.then284
  br label %if.end673, !dbg !19286

if.else287:                                       ; preds = %if.else277
  %call288 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60.636, i64 0, i64 0)) #12, !dbg !19287
  %tobool289 = icmp ne i32 %call288, 0, !dbg !19287
  br i1 %tobool289, label %if.else297, label %if.then290, !dbg !19289

if.then290:                                       ; preds = %if.else287
  call void @antiidle(), !dbg !19290
  %66 = load i8*, i8** %arg, align 8, !dbg !19292
  %67 = load i8, i8* %66, align 1, !dbg !19294
  %conv291 = sext i8 %67 to i32, !dbg !19294
  %cmp292 = icmp ne i32 %conv291, 0, !dbg !19295
  br i1 %cmp292, label %if.then294, label %if.else295, !dbg !19296

if.then294:                                       ; preds = %if.then290
  %68 = load i8*, i8** %arg, align 8, !dbg !19297
  call void @dorest(i8* %68), !dbg !19299
  br label %if.end296, !dbg !19300

if.else295:                                       ; preds = %if.then290
  call void @addreply_noformat(i32 501, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.61.637, i64 0, i64 0)), !dbg !19301
  store i64 0, i64* @restartat, align 8, !dbg !19303
  br label %if.end296

if.end296:                                        ; preds = %if.else295, %if.then294
  br label %wayout, !dbg !19304

if.else297:                                       ; preds = %if.else287
  %call298 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.62.638, i64 0, i64 0)) #12, !dbg !19305
  %tobool299 = icmp ne i32 %call298, 0, !dbg !19305
  br i1 %tobool299, label %if.else307, label %if.then300, !dbg !19307

if.then300:                                       ; preds = %if.else297
  %69 = load i8*, i8** %arg, align 8, !dbg !19308
  %70 = load i8, i8* %69, align 1, !dbg !19311
  %conv301 = sext i8 %70 to i32, !dbg !19311
  %cmp302 = icmp ne i32 %conv301, 0, !dbg !19312
  br i1 %cmp302, label %if.then304, label %if.else305, !dbg !19313

if.then304:                                       ; preds = %if.then300
  %71 = load i8*, i8** %arg, align 8, !dbg !19314
  call void @dodele(i8* %71), !dbg !19316
  br label %if.end306, !dbg !19317

if.else305:                                       ; preds = %if.then300
  call void @addreply_noformat(i32 501, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.59.635, i64 0, i64 0)), !dbg !19318
  br label %if.end306

if.end306:                                        ; preds = %if.else305, %if.then304
  br label %if.end671, !dbg !19320

if.else307:                                       ; preds = %if.else297
  %call308 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.63.639, i64 0, i64 0)) #12, !dbg !19321
  %tobool309 = icmp ne i32 %call308, 0, !dbg !19321
  br i1 %tobool309, label %if.else319, label %if.then310, !dbg !19323

if.then310:                                       ; preds = %if.else307
  %72 = load i8*, i8** %arg, align 8, !dbg !19324
  %call311 = call i8* @revealextraspc(i8* %72), !dbg !19326
  store i8* %call311, i8** %arg, align 8, !dbg !19327
  %73 = load i8*, i8** %arg, align 8, !dbg !19328
  %74 = load i8, i8* %73, align 1, !dbg !19330
  %conv312 = sext i8 %74 to i32, !dbg !19330
  %cmp313 = icmp ne i32 %conv312, 0, !dbg !19331
  br i1 %cmp313, label %if.then315, label %if.else317, !dbg !19332

if.then315:                                       ; preds = %if.then310
  %75 = load i8*, i8** %arg, align 8, !dbg !19333
  %76 = load i8, i8* @autorename, align 1, !dbg !19336
  %conv316 = sext i8 %76 to i32, !dbg !19336
  call void @dostor(i8* %75, i32 0, i32 %conv316), !dbg !19337
  br label %if.end318, !dbg !19338

if.else317:                                       ; preds = %if.then310
  call void @addreply_noformat(i32 501, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.59.635, i64 0, i64 0)), !dbg !19339
  br label %if.end318

if.end318:                                        ; preds = %if.else317, %if.then315
  br label %if.end670, !dbg !19341

if.else319:                                       ; preds = %if.else307
  %call320 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.64.640, i64 0, i64 0)) #12, !dbg !19342
  %tobool321 = icmp ne i32 %call320, 0, !dbg !19342
  br i1 %tobool321, label %if.else330, label %if.then322, !dbg !19344

if.then322:                                       ; preds = %if.else319
  %77 = load i8*, i8** %arg, align 8, !dbg !19345
  %call323 = call i8* @revealextraspc(i8* %77), !dbg !19347
  store i8* %call323, i8** %arg, align 8, !dbg !19348
  %78 = load i8*, i8** %arg, align 8, !dbg !19349
  %79 = load i8, i8* %78, align 1, !dbg !19351
  %conv324 = sext i8 %79 to i32, !dbg !19351
  %cmp325 = icmp ne i32 %conv324, 0, !dbg !19352
  br i1 %cmp325, label %if.then327, label %if.else328, !dbg !19353

if.then327:                                       ; preds = %if.then322
  %80 = load i8*, i8** %arg, align 8, !dbg !19354
  call void @dostor(i8* %80, i32 1, i32 0), !dbg !19357
  br label %if.end329, !dbg !19358

if.else328:                                       ; preds = %if.then322
  call void @addreply_noformat(i32 501, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.59.635, i64 0, i64 0)), !dbg !19359
  br label %if.end329

if.end329:                                        ; preds = %if.else328, %if.then327
  br label %if.end669, !dbg !19361

if.else330:                                       ; preds = %if.else319
  %call331 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.65.641, i64 0, i64 0)) #12, !dbg !19362
  %tobool332 = icmp ne i32 %call331, 0, !dbg !19362
  br i1 %tobool332, label %if.else334, label %if.then333, !dbg !19364

if.then333:                                       ; preds = %if.else330
  call void @dostou(), !dbg !19365
  br label %if.end668, !dbg !19368

if.else334:                                       ; preds = %if.else330
  %call335 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.66.642, i64 0, i64 0)) #12, !dbg !19369
  %tobool336 = icmp ne i32 %call335, 0, !dbg !19369
  br i1 %tobool336, label %lor.lhs.false337, label %if.then340, !dbg !19371

lor.lhs.false337:                                 ; preds = %if.else334
  %call338 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.67.643, i64 0, i64 0)) #12, !dbg !19372
  %tobool339 = icmp ne i32 %call338, 0, !dbg !19372
  br i1 %tobool339, label %if.else348, label %if.then340, !dbg !19373

if.then340:                                       ; preds = %lor.lhs.false337, %if.else334
  %81 = load i8*, i8** %arg, align 8, !dbg !19374
  %call341 = call i8* @revealextraspc(i8* %81), !dbg !19376
  store i8* %call341, i8** %arg, align 8, !dbg !19377
  %82 = load i8*, i8** %arg, align 8, !dbg !19378
  %83 = load i8, i8* %82, align 1, !dbg !19380
  %conv342 = sext i8 %83 to i32, !dbg !19380
  %cmp343 = icmp ne i32 %conv342, 0, !dbg !19381
  br i1 %cmp343, label %if.then345, label %if.else346, !dbg !19382

if.then345:                                       ; preds = %if.then340
  %84 = load i8*, i8** %arg, align 8, !dbg !19383
  call void @domkd(i8* %84), !dbg !19385
  br label %if.end347, !dbg !19386

if.else346:                                       ; preds = %if.then340
  call void @addreply_noformat(i32 501, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68.644, i64 0, i64 0)), !dbg !19387
  br label %if.end347

if.end347:                                        ; preds = %if.else346, %if.then345
  br label %if.end667, !dbg !19389

if.else348:                                       ; preds = %lor.lhs.false337
  %call349 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.69.645, i64 0, i64 0)) #12, !dbg !19390
  %tobool350 = icmp ne i32 %call349, 0, !dbg !19390
  br i1 %tobool350, label %lor.lhs.false351, label %if.then354, !dbg !19392

lor.lhs.false351:                                 ; preds = %if.else348
  %call352 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.70.646, i64 0, i64 0)) #12, !dbg !19393
  %tobool353 = icmp ne i32 %call352, 0, !dbg !19393
  br i1 %tobool353, label %if.else361, label %if.then354, !dbg !19394

if.then354:                                       ; preds = %lor.lhs.false351, %if.else348
  %85 = load i8*, i8** %arg, align 8, !dbg !19395
  %86 = load i8, i8* %85, align 1, !dbg !19398
  %conv355 = sext i8 %86 to i32, !dbg !19398
  %cmp356 = icmp ne i32 %conv355, 0, !dbg !19399
  br i1 %cmp356, label %if.then358, label %if.else359, !dbg !19400

if.then358:                                       ; preds = %if.then354
  %87 = load i8*, i8** %arg, align 8, !dbg !19401
  call void @dormd(i8* %87), !dbg !19403
  br label %if.end360, !dbg !19404

if.else359:                                       ; preds = %if.then354
  call void @addreply_noformat(i32 550, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68.644, i64 0, i64 0)), !dbg !19405
  br label %if.end360

if.end360:                                        ; preds = %if.else359, %if.then358
  br label %if.end666, !dbg !19407

if.else361:                                       ; preds = %lor.lhs.false351
  %call362 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.71.647, i64 0, i64 0)) #12, !dbg !19408
  %tobool363 = icmp ne i32 %call362, 0, !dbg !19408
  br i1 %tobool363, label %if.else371, label %if.then364, !dbg !19410

if.then364:                                       ; preds = %if.else361
  %88 = load i8*, i8** %arg, align 8, !dbg !19411
  %89 = load i8, i8* %88, align 1, !dbg !19414
  %conv365 = sext i8 %89 to i32, !dbg !19414
  %cmp366 = icmp ne i32 %conv365, 0, !dbg !19415
  br i1 %cmp366, label %if.then368, label %if.else369, !dbg !19416

if.then368:                                       ; preds = %if.then364
  %90 = load i8*, i8** %arg, align 8, !dbg !19417
  call void @dolist(i8* %90, i32 1), !dbg !19419
  br label %if.end370, !dbg !19420

if.else369:                                       ; preds = %if.then364
  call void @addreply_noformat(i32 211, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.72.648, i64 0, i64 0)), !dbg !19421
  br label %if.end370

if.end370:                                        ; preds = %if.else369, %if.then368
  br label %if.end665, !dbg !19423

if.else371:                                       ; preds = %if.else361
  %call372 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.73.649, i64 0, i64 0)) #12, !dbg !19424
  %tobool373 = icmp ne i32 %call372, 0, !dbg !19424
  br i1 %tobool373, label %if.else375, label %if.then374, !dbg !19426

if.then374:                                       ; preds = %if.else371
  %91 = load i8*, i8** %arg, align 8, !dbg !19427
  call void @dolist(i8* %91, i32 0), !dbg !19430
  br label %if.end664, !dbg !19431

if.else375:                                       ; preds = %if.else371
  %call376 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74.650, i64 0, i64 0)) #12, !dbg !19432
  %tobool377 = icmp ne i32 %call376, 0, !dbg !19432
  br i1 %tobool377, label %if.else379, label %if.then378, !dbg !19434

if.then378:                                       ; preds = %if.else375
  %92 = load i8*, i8** %arg, align 8, !dbg !19435
  call void @donlst(i8* %92), !dbg !19438
  br label %if.end663, !dbg !19439

if.else379:                                       ; preds = %if.else375
  %call380 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.75.651, i64 0, i64 0)) #12, !dbg !19440
  %tobool381 = icmp ne i32 %call380, 0, !dbg !19440
  br i1 %tobool381, label %if.else383, label %if.then382, !dbg !19442

if.then382:                                       ; preds = %if.else379
  %93 = load i8*, i8** %arg, align 8, !dbg !19443
  call void @parse_file_time_change(i8* %93), !dbg !19445
  br label %if.end662, !dbg !19446

if.else383:                                       ; preds = %if.else379
  %call384 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.76.652, i64 0, i64 0)) #12, !dbg !19447
  %tobool385 = icmp ne i32 %call384, 0, !dbg !19447
  br i1 %tobool385, label %if.else394, label %if.then386, !dbg !19449

if.then386:                                       ; preds = %if.else383
  %94 = load i8*, i8** %arg, align 8, !dbg !19450
  %95 = load i8, i8* %94, align 1, !dbg !19453
  %conv387 = sext i8 %95 to i32, !dbg !19453
  %cmp388 = icmp ne i32 %conv387, 0, !dbg !19454
  br i1 %cmp388, label %cond.true390, label %cond.false391, !dbg !19453

cond.true390:                                     ; preds = %if.then386
  %96 = load i8*, i8** %arg, align 8, !dbg !19455
  br label %cond.end392, !dbg !19453

cond.false391:                                    ; preds = %if.then386
  br label %cond.end392, !dbg !19453

cond.end392:                                      ; preds = %cond.false391, %cond.true390
  %cond393 = phi i8* [ %96, %cond.true390 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.77.653, i64 0, i64 0), %cond.false391 ], !dbg !19453
  call void @domlst(i8* %cond393), !dbg !19456
  br label %if.end661, !dbg !19457

if.else394:                                       ; preds = %if.else383
  %call395 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.78.654, i64 0, i64 0)) #12, !dbg !19458
  %tobool396 = icmp ne i32 %call395, 0, !dbg !19458
  br i1 %tobool396, label %if.else405, label %if.then397, !dbg !19460

if.then397:                                       ; preds = %if.else394
  %97 = load i8*, i8** %arg, align 8, !dbg !19461
  %98 = load i8, i8* %97, align 1, !dbg !19464
  %conv398 = sext i8 %98 to i32, !dbg !19464
  %cmp399 = icmp ne i32 %conv398, 0, !dbg !19465
  br i1 %cmp399, label %cond.true401, label %cond.false402, !dbg !19464

cond.true401:                                     ; preds = %if.then397
  %99 = load i8*, i8** %arg, align 8, !dbg !19466
  br label %cond.end403, !dbg !19464

cond.false402:                                    ; preds = %if.then397
  br label %cond.end403, !dbg !19464

cond.end403:                                      ; preds = %cond.false402, %cond.true401
  %cond404 = phi i8* [ %99, %cond.true401 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.77.653, i64 0, i64 0), %cond.false402 ], !dbg !19464
  call void @domlsd(i8* %cond404), !dbg !19467
  br label %if.end660, !dbg !19468

if.else405:                                       ; preds = %if.else394
  %call406 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.79.655, i64 0, i64 0)) #12, !dbg !19469
  %tobool407 = icmp ne i32 %call406, 0, !dbg !19469
  br i1 %tobool407, label %if.else409, label %if.then408, !dbg !19471

if.then408:                                       ; preds = %if.else405
  call void @addreply_noformat(i32 226, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.80.656, i64 0, i64 0)), !dbg !19472
  br label %if.end659, !dbg !19474

if.else409:                                       ; preds = %if.else405
  %call410 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.81.657, i64 0, i64 0)) #12, !dbg !19475
  %tobool411 = icmp ne i32 %call410, 0, !dbg !19475
  br i1 %tobool411, label %if.else619, label %if.then412, !dbg !19477

if.then412:                                       ; preds = %if.else409
  %100 = load i8*, i8** %arg, align 8, !dbg !19478
  store i8* %100, i8** %sitearg, align 8, !dbg !19481
  %cmp413 = icmp ne i8* %100, null, !dbg !19482
  br i1 %cmp413, label %if.then415, label %if.end437, !dbg !19483

if.then415:                                       ; preds = %if.then412
  br label %while.cond416, !dbg !19484

while.cond416:                                    ; preds = %while.body429, %if.then415
  %101 = load i8*, i8** %sitearg, align 8, !dbg !19486
  %102 = load i8, i8* %101, align 1, !dbg !19487
  %conv417 = sext i8 %102 to i32, !dbg !19487
  %cmp418 = icmp ne i32 %conv417, 0, !dbg !19488
  br i1 %cmp418, label %land.rhs420, label %land.end428, !dbg !19489

land.rhs420:                                      ; preds = %while.cond416
  %call421 = call i16** @__ctype_b_loc() #14, !dbg !19490
  %103 = load i16*, i16** %call421, align 8, !dbg !19490
  %104 = load i8*, i8** %sitearg, align 8, !dbg !19490
  %105 = load i8, i8* %104, align 1, !dbg !19490
  %conv422 = zext i8 %105 to i32, !dbg !19490
  %idxprom423 = sext i32 %conv422 to i64, !dbg !19490
  %arrayidx424 = getelementptr i16, i16* %103, i64 %idxprom423, !dbg !19490
  %106 = load i16, i16* %arrayidx424, align 2, !dbg !19490
  %conv425 = zext i16 %106 to i32, !dbg !19490
  %and426 = and i32 %conv425, 8192, !dbg !19490
  %tobool427 = icmp ne i32 %and426, 0, !dbg !19491
  %lnot = xor i1 %tobool427, true, !dbg !19491
  br label %land.end428

land.end428:                                      ; preds = %land.rhs420, %while.cond416
  %107 = phi i1 [ false, %while.cond416 ], [ %lnot, %land.rhs420 ], !dbg !19492
  br i1 %107, label %while.body429, label %while.end430, !dbg !19484

while.body429:                                    ; preds = %land.end428
  %108 = load i8*, i8** %sitearg, align 8, !dbg !19493
  %incdec.ptr = getelementptr i8, i8* %108, i32 1, !dbg !19493
  store i8* %incdec.ptr, i8** %sitearg, align 8, !dbg !19493
  br label %while.cond416, !dbg !19484, !llvm.loop !19495

while.end430:                                     ; preds = %land.end428
  %109 = load i8*, i8** %sitearg, align 8, !dbg !19497
  %110 = load i8, i8* %109, align 1, !dbg !19499
  %conv431 = sext i8 %110 to i32, !dbg !19499
  %cmp432 = icmp ne i32 %conv431, 0, !dbg !19500
  br i1 %cmp432, label %if.then434, label %if.end436, !dbg !19501

if.then434:                                       ; preds = %while.end430
  %111 = load i8*, i8** %sitearg, align 8, !dbg !19502
  %incdec.ptr435 = getelementptr i8, i8* %111, i32 1, !dbg !19502
  store i8* %incdec.ptr435, i8** %sitearg, align 8, !dbg !19502
  store i8 0, i8* %111, align 1, !dbg !19504
  br label %if.end436, !dbg !19505

if.end436:                                        ; preds = %if.then434, %while.end430
  br label %if.end437, !dbg !19506

if.end437:                                        ; preds = %if.end436, %if.then412
  %112 = load i8*, i8** %arg, align 8, !dbg !19507
  %call438 = call i32 @strcasecmp(i8* %112, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.82.658, i64 0, i64 0)) #12, !dbg !19509
  %tobool439 = icmp ne i32 %call438, 0, !dbg !19509
  br i1 %tobool439, label %if.else464, label %if.then440, !dbg !19510

if.then440:                                       ; preds = %if.end437
  %113 = load i8*, i8** %sitearg, align 8, !dbg !19511
  %cmp441 = icmp eq i8* %113, null, !dbg !19514
  br i1 %cmp441, label %if.then447, label %lor.lhs.false443, !dbg !19515

lor.lhs.false443:                                 ; preds = %if.then440
  %114 = load i8*, i8** %sitearg, align 8, !dbg !19516
  %115 = load i8, i8* %114, align 1, !dbg !19517
  %conv444 = sext i8 %115 to i32, !dbg !19517
  %cmp445 = icmp eq i32 %conv444, 0, !dbg !19518
  br i1 %cmp445, label %if.then447, label %if.else448, !dbg !19519

if.then447:                                       ; preds = %lor.lhs.false443, %if.then440
  call void @addreply_noformat(i32 501, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.83.659, i64 0, i64 0)), !dbg !19520
  br label %if.end463, !dbg !19522

if.else448:                                       ; preds = %lor.lhs.false443
  call void @llvm.dbg.declare(metadata i64* %i, metadata !19523, metadata !DIExpression()), !dbg !19525
  store i64 0, i64* %i, align 8, !dbg !19525
  %116 = load i8*, i8** %sitearg, align 8, !dbg !19526
  %call449 = call i64 @strtoul(i8* %116, i8** %sitearg, i32 10) #7, !dbg !19527
  store i64 %call449, i64* %i, align 8, !dbg !19528
  %117 = load i8*, i8** %sitearg, align 8, !dbg !19529
  %tobool450 = icmp ne i8* %117, null, !dbg !19529
  br i1 %tobool450, label %land.lhs.true451, label %if.else455, !dbg !19531

land.lhs.true451:                                 ; preds = %if.else448
  %118 = load i8*, i8** %sitearg, align 8, !dbg !19532
  %119 = load i8, i8* %118, align 1, !dbg !19533
  %conv452 = sext i8 %119 to i32, !dbg !19533
  %tobool453 = icmp ne i32 %conv452, 0, !dbg !19533
  br i1 %tobool453, label %if.then454, label %if.else455, !dbg !19534

if.then454:                                       ; preds = %land.lhs.true451
  %120 = load i8*, i8** %sitearg, align 8, !dbg !19535
  call void (i32, i8*, ...) @addreply(i32 501, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.84.660, i64 0, i64 0), i8* %120), !dbg !19536
  br label %if.end462, !dbg !19536

if.else455:                                       ; preds = %land.lhs.true451, %if.else448
  %121 = load i64, i64* %i, align 8, !dbg !19537
  %cmp456 = icmp ugt i64 %121, 2520, !dbg !19539
  br i1 %cmp456, label %if.then458, label %if.else459, !dbg !19540

if.then458:                                       ; preds = %if.else455
  call void @addreply_noformat(i32 501, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.85.661, i64 0, i64 0)), !dbg !19541
  br label %if.end461, !dbg !19541

if.else459:                                       ; preds = %if.else455
  %122 = load i64, i64* %i, align 8, !dbg !19542
  store i64 %122, i64* @idletime, align 8, !dbg !19544
  %123 = load i64, i64* @idletime, align 8, !dbg !19545
  call void (i32, i8*, ...) @addreply(i32 200, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.86.662, i64 0, i64 0), i64 %123), !dbg !19546
  %124 = load i64, i64* @idletime, align 8, !dbg !19547
  %conv460 = uitofp i64 %124 to double, !dbg !19548
  %mul = fmul double %conv460, 2.000000e+00, !dbg !19549
  store double %mul, double* @idletime_noop, align 8, !dbg !19550
  br label %if.end461

if.end461:                                        ; preds = %if.else459, %if.then458
  br label %if.end462

if.end462:                                        ; preds = %if.end461, %if.then454
  br label %if.end463

if.end463:                                        ; preds = %if.end462, %if.then447
  br label %if.end618, !dbg !19551

if.else464:                                       ; preds = %if.end437
  %125 = load i8*, i8** %arg, align 8, !dbg !19552
  %call465 = call i32 @strcasecmp(i8* %125, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87.663, i64 0, i64 0)) #12, !dbg !19554
  %tobool466 = icmp ne i32 %call465, 0, !dbg !19554
  br i1 %tobool466, label %if.else468, label %if.then467, !dbg !19555

if.then467:                                       ; preds = %if.else464
  call void @dositetime(), !dbg !19556
  br label %if.end617, !dbg !19558

if.else468:                                       ; preds = %if.else464
  %126 = load i8*, i8** %arg, align 8, !dbg !19559
  %call469 = call i32 @strcasecmp(i8* %126, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30.606, i64 0, i64 0)) #12, !dbg !19561
  %tobool470 = icmp ne i32 %call469, 0, !dbg !19561
  br i1 %tobool470, label %if.else472, label %if.then471, !dbg !19562

if.then471:                                       ; preds = %if.else468
  br label %help_site, !dbg !19563

help_site:                                        ; preds = %if.then471, %if.then135
  call void @llvm.dbg.label(metadata !19564), !dbg !19566
  call void @addreply_noformat(i32 214, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.88.664, i64 0, i64 0)), !dbg !19567
  call void @addreply_noformat(i32 214, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.89.665, i64 0, i64 0)), !dbg !19568
  br label %if.end616, !dbg !19569

if.else472:                                       ; preds = %if.else468
  %127 = load i8*, i8** %arg, align 8, !dbg !19570
  %call473 = call i32 @strcasecmp(i8* %127, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.90.666, i64 0, i64 0)) #12, !dbg !19572
  %tobool474 = icmp ne i32 %call473, 0, !dbg !19572
  br i1 %tobool474, label %if.else528, label %if.then475, !dbg !19573

if.then475:                                       ; preds = %if.else472
  call void @llvm.dbg.declare(metadata i8** %sitearg2, metadata !19574, metadata !DIExpression()), !dbg !19576
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !19577, metadata !DIExpression()), !dbg !19578
  br label %parsechmod, !dbg !19579

parsechmod:                                       ; preds = %if.then630, %if.then475
  call void @llvm.dbg.label(metadata !19580), !dbg !19581
  %128 = load i8*, i8** %sitearg, align 8, !dbg !19582
  %cmp476 = icmp eq i8* %128, null, !dbg !19584
  br i1 %cmp476, label %if.then482, label %lor.lhs.false478, !dbg !19585

lor.lhs.false478:                                 ; preds = %parsechmod
  %129 = load i8*, i8** %sitearg, align 8, !dbg !19586
  %130 = load i8, i8* %129, align 1, !dbg !19587
  %conv479 = sext i8 %130 to i32, !dbg !19587
  %cmp480 = icmp eq i32 %conv479, 0, !dbg !19588
  br i1 %cmp480, label %if.then482, label %if.end483, !dbg !19589

if.then482:                                       ; preds = %lor.lhs.false478, %parsechmod
  call void @addreply_noformat(i32 501, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.91.667, i64 0, i64 0)), !dbg !19590
  br label %chmod_wayout, !dbg !19592

if.end483:                                        ; preds = %lor.lhs.false478
  %131 = load i8*, i8** %sitearg, align 8, !dbg !19593
  store i8* %131, i8** %sitearg2, align 8, !dbg !19594
  br label %while.cond484, !dbg !19595

while.cond484:                                    ; preds = %while.body498, %if.end483
  %132 = load i8*, i8** %sitearg2, align 8, !dbg !19596
  %133 = load i8, i8* %132, align 1, !dbg !19597
  %conv485 = sext i8 %133 to i32, !dbg !19597
  %cmp486 = icmp ne i32 %conv485, 0, !dbg !19598
  br i1 %cmp486, label %land.rhs488, label %land.end497, !dbg !19599

land.rhs488:                                      ; preds = %while.cond484
  %call489 = call i16** @__ctype_b_loc() #14, !dbg !19600
  %134 = load i16*, i16** %call489, align 8, !dbg !19600
  %135 = load i8*, i8** %sitearg2, align 8, !dbg !19600
  %136 = load i8, i8* %135, align 1, !dbg !19600
  %conv490 = zext i8 %136 to i32, !dbg !19600
  %idxprom491 = sext i32 %conv490 to i64, !dbg !19600
  %arrayidx492 = getelementptr i16, i16* %134, i64 %idxprom491, !dbg !19600
  %137 = load i16, i16* %arrayidx492, align 2, !dbg !19600
  %conv493 = zext i16 %137 to i32, !dbg !19600
  %and494 = and i32 %conv493, 8192, !dbg !19600
  %tobool495 = icmp ne i32 %and494, 0, !dbg !19601
  %lnot496 = xor i1 %tobool495, true, !dbg !19601
  br label %land.end497

land.end497:                                      ; preds = %land.rhs488, %while.cond484
  %138 = phi i1 [ false, %while.cond484 ], [ %lnot496, %land.rhs488 ], !dbg !19602
  br i1 %138, label %while.body498, label %while.end500, !dbg !19595

while.body498:                                    ; preds = %land.end497
  %139 = load i8*, i8** %sitearg2, align 8, !dbg !19603
  %incdec.ptr499 = getelementptr i8, i8* %139, i32 1, !dbg !19603
  store i8* %incdec.ptr499, i8** %sitearg2, align 8, !dbg !19603
  br label %while.cond484, !dbg !19595, !llvm.loop !19605

while.end500:                                     ; preds = %land.end497
  br label %while.cond501, !dbg !19607

while.cond501:                                    ; preds = %while.body514, %while.end500
  %140 = load i8*, i8** %sitearg2, align 8, !dbg !19608
  %141 = load i8, i8* %140, align 1, !dbg !19609
  %conv502 = sext i8 %141 to i32, !dbg !19609
  %cmp503 = icmp ne i32 %conv502, 0, !dbg !19610
  br i1 %cmp503, label %land.rhs505, label %land.end513, !dbg !19611

land.rhs505:                                      ; preds = %while.cond501
  %call506 = call i16** @__ctype_b_loc() #14, !dbg !19612
  %142 = load i16*, i16** %call506, align 8, !dbg !19612
  %143 = load i8*, i8** %sitearg2, align 8, !dbg !19612
  %144 = load i8, i8* %143, align 1, !dbg !19612
  %conv507 = zext i8 %144 to i32, !dbg !19612
  %idxprom508 = sext i32 %conv507 to i64, !dbg !19612
  %arrayidx509 = getelementptr i16, i16* %142, i64 %idxprom508, !dbg !19612
  %145 = load i16, i16* %arrayidx509, align 2, !dbg !19612
  %conv510 = zext i16 %145 to i32, !dbg !19612
  %and511 = and i32 %conv510, 8192, !dbg !19612
  %tobool512 = icmp ne i32 %and511, 0, !dbg !19611
  br label %land.end513

land.end513:                                      ; preds = %land.rhs505, %while.cond501
  %146 = phi i1 [ false, %while.cond501 ], [ %tobool512, %land.rhs505 ], !dbg !19602
  br i1 %146, label %while.body514, label %while.end516, !dbg !19607

while.body514:                                    ; preds = %land.end513
  %147 = load i8*, i8** %sitearg2, align 8, !dbg !19613
  %incdec.ptr515 = getelementptr i8, i8* %147, i32 1, !dbg !19613
  store i8* %incdec.ptr515, i8** %sitearg2, align 8, !dbg !19613
  br label %while.cond501, !dbg !19607, !llvm.loop !19615

while.end516:                                     ; preds = %land.end513
  %148 = load i8*, i8** %sitearg2, align 8, !dbg !19617
  %149 = load i8, i8* %148, align 1, !dbg !19619
  %conv517 = sext i8 %149 to i32, !dbg !19619
  %cmp518 = icmp eq i32 %conv517, 0, !dbg !19620
  br i1 %cmp518, label %if.then520, label %if.end521, !dbg !19621

if.then520:                                       ; preds = %while.end516
  call void @addreply_noformat(i32 550, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.59.635, i64 0, i64 0)), !dbg !19622
  br label %chmod_wayout, !dbg !19624

if.end521:                                        ; preds = %while.end516
  %150 = load i8*, i8** %sitearg, align 8, !dbg !19625
  %call522 = call i64 @strtoul(i8* %150, i8** null, i32 8) #7, !dbg !19626
  %conv523 = trunc i64 %call522 to i32, !dbg !19627
  store i32 %conv523, i32* %mode, align 4, !dbg !19628
  %151 = load i32, i32* %mode, align 4, !dbg !19629
  %cmp524 = icmp ugt i32 %151, 4095, !dbg !19631
  br i1 %cmp524, label %if.then526, label %if.end527, !dbg !19632

if.then526:                                       ; preds = %if.end521
  call void @addreply_noformat(i32 501, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.92.668, i64 0, i64 0)), !dbg !19633
  br label %chmod_wayout, !dbg !19635

if.end527:                                        ; preds = %if.end521
  %152 = load i8*, i8** %sitearg2, align 8, !dbg !19636
  %153 = load i32, i32* %mode, align 4, !dbg !19637
  call void @dochmod(i8* %152, i32 %153), !dbg !19638
  br label %chmod_wayout, !dbg !19638

chmod_wayout:                                     ; preds = %if.end527, %if.then526, %if.then520, %if.then482
  call void @llvm.dbg.label(metadata !19639), !dbg !19640
  br label %if.end615, !dbg !19641

if.else528:                                       ; preds = %if.else472
  %154 = load i8*, i8** %arg, align 8, !dbg !19642
  %call529 = call i32 @strcasecmp(i8* %154, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.93.669, i64 0, i64 0)) #12, !dbg !19644
  %tobool530 = icmp ne i32 %call529, 0, !dbg !19644
  br i1 %tobool530, label %if.else587, label %if.then531, !dbg !19645

if.then531:                                       ; preds = %if.else528
  call void @llvm.dbg.declare(metadata i8** %sitearg2532, metadata !19646, metadata !DIExpression()), !dbg !19648
  %155 = load i8*, i8** %sitearg, align 8, !dbg !19649
  %cmp533 = icmp eq i8* %155, null, !dbg !19651
  br i1 %cmp533, label %if.then539, label %lor.lhs.false535, !dbg !19652

lor.lhs.false535:                                 ; preds = %if.then531
  %156 = load i8*, i8** %sitearg, align 8, !dbg !19653
  %157 = load i8, i8* %156, align 1, !dbg !19654
  %conv536 = sext i8 %157 to i32, !dbg !19654
  %cmp537 = icmp eq i32 %conv536, 0, !dbg !19655
  br i1 %cmp537, label %if.then539, label %if.end540, !dbg !19656

if.then539:                                       ; preds = %lor.lhs.false535, %if.then531
  call void @addreply_noformat(i32 501, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.59.635, i64 0, i64 0)), !dbg !19657
  br label %utime_wayout, !dbg !19659

if.end540:                                        ; preds = %lor.lhs.false535
  %158 = load i8*, i8** %sitearg, align 8, !dbg !19660
  %call541 = call i8* @strrchr(i8* %158, i32 32) #12, !dbg !19662
  store i8* %call541, i8** %sitearg2532, align 8, !dbg !19663
  %cmp542 = icmp eq i8* %call541, null, !dbg !19664
  br i1 %cmp542, label %if.then547, label %lor.lhs.false544, !dbg !19665

lor.lhs.false544:                                 ; preds = %if.end540
  %159 = load i8*, i8** %sitearg2532, align 8, !dbg !19666
  %160 = load i8*, i8** %sitearg, align 8, !dbg !19667
  %cmp545 = icmp eq i8* %159, %160, !dbg !19668
  br i1 %cmp545, label %if.then547, label %if.end548, !dbg !19669

if.then547:                                       ; preds = %lor.lhs.false544, %if.end540
  call void @addreply_noformat(i32 501, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.91.667, i64 0, i64 0)), !dbg !19670
  br label %utime_wayout, !dbg !19672

if.end548:                                        ; preds = %lor.lhs.false544
  %161 = load i8*, i8** %sitearg2532, align 8, !dbg !19673
  %call549 = call i32 @strcasecmp(i8* %161, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.94.670, i64 0, i64 0)) #12, !dbg !19675
  %cmp550 = icmp ne i32 %call549, 0, !dbg !19676
  br i1 %cmp550, label %if.then552, label %if.end553, !dbg !19677

if.then552:                                       ; preds = %if.end548
  %162 = load i8*, i8** %sitearg, align 8, !dbg !19678
  call void @parse_file_time_change(i8* %162), !dbg !19680
  br label %utime_wayout, !dbg !19681

if.end553:                                        ; preds = %if.end548
  %163 = load i8*, i8** %sitearg2532, align 8, !dbg !19682
  %incdec.ptr554 = getelementptr i8, i8* %163, i32 -1, !dbg !19682
  store i8* %incdec.ptr554, i8** %sitearg2532, align 8, !dbg !19682
  store i8 0, i8* %163, align 1, !dbg !19683
  %164 = load i8*, i8** %sitearg, align 8, !dbg !19684
  %call555 = call i8* @strrchr(i8* %164, i32 32) #12, !dbg !19686
  store i8* %call555, i8** %sitearg2532, align 8, !dbg !19687
  %cmp556 = icmp eq i8* %call555, null, !dbg !19688
  br i1 %cmp556, label %if.then561, label %lor.lhs.false558, !dbg !19689

lor.lhs.false558:                                 ; preds = %if.end553
  %165 = load i8*, i8** %sitearg2532, align 8, !dbg !19690
  %166 = load i8*, i8** %sitearg, align 8, !dbg !19691
  %cmp559 = icmp eq i8* %165, %166, !dbg !19692
  br i1 %cmp559, label %if.then561, label %if.end562, !dbg !19693

if.then561:                                       ; preds = %lor.lhs.false558, %if.end553
  br label %utime_no_arg, !dbg !19694

utime_no_arg:                                     ; preds = %if.then585, %if.then579, %if.then570, %if.then561
  call void @llvm.dbg.label(metadata !19695), !dbg !19697
  call void @addreply_noformat(i32 501, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.91.667, i64 0, i64 0)), !dbg !19698
  br label %utime_wayout, !dbg !19699

if.end562:                                        ; preds = %lor.lhs.false558
  %167 = load i8*, i8** %sitearg2532, align 8, !dbg !19700
  %incdec.ptr563 = getelementptr i8, i8* %167, i32 -1, !dbg !19700
  store i8* %incdec.ptr563, i8** %sitearg2532, align 8, !dbg !19700
  store i8 0, i8* %167, align 1, !dbg !19701
  %168 = load i8*, i8** %sitearg, align 8, !dbg !19702
  %call564 = call i8* @strrchr(i8* %168, i32 32) #12, !dbg !19704
  store i8* %call564, i8** %sitearg2532, align 8, !dbg !19705
  %cmp565 = icmp eq i8* %call564, null, !dbg !19706
  br i1 %cmp565, label %if.then570, label %lor.lhs.false567, !dbg !19707

lor.lhs.false567:                                 ; preds = %if.end562
  %169 = load i8*, i8** %sitearg2532, align 8, !dbg !19708
  %170 = load i8*, i8** %sitearg, align 8, !dbg !19709
  %cmp568 = icmp eq i8* %169, %170, !dbg !19710
  br i1 %cmp568, label %if.then570, label %if.end571, !dbg !19711

if.then570:                                       ; preds = %lor.lhs.false567, %if.end562
  br label %utime_no_arg, !dbg !19712

if.end571:                                        ; preds = %lor.lhs.false567
  %171 = load i8*, i8** %sitearg2532, align 8, !dbg !19714
  %incdec.ptr572 = getelementptr i8, i8* %171, i32 -1, !dbg !19714
  store i8* %incdec.ptr572, i8** %sitearg2532, align 8, !dbg !19714
  store i8 0, i8* %171, align 1, !dbg !19715
  %172 = load i8*, i8** %sitearg, align 8, !dbg !19716
  %call573 = call i8* @strrchr(i8* %172, i32 32) #12, !dbg !19718
  store i8* %call573, i8** %sitearg2532, align 8, !dbg !19719
  %cmp574 = icmp eq i8* %call573, null, !dbg !19720
  br i1 %cmp574, label %if.then579, label %lor.lhs.false576, !dbg !19721

lor.lhs.false576:                                 ; preds = %if.end571
  %173 = load i8*, i8** %sitearg2532, align 8, !dbg !19722
  %174 = load i8*, i8** %sitearg, align 8, !dbg !19723
  %cmp577 = icmp eq i8* %173, %174, !dbg !19724
  br i1 %cmp577, label %if.then579, label %if.end580, !dbg !19725

if.then579:                                       ; preds = %lor.lhs.false576, %if.end571
  br label %utime_no_arg, !dbg !19726

if.end580:                                        ; preds = %lor.lhs.false576
  %175 = load i8*, i8** %sitearg2532, align 8, !dbg !19728
  %incdec.ptr581 = getelementptr i8, i8* %175, i32 1, !dbg !19728
  store i8* %incdec.ptr581, i8** %sitearg2532, align 8, !dbg !19728
  store i8 0, i8* %175, align 1, !dbg !19729
  %176 = load i8*, i8** %sitearg2532, align 8, !dbg !19730
  %177 = load i8, i8* %176, align 1, !dbg !19732
  %conv582 = sext i8 %177 to i32, !dbg !19732
  %cmp583 = icmp eq i32 %conv582, 0, !dbg !19733
  br i1 %cmp583, label %if.then585, label %if.end586, !dbg !19734

if.then585:                                       ; preds = %if.end580
  br label %utime_no_arg, !dbg !19735

if.end586:                                        ; preds = %if.end580
  %178 = load i8*, i8** %sitearg, align 8, !dbg !19737
  %179 = load i8*, i8** %sitearg2532, align 8, !dbg !19738
  call void @doutime(i8* %178, i8* %179), !dbg !19739
  br label %utime_wayout, !dbg !19739

utime_wayout:                                     ; preds = %if.end586, %utime_no_arg, %if.then552, %if.then547, %if.then539
  call void @llvm.dbg.label(metadata !19740), !dbg !19741
  br label %if.end614, !dbg !19742

if.else587:                                       ; preds = %if.else528
  %180 = load i8*, i8** %arg, align 8, !dbg !19743
  %call588 = call i32 @strcasecmp(i8* %180, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.95.671, i64 0, i64 0)) #12, !dbg !19745
  %tobool589 = icmp ne i32 %call588, 0, !dbg !19745
  br i1 %tobool589, label %if.else606, label %if.then590, !dbg !19746

if.then590:                                       ; preds = %if.else587
  %181 = load i8*, i8** %sitearg, align 8, !dbg !19747
  %cmp591 = icmp eq i8* %181, null, !dbg !19750
  br i1 %cmp591, label %if.then597, label %lor.lhs.false593, !dbg !19751

lor.lhs.false593:                                 ; preds = %if.then590
  %182 = load i8*, i8** %sitearg, align 8, !dbg !19752
  %183 = load i8, i8* %182, align 1, !dbg !19753
  %conv594 = sext i8 %183 to i32, !dbg !19753
  %cmp595 = icmp eq i32 %conv594, 0, !dbg !19754
  br i1 %cmp595, label %if.then597, label %if.else598, !dbg !19755

if.then597:                                       ; preds = %lor.lhs.false593, %if.then590
  call void @print_aliases(), !dbg !19756
  br label %if.end605, !dbg !19758

if.else598:                                       ; preds = %lor.lhs.false593
  call void @llvm.dbg.declare(metadata i8** %alias, metadata !19759, metadata !DIExpression()), !dbg !19761
  %184 = load i8*, i8** %sitearg, align 8, !dbg !19762
  %call599 = call i8* @lookup_alias(i8* %184), !dbg !19764
  store i8* %call599, i8** %alias, align 8, !dbg !19765
  %cmp600 = icmp ne i8* %call599, null, !dbg !19766
  br i1 %cmp600, label %if.then602, label %if.else603, !dbg !19767

if.then602:                                       ; preds = %if.else598
  %185 = load i8*, i8** %sitearg, align 8, !dbg !19768
  %186 = load i8*, i8** %alias, align 8, !dbg !19770
  call void (i32, i8*, ...) @addreply(i32 214, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.96.672, i64 0, i64 0), i8* %185, i8* %186), !dbg !19771
  br label %if.end604, !dbg !19772

if.else603:                                       ; preds = %if.else598
  %187 = load i8*, i8** %sitearg, align 8, !dbg !19773
  call void (i32, i8*, ...) @addreply(i32 502, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.97.673, i64 0, i64 0), i8* %187), !dbg !19775
  br label %if.end604

if.end604:                                        ; preds = %if.else603, %if.then602
  br label %if.end605

if.end605:                                        ; preds = %if.end604, %if.then597
  br label %if.end613, !dbg !19776

if.else606:                                       ; preds = %if.else587
  %188 = load i8*, i8** %arg, align 8, !dbg !19777
  %189 = load i8, i8* %188, align 1, !dbg !19779
  %conv607 = sext i8 %189 to i32, !dbg !19779
  %cmp608 = icmp ne i32 %conv607, 0, !dbg !19780
  br i1 %cmp608, label %if.then610, label %if.else611, !dbg !19781

if.then610:                                       ; preds = %if.else606
  %190 = load i8*, i8** %arg, align 8, !dbg !19782
  call void (i32, i8*, ...) @addreply(i32 500, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.98.674, i64 0, i64 0), i8* %190), !dbg !19784
  br label %if.end612, !dbg !19785

if.else611:                                       ; preds = %if.else606
  call void @addreply_noformat(i32 500, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.99.675, i64 0, i64 0)), !dbg !19786
  br label %if.end612

if.end612:                                        ; preds = %if.else611, %if.then610
  br label %if.end613

if.end613:                                        ; preds = %if.end612, %if.end605
  br label %if.end614

if.end614:                                        ; preds = %if.end613, %utime_wayout
  br label %if.end615

if.end615:                                        ; preds = %if.end614, %chmod_wayout
  br label %if.end616

if.end616:                                        ; preds = %if.end615, %help_site
  br label %if.end617

if.end617:                                        ; preds = %if.end616, %if.then467
  br label %if.end618

if.end618:                                        ; preds = %if.end617, %if.end463
  br label %if.end658, !dbg !19788

if.else619:                                       ; preds = %if.else409
  %call620 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.100.676, i64 0, i64 0)) #12, !dbg !19789
  %tobool621 = icmp ne i32 %call620, 0, !dbg !19789
  br i1 %tobool621, label %if.else623, label %if.then622, !dbg !19791

if.then622:                                       ; preds = %if.else619
  %191 = load i8*, i8** %arg, align 8, !dbg !19792
  call void @domdtm(i8* %191), !dbg !19794
  br label %if.end657, !dbg !19795

if.else623:                                       ; preds = %if.else619
  %call624 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101.677, i64 0, i64 0)) #12, !dbg !19796
  %tobool625 = icmp ne i32 %call624, 0, !dbg !19796
  br i1 %tobool625, label %if.else627, label %if.then626, !dbg !19798

if.then626:                                       ; preds = %if.else623
  %192 = load i8*, i8** %arg, align 8, !dbg !19799
  call void @dosize(i8* %192), !dbg !19801
  br label %if.end656, !dbg !19802

if.else627:                                       ; preds = %if.else623
  %call628 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.90.666, i64 0, i64 0)) #12, !dbg !19803
  %tobool629 = icmp ne i32 %call628, 0, !dbg !19803
  br i1 %tobool629, label %if.else631, label %if.then630, !dbg !19805

if.then630:                                       ; preds = %if.else627
  %193 = load i8*, i8** %arg, align 8, !dbg !19806
  store i8* %193, i8** %sitearg, align 8, !dbg !19808
  br label %parsechmod, !dbg !19809

if.else631:                                       ; preds = %if.else627
  %call632 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.102.678, i64 0, i64 0)) #12, !dbg !19810
  %tobool633 = icmp ne i32 %call632, 0, !dbg !19810
  br i1 %tobool633, label %if.else641, label %if.then634, !dbg !19812

if.then634:                                       ; preds = %if.else631
  %194 = load i8*, i8** %arg, align 8, !dbg !19813
  %195 = load i8, i8* %194, align 1, !dbg !19816
  %conv635 = sext i8 %195 to i32, !dbg !19816
  %cmp636 = icmp ne i32 %conv635, 0, !dbg !19817
  br i1 %cmp636, label %if.then638, label %if.else639, !dbg !19818

if.then638:                                       ; preds = %if.then634
  %196 = load i8*, i8** %arg, align 8, !dbg !19819
  call void @dornfr(i8* %196), !dbg !19821
  br label %if.end640, !dbg !19822

if.else639:                                       ; preds = %if.then634
  call void @addreply_noformat(i32 550, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.59.635, i64 0, i64 0)), !dbg !19823
  br label %if.end640

if.end640:                                        ; preds = %if.else639, %if.then638
  br label %if.end654, !dbg !19825

if.else641:                                       ; preds = %if.else631
  %call642 = call i32 @strcmp(i8* getelementptr inbounds ([4128 x i8], [4128 x i8]* @cmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.103.679, i64 0, i64 0)) #12, !dbg !19826
  %tobool643 = icmp ne i32 %call642, 0, !dbg !19826
  br i1 %tobool643, label %if.else652, label %if.then644, !dbg !19828

if.then644:                                       ; preds = %if.else641
  %197 = load i8*, i8** %arg, align 8, !dbg !19829
  %call645 = call i8* @revealextraspc(i8* %197), !dbg !19831
  store i8* %call645, i8** %arg, align 8, !dbg !19832
  %198 = load i8*, i8** %arg, align 8, !dbg !19833
  %199 = load i8, i8* %198, align 1, !dbg !19835
  %conv646 = sext i8 %199 to i32, !dbg !19835
  %cmp647 = icmp ne i32 %conv646, 0, !dbg !19836
  br i1 %cmp647, label %if.then649, label %if.else650, !dbg !19837

if.then649:                                       ; preds = %if.then644
  %200 = load i8*, i8** %arg, align 8, !dbg !19838
  call void @dornto(i8* %200), !dbg !19840
  br label %if.end651, !dbg !19841

if.else650:                                       ; preds = %if.then644
  call void @addreply_noformat(i32 550, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.59.635, i64 0, i64 0)), !dbg !19842
  br label %if.end651

if.end651:                                        ; preds = %if.else650, %if.then649
  br label %if.end653, !dbg !19844

if.else652:                                       ; preds = %if.else641
  call void @addreply_noformat(i32 500, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.104.680, i64 0, i64 0)), !dbg !19845
  br label %if.end653

if.end653:                                        ; preds = %if.else652, %if.end651
  br label %if.end654

if.end654:                                        ; preds = %if.end653, %if.end640
  br label %if.end655

if.end655:                                        ; preds = %if.end654
  br label %if.end656

if.end656:                                        ; preds = %if.end655, %if.then626
  br label %if.end657

if.end657:                                        ; preds = %if.end656, %if.then622
  br label %if.end658

if.end658:                                        ; preds = %if.end657, %if.end618
  br label %if.end659

if.end659:                                        ; preds = %if.end658, %if.then408
  br label %if.end660

if.end660:                                        ; preds = %if.end659, %cond.end403
  br label %if.end661

if.end661:                                        ; preds = %if.end660, %cond.end392
  br label %if.end662

if.end662:                                        ; preds = %if.end661, %if.then382
  br label %if.end663

if.end663:                                        ; preds = %if.end662, %if.then378
  br label %if.end664

if.end664:                                        ; preds = %if.end663, %if.then374
  br label %if.end665

if.end665:                                        ; preds = %if.end664, %if.end370
  br label %if.end666

if.end666:                                        ; preds = %if.end665, %if.end360
  br label %if.end667

if.end667:                                        ; preds = %if.end666, %if.end347
  br label %if.end668

if.end668:                                        ; preds = %if.end667, %if.then333
  br label %if.end669

if.end669:                                        ; preds = %if.end668, %if.end329
  br label %if.end670

if.end670:                                        ; preds = %if.end669, %if.end318
  br label %if.end671

if.end671:                                        ; preds = %if.end670, %if.end306
  br label %if.end672

if.end672:                                        ; preds = %if.end671
  br label %if.end673

if.end673:                                        ; preds = %if.end672, %if.end286
  br label %if.end674

if.end674:                                        ; preds = %if.end673, %if.then276
  br label %if.end675

if.end675:                                        ; preds = %if.end674
  br label %if.end676

if.end676:                                        ; preds = %if.end675, %if.end262
  br label %if.end677

if.end677:                                        ; preds = %if.end676, %if.then246
  br label %if.end678

if.end678:                                        ; preds = %if.end677, %if.end238
  br label %if.end679

if.end679:                                        ; preds = %if.end678, %if.end209
  br label %if.end680

if.end680:                                        ; preds = %if.end679, %if.then181
  br label %if.end681

if.end681:                                        ; preds = %if.end680, %if.then170
  br label %if.end682

if.end682:                                        ; preds = %if.end681, %if.then166
  br label %if.end683

if.end683:                                        ; preds = %if.end682, %if.then155
  br label %if.end684

if.end684:                                        ; preds = %if.end683, %if.then151
  br label %if.end685

if.end685:                                        ; preds = %if.end684
  br label %if.end686

if.end686:                                        ; preds = %if.end685
  br label %if.end687

if.end687:                                        ; preds = %if.end686
  br label %if.end688

if.end688:                                        ; preds = %if.end687
  br label %if.end689

if.end689:                                        ; preds = %if.end688
  br label %if.end690

if.end690:                                        ; preds = %if.end689
  br label %if.end691

if.end691:                                        ; preds = %if.end690
  br label %if.end692

if.end692:                                        ; preds = %if.end691
  br label %if.end693

if.end693:                                        ; preds = %if.end692
  br label %if.end694

if.end694:                                        ; preds = %if.end693, %if.then89
  br label %if.end695

if.end695:                                        ; preds = %if.end694
  br label %if.end696

if.end696:                                        ; preds = %if.end695
  br label %if.end697

if.end697:                                        ; preds = %if.end696, %if.end72
  br label %if.end698

if.end698:                                        ; preds = %if.end697, %if.then63
  br label %if.end699

if.end699:                                        ; preds = %if.end698, %if.then59
  store i64 -1, i64* @noopidle, align 8, !dbg !19847
  br label %wayout, !dbg !19848

wayout:                                           ; preds = %if.end699, %if.end296, %if.then269, %if.then236, %if.then147, %if.then140, %if.then109, %if.then105, %if.then101, %if.then97, %if.then93, %if.then82, %if.then55
  call void @llvm.dbg.label(metadata !19849), !dbg !19850
  br label %for.cond, !dbg !19851, !llvm.loop !18911

return:                                           ; preds = %if.then76, %sw.bb2
  ret void, !dbg !19852
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal void @antiidle() #0 !dbg !19853 {
entry:
  %0 = load i64, i64* @noopidle, align 8, !dbg !19854
  %cmp = icmp eq i64 %0, -1, !dbg !19856
  br i1 %cmp, label %if.then, label %if.else, !dbg !19857

if.then:                                          ; preds = %entry
  %call = call i64 @time(i64* null) #7, !dbg !19858
  store i64 %call, i64* @noopidle, align 8, !dbg !19860
  br label %if.end6, !dbg !19861

if.else:                                          ; preds = %entry
  %call1 = call i64 @time(i64* null) #7, !dbg !19862
  %1 = load i64, i64* @noopidle, align 8, !dbg !19865
  %sub = sub i64 %call1, %1, !dbg !19866
  %2 = load double, double* @idletime_noop, align 8, !dbg !19867
  %conv = fptosi double %2 to i64, !dbg !19868
  %cmp2 = icmp sgt i64 %sub, %conv, !dbg !19869
  br i1 %cmp2, label %if.then4, label %if.end, !dbg !19870

if.then4:                                         ; preds = %if.else
  %3 = load double, double* @idletime_noop, align 8, !dbg !19871
  %conv5 = fptoui double %3 to i64, !dbg !19873
  call void (i32, i32, i8*, ...) @die(i32 421, i32 6, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.105.681, i64 0, i64 0), i64 %conv5) #11, !dbg !19874
  unreachable, !dbg !19874

if.end:                                           ; preds = %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then
  ret void, !dbg !19875
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal void @randomdelay() #0 !dbg !19876 {
entry:
  ret void, !dbg !19877
}

; Function Attrs: nounwind
declare i32 @access(i8*, i32) #2

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal i8* @revealextraspc(i8* %s_) #0 !dbg !19878 {
entry:
  %retval = alloca i8*, align 8
  %s_.addr = alloca i8*, align 8
  %s = alloca i8*, align 8
  %sn = alloca i8*, align 8
  store i8* %s_, i8** %s_.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s_.addr, metadata !19879, metadata !DIExpression()), !dbg !19880
  call void @llvm.dbg.declare(metadata i8** %s, metadata !19881, metadata !DIExpression()), !dbg !19882
  %0 = load i8*, i8** %s_.addr, align 8, !dbg !19883
  store i8* %0, i8** %s, align 8, !dbg !19882
  call void @llvm.dbg.declare(metadata i8** %sn, metadata !19884, metadata !DIExpression()), !dbg !19885
  %1 = load i8*, i8** %s, align 8, !dbg !19886
  %cmp = icmp eq i8* %1, null, !dbg !19888
  br i1 %cmp, label %if.then, label %if.end, !dbg !19889

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %s_.addr, align 8, !dbg !19890
  store i8* %2, i8** %retval, align 8, !dbg !19892
  br label %return, !dbg !19892

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %s_.addr, align 8, !dbg !19893
  call void @simplify(i8* %3), !dbg !19894
  br label %while.cond, !dbg !19895

while.cond:                                       ; preds = %while.body, %if.end
  %4 = load i8*, i8** %s, align 8, !dbg !19896
  %5 = load i8, i8* %4, align 1, !dbg !19897
  %conv = zext i8 %5 to i32, !dbg !19897
  %cmp1 = icmp ne i32 %conv, 0, !dbg !19898
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !19899

land.rhs:                                         ; preds = %while.cond
  %call = call i16** @__ctype_b_loc() #14, !dbg !19900
  %6 = load i16*, i16** %call, align 8, !dbg !19900
  %7 = load i8*, i8** %s, align 8, !dbg !19900
  %8 = load i8, i8* %7, align 1, !dbg !19900
  %conv3 = zext i8 %8 to i32, !dbg !19900
  %idxprom = sext i32 %conv3 to i64, !dbg !19900
  %arrayidx = getelementptr i16, i16* %6, i64 %idxprom, !dbg !19900
  %9 = load i16, i16* %arrayidx, align 2, !dbg !19900
  %conv4 = zext i16 %9 to i32, !dbg !19900
  %and = and i32 %conv4, 8192, !dbg !19900
  %tobool = icmp ne i32 %and, 0, !dbg !19899
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %10 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ], !dbg !19901
  br i1 %10, label %while.body, label %while.end, !dbg !19895

while.body:                                       ; preds = %land.end
  %11 = load i8*, i8** %s, align 8, !dbg !19902
  %incdec.ptr = getelementptr i8, i8* %11, i32 1, !dbg !19902
  store i8* %incdec.ptr, i8** %s, align 8, !dbg !19902
  store i8 95, i8* %11, align 1, !dbg !19904
  br label %while.cond, !dbg !19895, !llvm.loop !19905

while.end:                                        ; preds = %land.end
  %12 = load i8*, i8** %s, align 8, !dbg !19907
  %13 = load i8, i8* %12, align 1, !dbg !19909
  %conv5 = zext i8 %13 to i32, !dbg !19909
  %cmp6 = icmp eq i32 %conv5, 0, !dbg !19910
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !19911

if.then8:                                         ; preds = %while.end
  %14 = load i8*, i8** %s_.addr, align 8, !dbg !19912
  store i8* %14, i8** %retval, align 8, !dbg !19914
  br label %return, !dbg !19914

if.end9:                                          ; preds = %while.end
  %15 = load i8*, i8** %s, align 8, !dbg !19915
  store i8* %15, i8** %sn, align 8, !dbg !19916
  br label %do.body, !dbg !19917

do.body:                                          ; preds = %do.cond, %if.end9
  %16 = load i8*, i8** %sn, align 8, !dbg !19918
  %incdec.ptr10 = getelementptr i8, i8* %16, i32 1, !dbg !19918
  store i8* %incdec.ptr10, i8** %sn, align 8, !dbg !19918
  br label %do.cond, !dbg !19920

do.cond:                                          ; preds = %do.body
  %17 = load i8*, i8** %sn, align 8, !dbg !19921
  %18 = load i8, i8* %17, align 1, !dbg !19922
  %conv11 = zext i8 %18 to i32, !dbg !19922
  %cmp12 = icmp ne i32 %conv11, 0, !dbg !19923
  br i1 %cmp12, label %do.body, label %do.end, !dbg !19920, !llvm.loop !19924

do.end:                                           ; preds = %do.cond
  br label %do.body14, !dbg !19926

do.body14:                                        ; preds = %do.cond25, %do.end
  %19 = load i8*, i8** %sn, align 8, !dbg !19927
  %incdec.ptr15 = getelementptr i8, i8* %19, i32 -1, !dbg !19927
  store i8* %incdec.ptr15, i8** %sn, align 8, !dbg !19927
  %call16 = call i16** @__ctype_b_loc() #14, !dbg !19929
  %20 = load i16*, i16** %call16, align 8, !dbg !19929
  %21 = load i8*, i8** %sn, align 8, !dbg !19929
  %22 = load i8, i8* %21, align 1, !dbg !19929
  %conv17 = zext i8 %22 to i32, !dbg !19929
  %idxprom18 = sext i32 %conv17 to i64, !dbg !19929
  %arrayidx19 = getelementptr i16, i16* %20, i64 %idxprom18, !dbg !19929
  %23 = load i16, i16* %arrayidx19, align 2, !dbg !19929
  %conv20 = zext i16 %23 to i32, !dbg !19929
  %and21 = and i32 %conv20, 8192, !dbg !19929
  %tobool22 = icmp ne i32 %and21, 0, !dbg !19929
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !19931

if.then23:                                        ; preds = %do.body14
  br label %do.end28, !dbg !19932

if.end24:                                         ; preds = %do.body14
  %24 = load i8*, i8** %sn, align 8, !dbg !19934
  store i8 95, i8* %24, align 1, !dbg !19935
  br label %do.cond25, !dbg !19936

do.cond25:                                        ; preds = %if.end24
  %25 = load i8*, i8** %sn, align 8, !dbg !19937
  %26 = load i8*, i8** %s, align 8, !dbg !19938
  %cmp26 = icmp ne i8* %25, %26, !dbg !19939
  br i1 %cmp26, label %do.body14, label %do.end28, !dbg !19936, !llvm.loop !19940

do.end28:                                         ; preds = %do.cond25, %if.then23
  %27 = load i8*, i8** %s_.addr, align 8, !dbg !19942
  store i8* %27, i8** %retval, align 8, !dbg !19943
  br label %return, !dbg !19943

return:                                           ; preds = %do.end28, %if.then8, %if.then
  %28 = load i8*, i8** %retval, align 8, !dbg !19944
  ret i8* %28, !dbg !19944
}

; Function Attrs: noinline nounwind optnone sspreq uwtable
define internal void @parse_file_time_change(i8* %arg) #0 !dbg !19945 {
entry:
  %arg.addr = alloca i8*, align 8
  %name = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !19946, metadata !DIExpression()), !dbg !19947
  call void @llvm.dbg.declare(metadata i8** %name, metadata !19948, metadata !DIExpression()), !dbg !19949
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !19950
  %call = call i8* @strchr(i8* %0, i32 32) #12, !dbg !19952
  store i8* %call, i8** %name, align 8, !dbg !19953
  %cmp = icmp eq i8* %call, null, !dbg !19954
  br i1 %cmp, label %if.then, label %if.end, !dbg !19955

if.then:                                          ; preds = %entry
  call void @addreply_noformat(i32 501, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.91.667, i64 0, i64 0)), !dbg !19956
  br label %return, !dbg !19958

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !19959

while.cond:                                       ; preds = %while.body, %if.end
  %1 = load i8*, i8** %name, align 8, !dbg !19960
  %2 = load i8, i8* %1, align 1, !dbg !19961
  %conv = sext i8 %2 to i32, !dbg !19961
  %cmp1 = icmp eq i32 %conv, 32, !dbg !19962
  br i1 %cmp1, label %while.body, label %while.end, !dbg !19959

while.body:                                       ; preds = %while.cond
  %3 = load i8*, i8** %name, align 8, !dbg !19963
  %incdec.ptr = getelementptr i8, i8* %3, i32 1, !dbg !19963
  store i8* %incdec.ptr, i8** %name, align 8, !dbg !19963
  br label %while.cond, !dbg !19959, !llvm.loop !19965

while.end:                                        ; preds = %while.cond
  %4 = load i8*, i8** %name, align 8, !dbg !19967
  %5 = load i8, i8* %4, align 1, !dbg !19969
  %conv3 = sext i8 %5 to i32, !dbg !19969
  %cmp4 = icmp eq i32 %conv3, 0, !dbg !19970
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !19971

if.then6:                                         ; preds = %while.end
  call void @addreply_noformat(i32 501, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.91.667, i64 0, i64 0)), !dbg !19972
  br label %return, !dbg !19974

if.end7:                                          ; preds = %while.end
  %6 = load i8*, i8** %name, align 8, !dbg !19975
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !19976
  call void @doutime(i8* %6, i8* %7), !dbg !19977
  br label %return, !dbg !19978

return:                                           ; preds = %if.end7, %if.then6, %if.then
  ret void, !dbg !19978
}

attributes #0 = { noinline nounwind optnone sspreq uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noinline noreturn nounwind optnone sspreq uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind willreturn }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn }
attributes #12 = { nounwind readonly }
attributes #13 = { noreturn nounwind }
attributes #14 = { nounwind readnone }

!llvm.dbg.cu = !{!971, !2, !973, !1007, !817, !1010, !1015, !1063, !900, !1065, !1123, !918, !937, !965}
!llvm.ident = !{!1126, !1126, !1126, !1126, !1126, !1126, !1126, !1126, !1126, !1126, !1126, !1126, !1126, !1126}
!llvm.module.flags = !{!1127, !1128, !1129, !1130, !1131}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "prioritynames", scope: !2, file: !402, line: 74, type: !814, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !302, globals: !399, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "ftpd.c", directory: "/home/songxiangpu/Documents/protocol_implementation/pure-ftpd/src")
!4 = !{!5, !21, !33, !62, !280}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 46, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20}
!9 = !DIEnumerator(name: "_ISupper", value: 256, isUnsigned: true)
!10 = !DIEnumerator(name: "_ISlower", value: 512, isUnsigned: true)
!11 = !DIEnumerator(name: "_ISalpha", value: 1024, isUnsigned: true)
!12 = !DIEnumerator(name: "_ISdigit", value: 2048, isUnsigned: true)
!13 = !DIEnumerator(name: "_ISxdigit", value: 4096, isUnsigned: true)
!14 = !DIEnumerator(name: "_ISspace", value: 8192, isUnsigned: true)
!15 = !DIEnumerator(name: "_ISprint", value: 16384, isUnsigned: true)
!16 = !DIEnumerator(name: "_ISgraph", value: 32768, isUnsigned: true)
!17 = !DIEnumerator(name: "_ISblank", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "_IScntrl", value: 2, isUnsigned: true)
!19 = !DIEnumerator(name: "_ISpunct", value: 4, isUnsigned: true)
!20 = !DIEnumerator(name: "_ISalnum", value: 8, isUnsigned: true)
!21 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__socket_type", file: !22, line: 24, baseType: !7, size: 32, elements: !23)
!22 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/socket_type.h", directory: "")
!23 = !{!24, !25, !26, !27, !28, !29, !30, !31, !32}
!24 = !DIEnumerator(name: "SOCK_STREAM", value: 1, isUnsigned: true)
!25 = !DIEnumerator(name: "SOCK_DGRAM", value: 2, isUnsigned: true)
!26 = !DIEnumerator(name: "SOCK_RAW", value: 3, isUnsigned: true)
!27 = !DIEnumerator(name: "SOCK_RDM", value: 4, isUnsigned: true)
!28 = !DIEnumerator(name: "SOCK_SEQPACKET", value: 5, isUnsigned: true)
!29 = !DIEnumerator(name: "SOCK_DCCP", value: 6, isUnsigned: true)
!30 = !DIEnumerator(name: "SOCK_PACKET", value: 10, isUnsigned: true)
!31 = !DIEnumerator(name: "SOCK_CLOEXEC", value: 524288, isUnsigned: true)
!32 = !DIEnumerator(name: "SOCK_NONBLOCK", value: 2048, isUnsigned: true)
!33 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !34, line: 40, baseType: !7, size: 32, elements: !35)
!34 = !DIFile(filename: "/usr/include/netinet/in.h", directory: "")
!35 = !{!36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61}
!36 = !DIEnumerator(name: "IPPROTO_IP", value: 0, isUnsigned: true)
!37 = !DIEnumerator(name: "IPPROTO_ICMP", value: 1, isUnsigned: true)
!38 = !DIEnumerator(name: "IPPROTO_IGMP", value: 2, isUnsigned: true)
!39 = !DIEnumerator(name: "IPPROTO_IPIP", value: 4, isUnsigned: true)
!40 = !DIEnumerator(name: "IPPROTO_TCP", value: 6, isUnsigned: true)
!41 = !DIEnumerator(name: "IPPROTO_EGP", value: 8, isUnsigned: true)
!42 = !DIEnumerator(name: "IPPROTO_PUP", value: 12, isUnsigned: true)
!43 = !DIEnumerator(name: "IPPROTO_UDP", value: 17, isUnsigned: true)
!44 = !DIEnumerator(name: "IPPROTO_IDP", value: 22, isUnsigned: true)
!45 = !DIEnumerator(name: "IPPROTO_TP", value: 29, isUnsigned: true)
!46 = !DIEnumerator(name: "IPPROTO_DCCP", value: 33, isUnsigned: true)
!47 = !DIEnumerator(name: "IPPROTO_IPV6", value: 41, isUnsigned: true)
!48 = !DIEnumerator(name: "IPPROTO_RSVP", value: 46, isUnsigned: true)
!49 = !DIEnumerator(name: "IPPROTO_GRE", value: 47, isUnsigned: true)
!50 = !DIEnumerator(name: "IPPROTO_ESP", value: 50, isUnsigned: true)
!51 = !DIEnumerator(name: "IPPROTO_AH", value: 51, isUnsigned: true)
!52 = !DIEnumerator(name: "IPPROTO_MTP", value: 92, isUnsigned: true)
!53 = !DIEnumerator(name: "IPPROTO_BEETPH", value: 94, isUnsigned: true)
!54 = !DIEnumerator(name: "IPPROTO_ENCAP", value: 98, isUnsigned: true)
!55 = !DIEnumerator(name: "IPPROTO_PIM", value: 103, isUnsigned: true)
!56 = !DIEnumerator(name: "IPPROTO_COMP", value: 108, isUnsigned: true)
!57 = !DIEnumerator(name: "IPPROTO_SCTP", value: 132, isUnsigned: true)
!58 = !DIEnumerator(name: "IPPROTO_UDPLITE", value: 136, isUnsigned: true)
!59 = !DIEnumerator(name: "IPPROTO_MPLS", value: 137, isUnsigned: true)
!60 = !DIEnumerator(name: "IPPROTO_RAW", value: 255, isUnsigned: true)
!61 = !DIEnumerator(name: "IPPROTO_MAX", value: 256, isUnsigned: true)
!62 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !63, line: 71, baseType: !7, size: 32, elements: !64)
!63 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/confname.h", directory: "")
!64 = !{!65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279}
!65 = !DIEnumerator(name: "_SC_ARG_MAX", value: 0, isUnsigned: true)
!66 = !DIEnumerator(name: "_SC_CHILD_MAX", value: 1, isUnsigned: true)
!67 = !DIEnumerator(name: "_SC_CLK_TCK", value: 2, isUnsigned: true)
!68 = !DIEnumerator(name: "_SC_NGROUPS_MAX", value: 3, isUnsigned: true)
!69 = !DIEnumerator(name: "_SC_OPEN_MAX", value: 4, isUnsigned: true)
!70 = !DIEnumerator(name: "_SC_STREAM_MAX", value: 5, isUnsigned: true)
!71 = !DIEnumerator(name: "_SC_TZNAME_MAX", value: 6, isUnsigned: true)
!72 = !DIEnumerator(name: "_SC_JOB_CONTROL", value: 7, isUnsigned: true)
!73 = !DIEnumerator(name: "_SC_SAVED_IDS", value: 8, isUnsigned: true)
!74 = !DIEnumerator(name: "_SC_REALTIME_SIGNALS", value: 9, isUnsigned: true)
!75 = !DIEnumerator(name: "_SC_PRIORITY_SCHEDULING", value: 10, isUnsigned: true)
!76 = !DIEnumerator(name: "_SC_TIMERS", value: 11, isUnsigned: true)
!77 = !DIEnumerator(name: "_SC_ASYNCHRONOUS_IO", value: 12, isUnsigned: true)
!78 = !DIEnumerator(name: "_SC_PRIORITIZED_IO", value: 13, isUnsigned: true)
!79 = !DIEnumerator(name: "_SC_SYNCHRONIZED_IO", value: 14, isUnsigned: true)
!80 = !DIEnumerator(name: "_SC_FSYNC", value: 15, isUnsigned: true)
!81 = !DIEnumerator(name: "_SC_MAPPED_FILES", value: 16, isUnsigned: true)
!82 = !DIEnumerator(name: "_SC_MEMLOCK", value: 17, isUnsigned: true)
!83 = !DIEnumerator(name: "_SC_MEMLOCK_RANGE", value: 18, isUnsigned: true)
!84 = !DIEnumerator(name: "_SC_MEMORY_PROTECTION", value: 19, isUnsigned: true)
!85 = !DIEnumerator(name: "_SC_MESSAGE_PASSING", value: 20, isUnsigned: true)
!86 = !DIEnumerator(name: "_SC_SEMAPHORES", value: 21, isUnsigned: true)
!87 = !DIEnumerator(name: "_SC_SHARED_MEMORY_OBJECTS", value: 22, isUnsigned: true)
!88 = !DIEnumerator(name: "_SC_AIO_LISTIO_MAX", value: 23, isUnsigned: true)
!89 = !DIEnumerator(name: "_SC_AIO_MAX", value: 24, isUnsigned: true)
!90 = !DIEnumerator(name: "_SC_AIO_PRIO_DELTA_MAX", value: 25, isUnsigned: true)
!91 = !DIEnumerator(name: "_SC_DELAYTIMER_MAX", value: 26, isUnsigned: true)
!92 = !DIEnumerator(name: "_SC_MQ_OPEN_MAX", value: 27, isUnsigned: true)
!93 = !DIEnumerator(name: "_SC_MQ_PRIO_MAX", value: 28, isUnsigned: true)
!94 = !DIEnumerator(name: "_SC_VERSION", value: 29, isUnsigned: true)
!95 = !DIEnumerator(name: "_SC_PAGESIZE", value: 30, isUnsigned: true)
!96 = !DIEnumerator(name: "_SC_RTSIG_MAX", value: 31, isUnsigned: true)
!97 = !DIEnumerator(name: "_SC_SEM_NSEMS_MAX", value: 32, isUnsigned: true)
!98 = !DIEnumerator(name: "_SC_SEM_VALUE_MAX", value: 33, isUnsigned: true)
!99 = !DIEnumerator(name: "_SC_SIGQUEUE_MAX", value: 34, isUnsigned: true)
!100 = !DIEnumerator(name: "_SC_TIMER_MAX", value: 35, isUnsigned: true)
!101 = !DIEnumerator(name: "_SC_BC_BASE_MAX", value: 36, isUnsigned: true)
!102 = !DIEnumerator(name: "_SC_BC_DIM_MAX", value: 37, isUnsigned: true)
!103 = !DIEnumerator(name: "_SC_BC_SCALE_MAX", value: 38, isUnsigned: true)
!104 = !DIEnumerator(name: "_SC_BC_STRING_MAX", value: 39, isUnsigned: true)
!105 = !DIEnumerator(name: "_SC_COLL_WEIGHTS_MAX", value: 40, isUnsigned: true)
!106 = !DIEnumerator(name: "_SC_EQUIV_CLASS_MAX", value: 41, isUnsigned: true)
!107 = !DIEnumerator(name: "_SC_EXPR_NEST_MAX", value: 42, isUnsigned: true)
!108 = !DIEnumerator(name: "_SC_LINE_MAX", value: 43, isUnsigned: true)
!109 = !DIEnumerator(name: "_SC_RE_DUP_MAX", value: 44, isUnsigned: true)
!110 = !DIEnumerator(name: "_SC_CHARCLASS_NAME_MAX", value: 45, isUnsigned: true)
!111 = !DIEnumerator(name: "_SC_2_VERSION", value: 46, isUnsigned: true)
!112 = !DIEnumerator(name: "_SC_2_C_BIND", value: 47, isUnsigned: true)
!113 = !DIEnumerator(name: "_SC_2_C_DEV", value: 48, isUnsigned: true)
!114 = !DIEnumerator(name: "_SC_2_FORT_DEV", value: 49, isUnsigned: true)
!115 = !DIEnumerator(name: "_SC_2_FORT_RUN", value: 50, isUnsigned: true)
!116 = !DIEnumerator(name: "_SC_2_SW_DEV", value: 51, isUnsigned: true)
!117 = !DIEnumerator(name: "_SC_2_LOCALEDEF", value: 52, isUnsigned: true)
!118 = !DIEnumerator(name: "_SC_PII", value: 53, isUnsigned: true)
!119 = !DIEnumerator(name: "_SC_PII_XTI", value: 54, isUnsigned: true)
!120 = !DIEnumerator(name: "_SC_PII_SOCKET", value: 55, isUnsigned: true)
!121 = !DIEnumerator(name: "_SC_PII_INTERNET", value: 56, isUnsigned: true)
!122 = !DIEnumerator(name: "_SC_PII_OSI", value: 57, isUnsigned: true)
!123 = !DIEnumerator(name: "_SC_POLL", value: 58, isUnsigned: true)
!124 = !DIEnumerator(name: "_SC_SELECT", value: 59, isUnsigned: true)
!125 = !DIEnumerator(name: "_SC_UIO_MAXIOV", value: 60, isUnsigned: true)
!126 = !DIEnumerator(name: "_SC_IOV_MAX", value: 60, isUnsigned: true)
!127 = !DIEnumerator(name: "_SC_PII_INTERNET_STREAM", value: 61, isUnsigned: true)
!128 = !DIEnumerator(name: "_SC_PII_INTERNET_DGRAM", value: 62, isUnsigned: true)
!129 = !DIEnumerator(name: "_SC_PII_OSI_COTS", value: 63, isUnsigned: true)
!130 = !DIEnumerator(name: "_SC_PII_OSI_CLTS", value: 64, isUnsigned: true)
!131 = !DIEnumerator(name: "_SC_PII_OSI_M", value: 65, isUnsigned: true)
!132 = !DIEnumerator(name: "_SC_T_IOV_MAX", value: 66, isUnsigned: true)
!133 = !DIEnumerator(name: "_SC_THREADS", value: 67, isUnsigned: true)
!134 = !DIEnumerator(name: "_SC_THREAD_SAFE_FUNCTIONS", value: 68, isUnsigned: true)
!135 = !DIEnumerator(name: "_SC_GETGR_R_SIZE_MAX", value: 69, isUnsigned: true)
!136 = !DIEnumerator(name: "_SC_GETPW_R_SIZE_MAX", value: 70, isUnsigned: true)
!137 = !DIEnumerator(name: "_SC_LOGIN_NAME_MAX", value: 71, isUnsigned: true)
!138 = !DIEnumerator(name: "_SC_TTY_NAME_MAX", value: 72, isUnsigned: true)
!139 = !DIEnumerator(name: "_SC_THREAD_DESTRUCTOR_ITERATIONS", value: 73, isUnsigned: true)
!140 = !DIEnumerator(name: "_SC_THREAD_KEYS_MAX", value: 74, isUnsigned: true)
!141 = !DIEnumerator(name: "_SC_THREAD_STACK_MIN", value: 75, isUnsigned: true)
!142 = !DIEnumerator(name: "_SC_THREAD_THREADS_MAX", value: 76, isUnsigned: true)
!143 = !DIEnumerator(name: "_SC_THREAD_ATTR_STACKADDR", value: 77, isUnsigned: true)
!144 = !DIEnumerator(name: "_SC_THREAD_ATTR_STACKSIZE", value: 78, isUnsigned: true)
!145 = !DIEnumerator(name: "_SC_THREAD_PRIORITY_SCHEDULING", value: 79, isUnsigned: true)
!146 = !DIEnumerator(name: "_SC_THREAD_PRIO_INHERIT", value: 80, isUnsigned: true)
!147 = !DIEnumerator(name: "_SC_THREAD_PRIO_PROTECT", value: 81, isUnsigned: true)
!148 = !DIEnumerator(name: "_SC_THREAD_PROCESS_SHARED", value: 82, isUnsigned: true)
!149 = !DIEnumerator(name: "_SC_NPROCESSORS_CONF", value: 83, isUnsigned: true)
!150 = !DIEnumerator(name: "_SC_NPROCESSORS_ONLN", value: 84, isUnsigned: true)
!151 = !DIEnumerator(name: "_SC_PHYS_PAGES", value: 85, isUnsigned: true)
!152 = !DIEnumerator(name: "_SC_AVPHYS_PAGES", value: 86, isUnsigned: true)
!153 = !DIEnumerator(name: "_SC_ATEXIT_MAX", value: 87, isUnsigned: true)
!154 = !DIEnumerator(name: "_SC_PASS_MAX", value: 88, isUnsigned: true)
!155 = !DIEnumerator(name: "_SC_XOPEN_VERSION", value: 89, isUnsigned: true)
!156 = !DIEnumerator(name: "_SC_XOPEN_XCU_VERSION", value: 90, isUnsigned: true)
!157 = !DIEnumerator(name: "_SC_XOPEN_UNIX", value: 91, isUnsigned: true)
!158 = !DIEnumerator(name: "_SC_XOPEN_CRYPT", value: 92, isUnsigned: true)
!159 = !DIEnumerator(name: "_SC_XOPEN_ENH_I18N", value: 93, isUnsigned: true)
!160 = !DIEnumerator(name: "_SC_XOPEN_SHM", value: 94, isUnsigned: true)
!161 = !DIEnumerator(name: "_SC_2_CHAR_TERM", value: 95, isUnsigned: true)
!162 = !DIEnumerator(name: "_SC_2_C_VERSION", value: 96, isUnsigned: true)
!163 = !DIEnumerator(name: "_SC_2_UPE", value: 97, isUnsigned: true)
!164 = !DIEnumerator(name: "_SC_XOPEN_XPG2", value: 98, isUnsigned: true)
!165 = !DIEnumerator(name: "_SC_XOPEN_XPG3", value: 99, isUnsigned: true)
!166 = !DIEnumerator(name: "_SC_XOPEN_XPG4", value: 100, isUnsigned: true)
!167 = !DIEnumerator(name: "_SC_CHAR_BIT", value: 101, isUnsigned: true)
!168 = !DIEnumerator(name: "_SC_CHAR_MAX", value: 102, isUnsigned: true)
!169 = !DIEnumerator(name: "_SC_CHAR_MIN", value: 103, isUnsigned: true)
!170 = !DIEnumerator(name: "_SC_INT_MAX", value: 104, isUnsigned: true)
!171 = !DIEnumerator(name: "_SC_INT_MIN", value: 105, isUnsigned: true)
!172 = !DIEnumerator(name: "_SC_LONG_BIT", value: 106, isUnsigned: true)
!173 = !DIEnumerator(name: "_SC_WORD_BIT", value: 107, isUnsigned: true)
!174 = !DIEnumerator(name: "_SC_MB_LEN_MAX", value: 108, isUnsigned: true)
!175 = !DIEnumerator(name: "_SC_NZERO", value: 109, isUnsigned: true)
!176 = !DIEnumerator(name: "_SC_SSIZE_MAX", value: 110, isUnsigned: true)
!177 = !DIEnumerator(name: "_SC_SCHAR_MAX", value: 111, isUnsigned: true)
!178 = !DIEnumerator(name: "_SC_SCHAR_MIN", value: 112, isUnsigned: true)
!179 = !DIEnumerator(name: "_SC_SHRT_MAX", value: 113, isUnsigned: true)
!180 = !DIEnumerator(name: "_SC_SHRT_MIN", value: 114, isUnsigned: true)
!181 = !DIEnumerator(name: "_SC_UCHAR_MAX", value: 115, isUnsigned: true)
!182 = !DIEnumerator(name: "_SC_UINT_MAX", value: 116, isUnsigned: true)
!183 = !DIEnumerator(name: "_SC_ULONG_MAX", value: 117, isUnsigned: true)
!184 = !DIEnumerator(name: "_SC_USHRT_MAX", value: 118, isUnsigned: true)
!185 = !DIEnumerator(name: "_SC_NL_ARGMAX", value: 119, isUnsigned: true)
!186 = !DIEnumerator(name: "_SC_NL_LANGMAX", value: 120, isUnsigned: true)
!187 = !DIEnumerator(name: "_SC_NL_MSGMAX", value: 121, isUnsigned: true)
!188 = !DIEnumerator(name: "_SC_NL_NMAX", value: 122, isUnsigned: true)
!189 = !DIEnumerator(name: "_SC_NL_SETMAX", value: 123, isUnsigned: true)
!190 = !DIEnumerator(name: "_SC_NL_TEXTMAX", value: 124, isUnsigned: true)
!191 = !DIEnumerator(name: "_SC_XBS5_ILP32_OFF32", value: 125, isUnsigned: true)
!192 = !DIEnumerator(name: "_SC_XBS5_ILP32_OFFBIG", value: 126, isUnsigned: true)
!193 = !DIEnumerator(name: "_SC_XBS5_LP64_OFF64", value: 127, isUnsigned: true)
!194 = !DIEnumerator(name: "_SC_XBS5_LPBIG_OFFBIG", value: 128, isUnsigned: true)
!195 = !DIEnumerator(name: "_SC_XOPEN_LEGACY", value: 129, isUnsigned: true)
!196 = !DIEnumerator(name: "_SC_XOPEN_REALTIME", value: 130, isUnsigned: true)
!197 = !DIEnumerator(name: "_SC_XOPEN_REALTIME_THREADS", value: 131, isUnsigned: true)
!198 = !DIEnumerator(name: "_SC_ADVISORY_INFO", value: 132, isUnsigned: true)
!199 = !DIEnumerator(name: "_SC_BARRIERS", value: 133, isUnsigned: true)
!200 = !DIEnumerator(name: "_SC_BASE", value: 134, isUnsigned: true)
!201 = !DIEnumerator(name: "_SC_C_LANG_SUPPORT", value: 135, isUnsigned: true)
!202 = !DIEnumerator(name: "_SC_C_LANG_SUPPORT_R", value: 136, isUnsigned: true)
!203 = !DIEnumerator(name: "_SC_CLOCK_SELECTION", value: 137, isUnsigned: true)
!204 = !DIEnumerator(name: "_SC_CPUTIME", value: 138, isUnsigned: true)
!205 = !DIEnumerator(name: "_SC_THREAD_CPUTIME", value: 139, isUnsigned: true)
!206 = !DIEnumerator(name: "_SC_DEVICE_IO", value: 140, isUnsigned: true)
!207 = !DIEnumerator(name: "_SC_DEVICE_SPECIFIC", value: 141, isUnsigned: true)
!208 = !DIEnumerator(name: "_SC_DEVICE_SPECIFIC_R", value: 142, isUnsigned: true)
!209 = !DIEnumerator(name: "_SC_FD_MGMT", value: 143, isUnsigned: true)
!210 = !DIEnumerator(name: "_SC_FIFO", value: 144, isUnsigned: true)
!211 = !DIEnumerator(name: "_SC_PIPE", value: 145, isUnsigned: true)
!212 = !DIEnumerator(name: "_SC_FILE_ATTRIBUTES", value: 146, isUnsigned: true)
!213 = !DIEnumerator(name: "_SC_FILE_LOCKING", value: 147, isUnsigned: true)
!214 = !DIEnumerator(name: "_SC_FILE_SYSTEM", value: 148, isUnsigned: true)
!215 = !DIEnumerator(name: "_SC_MONOTONIC_CLOCK", value: 149, isUnsigned: true)
!216 = !DIEnumerator(name: "_SC_MULTI_PROCESS", value: 150, isUnsigned: true)
!217 = !DIEnumerator(name: "_SC_SINGLE_PROCESS", value: 151, isUnsigned: true)
!218 = !DIEnumerator(name: "_SC_NETWORKING", value: 152, isUnsigned: true)
!219 = !DIEnumerator(name: "_SC_READER_WRITER_LOCKS", value: 153, isUnsigned: true)
!220 = !DIEnumerator(name: "_SC_SPIN_LOCKS", value: 154, isUnsigned: true)
!221 = !DIEnumerator(name: "_SC_REGEXP", value: 155, isUnsigned: true)
!222 = !DIEnumerator(name: "_SC_REGEX_VERSION", value: 156, isUnsigned: true)
!223 = !DIEnumerator(name: "_SC_SHELL", value: 157, isUnsigned: true)
!224 = !DIEnumerator(name: "_SC_SIGNALS", value: 158, isUnsigned: true)
!225 = !DIEnumerator(name: "_SC_SPAWN", value: 159, isUnsigned: true)
!226 = !DIEnumerator(name: "_SC_SPORADIC_SERVER", value: 160, isUnsigned: true)
!227 = !DIEnumerator(name: "_SC_THREAD_SPORADIC_SERVER", value: 161, isUnsigned: true)
!228 = !DIEnumerator(name: "_SC_SYSTEM_DATABASE", value: 162, isUnsigned: true)
!229 = !DIEnumerator(name: "_SC_SYSTEM_DATABASE_R", value: 163, isUnsigned: true)
!230 = !DIEnumerator(name: "_SC_TIMEOUTS", value: 164, isUnsigned: true)
!231 = !DIEnumerator(name: "_SC_TYPED_MEMORY_OBJECTS", value: 165, isUnsigned: true)
!232 = !DIEnumerator(name: "_SC_USER_GROUPS", value: 166, isUnsigned: true)
!233 = !DIEnumerator(name: "_SC_USER_GROUPS_R", value: 167, isUnsigned: true)
!234 = !DIEnumerator(name: "_SC_2_PBS", value: 168, isUnsigned: true)
!235 = !DIEnumerator(name: "_SC_2_PBS_ACCOUNTING", value: 169, isUnsigned: true)
!236 = !DIEnumerator(name: "_SC_2_PBS_LOCATE", value: 170, isUnsigned: true)
!237 = !DIEnumerator(name: "_SC_2_PBS_MESSAGE", value: 171, isUnsigned: true)
!238 = !DIEnumerator(name: "_SC_2_PBS_TRACK", value: 172, isUnsigned: true)
!239 = !DIEnumerator(name: "_SC_SYMLOOP_MAX", value: 173, isUnsigned: true)
!240 = !DIEnumerator(name: "_SC_STREAMS", value: 174, isUnsigned: true)
!241 = !DIEnumerator(name: "_SC_2_PBS_CHECKPOINT", value: 175, isUnsigned: true)
!242 = !DIEnumerator(name: "_SC_V6_ILP32_OFF32", value: 176, isUnsigned: true)
!243 = !DIEnumerator(name: "_SC_V6_ILP32_OFFBIG", value: 177, isUnsigned: true)
!244 = !DIEnumerator(name: "_SC_V6_LP64_OFF64", value: 178, isUnsigned: true)
!245 = !DIEnumerator(name: "_SC_V6_LPBIG_OFFBIG", value: 179, isUnsigned: true)
!246 = !DIEnumerator(name: "_SC_HOST_NAME_MAX", value: 180, isUnsigned: true)
!247 = !DIEnumerator(name: "_SC_TRACE", value: 181, isUnsigned: true)
!248 = !DIEnumerator(name: "_SC_TRACE_EVENT_FILTER", value: 182, isUnsigned: true)
!249 = !DIEnumerator(name: "_SC_TRACE_INHERIT", value: 183, isUnsigned: true)
!250 = !DIEnumerator(name: "_SC_TRACE_LOG", value: 184, isUnsigned: true)
!251 = !DIEnumerator(name: "_SC_LEVEL1_ICACHE_SIZE", value: 185, isUnsigned: true)
!252 = !DIEnumerator(name: "_SC_LEVEL1_ICACHE_ASSOC", value: 186, isUnsigned: true)
!253 = !DIEnumerator(name: "_SC_LEVEL1_ICACHE_LINESIZE", value: 187, isUnsigned: true)
!254 = !DIEnumerator(name: "_SC_LEVEL1_DCACHE_SIZE", value: 188, isUnsigned: true)
!255 = !DIEnumerator(name: "_SC_LEVEL1_DCACHE_ASSOC", value: 189, isUnsigned: true)
!256 = !DIEnumerator(name: "_SC_LEVEL1_DCACHE_LINESIZE", value: 190, isUnsigned: true)
!257 = !DIEnumerator(name: "_SC_LEVEL2_CACHE_SIZE", value: 191, isUnsigned: true)
!258 = !DIEnumerator(name: "_SC_LEVEL2_CACHE_ASSOC", value: 192, isUnsigned: true)
!259 = !DIEnumerator(name: "_SC_LEVEL2_CACHE_LINESIZE", value: 193, isUnsigned: true)
!260 = !DIEnumerator(name: "_SC_LEVEL3_CACHE_SIZE", value: 194, isUnsigned: true)
!261 = !DIEnumerator(name: "_SC_LEVEL3_CACHE_ASSOC", value: 195, isUnsigned: true)
!262 = !DIEnumerator(name: "_SC_LEVEL3_CACHE_LINESIZE", value: 196, isUnsigned: true)
!263 = !DIEnumerator(name: "_SC_LEVEL4_CACHE_SIZE", value: 197, isUnsigned: true)
!264 = !DIEnumerator(name: "_SC_LEVEL4_CACHE_ASSOC", value: 198, isUnsigned: true)
!265 = !DIEnumerator(name: "_SC_LEVEL4_CACHE_LINESIZE", value: 199, isUnsigned: true)
!266 = !DIEnumerator(name: "_SC_IPV6", value: 235, isUnsigned: true)
!267 = !DIEnumerator(name: "_SC_RAW_SOCKETS", value: 236, isUnsigned: true)
!268 = !DIEnumerator(name: "_SC_V7_ILP32_OFF32", value: 237, isUnsigned: true)
!269 = !DIEnumerator(name: "_SC_V7_ILP32_OFFBIG", value: 238, isUnsigned: true)
!270 = !DIEnumerator(name: "_SC_V7_LP64_OFF64", value: 239, isUnsigned: true)
!271 = !DIEnumerator(name: "_SC_V7_LPBIG_OFFBIG", value: 240, isUnsigned: true)
!272 = !DIEnumerator(name: "_SC_SS_REPL_MAX", value: 241, isUnsigned: true)
!273 = !DIEnumerator(name: "_SC_TRACE_EVENT_NAME_MAX", value: 242, isUnsigned: true)
!274 = !DIEnumerator(name: "_SC_TRACE_NAME_MAX", value: 243, isUnsigned: true)
!275 = !DIEnumerator(name: "_SC_TRACE_SYS_MAX", value: 244, isUnsigned: true)
!276 = !DIEnumerator(name: "_SC_TRACE_USER_EVENT_MAX", value: 245, isUnsigned: true)
!277 = !DIEnumerator(name: "_SC_XOPEN_STREAMS", value: 246, isUnsigned: true)
!278 = !DIEnumerator(name: "_SC_THREAD_ROBUST_PRIO_INHERIT", value: 247, isUnsigned: true)
!279 = !DIEnumerator(name: "_SC_THREAD_ROBUST_PRIO_PROTECT", value: 248, isUnsigned: true)
!280 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__rlimit_resource", file: !281, line: 31, baseType: !7, size: 32, elements: !282)
!281 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/resource.h", directory: "")
!282 = !{!283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301}
!283 = !DIEnumerator(name: "RLIMIT_CPU", value: 0, isUnsigned: true)
!284 = !DIEnumerator(name: "RLIMIT_FSIZE", value: 1, isUnsigned: true)
!285 = !DIEnumerator(name: "RLIMIT_DATA", value: 2, isUnsigned: true)
!286 = !DIEnumerator(name: "RLIMIT_STACK", value: 3, isUnsigned: true)
!287 = !DIEnumerator(name: "RLIMIT_CORE", value: 4, isUnsigned: true)
!288 = !DIEnumerator(name: "__RLIMIT_RSS", value: 5, isUnsigned: true)
!289 = !DIEnumerator(name: "RLIMIT_NOFILE", value: 7, isUnsigned: true)
!290 = !DIEnumerator(name: "__RLIMIT_OFILE", value: 7, isUnsigned: true)
!291 = !DIEnumerator(name: "RLIMIT_AS", value: 9, isUnsigned: true)
!292 = !DIEnumerator(name: "__RLIMIT_NPROC", value: 6, isUnsigned: true)
!293 = !DIEnumerator(name: "__RLIMIT_MEMLOCK", value: 8, isUnsigned: true)
!294 = !DIEnumerator(name: "__RLIMIT_LOCKS", value: 10, isUnsigned: true)
!295 = !DIEnumerator(name: "__RLIMIT_SIGPENDING", value: 11, isUnsigned: true)
!296 = !DIEnumerator(name: "__RLIMIT_MSGQUEUE", value: 12, isUnsigned: true)
!297 = !DIEnumerator(name: "__RLIMIT_NICE", value: 13, isUnsigned: true)
!298 = !DIEnumerator(name: "__RLIMIT_RTPRIO", value: 14, isUnsigned: true)
!299 = !DIEnumerator(name: "__RLIMIT_RTTIME", value: 15, isUnsigned: true)
!300 = !DIEnumerator(name: "__RLIMIT_NLIMITS", value: 16, isUnsigned: true)
!301 = !DIEnumerator(name: "__RLIM_NLIMITS", value: 16, isUnsigned: true)
!302 = !{!303, !304, !307, !308, !310, !314, !326, !321, !7, !327, !330, !335, !336, !331, !337, !306, !340, !343, !344, !347, !348, !350, !359, !361, !382, !383, !385, !387, !392, !334, !394, !396, !397}
!303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!304 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !305, line: 46, baseType: !306)
!305 = !DIFile(filename: "/usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h", directory: "")
!306 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!307 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 64)
!309 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!310 = !DIDerivedType(tag: DW_TAG_typedef, name: "socklen_t", file: !311, line: 274, baseType: !312)
!311 = !DIFile(filename: "/usr/include/unistd.h", directory: "")
!312 = !DIDerivedType(tag: DW_TAG_typedef, name: "__socklen_t", file: !313, line: 209, baseType: !7)
!313 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 64)
!315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !316, line: 178, size: 128, elements: !317)
!316 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/socket.h", directory: "")
!317 = !{!318, !322}
!318 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !315, file: !316, line: 180, baseType: !319, size: 16)
!319 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !320, line: 28, baseType: !321)
!320 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/sockaddr.h", directory: "")
!321 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !315, file: !316, line: 181, baseType: !323, size: 112, offset: 16)
!323 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 112, elements: !324)
!324 = !{!325}
!325 = !DISubrange(count: 14)
!326 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!327 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !328, line: 26, baseType: !329)
!328 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!329 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !313, line: 42, baseType: !7)
!330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 64)
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !332, line: 7, baseType: !333)
!332 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/time_t.h", directory: "")
!333 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !313, line: 160, baseType: !334)
!334 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!335 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!336 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!337 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !338, line: 79, baseType: !339)
!338 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "")
!339 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !313, line: 146, baseType: !7)
!340 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_port_t", file: !34, line: 119, baseType: !341)
!341 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !328, line: 25, baseType: !342)
!342 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !313, line: 40, baseType: !321)
!343 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_addr_t", file: !34, line: 30, baseType: !327)
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !345, line: 63, baseType: !346)
!345 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!346 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !313, line: 152, baseType: !334)
!347 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!348 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !338, line: 69, baseType: !349)
!349 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !313, line: 150, baseType: !7)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 64)
!351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reply", file: !352, line: 57, size: 128, elements: !353)
!352 = !DIFile(filename: "./ftpd_p.h", directory: "/home/songxiangpu/Documents/protocol_implementation/pure-ftpd/src")
!353 = !{!354, !355}
!354 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !351, file: !352, line: 58, baseType: !350, size: 64)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !351, file: !352, line: 59, baseType: !356, size: 8, offset: 64)
!356 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 8, elements: !357)
!357 = !{!358}
!358 = !DISubrange(count: 1)
!359 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !338, line: 64, baseType: !360)
!360 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !313, line: 147, baseType: !7)
!361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !362, size: 64)
!362 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !363)
!363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !34, line: 212, size: 128, elements: !364)
!364 = !{!365}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "__in6_u", scope: !363, file: !34, line: 219, baseType: !366, size: 128)
!366 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !363, file: !34, line: 214, size: 128, elements: !367)
!367 = !{!368, !374, !378}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr8", scope: !366, file: !34, line: 216, baseType: !369, size: 128)
!369 = !DICompositeType(tag: DW_TAG_array_type, baseType: !370, size: 128, elements: !372)
!370 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !328, line: 24, baseType: !371)
!371 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !313, line: 38, baseType: !307)
!372 = !{!373}
!373 = !DISubrange(count: 16)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr16", scope: !366, file: !34, line: 217, baseType: !375, size: 128)
!375 = !DICompositeType(tag: DW_TAG_array_type, baseType: !341, size: 128, elements: !376)
!376 = !{!377}
!377 = !DISubrange(count: 8)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr32", scope: !366, file: !34, line: 218, baseType: !379, size: 128)
!379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !327, size: 128, elements: !380)
!380 = !{!381}
!381 = !DISubrange(count: 4)
!382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !307, size: 64)
!383 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !345, line: 77, baseType: !384)
!384 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !313, line: 193, baseType: !334)
!385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !386, size: 64)
!386 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !309)
!387 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !388, line: 72, baseType: !389)
!388 = !DIFile(filename: "/usr/include/signal.h", directory: "")
!389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !390, size: 64)
!390 = !DISubroutineType(types: !391)
!391 = !{null, !326}
!392 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !338, line: 97, baseType: !393)
!393 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !313, line: 154, baseType: !326)
!394 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fd_mask", file: !395, line: 49, baseType: !334)
!395 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/select.h", directory: "")
!396 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 64)
!398 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !370)
!399 = !{!0, !400, !411, !417, !419, !421, !423, !426, !428, !430, !432, !434, !436, !438, !440, !442, !444, !446, !448, !451, !453, !455, !457, !459, !464, !466, !472, !479, !483, !488, !496, !498, !508, !510, !512, !562, !564, !566, !568, !570, !572, !574, !577, !580, !585, !587, !589, !591, !593, !595, !597, !599, !604, !609, !611, !613, !618, !620, !622, !624, !626, !628, !630, !632, !634, !636, !638, !640, !642, !644, !646, !648, !650, !652, !657, !659, !661, !663, !665, !667, !669, !671, !673, !675, !677, !679, !681, !683, !685, !687, !689, !691, !693, !695, !697, !699, !701, !703, !705, !707, !709, !711, !713, !715, !717, !722, !724, !726, !736, !744, !752, !755, !761, !763, !765, !778, !780, !793, !795, !800, !805}
!400 = !DIGlobalVariableExpression(var: !401, expr: !DIExpression())
!401 = distinct !DIGlobalVariable(name: "facilitynames", scope: !2, file: !402, line: 122, type: !403, isLocal: false, isDefinition: true)
!402 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/syslog.h", directory: "")
!403 = !DICompositeType(tag: DW_TAG_array_type, baseType: !404, size: 2944, elements: !409)
!404 = !DIDerivedType(tag: DW_TAG_typedef, name: "CODE", file: !402, line: 72, baseType: !405)
!405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_code", file: !402, line: 69, size: 128, elements: !406)
!406 = !{!407, !408}
!407 = !DIDerivedType(tag: DW_TAG_member, name: "c_name", scope: !405, file: !402, line: 70, baseType: !308, size: 64)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "c_val", scope: !405, file: !402, line: 71, baseType: !326, size: 32, offset: 64)
!409 = !{!410}
!410 = !DISubrange(count: 23)
!411 = !DIGlobalVariableExpression(var: !412, expr: !DIExpression())
!412 = distinct !DIGlobalVariable(name: "default_tz_for_putenv", scope: !2, file: !413, line: 12, type: !414, isLocal: false, isDefinition: true)
!413 = !DIFile(filename: "./globals.h", directory: "/home/songxiangpu/Documents/protocol_implementation/pure-ftpd/src")
!414 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 104, elements: !415)
!415 = !{!416}
!416 = !DISubrange(count: 13)
!417 = !DIGlobalVariableExpression(var: !418, expr: !DIExpression())
!418 = distinct !DIGlobalVariable(name: "fd_inputFile", scope: !2, file: !413, line: 25, type: !326, isLocal: false, isDefinition: true)
!419 = !DIGlobalVariableExpression(var: !420, expr: !DIExpression())
!420 = distinct !DIGlobalVariable(name: "clientfd", scope: !2, file: !413, line: 32, type: !326, isLocal: false, isDefinition: true)
!421 = !DIGlobalVariableExpression(var: !422, expr: !DIExpression())
!422 = distinct !DIGlobalVariable(name: "datafd", scope: !2, file: !413, line: 33, type: !326, isLocal: false, isDefinition: true)
!423 = !DIGlobalVariableExpression(var: !424, expr: !DIExpression())
!424 = distinct !DIGlobalVariable(name: "cmdsize", scope: !2, file: !413, line: 38, type: !425, isLocal: false, isDefinition: true)
!425 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !304)
!426 = !DIGlobalVariableExpression(var: !427, expr: !DIExpression())
!427 = distinct !DIGlobalVariable(name: "noopidle", scope: !2, file: !413, line: 58, type: !331, isLocal: false, isDefinition: true)
!428 = !DIGlobalVariableExpression(var: !429, expr: !DIExpression())
!429 = distinct !DIGlobalVariable(name: "firstport", scope: !2, file: !413, line: 59, type: !7, isLocal: false, isDefinition: true)
!430 = !DIGlobalVariableExpression(var: !431, expr: !DIExpression())
!431 = distinct !DIGlobalVariable(name: "lastport", scope: !2, file: !413, line: 60, type: !7, isLocal: false, isDefinition: true)
!432 = !DIGlobalVariableExpression(var: !433, expr: !DIExpression())
!433 = distinct !DIGlobalVariable(name: "dot_write_ok", scope: !2, file: !413, line: 61, type: !396, isLocal: false, isDefinition: true)
!434 = !DIGlobalVariableExpression(var: !435, expr: !DIExpression())
!435 = distinct !DIGlobalVariable(name: "dot_read_ok", scope: !2, file: !413, line: 62, type: !396, isLocal: false, isDefinition: true)
!436 = !DIGlobalVariableExpression(var: !437, expr: !DIExpression())
!437 = distinct !DIGlobalVariable(name: "type", scope: !2, file: !413, line: 66, type: !396, isLocal: false, isDefinition: true)
!438 = !DIGlobalVariableExpression(var: !439, expr: !DIExpression())
!439 = distinct !DIGlobalVariable(name: "idletime", scope: !2, file: !413, line: 78, type: !306, isLocal: false, isDefinition: true)
!440 = !DIGlobalVariableExpression(var: !441, expr: !DIExpression())
!441 = distinct !DIGlobalVariable(name: "resolve_hostnames", scope: !2, file: !413, line: 80, type: !396, isLocal: false, isDefinition: true)
!442 = !DIGlobalVariableExpression(var: !443, expr: !DIExpression())
!443 = distinct !DIGlobalVariable(name: "max_ls_files", scope: !2, file: !413, line: 82, type: !7, isLocal: false, isDefinition: true)
!444 = !DIGlobalVariableExpression(var: !445, expr: !DIExpression())
!445 = distinct !DIGlobalVariable(name: "max_ls_depth", scope: !2, file: !413, line: 83, type: !7, isLocal: false, isDefinition: true)
!446 = !DIGlobalVariableExpression(var: !447, expr: !DIExpression())
!447 = distinct !DIGlobalVariable(name: "maxusers", scope: !2, file: !413, line: 93, type: !7, isLocal: false, isDefinition: true)
!448 = !DIGlobalVariableExpression(var: !449, expr: !DIExpression())
!449 = distinct !DIGlobalVariable(name: "xferfd", scope: !2, file: !413, line: 100, type: !450, isLocal: false, isDefinition: true)
!450 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !326)
!451 = !DIGlobalVariableExpression(var: !452, expr: !DIExpression())
!452 = distinct !DIGlobalVariable(name: "u_mask", scope: !2, file: !413, line: 113, type: !348, isLocal: false, isDefinition: true)
!453 = !DIGlobalVariableExpression(var: !454, expr: !DIExpression())
!454 = distinct !DIGlobalVariable(name: "u_mask_d", scope: !2, file: !413, line: 114, type: !348, isLocal: false, isDefinition: true)
!455 = !DIGlobalVariableExpression(var: !456, expr: !DIExpression())
!456 = distinct !DIGlobalVariable(name: "state_needs_update", scope: !2, file: !413, line: 115, type: !396, isLocal: false, isDefinition: true)
!457 = !DIGlobalVariableExpression(var: !458, expr: !DIExpression())
!458 = distinct !DIGlobalVariable(name: "syslog_facility", scope: !2, file: !413, line: 117, type: !326, isLocal: false, isDefinition: true)
!459 = !DIGlobalVariableExpression(var: !460, expr: !DIExpression())
!460 = distinct !DIGlobalVariable(name: "months", scope: !2, file: !413, line: 161, type: !461, isLocal: false, isDefinition: true)
!461 = !DICompositeType(tag: DW_TAG_array_type, baseType: !385, size: 768, elements: !462)
!462 = !{!463}
!463 = !DISubrange(count: 12)
!464 = !DIGlobalVariableExpression(var: !465, expr: !DIExpression())
!465 = distinct !DIGlobalVariable(name: "pid_file", scope: !2, file: !413, line: 172, type: !385, isLocal: false, isDefinition: true)
!466 = !DIGlobalVariableExpression(var: !467, expr: !DIExpression())
!467 = distinct !DIGlobalVariable(name: "tapping", scope: !468, file: !3, line: 1695, type: !7, isLocal: true, isDefinition: true)
!468 = distinct !DISubprogram(name: "dopass", scope: !3, file: !3, line: 1693, type: !469, scopeLine: 1694, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!469 = !DISubroutineType(types: !470)
!470 = !{null, !308}
!471 = !{}
!472 = !DIGlobalVariableExpression(var: !473, expr: !DIExpression())
!473 = distinct !DIGlobalVariable(name: "root_st_dev", scope: !474, file: !3, line: 2546, type: !477, isLocal: true, isDefinition: true)
!474 = distinct !DISubprogram(name: "dochmod", scope: !3, file: !3, line: 2544, type: !475, scopeLine: 2545, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!475 = !DISubroutineType(types: !476)
!476 = !{null, !308, !348}
!477 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !338, line: 59, baseType: !478)
!478 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !313, line: 145, baseType: !306)
!479 = !DIGlobalVariableExpression(var: !480, expr: !DIExpression())
!480 = distinct !DIGlobalVariable(name: "root_st_ino", scope: !474, file: !3, line: 2547, type: !481, isLocal: true, isDefinition: true)
!481 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !338, line: 47, baseType: !482)
!482 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !313, line: 148, baseType: !306)
!483 = !DIGlobalVariableExpression(var: !484, expr: !DIExpression())
!484 = distinct !DIGlobalVariable(name: "seq", scope: !485, file: !3, line: 3594, type: !7, isLocal: true, isDefinition: true)
!485 = distinct !DISubprogram(name: "dostou", scope: !3, file: !3, line: 3591, type: !486, scopeLine: 3592, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!486 = !DISubroutineType(types: !487)
!487 = !{null}
!488 = !DIGlobalVariableExpression(var: !489, expr: !DIExpression())
!489 = distinct !DIGlobalVariable(name: "_A", scope: !490, file: !3, line: 6270, type: !494, isLocal: true, isDefinition: true)
!490 = distinct !DISubprogram(name: "pureftpd_start", scope: !3, file: !3, line: 5524, type: !491, scopeLine: 5525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!491 = !DISubroutineType(types: !492)
!492 = !{!326, !326, !493, !385}
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 64)
!494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !495, size: 64)
!495 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !309)
!496 = !DIGlobalVariableExpression(var: !497, expr: !DIExpression())
!497 = distinct !DIGlobalVariable(name: "standalone_ip", scope: !2, file: !352, line: 51, type: !385, isLocal: true, isDefinition: true)
!498 = !DIGlobalVariableExpression(var: !499, expr: !DIExpression())
!499 = distinct !DIGlobalVariable(name: "old_sigmask", scope: !2, file: !352, line: 222, type: !500, isLocal: true, isDefinition: true)
!500 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !501, line: 7, baseType: !502)
!501 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/sigset_t.h", directory: "")
!502 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigset_t", file: !503, line: 8, baseType: !504)
!503 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h", directory: "")
!504 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !503, line: 5, size: 1024, elements: !505)
!505 = !{!506}
!506 = !DIDerivedType(tag: DW_TAG_member, name: "__val", scope: !504, file: !503, line: 7, baseType: !507, size: 1024)
!507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !306, size: 1024, elements: !372)
!508 = !DIGlobalVariableExpression(var: !509, expr: !DIExpression())
!509 = distinct !DIGlobalVariable(name: "argv0", scope: !2, file: !352, line: 226, type: !493, isLocal: true, isDefinition: true)
!510 = !DIGlobalVariableExpression(var: !511, expr: !DIExpression())
!511 = distinct !DIGlobalVariable(name: "argv_lth", scope: !2, file: !352, line: 227, type: !304, isLocal: true, isDefinition: true)
!512 = !DIGlobalVariableExpression(var: !513, expr: !DIExpression())
!513 = distinct !DIGlobalVariable(name: "first_authentications", scope: !2, file: !352, line: 287, type: !514, isLocal: true, isDefinition: true)
!514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !515, size: 64)
!515 = !DIDerivedType(tag: DW_TAG_typedef, name: "Authentications", file: !352, line: 285, baseType: !516)
!516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Authentications_", file: !352, line: 281, size: 192, elements: !517)
!517 = !{!518, !559, !560}
!518 = !DIDerivedType(tag: DW_TAG_member, name: "auth", scope: !516, file: !352, line: 282, baseType: !519, size: 64)
!519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !520, size: 64)
!520 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !521)
!521 = !DIDerivedType(tag: DW_TAG_typedef, name: "Authentication", file: !352, line: 250, baseType: !522)
!522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Authentication_", file: !352, line: 242, size: 256, elements: !523)
!523 = !{!524, !525, !530, !557}
!524 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !522, file: !352, line: 243, baseType: !385, size: 64)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "parse", scope: !522, file: !352, line: 244, baseType: !526, size: 64, offset: 64)
!526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !527, size: 64)
!527 = !DISubroutineType(types: !528)
!528 = !{null, !529}
!529 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !385)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !522, file: !352, line: 245, baseType: !531, size: 64, offset: 128)
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 64)
!532 = !DISubroutineType(types: !533)
!533 = !{null, !534, !385, !385, !546, !546}
!534 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !535)
!535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !536, size: 64)
!536 = !DIDerivedType(tag: DW_TAG_typedef, name: "AuthResult", file: !537, line: 294, baseType: !538)
!537 = !DIFile(filename: "./ftpd.h", directory: "/home/songxiangpu/Documents/protocol_implementation/pure-ftpd/src")
!538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AuthResult_", file: !537, line: 266, size: 320, elements: !539)
!539 = !{!540, !541, !542, !543, !544, !545}
!540 = !DIDerivedType(tag: DW_TAG_member, name: "auth_ok", scope: !538, file: !537, line: 267, baseType: !326, size: 32)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !538, file: !537, line: 268, baseType: !337, size: 32, offset: 32)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !538, file: !537, line: 269, baseType: !359, size: 32, offset: 64)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !538, file: !537, line: 270, baseType: !385, size: 64, offset: 128)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "slow_tilde_expansion", scope: !538, file: !537, line: 271, baseType: !326, size: 32, offset: 192)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "backend_data", scope: !538, file: !537, line: 272, baseType: !303, size: 64, offset: 256)
!546 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !547)
!547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !548, size: 64)
!548 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !549)
!549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_storage", file: !316, line: 191, size: 1024, elements: !550)
!550 = !{!551, !552, !556}
!551 = !DIDerivedType(tag: DW_TAG_member, name: "ss_family", scope: !549, file: !316, line: 193, baseType: !319, size: 16)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "__ss_padding", scope: !549, file: !316, line: 194, baseType: !553, size: 944, offset: 16)
!553 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 944, elements: !554)
!554 = !{!555}
!555 = !DISubrange(count: 118)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "__ss_align", scope: !549, file: !316, line: 195, baseType: !306, size: 64, offset: 960)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "exit", scope: !522, file: !352, line: 249, baseType: !558, size: 64, offset: 192)
!558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !486, size: 64)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "conf_file", scope: !516, file: !352, line: 283, baseType: !308, size: 64, offset: 64)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !516, file: !352, line: 284, baseType: !561, size: 64, offset: 128)
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 64)
!562 = !DIGlobalVariableExpression(var: !563, expr: !DIExpression())
!563 = distinct !DIGlobalVariable(name: "last_authentications", scope: !2, file: !352, line: 287, type: !514, isLocal: true, isDefinition: true)
!564 = !DIGlobalVariableExpression(var: !565, expr: !DIExpression())
!565 = distinct !DIGlobalVariable(name: "firstreply", scope: !2, file: !352, line: 353, type: !350, isLocal: true, isDefinition: true)
!566 = !DIGlobalVariableExpression(var: !567, expr: !DIExpression())
!567 = distinct !DIGlobalVariable(name: "lastreply", scope: !2, file: !352, line: 354, type: !350, isLocal: true, isDefinition: true)
!568 = !DIGlobalVariableExpression(var: !569, expr: !DIExpression())
!569 = distinct !DIGlobalVariable(name: "downloaded", scope: !2, file: !413, line: 13, type: !335, isLocal: false, isDefinition: true)
!570 = !DIGlobalVariableExpression(var: !571, expr: !DIExpression())
!571 = distinct !DIGlobalVariable(name: "uploaded", scope: !2, file: !413, line: 14, type: !335, isLocal: false, isDefinition: true)
!572 = !DIGlobalVariableExpression(var: !573, expr: !DIExpression())
!573 = distinct !DIGlobalVariable(name: "anon_only", scope: !2, file: !413, line: 15, type: !396, isLocal: false, isDefinition: true)
!574 = !DIGlobalVariableExpression(var: !575, expr: !DIExpression())
!575 = distinct !DIGlobalVariable(name: "trustedip", scope: !2, file: !413, line: 16, type: !576, isLocal: false, isDefinition: true)
!576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !549, size: 64)
!577 = !DIGlobalVariableExpression(var: !578, expr: !DIExpression())
!578 = distinct !DIGlobalVariable(name: "logging", scope: !2, file: !413, line: 17, type: !579, isLocal: false, isDefinition: true)
!579 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !396)
!580 = !DIGlobalVariableExpression(var: !581, expr: !DIExpression())
!581 = distinct !DIGlobalVariable(name: "inputFile", scope: !2, file: !413, line: 26, type: !582, isLocal: false, isDefinition: true)
!582 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 8192, elements: !583)
!583 = !{!584}
!584 = !DISubrange(count: 1024)
!585 = !DIGlobalVariableExpression(var: !586, expr: !DIExpression())
!586 = distinct !DIGlobalVariable(name: "throttling_bandwidth_dl", scope: !2, file: !413, line: 28, type: !306, isLocal: false, isDefinition: true)
!587 = !DIGlobalVariableExpression(var: !588, expr: !DIExpression())
!588 = distinct !DIGlobalVariable(name: "throttling_bandwidth_ul", scope: !2, file: !413, line: 29, type: !306, isLocal: false, isDefinition: true)
!589 = !DIGlobalVariableExpression(var: !590, expr: !DIExpression())
!590 = distinct !DIGlobalVariable(name: "allowfxp", scope: !2, file: !413, line: 30, type: !396, isLocal: false, isDefinition: true)
!591 = !DIGlobalVariableExpression(var: !592, expr: !DIExpression())
!592 = distinct !DIGlobalVariable(name: "passive", scope: !2, file: !413, line: 31, type: !396, isLocal: false, isDefinition: true)
!593 = !DIGlobalVariableExpression(var: !594, expr: !DIExpression())
!594 = distinct !DIGlobalVariable(name: "ctrlconn", scope: !2, file: !413, line: 34, type: !549, isLocal: false, isDefinition: true)
!595 = !DIGlobalVariableExpression(var: !596, expr: !DIExpression())
!596 = distinct !DIGlobalVariable(name: "v6ready", scope: !2, file: !413, line: 36, type: !396, isLocal: false, isDefinition: true)
!597 = !DIGlobalVariableExpression(var: !598, expr: !DIExpression())
!598 = distinct !DIGlobalVariable(name: "no_ipv4", scope: !2, file: !413, line: 37, type: !396, isLocal: false, isDefinition: true)
!599 = !DIGlobalVariableExpression(var: !600, expr: !DIExpression())
!600 = distinct !DIGlobalVariable(name: "cmd", scope: !2, file: !413, line: 39, type: !601, isLocal: false, isDefinition: true)
!601 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 33024, elements: !602)
!602 = !{!603}
!603 = !DISubrange(count: 4128)
!604 = !DIGlobalVariableExpression(var: !605, expr: !DIExpression())
!605 = distinct !DIGlobalVariable(name: "wd", scope: !2, file: !413, line: 40, type: !606, isLocal: false, isDefinition: true)
!606 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 32776, elements: !607)
!607 = !{!608}
!608 = !DISubrange(count: 4097)
!609 = !DIGlobalVariableExpression(var: !610, expr: !DIExpression())
!610 = distinct !DIGlobalVariable(name: "root_directory", scope: !2, file: !413, line: 41, type: !308, isLocal: false, isDefinition: true)
!611 = !DIGlobalVariableExpression(var: !612, expr: !DIExpression())
!612 = distinct !DIGlobalVariable(name: "loggedin", scope: !2, file: !413, line: 42, type: !396, isLocal: false, isDefinition: true)
!613 = !DIGlobalVariableExpression(var: !614, expr: !DIExpression())
!614 = distinct !DIGlobalVariable(name: "account", scope: !2, file: !413, line: 43, type: !615, isLocal: false, isDefinition: true)
!615 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 1024, elements: !616)
!616 = !{!617}
!617 = !DISubrange(count: 128)
!618 = !DIGlobalVariableExpression(var: !619, expr: !DIExpression())
!619 = distinct !DIGlobalVariable(name: "renamefrom", scope: !2, file: !413, line: 44, type: !308, isLocal: false, isDefinition: true)
!620 = !DIGlobalVariableExpression(var: !621, expr: !DIExpression())
!621 = distinct !DIGlobalVariable(name: "serverport", scope: !2, file: !413, line: 45, type: !340, isLocal: false, isDefinition: true)
!622 = !DIGlobalVariableExpression(var: !623, expr: !DIExpression())
!623 = distinct !DIGlobalVariable(name: "userchroot", scope: !2, file: !413, line: 46, type: !396, isLocal: false, isDefinition: true)
!624 = !DIGlobalVariableExpression(var: !625, expr: !DIExpression())
!625 = distinct !DIGlobalVariable(name: "chrooted", scope: !2, file: !413, line: 49, type: !396, isLocal: false, isDefinition: true)
!626 = !DIGlobalVariableExpression(var: !627, expr: !DIExpression())
!627 = distinct !DIGlobalVariable(name: "chroot_trustedgid", scope: !2, file: !413, line: 50, type: !337, isLocal: false, isDefinition: true)
!628 = !DIGlobalVariableExpression(var: !629, expr: !DIExpression())
!629 = distinct !DIGlobalVariable(name: "broken_client_compat", scope: !2, file: !413, line: 51, type: !396, isLocal: false, isDefinition: true)
!630 = !DIGlobalVariableExpression(var: !631, expr: !DIExpression())
!631 = distinct !DIGlobalVariable(name: "warez", scope: !2, file: !413, line: 52, type: !337, isLocal: false, isDefinition: true)
!632 = !DIGlobalVariableExpression(var: !633, expr: !DIExpression())
!633 = distinct !DIGlobalVariable(name: "debug", scope: !2, file: !413, line: 53, type: !396, isLocal: false, isDefinition: true)
!634 = !DIGlobalVariableExpression(var: !635, expr: !DIExpression())
!635 = distinct !DIGlobalVariable(name: "guest", scope: !2, file: !413, line: 54, type: !396, isLocal: false, isDefinition: true)
!636 = !DIGlobalVariableExpression(var: !637, expr: !DIExpression())
!637 = distinct !DIGlobalVariable(name: "useruid", scope: !2, file: !413, line: 55, type: !337, isLocal: false, isDefinition: true)
!638 = !DIGlobalVariableExpression(var: !639, expr: !DIExpression())
!639 = distinct !DIGlobalVariable(name: "candownload", scope: !2, file: !413, line: 56, type: !396, isLocal: false, isDefinition: true)
!640 = !DIGlobalVariableExpression(var: !641, expr: !DIExpression())
!641 = distinct !DIGlobalVariable(name: "load", scope: !2, file: !413, line: 57, type: !336, isLocal: false, isDefinition: true)
!642 = !DIGlobalVariableExpression(var: !643, expr: !DIExpression())
!643 = distinct !DIGlobalVariable(name: "dot_read_anon_ok", scope: !2, file: !413, line: 63, type: !396, isLocal: false, isDefinition: true)
!644 = !DIGlobalVariableExpression(var: !645, expr: !DIExpression())
!645 = distinct !DIGlobalVariable(name: "restartat", scope: !2, file: !413, line: 77, type: !344, isLocal: false, isDefinition: true)
!646 = !DIGlobalVariableExpression(var: !647, expr: !DIExpression())
!647 = distinct !DIGlobalVariable(name: "idletime_noop", scope: !2, file: !413, line: 79, type: !336, isLocal: false, isDefinition: true)
!648 = !DIGlobalVariableExpression(var: !649, expr: !DIExpression())
!649 = distinct !DIGlobalVariable(name: "allow_anon_mkdir", scope: !2, file: !413, line: 81, type: !326, isLocal: false, isDefinition: true)
!650 = !DIGlobalVariableExpression(var: !651, expr: !DIExpression())
!651 = distinct !DIGlobalVariable(name: "fortunes_file", scope: !2, file: !413, line: 84, type: !308, isLocal: false, isDefinition: true)
!652 = !DIGlobalVariableExpression(var: !653, expr: !DIExpression())
!653 = distinct !DIGlobalVariable(name: "host", scope: !2, file: !413, line: 85, type: !654, isLocal: false, isDefinition: true)
!654 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 8200, elements: !655)
!655 = !{!656}
!656 = !DISubrange(count: 1025)
!657 = !DIGlobalVariableExpression(var: !658, expr: !DIExpression())
!658 = distinct !DIGlobalVariable(name: "replycode", scope: !2, file: !413, line: 86, type: !326, isLocal: false, isDefinition: true)
!659 = !DIGlobalVariableExpression(var: !660, expr: !DIExpression())
!660 = distinct !DIGlobalVariable(name: "force_ls_a", scope: !2, file: !413, line: 87, type: !396, isLocal: false, isDefinition: true)
!661 = !DIGlobalVariableExpression(var: !662, expr: !DIExpression())
!662 = distinct !DIGlobalVariable(name: "peer", scope: !2, file: !413, line: 88, type: !549, isLocal: false, isDefinition: true)
!663 = !DIGlobalVariableExpression(var: !664, expr: !DIExpression())
!664 = distinct !DIGlobalVariable(name: "force_passive_ip", scope: !2, file: !413, line: 89, type: !549, isLocal: false, isDefinition: true)
!665 = !DIGlobalVariableExpression(var: !666, expr: !DIExpression())
!666 = distinct !DIGlobalVariable(name: "force_passive_ip_s", scope: !2, file: !413, line: 90, type: !385, isLocal: false, isDefinition: true)
!667 = !DIGlobalVariableExpression(var: !668, expr: !DIExpression())
!668 = distinct !DIGlobalVariable(name: "peerdataport", scope: !2, file: !413, line: 91, type: !340, isLocal: false, isDefinition: true)
!669 = !DIGlobalVariableExpression(var: !670, expr: !DIExpression())
!670 = distinct !DIGlobalVariable(name: "maxload", scope: !2, file: !413, line: 92, type: !336, isLocal: false, isDefinition: true)
!671 = !DIGlobalVariableExpression(var: !672, expr: !DIExpression())
!672 = distinct !DIGlobalVariable(name: "maxip", scope: !2, file: !413, line: 103, type: !7, isLocal: false, isDefinition: true)
!673 = !DIGlobalVariableExpression(var: !674, expr: !DIExpression())
!674 = distinct !DIGlobalVariable(name: "standalone", scope: !2, file: !413, line: 107, type: !396, isLocal: false, isDefinition: true)
!675 = !DIGlobalVariableExpression(var: !676, expr: !DIExpression())
!676 = distinct !DIGlobalVariable(name: "epsv_all", scope: !2, file: !413, line: 110, type: !396, isLocal: false, isDefinition: true)
!677 = !DIGlobalVariableExpression(var: !678, expr: !DIExpression())
!678 = distinct !DIGlobalVariable(name: "maxdiskusagepct", scope: !2, file: !413, line: 111, type: !336, isLocal: false, isDefinition: true)
!679 = !DIGlobalVariableExpression(var: !680, expr: !DIExpression())
!680 = distinct !DIGlobalVariable(name: "disallow_passive", scope: !2, file: !413, line: 112, type: !396, isLocal: false, isDefinition: true)
!681 = !DIGlobalVariableExpression(var: !682, expr: !DIExpression())
!682 = distinct !DIGlobalVariable(name: "no_syslog", scope: !2, file: !413, line: 116, type: !396, isLocal: false, isDefinition: true)
!683 = !DIGlobalVariableExpression(var: !684, expr: !DIExpression())
!684 = distinct !DIGlobalVariable(name: "autorename", scope: !2, file: !413, line: 118, type: !396, isLocal: false, isDefinition: true)
!685 = !DIGlobalVariableExpression(var: !686, expr: !DIExpression())
!686 = distinct !DIGlobalVariable(name: "anon_noupload", scope: !2, file: !413, line: 119, type: !396, isLocal: false, isDefinition: true)
!687 = !DIGlobalVariableExpression(var: !688, expr: !DIExpression())
!688 = distinct !DIGlobalVariable(name: "nochmod", scope: !2, file: !413, line: 120, type: !396, isLocal: false, isDefinition: true)
!689 = !DIGlobalVariableExpression(var: !690, expr: !DIExpression())
!690 = distinct !DIGlobalVariable(name: "keepallfiles", scope: !2, file: !413, line: 121, type: !396, isLocal: false, isDefinition: true)
!691 = !DIGlobalVariableExpression(var: !692, expr: !DIExpression())
!692 = distinct !DIGlobalVariable(name: "daemonize", scope: !2, file: !413, line: 124, type: !396, isLocal: false, isDefinition: true)
!693 = !DIGlobalVariableExpression(var: !694, expr: !DIExpression())
!694 = distinct !DIGlobalVariable(name: "create_home", scope: !2, file: !413, line: 140, type: !396, isLocal: false, isDefinition: true)
!695 = !DIGlobalVariableExpression(var: !696, expr: !DIExpression())
!696 = distinct !DIGlobalVariable(name: "disallow_rename", scope: !2, file: !413, line: 141, type: !396, isLocal: false, isDefinition: true)
!697 = !DIGlobalVariableExpression(var: !698, expr: !DIExpression())
!698 = distinct !DIGlobalVariable(name: "no_truncate", scope: !2, file: !413, line: 142, type: !396, isLocal: false, isDefinition: true)
!699 = !DIGlobalVariableExpression(var: !700, expr: !DIExpression())
!700 = distinct !DIGlobalVariable(name: "page_size", scope: !2, file: !413, line: 144, type: !304, isLocal: false, isDefinition: true)
!701 = !DIGlobalVariableExpression(var: !702, expr: !DIExpression())
!702 = distinct !DIGlobalVariable(name: "log_pid", scope: !2, file: !413, line: 145, type: !326, isLocal: false, isDefinition: true)
!703 = !DIGlobalVariableExpression(var: !704, expr: !DIExpression())
!704 = distinct !DIGlobalVariable(name: "authresult", scope: !2, file: !413, line: 168, type: !536, isLocal: false, isDefinition: true)
!705 = !DIGlobalVariableExpression(var: !706, expr: !DIExpression())
!706 = distinct !DIGlobalVariable(name: "session_start_time", scope: !2, file: !413, line: 169, type: !331, isLocal: false, isDefinition: true)
!707 = !DIGlobalVariableExpression(var: !708, expr: !DIExpression())
!708 = distinct !DIGlobalVariable(name: "be_customer_proof", scope: !2, file: !413, line: 175, type: !396, isLocal: false, isDefinition: true)
!709 = !DIGlobalVariableExpression(var: !710, expr: !DIExpression())
!710 = distinct !DIGlobalVariable(name: "atomic_prefix", scope: !2, file: !413, line: 189, type: !308, isLocal: false, isDefinition: true)
!711 = !DIGlobalVariableExpression(var: !712, expr: !DIExpression())
!712 = distinct !DIGlobalVariable(name: "tls_cnx", scope: !2, file: !413, line: 192, type: !303, isLocal: false, isDefinition: true)
!713 = !DIGlobalVariableExpression(var: !714, expr: !DIExpression())
!714 = distinct !DIGlobalVariable(name: "tls_data_cnx", scope: !2, file: !413, line: 193, type: !303, isLocal: false, isDefinition: true)
!715 = !DIGlobalVariableExpression(var: !716, expr: !DIExpression())
!716 = distinct !DIGlobalVariable(name: "cwd_failures", scope: !2, file: !413, line: 201, type: !306, isLocal: false, isDefinition: true)
!717 = !DIGlobalVariableExpression(var: !718, expr: !DIExpression())
!718 = distinct !DIGlobalVariable(name: "replybuf", scope: !2, file: !3, line: 308, type: !719, isLocal: true, isDefinition: true)
!719 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 132672, elements: !720)
!720 = !{!721}
!721 = !DISubrange(count: 16584)
!722 = !DIGlobalVariableExpression(var: !723, expr: !DIExpression())
!723 = distinct !DIGlobalVariable(name: "replybuf_left", scope: !2, file: !3, line: 310, type: !304, isLocal: true, isDefinition: true)
!724 = !DIGlobalVariableExpression(var: !725, expr: !DIExpression())
!725 = distinct !DIGlobalVariable(name: "replybuf_pos", scope: !2, file: !3, line: 309, type: !308, isLocal: true, isDefinition: true)
!726 = !DIGlobalVariableExpression(var: !727, expr: !DIExpression())
!727 = distinct !DIGlobalVariable(name: "portlist", scope: !728, file: !3, line: 2243, type: !732, isLocal: true, isDefinition: true)
!728 = distinct !DISubprogram(name: "doport3", scope: !3, file: !3, line: 2238, type: !729, scopeLine: 2239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!729 = !DISubroutineType(types: !730)
!730 = !{!326, !731}
!731 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !326)
!732 = !DICompositeType(tag: DW_TAG_array_type, baseType: !733, size: 160, elements: !734)
!733 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !340)
!734 = !{!735}
!735 = !DISubrange(count: 10)
!736 = !DIGlobalVariableExpression(var: !737, expr: !DIExpression())
!737 = distinct !DIGlobalVariable(name: "res", scope: !738, file: !3, line: 3665, type: !741, isLocal: true, isDefinition: true)
!738 = distinct !DISubprogram(name: "get_atomic_file", scope: !3, file: !3, line: 3663, type: !739, scopeLine: 3664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!739 = !DISubroutineType(types: !740)
!740 = !{!308, !529}
!741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 32768, elements: !742)
!742 = !{!743}
!743 = !DISubrange(count: 4096)
!744 = !DIGlobalVariableExpression(var: !745, expr: !DIExpression())
!745 = distinct !DIGlobalVariable(name: "name2", scope: !746, file: !3, line: 3618, type: !741, isLocal: true, isDefinition: true)
!746 = distinct !DISubprogram(name: "tryautorename", scope: !3, file: !3, line: 3615, type: !747, scopeLine: 3617, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!747 = !DISubroutineType(types: !748)
!748 = !{!326, !529, !749, !750}
!749 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !308)
!750 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !751)
!751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !385, size: 64)
!752 = !DIGlobalVariableExpression(var: !753, expr: !DIExpression())
!753 = distinct !DIGlobalVariable(name: "nb_children", scope: !2, file: !352, line: 52, type: !754, isLocal: true, isDefinition: true)
!754 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!755 = !DIGlobalVariableExpression(var: !756, expr: !DIExpression())
!756 = distinct !DIGlobalVariable(name: "stop_server", scope: !2, file: !352, line: 49, type: !757, isLocal: true, isDefinition: true)
!757 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !758)
!758 = !DIDerivedType(tag: DW_TAG_typedef, name: "sig_atomic_t", file: !759, line: 8, baseType: !760)
!759 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/sig_atomic_t.h", directory: "")
!760 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sig_atomic_t", file: !313, line: 214, baseType: !326)
!761 = !DIGlobalVariableExpression(var: !762, expr: !DIExpression())
!762 = distinct !DIGlobalVariable(name: "listenfd", scope: !2, file: !352, line: 53, type: !450, isLocal: true, isDefinition: true)
!763 = !DIGlobalVariableExpression(var: !764, expr: !DIExpression())
!764 = distinct !DIGlobalVariable(name: "listenfd6", scope: !2, file: !352, line: 54, type: !450, isLocal: true, isDefinition: true)
!765 = !DIGlobalVariableExpression(var: !766, expr: !DIExpression())
!766 = distinct !DIGlobalVariable(name: "simpleconf_options", scope: !2, file: !767, line: 6, type: !768, isLocal: true, isDefinition: true)
!767 = !DIFile(filename: "./simpleconf_ftpd.h", directory: "/home/songxiangpu/Documents/protocol_implementation/pure-ftpd/src")
!768 = !DICompositeType(tag: DW_TAG_array_type, baseType: !769, size: 8320, elements: !776)
!769 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !770)
!770 = !DIDerivedType(tag: DW_TAG_typedef, name: "SimpleConfEntry", file: !771, line: 9, baseType: !772)
!771 = !DIFile(filename: "./simpleconf.h", directory: "/home/songxiangpu/Documents/protocol_implementation/pure-ftpd/src")
!772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SimpleConfEntry_", file: !771, line: 6, size: 128, elements: !773)
!773 = !{!774, !775}
!774 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !772, file: !771, line: 7, baseType: !385, size: 64)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !772, file: !771, line: 8, baseType: !385, size: 64, offset: 64)
!776 = !{!777}
!777 = !DISubrange(count: 65)
!778 = !DIGlobalVariableExpression(var: !779, expr: !DIExpression())
!779 = distinct !DIGlobalVariable(name: "GETOPT_OPTIONS", scope: !2, file: !352, line: 62, type: !385, isLocal: true, isDefinition: true)
!780 = !DIGlobalVariableExpression(var: !781, expr: !DIExpression())
!781 = distinct !DIGlobalVariable(name: "long_options", scope: !2, file: !352, line: 109, type: !782, isLocal: true, isDefinition: true)
!782 = !DICompositeType(tag: DW_TAG_array_type, baseType: !783, size: 12032, elements: !791)
!783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !784, line: 50, size: 256, elements: !785)
!784 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/getopt_ext.h", directory: "")
!785 = !{!786, !787, !788, !790}
!786 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !783, file: !784, line: 52, baseType: !385, size: 64)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !783, file: !784, line: 55, baseType: !326, size: 32, offset: 64)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !783, file: !784, line: 56, baseType: !789, size: 64, offset: 128)
!789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !326, size: 64)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !783, file: !784, line: 57, baseType: !326, size: 32, offset: 192)
!791 = !{!792}
!792 = !DISubrange(count: 47)
!793 = !DIGlobalVariableExpression(var: !794, expr: !DIExpression())
!794 = distinct !DIGlobalVariable(name: "standalone_port", scope: !2, file: !352, line: 50, type: !385, isLocal: true, isDefinition: true)
!795 = !DIGlobalVariableExpression(var: !796, expr: !DIExpression())
!796 = distinct !DIGlobalVariable(name: "auth_list", scope: !2, file: !352, line: 252, type: !797, isLocal: true, isDefinition: true)
!797 = !DICompositeType(tag: DW_TAG_array_type, baseType: !521, size: 512, elements: !798)
!798 = !{!799}
!799 = !DISubrange(count: 2)
!800 = !DIGlobalVariableExpression(var: !801, expr: !DIExpression())
!801 = distinct !DIGlobalVariable(name: "old_sa", scope: !802, file: !3, line: 5331, type: !549, isLocal: true, isDefinition: true)
!802 = distinct !DISubprogram(name: "accept_client", scope: !3, file: !3, line: 5283, type: !803, scopeLine: 5283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!803 = !DISubroutineType(types: !804)
!804 = !{null, !731}
!805 = !DIGlobalVariableExpression(var: !806, expr: !DIExpression())
!806 = distinct !DIGlobalVariable(name: "lim", scope: !807, file: !3, line: 4677, type: !808, isLocal: true, isDefinition: true)
!807 = distinct !DISubprogram(name: "fixlimits", scope: !3, file: !3, line: 4674, type: !486, scopeLine: 4675, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !281, line: 139, size: 128, elements: !809)
!809 = !{!810, !813}
!810 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !808, file: !281, line: 142, baseType: !811, size: 64)
!811 = !DIDerivedType(tag: DW_TAG_typedef, name: "rlim_t", file: !281, line: 131, baseType: !812)
!812 = !DIDerivedType(tag: DW_TAG_typedef, name: "__rlim_t", file: !313, line: 157, baseType: !306)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !808, file: !281, line: 144, baseType: !811, size: 64, offset: 64)
!814 = !DICompositeType(tag: DW_TAG_array_type, baseType: !404, size: 1664, elements: !415)
!815 = !DIGlobalVariableExpression(var: !816, expr: !DIExpression())
!816 = distinct !DIGlobalVariable(name: "opt_S", scope: !817, file: !839, line: 42, type: !326, isLocal: false, isDefinition: true)
!817 = distinct !DICompileUnit(language: DW_LANG_C99, file: !818, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !819, retainedTypes: !820, globals: !836, splitDebugInlining: false, nameTableKind: None)
!818 = !DIFile(filename: "ls.c", directory: "/home/songxiangpu/Documents/protocol_implementation/pure-ftpd/src")
!819 = !{!5}
!820 = !{!303, !304, !326, !307, !321, !330, !309, !7, !335, !308, !383, !821}
!821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !822, size: 64)
!822 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !823)
!823 = !DIDerivedType(tag: DW_TAG_typedef, name: "PureFileInfo", file: !537, line: 305, baseType: !824)
!824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PureFileInfo_", file: !537, line: 296, size: 448, elements: !825)
!825 = !{!826, !827, !828, !829, !830, !831, !834, !835}
!826 = !DIDerivedType(tag: DW_TAG_member, name: "names_pnt", scope: !824, file: !537, line: 297, baseType: !493, size: 64)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "name_offset", scope: !824, file: !537, line: 298, baseType: !304, size: 64, offset: 64)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !824, file: !537, line: 299, baseType: !344, size: 64, offset: 128)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !824, file: !537, line: 300, baseType: !331, size: 64, offset: 192)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !824, file: !537, line: 301, baseType: !348, size: 32, offset: 256)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !824, file: !537, line: 302, baseType: !832, size: 64, offset: 320)
!832 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !338, line: 74, baseType: !833)
!833 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !313, line: 151, baseType: !306)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !824, file: !537, line: 303, baseType: !337, size: 32, offset: 384)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !824, file: !537, line: 304, baseType: !359, size: 32, offset: 416)
!836 = !{!837, !840, !848, !856, !858, !860, !862, !864, !866, !868, !870, !815, !872, !874, !883, !885, !887, !896}
!837 = !DIGlobalVariableExpression(var: !838, expr: !DIExpression())
!838 = distinct !DIGlobalVariable(name: "matches", scope: !817, file: !839, line: 22, type: !7, isLocal: true, isDefinition: true)
!839 = !DIFile(filename: "./ls_p.h", directory: "/home/songxiangpu/Documents/protocol_implementation/pure-ftpd/src")
!840 = !DIGlobalVariableExpression(var: !841, expr: !DIExpression())
!841 = distinct !DIGlobalVariable(name: "user_head", scope: !817, file: !839, line: 37, type: !842, isLocal: true, isDefinition: true)
!842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 64)
!843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "userid", file: !839, line: 24, size: 192, elements: !844)
!844 = !{!845, !846, !847}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !843, file: !839, line: 25, baseType: !842, size: 64)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !843, file: !839, line: 26, baseType: !337, size: 32, offset: 64)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !843, file: !839, line: 27, baseType: !308, size: 64, offset: 128)
!848 = !DIGlobalVariableExpression(var: !849, expr: !DIExpression())
!849 = distinct !DIGlobalVariable(name: "group_head", scope: !817, file: !839, line: 38, type: !850, isLocal: true, isDefinition: true)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "groupid", file: !839, line: 30, size: 192, elements: !852)
!852 = !{!853, !854, !855}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !851, file: !839, line: 31, baseType: !850, size: 64)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !851, file: !839, line: 32, baseType: !359, size: 32, offset: 64)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !851, file: !839, line: 33, baseType: !308, size: 64, offset: 128)
!856 = !DIGlobalVariableExpression(var: !857, expr: !DIExpression())
!857 = distinct !DIGlobalVariable(name: "opt_a", scope: !817, file: !839, line: 42, type: !326, isLocal: false, isDefinition: true)
!858 = !DIGlobalVariableExpression(var: !859, expr: !DIExpression())
!859 = distinct !DIGlobalVariable(name: "opt_C", scope: !817, file: !839, line: 42, type: !326, isLocal: false, isDefinition: true)
!860 = !DIGlobalVariableExpression(var: !861, expr: !DIExpression())
!861 = distinct !DIGlobalVariable(name: "opt_d", scope: !817, file: !839, line: 42, type: !326, isLocal: false, isDefinition: true)
!862 = !DIGlobalVariableExpression(var: !863, expr: !DIExpression())
!863 = distinct !DIGlobalVariable(name: "opt_F", scope: !817, file: !839, line: 42, type: !326, isLocal: false, isDefinition: true)
!864 = !DIGlobalVariableExpression(var: !865, expr: !DIExpression())
!865 = distinct !DIGlobalVariable(name: "opt_l", scope: !817, file: !839, line: 42, type: !326, isLocal: false, isDefinition: true)
!866 = !DIGlobalVariableExpression(var: !867, expr: !DIExpression())
!867 = distinct !DIGlobalVariable(name: "opt_R", scope: !817, file: !839, line: 42, type: !326, isLocal: false, isDefinition: true)
!868 = !DIGlobalVariableExpression(var: !869, expr: !DIExpression())
!869 = distinct !DIGlobalVariable(name: "opt_r", scope: !817, file: !839, line: 42, type: !326, isLocal: false, isDefinition: true)
!870 = !DIGlobalVariableExpression(var: !871, expr: !DIExpression())
!871 = distinct !DIGlobalVariable(name: "opt_t", scope: !817, file: !839, line: 42, type: !326, isLocal: false, isDefinition: true)
!872 = !DIGlobalVariableExpression(var: !873, expr: !DIExpression())
!873 = distinct !DIGlobalVariable(name: "colwidth", scope: !817, file: !839, line: 10, type: !7, isLocal: true, isDefinition: true)
!874 = !DIGlobalVariableExpression(var: !875, expr: !DIExpression())
!875 = distinct !DIGlobalVariable(name: "tail", scope: !817, file: !839, line: 21, type: !876, isLocal: true, isDefinition: true)
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 64)
!877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "filename", file: !839, line: 13, size: 192, elements: !878)
!878 = !{!879, !880, !881, !882}
!879 = !DIDerivedType(tag: DW_TAG_member, name: "down", scope: !877, file: !839, line: 14, baseType: !876, size: 64)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !877, file: !839, line: 15, baseType: !876, size: 64, offset: 64)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !877, file: !839, line: 16, baseType: !326, size: 32, offset: 128)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !877, file: !839, line: 17, baseType: !356, size: 8, offset: 160)
!883 = !DIGlobalVariableExpression(var: !884, expr: !DIExpression())
!884 = distinct !DIGlobalVariable(name: "head", scope: !817, file: !839, line: 20, type: !876, isLocal: true, isDefinition: true)
!885 = !DIGlobalVariableExpression(var: !886, expr: !DIExpression())
!886 = distinct !DIGlobalVariable(name: "filenames", scope: !817, file: !839, line: 11, type: !7, isLocal: true, isDefinition: true)
!887 = !DIGlobalVariableExpression(var: !888, expr: !DIExpression())
!888 = distinct !DIGlobalVariable(name: "outbuf", scope: !889, file: !818, line: 21, type: !893, isLocal: true, isDefinition: true)
!889 = distinct !DISubprogram(name: "wrstr", scope: !818, file: !818, line: 19, type: !890, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !817, retainedNodes: !471)
!890 = !DISubroutineType(types: !891)
!891 = !{null, !731, !892, !385}
!892 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !303)
!893 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 524288, elements: !894)
!894 = !{!895}
!895 = !DISubrange(count: 65536)
!896 = !DIGlobalVariableExpression(var: !897, expr: !DIExpression())
!897 = distinct !DIGlobalVariable(name: "outcnt", scope: !889, file: !818, line: 22, type: !304, isLocal: true, isDefinition: true)
!898 = !DIGlobalVariableExpression(var: !899, expr: !DIExpression())
!899 = distinct !DIGlobalVariable(name: "rng_state", scope: !900, file: !901, line: 98, type: !903, isLocal: true, isDefinition: true)
!900 = distinct !DICompileUnit(language: DW_LANG_C99, file: !901, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !471, globals: !902, splitDebugInlining: false, nameTableKind: None)
!901 = !DIFile(filename: "alt_arc4random.c", directory: "/home/songxiangpu/Documents/protocol_implementation/pure-ftpd/src")
!902 = !{!898}
!903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rng_state", file: !901, line: 90, size: 4480, elements: !904)
!904 = !{!905, !906, !907, !908, !912}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !903, file: !901, line: 91, baseType: !326, size: 32)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !903, file: !901, line: 92, baseType: !326, size: 32, offset: 32)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !903, file: !901, line: 93, baseType: !304, size: 64, offset: 64)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !903, file: !901, line: 94, baseType: !909, size: 256, offset: 128)
!909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !370, size: 256, elements: !910)
!910 = !{!911}
!911 = !DISubrange(count: 32)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !903, file: !901, line: 95, baseType: !913, size: 4096, offset: 384)
!913 = !DICompositeType(tag: DW_TAG_array_type, baseType: !370, size: 4096, elements: !914)
!914 = !{!915}
!915 = !DISubrange(count: 512)
!916 = !DIGlobalVariableExpression(var: !917, expr: !DIExpression())
!917 = distinct !DIGlobalVariable(name: "head", scope: !918, file: !919, line: 52, type: !924, isLocal: true, isDefinition: true)
!918 = distinct !DICompileUnit(language: DW_LANG_C99, file: !919, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !471, retainedTypes: !920, globals: !921, splitDebugInlining: false, nameTableKind: None)
!919 = !DIFile(filename: "diraliases.c", directory: "/home/songxiangpu/Documents/protocol_implementation/pure-ftpd/src")
!920 = !{!303}
!921 = !{!916, !922, !933}
!922 = !DIGlobalVariableExpression(var: !923, expr: !DIExpression())
!923 = distinct !DIGlobalVariable(name: "tail", scope: !918, file: !919, line: 52, type: !924, isLocal: true, isDefinition: true)
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 64)
!925 = !DIDerivedType(tag: DW_TAG_typedef, name: "DirAlias", file: !926, line: 17, baseType: !927)
!926 = !DIFile(filename: "./diraliases.h", directory: "/home/songxiangpu/Documents/protocol_implementation/pure-ftpd/src")
!927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DirAlias_", file: !926, line: 13, size: 192, elements: !928)
!928 = !{!929, !930, !931}
!929 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !927, file: !926, line: 14, baseType: !308, size: 64)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !927, file: !926, line: 15, baseType: !308, size: 64, offset: 64)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !927, file: !926, line: 16, baseType: !932, size: 64, offset: 128)
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 64)
!933 = !DIGlobalVariableExpression(var: !934, expr: !DIExpression())
!934 = distinct !DIGlobalVariable(name: "aliases_up", scope: !918, file: !919, line: 53, type: !396, isLocal: true, isDefinition: true)
!935 = !DIGlobalVariableExpression(var: !936, expr: !DIExpression())
!936 = distinct !DIGlobalVariable(name: "iptrack_list", scope: !937, file: !938, line: 14, type: !951, isLocal: true, isDefinition: true)
!937 = distinct !DICompileUnit(language: DW_LANG_C99, file: !938, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !471, retainedTypes: !939, globals: !950, splitDebugInlining: false, nameTableKind: None)
!938 = !DIFile(filename: "dynamic.c", directory: "/home/songxiangpu/Documents/protocol_implementation/pure-ftpd/src")
!939 = !{!303, !392, !940}
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 64)
!941 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !942)
!942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !34, line: 212, size: 128, elements: !943)
!943 = !{!944}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "__in6_u", scope: !942, file: !34, line: 219, baseType: !945, size: 128)
!945 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !942, file: !34, line: 214, size: 128, elements: !946)
!946 = !{!947, !948, !949}
!947 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr8", scope: !945, file: !34, line: 216, baseType: !369, size: 128)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr16", scope: !945, file: !34, line: 217, baseType: !375, size: 128)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr32", scope: !945, file: !34, line: 218, baseType: !379, size: 128)
!950 = !{!935}
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 64)
!952 = !DIDerivedType(tag: DW_TAG_typedef, name: "IPTrack", file: !953, line: 9, baseType: !954)
!953 = !DIFile(filename: "./dynamic.h", directory: "/home/songxiangpu/Documents/protocol_implementation/pure-ftpd/src")
!954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IPTrack_", file: !953, line: 6, size: 1088, elements: !955)
!955 = !{!956, !962}
!956 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !954, file: !953, line: 7, baseType: !957, size: 1024)
!957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_storage", file: !316, line: 191, size: 1024, elements: !958)
!958 = !{!959, !960, !961}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "ss_family", scope: !957, file: !316, line: 193, baseType: !319, size: 16)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "__ss_padding", scope: !957, file: !316, line: 194, baseType: !553, size: 944, offset: 16)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "__ss_align", scope: !957, file: !316, line: 195, baseType: !306, size: 64, offset: 960)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !954, file: !953, line: 8, baseType: !392, size: 32, offset: 1024)
!963 = !DIGlobalVariableExpression(var: !964, expr: !DIExpression())
!964 = distinct !DIGlobalVariable(name: "scanned", scope: !965, file: !966, line: 60, type: !304, isLocal: true, isDefinition: true)
!965 = distinct !DICompileUnit(language: DW_LANG_C99, file: !966, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !819, retainedTypes: !967, globals: !968, splitDebugInlining: false, nameTableKind: None)
!966 = !DIFile(filename: "ftp_parser.c", directory: "/home/songxiangpu/Documents/protocol_implementation/pure-ftpd/src")
!967 = !{!304, !383, !307, !326, !321, !309, !335, !344, !303, !336, !348, !331, !306, !382}
!968 = !{!963, !969}
!969 = !DIGlobalVariableExpression(var: !970, expr: !DIExpression())
!970 = distinct !DIGlobalVariable(name: "readnbd", scope: !965, file: !966, line: 61, type: !304, isLocal: true, isDefinition: true)
!971 = distinct !DICompileUnit(language: DW_LANG_C99, file: !972, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !471, splitDebugInlining: false, nameTableKind: None)
!972 = !DIFile(filename: "main.c", directory: "/home/songxiangpu/Documents/protocol_implementation/pure-ftpd/src")
!973 = distinct !DICompileUnit(language: DW_LANG_C99, file: !974, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !471, retainedTypes: !975, splitDebugInlining: false, nameTableKind: None)
!974 = !DIFile(filename: "ipstack.c", directory: "/home/songxiangpu/Documents/protocol_implementation/pure-ftpd/src")
!975 = !{!976, !987, !989, !1005}
!976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !977, size: 64)
!977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in", file: !34, line: 238, size: 128, elements: !978)
!978 = !{!979, !980, !981, !985}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "sin_family", scope: !977, file: !34, line: 240, baseType: !319, size: 16)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "sin_port", scope: !977, file: !34, line: 241, baseType: !340, size: 16, offset: 16)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "sin_addr", scope: !977, file: !34, line: 242, baseType: !982, size: 32, offset: 32)
!982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in_addr", file: !34, line: 31, size: 32, elements: !983)
!983 = !{!984}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "s_addr", scope: !982, file: !34, line: 33, baseType: !343, size: 32)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "sin_zero", scope: !977, file: !34, line: 245, baseType: !986, size: 64, offset: 64)
!986 = !DICompositeType(tag: DW_TAG_array_type, baseType: !307, size: 64, elements: !376)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 64)
!988 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !977)
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !990, size: 64)
!990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in6", file: !34, line: 253, size: 224, elements: !991)
!991 = !{!992, !993, !994, !995, !1004}
!992 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_family", scope: !990, file: !34, line: 255, baseType: !319, size: 16)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_port", scope: !990, file: !34, line: 256, baseType: !340, size: 16, offset: 16)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_flowinfo", scope: !990, file: !34, line: 257, baseType: !327, size: 32, offset: 32)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_addr", scope: !990, file: !34, line: 258, baseType: !996, size: 128, offset: 64)
!996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !34, line: 212, size: 128, elements: !997)
!997 = !{!998}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "__in6_u", scope: !996, file: !34, line: 219, baseType: !999, size: 128)
!999 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !996, file: !34, line: 214, size: 128, elements: !1000)
!1000 = !{!1001, !1002, !1003}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr8", scope: !999, file: !34, line: 216, baseType: !369, size: 128)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr16", scope: !999, file: !34, line: 217, baseType: !375, size: 128)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr32", scope: !999, file: !34, line: 218, baseType: !379, size: 128)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_scope_id", scope: !990, file: !34, line: 259, baseType: !327, size: 32, offset: 192)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 64)
!1006 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !990)
!1007 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1008, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !471, retainedTypes: !1009, splitDebugInlining: false, nameTableKind: None)
!1008 = !DIFile(filename: "log_unix.c", directory: "/home/songxiangpu/Documents/protocol_implementation/pure-ftpd/src")
!1009 = !{!303, !308, !385}
!1010 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1011, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !471, retainedTypes: !1012, splitDebugInlining: false, nameTableKind: None)
!1011 = !DIFile(filename: "safe_rw.c", directory: "/home/songxiangpu/Documents/protocol_implementation/pure-ftpd/src")
!1012 = !{!385, !304, !383, !1013, !382}
!1013 = !DIDerivedType(tag: DW_TAG_typedef, name: "nfds_t", file: !1014, line: 33, baseType: !306)
!1014 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/poll.h", directory: "")
!1015 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1016, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1017, retainedTypes: !1059, splitDebugInlining: false, nameTableKind: None)
!1016 = !DIFile(filename: "simpleconf.c", directory: "/home/songxiangpu/Documents/protocol_implementation/pure-ftpd/src")
!1017 = !{!1018, !5, !1024, !1036}
!1018 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "SimpleConfSpecialHandlerResult_", file: !771, line: 11, baseType: !7, size: 32, elements: !1019)
!1019 = !{!1020, !1021, !1022, !1023}
!1020 = !DIEnumerator(name: "SC_SPECIAL_HANDLER_RESULT_UNDEFINED", value: 0, isUnsigned: true)
!1021 = !DIEnumerator(name: "SC_SPECIAL_HANDLER_RESULT_NEXT", value: 1, isUnsigned: true)
!1022 = !DIEnumerator(name: "SC_SPECIAL_HANDLER_RESULT_ERROR", value: 2, isUnsigned: true)
!1023 = !DIEnumerator(name: "SC_SPECIAL_HANDLER_RESULT_INCLUDE", value: 3, isUnsigned: true)
!1024 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "EntryResult_", file: !1016, line: 47, baseType: !7, size: 32, elements: !1025)
!1025 = !{!1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035}
!1026 = !DIEnumerator(name: "ENTRYRESULT_UNDEFINED", value: 0, isUnsigned: true)
!1027 = !DIEnumerator(name: "ENTRYRESULT_OK", value: 1, isUnsigned: true)
!1028 = !DIEnumerator(name: "ENTRYRESULT_IGNORE", value: 2, isUnsigned: true)
!1029 = !DIEnumerator(name: "ENTRYRESULT_PROPNOTFOUND", value: 3, isUnsigned: true)
!1030 = !DIEnumerator(name: "ENTRYRESULT_MISMATCH", value: 4, isUnsigned: true)
!1031 = !DIEnumerator(name: "ENTRYRESULT_SYNTAX", value: 5, isUnsigned: true)
!1032 = !DIEnumerator(name: "ENTRYRESULT_INVALID_ENTRY", value: 6, isUnsigned: true)
!1033 = !DIEnumerator(name: "ENTRYRESULT_INTERNAL", value: 7, isUnsigned: true)
!1034 = !DIEnumerator(name: "ENTRYRESULT_E2BIG", value: 8, isUnsigned: true)
!1035 = !DIEnumerator(name: "ENTRYRESULT_SPECIAL", value: 9, isUnsigned: true)
!1036 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "State_", file: !1016, line: 17, baseType: !7, size: 32, elements: !1037)
!1037 = !{!1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058}
!1038 = !DIEnumerator(name: "STATE_UNDEFINED", value: 0, isUnsigned: true)
!1039 = !DIEnumerator(name: "STATE_PROPNAME", value: 1, isUnsigned: true)
!1040 = !DIEnumerator(name: "STATE_AFTERPROPNAME", value: 2, isUnsigned: true)
!1041 = !DIEnumerator(name: "STATE_AFTERPROPNAME2", value: 3, isUnsigned: true)
!1042 = !DIEnumerator(name: "STATE_AFTERPROPNAMESEP", value: 4, isUnsigned: true)
!1043 = !DIEnumerator(name: "STATE_RCHAR", value: 5, isUnsigned: true)
!1044 = !DIEnumerator(name: "STATE_MATCH_ALPHA", value: 6, isUnsigned: true)
!1045 = !DIEnumerator(name: "STATE_MATCH_ALNUM", value: 7, isUnsigned: true)
!1046 = !DIEnumerator(name: "STATE_MATCH_DIGITS", value: 8, isUnsigned: true)
!1047 = !DIEnumerator(name: "STATE_MATCH_XDIGITS", value: 9, isUnsigned: true)
!1048 = !DIEnumerator(name: "STATE_MATCH_NOSPACE", value: 10, isUnsigned: true)
!1049 = !DIEnumerator(name: "STATE_MATCH_ANY", value: 11, isUnsigned: true)
!1050 = !DIEnumerator(name: "STATE_MATCH_ANY_WITHINQUOTES", value: 12, isUnsigned: true)
!1051 = !DIEnumerator(name: "STATE_MATCH_ANY_AFTERQUOTES", value: 13, isUnsigned: true)
!1052 = !DIEnumerator(name: "STATE_MATCH_ANY_WITHOUTQUOTES", value: 14, isUnsigned: true)
!1053 = !DIEnumerator(name: "STATE_MATCH_ANY_UNQUOTED", value: 15, isUnsigned: true)
!1054 = !DIEnumerator(name: "STATE_MATCH_SPACES", value: 16, isUnsigned: true)
!1055 = !DIEnumerator(name: "STATE_MATCH_BOOLEAN", value: 17, isUnsigned: true)
!1056 = !DIEnumerator(name: "STATE_TEMPLATE_UNDEFINED", value: 18, isUnsigned: true)
!1057 = !DIEnumerator(name: "STATE_TEMPLATE_RCHAR", value: 19, isUnsigned: true)
!1058 = !DIEnumerator(name: "STATE_TEMPLATE_SUBST_ESC", value: 20, isUnsigned: true)
!1059 = !{!303, !326, !7, !304, !1060, !385, !307, !321, !1061, !309}
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 64)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 64)
!1062 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !307)
!1063 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1064, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !471, splitDebugInlining: false, nameTableKind: None)
!1064 = !DIFile(filename: "utils.c", directory: "/home/songxiangpu/Documents/protocol_implementation/pure-ftpd/src")
!1065 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1066, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !471, retainedTypes: !1067, splitDebugInlining: false, nameTableKind: None)
!1066 = !DIFile(filename: "bsd-glob.c", directory: "/home/songxiangpu/Documents/protocol_implementation/pure-ftpd/src")
!1067 = !{!306, !303, !382, !1068, !1071, !1070, !1072, !383, !304, !1087, !493}
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64)
!1069 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1070)
!1070 = !DIDerivedType(tag: DW_TAG_typedef, name: "Char", file: !1066, line: 98, baseType: !321)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 64)
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 64)
!1073 = !DISubroutineType(types: !1074)
!1074 = !{!1075, !303}
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 64)
!1076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !1077, line: 22, size: 2240, elements: !1078)
!1077 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/dirent.h", directory: "")
!1078 = !{!1079, !1080, !1081, !1082, !1083}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !1076, file: !1077, line: 25, baseType: !482, size: 64)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !1076, file: !1077, line: 26, baseType: !346, size: 64, offset: 64)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !1076, file: !1077, line: 31, baseType: !321, size: 16, offset: 128)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !1076, file: !1077, line: 32, baseType: !307, size: 8, offset: 144)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !1076, file: !1077, line: 33, baseType: !1084, size: 2048, offset: 152)
!1084 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 2048, elements: !1085)
!1085 = !{!1086}
!1086 = !DISubrange(count: 256)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64)
!1088 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1089)
!1089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "glob_path_stat", file: !1066, line: 123, size: 128, elements: !1090)
!1090 = !{!1091, !1092}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "gps_path", scope: !1089, file: !1066, line: 124, baseType: !308, size: 64)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "gps_stat", scope: !1089, file: !1066, line: 125, baseType: !1093, size: 64, offset: 64)
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 64)
!1094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !1095, line: 46, size: 1152, elements: !1096)
!1095 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!1096 = !{!1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1108, !1110, !1117, !1118, !1119}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1094, file: !1095, line: 48, baseType: !478, size: 64)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1094, file: !1095, line: 53, baseType: !482, size: 64, offset: 64)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1094, file: !1095, line: 61, baseType: !833, size: 64, offset: 128)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1094, file: !1095, line: 62, baseType: !349, size: 32, offset: 192)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1094, file: !1095, line: 64, baseType: !339, size: 32, offset: 224)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1094, file: !1095, line: 65, baseType: !360, size: 32, offset: 256)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1094, file: !1095, line: 67, baseType: !326, size: 32, offset: 288)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1094, file: !1095, line: 69, baseType: !478, size: 64, offset: 320)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1094, file: !1095, line: 74, baseType: !346, size: 64, offset: 384)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1094, file: !1095, line: 78, baseType: !1107, size: 64, offset: 448)
!1107 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !313, line: 174, baseType: !334)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1094, file: !1095, line: 80, baseType: !1109, size: 64, offset: 512)
!1109 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !313, line: 179, baseType: !334)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1094, file: !1095, line: 91, baseType: !1111, size: 128, offset: 576)
!1111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !1112, line: 10, size: 128, elements: !1113)
!1112 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!1113 = !{!1114, !1115}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1111, file: !1112, line: 12, baseType: !333, size: 64)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1111, file: !1112, line: 16, baseType: !1116, size: 64, offset: 64)
!1116 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !313, line: 196, baseType: !334)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1094, file: !1095, line: 92, baseType: !1111, size: 128, offset: 704)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1094, file: !1095, line: 93, baseType: !1111, size: 128, offset: 832)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1094, file: !1095, line: 106, baseType: !1120, size: 192, offset: 960)
!1120 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1116, size: 192, elements: !1121)
!1121 = !{!1122}
!1122 = !DISubrange(count: 3)
!1123 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1124, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !471, retainedTypes: !1125, splitDebugInlining: false, nameTableKind: None)
!1124 = !DIFile(filename: "daemons.c", directory: "/home/songxiangpu/Documents/protocol_implementation/pure-ftpd/src")
!1125 = !{!326, !304, !383, !306}
!1126 = !{!"clang version 10.0.0-4ubuntu1 "}
!1127 = !{i32 7, !"Dwarf Version", i32 4}
!1128 = !{i32 2, !"Debug Info Version", i32 3}
!1129 = !{i32 1, !"wchar_size", i32 4}
!1130 = !{i32 7, !"PIC Level", i32 2}
!1131 = !{i32 7, !"PIE Level", i32 2}
!1132 = distinct !DISubprogram(name: "main", scope: !972, file: !972, line: 4, type: !1133, scopeLine: 5, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !971, retainedNodes: !471)
!1133 = !DISubroutineType(types: !1134)
!1134 = !{!326, !326, !493}
!1135 = !DILocalVariable(name: "argc", arg: 1, scope: !1132, file: !972, line: 4, type: !326)
!1136 = !DILocation(line: 4, column: 14, scope: !1132)
!1137 = !DILocalVariable(name: "argv", arg: 2, scope: !1132, file: !972, line: 4, type: !493)
!1138 = !DILocation(line: 4, column: 26, scope: !1132)
!1139 = !DILocation(line: 6, column: 27, scope: !1132)
!1140 = !DILocation(line: 6, column: 33, scope: !1132)
!1141 = !DILocation(line: 6, column: 12, scope: !1132)
!1142 = !DILocation(line: 6, column: 5, scope: !1132)
!1143 = distinct !DISubprogram(name: "disablesignals", scope: !3, file: !3, line: 51, type: !486, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!1144 = !DILocalVariable(name: "sigs", scope: !1143, file: !3, line: 53, type: !500)
!1145 = !DILocation(line: 53, column: 14, scope: !1143)
!1146 = !DILocation(line: 55, column: 5, scope: !1143)
!1147 = !DILocation(line: 56, column: 9, scope: !1148)
!1148 = distinct !DILexicalBlock(scope: !1143, file: !3, line: 56, column: 9)
!1149 = !DILocation(line: 56, column: 53, scope: !1148)
!1150 = !DILocation(line: 56, column: 9, scope: !1143)
!1151 = !DILocation(line: 57, column: 9, scope: !1152)
!1152 = distinct !DILexicalBlock(scope: !1148, file: !3, line: 56, column: 58)
!1153 = !DILocation(line: 59, column: 1, scope: !1143)
!1154 = distinct !DISubprogram(name: "_EXIT", scope: !3, file: !3, line: 299, type: !803, scopeLine: 300, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!1155 = !DILocalVariable(name: "status", arg: 1, scope: !1154, file: !3, line: 299, type: !731)
!1156 = !DILocation(line: 299, column: 22, scope: !1154)
!1157 = !DILocation(line: 301, column: 5, scope: !1154)
!1158 = !DILocation(line: 305, column: 11, scope: !1154)
!1159 = !DILocation(line: 305, column: 5, scope: !1154)
!1160 = distinct !DISubprogram(name: "delete_atomic_file", scope: !3, file: !3, line: 3699, type: !486, scopeLine: 3700, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!1161 = !DILocalVariable(name: "atomic_file", scope: !1160, file: !3, line: 3701, type: !385)
!1162 = !DILocation(line: 3701, column: 17, scope: !1160)
!1163 = !DILocation(line: 3703, column: 24, scope: !1164)
!1164 = distinct !DILexicalBlock(scope: !1160, file: !3, line: 3703, column: 9)
!1165 = !DILocation(line: 3703, column: 22, scope: !1164)
!1166 = !DILocation(line: 3703, column: 47, scope: !1164)
!1167 = !DILocation(line: 3703, column: 55, scope: !1164)
!1168 = !DILocation(line: 3703, column: 59, scope: !1164)
!1169 = !DILocation(line: 3703, column: 58, scope: !1164)
!1170 = !DILocation(line: 3703, column: 71, scope: !1164)
!1171 = !DILocation(line: 3703, column: 9, scope: !1160)
!1172 = !DILocation(line: 3704, column: 9, scope: !1173)
!1173 = distinct !DILexicalBlock(scope: !1164, file: !3, line: 3703, column: 77)
!1174 = !DILocation(line: 3707, column: 17, scope: !1160)
!1175 = !DILocation(line: 3708, column: 1, scope: !1160)
!1176 = !DILocalVariable(name: "file", arg: 1, scope: !738, file: !3, line: 3663, type: !529)
!1177 = !DILocation(line: 3663, column: 49, scope: !738)
!1178 = !DILocalVariable(name: "z", scope: !738, file: !3, line: 3666, type: !308)
!1179 = !DILocation(line: 3666, column: 11, scope: !738)
!1180 = !DILocalVariable(name: "orig_len", scope: !738, file: !3, line: 3667, type: !304)
!1181 = !DILocation(line: 3667, column: 12, scope: !738)
!1182 = !DILocalVariable(name: "slash", scope: !738, file: !3, line: 3668, type: !304)
!1183 = !DILocation(line: 3668, column: 12, scope: !738)
!1184 = !DILocalVariable(name: "sizeof_atomic_prefix", scope: !738, file: !3, line: 3669, type: !304)
!1185 = !DILocation(line: 3669, column: 12, scope: !738)
!1186 = !DILocation(line: 3671, column: 9, scope: !1187)
!1187 = distinct !DILexicalBlock(scope: !738, file: !3, line: 3671, column: 9)
!1188 = !DILocation(line: 3671, column: 14, scope: !1187)
!1189 = !DILocation(line: 3671, column: 9, scope: !738)
!1190 = !DILocation(line: 3672, column: 9, scope: !1191)
!1191 = distinct !DILexicalBlock(scope: !1187, file: !3, line: 3671, column: 23)
!1192 = !DILocation(line: 3674, column: 22, scope: !1193)
!1193 = distinct !DILexicalBlock(scope: !738, file: !3, line: 3674, column: 9)
!1194 = !DILocation(line: 3674, column: 14, scope: !1193)
!1195 = !DILocation(line: 3674, column: 12, scope: !1193)
!1196 = !DILocation(line: 3674, column: 34, scope: !1193)
!1197 = !DILocation(line: 3674, column: 9, scope: !738)
!1198 = !DILocation(line: 3675, column: 14, scope: !1199)
!1199 = distinct !DILexicalBlock(scope: !1193, file: !3, line: 3674, column: 43)
!1200 = !DILocation(line: 3676, column: 18, scope: !1199)
!1201 = !DILocation(line: 3677, column: 5, scope: !1199)
!1202 = !DILocation(line: 3678, column: 27, scope: !1203)
!1203 = distinct !DILexicalBlock(scope: !1193, file: !3, line: 3677, column: 12)
!1204 = !DILocation(line: 3678, column: 31, scope: !1203)
!1205 = !DILocation(line: 3678, column: 29, scope: !1203)
!1206 = !DILocation(line: 3678, column: 15, scope: !1203)
!1207 = !DILocation(line: 3679, column: 13, scope: !1208)
!1208 = distinct !DILexicalBlock(scope: !1203, file: !3, line: 3679, column: 13)
!1209 = !DILocation(line: 3679, column: 19, scope: !1208)
!1210 = !DILocation(line: 3679, column: 13, scope: !1203)
!1211 = !DILocation(line: 3680, column: 13, scope: !1212)
!1212 = distinct !DILexicalBlock(scope: !1208, file: !3, line: 3679, column: 50)
!1213 = !DILocation(line: 3682, column: 14, scope: !1203)
!1214 = !DILocation(line: 3683, column: 13, scope: !1215)
!1215 = distinct !DILexicalBlock(scope: !1203, file: !3, line: 3683, column: 13)
!1216 = !DILocation(line: 3683, column: 18, scope: !1215)
!1217 = !DILocation(line: 3683, column: 25, scope: !1215)
!1218 = !DILocation(line: 3683, column: 13, scope: !1203)
!1219 = !DILocation(line: 3684, column: 13, scope: !1220)
!1220 = distinct !DILexicalBlock(scope: !1215, file: !3, line: 3683, column: 31)
!1221 = !DILocation(line: 3686, column: 22, scope: !1203)
!1222 = !DILocation(line: 3686, column: 28, scope: !1203)
!1223 = !DILocation(line: 3686, column: 9, scope: !1203)
!1224 = !DILocation(line: 3687, column: 13, scope: !1203)
!1225 = !DILocation(line: 3687, column: 9, scope: !1203)
!1226 = !DILocation(line: 3687, column: 20, scope: !1203)
!1227 = !DILocation(line: 3688, column: 20, scope: !1203)
!1228 = !DILocation(line: 3688, column: 18, scope: !1203)
!1229 = !DILocation(line: 3690, column: 35, scope: !738)
!1230 = !DILocation(line: 3690, column: 28, scope: !738)
!1231 = !DILocation(line: 3690, column: 50, scope: !738)
!1232 = !DILocation(line: 3690, column: 26, scope: !738)
!1233 = !DILocation(line: 3691, column: 22, scope: !1234)
!1234 = distinct !DILexicalBlock(scope: !738, file: !3, line: 3691, column: 9)
!1235 = !DILocation(line: 3691, column: 20, scope: !1234)
!1236 = !DILocation(line: 3691, column: 33, scope: !1234)
!1237 = !DILocation(line: 3691, column: 31, scope: !1234)
!1238 = !DILocation(line: 3691, column: 9, scope: !738)
!1239 = !DILocation(line: 3692, column: 9, scope: !1240)
!1240 = distinct !DILexicalBlock(scope: !1234, file: !3, line: 3691, column: 55)
!1241 = !DILocation(line: 3694, column: 18, scope: !738)
!1242 = !DILocation(line: 3694, column: 16, scope: !738)
!1243 = !DILocation(line: 3694, column: 28, scope: !738)
!1244 = !DILocation(line: 3694, column: 43, scope: !738)
!1245 = !DILocation(line: 3694, column: 5, scope: !738)
!1246 = !DILocation(line: 3696, column: 5, scope: !738)
!1247 = !DILocation(line: 3697, column: 1, scope: !738)
!1248 = distinct !DISubprogram(name: "usleep2", scope: !3, file: !3, line: 68, type: !1249, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!1249 = !DISubroutineType(types: !1250)
!1250 = !{null, !1251}
!1251 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !306)
!1252 = !DILocalVariable(name: "microsec", arg: 1, scope: !1248, file: !3, line: 68, type: !1251)
!1253 = !DILocation(line: 68, column: 34, scope: !1248)
!1254 = !DILocation(line: 73, column: 1, scope: !1248)
!1255 = distinct !DISubprogram(name: "simplify", scope: !3, file: !3, line: 192, type: !469, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!1256 = !DILocalVariable(name: "subdir", arg: 1, scope: !1255, file: !3, line: 192, type: !308)
!1257 = !DILocation(line: 192, column: 21, scope: !1255)
!1258 = !DILocalVariable(name: "a", scope: !1255, file: !3, line: 194, type: !308)
!1259 = !DILocation(line: 194, column: 11, scope: !1255)
!1260 = !DILocation(line: 196, column: 9, scope: !1261)
!1261 = distinct !DILexicalBlock(scope: !1255, file: !3, line: 196, column: 9)
!1262 = !DILocation(line: 196, column: 16, scope: !1261)
!1263 = !DILocation(line: 196, column: 24, scope: !1261)
!1264 = !DILocation(line: 196, column: 28, scope: !1261)
!1265 = !DILocation(line: 196, column: 27, scope: !1261)
!1266 = !DILocation(line: 196, column: 35, scope: !1261)
!1267 = !DILocation(line: 196, column: 9, scope: !1255)
!1268 = !DILocation(line: 197, column: 9, scope: !1269)
!1269 = distinct !DILexicalBlock(scope: !1261, file: !3, line: 196, column: 41)
!1270 = !DILocation(line: 199, column: 5, scope: !1255)
!1271 = !DILocation(line: 199, column: 24, scope: !1255)
!1272 = !DILocation(line: 199, column: 17, scope: !1255)
!1273 = !DILocation(line: 199, column: 15, scope: !1255)
!1274 = !DILocation(line: 199, column: 39, scope: !1255)
!1275 = !DILocation(line: 200, column: 20, scope: !1276)
!1276 = distinct !DILexicalBlock(scope: !1255, file: !3, line: 199, column: 48)
!1277 = !DILocation(line: 200, column: 23, scope: !1276)
!1278 = !DILocation(line: 200, column: 25, scope: !1276)
!1279 = !DILocation(line: 200, column: 9, scope: !1276)
!1280 = distinct !{!1280, !1270, !1281}
!1281 = !DILocation(line: 201, column: 5, scope: !1255)
!1282 = !DILocation(line: 202, column: 5, scope: !1255)
!1283 = !DILocation(line: 202, column: 24, scope: !1255)
!1284 = !DILocation(line: 202, column: 17, scope: !1255)
!1285 = !DILocation(line: 202, column: 15, scope: !1255)
!1286 = !DILocation(line: 202, column: 40, scope: !1255)
!1287 = !DILocation(line: 203, column: 20, scope: !1288)
!1288 = distinct !DILexicalBlock(scope: !1255, file: !3, line: 202, column: 49)
!1289 = !DILocation(line: 203, column: 23, scope: !1288)
!1290 = !DILocation(line: 203, column: 25, scope: !1288)
!1291 = !DILocation(line: 203, column: 9, scope: !1288)
!1292 = distinct !{!1292, !1282, !1293}
!1293 = !DILocation(line: 204, column: 5, scope: !1255)
!1294 = !DILocation(line: 205, column: 5, scope: !1255)
!1295 = !DILocation(line: 205, column: 20, scope: !1255)
!1296 = !DILocation(line: 205, column: 12, scope: !1255)
!1297 = !DILocation(line: 205, column: 38, scope: !1255)
!1298 = !DILocation(line: 206, column: 16, scope: !1299)
!1299 = distinct !DILexicalBlock(scope: !1255, file: !3, line: 205, column: 44)
!1300 = distinct !{!1300, !1294, !1301}
!1301 = !DILocation(line: 207, column: 5, scope: !1255)
!1302 = !DILocation(line: 208, column: 16, scope: !1255)
!1303 = !DILocation(line: 208, column: 9, scope: !1255)
!1304 = !DILocation(line: 208, column: 7, scope: !1255)
!1305 = !DILocation(line: 209, column: 9, scope: !1306)
!1306 = distinct !DILexicalBlock(scope: !1255, file: !3, line: 209, column: 9)
!1307 = !DILocation(line: 209, column: 11, scope: !1306)
!1308 = !DILocation(line: 209, column: 9, scope: !1255)
!1309 = !DILocation(line: 210, column: 13, scope: !1310)
!1310 = distinct !DILexicalBlock(scope: !1311, file: !3, line: 210, column: 13)
!1311 = distinct !DILexicalBlock(scope: !1306, file: !3, line: 209, column: 20)
!1312 = !DILocation(line: 210, column: 18, scope: !1310)
!1313 = !DILocation(line: 210, column: 15, scope: !1310)
!1314 = !DILocation(line: 210, column: 13, scope: !1311)
!1315 = !DILocation(line: 211, column: 13, scope: !1316)
!1316 = distinct !DILexicalBlock(scope: !1310, file: !3, line: 210, column: 26)
!1317 = !DILocation(line: 211, column: 28, scope: !1316)
!1318 = !DILocation(line: 211, column: 20, scope: !1316)
!1319 = !DILocation(line: 211, column: 47, scope: !1316)
!1320 = !DILocation(line: 212, column: 28, scope: !1321)
!1321 = distinct !DILexicalBlock(scope: !1316, file: !3, line: 211, column: 53)
!1322 = !DILocation(line: 212, column: 36, scope: !1321)
!1323 = !DILocation(line: 212, column: 43, scope: !1321)
!1324 = !DILocation(line: 212, column: 17, scope: !1321)
!1325 = distinct !{!1325, !1315, !1326}
!1326 = !DILocation(line: 213, column: 13, scope: !1316)
!1327 = !DILocation(line: 214, column: 24, scope: !1316)
!1328 = !DILocation(line: 214, column: 17, scope: !1316)
!1329 = !DILocation(line: 214, column: 15, scope: !1316)
!1330 = !DILocation(line: 215, column: 9, scope: !1316)
!1331 = !DILocation(line: 216, column: 9, scope: !1311)
!1332 = !DILocation(line: 216, column: 16, scope: !1311)
!1333 = !DILocation(line: 216, column: 18, scope: !1311)
!1334 = !DILocalVariable(name: "nextcomponent", scope: !1335, file: !3, line: 217, type: !308)
!1335 = distinct !DILexicalBlock(scope: !1311, file: !3, line: 216, column: 27)
!1336 = !DILocation(line: 217, column: 19, scope: !1335)
!1337 = !DILocation(line: 217, column: 35, scope: !1335)
!1338 = !DILocation(line: 217, column: 37, scope: !1335)
!1339 = !DILocation(line: 218, column: 17, scope: !1340)
!1340 = distinct !DILexicalBlock(scope: !1335, file: !3, line: 218, column: 17)
!1341 = !DILocation(line: 218, column: 22, scope: !1340)
!1342 = !DILocation(line: 218, column: 19, scope: !1340)
!1343 = !DILocation(line: 218, column: 29, scope: !1340)
!1344 = !DILocation(line: 218, column: 33, scope: !1340)
!1345 = !DILocation(line: 218, column: 32, scope: !1340)
!1346 = !DILocation(line: 218, column: 35, scope: !1340)
!1347 = !DILocation(line: 218, column: 17, scope: !1335)
!1348 = !DILocation(line: 219, column: 18, scope: !1349)
!1349 = distinct !DILexicalBlock(scope: !1340, file: !3, line: 218, column: 43)
!1350 = !DILocation(line: 220, column: 13, scope: !1349)
!1351 = !DILocation(line: 221, column: 13, scope: !1335)
!1352 = !DILocation(line: 221, column: 20, scope: !1335)
!1353 = !DILocation(line: 221, column: 25, scope: !1335)
!1354 = !DILocation(line: 221, column: 22, scope: !1335)
!1355 = !DILocation(line: 221, column: 32, scope: !1335)
!1356 = !DILocation(line: 221, column: 36, scope: !1335)
!1357 = !DILocation(line: 221, column: 35, scope: !1335)
!1358 = !DILocation(line: 221, column: 38, scope: !1335)
!1359 = !DILocation(line: 0, scope: !1335)
!1360 = !DILocation(line: 222, column: 18, scope: !1361)
!1361 = distinct !DILexicalBlock(scope: !1335, file: !3, line: 221, column: 46)
!1362 = distinct !{!1362, !1351, !1363}
!1363 = !DILocation(line: 223, column: 13, scope: !1335)
!1364 = !DILocation(line: 224, column: 18, scope: !1365)
!1365 = distinct !DILexicalBlock(scope: !1335, file: !3, line: 224, column: 17)
!1366 = !DILocation(line: 224, column: 17, scope: !1365)
!1367 = !DILocation(line: 224, column: 20, scope: !1365)
!1368 = !DILocation(line: 224, column: 17, scope: !1335)
!1369 = !DILocation(line: 225, column: 18, scope: !1370)
!1370 = distinct !DILexicalBlock(scope: !1365, file: !3, line: 224, column: 28)
!1371 = !DILocation(line: 226, column: 13, scope: !1370)
!1372 = !DILocation(line: 227, column: 24, scope: !1335)
!1373 = !DILocation(line: 227, column: 27, scope: !1335)
!1374 = !DILocation(line: 227, column: 13, scope: !1335)
!1375 = !DILocation(line: 228, column: 24, scope: !1335)
!1376 = !DILocation(line: 228, column: 17, scope: !1335)
!1377 = !DILocation(line: 228, column: 15, scope: !1335)
!1378 = distinct !{!1378, !1331, !1379}
!1379 = !DILocation(line: 229, column: 9, scope: !1311)
!1380 = !DILocation(line: 230, column: 5, scope: !1311)
!1381 = !DILocation(line: 231, column: 9, scope: !1255)
!1382 = !DILocation(line: 231, column: 7, scope: !1255)
!1383 = !DILocation(line: 232, column: 10, scope: !1384)
!1384 = distinct !DILexicalBlock(scope: !1255, file: !3, line: 232, column: 9)
!1385 = !DILocation(line: 232, column: 9, scope: !1384)
!1386 = !DILocation(line: 232, column: 12, scope: !1384)
!1387 = !DILocation(line: 232, column: 9, scope: !1255)
!1388 = !DILocation(line: 233, column: 10, scope: !1389)
!1389 = distinct !DILexicalBlock(scope: !1384, file: !3, line: 232, column: 20)
!1390 = !DILocation(line: 234, column: 14, scope: !1391)
!1391 = distinct !DILexicalBlock(scope: !1389, file: !3, line: 234, column: 13)
!1392 = !DILocation(line: 234, column: 13, scope: !1391)
!1393 = !DILocation(line: 234, column: 16, scope: !1391)
!1394 = !DILocation(line: 234, column: 13, scope: !1389)
!1395 = !DILocation(line: 235, column: 13, scope: !1396)
!1396 = distinct !DILexicalBlock(scope: !1391, file: !3, line: 234, column: 22)
!1397 = !DILocation(line: 237, column: 14, scope: !1398)
!1398 = distinct !DILexicalBlock(scope: !1389, file: !3, line: 237, column: 13)
!1399 = !DILocation(line: 237, column: 13, scope: !1398)
!1400 = !DILocation(line: 237, column: 16, scope: !1398)
!1401 = !DILocation(line: 237, column: 13, scope: !1389)
!1402 = !DILocation(line: 238, column: 13, scope: !1403)
!1403 = distinct !DILexicalBlock(scope: !1398, file: !3, line: 237, column: 24)
!1404 = !DILocation(line: 238, column: 21, scope: !1403)
!1405 = !DILocation(line: 238, column: 20, scope: !1403)
!1406 = !DILocation(line: 238, column: 23, scope: !1403)
!1407 = !DILocation(line: 239, column: 18, scope: !1408)
!1408 = distinct !DILexicalBlock(scope: !1403, file: !3, line: 238, column: 31)
!1409 = distinct !{!1409, !1402, !1410}
!1410 = !DILocation(line: 240, column: 13, scope: !1403)
!1411 = !DILocation(line: 241, column: 24, scope: !1403)
!1412 = !DILocation(line: 241, column: 32, scope: !1403)
!1413 = !DILocation(line: 241, column: 13, scope: !1403)
!1414 = !DILocation(line: 242, column: 9, scope: !1403)
!1415 = !DILocation(line: 243, column: 5, scope: !1389)
!1416 = !DILocation(line: 244, column: 10, scope: !1417)
!1417 = distinct !DILexicalBlock(scope: !1255, file: !3, line: 244, column: 9)
!1418 = !DILocation(line: 244, column: 9, scope: !1417)
!1419 = !DILocation(line: 244, column: 12, scope: !1417)
!1420 = !DILocation(line: 244, column: 9, scope: !1255)
!1421 = !DILocation(line: 245, column: 9, scope: !1422)
!1422 = distinct !DILexicalBlock(scope: !1417, file: !3, line: 244, column: 18)
!1423 = !DILocation(line: 247, column: 9, scope: !1255)
!1424 = !DILocation(line: 247, column: 25, scope: !1255)
!1425 = !DILocation(line: 247, column: 18, scope: !1255)
!1426 = !DILocation(line: 247, column: 16, scope: !1255)
!1427 = !DILocation(line: 247, column: 33, scope: !1255)
!1428 = !DILocation(line: 247, column: 7, scope: !1255)
!1429 = !DILocation(line: 248, column: 10, scope: !1430)
!1430 = distinct !DILexicalBlock(scope: !1255, file: !3, line: 248, column: 9)
!1431 = !DILocation(line: 248, column: 9, scope: !1430)
!1432 = !DILocation(line: 248, column: 12, scope: !1430)
!1433 = !DILocation(line: 248, column: 19, scope: !1430)
!1434 = !DILocation(line: 248, column: 22, scope: !1430)
!1435 = !DILocation(line: 248, column: 27, scope: !1430)
!1436 = !DILocation(line: 248, column: 24, scope: !1430)
!1437 = !DILocation(line: 248, column: 9, scope: !1255)
!1438 = !DILocation(line: 249, column: 9, scope: !1439)
!1439 = distinct !DILexicalBlock(scope: !1430, file: !3, line: 248, column: 35)
!1440 = !DILocation(line: 251, column: 6, scope: !1255)
!1441 = !DILocation(line: 252, column: 10, scope: !1442)
!1442 = distinct !DILexicalBlock(scope: !1255, file: !3, line: 252, column: 9)
!1443 = !DILocation(line: 252, column: 9, scope: !1442)
!1444 = !DILocation(line: 252, column: 12, scope: !1442)
!1445 = !DILocation(line: 252, column: 19, scope: !1442)
!1446 = !DILocation(line: 252, column: 22, scope: !1442)
!1447 = !DILocation(line: 252, column: 27, scope: !1442)
!1448 = !DILocation(line: 252, column: 24, scope: !1442)
!1449 = !DILocation(line: 252, column: 9, scope: !1255)
!1450 = !DILocation(line: 253, column: 9, scope: !1451)
!1451 = distinct !DILexicalBlock(scope: !1442, file: !3, line: 252, column: 35)
!1452 = !DILocation(line: 253, column: 14, scope: !1451)
!1453 = !DILocation(line: 254, column: 9, scope: !1451)
!1454 = !DILocation(line: 256, column: 10, scope: !1455)
!1455 = distinct !DILexicalBlock(scope: !1255, file: !3, line: 256, column: 9)
!1456 = !DILocation(line: 256, column: 9, scope: !1455)
!1457 = !DILocation(line: 256, column: 12, scope: !1455)
!1458 = !DILocation(line: 256, column: 19, scope: !1455)
!1459 = !DILocation(line: 256, column: 22, scope: !1455)
!1460 = !DILocation(line: 256, column: 27, scope: !1455)
!1461 = !DILocation(line: 256, column: 24, scope: !1455)
!1462 = !DILocation(line: 256, column: 9, scope: !1255)
!1463 = !DILocation(line: 257, column: 9, scope: !1464)
!1464 = distinct !DILexicalBlock(scope: !1455, file: !3, line: 256, column: 35)
!1465 = !DILocation(line: 259, column: 6, scope: !1255)
!1466 = !DILocation(line: 260, column: 10, scope: !1467)
!1467 = distinct !DILexicalBlock(scope: !1255, file: !3, line: 260, column: 9)
!1468 = !DILocation(line: 260, column: 9, scope: !1467)
!1469 = !DILocation(line: 260, column: 12, scope: !1467)
!1470 = !DILocation(line: 260, column: 9, scope: !1255)
!1471 = !DILocation(line: 261, column: 9, scope: !1472)
!1472 = distinct !DILexicalBlock(scope: !1467, file: !3, line: 260, column: 20)
!1473 = !DILocation(line: 263, column: 6, scope: !1255)
!1474 = !DILocation(line: 263, column: 8, scope: !1255)
!1475 = !DILocation(line: 264, column: 22, scope: !1476)
!1476 = distinct !DILexicalBlock(scope: !1255, file: !3, line: 264, column: 9)
!1477 = !DILocation(line: 264, column: 14, scope: !1476)
!1478 = !DILocation(line: 264, column: 12, scope: !1476)
!1479 = !DILocation(line: 264, column: 36, scope: !1476)
!1480 = !DILocation(line: 264, column: 9, scope: !1255)
!1481 = !DILocation(line: 265, column: 10, scope: !1482)
!1482 = distinct !DILexicalBlock(scope: !1476, file: !3, line: 264, column: 45)
!1483 = !DILocation(line: 265, column: 17, scope: !1482)
!1484 = !DILocation(line: 266, column: 9, scope: !1482)
!1485 = !DILocation(line: 266, column: 19, scope: !1482)
!1486 = !DILocation(line: 267, column: 9, scope: !1482)
!1487 = !DILocation(line: 269, column: 5, scope: !1255)
!1488 = !DILocation(line: 269, column: 10, scope: !1255)
!1489 = !DILocation(line: 270, column: 1, scope: !1255)
!1490 = distinct !DISubprogram(name: "overlapcpy", scope: !3, file: !3, line: 144, type: !1491, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!1491 = !DISubroutineType(types: !1492)
!1492 = !{null, !308, !385}
!1493 = !DILocalVariable(name: "d", arg: 1, scope: !1490, file: !3, line: 144, type: !308)
!1494 = !DILocation(line: 144, column: 30, scope: !1490)
!1495 = !DILocalVariable(name: "s", arg: 2, scope: !1490, file: !3, line: 144, type: !385)
!1496 = !DILocation(line: 144, column: 45, scope: !1490)
!1497 = !DILocation(line: 146, column: 5, scope: !1490)
!1498 = !DILocation(line: 146, column: 13, scope: !1490)
!1499 = !DILocation(line: 146, column: 12, scope: !1490)
!1500 = !DILocation(line: 146, column: 15, scope: !1490)
!1501 = !DILocation(line: 147, column: 18, scope: !1502)
!1502 = distinct !DILexicalBlock(scope: !1490, file: !3, line: 146, column: 21)
!1503 = !DILocation(line: 147, column: 16, scope: !1502)
!1504 = !DILocation(line: 147, column: 11, scope: !1502)
!1505 = !DILocation(line: 147, column: 14, scope: !1502)
!1506 = distinct !{!1506, !1497, !1507}
!1507 = !DILocation(line: 148, column: 5, scope: !1490)
!1508 = !DILocation(line: 149, column: 6, scope: !1490)
!1509 = !DILocation(line: 149, column: 8, scope: !1490)
!1510 = !DILocation(line: 150, column: 1, scope: !1490)
!1511 = distinct !DISubprogram(name: "checkprintable", scope: !3, file: !3, line: 272, type: !1512, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!1512 = !DISubroutineType(types: !1513)
!1513 = !{!326, !385}
!1514 = !DILocalVariable(name: "s", arg: 1, scope: !1511, file: !3, line: 272, type: !385)
!1515 = !DILocation(line: 272, column: 32, scope: !1511)
!1516 = !DILocalVariable(name: "ret", scope: !1511, file: !3, line: 274, type: !326)
!1517 = !DILocation(line: 274, column: 9, scope: !1511)
!1518 = !DILocalVariable(name: "c", scope: !1511, file: !3, line: 275, type: !307)
!1519 = !DILocation(line: 275, column: 19, scope: !1511)
!1520 = !DILocation(line: 277, column: 5, scope: !1511)
!1521 = !DILocation(line: 277, column: 34, scope: !1511)
!1522 = !DILocation(line: 277, column: 33, scope: !1511)
!1523 = !DILocation(line: 277, column: 15, scope: !1511)
!1524 = !DILocation(line: 277, column: 12, scope: !1511)
!1525 = !DILocation(line: 277, column: 37, scope: !1511)
!1526 = !DILocation(line: 278, column: 13, scope: !1527)
!1527 = distinct !DILexicalBlock(scope: !1528, file: !3, line: 278, column: 13)
!1528 = distinct !DILexicalBlock(scope: !1511, file: !3, line: 277, column: 44)
!1529 = !DILocation(line: 278, column: 13, scope: !1528)
!1530 = !DILocation(line: 279, column: 16, scope: !1531)
!1531 = distinct !DILexicalBlock(scope: !1527, file: !3, line: 278, column: 28)
!1532 = !DILocation(line: 280, column: 13, scope: !1531)
!1533 = !DILocation(line: 282, column: 10, scope: !1528)
!1534 = distinct !{!1534, !1520, !1535}
!1535 = !DILocation(line: 283, column: 5, scope: !1511)
!1536 = !DILocation(line: 285, column: 12, scope: !1511)
!1537 = !DILocation(line: 285, column: 5, scope: !1511)
!1538 = distinct !DISubprogram(name: "skip_telnet_controls", scope: !3, file: !3, line: 288, type: !1539, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!1539 = !DISubroutineType(types: !1540)
!1540 = !{!308, !385}
!1541 = !DILocalVariable(name: "str", arg: 1, scope: !1538, file: !3, line: 288, type: !385)
!1542 = !DILocation(line: 288, column: 40, scope: !1538)
!1543 = !DILocation(line: 290, column: 9, scope: !1544)
!1544 = distinct !DILexicalBlock(scope: !1538, file: !3, line: 290, column: 9)
!1545 = !DILocation(line: 290, column: 13, scope: !1544)
!1546 = !DILocation(line: 290, column: 9, scope: !1538)
!1547 = !DILocation(line: 291, column: 9, scope: !1548)
!1548 = distinct !DILexicalBlock(scope: !1544, file: !3, line: 290, column: 22)
!1549 = !DILocation(line: 293, column: 5, scope: !1538)
!1550 = !DILocation(line: 293, column: 13, scope: !1538)
!1551 = !DILocation(line: 293, column: 12, scope: !1538)
!1552 = !DILocation(line: 293, column: 17, scope: !1538)
!1553 = !DILocation(line: 293, column: 22, scope: !1538)
!1554 = !DILocation(line: 293, column: 42, scope: !1538)
!1555 = !DILocation(line: 293, column: 41, scope: !1538)
!1556 = !DILocation(line: 293, column: 25, scope: !1538)
!1557 = !DILocation(line: 293, column: 46, scope: !1538)
!1558 = !DILocation(line: 0, scope: !1538)
!1559 = !DILocation(line: 294, column: 12, scope: !1560)
!1560 = distinct !DILexicalBlock(scope: !1538, file: !3, line: 293, column: 55)
!1561 = distinct !{!1561, !1549, !1562}
!1562 = !DILocation(line: 295, column: 5, scope: !1538)
!1563 = !DILocation(line: 296, column: 21, scope: !1538)
!1564 = !DILocation(line: 296, column: 5, scope: !1538)
!1565 = !DILocation(line: 297, column: 1, scope: !1538)
!1566 = distinct !DISubprogram(name: "client_fflush", scope: !3, file: !3, line: 318, type: !486, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!1567 = !DILocation(line: 320, column: 9, scope: !1568)
!1568 = distinct !DILexicalBlock(scope: !1566, file: !3, line: 320, column: 9)
!1569 = !DILocation(line: 320, column: 22, scope: !1568)
!1570 = !DILocation(line: 320, column: 9, scope: !1566)
!1571 = !DILocation(line: 321, column: 9, scope: !1572)
!1572 = distinct !DILexicalBlock(scope: !1568, file: !3, line: 320, column: 35)
!1573 = !DILocation(line: 323, column: 16, scope: !1566)
!1574 = !DILocation(line: 323, column: 46, scope: !1566)
!1575 = !DILocation(line: 323, column: 59, scope: !1566)
!1576 = !DILocation(line: 323, column: 5, scope: !1566)
!1577 = !DILocation(line: 324, column: 5, scope: !1566)
!1578 = !DILocation(line: 325, column: 1, scope: !1566)
!1579 = distinct !DISubprogram(name: "client_init_reply_buf", scope: !3, file: !3, line: 312, type: !486, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!1580 = !DILocation(line: 314, column: 18, scope: !1579)
!1581 = !DILocation(line: 315, column: 19, scope: !1579)
!1582 = !DILocation(line: 316, column: 1, scope: !1579)
!1583 = distinct !DISubprogram(name: "client_printf", scope: !3, file: !3, line: 327, type: !1584, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!1584 = !DISubroutineType(types: !1585)
!1585 = !{null, !529, null}
!1586 = !DILocalVariable(name: "format", arg: 1, scope: !1583, file: !3, line: 327, type: !529)
!1587 = !DILocation(line: 327, column: 39, scope: !1583)
!1588 = !DILocalVariable(name: "va", scope: !1583, file: !3, line: 329, type: !1589)
!1589 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !345, line: 52, baseType: !1590)
!1590 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !1591, line: 32, baseType: !1592)
!1591 = !DIFile(filename: "/usr/lib/llvm-10/lib/clang/10.0.0/include/stdarg.h", directory: "")
!1592 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !3, line: 329, baseType: !1593)
!1593 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1594, size: 192, elements: !357)
!1594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, line: 329, size: 192, elements: !1595)
!1595 = !{!1596, !1597, !1598, !1599}
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1594, file: !3, line: 329, baseType: !7, size: 32)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1594, file: !3, line: 329, baseType: !7, size: 32, offset: 32)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1594, file: !3, line: 329, baseType: !303, size: 64, offset: 64)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1594, file: !3, line: 329, baseType: !303, size: 64, offset: 128)
!1600 = !DILocation(line: 329, column: 13, scope: !1583)
!1601 = !DILocalVariable(name: "buf", scope: !1583, file: !3, line: 330, type: !1602)
!1602 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 33168, elements: !1603)
!1603 = !{!1604}
!1604 = !DISubrange(count: 4146)
!1605 = !DILocation(line: 330, column: 10, scope: !1583)
!1606 = !DILocalVariable(name: "len", scope: !1583, file: !3, line: 331, type: !304)
!1607 = !DILocation(line: 331, column: 12, scope: !1583)
!1608 = !DILocalVariable(name: "vlen", scope: !1583, file: !3, line: 332, type: !326)
!1609 = !DILocation(line: 332, column: 9, scope: !1583)
!1610 = !DILocation(line: 334, column: 5, scope: !1583)
!1611 = !DILocation(line: 335, column: 22, scope: !1583)
!1612 = !DILocation(line: 335, column: 39, scope: !1583)
!1613 = !DILocation(line: 335, column: 47, scope: !1583)
!1614 = !DILocation(line: 335, column: 12, scope: !1583)
!1615 = !DILocation(line: 335, column: 10, scope: !1583)
!1616 = !DILocation(line: 336, column: 9, scope: !1617)
!1617 = distinct !DILexicalBlock(scope: !1583, file: !3, line: 336, column: 9)
!1618 = !DILocation(line: 336, column: 14, scope: !1617)
!1619 = !DILocation(line: 336, column: 18, scope: !1617)
!1620 = !DILocation(line: 336, column: 30, scope: !1617)
!1621 = !DILocation(line: 336, column: 21, scope: !1617)
!1622 = !DILocation(line: 336, column: 35, scope: !1617)
!1623 = !DILocation(line: 336, column: 9, scope: !1583)
!1624 = !DILocation(line: 337, column: 9, scope: !1625)
!1625 = distinct !DILexicalBlock(scope: !1617, file: !3, line: 336, column: 50)
!1626 = !DILocation(line: 337, column: 39, scope: !1625)
!1627 = !DILocation(line: 338, column: 22, scope: !1625)
!1628 = !DILocation(line: 338, column: 15, scope: !1625)
!1629 = !DILocation(line: 338, column: 13, scope: !1625)
!1630 = !DILocation(line: 339, column: 5, scope: !1625)
!1631 = !DILocation(line: 340, column: 24, scope: !1632)
!1632 = distinct !DILexicalBlock(scope: !1617, file: !3, line: 339, column: 12)
!1633 = !DILocation(line: 340, column: 15, scope: !1632)
!1634 = !DILocation(line: 340, column: 13, scope: !1632)
!1635 = !DILocation(line: 342, column: 9, scope: !1636)
!1636 = distinct !DILexicalBlock(scope: !1583, file: !3, line: 342, column: 9)
!1637 = !DILocation(line: 342, column: 16, scope: !1636)
!1638 = !DILocation(line: 342, column: 13, scope: !1636)
!1639 = !DILocation(line: 342, column: 9, scope: !1583)
!1640 = !DILocation(line: 343, column: 9, scope: !1641)
!1641 = distinct !DILexicalBlock(scope: !1636, file: !3, line: 342, column: 31)
!1642 = !DILocation(line: 344, column: 5, scope: !1641)
!1643 = !DILocation(line: 345, column: 9, scope: !1644)
!1644 = distinct !DILexicalBlock(scope: !1583, file: !3, line: 345, column: 9)
!1645 = !DILocation(line: 345, column: 15, scope: !1644)
!1646 = !DILocation(line: 345, column: 13, scope: !1644)
!1647 = !DILocation(line: 345, column: 9, scope: !1583)
!1648 = !DILocation(line: 346, column: 9, scope: !1649)
!1649 = distinct !DILexicalBlock(scope: !1644, file: !3, line: 345, column: 30)
!1650 = !DILocation(line: 347, column: 9, scope: !1649)
!1651 = !DILocation(line: 349, column: 12, scope: !1583)
!1652 = !DILocation(line: 349, column: 5, scope: !1583)
!1653 = !DILocation(line: 349, column: 31, scope: !1583)
!1654 = !DILocation(line: 350, column: 21, scope: !1583)
!1655 = !DILocation(line: 350, column: 18, scope: !1583)
!1656 = !DILocation(line: 351, column: 22, scope: !1583)
!1657 = !DILocation(line: 351, column: 19, scope: !1583)
!1658 = !DILocation(line: 353, column: 5, scope: !1583)
!1659 = !DILocation(line: 354, column: 1, scope: !1583)
!1660 = distinct !DISubprogram(name: "die", scope: !3, file: !3, line: 356, type: !1661, scopeLine: 357, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!1661 = !DISubroutineType(types: !1662)
!1662 = !{null, !731, !731, !529, null}
!1663 = !DILocalVariable(name: "err", arg: 1, scope: !1660, file: !3, line: 356, type: !731)
!1664 = !DILocation(line: 356, column: 20, scope: !1660)
!1665 = !DILocalVariable(name: "priority", arg: 2, scope: !1660, file: !3, line: 356, type: !731)
!1666 = !DILocation(line: 356, column: 35, scope: !1660)
!1667 = !DILocalVariable(name: "format", arg: 3, scope: !1660, file: !3, line: 356, type: !529)
!1668 = !DILocation(line: 356, column: 64, scope: !1660)
!1669 = !DILocalVariable(name: "va", scope: !1660, file: !3, line: 358, type: !1589)
!1670 = !DILocation(line: 358, column: 13, scope: !1660)
!1671 = !DILocalVariable(name: "line", scope: !1660, file: !3, line: 359, type: !1672)
!1672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 36864, elements: !1673)
!1673 = !{!1674}
!1674 = !DISubrange(count: 4608)
!1675 = !DILocation(line: 359, column: 10, scope: !1660)
!1676 = !DILocation(line: 361, column: 5, scope: !1660)
!1677 = !DILocation(line: 362, column: 13, scope: !1660)
!1678 = !DILocation(line: 363, column: 5, scope: !1660)
!1679 = !DILocation(line: 364, column: 15, scope: !1660)
!1680 = !DILocation(line: 364, column: 34, scope: !1660)
!1681 = !DILocation(line: 364, column: 42, scope: !1660)
!1682 = !DILocation(line: 364, column: 5, scope: !1660)
!1683 = !DILocation(line: 365, column: 14, scope: !1660)
!1684 = !DILocation(line: 365, column: 25, scope: !1660)
!1685 = !DILocation(line: 365, column: 5, scope: !1660)
!1686 = !DILocation(line: 366, column: 5, scope: !1660)
!1687 = !DILocation(line: 367, column: 5, scope: !1660)
!1688 = !DILocation(line: 368, column: 13, scope: !1660)
!1689 = !DILocation(line: 368, column: 29, scope: !1660)
!1690 = !DILocation(line: 368, column: 5, scope: !1660)
!1691 = !DILocation(line: 369, column: 12, scope: !1660)
!1692 = !DILocation(line: 369, column: 11, scope: !1660)
!1693 = !DILocation(line: 369, column: 21, scope: !1660)
!1694 = !DILocation(line: 369, column: 5, scope: !1660)
!1695 = distinct !DISubprogram(name: "addreply", scope: !3, file: !3, line: 711, type: !1696, scopeLine: 712, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!1696 = !DISubroutineType(types: !1697)
!1697 = !{null, !731, !529, null}
!1698 = !DILocalVariable(name: "code", arg: 1, scope: !1695, file: !3, line: 711, type: !731)
!1699 = !DILocation(line: 711, column: 25, scope: !1695)
!1700 = !DILocalVariable(name: "line", arg: 2, scope: !1695, file: !3, line: 711, type: !529)
!1701 = !DILocation(line: 711, column: 50, scope: !1695)
!1702 = !DILocalVariable(name: "a", scope: !1695, file: !3, line: 713, type: !308)
!1703 = !DILocation(line: 713, column: 11, scope: !1695)
!1704 = !DILocalVariable(name: "b", scope: !1695, file: !3, line: 714, type: !308)
!1705 = !DILocation(line: 714, column: 11, scope: !1695)
!1706 = !DILocalVariable(name: "ap", scope: !1695, file: !3, line: 715, type: !1589)
!1707 = !DILocation(line: 715, column: 13, scope: !1695)
!1708 = !DILocalVariable(name: "last", scope: !1695, file: !3, line: 716, type: !326)
!1709 = !DILocation(line: 716, column: 9, scope: !1695)
!1710 = !DILocalVariable(name: "buf", scope: !1695, file: !3, line: 717, type: !1602)
!1711 = !DILocation(line: 717, column: 10, scope: !1695)
!1712 = !DILocation(line: 719, column: 9, scope: !1713)
!1713 = distinct !DILexicalBlock(scope: !1695, file: !3, line: 719, column: 9)
!1714 = !DILocation(line: 719, column: 14, scope: !1713)
!1715 = !DILocation(line: 719, column: 9, scope: !1695)
!1716 = !DILocation(line: 720, column: 21, scope: !1717)
!1717 = distinct !DILexicalBlock(scope: !1713, file: !3, line: 719, column: 20)
!1718 = !DILocation(line: 720, column: 19, scope: !1717)
!1719 = !DILocation(line: 721, column: 5, scope: !1717)
!1720 = !DILocation(line: 722, column: 5, scope: !1695)
!1721 = !DILocation(line: 723, column: 15, scope: !1695)
!1722 = !DILocation(line: 723, column: 32, scope: !1695)
!1723 = !DILocation(line: 723, column: 38, scope: !1695)
!1724 = !DILocation(line: 723, column: 5, scope: !1695)
!1725 = !DILocation(line: 724, column: 5, scope: !1695)
!1726 = !DILocation(line: 725, column: 10, scope: !1695)
!1727 = !DILocation(line: 726, column: 9, scope: !1695)
!1728 = !DILocation(line: 726, column: 7, scope: !1695)
!1729 = !DILocation(line: 727, column: 5, scope: !1695)
!1730 = !DILocation(line: 728, column: 20, scope: !1731)
!1731 = distinct !DILexicalBlock(scope: !1732, file: !3, line: 727, column: 14)
!1732 = distinct !DILexicalBlock(scope: !1733, file: !3, line: 727, column: 5)
!1733 = distinct !DILexicalBlock(scope: !1695, file: !3, line: 727, column: 5)
!1734 = !DILocation(line: 728, column: 13, scope: !1731)
!1735 = !DILocation(line: 728, column: 11, scope: !1731)
!1736 = !DILocation(line: 729, column: 13, scope: !1737)
!1737 = distinct !DILexicalBlock(scope: !1731, file: !3, line: 729, column: 13)
!1738 = !DILocation(line: 729, column: 15, scope: !1737)
!1739 = !DILocation(line: 729, column: 13, scope: !1731)
!1740 = !DILocation(line: 730, column: 14, scope: !1741)
!1741 = distinct !DILexicalBlock(scope: !1737, file: !3, line: 729, column: 24)
!1742 = !DILocation(line: 730, column: 16, scope: !1741)
!1743 = !DILocation(line: 731, column: 9, scope: !1741)
!1744 = !DILocation(line: 732, column: 17, scope: !1745)
!1745 = distinct !DILexicalBlock(scope: !1737, file: !3, line: 731, column: 16)
!1746 = !DILocation(line: 732, column: 15, scope: !1745)
!1747 = !DILocation(line: 733, column: 13, scope: !1745)
!1748 = !DILocation(line: 733, column: 21, scope: !1745)
!1749 = !DILocation(line: 733, column: 20, scope: !1745)
!1750 = !DILocation(line: 733, column: 23, scope: !1745)
!1751 = !DILocation(line: 734, column: 18, scope: !1752)
!1752 = distinct !DILexicalBlock(scope: !1745, file: !3, line: 733, column: 29)
!1753 = distinct !{!1753, !1747, !1754}
!1754 = !DILocation(line: 735, column: 13, scope: !1745)
!1755 = !DILocation(line: 736, column: 17, scope: !1745)
!1756 = !DILocation(line: 738, column: 26, scope: !1731)
!1757 = !DILocation(line: 738, column: 39, scope: !1731)
!1758 = !DILocation(line: 738, column: 43, scope: !1731)
!1759 = !DILocation(line: 738, column: 41, scope: !1731)
!1760 = !DILocation(line: 738, column: 46, scope: !1731)
!1761 = !DILocation(line: 738, column: 9, scope: !1731)
!1762 = !DILocation(line: 739, column: 13, scope: !1763)
!1763 = distinct !DILexicalBlock(scope: !1731, file: !3, line: 739, column: 13)
!1764 = !DILocation(line: 739, column: 18, scope: !1763)
!1765 = !DILocation(line: 739, column: 13, scope: !1731)
!1766 = !DILocation(line: 740, column: 13, scope: !1767)
!1767 = distinct !DILexicalBlock(scope: !1763, file: !3, line: 739, column: 24)
!1768 = !DILocation(line: 742, column: 13, scope: !1731)
!1769 = !DILocation(line: 742, column: 15, scope: !1731)
!1770 = !DILocation(line: 742, column: 11, scope: !1731)
!1771 = !DILocation(line: 727, column: 5, scope: !1732)
!1772 = distinct !{!1772, !1773, !1774}
!1773 = !DILocation(line: 727, column: 5, scope: !1733)
!1774 = !DILocation(line: 743, column: 5, scope: !1733)
!1775 = !DILocation(line: 744, column: 1, scope: !1695)
!1776 = distinct !DISubprogram(name: "doreply", scope: !3, file: !3, line: 746, type: !486, scopeLine: 747, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!1777 = !DILocalVariable(name: "scannedentry", scope: !1776, file: !3, line: 748, type: !350)
!1778 = !DILocation(line: 748, column: 19, scope: !1776)
!1779 = !DILocalVariable(name: "nextentry", scope: !1776, file: !3, line: 749, type: !350)
!1780 = !DILocation(line: 749, column: 19, scope: !1776)
!1781 = !DILocation(line: 751, column: 25, scope: !1782)
!1782 = distinct !DILexicalBlock(scope: !1776, file: !3, line: 751, column: 9)
!1783 = !DILocation(line: 751, column: 23, scope: !1782)
!1784 = !DILocation(line: 751, column: 37, scope: !1782)
!1785 = !DILocation(line: 751, column: 9, scope: !1776)
!1786 = !DILocation(line: 752, column: 9, scope: !1787)
!1787 = distinct !DILexicalBlock(scope: !1782, file: !3, line: 751, column: 46)
!1788 = !DILocation(line: 754, column: 5, scope: !1776)
!1789 = !DILocation(line: 755, column: 21, scope: !1790)
!1790 = distinct !DILexicalBlock(scope: !1776, file: !3, line: 754, column: 8)
!1791 = !DILocation(line: 755, column: 35, scope: !1790)
!1792 = !DILocation(line: 755, column: 19, scope: !1790)
!1793 = !DILocation(line: 766, column: 42, scope: !1794)
!1794 = distinct !DILexicalBlock(scope: !1790, file: !3, line: 765, column: 9)
!1795 = !DILocation(line: 767, column: 27, scope: !1794)
!1796 = !DILocation(line: 767, column: 37, scope: !1794)
!1797 = !DILocation(line: 768, column: 27, scope: !1794)
!1798 = !DILocation(line: 768, column: 41, scope: !1794)
!1799 = !DILocation(line: 766, column: 13, scope: !1794)
!1800 = !DILocation(line: 770, column: 13, scope: !1801)
!1801 = distinct !DILexicalBlock(scope: !1790, file: !3, line: 770, column: 13)
!1802 = !DILocation(line: 770, column: 21, scope: !1801)
!1803 = !DILocation(line: 770, column: 13, scope: !1790)
!1804 = !DILocation(line: 771, column: 43, scope: !1805)
!1805 = distinct !DILexicalBlock(scope: !1801, file: !3, line: 770, column: 26)
!1806 = !DILocation(line: 772, column: 21, scope: !1805)
!1807 = !DILocation(line: 772, column: 31, scope: !1805)
!1808 = !DILocation(line: 772, column: 52, scope: !1805)
!1809 = !DILocation(line: 772, column: 66, scope: !1805)
!1810 = !DILocation(line: 771, column: 13, scope: !1805)
!1811 = !DILocation(line: 773, column: 9, scope: !1805)
!1812 = !DILocation(line: 774, column: 5, scope: !1790)
!1813 = !DILocation(line: 774, column: 30, scope: !1776)
!1814 = !DILocation(line: 774, column: 28, scope: !1776)
!1815 = !DILocation(line: 774, column: 41, scope: !1776)
!1816 = distinct !{!1816, !1788, !1817}
!1817 = !DILocation(line: 774, column: 48, scope: !1776)
!1818 = !DILocation(line: 775, column: 5, scope: !1776)
!1819 = !DILocation(line: 776, column: 20, scope: !1776)
!1820 = !DILocation(line: 776, column: 18, scope: !1776)
!1821 = !DILocation(line: 777, column: 5, scope: !1776)
!1822 = !DILocation(line: 778, column: 21, scope: !1823)
!1823 = distinct !DILexicalBlock(scope: !1776, file: !3, line: 777, column: 8)
!1824 = !DILocation(line: 778, column: 35, scope: !1823)
!1825 = !DILocation(line: 778, column: 19, scope: !1823)
!1826 = !DILocation(line: 779, column: 14, scope: !1823)
!1827 = !DILocation(line: 779, column: 9, scope: !1823)
!1828 = !DILocation(line: 780, column: 5, scope: !1823)
!1829 = !DILocation(line: 780, column: 30, scope: !1776)
!1830 = !DILocation(line: 780, column: 28, scope: !1776)
!1831 = !DILocation(line: 780, column: 41, scope: !1776)
!1832 = distinct !{!1832, !1821, !1833}
!1833 = !DILocation(line: 780, column: 48, scope: !1776)
!1834 = !DILocation(line: 781, column: 28, scope: !1776)
!1835 = !DILocation(line: 781, column: 16, scope: !1776)
!1836 = !DILocation(line: 782, column: 1, scope: !1776)
!1837 = distinct !DISubprogram(name: "logfile", scope: !3, file: !3, line: 617, type: !1838, scopeLine: 618, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!1838 = !DISubroutineType(types: !1839)
!1839 = !{null, !731, !385, null}
!1840 = !DILocalVariable(name: "crit", arg: 1, scope: !1837, file: !3, line: 617, type: !731)
!1841 = !DILocation(line: 617, column: 24, scope: !1837)
!1842 = !DILocalVariable(name: "format", arg: 2, scope: !1837, file: !3, line: 617, type: !385)
!1843 = !DILocation(line: 617, column: 42, scope: !1837)
!1844 = !DILocalVariable(name: "urgency", scope: !1837, file: !3, line: 623, type: !385)
!1845 = !DILocation(line: 623, column: 17, scope: !1837)
!1846 = !DILocalVariable(name: "va", scope: !1837, file: !3, line: 624, type: !1589)
!1847 = !DILocation(line: 624, column: 13, scope: !1837)
!1848 = !DILocalVariable(name: "line", scope: !1837, file: !3, line: 625, type: !1672)
!1849 = !DILocation(line: 625, column: 10, scope: !1837)
!1850 = !DILocation(line: 627, column: 9, scope: !1851)
!1851 = distinct !DILexicalBlock(scope: !1837, file: !3, line: 627, column: 9)
!1852 = !DILocation(line: 627, column: 19, scope: !1851)
!1853 = !DILocation(line: 627, column: 9, scope: !1837)
!1854 = !DILocation(line: 628, column: 9, scope: !1855)
!1855 = distinct !DILexicalBlock(scope: !1851, file: !3, line: 627, column: 25)
!1856 = !DILocation(line: 629, column: 9, scope: !1855)
!1857 = !DILocation(line: 631, column: 5, scope: !1837)
!1858 = !DILocation(line: 632, column: 15, scope: !1837)
!1859 = !DILocation(line: 632, column: 34, scope: !1837)
!1860 = !DILocation(line: 632, column: 42, scope: !1837)
!1861 = !DILocation(line: 632, column: 5, scope: !1837)
!1862 = !DILocation(line: 633, column: 5, scope: !1837)
!1863 = !DILocation(line: 634, column: 13, scope: !1837)
!1864 = !DILocation(line: 634, column: 5, scope: !1837)
!1865 = !DILocation(line: 636, column: 17, scope: !1866)
!1866 = distinct !DILexicalBlock(scope: !1837, file: !3, line: 634, column: 19)
!1867 = !DILocation(line: 637, column: 9, scope: !1866)
!1868 = !DILocation(line: 639, column: 17, scope: !1866)
!1869 = !DILocation(line: 640, column: 9, scope: !1866)
!1870 = !DILocation(line: 642, column: 17, scope: !1866)
!1871 = !DILocation(line: 643, column: 9, scope: !1866)
!1872 = !DILocation(line: 645, column: 17, scope: !1866)
!1873 = !DILocation(line: 646, column: 9, scope: !1866)
!1874 = !DILocation(line: 648, column: 17, scope: !1866)
!1875 = !DILocation(line: 649, column: 9, scope: !1866)
!1876 = !DILocation(line: 651, column: 17, scope: !1866)
!1877 = !DILocation(line: 652, column: 5, scope: !1866)
!1878 = !DILocation(line: 656, column: 12, scope: !1837)
!1879 = !DILocation(line: 657, column: 14, scope: !1837)
!1880 = !DILocation(line: 657, column: 23, scope: !1837)
!1881 = !DILocation(line: 657, column: 28, scope: !1837)
!1882 = !DILocation(line: 657, column: 31, scope: !1837)
!1883 = !DILocation(line: 657, column: 40, scope: !1837)
!1884 = !DILocation(line: 0, scope: !1837)
!1885 = !DILocation(line: 657, column: 13, scope: !1837)
!1886 = !DILocation(line: 658, column: 13, scope: !1837)
!1887 = !DILocation(line: 658, column: 19, scope: !1837)
!1888 = !DILocation(line: 659, column: 12, scope: !1837)
!1889 = !DILocation(line: 659, column: 21, scope: !1837)
!1890 = !DILocation(line: 656, column: 5, scope: !1837)
!1891 = !DILocation(line: 664, column: 1, scope: !1837)
!1892 = distinct !DISubprogram(name: "addreply_newline", scope: !3, file: !3, line: 685, type: !1893, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!1893 = !DISubroutineType(types: !1894)
!1894 = !{null, !529, !425}
!1895 = !DILocalVariable(name: "str", arg: 1, scope: !1892, file: !3, line: 685, type: !529)
!1896 = !DILocation(line: 685, column: 49, scope: !1892)
!1897 = !DILocalVariable(name: "size", arg: 2, scope: !1892, file: !3, line: 685, type: !425)
!1898 = !DILocation(line: 685, column: 67, scope: !1892)
!1899 = !DILocalVariable(name: "newline", scope: !1892, file: !3, line: 687, type: !350)
!1900 = !DILocation(line: 687, column: 19, scope: !1892)
!1901 = !DILocation(line: 690, column: 44, scope: !1902)
!1902 = distinct !DILexicalBlock(scope: !1892, file: !3, line: 689, column: 9)
!1903 = !DILocation(line: 689, column: 73, scope: !1902)
!1904 = !DILocation(line: 689, column: 37, scope: !1902)
!1905 = !DILocation(line: 689, column: 20, scope: !1902)
!1906 = !DILocation(line: 689, column: 18, scope: !1902)
!1907 = !DILocation(line: 690, column: 51, scope: !1902)
!1908 = !DILocation(line: 689, column: 9, scope: !1892)
!1909 = !DILocation(line: 691, column: 9, scope: !1910)
!1910 = distinct !DILexicalBlock(scope: !1902, file: !3, line: 690, column: 60)
!1911 = !DILocation(line: 693, column: 9, scope: !1912)
!1912 = distinct !DILexicalBlock(scope: !1892, file: !3, line: 693, column: 9)
!1913 = !DILocation(line: 693, column: 20, scope: !1912)
!1914 = !DILocation(line: 693, column: 9, scope: !1892)
!1915 = !DILocation(line: 694, column: 22, scope: !1916)
!1916 = distinct !DILexicalBlock(scope: !1912, file: !3, line: 693, column: 29)
!1917 = !DILocation(line: 694, column: 20, scope: !1916)
!1918 = !DILocation(line: 695, column: 5, scope: !1916)
!1919 = !DILocation(line: 696, column: 27, scope: !1920)
!1920 = distinct !DILexicalBlock(scope: !1912, file: !3, line: 695, column: 12)
!1921 = !DILocation(line: 696, column: 9, scope: !1920)
!1922 = !DILocation(line: 696, column: 20, scope: !1920)
!1923 = !DILocation(line: 696, column: 25, scope: !1920)
!1924 = !DILocation(line: 698, column: 5, scope: !1892)
!1925 = !DILocation(line: 698, column: 14, scope: !1892)
!1926 = !DILocation(line: 698, column: 19, scope: !1892)
!1927 = !DILocation(line: 699, column: 17, scope: !1892)
!1928 = !DILocation(line: 699, column: 15, scope: !1892)
!1929 = !DILocation(line: 700, column: 12, scope: !1892)
!1930 = !DILocation(line: 700, column: 21, scope: !1892)
!1931 = !DILocation(line: 700, column: 5, scope: !1892)
!1932 = !DILocation(line: 700, column: 27, scope: !1892)
!1933 = !DILocation(line: 700, column: 32, scope: !1892)
!1934 = !DILocation(line: 701, column: 1, scope: !1892)
!1935 = distinct !DISubprogram(name: "die_mem", scope: !3, file: !3, line: 372, type: !486, scopeLine: 373, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!1936 = !DILocation(line: 374, column: 5, scope: !1935)
!1937 = distinct !DISubprogram(name: "setprocessname", scope: !3, file: !3, line: 501, type: !527, scopeLine: 502, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!1938 = !DILocalVariable(name: "title", arg: 1, scope: !1937, file: !3, line: 501, type: !529)
!1939 = !DILocation(line: 501, column: 40, scope: !1937)
!1940 = !DILocation(line: 507, column: 9, scope: !1941)
!1941 = distinct !DILexicalBlock(scope: !1937, file: !3, line: 507, column: 9)
!1942 = !DILocation(line: 507, column: 15, scope: !1941)
!1943 = !DILocation(line: 507, column: 23, scope: !1941)
!1944 = !DILocation(line: 507, column: 26, scope: !1941)
!1945 = !DILocation(line: 507, column: 44, scope: !1941)
!1946 = !DILocation(line: 507, column: 37, scope: !1941)
!1947 = !DILocation(line: 507, column: 51, scope: !1941)
!1948 = !DILocation(line: 507, column: 35, scope: !1941)
!1949 = !DILocation(line: 507, column: 9, scope: !1937)
!1950 = !DILocation(line: 508, column: 16, scope: !1951)
!1951 = distinct !DILexicalBlock(scope: !1941, file: !3, line: 507, column: 56)
!1952 = !DILocation(line: 508, column: 29, scope: !1951)
!1953 = !DILocation(line: 508, column: 9, scope: !1951)
!1954 = !DILocation(line: 509, column: 17, scope: !1951)
!1955 = !DILocation(line: 509, column: 27, scope: !1951)
!1956 = !DILocation(line: 509, column: 34, scope: !1951)
!1957 = !DILocation(line: 509, column: 43, scope: !1951)
!1958 = !DILocation(line: 509, column: 9, scope: !1951)
!1959 = !DILocation(line: 510, column: 9, scope: !1951)
!1960 = !DILocation(line: 510, column: 18, scope: !1951)
!1961 = !DILocation(line: 511, column: 5, scope: !1951)
!1962 = !DILocation(line: 519, column: 12, scope: !1937)
!1963 = !DILocation(line: 520, column: 1, scope: !1937)
!1964 = distinct !DISubprogram(name: "addreply_noformat", scope: !3, file: !3, line: 703, type: !1965, scopeLine: 704, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!1965 = !DISubroutineType(types: !1966)
!1966 = !{null, !731, !529}
!1967 = !DILocalVariable(name: "code", arg: 1, scope: !1964, file: !3, line: 703, type: !731)
!1968 = !DILocation(line: 703, column: 34, scope: !1964)
!1969 = !DILocalVariable(name: "line", arg: 2, scope: !1964, file: !3, line: 703, type: !529)
!1970 = !DILocation(line: 703, column: 59, scope: !1964)
!1971 = !DILocation(line: 705, column: 9, scope: !1972)
!1972 = distinct !DILexicalBlock(scope: !1964, file: !3, line: 705, column: 9)
!1973 = !DILocation(line: 705, column: 14, scope: !1972)
!1974 = !DILocation(line: 705, column: 9, scope: !1964)
!1975 = !DILocation(line: 706, column: 21, scope: !1976)
!1976 = distinct !DILexicalBlock(scope: !1972, file: !3, line: 705, column: 20)
!1977 = !DILocation(line: 706, column: 19, scope: !1976)
!1978 = !DILocation(line: 707, column: 5, scope: !1976)
!1979 = !DILocation(line: 708, column: 22, scope: !1964)
!1980 = !DILocation(line: 708, column: 35, scope: !1964)
!1981 = !DILocation(line: 708, column: 28, scope: !1964)
!1982 = !DILocation(line: 708, column: 41, scope: !1964)
!1983 = !DILocation(line: 708, column: 5, scope: !1964)
!1984 = !DILocation(line: 709, column: 1, scope: !1964)
!1985 = distinct !DISubprogram(name: "doesta", scope: !3, file: !3, line: 889, type: !486, scopeLine: 890, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!1986 = !DILocalVariable(name: "dataconn", scope: !1985, file: !3, line: 891, type: !549)
!1987 = !DILocation(line: 891, column: 29, scope: !1985)
!1988 = !DILocalVariable(name: "socksize", scope: !1985, file: !3, line: 892, type: !310)
!1989 = !DILocation(line: 892, column: 15, scope: !1985)
!1990 = !DILocalVariable(name: "hbuf", scope: !1985, file: !3, line: 893, type: !654)
!1991 = !DILocation(line: 893, column: 10, scope: !1985)
!1992 = !DILocalVariable(name: "pbuf", scope: !1985, file: !3, line: 894, type: !1993)
!1993 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 256, elements: !910)
!1994 = !DILocation(line: 894, column: 10, scope: !1985)
!1995 = !DILocation(line: 896, column: 9, scope: !1996)
!1996 = distinct !DILexicalBlock(scope: !1985, file: !3, line: 896, column: 9)
!1997 = !DILocation(line: 896, column: 17, scope: !1996)
!1998 = !DILocation(line: 896, column: 22, scope: !1996)
!1999 = !DILocation(line: 896, column: 25, scope: !1996)
!2000 = !DILocation(line: 896, column: 32, scope: !1996)
!2001 = !DILocation(line: 896, column: 9, scope: !1985)
!2002 = !DILocation(line: 897, column: 9, scope: !2003)
!2003 = distinct !DILexicalBlock(scope: !1996, file: !3, line: 896, column: 39)
!2004 = !DILocation(line: 898, column: 9, scope: !2003)
!2005 = !DILocation(line: 900, column: 9, scope: !2006)
!2006 = distinct !DILexicalBlock(scope: !1985, file: !3, line: 900, column: 9)
!2007 = !DILocation(line: 900, column: 16, scope: !2006)
!2008 = !DILocation(line: 900, column: 9, scope: !1985)
!2009 = !DILocation(line: 901, column: 9, scope: !2010)
!2010 = distinct !DILexicalBlock(scope: !2006, file: !3, line: 900, column: 23)
!2011 = !DILocation(line: 902, column: 13, scope: !2012)
!2012 = distinct !DILexicalBlock(scope: !2010, file: !3, line: 902, column: 13)
!2013 = !DILocation(line: 902, column: 20, scope: !2012)
!2014 = !DILocation(line: 902, column: 13, scope: !2010)
!2015 = !DILocation(line: 903, column: 13, scope: !2016)
!2016 = distinct !DILexicalBlock(scope: !2012, file: !3, line: 902, column: 27)
!2017 = !DILocation(line: 904, column: 13, scope: !2016)
!2018 = !DILocation(line: 906, column: 5, scope: !2010)
!2019 = !DILocation(line: 907, column: 14, scope: !1985)
!2020 = !DILocation(line: 909, column: 12, scope: !1985)
!2021 = !DILocation(line: 909, column: 5, scope: !1985)
!2022 = !DILocation(line: 910, column: 12, scope: !1985)
!2023 = !DILocation(line: 910, column: 5, scope: !1985)
!2024 = !DILocation(line: 921, column: 14, scope: !1985)
!2025 = !DILocation(line: 921, column: 39, scope: !1985)
!2026 = !DILocation(line: 921, column: 64, scope: !1985)
!2027 = !DILocation(line: 921, column: 70, scope: !1985)
!2028 = !DILocation(line: 920, column: 5, scope: !1985)
!2029 = !DILocation(line: 922, column: 1, scope: !1985)
!2030 = distinct !DISubprogram(name: "opendata", scope: !3, file: !3, line: 2413, type: !486, scopeLine: 2414, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!2031 = !DILocalVariable(name: "dataconn", scope: !2030, file: !3, line: 2415, type: !549)
!2032 = !DILocation(line: 2415, column: 29, scope: !2030)
!2033 = !DILocalVariable(name: "fd", scope: !2030, file: !3, line: 2416, type: !326)
!2034 = !DILocation(line: 2416, column: 9, scope: !2030)
!2035 = !DILocalVariable(name: "socksize", scope: !2030, file: !3, line: 2417, type: !310)
!2036 = !DILocation(line: 2417, column: 15, scope: !2030)
!2037 = !DILocation(line: 2419, column: 9, scope: !2038)
!2038 = distinct !DILexicalBlock(scope: !2030, file: !3, line: 2419, column: 9)
!2039 = !DILocation(line: 2419, column: 16, scope: !2038)
!2040 = !DILocation(line: 2419, column: 9, scope: !2030)
!2041 = !DILocation(line: 2420, column: 9, scope: !2042)
!2042 = distinct !DILexicalBlock(scope: !2038, file: !3, line: 2419, column: 23)
!2043 = !DILocation(line: 2421, column: 5, scope: !2042)
!2044 = !DILocation(line: 2422, column: 9, scope: !2045)
!2045 = distinct !DILexicalBlock(scope: !2030, file: !3, line: 2422, column: 9)
!2046 = !DILocation(line: 2422, column: 16, scope: !2045)
!2047 = !DILocation(line: 2422, column: 9, scope: !2030)
!2048 = !DILocation(line: 2423, column: 9, scope: !2049)
!2049 = distinct !DILexicalBlock(scope: !2045, file: !3, line: 2422, column: 23)
!2050 = !DILocation(line: 2424, column: 9, scope: !2049)
!2051 = !DILocation(line: 2426, column: 9, scope: !2052)
!2052 = distinct !DILexicalBlock(scope: !2030, file: !3, line: 2426, column: 9)
!2053 = !DILocation(line: 2426, column: 17, scope: !2052)
!2054 = !DILocation(line: 2426, column: 9, scope: !2030)
!2055 = !DILocalVariable(name: "pfds", scope: !2056, file: !3, line: 2427, type: !2057)
!2056 = distinct !DILexicalBlock(scope: !2052, file: !3, line: 2426, column: 23)
!2057 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2058, size: 128, elements: !798)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !1014, line: 36, size: 64, elements: !2059)
!2059 = !{!2060, !2061, !2063}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !2058, file: !1014, line: 38, baseType: !326, size: 32)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !2058, file: !1014, line: 39, baseType: !2062, size: 16, offset: 32)
!2062 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "revents", scope: !2058, file: !1014, line: 40, baseType: !2062, size: 16, offset: 48)
!2064 = !DILocation(line: 2427, column: 23, scope: !2056)
!2065 = !DILocalVariable(name: "pfd", scope: !2056, file: !3, line: 2428, type: !2066)
!2066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2058, size: 64)
!2067 = !DILocation(line: 2428, column: 24, scope: !2056)
!2068 = !DILocalVariable(name: "pollret", scope: !2056, file: !3, line: 2429, type: !326)
!2069 = !DILocation(line: 2429, column: 13, scope: !2056)
!2070 = !DILocation(line: 2431, column: 16, scope: !2056)
!2071 = !DILocation(line: 2431, column: 13, scope: !2056)
!2072 = !DILocation(line: 2432, column: 19, scope: !2056)
!2073 = !DILocation(line: 2432, column: 9, scope: !2056)
!2074 = !DILocation(line: 2432, column: 14, scope: !2056)
!2075 = !DILocation(line: 2432, column: 17, scope: !2056)
!2076 = !DILocation(line: 2433, column: 9, scope: !2056)
!2077 = !DILocation(line: 2433, column: 14, scope: !2056)
!2078 = !DILocation(line: 2433, column: 21, scope: !2056)
!2079 = !DILocation(line: 2434, column: 9, scope: !2056)
!2080 = !DILocation(line: 2434, column: 14, scope: !2056)
!2081 = !DILocation(line: 2434, column: 22, scope: !2056)
!2082 = !DILocation(line: 2436, column: 16, scope: !2056)
!2083 = !DILocation(line: 2436, column: 13, scope: !2056)
!2084 = !DILocation(line: 2437, column: 19, scope: !2056)
!2085 = !DILocation(line: 2437, column: 9, scope: !2056)
!2086 = !DILocation(line: 2437, column: 14, scope: !2056)
!2087 = !DILocation(line: 2437, column: 17, scope: !2056)
!2088 = !DILocation(line: 2438, column: 9, scope: !2056)
!2089 = !DILocation(line: 2438, column: 14, scope: !2056)
!2090 = !DILocation(line: 2438, column: 21, scope: !2056)
!2091 = !DILocation(line: 2439, column: 9, scope: !2056)
!2092 = !DILocation(line: 2439, column: 14, scope: !2056)
!2093 = !DILocation(line: 2439, column: 22, scope: !2056)
!2094 = !DILocation(line: 2442, column: 9, scope: !2056)
!2095 = !DILocation(line: 2443, column: 31, scope: !2096)
!2096 = distinct !DILexicalBlock(scope: !2097, file: !3, line: 2442, column: 18)
!2097 = distinct !DILexicalBlock(scope: !2098, file: !3, line: 2442, column: 9)
!2098 = distinct !DILexicalBlock(scope: !2056, file: !3, line: 2442, column: 9)
!2099 = !DILocation(line: 2443, column: 39, scope: !2096)
!2100 = !DILocation(line: 2443, column: 47, scope: !2096)
!2101 = !DILocation(line: 2443, column: 13, scope: !2096)
!2102 = !DILocation(line: 2443, column: 21, scope: !2096)
!2103 = !DILocation(line: 2443, column: 29, scope: !2096)
!2104 = !DILocation(line: 2446, column: 33, scope: !2096)
!2105 = !DILocation(line: 2446, column: 69, scope: !2096)
!2106 = !DILocation(line: 2446, column: 78, scope: !2096)
!2107 = !DILocation(line: 2446, column: 23, scope: !2096)
!2108 = !DILocation(line: 2446, column: 21, scope: !2096)
!2109 = !DILocation(line: 2447, column: 17, scope: !2110)
!2110 = distinct !DILexicalBlock(scope: !2096, file: !3, line: 2447, column: 17)
!2111 = !DILocation(line: 2447, column: 25, scope: !2110)
!2112 = !DILocation(line: 2447, column: 17, scope: !2096)
!2113 = !DILocation(line: 2448, column: 70, scope: !2114)
!2114 = distinct !DILexicalBlock(scope: !2110, file: !3, line: 2447, column: 31)
!2115 = !DILocation(line: 2448, column: 17, scope: !2114)
!2116 = !DILocation(line: 2450, column: 18, scope: !2117)
!2117 = distinct !DILexicalBlock(scope: !2096, file: !3, line: 2450, column: 17)
!2118 = !DILocation(line: 2450, column: 26, scope: !2117)
!2119 = !DILocation(line: 2450, column: 34, scope: !2117)
!2120 = !DILocation(line: 2450, column: 68, scope: !2117)
!2121 = !DILocation(line: 2450, column: 73, scope: !2117)
!2122 = !DILocation(line: 2451, column: 18, scope: !2117)
!2123 = !DILocation(line: 2451, column: 26, scope: !2117)
!2124 = !DILocation(line: 2451, column: 34, scope: !2117)
!2125 = !DILocation(line: 2451, column: 68, scope: !2117)
!2126 = !DILocation(line: 2450, column: 17, scope: !2096)
!2127 = !DILocation(line: 2452, column: 17, scope: !2128)
!2128 = distinct !DILexicalBlock(scope: !2117, file: !3, line: 2451, column: 74)
!2129 = !DILocation(line: 2454, column: 18, scope: !2130)
!2130 = distinct !DILexicalBlock(scope: !2096, file: !3, line: 2454, column: 17)
!2131 = !DILocation(line: 2454, column: 26, scope: !2130)
!2132 = !DILocation(line: 2454, column: 34, scope: !2130)
!2133 = !DILocation(line: 2454, column: 44, scope: !2130)
!2134 = !DILocation(line: 2454, column: 17, scope: !2096)
!2135 = !DILocation(line: 2455, column: 17, scope: !2136)
!2136 = distinct !DILexicalBlock(scope: !2130, file: !3, line: 2454, column: 50)
!2137 = distinct !{!2137, !2138, !2139}
!2138 = !DILocation(line: 2442, column: 9, scope: !2098)
!2139 = !DILocation(line: 2494, column: 9, scope: !2098)
!2140 = !DILocation(line: 2457, column: 22, scope: !2096)
!2141 = !DILocation(line: 2458, column: 13, scope: !2096)
!2142 = !DILocalVariable(name: "peer_addr", scope: !2096, file: !3, line: 2461, type: !2143)
!2143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in", file: !34, line: 238, size: 128, elements: !2144)
!2144 = !{!2145, !2146, !2147, !2151}
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "sin_family", scope: !2143, file: !34, line: 240, baseType: !319, size: 16)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "sin_port", scope: !2143, file: !34, line: 241, baseType: !340, size: 16, offset: 16)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "sin_addr", scope: !2143, file: !34, line: 242, baseType: !2148, size: 32, offset: 32)
!2148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in_addr", file: !34, line: 31, size: 32, elements: !2149)
!2149 = !{!2150}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "s_addr", scope: !2148, file: !34, line: 33, baseType: !343, size: 32)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "sin_zero", scope: !2143, file: !34, line: 245, baseType: !986, size: 64, offset: 64)
!2152 = !DILocation(line: 2461, column: 32, scope: !2096)
!2153 = !DILocation(line: 2462, column: 13, scope: !2096)
!2154 = !DILocation(line: 2463, column: 23, scope: !2096)
!2155 = !DILocation(line: 2463, column: 34, scope: !2096)
!2156 = !DILocation(line: 2464, column: 41, scope: !2096)
!2157 = !DILocation(line: 2464, column: 23, scope: !2096)
!2158 = !DILocation(line: 2464, column: 32, scope: !2096)
!2159 = !DILocation(line: 2464, column: 39, scope: !2096)
!2160 = !DILocation(line: 2465, column: 34, scope: !2096)
!2161 = !DILocation(line: 2465, column: 23, scope: !2096)
!2162 = !DILocation(line: 2465, column: 32, scope: !2096)
!2163 = !DILocation(line: 2466, column: 13, scope: !2096)
!2164 = !DILocation(line: 2468, column: 16, scope: !2096)
!2165 = !DILocation(line: 2477, column: 17, scope: !2166)
!2166 = distinct !DILexicalBlock(scope: !2096, file: !3, line: 2477, column: 17)
!2167 = !DILocation(line: 2477, column: 42, scope: !2166)
!2168 = !DILocation(line: 2478, column: 17, scope: !2166)
!2169 = !DILocation(line: 2478, column: 20, scope: !2166)
!2170 = !DILocation(line: 2478, column: 45, scope: !2166)
!2171 = !DILocation(line: 2477, column: 17, scope: !2096)
!2172 = !DILocation(line: 2481, column: 17, scope: !2173)
!2173 = distinct !DILexicalBlock(scope: !2166, file: !3, line: 2478, column: 58)
!2174 = !DILocation(line: 2482, column: 17, scope: !2173)
!2175 = !DILocation(line: 2484, column: 13, scope: !2096)
!2176 = !DILocation(line: 2485, column: 17, scope: !2177)
!2177 = distinct !DILexicalBlock(scope: !2096, file: !3, line: 2485, column: 17)
!2178 = !DILocation(line: 2485, column: 43, scope: !2177)
!2179 = !DILocation(line: 2485, column: 17, scope: !2096)
!2180 = !DILocation(line: 2486, column: 17, scope: !2181)
!2181 = distinct !DILexicalBlock(scope: !2177, file: !3, line: 2485, column: 49)
!2182 = !DILocation(line: 2488, column: 17, scope: !2183)
!2183 = distinct !DILexicalBlock(scope: !2096, file: !3, line: 2488, column: 17)
!2184 = !DILocation(line: 2488, column: 26, scope: !2183)
!2185 = !DILocation(line: 2488, column: 31, scope: !2183)
!2186 = !DILocation(line: 2488, column: 35, scope: !2183)
!2187 = !DILocation(line: 2488, column: 44, scope: !2183)
!2188 = !DILocation(line: 2488, column: 49, scope: !2183)
!2189 = !DILocation(line: 2488, column: 52, scope: !2183)
!2190 = !DILocation(line: 2488, column: 58, scope: !2183)
!2191 = !DILocation(line: 2488, column: 17, scope: !2096)
!2192 = !DILocation(line: 2491, column: 13, scope: !2193)
!2193 = distinct !DILexicalBlock(scope: !2183, file: !3, line: 2488, column: 65)
!2194 = !DILocation(line: 2492, column: 17, scope: !2195)
!2195 = distinct !DILexicalBlock(scope: !2183, file: !3, line: 2491, column: 20)
!2196 = !DILocation(line: 2442, column: 9, scope: !2097)
!2197 = !DILocation(line: 2495, column: 9, scope: !2056)
!2198 = !DILocation(line: 2496, column: 5, scope: !2056)
!2199 = !DILocalVariable(name: "peer2", scope: !2200, file: !3, line: 2497, type: !549)
!2200 = distinct !DILexicalBlock(scope: !2052, file: !3, line: 2496, column: 12)
!2201 = !DILocation(line: 2497, column: 33, scope: !2200)
!2202 = !DILocalVariable(name: "tries", scope: !2200, file: !3, line: 2498, type: !306)
!2203 = !DILocation(line: 2498, column: 23, scope: !2200)
!2204 = !DILocation(line: 2498, column: 37, scope: !2200)
!2205 = !DILocation(line: 2498, column: 46, scope: !2200)
!2206 = !DILocation(line: 2498, column: 35, scope: !2200)
!2207 = !DILocation(line: 2500, column: 17, scope: !2200)
!2208 = !DILocation(line: 2501, column: 13, scope: !2209)
!2209 = distinct !DILexicalBlock(scope: !2200, file: !3, line: 2501, column: 13)
!2210 = !DILocation(line: 2501, column: 34, scope: !2209)
!2211 = !DILocation(line: 2501, column: 13, scope: !2200)
!2212 = !DILocation(line: 2502, column: 42, scope: !2213)
!2213 = distinct !DILexicalBlock(scope: !2209, file: !3, line: 2501, column: 47)
!2214 = !DILocation(line: 2502, column: 36, scope: !2213)
!2215 = !DILocation(line: 2502, column: 13, scope: !2213)
!2216 = !DILocation(line: 2502, column: 34, scope: !2213)
!2217 = !DILocation(line: 2503, column: 9, scope: !2213)
!2218 = !DILocation(line: 2504, column: 41, scope: !2219)
!2219 = distinct !DILexicalBlock(scope: !2209, file: !3, line: 2503, column: 16)
!2220 = !DILocation(line: 2504, column: 35, scope: !2219)
!2221 = !DILocation(line: 2504, column: 13, scope: !2219)
!2222 = !DILocation(line: 2504, column: 33, scope: !2219)
!2223 = !DILocation(line: 2501, column: 37, scope: !2209)
!2224 = !DILabel(scope: !2200, name: "again", file: !3, line: 2506)
!2225 = !DILocation(line: 2506, column: 9, scope: !2200)
!2226 = !DILocation(line: 2524, column: 14, scope: !2200)
!2227 = !DILocation(line: 2524, column: 12, scope: !2200)
!2228 = !DILocation(line: 2525, column: 16, scope: !2200)
!2229 = !DILocation(line: 2526, column: 37, scope: !2200)
!2230 = !DILocation(line: 2526, column: 9, scope: !2200)
!2231 = !DILocalVariable(name: "fodder", scope: !2232, file: !3, line: 2530, type: !326)
!2232 = distinct !DILexicalBlock(scope: !2030, file: !3, line: 2529, column: 5)
!2233 = !DILocation(line: 2530, column: 13, scope: !2232)
!2234 = !DILocation(line: 2532, column: 16, scope: !2232)
!2235 = !DILocation(line: 2533, column: 20, scope: !2232)
!2236 = !DILocation(line: 2533, column: 40, scope: !2232)
!2237 = !DILocation(line: 2533, column: 9, scope: !2232)
!2238 = !DILocation(line: 2536, column: 19, scope: !2232)
!2239 = !DILocation(line: 2536, column: 9, scope: !2232)
!2240 = !DILocation(line: 2539, column: 14, scope: !2030)
!2241 = !DILocation(line: 2539, column: 12, scope: !2030)
!2242 = !DILocation(line: 2541, column: 1, scope: !2030)
!2243 = distinct !DISubprogram(name: "closedata", scope: !3, file: !3, line: 2374, type: !486, scopeLine: 2375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!2244 = !DILocalVariable(name: "tmp_xferfd", scope: !2243, file: !3, line: 2376, type: !450)
!2245 = !DILocation(line: 2376, column: 18, scope: !2243)
!2246 = !DILocation(line: 2376, column: 31, scope: !2243)
!2247 = !DILocation(line: 2382, column: 12, scope: !2243)
!2248 = !DILocation(line: 2385, column: 9, scope: !2249)
!2249 = distinct !DILexicalBlock(scope: !2243, file: !3, line: 2385, column: 9)
!2250 = !DILocation(line: 2385, column: 20, scope: !2249)
!2251 = !DILocation(line: 2385, column: 25, scope: !2249)
!2252 = !DILocation(line: 2385, column: 28, scope: !2249)
!2253 = !DILocation(line: 2385, column: 39, scope: !2249)
!2254 = !DILocation(line: 2385, column: 9, scope: !2243)
!2255 = !DILocation(line: 2387, column: 15, scope: !2256)
!2256 = distinct !DILexicalBlock(scope: !2249, file: !3, line: 2386, column: 5)
!2257 = !DILocation(line: 2387, column: 9, scope: !2256)
!2258 = !DILocation(line: 2388, column: 5, scope: !2256)
!2259 = !DILocation(line: 2390, column: 1, scope: !2243)
!2260 = distinct !DISubprogram(name: "Fuzz_poll", scope: !3, file: !3, line: 2392, type: !2261, scopeLine: 2392, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!2261 = !DISubroutineType(types: !2262)
!2262 = !{!326, !2066, !1013, !326}
!2263 = !DILocalVariable(name: "fds", arg: 1, scope: !2260, file: !3, line: 2392, type: !2066)
!2264 = !DILocation(line: 2392, column: 44, scope: !2260)
!2265 = !DILocalVariable(name: "nfds", arg: 2, scope: !2260, file: !3, line: 2392, type: !1013)
!2266 = !DILocation(line: 2392, column: 56, scope: !2260)
!2267 = !DILocalVariable(name: "timeout", arg: 3, scope: !2260, file: !3, line: 2392, type: !326)
!2268 = !DILocation(line: 2392, column: 66, scope: !2260)
!2269 = !DILocalVariable(name: "ret", scope: !2260, file: !3, line: 2393, type: !326)
!2270 = !DILocation(line: 2393, column: 9, scope: !2260)
!2271 = !DILocalVariable(name: "num", scope: !2260, file: !3, line: 2394, type: !326)
!2272 = !DILocation(line: 2394, column: 9, scope: !2260)
!2273 = !DILocation(line: 2394, column: 15, scope: !2260)
!2274 = !DILocation(line: 2396, column: 9, scope: !2275)
!2275 = distinct !DILexicalBlock(scope: !2260, file: !3, line: 2396, column: 9)
!2276 = !DILocation(line: 2396, column: 13, scope: !2275)
!2277 = !DILocation(line: 2396, column: 9, scope: !2260)
!2278 = !DILocation(line: 2398, column: 9, scope: !2279)
!2279 = distinct !DILexicalBlock(scope: !2275, file: !3, line: 2397, column: 5)
!2280 = !DILocation(line: 2398, column: 16, scope: !2279)
!2281 = !DILocation(line: 2398, column: 23, scope: !2279)
!2282 = !DILocation(line: 2399, column: 12, scope: !2279)
!2283 = !DILocation(line: 2400, column: 5, scope: !2279)
!2284 = !DILocation(line: 2401, column: 11, scope: !2260)
!2285 = !DILocation(line: 2401, column: 9, scope: !2260)
!2286 = !DILocation(line: 2402, column: 9, scope: !2287)
!2287 = distinct !DILexicalBlock(scope: !2260, file: !3, line: 2402, column: 9)
!2288 = !DILocation(line: 2402, column: 14, scope: !2287)
!2289 = !DILocation(line: 2402, column: 9, scope: !2260)
!2290 = !DILocation(line: 2404, column: 13, scope: !2291)
!2291 = distinct !DILexicalBlock(scope: !2292, file: !3, line: 2404, column: 13)
!2292 = distinct !DILexicalBlock(scope: !2287, file: !3, line: 2403, column: 5)
!2293 = !DILocation(line: 2404, column: 17, scope: !2291)
!2294 = !DILocation(line: 2404, column: 13, scope: !2292)
!2295 = !DILocation(line: 2406, column: 13, scope: !2296)
!2296 = distinct !DILexicalBlock(scope: !2291, file: !3, line: 2405, column: 9)
!2297 = !DILocation(line: 2406, column: 20, scope: !2296)
!2298 = !DILocation(line: 2406, column: 27, scope: !2296)
!2299 = !DILocation(line: 2407, column: 16, scope: !2296)
!2300 = !DILocation(line: 2408, column: 9, scope: !2296)
!2301 = !DILocation(line: 2409, column: 5, scope: !2292)
!2302 = !DILocation(line: 2410, column: 12, scope: !2260)
!2303 = !DILocation(line: 2410, column: 5, scope: !2260)
!2304 = distinct !DISubprogram(name: "error", scope: !3, file: !3, line: 4666, type: !2305, scopeLine: 4667, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!2305 = !DISubroutineType(types: !2306)
!2306 = !{null, !326, !385}
!2307 = !DILocalVariable(name: "n", arg: 1, scope: !2304, file: !3, line: 4666, type: !326)
!2308 = !DILocation(line: 4666, column: 16, scope: !2304)
!2309 = !DILocalVariable(name: "msg", arg: 2, scope: !2304, file: !3, line: 4666, type: !385)
!2310 = !DILocation(line: 4666, column: 31, scope: !2304)
!2311 = !DILocalVariable(name: "e", scope: !2304, file: !3, line: 4668, type: !385)
!2312 = !DILocation(line: 4668, column: 17, scope: !2304)
!2313 = !DILocation(line: 4668, column: 30, scope: !2304)
!2314 = !DILocation(line: 4668, column: 21, scope: !2304)
!2315 = !DILocation(line: 4670, column: 32, scope: !2304)
!2316 = !DILocation(line: 4670, column: 37, scope: !2304)
!2317 = !DILocation(line: 4670, column: 5, scope: !2304)
!2318 = !DILocation(line: 4671, column: 14, scope: !2304)
!2319 = !DILocation(line: 4671, column: 27, scope: !2304)
!2320 = !DILocation(line: 4671, column: 32, scope: !2304)
!2321 = !DILocation(line: 4671, column: 5, scope: !2304)
!2322 = !DILocation(line: 4672, column: 1, scope: !2304)
!2323 = distinct !DISubprogram(name: "fourinsix", scope: !3, file: !3, line: 557, type: !2324, scopeLine: 558, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!2324 = !DISubroutineType(types: !2325)
!2325 = !{null, !576}
!2326 = !DILocalVariable(name: "v6", arg: 1, scope: !2323, file: !3, line: 557, type: !576)
!2327 = !DILocation(line: 557, column: 48, scope: !2323)
!2328 = !DILocalVariable(name: "v4", scope: !2323, file: !3, line: 559, type: !549)
!2329 = !DILocation(line: 559, column: 29, scope: !2323)
!2330 = !DILocation(line: 561, column: 9, scope: !2331)
!2331 = distinct !DILexicalBlock(scope: !2323, file: !3, line: 561, column: 9)
!2332 = !DILocation(line: 561, column: 17, scope: !2331)
!2333 = !DILocation(line: 561, column: 22, scope: !2331)
!2334 = !DILocation(line: 561, column: 25, scope: !2331)
!2335 = !DILocation(line: 561, column: 45, scope: !2331)
!2336 = !DILocation(line: 561, column: 57, scope: !2331)
!2337 = !DILocalVariable(name: "__a", scope: !2338, file: !3, line: 562, type: !361)
!2338 = distinct !DILexicalBlock(scope: !2331, file: !3, line: 562, column: 9)
!2339 = !DILocation(line: 562, column: 9, scope: !2338)
!2340 = !DILocation(line: 0, scope: !2338)
!2341 = !DILocation(line: 562, column: 64, scope: !2331)
!2342 = !DILocation(line: 561, column: 9, scope: !2323)
!2343 = !DILocation(line: 563, column: 9, scope: !2344)
!2344 = distinct !DILexicalBlock(scope: !2331, file: !3, line: 562, column: 70)
!2345 = !DILocation(line: 565, column: 5, scope: !2323)
!2346 = !DILocation(line: 566, column: 5, scope: !2323)
!2347 = !DILocation(line: 566, column: 24, scope: !2323)
!2348 = !DILocation(line: 567, column: 13, scope: !2323)
!2349 = !DILocation(line: 567, column: 5, scope: !2323)
!2350 = !DILocation(line: 568, column: 31, scope: !2323)
!2351 = !DILocation(line: 568, column: 12, scope: !2323)
!2352 = !DILocation(line: 568, column: 60, scope: !2323)
!2353 = !DILocation(line: 570, column: 24, scope: !2323)
!2354 = !DILocation(line: 570, column: 5, scope: !2323)
!2355 = !DILocation(line: 570, column: 22, scope: !2323)
!2356 = !DILocation(line: 572, column: 6, scope: !2323)
!2357 = !DILocation(line: 572, column: 11, scope: !2323)
!2358 = !DILocation(line: 573, column: 1, scope: !2323)
!2359 = distinct !DISubprogram(name: "addrcmp", scope: !3, file: !3, line: 577, type: !2360, scopeLine: 579, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!2360 = !DISubroutineType(types: !2361)
!2361 = !{!326, !546, !546}
!2362 = !DILocalVariable(name: "s1", arg: 1, scope: !2359, file: !3, line: 577, type: !546)
!2363 = !DILocation(line: 577, column: 58, scope: !2359)
!2364 = !DILocalVariable(name: "s2", arg: 2, scope: !2359, file: !3, line: 578, type: !546)
!2365 = !DILocation(line: 578, column: 58, scope: !2359)
!2366 = !DILocation(line: 580, column: 9, scope: !2367)
!2367 = distinct !DILexicalBlock(scope: !2359, file: !3, line: 580, column: 9)
!2368 = !DILocation(line: 580, column: 29, scope: !2367)
!2369 = !DILocation(line: 580, column: 9, scope: !2359)
!2370 = !DILocation(line: 581, column: 13, scope: !2371)
!2371 = distinct !DILexicalBlock(scope: !2372, file: !3, line: 581, column: 13)
!2372 = distinct !DILexicalBlock(scope: !2367, file: !3, line: 580, column: 42)
!2373 = !DILocation(line: 581, column: 33, scope: !2371)
!2374 = !DILocation(line: 581, column: 13, scope: !2372)
!2375 = !DILocation(line: 582, column: 13, scope: !2376)
!2376 = distinct !DILexicalBlock(scope: !2371, file: !3, line: 581, column: 46)
!2377 = !DILocalVariable(name: "__a", scope: !2378, file: !3, line: 584, type: !361)
!2378 = distinct !DILexicalBlock(scope: !2379, file: !3, line: 584, column: 13)
!2379 = distinct !DILexicalBlock(scope: !2372, file: !3, line: 584, column: 13)
!2380 = !DILocation(line: 584, column: 13, scope: !2378)
!2381 = !DILocalVariable(name: "__b", scope: !2378, file: !3, line: 584, type: !361)
!2382 = !DILocation(line: 0, scope: !2378)
!2383 = !DILocation(line: 584, column: 13, scope: !2379)
!2384 = !DILocation(line: 584, column: 13, scope: !2372)
!2385 = !DILocation(line: 585, column: 13, scope: !2386)
!2386 = distinct !DILexicalBlock(scope: !2379, file: !3, line: 584, column: 101)
!2387 = !DILocation(line: 587, column: 13, scope: !2388)
!2388 = distinct !DILexicalBlock(scope: !2379, file: !3, line: 586, column: 16)
!2389 = !DILocation(line: 589, column: 16, scope: !2390)
!2390 = distinct !DILexicalBlock(scope: !2367, file: !3, line: 589, column: 16)
!2391 = !DILocation(line: 589, column: 36, scope: !2390)
!2392 = !DILocation(line: 589, column: 16, scope: !2367)
!2393 = !DILocation(line: 590, column: 13, scope: !2394)
!2394 = distinct !DILexicalBlock(scope: !2395, file: !3, line: 590, column: 13)
!2395 = distinct !DILexicalBlock(scope: !2390, file: !3, line: 589, column: 48)
!2396 = !DILocation(line: 590, column: 33, scope: !2394)
!2397 = !DILocation(line: 590, column: 13, scope: !2395)
!2398 = !DILocation(line: 591, column: 13, scope: !2399)
!2399 = distinct !DILexicalBlock(scope: !2394, file: !3, line: 590, column: 45)
!2400 = !DILocation(line: 593, column: 13, scope: !2401)
!2401 = distinct !DILexicalBlock(scope: !2395, file: !3, line: 593, column: 13)
!2402 = !DILocation(line: 593, column: 44, scope: !2401)
!2403 = !DILocation(line: 593, column: 41, scope: !2401)
!2404 = !DILocation(line: 593, column: 13, scope: !2395)
!2405 = !DILocation(line: 594, column: 13, scope: !2406)
!2406 = distinct !DILexicalBlock(scope: !2401, file: !3, line: 593, column: 73)
!2407 = !DILocation(line: 596, column: 13, scope: !2408)
!2408 = distinct !DILexicalBlock(scope: !2401, file: !3, line: 595, column: 16)
!2409 = !DILocation(line: 599, column: 5, scope: !2359)
!2410 = !DILocation(line: 600, column: 1, scope: !2359)
!2411 = distinct !DISubprogram(name: "keepalive", scope: !3, file: !3, line: 2103, type: !2412, scopeLine: 2104, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!2412 = !DISubroutineType(types: !2413)
!2413 = !{null, !731, !326}
!2414 = !DILocalVariable(name: "fd", arg: 1, scope: !2411, file: !3, line: 2103, type: !731)
!2415 = !DILocation(line: 2103, column: 33, scope: !2411)
!2416 = !DILocalVariable(name: "keep", arg: 2, scope: !2411, file: !3, line: 2103, type: !326)
!2417 = !DILocation(line: 2103, column: 41, scope: !2411)
!2418 = !DILocation(line: 2107, column: 20, scope: !2419)
!2419 = distinct !DILexicalBlock(scope: !2411, file: !3, line: 2106, column: 5)
!2420 = !DILocation(line: 2107, column: 50, scope: !2419)
!2421 = !DILocation(line: 2107, column: 9, scope: !2419)
!2422 = !DILocation(line: 2110, column: 1, scope: !2411)
!2423 = distinct !DISubprogram(name: "doestp", scope: !3, file: !3, line: 924, type: !486, scopeLine: 925, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!2424 = !DILocalVariable(name: "dataconn", scope: !2423, file: !3, line: 926, type: !549)
!2425 = !DILocation(line: 926, column: 29, scope: !2423)
!2426 = !DILocalVariable(name: "socksize", scope: !2423, file: !3, line: 927, type: !310)
!2427 = !DILocation(line: 927, column: 15, scope: !2423)
!2428 = !DILocalVariable(name: "hbuf", scope: !2423, file: !3, line: 928, type: !654)
!2429 = !DILocation(line: 928, column: 10, scope: !2423)
!2430 = !DILocalVariable(name: "pbuf", scope: !2423, file: !3, line: 929, type: !1993)
!2431 = !DILocation(line: 929, column: 10, scope: !2423)
!2432 = !DILocation(line: 931, column: 9, scope: !2433)
!2433 = distinct !DILexicalBlock(scope: !2423, file: !3, line: 931, column: 9)
!2434 = !DILocation(line: 931, column: 17, scope: !2433)
!2435 = !DILocation(line: 931, column: 22, scope: !2433)
!2436 = !DILocation(line: 931, column: 25, scope: !2433)
!2437 = !DILocation(line: 931, column: 32, scope: !2433)
!2438 = !DILocation(line: 931, column: 9, scope: !2423)
!2439 = !DILocation(line: 932, column: 9, scope: !2440)
!2440 = distinct !DILexicalBlock(scope: !2433, file: !3, line: 931, column: 39)
!2441 = !DILocation(line: 933, column: 9, scope: !2440)
!2442 = !DILocation(line: 935, column: 9, scope: !2443)
!2443 = distinct !DILexicalBlock(scope: !2423, file: !3, line: 935, column: 9)
!2444 = !DILocation(line: 935, column: 16, scope: !2443)
!2445 = !DILocation(line: 935, column: 9, scope: !2423)
!2446 = !DILocation(line: 936, column: 9, scope: !2447)
!2447 = distinct !DILexicalBlock(scope: !2443, file: !3, line: 935, column: 23)
!2448 = !DILocation(line: 937, column: 13, scope: !2449)
!2449 = distinct !DILexicalBlock(scope: !2447, file: !3, line: 937, column: 13)
!2450 = !DILocation(line: 937, column: 20, scope: !2449)
!2451 = !DILocation(line: 937, column: 13, scope: !2447)
!2452 = !DILocation(line: 938, column: 13, scope: !2453)
!2453 = distinct !DILexicalBlock(scope: !2449, file: !3, line: 937, column: 27)
!2454 = !DILocation(line: 939, column: 13, scope: !2453)
!2455 = !DILocation(line: 941, column: 5, scope: !2447)
!2456 = !DILocation(line: 942, column: 14, scope: !2423)
!2457 = !DILocation(line: 943, column: 21, scope: !2458)
!2458 = distinct !DILexicalBlock(scope: !2423, file: !3, line: 943, column: 9)
!2459 = !DILocation(line: 943, column: 29, scope: !2458)
!2460 = !DILocation(line: 943, column: 9, scope: !2458)
!2461 = !DILocation(line: 943, column: 71, scope: !2458)
!2462 = !DILocation(line: 943, column: 75, scope: !2458)
!2463 = !DILocation(line: 944, column: 21, scope: !2458)
!2464 = !DILocation(line: 944, column: 52, scope: !2458)
!2465 = !DILocation(line: 945, column: 21, scope: !2458)
!2466 = !DILocation(line: 945, column: 40, scope: !2458)
!2467 = !DILocation(line: 944, column: 9, scope: !2458)
!2468 = !DILocation(line: 946, column: 54, scope: !2458)
!2469 = !DILocation(line: 943, column: 9, scope: !2423)
!2470 = !DILocation(line: 947, column: 9, scope: !2471)
!2471 = distinct !DILexicalBlock(scope: !2458, file: !3, line: 946, column: 60)
!2472 = !DILocation(line: 948, column: 9, scope: !2471)
!2473 = !DILocation(line: 949, column: 9, scope: !2471)
!2474 = !DILocation(line: 952, column: 14, scope: !2423)
!2475 = !DILocation(line: 952, column: 39, scope: !2423)
!2476 = !DILocation(line: 952, column: 64, scope: !2423)
!2477 = !DILocation(line: 952, column: 70, scope: !2423)
!2478 = !DILocation(line: 951, column: 5, scope: !2423)
!2479 = !DILocation(line: 953, column: 1, scope: !2423)
!2480 = distinct !DISubprogram(name: "doeprt", scope: !3, file: !3, line: 956, type: !469, scopeLine: 957, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!2481 = !DILocalVariable(name: "p", arg: 1, scope: !2480, file: !3, line: 956, type: !308)
!2482 = !DILocation(line: 956, column: 19, scope: !2480)
!2483 = !DILocalVariable(name: "delim", scope: !2480, file: !3, line: 958, type: !309)
!2484 = !DILocation(line: 958, column: 10, scope: !2480)
!2485 = !DILocalVariable(name: "family", scope: !2480, file: !3, line: 959, type: !326)
!2486 = !DILocation(line: 959, column: 9, scope: !2480)
!2487 = !DILocation(line: 961, column: 15, scope: !2480)
!2488 = !DILocation(line: 961, column: 13, scope: !2480)
!2489 = !DILocation(line: 961, column: 11, scope: !2480)
!2490 = !DILocation(line: 962, column: 19, scope: !2480)
!2491 = !DILocation(line: 962, column: 14, scope: !2480)
!2492 = !DILocation(line: 962, column: 12, scope: !2480)
!2493 = !DILocation(line: 963, column: 5, scope: !2480)
!2494 = !DILocation(line: 963, column: 12, scope: !2480)
!2495 = !DILocation(line: 964, column: 10, scope: !2496)
!2496 = distinct !DILexicalBlock(scope: !2480, file: !3, line: 963, column: 41)
!2497 = distinct !{!2497, !2493, !2498}
!2498 = !DILocation(line: 965, column: 5, scope: !2480)
!2499 = !DILocation(line: 966, column: 10, scope: !2500)
!2500 = distinct !DILexicalBlock(scope: !2480, file: !3, line: 966, column: 9)
!2501 = !DILocation(line: 966, column: 9, scope: !2500)
!2502 = !DILocation(line: 966, column: 15, scope: !2500)
!2503 = !DILocation(line: 966, column: 12, scope: !2500)
!2504 = !DILocation(line: 966, column: 9, scope: !2480)
!2505 = !DILocation(line: 967, column: 10, scope: !2506)
!2506 = distinct !DILexicalBlock(scope: !2500, file: !3, line: 966, column: 22)
!2507 = !DILocation(line: 968, column: 5, scope: !2506)
!2508 = !DILocation(line: 969, column: 9, scope: !2509)
!2509 = distinct !DILexicalBlock(scope: !2500, file: !3, line: 968, column: 12)
!2510 = !DILocation(line: 970, column: 9, scope: !2509)
!2511 = !DILocation(line: 972, column: 9, scope: !2512)
!2512 = distinct !DILexicalBlock(scope: !2480, file: !3, line: 972, column: 9)
!2513 = !DILocation(line: 972, column: 16, scope: !2512)
!2514 = !DILocation(line: 972, column: 21, scope: !2512)
!2515 = !DILocation(line: 972, column: 24, scope: !2512)
!2516 = !DILocation(line: 972, column: 9, scope: !2480)
!2517 = !DILocation(line: 973, column: 22, scope: !2518)
!2518 = distinct !DILexicalBlock(scope: !2512, file: !3, line: 972, column: 33)
!2519 = !DILocation(line: 973, column: 25, scope: !2518)
!2520 = !DILocation(line: 973, column: 9, scope: !2518)
!2521 = !DILocation(line: 974, column: 9, scope: !2518)
!2522 = !DILocation(line: 976, column: 9, scope: !2523)
!2523 = distinct !DILexicalBlock(scope: !2480, file: !3, line: 976, column: 9)
!2524 = !DILocation(line: 976, column: 16, scope: !2523)
!2525 = !DILocation(line: 976, column: 9, scope: !2480)
!2526 = !DILocation(line: 977, column: 13, scope: !2527)
!2527 = distinct !DILexicalBlock(scope: !2528, file: !3, line: 977, column: 13)
!2528 = distinct !DILexicalBlock(scope: !2523, file: !3, line: 976, column: 22)
!2529 = !DILocation(line: 977, column: 13, scope: !2528)
!2530 = !DILocation(line: 978, column: 13, scope: !2531)
!2531 = distinct !DILexicalBlock(scope: !2527, file: !3, line: 977, column: 22)
!2532 = !DILocation(line: 979, column: 9, scope: !2531)
!2533 = !DILocation(line: 980, column: 13, scope: !2534)
!2534 = distinct !DILexicalBlock(scope: !2527, file: !3, line: 979, column: 16)
!2535 = !DILocation(line: 982, column: 9, scope: !2528)
!2536 = !DILocalVariable(name: "a1", scope: !2537, file: !3, line: 986, type: !7)
!2537 = distinct !DILexicalBlock(scope: !2480, file: !3, line: 985, column: 5)
!2538 = !DILocation(line: 986, column: 22, scope: !2537)
!2539 = !DILocalVariable(name: "a2", scope: !2537, file: !3, line: 986, type: !7)
!2540 = !DILocation(line: 986, column: 26, scope: !2537)
!2541 = !DILocalVariable(name: "a3", scope: !2537, file: !3, line: 986, type: !7)
!2542 = !DILocation(line: 986, column: 30, scope: !2537)
!2543 = !DILocalVariable(name: "a4", scope: !2537, file: !3, line: 986, type: !7)
!2544 = !DILocation(line: 986, column: 34, scope: !2537)
!2545 = !DILocalVariable(name: "port", scope: !2537, file: !3, line: 986, type: !7)
!2546 = !DILocation(line: 986, column: 38, scope: !2537)
!2547 = !DILocation(line: 990, column: 21, scope: !2548)
!2548 = distinct !DILexicalBlock(scope: !2537, file: !3, line: 990, column: 13)
!2549 = !DILocation(line: 990, column: 14, scope: !2548)
!2550 = !DILocation(line: 990, column: 59, scope: !2548)
!2551 = !DILocation(line: 990, column: 64, scope: !2548)
!2552 = !DILocation(line: 991, column: 21, scope: !2548)
!2553 = !DILocation(line: 991, column: 14, scope: !2548)
!2554 = !DILocation(line: 991, column: 59, scope: !2548)
!2555 = !DILocation(line: 991, column: 65, scope: !2548)
!2556 = !DILocation(line: 992, column: 13, scope: !2548)
!2557 = !DILocation(line: 992, column: 16, scope: !2548)
!2558 = !DILocation(line: 992, column: 23, scope: !2548)
!2559 = !DILocation(line: 992, column: 26, scope: !2548)
!2560 = !DILocation(line: 992, column: 29, scope: !2548)
!2561 = !DILocation(line: 992, column: 36, scope: !2548)
!2562 = !DILocation(line: 992, column: 39, scope: !2548)
!2563 = !DILocation(line: 992, column: 42, scope: !2548)
!2564 = !DILocation(line: 992, column: 49, scope: !2548)
!2565 = !DILocation(line: 992, column: 52, scope: !2548)
!2566 = !DILocation(line: 992, column: 55, scope: !2548)
!2567 = !DILocation(line: 992, column: 62, scope: !2548)
!2568 = !DILocation(line: 993, column: 14, scope: !2548)
!2569 = !DILocation(line: 993, column: 19, scope: !2548)
!2570 = !DILocation(line: 993, column: 17, scope: !2548)
!2571 = !DILocation(line: 993, column: 24, scope: !2548)
!2572 = !DILocation(line: 993, column: 22, scope: !2548)
!2573 = !DILocation(line: 993, column: 29, scope: !2548)
!2574 = !DILocation(line: 993, column: 27, scope: !2548)
!2575 = !DILocation(line: 993, column: 33, scope: !2548)
!2576 = !DILocation(line: 990, column: 13, scope: !2537)
!2577 = !DILocation(line: 994, column: 13, scope: !2578)
!2578 = distinct !DILexicalBlock(scope: !2548, file: !3, line: 993, column: 40)
!2579 = !DILocation(line: 995, column: 13, scope: !2578)
!2580 = !DILocation(line: 997, column: 9, scope: !2537)
!2581 = !DILocation(line: 997, column: 17, scope: !2537)
!2582 = !DILocation(line: 997, column: 16, scope: !2537)
!2583 = !DILocation(line: 997, column: 19, scope: !2537)
!2584 = !DILocation(line: 997, column: 46, scope: !2537)
!2585 = !DILocation(line: 997, column: 45, scope: !2537)
!2586 = !DILocation(line: 997, column: 22, scope: !2537)
!2587 = !DILocation(line: 0, scope: !2537)
!2588 = !DILocation(line: 998, column: 14, scope: !2589)
!2589 = distinct !DILexicalBlock(scope: !2537, file: !3, line: 997, column: 50)
!2590 = distinct !{!2590, !2580, !2591}
!2591 = !DILocation(line: 999, column: 9, scope: !2537)
!2592 = !DILocation(line: 1000, column: 14, scope: !2593)
!2593 = distinct !DILexicalBlock(scope: !2537, file: !3, line: 1000, column: 13)
!2594 = !DILocation(line: 1000, column: 13, scope: !2593)
!2595 = !DILocation(line: 1000, column: 19, scope: !2593)
!2596 = !DILocation(line: 1000, column: 16, scope: !2593)
!2597 = !DILocation(line: 1000, column: 13, scope: !2537)
!2598 = !DILocation(line: 1001, column: 40, scope: !2599)
!2599 = distinct !DILexicalBlock(scope: !2593, file: !3, line: 1000, column: 26)
!2600 = !DILocation(line: 1001, column: 35, scope: !2599)
!2601 = !DILocation(line: 1001, column: 18, scope: !2599)
!2602 = !DILocation(line: 1002, column: 13, scope: !2599)
!2603 = !DILocation(line: 1002, column: 21, scope: !2599)
!2604 = !DILocation(line: 1002, column: 20, scope: !2599)
!2605 = !DILocation(line: 1002, column: 23, scope: !2599)
!2606 = !DILocation(line: 1002, column: 26, scope: !2599)
!2607 = !DILocation(line: 0, scope: !2599)
!2608 = !DILocation(line: 1003, column: 18, scope: !2609)
!2609 = distinct !DILexicalBlock(scope: !2599, file: !3, line: 1002, column: 55)
!2610 = distinct !{!2610, !2602, !2611}
!2611 = !DILocation(line: 1004, column: 13, scope: !2599)
!2612 = !DILocation(line: 1005, column: 9, scope: !2599)
!2613 = !DILocation(line: 1006, column: 14, scope: !2614)
!2614 = distinct !DILexicalBlock(scope: !2537, file: !3, line: 1006, column: 13)
!2615 = !DILocation(line: 1006, column: 13, scope: !2614)
!2616 = !DILocation(line: 1006, column: 19, scope: !2614)
!2617 = !DILocation(line: 1006, column: 16, scope: !2614)
!2618 = !DILocation(line: 1006, column: 25, scope: !2614)
!2619 = !DILocation(line: 1006, column: 28, scope: !2614)
!2620 = !DILocation(line: 1006, column: 33, scope: !2614)
!2621 = !DILocation(line: 1006, column: 42, scope: !2614)
!2622 = !DILocation(line: 1006, column: 45, scope: !2614)
!2623 = !DILocation(line: 1006, column: 50, scope: !2614)
!2624 = !DILocation(line: 1006, column: 13, scope: !2537)
!2625 = !DILocation(line: 1007, column: 13, scope: !2626)
!2626 = distinct !DILexicalBlock(scope: !2614, file: !3, line: 1006, column: 57)
!2627 = !DILocation(line: 1008, column: 13, scope: !2626)
!2628 = !DILocalVariable(name: "a", scope: !2629, file: !3, line: 1010, type: !549)
!2629 = distinct !DILexicalBlock(scope: !2614, file: !3, line: 1009, column: 16)
!2630 = !DILocation(line: 1010, column: 37, scope: !2629)
!2631 = !DILocation(line: 1012, column: 13, scope: !2629)
!2632 = !DILocation(line: 1013, column: 13, scope: !2629)
!2633 = !DILocation(line: 1013, column: 31, scope: !2629)
!2634 = !DILocation(line: 1015, column: 35, scope: !2629)
!2635 = !DILocation(line: 1015, column: 38, scope: !2629)
!2636 = !DILocation(line: 1016, column: 35, scope: !2629)
!2637 = !DILocation(line: 1016, column: 38, scope: !2629)
!2638 = !DILocation(line: 1015, column: 45, scope: !2629)
!2639 = !DILocation(line: 1016, column: 48, scope: !2629)
!2640 = !DILocation(line: 1016, column: 51, scope: !2629)
!2641 = !DILocation(line: 1016, column: 45, scope: !2629)
!2642 = !DILocation(line: 1016, column: 59, scope: !2629)
!2643 = !DILocation(line: 1016, column: 57, scope: !2629)
!2644 = !DILocation(line: 1015, column: 17, scope: !2629)
!2645 = !DILocation(line: 1014, column: 13, scope: !2629)
!2646 = !DILocation(line: 1014, column: 33, scope: !2629)
!2647 = !DILocation(line: 1018, column: 24, scope: !2629)
!2648 = !DILocation(line: 1018, column: 13, scope: !2629)
!2649 = !DILocation(line: 1021, column: 1, scope: !2480)
!2650 = distinct !DISubprogram(name: "do_ipv6_port", scope: !3, file: !3, line: 865, type: !2651, scopeLine: 866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!2651 = !DISubroutineType(types: !2652)
!2652 = !{null, !308, !309}
!2653 = !DILocalVariable(name: "p", arg: 1, scope: !2650, file: !3, line: 865, type: !308)
!2654 = !DILocation(line: 865, column: 32, scope: !2650)
!2655 = !DILocalVariable(name: "delim", arg: 2, scope: !2650, file: !3, line: 865, type: !309)
!2656 = !DILocation(line: 865, column: 40, scope: !2650)
!2657 = !DILocalVariable(name: "deb", scope: !2650, file: !3, line: 867, type: !308)
!2658 = !DILocation(line: 867, column: 11, scope: !2650)
!2659 = !DILocalVariable(name: "a", scope: !2650, file: !3, line: 868, type: !549)
!2660 = !DILocation(line: 868, column: 29, scope: !2650)
!2661 = !DILocation(line: 870, column: 11, scope: !2650)
!2662 = !DILocation(line: 870, column: 9, scope: !2650)
!2663 = !DILocation(line: 871, column: 5, scope: !2650)
!2664 = !DILocation(line: 871, column: 13, scope: !2650)
!2665 = !DILocation(line: 871, column: 12, scope: !2650)
!2666 = !DILocation(line: 871, column: 15, scope: !2650)
!2667 = !DILocation(line: 871, column: 53, scope: !2650)
!2668 = !DILocation(line: 871, column: 52, scope: !2650)
!2669 = !DILocation(line: 871, column: 18, scope: !2650)
!2670 = !DILocation(line: 871, column: 56, scope: !2650)
!2671 = !DILocation(line: 0, scope: !2650)
!2672 = !DILocation(line: 872, column: 10, scope: !2673)
!2673 = distinct !DILexicalBlock(scope: !2650, file: !3, line: 871, column: 65)
!2674 = distinct !{!2674, !2663, !2675}
!2675 = !DILocation(line: 873, column: 5, scope: !2650)
!2676 = !DILocation(line: 874, column: 10, scope: !2677)
!2677 = distinct !DILexicalBlock(scope: !2650, file: !3, line: 874, column: 9)
!2678 = !DILocation(line: 874, column: 9, scope: !2677)
!2679 = !DILocation(line: 874, column: 15, scope: !2677)
!2680 = !DILocation(line: 874, column: 12, scope: !2677)
!2681 = !DILocation(line: 874, column: 21, scope: !2677)
!2682 = !DILocation(line: 874, column: 29, scope: !2677)
!2683 = !DILocation(line: 874, column: 31, scope: !2677)
!2684 = !DILocation(line: 874, column: 24, scope: !2677)
!2685 = !DILocation(line: 874, column: 36, scope: !2677)
!2686 = !DILocation(line: 874, column: 9, scope: !2650)
!2687 = !DILocation(line: 874, column: 42, scope: !2677)
!2688 = !DILabel(scope: !2689, name: "nope", file: !3, line: 875)
!2689 = distinct !DILexicalBlock(scope: !2677, file: !3, line: 874, column: 42)
!2690 = !DILocation(line: 875, column: 9, scope: !2689)
!2691 = !DILocation(line: 876, column: 22, scope: !2689)
!2692 = !DILocation(line: 876, column: 16, scope: !2689)
!2693 = !DILocation(line: 877, column: 16, scope: !2689)
!2694 = !DILocation(line: 878, column: 9, scope: !2689)
!2695 = !DILocation(line: 879, column: 9, scope: !2689)
!2696 = !DILocation(line: 881, column: 7, scope: !2650)
!2697 = !DILocation(line: 881, column: 10, scope: !2650)
!2698 = !DILocation(line: 882, column: 22, scope: !2699)
!2699 = distinct !DILexicalBlock(scope: !2650, file: !3, line: 882, column: 9)
!2700 = !DILocation(line: 882, column: 9, scope: !2699)
!2701 = !DILocation(line: 882, column: 31, scope: !2699)
!2702 = !DILocation(line: 882, column: 9, scope: !2650)
!2703 = !DILocation(line: 883, column: 9, scope: !2704)
!2704 = distinct !DILexicalBlock(scope: !2699, file: !3, line: 882, column: 37)
!2705 = !DILocation(line: 885, column: 36, scope: !2650)
!2706 = !DILocation(line: 885, column: 31, scope: !2650)
!2707 = !DILocation(line: 885, column: 5, scope: !2650)
!2708 = !DILocation(line: 886, column: 1, scope: !2650)
!2709 = distinct !DISubprogram(name: "doport2", scope: !3, file: !3, line: 2323, type: !2710, scopeLine: 2324, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!2710 = !DISubroutineType(types: !2711)
!2711 = !{null, !549, !7}
!2712 = !DILocalVariable(name: "a", arg: 1, scope: !2709, file: !3, line: 2323, type: !549)
!2713 = !DILocation(line: 2323, column: 38, scope: !2709)
!2714 = !DILocalVariable(name: "p", arg: 2, scope: !2709, file: !3, line: 2323, type: !7)
!2715 = !DILocation(line: 2323, column: 54, scope: !2709)
!2716 = !DILocation(line: 2325, column: 9, scope: !2717)
!2717 = distinct !DILexicalBlock(scope: !2709, file: !3, line: 2325, column: 9)
!2718 = !DILocation(line: 2325, column: 18, scope: !2717)
!2719 = !DILocation(line: 2325, column: 9, scope: !2709)
!2720 = !DILocation(line: 2326, column: 9, scope: !2721)
!2721 = distinct !DILexicalBlock(scope: !2717, file: !3, line: 2325, column: 24)
!2722 = !DILocation(line: 2327, column: 9, scope: !2721)
!2723 = !DILocation(line: 2329, column: 9, scope: !2724)
!2724 = distinct !DILexicalBlock(scope: !2709, file: !3, line: 2329, column: 9)
!2725 = !DILocation(line: 2329, column: 18, scope: !2724)
!2726 = !DILocation(line: 2329, column: 9, scope: !2709)
!2727 = !DILocation(line: 2330, column: 9, scope: !2728)
!2728 = distinct !DILexicalBlock(scope: !2724, file: !3, line: 2329, column: 24)
!2729 = !DILocation(line: 2331, column: 9, scope: !2728)
!2730 = !DILocation(line: 2333, column: 9, scope: !2731)
!2731 = distinct !DILexicalBlock(scope: !2709, file: !3, line: 2333, column: 9)
!2732 = !DILocation(line: 2333, column: 16, scope: !2731)
!2733 = !DILocation(line: 2333, column: 9, scope: !2709)
!2734 = !DILocation(line: 2334, column: 22, scope: !2735)
!2735 = distinct !DILexicalBlock(scope: !2731, file: !3, line: 2333, column: 23)
!2736 = !DILocation(line: 2334, column: 16, scope: !2735)
!2737 = !DILocation(line: 2335, column: 16, scope: !2735)
!2738 = !DILocation(line: 2336, column: 5, scope: !2735)
!2739 = !DILocation(line: 2337, column: 9, scope: !2740)
!2740 = distinct !DILexicalBlock(scope: !2709, file: !3, line: 2337, column: 9)
!2741 = !DILocation(line: 2337, column: 11, scope: !2740)
!2742 = !DILocation(line: 2337, column: 9, scope: !2709)
!2743 = !DILocation(line: 2338, column: 9, scope: !2744)
!2744 = distinct !DILexicalBlock(scope: !2740, file: !3, line: 2337, column: 20)
!2745 = !DILocation(line: 2339, column: 9, scope: !2744)
!2746 = !DILocation(line: 2341, column: 17, scope: !2747)
!2747 = distinct !DILexicalBlock(scope: !2709, file: !3, line: 2341, column: 9)
!2748 = !DILocation(line: 2341, column: 35, scope: !2747)
!2749 = !DILocation(line: 2341, column: 9, scope: !2747)
!2750 = !DILocation(line: 2341, column: 69, scope: !2747)
!2751 = !DILocation(line: 2341, column: 9, scope: !2709)
!2752 = !DILocation(line: 2342, column: 9, scope: !2753)
!2753 = distinct !DILexicalBlock(scope: !2747, file: !3, line: 2341, column: 75)
!2754 = !DILocation(line: 2344, column: 32, scope: !2709)
!2755 = !DILocation(line: 2344, column: 20, scope: !2709)
!2756 = !DILocation(line: 2344, column: 18, scope: !2709)
!2757 = !DILocation(line: 2345, column: 9, scope: !2758)
!2758 = distinct !DILexicalBlock(scope: !2709, file: !3, line: 2345, column: 9)
!2759 = !DILocation(line: 2345, column: 28, scope: !2758)
!2760 = !DILocation(line: 2345, column: 9, scope: !2709)
!2761 = !DILocalVariable(name: "hbuf", scope: !2762, file: !3, line: 2346, type: !654)
!2762 = distinct !DILexicalBlock(scope: !2758, file: !3, line: 2345, column: 34)
!2763 = !DILocation(line: 2346, column: 14, scope: !2762)
!2764 = !DILocalVariable(name: "peerbuf", scope: !2762, file: !3, line: 2347, type: !654)
!2765 = !DILocation(line: 2347, column: 14, scope: !2762)
!2766 = !DILocation(line: 2349, column: 25, scope: !2767)
!2767 = distinct !DILexicalBlock(scope: !2762, file: !3, line: 2349, column: 13)
!2768 = !DILocation(line: 2349, column: 49, scope: !2767)
!2769 = !DILocation(line: 2350, column: 25, scope: !2767)
!2770 = !DILocation(line: 2349, column: 13, scope: !2767)
!2771 = !DILocation(line: 2351, column: 54, scope: !2767)
!2772 = !DILocation(line: 2351, column: 59, scope: !2767)
!2773 = !DILocation(line: 2352, column: 52, scope: !2767)
!2774 = !DILocation(line: 2353, column: 25, scope: !2767)
!2775 = !DILocation(line: 2352, column: 13, scope: !2767)
!2776 = !DILocation(line: 2354, column: 54, scope: !2767)
!2777 = !DILocation(line: 2349, column: 13, scope: !2762)
!2778 = !DILocation(line: 2355, column: 13, scope: !2779)
!2779 = distinct !DILexicalBlock(scope: !2767, file: !3, line: 2354, column: 60)
!2780 = !DILocation(line: 2357, column: 13, scope: !2781)
!2781 = distinct !DILexicalBlock(scope: !2762, file: !3, line: 2357, column: 13)
!2782 = !DILocation(line: 2357, column: 22, scope: !2781)
!2783 = !DILocation(line: 2357, column: 27, scope: !2781)
!2784 = !DILocation(line: 2357, column: 31, scope: !2781)
!2785 = !DILocation(line: 2357, column: 40, scope: !2781)
!2786 = !DILocation(line: 2357, column: 45, scope: !2781)
!2787 = !DILocation(line: 2357, column: 48, scope: !2781)
!2788 = !DILocation(line: 2357, column: 54, scope: !2781)
!2789 = !DILocation(line: 2357, column: 13, scope: !2762)
!2790 = !DILocation(line: 2357, column: 61, scope: !2781)
!2791 = !DILabel(scope: !2792, name: "hu", file: !3, line: 2358)
!2792 = distinct !DILexicalBlock(scope: !2781, file: !3, line: 2357, column: 61)
!2793 = !DILocation(line: 2358, column: 13, scope: !2792)
!2794 = !DILocation(line: 2359, column: 26, scope: !2792)
!2795 = !DILocation(line: 2359, column: 20, scope: !2792)
!2796 = !DILocation(line: 2360, column: 20, scope: !2792)
!2797 = !DILocation(line: 2361, column: 39, scope: !2792)
!2798 = !DILocation(line: 2361, column: 45, scope: !2792)
!2799 = !DILocation(line: 2361, column: 13, scope: !2792)
!2800 = !DILocation(line: 2362, column: 13, scope: !2792)
!2801 = !DILocation(line: 2364, column: 34, scope: !2802)
!2802 = distinct !DILexicalBlock(scope: !2781, file: !3, line: 2363, column: 16)
!2803 = !DILocation(line: 2364, column: 43, scope: !2802)
!2804 = !DILocation(line: 2364, column: 13, scope: !2802)
!2805 = !DILocation(line: 2365, column: 13, scope: !2802)
!2806 = !DILocation(line: 2367, column: 5, scope: !2762)
!2807 = !DILocation(line: 2368, column: 13, scope: !2709)
!2808 = !DILocation(line: 2370, column: 5, scope: !2709)
!2809 = !DILocation(line: 2371, column: 5, scope: !2709)
!2810 = !DILocation(line: 2372, column: 1, scope: !2709)
!2811 = !DILocalVariable(name: "protocol", arg: 1, scope: !728, file: !3, line: 2238, type: !731)
!2812 = !DILocation(line: 2238, column: 30, scope: !728)
!2813 = !DILocalVariable(name: "dataconn", scope: !728, file: !3, line: 2240, type: !549)
!2814 = !DILocation(line: 2240, column: 29, scope: !728)
!2815 = !DILocalVariable(name: "portlistpnt", scope: !728, file: !3, line: 2244, type: !2816)
!2816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 64)
!2817 = !DILocation(line: 2244, column: 22, scope: !728)
!2818 = !DILocalVariable(name: "on", scope: !728, file: !3, line: 2249, type: !326)
!2819 = !DILocation(line: 2249, column: 9, scope: !728)
!2820 = !DILocation(line: 2252, column: 5, scope: !728)
!2821 = !DILocation(line: 2253, column: 5, scope: !728)
!2822 = !DILocation(line: 2255, column: 26, scope: !2823)
!2823 = distinct !DILexicalBlock(scope: !728, file: !3, line: 2255, column: 9)
!2824 = !DILocation(line: 2255, column: 19, scope: !2823)
!2825 = !DILocation(line: 2255, column: 17, scope: !2823)
!2826 = !DILocation(line: 2255, column: 63, scope: !2823)
!2827 = !DILocation(line: 2255, column: 9, scope: !728)
!2828 = !DILocation(line: 2255, column: 70, scope: !2823)
!2829 = !DILabel(scope: !2830, name: "data_socket_error", file: !3, line: 2256)
!2830 = distinct !DILexicalBlock(scope: !2823, file: !3, line: 2255, column: 70)
!2831 = !DILocation(line: 2256, column: 9, scope: !2830)
!2832 = !DILocation(line: 2258, column: 32, scope: !2833)
!2833 = distinct !DILexicalBlock(scope: !2830, file: !3, line: 2258, column: 13)
!2834 = !DILocation(line: 2258, column: 13, scope: !2833)
!2835 = !DILocation(line: 2258, column: 37, scope: !2833)
!2836 = !DILocation(line: 2258, column: 13, scope: !2830)
!2837 = !DILocation(line: 2259, column: 13, scope: !2838)
!2838 = distinct !DILexicalBlock(scope: !2833, file: !3, line: 2258, column: 43)
!2839 = !DILocation(line: 2261, column: 9, scope: !2830)
!2840 = !DILocation(line: 2263, column: 22, scope: !2830)
!2841 = !DILocation(line: 2263, column: 16, scope: !2830)
!2842 = !DILocation(line: 2264, column: 16, scope: !2830)
!2843 = !DILocation(line: 2265, column: 9, scope: !2830)
!2844 = !DILocation(line: 2267, column: 9, scope: !2830)
!2845 = !DILocation(line: 2269, column: 8, scope: !728)
!2846 = !DILocation(line: 2271, column: 23, scope: !728)
!2847 = !DILocation(line: 2272, column: 23, scope: !728)
!2848 = !DILocation(line: 2271, column: 12, scope: !728)
!2849 = !DILocation(line: 2277, column: 5, scope: !728)
!2850 = !DILocation(line: 2278, column: 5, scope: !728)
!2851 = !DILocation(line: 2279, column: 13, scope: !2852)
!2852 = distinct !DILexicalBlock(scope: !2853, file: !3, line: 2279, column: 13)
!2853 = distinct !DILexicalBlock(scope: !2854, file: !3, line: 2278, column: 14)
!2854 = distinct !DILexicalBlock(scope: !2855, file: !3, line: 2278, column: 5)
!2855 = distinct !DILexicalBlock(scope: !728, file: !3, line: 2278, column: 5)
!2856 = !DILocation(line: 2279, column: 38, scope: !2852)
!2857 = !DILocation(line: 2279, column: 13, scope: !2853)
!2858 = !DILocation(line: 2280, column: 46, scope: !2859)
!2859 = distinct !DILexicalBlock(scope: !2852, file: !3, line: 2279, column: 51)
!2860 = !DILocation(line: 2280, column: 45, scope: !2859)
!2861 = !DILocation(line: 2280, column: 39, scope: !2859)
!2862 = !DILocation(line: 2280, column: 13, scope: !2859)
!2863 = !DILocation(line: 2280, column: 37, scope: !2859)
!2864 = !DILocation(line: 2281, column: 9, scope: !2859)
!2865 = !DILocation(line: 2282, column: 45, scope: !2866)
!2866 = distinct !DILexicalBlock(scope: !2852, file: !3, line: 2281, column: 16)
!2867 = !DILocation(line: 2282, column: 44, scope: !2866)
!2868 = !DILocation(line: 2282, column: 38, scope: !2866)
!2869 = !DILocation(line: 2282, column: 13, scope: !2866)
!2870 = !DILocation(line: 2282, column: 36, scope: !2866)
!2871 = !DILocation(line: 2284, column: 18, scope: !2872)
!2872 = distinct !DILexicalBlock(scope: !2853, file: !3, line: 2284, column: 13)
!2873 = !DILocation(line: 2284, column: 26, scope: !2872)
!2874 = !DILocation(line: 2285, column: 18, scope: !2872)
!2875 = !DILocation(line: 2284, column: 13, scope: !2872)
!2876 = !DILocation(line: 2285, column: 41, scope: !2872)
!2877 = !DILocation(line: 2284, column: 13, scope: !2853)
!2878 = !DILocation(line: 2286, column: 13, scope: !2879)
!2879 = distinct !DILexicalBlock(scope: !2872, file: !3, line: 2285, column: 47)
!2880 = !DILocation(line: 2291, column: 14, scope: !2881)
!2881 = distinct !DILexicalBlock(scope: !2853, file: !3, line: 2291, column: 13)
!2882 = !DILocation(line: 2291, column: 13, scope: !2881)
!2883 = !DILocation(line: 2291, column: 26, scope: !2881)
!2884 = !DILocation(line: 2291, column: 13, scope: !2853)
!2885 = !DILocation(line: 2292, column: 13, scope: !2886)
!2886 = distinct !DILexicalBlock(scope: !2881, file: !3, line: 2291, column: 45)
!2887 = !DILocation(line: 2294, column: 20, scope: !2853)
!2888 = !DILocation(line: 2278, column: 5, scope: !2854)
!2889 = distinct !{!2889, !2890, !2891}
!2890 = !DILocation(line: 2278, column: 5, scope: !2855)
!2891 = !DILocation(line: 2296, column: 5, scope: !2855)
!2892 = !DILocation(line: 2298, column: 28, scope: !2893)
!2893 = distinct !DILexicalBlock(scope: !728, file: !3, line: 2298, column: 9)
!2894 = !DILocation(line: 2298, column: 9, scope: !2893)
!2895 = !DILocation(line: 2298, column: 33, scope: !2893)
!2896 = !DILocation(line: 2298, column: 9, scope: !728)
!2897 = !DILocation(line: 2299, column: 9, scope: !2898)
!2898 = distinct !DILexicalBlock(scope: !2893, file: !3, line: 2298, column: 39)
!2899 = !DILocation(line: 2301, column: 5, scope: !728)
!2900 = !DILocation(line: 2304, column: 5, scope: !728)
!2901 = !DILocation(line: 2305, column: 1, scope: !728)
!2902 = distinct !DISubprogram(name: "enablesignals", scope: !3, file: !3, line: 61, type: !486, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!2903 = !DILocation(line: 63, column: 9, scope: !2904)
!2904 = distinct !DILexicalBlock(scope: !2902, file: !3, line: 63, column: 9)
!2905 = !DILocation(line: 63, column: 54, scope: !2904)
!2906 = !DILocation(line: 63, column: 9, scope: !2902)
!2907 = !DILocation(line: 64, column: 9, scope: !2908)
!2908 = distinct !DILexicalBlock(scope: !2904, file: !3, line: 63, column: 59)
!2909 = !DILocation(line: 66, column: 1, scope: !2902)
!2910 = distinct !DISubprogram(name: "generic_aton", scope: !3, file: !3, line: 602, type: !2911, scopeLine: 603, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!2911 = !DISubroutineType(types: !2912)
!2912 = !{!326, !385, !576}
!2913 = !DILocalVariable(name: "src", arg: 1, scope: !2910, file: !3, line: 602, type: !385)
!2914 = !DILocation(line: 602, column: 37, scope: !2910)
!2915 = !DILocalVariable(name: "a", arg: 2, scope: !2910, file: !3, line: 602, type: !576)
!2916 = !DILocation(line: 602, column: 67, scope: !2910)
!2917 = !DILocation(line: 604, column: 29, scope: !2918)
!2918 = distinct !DILexicalBlock(scope: !2910, file: !3, line: 604, column: 9)
!2919 = !DILocation(line: 604, column: 35, scope: !2918)
!2920 = !DILocation(line: 604, column: 34, scope: !2918)
!2921 = !DILocation(line: 604, column: 9, scope: !2918)
!2922 = !DILocation(line: 604, column: 58, scope: !2918)
!2923 = !DILocation(line: 604, column: 9, scope: !2910)
!2924 = !DILocation(line: 605, column: 9, scope: !2925)
!2925 = distinct !DILexicalBlock(scope: !2918, file: !3, line: 604, column: 63)
!2926 = !DILocation(line: 605, column: 28, scope: !2925)
!2927 = !DILocation(line: 606, column: 9, scope: !2925)
!2928 = !DILocation(line: 608, column: 28, scope: !2929)
!2929 = distinct !DILexicalBlock(scope: !2910, file: !3, line: 608, column: 9)
!2930 = !DILocation(line: 608, column: 34, scope: !2929)
!2931 = !DILocation(line: 608, column: 33, scope: !2929)
!2932 = !DILocation(line: 608, column: 9, scope: !2929)
!2933 = !DILocation(line: 608, column: 56, scope: !2929)
!2934 = !DILocation(line: 608, column: 9, scope: !2910)
!2935 = !DILocation(line: 609, column: 9, scope: !2936)
!2936 = distinct !DILexicalBlock(scope: !2929, file: !3, line: 608, column: 61)
!2937 = !DILocation(line: 609, column: 28, scope: !2936)
!2938 = !DILocation(line: 610, column: 9, scope: !2936)
!2939 = !DILocation(line: 612, column: 12, scope: !2910)
!2940 = !DILocation(line: 612, column: 5, scope: !2910)
!2941 = !DILocation(line: 614, column: 5, scope: !2910)
!2942 = !DILocation(line: 615, column: 1, scope: !2910)
!2943 = distinct !DISubprogram(name: "stripctrl", scope: !3, file: !3, line: 1023, type: !2944, scopeLine: 1024, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!2944 = !DISubroutineType(types: !2945)
!2945 = !{null, !749, !304}
!2946 = !DILocalVariable(name: "buf", arg: 1, scope: !2943, file: !3, line: 1023, type: !749)
!2947 = !DILocation(line: 1023, column: 29, scope: !2943)
!2948 = !DILocalVariable(name: "len", arg: 2, scope: !2943, file: !3, line: 1023, type: !304)
!2949 = !DILocation(line: 1023, column: 41, scope: !2943)
!2950 = !DILocation(line: 1025, column: 9, scope: !2951)
!2951 = distinct !DILexicalBlock(scope: !2943, file: !3, line: 1025, column: 9)
!2952 = !DILocation(line: 1025, column: 13, scope: !2951)
!2953 = !DILocation(line: 1025, column: 9, scope: !2943)
!2954 = !DILocation(line: 1026, column: 9, scope: !2955)
!2955 = distinct !DILexicalBlock(scope: !2951, file: !3, line: 1025, column: 29)
!2956 = !DILocation(line: 1028, column: 5, scope: !2943)
!2957 = !DILocation(line: 1029, column: 12, scope: !2958)
!2958 = distinct !DILexicalBlock(scope: !2943, file: !3, line: 1028, column: 8)
!2959 = !DILocation(line: 1030, column: 13, scope: !2960)
!2960 = distinct !DILexicalBlock(scope: !2958, file: !3, line: 1030, column: 13)
!2961 = !DILocation(line: 1030, column: 34, scope: !2960)
!2962 = !DILocation(line: 1031, column: 13, scope: !2960)
!2963 = !DILocation(line: 1031, column: 17, scope: !2960)
!2964 = !DILocation(line: 1031, column: 22, scope: !2960)
!2965 = !DILocation(line: 1031, column: 27, scope: !2960)
!2966 = !DILocation(line: 1031, column: 30, scope: !2960)
!2967 = !DILocation(line: 1031, column: 34, scope: !2960)
!2968 = !DILocation(line: 1031, column: 39, scope: !2960)
!2969 = !DILocation(line: 1030, column: 13, scope: !2958)
!2970 = !DILocation(line: 1032, column: 13, scope: !2971)
!2971 = distinct !DILexicalBlock(scope: !2960, file: !3, line: 1031, column: 48)
!2972 = !DILocation(line: 1032, column: 17, scope: !2971)
!2973 = !DILocation(line: 1032, column: 22, scope: !2971)
!2974 = !DILocation(line: 1033, column: 9, scope: !2971)
!2975 = !DILocation(line: 1034, column: 5, scope: !2958)
!2976 = !DILocation(line: 1034, column: 14, scope: !2943)
!2977 = !DILocation(line: 1034, column: 18, scope: !2943)
!2978 = distinct !{!2978, !2956, !2979}
!2979 = !DILocation(line: 1034, column: 32, scope: !2943)
!2980 = !DILocation(line: 1035, column: 1, scope: !2943)
!2981 = distinct !DISubprogram(name: "dobanner", scope: !3, file: !3, line: 1044, type: !803, scopeLine: 1045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!2982 = !DILocalVariable(name: "type", arg: 1, scope: !2981, file: !3, line: 1044, type: !731)
!2983 = !DILocation(line: 1044, column: 25, scope: !2981)
!2984 = !DILocalVariable(name: "buffer", scope: !2981, file: !3, line: 1046, type: !2985)
!2985 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 4096, elements: !914)
!2986 = !DILocation(line: 1046, column: 10, scope: !2981)
!2987 = !DILocalVariable(name: "msg", scope: !2981, file: !3, line: 1047, type: !2988)
!2988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2989, size: 64)
!2989 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2990, line: 7, baseType: !2991)
!2990 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2992, line: 49, size: 1728, elements: !2993)
!2992 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2993 = !{!2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3009, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3020, !3022, !3025, !3028, !3029, !3030, !3031, !3032}
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2991, file: !2992, line: 51, baseType: !326, size: 32)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2991, file: !2992, line: 54, baseType: !308, size: 64, offset: 64)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2991, file: !2992, line: 55, baseType: !308, size: 64, offset: 128)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2991, file: !2992, line: 56, baseType: !308, size: 64, offset: 192)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2991, file: !2992, line: 57, baseType: !308, size: 64, offset: 256)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2991, file: !2992, line: 58, baseType: !308, size: 64, offset: 320)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2991, file: !2992, line: 59, baseType: !308, size: 64, offset: 384)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2991, file: !2992, line: 60, baseType: !308, size: 64, offset: 448)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2991, file: !2992, line: 61, baseType: !308, size: 64, offset: 512)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2991, file: !2992, line: 64, baseType: !308, size: 64, offset: 576)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2991, file: !2992, line: 65, baseType: !308, size: 64, offset: 640)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2991, file: !2992, line: 66, baseType: !308, size: 64, offset: 704)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2991, file: !2992, line: 68, baseType: !3007, size: 64, offset: 768)
!3007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3008, size: 64)
!3008 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2992, line: 36, flags: DIFlagFwdDecl)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2991, file: !2992, line: 70, baseType: !3010, size: 64, offset: 832)
!3010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2991, size: 64)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2991, file: !2992, line: 72, baseType: !326, size: 32, offset: 896)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2991, file: !2992, line: 73, baseType: !326, size: 32, offset: 928)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2991, file: !2992, line: 74, baseType: !346, size: 64, offset: 960)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2991, file: !2992, line: 77, baseType: !321, size: 16, offset: 1024)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2991, file: !2992, line: 78, baseType: !396, size: 8, offset: 1040)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2991, file: !2992, line: 79, baseType: !356, size: 8, offset: 1048)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2991, file: !2992, line: 81, baseType: !3018, size: 64, offset: 1088)
!3018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3019, size: 64)
!3019 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2992, line: 43, baseType: null)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2991, file: !2992, line: 89, baseType: !3021, size: 64, offset: 1152)
!3021 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !313, line: 153, baseType: !334)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2991, file: !2992, line: 91, baseType: !3023, size: 64, offset: 1216)
!3023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3024, size: 64)
!3024 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2992, line: 37, flags: DIFlagFwdDecl)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2991, file: !2992, line: 92, baseType: !3026, size: 64, offset: 1280)
!3026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3027, size: 64)
!3027 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2992, line: 38, flags: DIFlagFwdDecl)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2991, file: !2992, line: 93, baseType: !3010, size: 64, offset: 1344)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2991, file: !2992, line: 94, baseType: !303, size: 64, offset: 1408)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2991, file: !2992, line: 95, baseType: !304, size: 64, offset: 1472)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2991, file: !2992, line: 96, baseType: !326, size: 32, offset: 1536)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2991, file: !2992, line: 98, baseType: !3033, size: 160, offset: 1568)
!3033 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 160, elements: !3034)
!3034 = !{!3035}
!3035 = !DISubrange(count: 20)
!3036 = !DILocation(line: 1047, column: 11, scope: !2981)
!3037 = !DILocalVariable(name: "buflen", scope: !2981, file: !3, line: 1048, type: !304)
!3038 = !DILocation(line: 1048, column: 12, scope: !2981)
!3039 = !DILocalVariable(name: "nblines", scope: !2981, file: !3, line: 1049, type: !7)
!3040 = !DILocation(line: 1049, column: 18, scope: !2981)
!3041 = !DILocation(line: 1051, column: 13, scope: !2981)
!3042 = !DILocation(line: 1051, column: 5, scope: !2981)
!3043 = !DILocation(line: 1053, column: 20, scope: !3044)
!3044 = distinct !DILexicalBlock(scope: !3045, file: !3, line: 1053, column: 13)
!3045 = distinct !DILexicalBlock(scope: !2981, file: !3, line: 1051, column: 19)
!3046 = !DILocation(line: 1053, column: 18, scope: !3044)
!3047 = !DILocation(line: 1053, column: 43, scope: !3044)
!3048 = !DILocation(line: 1053, column: 13, scope: !3045)
!3049 = !DILocation(line: 1058, column: 13, scope: !3050)
!3050 = distinct !DILexicalBlock(scope: !3044, file: !3, line: 1057, column: 15)
!3051 = !DILocation(line: 1060, column: 9, scope: !3045)
!3052 = !DILocation(line: 1062, column: 20, scope: !3053)
!3053 = distinct !DILexicalBlock(scope: !3045, file: !3, line: 1062, column: 13)
!3054 = !DILocation(line: 1062, column: 18, scope: !3053)
!3055 = !DILocation(line: 1062, column: 44, scope: !3053)
!3056 = !DILocation(line: 1062, column: 13, scope: !3045)
!3057 = !DILocation(line: 1063, column: 13, scope: !3058)
!3058 = distinct !DILexicalBlock(scope: !3053, file: !3, line: 1062, column: 53)
!3059 = !DILocation(line: 1065, column: 9, scope: !3045)
!3060 = !DILocation(line: 1067, column: 9, scope: !3045)
!3061 = !DILocation(line: 1070, column: 5, scope: !2981)
!3062 = !DILocation(line: 1070, column: 18, scope: !2981)
!3063 = !DILocation(line: 1070, column: 41, scope: !2981)
!3064 = !DILocation(line: 1070, column: 12, scope: !2981)
!3065 = !DILocation(line: 1070, column: 46, scope: !2981)
!3066 = !DILocation(line: 1070, column: 54, scope: !2981)
!3067 = !DILocation(line: 1070, column: 57, scope: !2981)
!3068 = !DILocation(line: 1070, column: 65, scope: !2981)
!3069 = !DILocation(line: 0, scope: !2981)
!3070 = !DILocation(line: 1071, column: 16, scope: !3071)
!3071 = distinct !DILexicalBlock(scope: !2981, file: !3, line: 1070, column: 71)
!3072 = !DILocation(line: 1072, column: 30, scope: !3073)
!3073 = distinct !DILexicalBlock(scope: !3071, file: !3, line: 1072, column: 13)
!3074 = !DILocation(line: 1072, column: 23, scope: !3073)
!3075 = !DILocation(line: 1072, column: 21, scope: !3073)
!3076 = !DILocation(line: 1072, column: 39, scope: !3073)
!3077 = !DILocation(line: 1072, column: 13, scope: !3071)
!3078 = !DILocation(line: 1073, column: 19, scope: !3079)
!3079 = distinct !DILexicalBlock(scope: !3073, file: !3, line: 1072, column: 54)
!3080 = !DILocation(line: 1074, column: 13, scope: !3079)
!3081 = !DILocation(line: 1074, column: 27, scope: !3079)
!3082 = !DILocation(line: 1074, column: 20, scope: !3079)
!3083 = !DILocation(line: 1074, column: 35, scope: !3079)
!3084 = !DILocation(line: 1074, column: 43, scope: !3079)
!3085 = !DILocation(line: 1074, column: 53, scope: !3079)
!3086 = !DILocation(line: 1074, column: 46, scope: !3079)
!3087 = !DILocation(line: 1074, column: 61, scope: !3079)
!3088 = !DILocation(line: 1075, column: 24, scope: !3089)
!3089 = distinct !DILexicalBlock(scope: !3079, file: !3, line: 1074, column: 70)
!3090 = !DILocation(line: 1075, column: 17, scope: !3089)
!3091 = !DILocation(line: 1075, column: 32, scope: !3089)
!3092 = !DILocation(line: 1076, column: 21, scope: !3093)
!3093 = distinct !DILexicalBlock(scope: !3089, file: !3, line: 1076, column: 21)
!3094 = !DILocation(line: 1076, column: 28, scope: !3093)
!3095 = !DILocation(line: 1076, column: 21, scope: !3089)
!3096 = !DILocation(line: 1077, column: 21, scope: !3097)
!3097 = distinct !DILexicalBlock(scope: !3093, file: !3, line: 1076, column: 44)
!3098 = !DILocation(line: 1079, column: 23, scope: !3089)
!3099 = distinct !{!3099, !3080, !3100}
!3100 = !DILocation(line: 1080, column: 13, scope: !3079)
!3101 = !DILocation(line: 1081, column: 23, scope: !3079)
!3102 = !DILocation(line: 1081, column: 31, scope: !3079)
!3103 = !DILocation(line: 1081, column: 13, scope: !3079)
!3104 = !DILocation(line: 1082, column: 9, scope: !3079)
!3105 = !DILocation(line: 1083, column: 30, scope: !3071)
!3106 = !DILocation(line: 1083, column: 9, scope: !3071)
!3107 = distinct !{!3107, !3061, !3108}
!3108 = !DILocation(line: 1084, column: 5, scope: !2981)
!3109 = !DILocation(line: 1085, column: 19, scope: !2981)
!3110 = !DILocation(line: 1085, column: 12, scope: !2981)
!3111 = !DILocation(line: 1086, column: 1, scope: !2981)
!3112 = distinct !DISubprogram(name: "modernformat", scope: !3, file: !3, line: 1092, type: !3113, scopeLine: 1094, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!3113 = !DISubroutineType(types: !3114)
!3114 = !{!326, !385, !308, !304, !529}
!3115 = !DILocalVariable(name: "file", arg: 1, scope: !3112, file: !3, line: 1092, type: !385)
!3116 = !DILocation(line: 1092, column: 30, scope: !3112)
!3117 = !DILocalVariable(name: "target", arg: 2, scope: !3112, file: !3, line: 1092, type: !308)
!3118 = !DILocation(line: 1092, column: 42, scope: !3112)
!3119 = !DILocalVariable(name: "target_size", arg: 3, scope: !3112, file: !3, line: 1092, type: !304)
!3120 = !DILocation(line: 1092, column: 57, scope: !3112)
!3121 = !DILocalVariable(name: "prefix", arg: 4, scope: !3112, file: !3, line: 1093, type: !529)
!3122 = !DILocation(line: 1093, column: 37, scope: !3112)
!3123 = !DILocalVariable(name: "link_target", scope: !3112, file: !3, line: 1095, type: !606)
!3124 = !DILocation(line: 1095, column: 10, scope: !3112)
!3125 = !DILocalVariable(name: "ft", scope: !3112, file: !3, line: 1096, type: !385)
!3126 = !DILocation(line: 1096, column: 17, scope: !3112)
!3127 = !DILocalVariable(name: "ftx", scope: !3112, file: !3, line: 1097, type: !385)
!3128 = !DILocation(line: 1097, column: 17, scope: !3112)
!3129 = !DILocalVariable(name: "t", scope: !3112, file: !3, line: 1098, type: !3130)
!3130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3131, size: 64)
!3131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !3132, line: 7, size: 448, elements: !3133)
!3132 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h", directory: "")
!3133 = !{!3134, !3135, !3136, !3137, !3138, !3139, !3140, !3141, !3142, !3143, !3144}
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "tm_sec", scope: !3131, file: !3132, line: 9, baseType: !326, size: 32)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "tm_min", scope: !3131, file: !3132, line: 10, baseType: !326, size: 32, offset: 32)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "tm_hour", scope: !3131, file: !3132, line: 11, baseType: !326, size: 32, offset: 64)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mday", scope: !3131, file: !3132, line: 12, baseType: !326, size: 32, offset: 96)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mon", scope: !3131, file: !3132, line: 13, baseType: !326, size: 32, offset: 128)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "tm_year", scope: !3131, file: !3132, line: 14, baseType: !326, size: 32, offset: 160)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "tm_wday", scope: !3131, file: !3132, line: 15, baseType: !326, size: 32, offset: 192)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "tm_yday", scope: !3131, file: !3132, line: 16, baseType: !326, size: 32, offset: 224)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "tm_isdst", scope: !3131, file: !3132, line: 17, baseType: !326, size: 32, offset: 256)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "tm_gmtoff", scope: !3131, file: !3132, line: 20, baseType: !334, size: 64, offset: 320)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "tm_zone", scope: !3131, file: !3132, line: 21, baseType: !385, size: 64, offset: 384)
!3145 = !DILocation(line: 1098, column: 16, scope: !3112)
!3146 = !DILocalVariable(name: "st", scope: !3112, file: !3, line: 1099, type: !3147)
!3147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !1095, line: 46, size: 1152, elements: !3148)
!3148 = !{!3149, !3150, !3151, !3152, !3153, !3154, !3155, !3156, !3157, !3158, !3159, !3160, !3165, !3166, !3167}
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !3147, file: !1095, line: 48, baseType: !478, size: 64)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !3147, file: !1095, line: 53, baseType: !482, size: 64, offset: 64)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !3147, file: !1095, line: 61, baseType: !833, size: 64, offset: 128)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !3147, file: !1095, line: 62, baseType: !349, size: 32, offset: 192)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !3147, file: !1095, line: 64, baseType: !339, size: 32, offset: 224)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !3147, file: !1095, line: 65, baseType: !360, size: 32, offset: 256)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !3147, file: !1095, line: 67, baseType: !326, size: 32, offset: 288)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !3147, file: !1095, line: 69, baseType: !478, size: 64, offset: 320)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !3147, file: !1095, line: 74, baseType: !346, size: 64, offset: 384)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !3147, file: !1095, line: 78, baseType: !1107, size: 64, offset: 448)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !3147, file: !1095, line: 80, baseType: !1109, size: 64, offset: 512)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !3147, file: !1095, line: 91, baseType: !3161, size: 128, offset: 576)
!3161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !1112, line: 10, size: 128, elements: !3162)
!3162 = !{!3163, !3164}
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !3161, file: !1112, line: 12, baseType: !333, size: 64)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !3161, file: !1112, line: 16, baseType: !1116, size: 64, offset: 64)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !3147, file: !1095, line: 92, baseType: !3161, size: 128, offset: 704)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !3147, file: !1095, line: 93, baseType: !3161, size: 128, offset: 832)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !3147, file: !1095, line: 106, baseType: !1120, size: 192, offset: 960)
!3168 = !DILocation(line: 1099, column: 17, scope: !3112)
!3169 = !DILocalVariable(name: "ret", scope: !3112, file: !3, line: 1100, type: !326)
!3170 = !DILocation(line: 1100, column: 9, scope: !3112)
!3171 = !DILocation(line: 1102, column: 15, scope: !3172)
!3172 = distinct !DILexicalBlock(scope: !3112, file: !3, line: 1102, column: 9)
!3173 = !DILocation(line: 1102, column: 9, scope: !3172)
!3174 = !DILocation(line: 1102, column: 26, scope: !3172)
!3175 = !DILocation(line: 1102, column: 31, scope: !3172)
!3176 = !DILocation(line: 1102, column: 62, scope: !3172)
!3177 = !DILocation(line: 1102, column: 40, scope: !3172)
!3178 = !DILocation(line: 1102, column: 38, scope: !3172)
!3179 = !DILocation(line: 1102, column: 9, scope: !3112)
!3180 = !DILocation(line: 1103, column: 9, scope: !3181)
!3181 = distinct !DILexicalBlock(scope: !3172, file: !3, line: 1102, column: 74)
!3182 = !DILocation(line: 1108, column: 9, scope: !3183)
!3183 = distinct !DILexicalBlock(scope: !3112, file: !3, line: 1108, column: 9)
!3184 = !DILocation(line: 1108, column: 30, scope: !3183)
!3185 = !DILocation(line: 1108, column: 35, scope: !3183)
!3186 = !DILocation(line: 1110, column: 9, scope: !3183)
!3187 = !DILocation(line: 1108, column: 9, scope: !3112)
!3188 = !DILocalVariable(name: "sts", scope: !3189, file: !3, line: 1111, type: !3147)
!3189 = distinct !DILexicalBlock(scope: !3183, file: !3, line: 1110, column: 30)
!3190 = !DILocation(line: 1111, column: 21, scope: !3189)
!3191 = !DILocation(line: 1113, column: 18, scope: !3192)
!3192 = distinct !DILexicalBlock(scope: !3189, file: !3, line: 1113, column: 13)
!3193 = !DILocation(line: 1113, column: 13, scope: !3192)
!3194 = !DILocation(line: 1113, column: 30, scope: !3192)
!3195 = !DILocation(line: 1113, column: 35, scope: !3192)
!3196 = !DILocation(line: 1113, column: 39, scope: !3192)
!3197 = !DILocation(line: 1113, column: 13, scope: !3189)
!3198 = !DILocation(line: 1114, column: 18, scope: !3199)
!3199 = distinct !DILexicalBlock(scope: !3192, file: !3, line: 1113, column: 61)
!3200 = !DILocation(line: 1115, column: 9, scope: !3199)
!3201 = !DILocation(line: 1116, column: 5, scope: !3189)
!3202 = !DILocation(line: 1118, column: 9, scope: !3203)
!3203 = distinct !DILexicalBlock(scope: !3112, file: !3, line: 1118, column: 9)
!3204 = !DILocation(line: 1118, column: 9, scope: !3112)
!3205 = !DILocation(line: 1119, column: 12, scope: !3206)
!3206 = distinct !DILexicalBlock(scope: !3203, file: !3, line: 1118, column: 30)
!3207 = !DILocation(line: 1120, column: 5, scope: !3206)
!3208 = !DILocation(line: 1120, column: 16, scope: !3209)
!3209 = distinct !DILexicalBlock(scope: !3203, file: !3, line: 1120, column: 16)
!3210 = !DILocation(line: 1120, column: 16, scope: !3203)
!3211 = !DILocation(line: 1121, column: 13, scope: !3212)
!3212 = distinct !DILexicalBlock(scope: !3209, file: !3, line: 1120, column: 37)
!3213 = !DILocation(line: 1122, column: 12, scope: !3212)
!3214 = !DILocation(line: 1123, column: 14, scope: !3215)
!3215 = distinct !DILexicalBlock(scope: !3212, file: !3, line: 1123, column: 13)
!3216 = !DILocation(line: 1123, column: 13, scope: !3215)
!3217 = !DILocation(line: 1123, column: 19, scope: !3215)
!3218 = !DILocation(line: 1123, column: 13, scope: !3212)
!3219 = !DILocation(line: 1124, column: 17, scope: !3220)
!3220 = distinct !DILexicalBlock(scope: !3221, file: !3, line: 1124, column: 17)
!3221 = distinct !DILexicalBlock(scope: !3215, file: !3, line: 1123, column: 27)
!3222 = !DILocation(line: 1124, column: 25, scope: !3220)
!3223 = !DILocation(line: 1124, column: 32, scope: !3220)
!3224 = !DILocation(line: 1124, column: 35, scope: !3220)
!3225 = !DILocation(line: 1124, column: 43, scope: !3220)
!3226 = !DILocation(line: 1124, column: 17, scope: !3221)
!3227 = !DILocation(line: 1125, column: 20, scope: !3228)
!3228 = distinct !DILexicalBlock(scope: !3220, file: !3, line: 1124, column: 49)
!3229 = !DILocation(line: 1126, column: 13, scope: !3228)
!3230 = !DILocation(line: 1126, column: 24, scope: !3231)
!3231 = distinct !DILexicalBlock(scope: !3220, file: !3, line: 1126, column: 24)
!3232 = !DILocation(line: 1126, column: 32, scope: !3231)
!3233 = !DILocation(line: 1126, column: 24, scope: !3220)
!3234 = !DILocation(line: 1127, column: 20, scope: !3235)
!3235 = distinct !DILexicalBlock(scope: !3231, file: !3, line: 1126, column: 38)
!3236 = !DILocation(line: 1128, column: 13, scope: !3235)
!3237 = !DILocation(line: 1129, column: 9, scope: !3221)
!3238 = !DILocation(line: 1129, column: 21, scope: !3239)
!3239 = distinct !DILexicalBlock(scope: !3215, file: !3, line: 1129, column: 20)
!3240 = !DILocation(line: 1129, column: 20, scope: !3239)
!3241 = !DILocation(line: 1129, column: 26, scope: !3239)
!3242 = !DILocation(line: 1129, column: 33, scope: !3239)
!3243 = !DILocation(line: 1129, column: 36, scope: !3239)
!3244 = !DILocation(line: 1129, column: 44, scope: !3239)
!3245 = !DILocation(line: 1129, column: 20, scope: !3215)
!3246 = !DILocation(line: 1130, column: 16, scope: !3247)
!3247 = distinct !DILexicalBlock(scope: !3239, file: !3, line: 1129, column: 50)
!3248 = !DILocation(line: 1131, column: 9, scope: !3247)
!3249 = !DILocation(line: 1132, column: 5, scope: !3212)
!3250 = !DILocation(line: 1132, column: 16, scope: !3251)
!3251 = distinct !DILexicalBlock(scope: !3209, file: !3, line: 1132, column: 16)
!3252 = !DILocation(line: 1132, column: 16, scope: !3209)
!3253 = !DILocalVariable(name: "sx", scope: !3254, file: !3, line: 1133, type: !383)
!3254 = distinct !DILexicalBlock(scope: !3251, file: !3, line: 1132, column: 37)
!3255 = !DILocation(line: 1133, column: 17, scope: !3254)
!3256 = !DILocation(line: 1135, column: 12, scope: !3254)
!3257 = !DILocation(line: 1136, column: 28, scope: !3258)
!3258 = distinct !DILexicalBlock(scope: !3254, file: !3, line: 1136, column: 13)
!3259 = !DILocation(line: 1136, column: 34, scope: !3258)
!3260 = !DILocation(line: 1136, column: 19, scope: !3258)
!3261 = !DILocation(line: 1136, column: 17, scope: !3258)
!3262 = !DILocation(line: 1136, column: 73, scope: !3258)
!3263 = !DILocation(line: 1136, column: 13, scope: !3254)
!3264 = !DILocation(line: 1137, column: 25, scope: !3265)
!3265 = distinct !DILexicalBlock(scope: !3258, file: !3, line: 1136, column: 78)
!3266 = !DILocation(line: 1137, column: 13, scope: !3265)
!3267 = !DILocation(line: 1137, column: 29, scope: !3265)
!3268 = !DILocation(line: 1138, column: 25, scope: !3269)
!3269 = distinct !DILexicalBlock(scope: !3265, file: !3, line: 1138, column: 17)
!3270 = !DILocation(line: 1138, column: 17, scope: !3269)
!3271 = !DILocation(line: 1138, column: 47, scope: !3269)
!3272 = !DILocation(line: 1138, column: 17, scope: !3265)
!3273 = !DILocation(line: 1139, column: 23, scope: !3274)
!3274 = distinct !DILexicalBlock(scope: !3269, file: !3, line: 1138, column: 56)
!3275 = !DILocation(line: 1139, column: 21, scope: !3274)
!3276 = !DILocation(line: 1140, column: 20, scope: !3274)
!3277 = !DILocation(line: 1141, column: 13, scope: !3274)
!3278 = !DILocation(line: 1142, column: 9, scope: !3265)
!3279 = !DILocation(line: 1143, column: 5, scope: !3254)
!3280 = !DILocation(line: 1144, column: 12, scope: !3281)
!3281 = distinct !DILexicalBlock(scope: !3251, file: !3, line: 1143, column: 12)
!3282 = !DILocation(line: 1146, column: 9, scope: !3283)
!3283 = distinct !DILexicalBlock(scope: !3112, file: !3, line: 1146, column: 9)
!3284 = !DILocation(line: 1146, column: 15, scope: !3283)
!3285 = !DILocation(line: 1146, column: 9, scope: !3112)
!3286 = !DILocation(line: 1147, column: 13, scope: !3287)
!3287 = distinct !DILexicalBlock(scope: !3288, file: !3, line: 1147, column: 13)
!3288 = distinct !DILexicalBlock(scope: !3283, file: !3, line: 1146, column: 21)
!3289 = !DILocation(line: 1147, column: 13, scope: !3288)
!3290 = !DILocation(line: 1159, column: 13, scope: !3291)
!3291 = distinct !DILexicalBlock(scope: !3287, file: !3, line: 1158, column: 51)
!3292 = !DILocation(line: 1161, column: 5, scope: !3288)
!3293 = !DILocation(line: 1162, column: 13, scope: !3294)
!3294 = distinct !DILexicalBlock(scope: !3295, file: !3, line: 1162, column: 13)
!3295 = distinct !DILexicalBlock(scope: !3283, file: !3, line: 1161, column: 12)
!3296 = !DILocation(line: 1162, column: 13, scope: !3295)
!3297 = !DILocation(line: 1176, column: 13, scope: !3298)
!3298 = distinct !DILexicalBlock(scope: !3294, file: !3, line: 1175, column: 51)
!3299 = !DILocation(line: 1179, column: 12, scope: !3112)
!3300 = !DILocation(line: 1179, column: 5, scope: !3112)
!3301 = !DILocation(line: 1180, column: 1, scope: !3112)
!3302 = distinct !DISubprogram(name: "domlst", scope: !3, file: !3, line: 1184, type: !527, scopeLine: 1185, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!3303 = !DILocalVariable(name: "file", arg: 1, scope: !3302, file: !3, line: 1184, type: !529)
!3304 = !DILocation(line: 1184, column: 32, scope: !3302)
!3305 = !DILocalVariable(name: "line", scope: !3302, file: !3, line: 1186, type: !3306)
!3306 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 34816, elements: !3307)
!3307 = !{!3308}
!3308 = !DISubrange(count: 4352)
!3309 = !DILocation(line: 1186, column: 10, scope: !3302)
!3310 = !DILocation(line: 1188, column: 22, scope: !3311)
!3311 = distinct !DILexicalBlock(scope: !3302, file: !3, line: 1188, column: 9)
!3312 = !DILocation(line: 1188, column: 28, scope: !3311)
!3313 = !DILocation(line: 1188, column: 33, scope: !3311)
!3314 = !DILocation(line: 1188, column: 9, scope: !3311)
!3315 = !DILocation(line: 1189, column: 67, scope: !3311)
!3316 = !DILocation(line: 1188, column: 9, scope: !3302)
!3317 = !DILocation(line: 1190, column: 9, scope: !3318)
!3318 = distinct !DILexicalBlock(scope: !3311, file: !3, line: 1189, column: 72)
!3319 = !DILocation(line: 1191, column: 9, scope: !3318)
!3320 = !DILocation(line: 1193, column: 26, scope: !3302)
!3321 = !DILocation(line: 1193, column: 5, scope: !3302)
!3322 = !DILocation(line: 1194, column: 5, scope: !3302)
!3323 = !DILocation(line: 1195, column: 1, scope: !3302)
!3324 = distinct !DISubprogram(name: "donoop", scope: !3, file: !3, line: 1197, type: !486, scopeLine: 1198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!3325 = !DILocation(line: 1202, column: 5, scope: !3324)
!3326 = !DILocation(line: 1204, column: 1, scope: !3324)
!3327 = distinct !DISubprogram(name: "doallo", scope: !3, file: !3, line: 1206, type: !3328, scopeLine: 1207, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!3328 = !DISubroutineType(types: !3329)
!3329 = !{null, !3330}
!3330 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !344)
!3331 = !DILocalVariable(name: "size", arg: 1, scope: !3327, file: !3, line: 1206, type: !3330)
!3332 = !DILocation(line: 1206, column: 25, scope: !3327)
!3333 = !DILocalVariable(name: "ret", scope: !3327, file: !3, line: 1208, type: !326)
!3334 = !DILocation(line: 1208, column: 9, scope: !3327)
!3335 = !DILocation(line: 1213, column: 9, scope: !3336)
!3336 = distinct !DILexicalBlock(scope: !3327, file: !3, line: 1213, column: 9)
!3337 = !DILocation(line: 1213, column: 14, scope: !3336)
!3338 = !DILocation(line: 1213, column: 9, scope: !3327)
!3339 = !DILocation(line: 1214, column: 13, scope: !3340)
!3340 = distinct !DILexicalBlock(scope: !3336, file: !3, line: 1213, column: 20)
!3341 = !DILocation(line: 1215, column: 5, scope: !3340)
!3342 = !DILocation(line: 1215, column: 49, scope: !3343)
!3343 = distinct !DILexicalBlock(scope: !3336, file: !3, line: 1215, column: 16)
!3344 = !DILocation(line: 1215, column: 40, scope: !3343)
!3345 = !DILocation(line: 1215, column: 16, scope: !3343)
!3346 = !DILocation(line: 1215, column: 55, scope: !3343)
!3347 = !DILocation(line: 1215, column: 16, scope: !3336)
!3348 = !DILocation(line: 1216, column: 13, scope: !3349)
!3349 = distinct !DILexicalBlock(scope: !3343, file: !3, line: 1215, column: 61)
!3350 = !DILocation(line: 1217, column: 5, scope: !3349)
!3351 = !DILocation(line: 1227, column: 9, scope: !3352)
!3352 = distinct !DILexicalBlock(scope: !3327, file: !3, line: 1227, column: 9)
!3353 = !DILocation(line: 1227, column: 13, scope: !3352)
!3354 = !DILocation(line: 1227, column: 9, scope: !3327)
!3355 = !DILocation(line: 1231, column: 9, scope: !3356)
!3356 = distinct !DILexicalBlock(scope: !3352, file: !3, line: 1227, column: 19)
!3357 = !DILocation(line: 1233, column: 5, scope: !3356)
!3358 = !DILocation(line: 1234, column: 9, scope: !3359)
!3359 = distinct !DILexicalBlock(scope: !3352, file: !3, line: 1233, column: 12)
!3360 = !DILocation(line: 1236, column: 1, scope: !3327)
!3361 = distinct !DISubprogram(name: "ul_check_free_space", scope: !3, file: !3, line: 4131, type: !3362, scopeLine: 4132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!3362 = !DISubroutineType(types: !3363)
!3363 = !{!326, !385, !3364}
!3364 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !336)
!3365 = !DILocalVariable(name: "name", arg: 1, scope: !3361, file: !3, line: 4131, type: !385)
!3366 = !DILocation(line: 4131, column: 37, scope: !3361)
!3367 = !DILocalVariable(name: "min_space", arg: 2, scope: !3361, file: !3, line: 4131, type: !3364)
!3368 = !DILocation(line: 4131, column: 56, scope: !3361)
!3369 = !DILocalVariable(name: "statfsbuf", scope: !3361, file: !3, line: 4133, type: !3370)
!3370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "statvfs64", file: !3371, line: 58, size: 896, elements: !3372)
!3371 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/statvfs.h", directory: "")
!3372 = !{!3373, !3374, !3375, !3377, !3378, !3379, !3381, !3382, !3383, !3384, !3385, !3386}
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "f_bsize", scope: !3370, file: !3371, line: 60, baseType: !306, size: 64)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "f_frsize", scope: !3370, file: !3371, line: 61, baseType: !306, size: 64, offset: 64)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "f_blocks", scope: !3370, file: !3371, line: 62, baseType: !3376, size: 64, offset: 128)
!3376 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsblkcnt64_t", file: !313, line: 184, baseType: !306)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "f_bfree", scope: !3370, file: !3371, line: 63, baseType: !3376, size: 64, offset: 192)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "f_bavail", scope: !3370, file: !3371, line: 64, baseType: !3376, size: 64, offset: 256)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "f_files", scope: !3370, file: !3371, line: 65, baseType: !3380, size: 64, offset: 320)
!3380 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsfilcnt64_t", file: !313, line: 188, baseType: !306)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "f_ffree", scope: !3370, file: !3371, line: 66, baseType: !3380, size: 64, offset: 384)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "f_favail", scope: !3370, file: !3371, line: 67, baseType: !3380, size: 64, offset: 448)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "f_fsid", scope: !3370, file: !3371, line: 68, baseType: !306, size: 64, offset: 512)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "f_flag", scope: !3370, file: !3371, line: 72, baseType: !306, size: 64, offset: 576)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "f_namemax", scope: !3370, file: !3371, line: 73, baseType: !306, size: 64, offset: 640)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "__f_spare", scope: !3370, file: !3371, line: 74, baseType: !3387, size: 192, offset: 704)
!3387 = !DICompositeType(tag: DW_TAG_array_type, baseType: !326, size: 192, elements: !3388)
!3388 = !{!3389}
!3389 = !DISubrange(count: 6)
!3390 = !DILocation(line: 4133, column: 19, scope: !3361)
!3391 = !DILocalVariable(name: "z", scope: !3361, file: !3, line: 4134, type: !308)
!3392 = !DILocation(line: 4134, column: 11, scope: !3361)
!3393 = !DILocalVariable(name: "alloca_namedir", scope: !3361, file: !3, line: 4135, type: !308)
!3394 = !DILocation(line: 4135, column: 11, scope: !3361)
!3395 = !DILocalVariable(name: "name_len", scope: !3361, file: !3, line: 4136, type: !304)
!3396 = !DILocation(line: 4136, column: 12, scope: !3361)
!3397 = !DILocalVariable(name: "jam", scope: !3361, file: !3, line: 4137, type: !336)
!3398 = !DILocation(line: 4137, column: 12, scope: !3361)
!3399 = !DILocalVariable(name: "space", scope: !3361, file: !3, line: 4138, type: !336)
!3400 = !DILocation(line: 4138, column: 12, scope: !3361)
!3401 = !DILocation(line: 4140, column: 9, scope: !3402)
!3402 = distinct !DILexicalBlock(scope: !3361, file: !3, line: 4140, column: 9)
!3403 = !DILocation(line: 4140, column: 25, scope: !3402)
!3404 = !DILocation(line: 4140, column: 32, scope: !3402)
!3405 = !DILocation(line: 4140, column: 35, scope: !3402)
!3406 = !DILocation(line: 4140, column: 45, scope: !3402)
!3407 = !DILocation(line: 4140, column: 9, scope: !3361)
!3408 = !DILocation(line: 4141, column: 9, scope: !3409)
!3409 = distinct !DILexicalBlock(scope: !3402, file: !3, line: 4140, column: 53)
!3410 = !DILocation(line: 4148, column: 23, scope: !3361)
!3411 = !DILocation(line: 4148, column: 16, scope: !3361)
!3412 = !DILocation(line: 4148, column: 29, scope: !3361)
!3413 = !DILocation(line: 4148, column: 14, scope: !3361)
!3414 = !DILocation(line: 4149, column: 9, scope: !3415)
!3415 = distinct !DILexicalBlock(scope: !3361, file: !3, line: 4149, column: 9)
!3416 = !DILocation(line: 4149, column: 18, scope: !3415)
!3417 = !DILocation(line: 4149, column: 32, scope: !3415)
!3418 = !DILocation(line: 4150, column: 27, scope: !3415)
!3419 = !DILocation(line: 4150, column: 25, scope: !3415)
!3420 = !DILocation(line: 4150, column: 45, scope: !3415)
!3421 = !DILocation(line: 4149, column: 9, scope: !3361)
!3422 = !DILocation(line: 4151, column: 9, scope: !3423)
!3423 = distinct !DILexicalBlock(scope: !3415, file: !3, line: 4150, column: 54)
!3424 = !DILocation(line: 4153, column: 12, scope: !3361)
!3425 = !DILocation(line: 4153, column: 28, scope: !3361)
!3426 = !DILocation(line: 4153, column: 34, scope: !3361)
!3427 = !DILocation(line: 4153, column: 5, scope: !3361)
!3428 = !DILocation(line: 4154, column: 22, scope: !3429)
!3429 = distinct !DILexicalBlock(scope: !3361, file: !3, line: 4154, column: 9)
!3430 = !DILocation(line: 4154, column: 14, scope: !3429)
!3431 = !DILocation(line: 4154, column: 12, scope: !3429)
!3432 = !DILocation(line: 4154, column: 44, scope: !3429)
!3433 = !DILocation(line: 4154, column: 9, scope: !3361)
!3434 = !DILocation(line: 4155, column: 13, scope: !3435)
!3435 = distinct !DILexicalBlock(scope: !3436, file: !3, line: 4155, column: 13)
!3436 = distinct !DILexicalBlock(scope: !3429, file: !3, line: 4154, column: 53)
!3437 = !DILocation(line: 4155, column: 18, scope: !3435)
!3438 = !DILocation(line: 4155, column: 15, scope: !3435)
!3439 = !DILocation(line: 4155, column: 13, scope: !3436)
!3440 = !DILocation(line: 4156, column: 15, scope: !3441)
!3441 = distinct !DILexicalBlock(scope: !3435, file: !3, line: 4155, column: 34)
!3442 = !DILocation(line: 4156, column: 18, scope: !3441)
!3443 = !DILocation(line: 4157, column: 9, scope: !3441)
!3444 = !DILocation(line: 4158, column: 10, scope: !3436)
!3445 = !DILocation(line: 4158, column: 12, scope: !3436)
!3446 = !DILocation(line: 4159, column: 5, scope: !3436)
!3447 = !DILocation(line: 4160, column: 9, scope: !3448)
!3448 = distinct !DILexicalBlock(scope: !3429, file: !3, line: 4159, column: 12)
!3449 = !DILocation(line: 4160, column: 27, scope: !3448)
!3450 = !DILocation(line: 4161, column: 9, scope: !3448)
!3451 = !DILocation(line: 4161, column: 27, scope: !3448)
!3452 = !DILocation(line: 4163, column: 9, scope: !3453)
!3453 = distinct !DILexicalBlock(scope: !3361, file: !3, line: 4163, column: 9)
!3454 = !DILocation(line: 4163, column: 44, scope: !3453)
!3455 = !DILocation(line: 4163, column: 9, scope: !3361)
!3456 = !DILocation(line: 4164, column: 9, scope: !3457)
!3457 = distinct !DILexicalBlock(scope: !3453, file: !3, line: 4163, column: 50)
!3458 = !DILocation(line: 4164, column: 9, scope: !3459)
!3459 = distinct !DILexicalBlock(scope: !3457, file: !3, line: 4164, column: 9)
!3460 = !DILocation(line: 4165, column: 9, scope: !3457)
!3461 = !DILocation(line: 4167, column: 5, scope: !3361)
!3462 = !DILocation(line: 4167, column: 5, scope: !3463)
!3463 = distinct !DILexicalBlock(scope: !3361, file: !3, line: 4167, column: 5)
!3464 = !DILocation(line: 4172, column: 18, scope: !3465)
!3465 = distinct !DILexicalBlock(scope: !3361, file: !3, line: 4172, column: 9)
!3466 = !DILocation(line: 4172, column: 9, scope: !3465)
!3467 = !DILocation(line: 4172, column: 43, scope: !3465)
!3468 = !DILocation(line: 4172, column: 9, scope: !3361)
!3469 = !DILocation(line: 4173, column: 9, scope: !3470)
!3470 = distinct !DILexicalBlock(scope: !3465, file: !3, line: 4172, column: 51)
!3471 = !DILocation(line: 4175, column: 9, scope: !3472)
!3472 = distinct !DILexicalBlock(scope: !3361, file: !3, line: 4175, column: 9)
!3473 = !DILocation(line: 4175, column: 19, scope: !3472)
!3474 = !DILocation(line: 4175, column: 9, scope: !3361)
!3475 = !DILocation(line: 4176, column: 26, scope: !3476)
!3476 = distinct !DILexicalBlock(scope: !3472, file: !3, line: 4175, column: 27)
!3477 = !DILocation(line: 4176, column: 17, scope: !3476)
!3478 = !DILocation(line: 4177, column: 22, scope: !3476)
!3479 = !DILocation(line: 4177, column: 13, scope: !3476)
!3480 = !DILocation(line: 4176, column: 51, scope: !3476)
!3481 = !DILocation(line: 4176, column: 15, scope: !3476)
!3482 = !DILocation(line: 4178, column: 13, scope: !3483)
!3483 = distinct !DILexicalBlock(scope: !3476, file: !3, line: 4178, column: 13)
!3484 = !DILocation(line: 4178, column: 21, scope: !3483)
!3485 = !DILocation(line: 4178, column: 19, scope: !3483)
!3486 = !DILocation(line: 4178, column: 13, scope: !3476)
!3487 = !DILocation(line: 4179, column: 13, scope: !3488)
!3488 = distinct !DILexicalBlock(scope: !3483, file: !3, line: 4178, column: 32)
!3489 = !DILocation(line: 4181, column: 5, scope: !3476)
!3490 = !DILocation(line: 4182, column: 20, scope: !3361)
!3491 = !DILocation(line: 4182, column: 11, scope: !3361)
!3492 = !DILocation(line: 4183, column: 18, scope: !3361)
!3493 = !DILocation(line: 4183, column: 9, scope: !3361)
!3494 = !DILocation(line: 4182, column: 45, scope: !3361)
!3495 = !DILocation(line: 4182, column: 9, scope: !3361)
!3496 = !DILocation(line: 4184, column: 9, scope: !3497)
!3497 = distinct !DILexicalBlock(scope: !3361, file: !3, line: 4184, column: 9)
!3498 = !DILocation(line: 4184, column: 16, scope: !3497)
!3499 = !DILocation(line: 4184, column: 13, scope: !3497)
!3500 = !DILocation(line: 4184, column: 9, scope: !3361)
!3501 = !DILocation(line: 4185, column: 9, scope: !3502)
!3502 = distinct !DILexicalBlock(scope: !3497, file: !3, line: 4184, column: 33)
!3503 = !DILocation(line: 4187, column: 5, scope: !3361)
!3504 = !DILocation(line: 4188, column: 1, scope: !3361)
!3505 = distinct !DISubprogram(name: "dositetime", scope: !3, file: !3, line: 1240, type: !486, scopeLine: 1241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!3506 = !DILocalVariable(name: "tmp", scope: !3505, file: !3, line: 1242, type: !3507)
!3507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 512, elements: !3508)
!3508 = !{!3509}
!3509 = !DISubrange(count: 64)
!3510 = !DILocation(line: 1242, column: 10, scope: !3505)
!3511 = !DILocalVariable(name: "tm", scope: !3505, file: !3, line: 1243, type: !3512)
!3512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3513, size: 64)
!3513 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3131)
!3514 = !DILocation(line: 1243, column: 22, scope: !3505)
!3515 = !DILocalVariable(name: "now", scope: !3505, file: !3, line: 1244, type: !331)
!3516 = !DILocation(line: 1244, column: 12, scope: !3505)
!3517 = !DILocation(line: 1246, column: 16, scope: !3518)
!3518 = distinct !DILexicalBlock(scope: !3505, file: !3, line: 1246, column: 9)
!3519 = !DILocation(line: 1246, column: 14, scope: !3518)
!3520 = !DILocation(line: 1246, column: 28, scope: !3518)
!3521 = !DILocation(line: 1246, column: 43, scope: !3518)
!3522 = !DILocation(line: 1246, column: 52, scope: !3518)
!3523 = !DILocation(line: 1246, column: 50, scope: !3518)
!3524 = !DILocation(line: 1246, column: 69, scope: !3518)
!3525 = !DILocation(line: 1246, column: 9, scope: !3505)
!3526 = !DILocation(line: 1247, column: 9, scope: !3527)
!3527 = distinct !DILexicalBlock(scope: !3518, file: !3, line: 1246, column: 78)
!3528 = !DILocation(line: 1248, column: 9, scope: !3527)
!3529 = !DILocation(line: 1250, column: 14, scope: !3505)
!3530 = !DILocation(line: 1250, column: 52, scope: !3505)
!3531 = !DILocation(line: 1250, column: 5, scope: !3505)
!3532 = !DILocation(line: 1251, column: 28, scope: !3505)
!3533 = !DILocation(line: 1251, column: 5, scope: !3505)
!3534 = !DILocation(line: 1252, column: 1, scope: !3505)
!3535 = distinct !DISubprogram(name: "douser", scope: !3, file: !3, line: 1287, type: !3536, scopeLine: 1288, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!3536 = !DISubroutineType(types: !3537)
!3537 = !{null, !385}
!3538 = !DILocalVariable(name: "username", arg: 1, scope: !3535, file: !3, line: 1287, type: !385)
!3539 = !DILocation(line: 1287, column: 25, scope: !3535)
!3540 = !DILocalVariable(name: "pw", scope: !3535, file: !3, line: 1289, type: !3541)
!3541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3542, size: 64)
!3542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !3543, line: 49, size: 384, elements: !3544)
!3543 = !DIFile(filename: "/usr/include/pwd.h", directory: "")
!3544 = !{!3545, !3546, !3547, !3548, !3549, !3550, !3551}
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !3542, file: !3543, line: 51, baseType: !308, size: 64)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !3542, file: !3543, line: 52, baseType: !308, size: 64, offset: 64)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !3542, file: !3543, line: 54, baseType: !339, size: 32, offset: 128)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !3542, file: !3543, line: 55, baseType: !360, size: 32, offset: 160)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !3542, file: !3543, line: 56, baseType: !308, size: 64, offset: 192)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !3542, file: !3543, line: 57, baseType: !308, size: 64, offset: 256)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !3542, file: !3543, line: 58, baseType: !308, size: 64, offset: 320)
!3552 = !DILocation(line: 1289, column: 20, scope: !3535)
!3553 = !DILocation(line: 1291, column: 9, scope: !3554)
!3554 = distinct !DILexicalBlock(scope: !3535, file: !3, line: 1291, column: 9)
!3555 = !DILocation(line: 1291, column: 9, scope: !3535)
!3556 = !DILocation(line: 1292, column: 13, scope: !3557)
!3557 = distinct !DILexicalBlock(scope: !3558, file: !3, line: 1292, column: 13)
!3558 = distinct !DILexicalBlock(scope: !3554, file: !3, line: 1291, column: 19)
!3559 = !DILocation(line: 1292, column: 13, scope: !3558)
!3560 = !DILocation(line: 1293, column: 18, scope: !3561)
!3561 = distinct !DILexicalBlock(scope: !3562, file: !3, line: 1293, column: 17)
!3562 = distinct !DILexicalBlock(scope: !3557, file: !3, line: 1292, column: 23)
!3563 = !DILocation(line: 1293, column: 17, scope: !3562)
!3564 = !DILocation(line: 1294, column: 17, scope: !3565)
!3565 = distinct !DILexicalBlock(scope: !3561, file: !3, line: 1293, column: 25)
!3566 = !DILocation(line: 1295, column: 13, scope: !3565)
!3567 = !DILocation(line: 1295, column: 24, scope: !3568)
!3568 = distinct !DILexicalBlock(scope: !3561, file: !3, line: 1295, column: 24)
!3569 = !DILocation(line: 1295, column: 45, scope: !3568)
!3570 = !DILocation(line: 1295, column: 24, scope: !3561)
!3571 = !DILocation(line: 1296, column: 17, scope: !3572)
!3572 = distinct !DILexicalBlock(scope: !3568, file: !3, line: 1295, column: 51)
!3573 = !DILocation(line: 1297, column: 13, scope: !3572)
!3574 = !DILocation(line: 1298, column: 17, scope: !3575)
!3575 = distinct !DILexicalBlock(scope: !3568, file: !3, line: 1297, column: 20)
!3576 = !DILocation(line: 1299, column: 31, scope: !3575)
!3577 = !DILocation(line: 1299, column: 29, scope: !3575)
!3578 = !DILocation(line: 1300, column: 30, scope: !3575)
!3579 = !DILocation(line: 1302, column: 9, scope: !3562)
!3580 = !DILocation(line: 1303, column: 9, scope: !3558)
!3581 = !DILocation(line: 1305, column: 9, scope: !3582)
!3582 = distinct !DILexicalBlock(scope: !3535, file: !3, line: 1305, column: 9)
!3583 = !DILocation(line: 1305, column: 19, scope: !3582)
!3584 = !DILocation(line: 1305, column: 24, scope: !3582)
!3585 = !DILocation(line: 1305, column: 27, scope: !3582)
!3586 = !DILocation(line: 1305, column: 36, scope: !3582)
!3587 = !DILocation(line: 1305, column: 44, scope: !3582)
!3588 = !DILocation(line: 1305, column: 48, scope: !3582)
!3589 = !DILocation(line: 1305, column: 47, scope: !3582)
!3590 = !DILocation(line: 1305, column: 57, scope: !3582)
!3591 = !DILocation(line: 1305, column: 62, scope: !3582)
!3592 = !DILocation(line: 1306, column: 10, scope: !3582)
!3593 = !DILocation(line: 1306, column: 20, scope: !3582)
!3594 = !DILocation(line: 1306, column: 24, scope: !3582)
!3595 = !DILocation(line: 1306, column: 39, scope: !3582)
!3596 = !DILocation(line: 1306, column: 28, scope: !3582)
!3597 = !DILocation(line: 1306, column: 56, scope: !3582)
!3598 = !DILocation(line: 1307, column: 39, scope: !3582)
!3599 = !DILocation(line: 1307, column: 28, scope: !3582)
!3600 = !DILocation(line: 1305, column: 9, scope: !3535)
!3601 = !DILocation(line: 1308, column: 26, scope: !3602)
!3602 = distinct !DILexicalBlock(scope: !3582, file: !3, line: 1307, column: 65)
!3603 = !DILocation(line: 1308, column: 9, scope: !3602)
!3604 = !DILocation(line: 1309, column: 48, scope: !3602)
!3605 = !DILocation(line: 1310, column: 9, scope: !3602)
!3606 = !DILocation(line: 1311, column: 18, scope: !3602)
!3607 = !DILocation(line: 1312, column: 5, scope: !3602)
!3608 = !DILocation(line: 1312, column: 16, scope: !3609)
!3609 = distinct !DILexicalBlock(scope: !3582, file: !3, line: 1312, column: 16)
!3610 = !DILocation(line: 1312, column: 26, scope: !3609)
!3611 = !DILocation(line: 1312, column: 16, scope: !3582)
!3612 = !DILocation(line: 1313, column: 13, scope: !3613)
!3613 = distinct !DILexicalBlock(scope: !3614, file: !3, line: 1313, column: 13)
!3614 = distinct !DILexicalBlock(scope: !3609, file: !3, line: 1312, column: 31)
!3615 = !DILocation(line: 1313, column: 34, scope: !3613)
!3616 = !DILocation(line: 1313, column: 13, scope: !3614)
!3617 = !DILocation(line: 1314, column: 40, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3613, file: !3, line: 1313, column: 40)
!3619 = !DILocation(line: 1314, column: 13, scope: !3618)
!3620 = !DILocation(line: 1315, column: 13, scope: !3618)
!3621 = !DILocation(line: 1317, column: 13, scope: !3622)
!3622 = distinct !DILexicalBlock(scope: !3613, file: !3, line: 1316, column: 16)
!3623 = !DILocation(line: 1324, column: 13, scope: !3624)
!3624 = distinct !DILexicalBlock(scope: !3625, file: !3, line: 1324, column: 13)
!3625 = distinct !DILexicalBlock(scope: !3609, file: !3, line: 1319, column: 12)
!3626 = !DILocation(line: 1324, column: 22, scope: !3624)
!3627 = !DILocation(line: 1324, column: 13, scope: !3625)
!3628 = !DILocation(line: 1325, column: 13, scope: !3629)
!3629 = distinct !DILexicalBlock(scope: !3624, file: !3, line: 1324, column: 28)
!3630 = !DILocation(line: 1360, column: 20, scope: !3631)
!3631 = distinct !DILexicalBlock(scope: !3625, file: !3, line: 1360, column: 13)
!3632 = !DILocation(line: 1360, column: 18, scope: !3631)
!3633 = !DILocation(line: 1360, column: 37, scope: !3631)
!3634 = !DILocation(line: 1360, column: 45, scope: !3631)
!3635 = !DILocation(line: 1361, column: 20, scope: !3631)
!3636 = !DILocation(line: 1361, column: 18, scope: !3631)
!3637 = !DILocation(line: 1361, column: 38, scope: !3631)
!3638 = !DILocation(line: 1361, column: 47, scope: !3631)
!3639 = !DILocation(line: 1362, column: 13, scope: !3631)
!3640 = !DILocation(line: 1362, column: 17, scope: !3631)
!3641 = !DILocation(line: 1362, column: 24, scope: !3631)
!3642 = !DILocation(line: 1362, column: 29, scope: !3631)
!3643 = !DILocation(line: 1362, column: 32, scope: !3631)
!3644 = !DILocation(line: 1362, column: 36, scope: !3631)
!3645 = !DILocation(line: 1362, column: 43, scope: !3631)
!3646 = !DILocation(line: 1362, column: 48, scope: !3631)
!3647 = !DILocation(line: 1363, column: 49, scope: !3631)
!3648 = !DILocation(line: 1363, column: 53, scope: !3631)
!3649 = !DILocation(line: 1363, column: 14, scope: !3631)
!3650 = !DILocation(line: 1363, column: 61, scope: !3631)
!3651 = !DILocation(line: 1363, column: 66, scope: !3631)
!3652 = !DILocation(line: 1364, column: 50, scope: !3631)
!3653 = !DILocation(line: 1364, column: 54, scope: !3631)
!3654 = !DILocation(line: 1364, column: 14, scope: !3631)
!3655 = !DILocation(line: 1364, column: 62, scope: !3631)
!3656 = !DILocation(line: 1364, column: 68, scope: !3631)
!3657 = !DILocation(line: 1365, column: 20, scope: !3631)
!3658 = !DILocation(line: 1365, column: 24, scope: !3631)
!3659 = !DILocation(line: 1365, column: 13, scope: !3631)
!3660 = !DILocation(line: 1365, column: 32, scope: !3631)
!3661 = !DILocation(line: 1365, column: 43, scope: !3631)
!3662 = !DILocation(line: 1365, column: 47, scope: !3631)
!3663 = !DILocation(line: 1365, column: 35, scope: !3631)
!3664 = !DILocation(line: 1360, column: 13, scope: !3625)
!3665 = !DILocation(line: 1365, column: 56, scope: !3631)
!3666 = !DILabel(scope: !3667, name: "cantsec", file: !3, line: 1366)
!3667 = distinct !DILexicalBlock(scope: !3631, file: !3, line: 1365, column: 56)
!3668 = !DILocation(line: 1366, column: 13, scope: !3667)
!3669 = !DILocation(line: 1367, column: 13, scope: !3667)
!3670 = !DILocalVariable(name: "hd", scope: !3671, file: !3, line: 1386, type: !308)
!3671 = distinct !DILexicalBlock(scope: !3625, file: !3, line: 1385, column: 9)
!3672 = !DILocation(line: 1386, column: 19, scope: !3671)
!3673 = !DILocalVariable(name: "rd_len", scope: !3671, file: !3, line: 1387, type: !304)
!3674 = !DILocation(line: 1387, column: 20, scope: !3671)
!3675 = !DILocation(line: 1389, column: 17, scope: !3676)
!3676 = distinct !DILexicalBlock(scope: !3671, file: !3, line: 1389, column: 17)
!3677 = !DILocation(line: 1389, column: 21, scope: !3676)
!3678 = !DILocation(line: 1389, column: 28, scope: !3676)
!3679 = !DILocation(line: 1389, column: 36, scope: !3676)
!3680 = !DILocation(line: 1389, column: 40, scope: !3676)
!3681 = !DILocation(line: 1389, column: 44, scope: !3676)
!3682 = !DILocation(line: 1389, column: 39, scope: !3676)
!3683 = !DILocation(line: 1389, column: 51, scope: !3676)
!3684 = !DILocation(line: 1389, column: 17, scope: !3671)
!3685 = !DILocation(line: 1390, column: 17, scope: !3686)
!3686 = distinct !DILexicalBlock(scope: !3676, file: !3, line: 1389, column: 59)
!3687 = !DILocation(line: 1392, column: 30, scope: !3688)
!3688 = distinct !DILexicalBlock(scope: !3671, file: !3, line: 1392, column: 17)
!3689 = !DILocation(line: 1392, column: 34, scope: !3688)
!3690 = !DILocation(line: 1392, column: 23, scope: !3688)
!3691 = !DILocation(line: 1392, column: 21, scope: !3688)
!3692 = !DILocation(line: 1392, column: 50, scope: !3688)
!3693 = !DILocation(line: 1392, column: 17, scope: !3671)
!3694 = !DILocation(line: 1393, column: 36, scope: !3695)
!3695 = distinct !DILexicalBlock(scope: !3688, file: !3, line: 1392, column: 59)
!3696 = !DILocation(line: 1393, column: 41, scope: !3695)
!3697 = !DILocation(line: 1393, column: 45, scope: !3695)
!3698 = !DILocation(line: 1393, column: 39, scope: !3695)
!3699 = !DILocation(line: 1393, column: 53, scope: !3695)
!3700 = !DILocation(line: 1393, column: 24, scope: !3695)
!3701 = !DILocation(line: 1394, column: 46, scope: !3702)
!3702 = distinct !DILexicalBlock(scope: !3695, file: !3, line: 1394, column: 21)
!3703 = !DILocation(line: 1394, column: 39, scope: !3702)
!3704 = !DILocation(line: 1394, column: 37, scope: !3702)
!3705 = !DILocation(line: 1394, column: 55, scope: !3702)
!3706 = !DILocation(line: 1394, column: 21, scope: !3695)
!3707 = !DILocation(line: 1395, column: 21, scope: !3708)
!3708 = distinct !DILexicalBlock(scope: !3702, file: !3, line: 1394, column: 64)
!3709 = !DILocation(line: 1397, column: 24, scope: !3695)
!3710 = !DILocation(line: 1397, column: 40, scope: !3695)
!3711 = !DILocation(line: 1397, column: 44, scope: !3695)
!3712 = !DILocation(line: 1397, column: 52, scope: !3695)
!3713 = !DILocation(line: 1397, column: 17, scope: !3695)
!3714 = !DILocation(line: 1398, column: 17, scope: !3695)
!3715 = !DILocation(line: 1398, column: 32, scope: !3695)
!3716 = !DILocation(line: 1398, column: 39, scope: !3695)
!3717 = !DILocation(line: 1398, column: 54, scope: !3695)
!3718 = !DILocation(line: 1399, column: 20, scope: !3695)
!3719 = !DILocation(line: 1400, column: 13, scope: !3695)
!3720 = !DILocation(line: 1401, column: 33, scope: !3721)
!3721 = distinct !DILexicalBlock(scope: !3688, file: !3, line: 1400, column: 20)
!3722 = !DILocation(line: 1401, column: 37, scope: !3721)
!3723 = !DILocation(line: 1401, column: 26, scope: !3721)
!3724 = !DILocation(line: 1401, column: 45, scope: !3721)
!3725 = !DILocation(line: 1401, column: 24, scope: !3721)
!3726 = !DILocation(line: 1402, column: 46, scope: !3727)
!3727 = distinct !DILexicalBlock(scope: !3721, file: !3, line: 1402, column: 21)
!3728 = !DILocation(line: 1402, column: 39, scope: !3727)
!3729 = !DILocation(line: 1402, column: 37, scope: !3727)
!3730 = !DILocation(line: 1402, column: 55, scope: !3727)
!3731 = !DILocation(line: 1402, column: 21, scope: !3721)
!3732 = !DILocation(line: 1403, column: 21, scope: !3733)
!3733 = distinct !DILexicalBlock(scope: !3727, file: !3, line: 1402, column: 64)
!3734 = !DILocation(line: 1405, column: 26, scope: !3721)
!3735 = !DILocation(line: 1405, column: 42, scope: !3721)
!3736 = !DILocation(line: 1405, column: 57, scope: !3721)
!3737 = !DILocation(line: 1405, column: 61, scope: !3721)
!3738 = !DILocation(line: 1405, column: 17, scope: !3721)
!3739 = !DILocation(line: 1406, column: 20, scope: !3721)
!3740 = !DILocation(line: 1408, column: 23, scope: !3741)
!3741 = distinct !DILexicalBlock(scope: !3671, file: !3, line: 1408, column: 17)
!3742 = !DILocation(line: 1408, column: 17, scope: !3741)
!3743 = !DILocation(line: 1408, column: 39, scope: !3741)
!3744 = !DILocation(line: 1408, column: 49, scope: !3741)
!3745 = !DILocation(line: 1408, column: 42, scope: !3741)
!3746 = !DILocation(line: 1408, column: 65, scope: !3741)
!3747 = !DILocation(line: 1408, column: 74, scope: !3741)
!3748 = !DILocation(line: 1408, column: 68, scope: !3741)
!3749 = !DILocation(line: 1408, column: 17, scope: !3671)
!3750 = !DILocation(line: 1410, column: 21, scope: !3751)
!3751 = distinct !DILexicalBlock(scope: !3741, file: !3, line: 1408, column: 79)
!3752 = !DILocation(line: 1410, column: 37, scope: !3751)
!3753 = !DILocation(line: 1409, column: 17, scope: !3751)
!3754 = !DILocation(line: 1413, column: 13, scope: !3671)
!3755 = !DILocation(line: 1428, column: 13, scope: !3756)
!3756 = distinct !DILexicalBlock(scope: !3625, file: !3, line: 1428, column: 13)
!3757 = !DILocation(line: 1428, column: 16, scope: !3756)
!3758 = !DILocation(line: 1428, column: 13, scope: !3625)
!3759 = !DILocation(line: 1429, column: 13, scope: !3760)
!3760 = distinct !DILexicalBlock(scope: !3756, file: !3, line: 1428, column: 25)
!3761 = !DILocation(line: 1431, column: 18, scope: !3625)
!3762 = !DILocation(line: 1432, column: 26, scope: !3625)
!3763 = !DILocation(line: 1432, column: 30, scope: !3625)
!3764 = !DILocation(line: 1432, column: 24, scope: !3625)
!3765 = !DILocation(line: 1433, column: 26, scope: !3625)
!3766 = !DILocation(line: 1433, column: 30, scope: !3625)
!3767 = !DILocation(line: 1433, column: 24, scope: !3625)
!3768 = !DILocation(line: 1434, column: 38, scope: !3769)
!3769 = distinct !DILexicalBlock(scope: !3625, file: !3, line: 1434, column: 13)
!3770 = !DILocation(line: 1434, column: 42, scope: !3769)
!3771 = !DILocation(line: 1434, column: 31, scope: !3769)
!3772 = !DILocation(line: 1434, column: 29, scope: !3769)
!3773 = !DILocation(line: 1434, column: 51, scope: !3769)
!3774 = !DILocation(line: 1434, column: 13, scope: !3625)
!3775 = !DILocation(line: 1435, column: 13, scope: !3776)
!3776 = distinct !DILexicalBlock(scope: !3769, file: !3, line: 1434, column: 60)
!3777 = !DILocation(line: 1449, column: 24, scope: !3778)
!3778 = distinct !DILexicalBlock(scope: !3625, file: !3, line: 1449, column: 13)
!3779 = !DILocation(line: 1449, column: 28, scope: !3778)
!3780 = !DILocation(line: 1449, column: 13, scope: !3625)
!3781 = !DILocation(line: 1455, column: 36, scope: !3782)
!3782 = distinct !DILexicalBlock(scope: !3783, file: !3, line: 1455, column: 17)
!3783 = distinct !DILexicalBlock(scope: !3778, file: !3, line: 1449, column: 41)
!3784 = !DILocation(line: 1455, column: 17, scope: !3782)
!3785 = !DILocation(line: 1455, column: 41, scope: !3782)
!3786 = !DILocation(line: 1455, column: 17, scope: !3783)
!3787 = !DILocation(line: 1456, column: 17, scope: !3788)
!3788 = distinct !DILexicalBlock(scope: !3782, file: !3, line: 1455, column: 47)
!3789 = !DILocation(line: 1462, column: 9, scope: !3783)
!3790 = !DILocation(line: 1466, column: 9, scope: !3625)
!3791 = !DILocation(line: 1469, column: 13, scope: !3792)
!3792 = distinct !DILexicalBlock(scope: !3625, file: !3, line: 1469, column: 13)
!3793 = !DILocation(line: 1469, column: 34, scope: !3792)
!3794 = !DILocation(line: 1469, column: 13, scope: !3625)
!3795 = !DILocation(line: 1470, column: 13, scope: !3796)
!3796 = distinct !DILexicalBlock(scope: !3792, file: !3, line: 1469, column: 40)
!3797 = !DILocation(line: 1471, column: 9, scope: !3796)
!3798 = !DILocation(line: 1472, column: 13, scope: !3799)
!3799 = distinct !DILexicalBlock(scope: !3792, file: !3, line: 1471, column: 16)
!3800 = !DILocation(line: 1474, column: 22, scope: !3625)
!3801 = !DILocation(line: 1475, column: 23, scope: !3625)
!3802 = !DILocation(line: 1475, column: 21, scope: !3625)
!3803 = !DILocation(line: 1476, column: 9, scope: !3625)
!3804 = !DILocation(line: 1477, column: 40, scope: !3625)
!3805 = !DILocation(line: 1488, column: 26, scope: !3625)
!3806 = !DILocation(line: 1488, column: 18, scope: !3625)
!3807 = !DILocation(line: 1493, column: 9, scope: !3808)
!3808 = distinct !DILexicalBlock(scope: !3535, file: !3, line: 1493, column: 9)
!3809 = !DILocation(line: 1493, column: 45, scope: !3808)
!3810 = !DILocation(line: 1493, column: 9, scope: !3535)
!3811 = !DILocation(line: 1494, column: 15, scope: !3812)
!3812 = distinct !DILexicalBlock(scope: !3808, file: !3, line: 1493, column: 54)
!3813 = !DILocation(line: 1495, column: 15, scope: !3812)
!3814 = !DILocation(line: 1496, column: 5, scope: !3812)
!3815 = !DILocation(line: 1500, column: 1, scope: !3535)
!3816 = distinct !DISubprogram(name: "doinitsupgroups", scope: !3, file: !3, line: 1254, type: !3817, scopeLine: 1255, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!3817 = !DISubroutineType(types: !3818)
!3818 = !{!326, !385, !3819, !3820}
!3819 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !337)
!3820 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !359)
!3821 = !DILocalVariable(name: "user", arg: 1, scope: !3816, file: !3, line: 1254, type: !385)
!3822 = !DILocation(line: 1254, column: 40, scope: !3816)
!3823 = !DILocalVariable(name: "uid", arg: 2, scope: !3816, file: !3, line: 1254, type: !3819)
!3824 = !DILocation(line: 1254, column: 58, scope: !3816)
!3825 = !DILocalVariable(name: "gid", arg: 3, scope: !3816, file: !3, line: 1254, type: !3820)
!3826 = !DILocation(line: 1254, column: 75, scope: !3816)
!3827 = !DILocation(line: 1258, column: 9, scope: !3828)
!3828 = distinct !DILexicalBlock(scope: !3816, file: !3, line: 1258, column: 9)
!3829 = !DILocation(line: 1258, column: 29, scope: !3828)
!3830 = !DILocation(line: 1258, column: 9, scope: !3816)
!3831 = !DILocation(line: 1259, column: 9, scope: !3832)
!3832 = distinct !DILexicalBlock(scope: !3828, file: !3, line: 1258, column: 35)
!3833 = !DILocation(line: 1265, column: 9, scope: !3834)
!3834 = distinct !DILexicalBlock(scope: !3816, file: !3, line: 1265, column: 9)
!3835 = !DILocation(line: 1265, column: 14, scope: !3834)
!3836 = !DILocation(line: 1265, column: 9, scope: !3816)
!3837 = !DILocalVariable(name: "lpwd", scope: !3838, file: !3, line: 1266, type: !3839)
!3838 = distinct !DILexicalBlock(scope: !3834, file: !3, line: 1265, column: 23)
!3839 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3840)
!3840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3841, size: 64)
!3841 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3542)
!3842 = !DILocation(line: 1266, column: 37, scope: !3838)
!3843 = !DILocation(line: 1266, column: 53, scope: !3838)
!3844 = !DILocation(line: 1266, column: 44, scope: !3838)
!3845 = !DILocation(line: 1268, column: 13, scope: !3846)
!3846 = distinct !DILexicalBlock(scope: !3838, file: !3, line: 1268, column: 13)
!3847 = !DILocation(line: 1268, column: 18, scope: !3846)
!3848 = !DILocation(line: 1268, column: 26, scope: !3846)
!3849 = !DILocation(line: 1268, column: 29, scope: !3846)
!3850 = !DILocation(line: 1268, column: 35, scope: !3846)
!3851 = !DILocation(line: 1268, column: 43, scope: !3846)
!3852 = !DILocation(line: 1268, column: 13, scope: !3838)
!3853 = !DILocation(line: 1269, column: 20, scope: !3854)
!3854 = distinct !DILexicalBlock(scope: !3846, file: !3, line: 1268, column: 52)
!3855 = !DILocation(line: 1269, column: 26, scope: !3854)
!3856 = !DILocation(line: 1269, column: 18, scope: !3854)
!3857 = !DILocation(line: 1270, column: 9, scope: !3854)
!3858 = !DILocation(line: 1271, column: 13, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3846, file: !3, line: 1270, column: 16)
!3860 = !DILocation(line: 1273, column: 5, scope: !3838)
!3861 = !DILocation(line: 1274, column: 16, scope: !3816)
!3862 = !DILocation(line: 1274, column: 22, scope: !3816)
!3863 = !DILocation(line: 1274, column: 5, scope: !3816)
!3864 = !DILocation(line: 1284, column: 5, scope: !3816)
!3865 = !DILocation(line: 1285, column: 1, scope: !3816)
!3866 = !DILocalVariable(name: "password", arg: 1, scope: !468, file: !3, line: 1693, type: !308)
!3867 = !DILocation(line: 1693, column: 19, scope: !468)
!3868 = !DILocalVariable(name: "hd", scope: !468, file: !3, line: 1696, type: !308)
!3869 = !DILocation(line: 1696, column: 11, scope: !468)
!3870 = !DILocation(line: 1707, column: 9, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !468, file: !3, line: 1707, column: 9)
!3872 = !DILocation(line: 1707, column: 18, scope: !3871)
!3873 = !DILocation(line: 1707, column: 9, scope: !468)
!3874 = !DILocation(line: 1708, column: 13, scope: !3875)
!3875 = distinct !DILexicalBlock(scope: !3876, file: !3, line: 1708, column: 13)
!3876 = distinct !DILexicalBlock(scope: !3871, file: !3, line: 1707, column: 24)
!3877 = !DILocation(line: 1708, column: 19, scope: !3875)
!3878 = !DILocation(line: 1708, column: 13, scope: !3876)
!3879 = !DILocation(line: 1709, column: 13, scope: !3880)
!3880 = distinct !DILexicalBlock(scope: !3875, file: !3, line: 1708, column: 25)
!3881 = !DILocation(line: 1713, column: 9, scope: !3880)
!3882 = !DILocation(line: 1714, column: 13, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !3875, file: !3, line: 1713, column: 16)
!3884 = !DILocation(line: 1716, column: 9, scope: !3876)
!3885 = !DILocation(line: 1718, column: 9, scope: !3886)
!3886 = distinct !DILexicalBlock(scope: !468, file: !3, line: 1718, column: 9)
!3887 = !DILocation(line: 1718, column: 18, scope: !3886)
!3888 = !DILocation(line: 1718, column: 9, scope: !468)
!3889 = !DILocation(line: 1719, column: 9, scope: !3890)
!3890 = distinct !DILexicalBlock(scope: !3886, file: !3, line: 1718, column: 24)
!3891 = !DILocation(line: 1720, column: 9, scope: !3890)
!3892 = !DILocation(line: 1722, column: 16, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !468, file: !3, line: 1722, column: 9)
!3894 = !DILocation(line: 1722, column: 9, scope: !3893)
!3895 = !DILocation(line: 1722, column: 26, scope: !3893)
!3896 = !DILocation(line: 1722, column: 9, scope: !468)
!3897 = !DILocation(line: 1723, column: 9, scope: !3898)
!3898 = distinct !DILexicalBlock(scope: !3893, file: !3, line: 1722, column: 47)
!3899 = !DILocation(line: 1724, column: 9, scope: !3898)
!3900 = !DILocation(line: 1726, column: 36, scope: !468)
!3901 = !DILocation(line: 1726, column: 18, scope: !468)
!3902 = !DILocation(line: 1727, column: 5, scope: !468)
!3903 = !DILocation(line: 1728, column: 20, scope: !3904)
!3904 = distinct !DILexicalBlock(scope: !468, file: !3, line: 1728, column: 9)
!3905 = !DILocation(line: 1728, column: 28, scope: !3904)
!3906 = !DILocation(line: 1728, column: 9, scope: !468)
!3907 = !DILocation(line: 1729, column: 16, scope: !3908)
!3908 = distinct !DILexicalBlock(scope: !3904, file: !3, line: 1728, column: 34)
!3909 = !DILocation(line: 1730, column: 21, scope: !3908)
!3910 = !DILocation(line: 1730, column: 9, scope: !3908)
!3911 = !DILocation(line: 1731, column: 9, scope: !3908)
!3912 = !DILocation(line: 1732, column: 9, scope: !3908)
!3913 = !DILocation(line: 1733, column: 13, scope: !3914)
!3914 = distinct !DILexicalBlock(scope: !3908, file: !3, line: 1733, column: 13)
!3915 = !DILocation(line: 1733, column: 21, scope: !3914)
!3916 = !DILocation(line: 1733, column: 13, scope: !3908)
!3917 = !DILocation(line: 1734, column: 13, scope: !3918)
!3918 = distinct !DILexicalBlock(scope: !3914, file: !3, line: 1733, column: 41)
!3919 = !DILocation(line: 1735, column: 13, scope: !3918)
!3920 = !DILocation(line: 1737, column: 9, scope: !3908)
!3921 = !DILocation(line: 1738, column: 9, scope: !3908)
!3922 = !DILocation(line: 1740, column: 20, scope: !3923)
!3923 = distinct !DILexicalBlock(scope: !468, file: !3, line: 1740, column: 9)
!3924 = !DILocation(line: 1740, column: 26, scope: !3923)
!3925 = !DILocation(line: 1740, column: 24, scope: !3923)
!3926 = !DILocation(line: 1740, column: 9, scope: !468)
!3927 = !DILocation(line: 1742, column: 42, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3923, file: !3, line: 1740, column: 35)
!3929 = !DILocation(line: 1742, column: 26, scope: !3928)
!3930 = !DILocation(line: 1741, column: 9, scope: !3928)
!3931 = !DILocation(line: 1743, column: 21, scope: !3928)
!3932 = !DILocation(line: 1743, column: 9, scope: !3928)
!3933 = !DILocation(line: 1744, column: 13, scope: !3934)
!3934 = distinct !DILexicalBlock(scope: !3928, file: !3, line: 1744, column: 13)
!3935 = !DILocation(line: 1744, column: 21, scope: !3934)
!3936 = !DILocation(line: 1744, column: 13, scope: !3928)
!3937 = !DILocation(line: 1745, column: 13, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3934, file: !3, line: 1744, column: 42)
!3939 = !DILocation(line: 1746, column: 13, scope: !3938)
!3940 = !DILocation(line: 1747, column: 13, scope: !3938)
!3941 = !DILocation(line: 1749, column: 9, scope: !3928)
!3942 = !DILocation(line: 1750, column: 9, scope: !3928)
!3943 = !DILocation(line: 1751, column: 9, scope: !3928)
!3944 = !DILocation(line: 1763, column: 31, scope: !468)
!3945 = !DILocation(line: 1763, column: 12, scope: !468)
!3946 = !DILocation(line: 1764, column: 32, scope: !468)
!3947 = !DILocation(line: 1764, column: 12, scope: !468)
!3948 = !DILocation(line: 1770, column: 57, scope: !3949)
!3949 = distinct !DILexicalBlock(scope: !468, file: !3, line: 1770, column: 9)
!3950 = !DILocation(line: 1770, column: 9, scope: !3949)
!3951 = !DILocation(line: 1770, column: 62, scope: !3949)
!3952 = !DILocation(line: 1770, column: 9, scope: !468)
!3953 = !DILocation(line: 1776, column: 9, scope: !3954)
!3954 = distinct !DILexicalBlock(scope: !3949, file: !3, line: 1772, column: 11)
!3955 = !DILocation(line: 1781, column: 45, scope: !3956)
!3956 = distinct !DILexicalBlock(scope: !468, file: !3, line: 1781, column: 9)
!3957 = !DILocation(line: 1781, column: 27, scope: !3956)
!3958 = !DILocation(line: 1781, column: 25, scope: !3956)
!3959 = !DILocation(line: 1781, column: 51, scope: !3956)
!3960 = !DILocation(line: 1781, column: 9, scope: !468)
!3961 = !DILocation(line: 1782, column: 9, scope: !3962)
!3962 = distinct !DILexicalBlock(scope: !3956, file: !3, line: 1781, column: 60)
!3963 = !DILocation(line: 1784, column: 17, scope: !468)
!3964 = !DILocation(line: 1784, column: 10, scope: !468)
!3965 = !DILocation(line: 1784, column: 8, scope: !468)
!3966 = !DILocation(line: 1785, column: 9, scope: !3967)
!3967 = distinct !DILexicalBlock(scope: !468, file: !3, line: 1785, column: 9)
!3968 = !DILocation(line: 1785, column: 12, scope: !3967)
!3969 = !DILocation(line: 1785, column: 9, scope: !468)
!3970 = !DILocation(line: 1786, column: 13, scope: !3971)
!3971 = distinct !DILexicalBlock(scope: !3972, file: !3, line: 1786, column: 13)
!3972 = distinct !DILexicalBlock(scope: !3967, file: !3, line: 1785, column: 21)
!3973 = !DILocation(line: 1786, column: 22, scope: !3971)
!3974 = !DILocation(line: 1786, column: 13, scope: !3972)
!3975 = !DILocation(line: 1787, column: 13, scope: !3976)
!3976 = distinct !DILexicalBlock(scope: !3971, file: !3, line: 1786, column: 28)
!3977 = !DILocation(line: 1789, column: 35, scope: !3978)
!3978 = distinct !DILexicalBlock(scope: !3972, file: !3, line: 1789, column: 13)
!3979 = !DILocation(line: 1789, column: 13, scope: !3978)
!3980 = !DILocation(line: 1789, column: 13, scope: !3972)
!3981 = !DILocation(line: 1790, column: 13, scope: !3982)
!3982 = distinct !DILexicalBlock(scope: !3978, file: !3, line: 1789, column: 52)
!3983 = !DILocation(line: 1792, column: 10, scope: !3972)
!3984 = !DILocation(line: 1792, column: 15, scope: !3972)
!3985 = !DILocation(line: 1793, column: 11, scope: !3972)
!3986 = !DILocation(line: 1794, column: 20, scope: !3987)
!3987 = distinct !DILexicalBlock(scope: !3972, file: !3, line: 1794, column: 13)
!3988 = !DILocation(line: 1794, column: 13, scope: !3987)
!3989 = !DILocation(line: 1794, column: 36, scope: !3987)
!3990 = !DILocation(line: 1794, column: 45, scope: !3987)
!3991 = !DILocation(line: 1794, column: 39, scope: !3987)
!3992 = !DILocation(line: 1794, column: 13, scope: !3972)
!3993 = !DILocation(line: 1795, column: 13, scope: !3994)
!3994 = distinct !DILexicalBlock(scope: !3987, file: !3, line: 1794, column: 50)
!3995 = !DILocation(line: 1797, column: 18, scope: !3972)
!3996 = !DILocation(line: 1808, column: 5, scope: !3972)
!3997 = !DILocation(line: 1809, column: 21, scope: !3998)
!3998 = distinct !DILexicalBlock(scope: !3967, file: !3, line: 1808, column: 12)
!3999 = !DILocation(line: 1809, column: 16, scope: !3998)
!4000 = !DILocation(line: 1810, column: 24, scope: !3998)
!4001 = !DILocation(line: 1811, column: 46, scope: !4002)
!4002 = distinct !DILexicalBlock(scope: !3998, file: !3, line: 1811, column: 13)
!4003 = !DILocation(line: 1811, column: 13, scope: !4002)
!4004 = !DILocation(line: 1811, column: 13, scope: !3998)
!4005 = !DILocation(line: 1812, column: 13, scope: !4006)
!4006 = distinct !DILexicalBlock(scope: !4002, file: !3, line: 1811, column: 52)
!4007 = !DILocation(line: 1815, column: 9, scope: !4008)
!4008 = distinct !DILexicalBlock(scope: !468, file: !3, line: 1815, column: 9)
!4009 = !DILocation(line: 1815, column: 45, scope: !4008)
!4010 = !DILocation(line: 1815, column: 9, scope: !468)
!4011 = !DILocation(line: 1816, column: 15, scope: !4012)
!4012 = distinct !DILexicalBlock(scope: !4008, file: !3, line: 1815, column: 54)
!4013 = !DILocation(line: 1817, column: 15, scope: !4012)
!4014 = !DILocation(line: 1818, column: 5, scope: !4012)
!4015 = !DILocation(line: 1820, column: 27, scope: !4016)
!4016 = distinct !DILexicalBlock(scope: !468, file: !3, line: 1820, column: 9)
!4017 = !DILocation(line: 1820, column: 9, scope: !4016)
!4018 = !DILocation(line: 1820, column: 32, scope: !4016)
!4019 = !DILocation(line: 1820, column: 54, scope: !4016)
!4020 = !DILocation(line: 1820, column: 35, scope: !4016)
!4021 = !DILocation(line: 1820, column: 9, scope: !468)
!4022 = !DILocation(line: 1821, column: 9, scope: !4023)
!4023 = distinct !DILexicalBlock(scope: !4016, file: !3, line: 1820, column: 60)
!4024 = !DILocation(line: 1824, column: 39, scope: !4025)
!4025 = distinct !DILexicalBlock(scope: !468, file: !3, line: 1824, column: 9)
!4026 = !DILocation(line: 1824, column: 55, scope: !4025)
!4027 = !DILocation(line: 1824, column: 9, scope: !4025)
!4028 = !DILocation(line: 1824, column: 60, scope: !4025)
!4029 = !DILocation(line: 1824, column: 9, scope: !468)
!4030 = !DILocation(line: 1825, column: 20, scope: !4031)
!4031 = distinct !DILexicalBlock(scope: !4025, file: !3, line: 1824, column: 66)
!4032 = !DILocation(line: 1826, column: 36, scope: !4031)
!4033 = !DILocation(line: 1826, column: 22, scope: !4031)
!4034 = !DILocation(line: 1827, column: 22, scope: !4031)
!4035 = !DILocation(line: 1834, column: 5, scope: !4031)
!4036 = !DILocation(line: 1840, column: 9, scope: !4037)
!4037 = distinct !DILexicalBlock(scope: !468, file: !3, line: 1840, column: 9)
!4038 = !DILocation(line: 1840, column: 18, scope: !4037)
!4039 = !DILocation(line: 1840, column: 9, scope: !468)
!4040 = !DILocation(line: 1841, column: 21, scope: !4041)
!4041 = distinct !DILexicalBlock(scope: !4037, file: !3, line: 1840, column: 24)
!4042 = !DILocation(line: 1842, column: 5, scope: !4041)
!4043 = !DILocation(line: 1902, column: 9, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !468, file: !3, line: 1902, column: 9)
!4045 = !DILocation(line: 1902, column: 15, scope: !4044)
!4046 = !DILocation(line: 1902, column: 20, scope: !4044)
!4047 = !DILocation(line: 1902, column: 23, scope: !4044)
!4048 = !DILocation(line: 1902, column: 32, scope: !4044)
!4049 = !DILocation(line: 1902, column: 9, scope: !468)
!4050 = !DILocation(line: 1903, column: 9, scope: !4051)
!4051 = distinct !DILexicalBlock(scope: !4044, file: !3, line: 1902, column: 38)
!4052 = !DILocation(line: 1904, column: 5, scope: !4051)
!4053 = !DILocation(line: 1910, column: 9, scope: !4054)
!4054 = distinct !DILexicalBlock(scope: !468, file: !3, line: 1910, column: 9)
!4055 = !DILocation(line: 1910, column: 20, scope: !4054)
!4056 = !DILocation(line: 1910, column: 25, scope: !4054)
!4057 = !DILocation(line: 1910, column: 28, scope: !4054)
!4058 = !DILocation(line: 1910, column: 37, scope: !4054)
!4059 = !DILocation(line: 1910, column: 9, scope: !468)
!4060 = !DILocation(line: 1911, column: 13, scope: !4061)
!4061 = distinct !DILexicalBlock(scope: !4062, file: !3, line: 1911, column: 13)
!4062 = distinct !DILexicalBlock(scope: !4054, file: !3, line: 1910, column: 43)
!4063 = !DILocation(line: 1911, column: 23, scope: !4061)
!4064 = !DILocation(line: 1911, column: 26, scope: !4061)
!4065 = !DILocation(line: 1911, column: 13, scope: !4062)
!4066 = !DILocation(line: 1912, column: 13, scope: !4067)
!4067 = distinct !DILexicalBlock(scope: !4061, file: !3, line: 1911, column: 38)
!4068 = !DILocation(line: 1914, column: 18, scope: !4062)
!4069 = !DILocalVariable(name: "rd_len", scope: !4070, file: !3, line: 1921, type: !425)
!4070 = distinct !DILexicalBlock(scope: !4062, file: !3, line: 1920, column: 9)
!4071 = !DILocation(line: 1921, column: 26, scope: !4070)
!4072 = !DILocation(line: 1921, column: 35, scope: !4070)
!4073 = !DILocation(line: 1921, column: 46, scope: !4070)
!4074 = !DILocation(line: 1923, column: 42, scope: !4075)
!4075 = distinct !DILexicalBlock(scope: !4070, file: !3, line: 1923, column: 17)
!4076 = !DILocation(line: 1923, column: 35, scope: !4075)
!4077 = !DILocation(line: 1923, column: 33, scope: !4075)
!4078 = !DILocation(line: 1923, column: 51, scope: !4075)
!4079 = !DILocation(line: 1923, column: 17, scope: !4070)
!4080 = !DILocation(line: 1924, column: 17, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !4075, file: !3, line: 1923, column: 60)
!4082 = !DILocation(line: 1926, column: 22, scope: !4070)
!4083 = !DILocation(line: 1926, column: 38, scope: !4070)
!4084 = !DILocation(line: 1926, column: 13, scope: !4070)
!4085 = !DILocation(line: 1928, column: 15, scope: !4062)
!4086 = !DILocation(line: 1929, column: 15, scope: !4062)
!4087 = !DILocation(line: 1930, column: 13, scope: !4088)
!4088 = distinct !DILexicalBlock(scope: !4062, file: !3, line: 1930, column: 13)
!4089 = !DILocation(line: 1930, column: 13, scope: !4062)
!4090 = !DILocation(line: 1931, column: 13, scope: !4091)
!4091 = distinct !DILexicalBlock(scope: !4088, file: !3, line: 1930, column: 24)
!4092 = !DILocation(line: 1933, column: 9, scope: !4062)
!4093 = !DILocation(line: 1934, column: 5, scope: !4062)
!4094 = !DILocation(line: 1935, column: 9, scope: !4095)
!4095 = distinct !DILexicalBlock(scope: !4054, file: !3, line: 1934, column: 12)
!4096 = !DILocation(line: 1939, column: 5, scope: !468)
!4097 = !DILocation(line: 1945, column: 28, scope: !4098)
!4098 = distinct !DILexicalBlock(scope: !468, file: !3, line: 1945, column: 9)
!4099 = !DILocation(line: 1945, column: 9, scope: !4098)
!4100 = !DILocation(line: 1945, column: 33, scope: !4098)
!4101 = !DILocation(line: 1945, column: 9, scope: !468)
!4102 = !DILocation(line: 1946, column: 9, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !4098, file: !3, line: 1945, column: 39)
!4104 = !DILocation(line: 1952, column: 5, scope: !468)
!4105 = !DILocation(line: 1954, column: 5, scope: !468)
!4106 = !DILocation(line: 1965, column: 14, scope: !468)
!4107 = !DILocation(line: 1966, column: 9, scope: !4108)
!4108 = distinct !DILexicalBlock(scope: !468, file: !3, line: 1966, column: 9)
!4109 = !DILocation(line: 1966, column: 45, scope: !4108)
!4110 = !DILocation(line: 1966, column: 9, scope: !468)
!4111 = !DILocation(line: 1967, column: 15, scope: !4112)
!4112 = distinct !DILexicalBlock(scope: !4108, file: !3, line: 1966, column: 54)
!4113 = !DILocation(line: 1968, column: 15, scope: !4112)
!4114 = !DILocation(line: 1969, column: 5, scope: !4112)
!4115 = !DILocation(line: 1971, column: 5, scope: !468)
!4116 = !DILocation(line: 1979, column: 1, scope: !468)
!4117 = distinct !DISubprogram(name: "pw_check", scope: !3, file: !3, line: 1502, type: !4118, scopeLine: 1505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!4118 = !DISubroutineType(types: !4119)
!4119 = !{!536, !385, !385, !546, !546}
!4120 = !DILocalVariable(name: "account", arg: 1, scope: !4117, file: !3, line: 1502, type: !385)
!4121 = !DILocation(line: 1502, column: 40, scope: !4117)
!4122 = !DILocalVariable(name: "password", arg: 2, scope: !4117, file: !3, line: 1502, type: !385)
!4123 = !DILocation(line: 1502, column: 61, scope: !4117)
!4124 = !DILocalVariable(name: "sa", arg: 3, scope: !4117, file: !3, line: 1503, type: !546)
!4125 = !DILocation(line: 1503, column: 66, scope: !4117)
!4126 = !DILocalVariable(name: "peer", arg: 4, scope: !4117, file: !3, line: 1504, type: !546)
!4127 = !DILocation(line: 1504, column: 66, scope: !4117)
!4128 = !DILocalVariable(name: "auth_scan", scope: !4117, file: !3, line: 1506, type: !514)
!4129 = !DILocation(line: 1506, column: 22, scope: !4117)
!4130 = !DILocation(line: 1506, column: 34, scope: !4117)
!4131 = !DILocalVariable(name: "result", scope: !4117, file: !3, line: 1507, type: !536)
!4132 = !DILocation(line: 1507, column: 16, scope: !4117)
!4133 = !DILocation(line: 1509, column: 12, scope: !4117)
!4134 = !DILocation(line: 1509, column: 20, scope: !4117)
!4135 = !DILocation(line: 1510, column: 5, scope: !4117)
!4136 = !DILocation(line: 1510, column: 12, scope: !4117)
!4137 = !DILocation(line: 1510, column: 22, scope: !4117)
!4138 = !DILocation(line: 1529, column: 16, scope: !4139)
!4139 = distinct !DILexicalBlock(scope: !4117, file: !3, line: 1510, column: 31)
!4140 = !DILocation(line: 1529, column: 29, scope: !4139)
!4141 = !DILocation(line: 1530, column: 9, scope: !4139)
!4142 = !DILocation(line: 1530, column: 20, scope: !4139)
!4143 = !DILocation(line: 1530, column: 26, scope: !4139)
!4144 = !DILocation(line: 1530, column: 41, scope: !4139)
!4145 = !DILocation(line: 1530, column: 50, scope: !4139)
!4146 = !DILocation(line: 1530, column: 60, scope: !4139)
!4147 = !DILocation(line: 1530, column: 64, scope: !4139)
!4148 = !DILocation(line: 1531, column: 20, scope: !4149)
!4149 = distinct !DILexicalBlock(scope: !4139, file: !3, line: 1531, column: 13)
!4150 = !DILocation(line: 1531, column: 28, scope: !4149)
!4151 = !DILocation(line: 1531, column: 13, scope: !4139)
!4152 = !DILocation(line: 1532, column: 13, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !4149, file: !3, line: 1531, column: 33)
!4154 = !DILocation(line: 1533, column: 27, scope: !4155)
!4155 = distinct !DILexicalBlock(scope: !4149, file: !3, line: 1533, column: 20)
!4156 = !DILocation(line: 1533, column: 35, scope: !4155)
!4157 = !DILocation(line: 1533, column: 20, scope: !4149)
!4158 = !DILocation(line: 1576, column: 13, scope: !4159)
!4159 = distinct !DILexicalBlock(scope: !4155, file: !3, line: 1533, column: 40)
!4160 = !DILocation(line: 1578, column: 21, scope: !4139)
!4161 = !DILocation(line: 1578, column: 32, scope: !4139)
!4162 = !DILocation(line: 1578, column: 19, scope: !4139)
!4163 = distinct !{!4163, !4135, !4164}
!4164 = !DILocation(line: 1579, column: 5, scope: !4117)
!4165 = !DILocation(line: 1581, column: 5, scope: !4117)
!4166 = !DILocation(line: 1582, column: 1, scope: !4117)
!4167 = distinct !DISubprogram(name: "randomsleep", scope: !3, file: !3, line: 1688, type: !4168, scopeLine: 1688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!4168 = !DISubroutineType(types: !4169)
!4169 = !{null, !7}
!4170 = !DILocalVariable(name: "t", arg: 1, scope: !4167, file: !3, line: 1688, type: !7)
!4171 = !DILocation(line: 1688, column: 38, scope: !4167)
!4172 = !DILocation(line: 1691, column: 1, scope: !4167)
!4173 = distinct !DISubprogram(name: "create_home_and_chdir", scope: !3, file: !3, line: 1636, type: !4174, scopeLine: 1637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!4174 = !DISubroutineType(types: !4175)
!4175 = !{!326, !529}
!4176 = !DILocalVariable(name: "home", arg: 1, scope: !4173, file: !3, line: 1636, type: !529)
!4177 = !DILocation(line: 1636, column: 53, scope: !4173)
!4178 = !DILocalVariable(name: "pathcomp", scope: !4173, file: !3, line: 1638, type: !308)
!4179 = !DILocation(line: 1638, column: 11, scope: !4173)
!4180 = !DILocalVariable(name: "z", scope: !4173, file: !3, line: 1639, type: !308)
!4181 = !DILocation(line: 1639, column: 11, scope: !4173)
!4182 = !DILocalVariable(name: "len", scope: !4173, file: !3, line: 1640, type: !304)
!4183 = !DILocation(line: 1640, column: 12, scope: !4173)
!4184 = !DILocalVariable(name: "delim", scope: !4173, file: !3, line: 1641, type: !386)
!4185 = !DILocation(line: 1641, column: 16, scope: !4173)
!4186 = !DILocation(line: 1643, column: 9, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !4173, file: !3, line: 1643, column: 9)
!4188 = !DILocation(line: 1643, column: 14, scope: !4187)
!4189 = !DILocation(line: 1643, column: 22, scope: !4187)
!4190 = !DILocation(line: 1643, column: 26, scope: !4187)
!4191 = !DILocation(line: 1643, column: 25, scope: !4187)
!4192 = !DILocation(line: 1643, column: 31, scope: !4187)
!4193 = !DILocation(line: 1643, column: 9, scope: !4173)
!4194 = !DILocation(line: 1644, column: 9, scope: !4195)
!4195 = distinct !DILexicalBlock(scope: !4187, file: !3, line: 1643, column: 39)
!4196 = !DILocation(line: 1646, column: 15, scope: !4197)
!4197 = distinct !DILexicalBlock(scope: !4173, file: !3, line: 1646, column: 9)
!4198 = !DILocation(line: 1646, column: 9, scope: !4197)
!4199 = !DILocation(line: 1646, column: 21, scope: !4197)
!4200 = !DILocation(line: 1646, column: 9, scope: !4173)
!4201 = !DILocation(line: 1647, column: 9, scope: !4202)
!4202 = distinct !DILexicalBlock(scope: !4197, file: !3, line: 1646, column: 27)
!4203 = !DILocation(line: 1649, column: 9, scope: !4204)
!4204 = distinct !DILexicalBlock(scope: !4173, file: !3, line: 1649, column: 9)
!4205 = !DILocation(line: 1649, column: 21, scope: !4204)
!4206 = !DILocation(line: 1649, column: 9, scope: !4173)
!4207 = !DILocation(line: 1650, column: 9, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !4204, file: !3, line: 1649, column: 27)
!4209 = !DILocation(line: 1652, column: 18, scope: !4173)
!4210 = !DILocation(line: 1652, column: 11, scope: !4173)
!4211 = !DILocation(line: 1652, column: 24, scope: !4173)
!4212 = !DILocation(line: 1652, column: 9, scope: !4173)
!4213 = !DILocation(line: 1653, column: 9, scope: !4214)
!4214 = distinct !DILexicalBlock(scope: !4173, file: !3, line: 1653, column: 9)
!4215 = !DILocation(line: 1653, column: 13, scope: !4214)
!4216 = !DILocation(line: 1653, column: 27, scope: !4214)
!4217 = !DILocation(line: 1653, column: 31, scope: !4214)
!4218 = !DILocation(line: 1653, column: 30, scope: !4214)
!4219 = !DILocation(line: 1653, column: 36, scope: !4214)
!4220 = !DILocation(line: 1653, column: 9, scope: !4173)
!4221 = !DILocation(line: 1654, column: 9, scope: !4222)
!4222 = distinct !DILexicalBlock(scope: !4214, file: !3, line: 1653, column: 46)
!4223 = !DILocation(line: 1656, column: 21, scope: !4224)
!4224 = distinct !DILexicalBlock(scope: !4173, file: !3, line: 1656, column: 9)
!4225 = !DILocation(line: 1656, column: 19, scope: !4224)
!4226 = !DILocation(line: 1656, column: 34, scope: !4224)
!4227 = !DILocation(line: 1656, column: 9, scope: !4173)
!4228 = !DILocation(line: 1657, column: 9, scope: !4229)
!4229 = distinct !DILexicalBlock(scope: !4224, file: !3, line: 1656, column: 43)
!4230 = !DILocation(line: 1659, column: 12, scope: !4173)
!4231 = !DILocation(line: 1659, column: 22, scope: !4173)
!4232 = !DILocation(line: 1659, column: 28, scope: !4173)
!4233 = !DILocation(line: 1659, column: 5, scope: !4173)
!4234 = !DILocation(line: 1660, column: 9, scope: !4173)
!4235 = !DILocation(line: 1660, column: 7, scope: !4173)
!4236 = !DILocation(line: 1661, column: 5, scope: !4173)
!4237 = !DILocation(line: 1662, column: 10, scope: !4238)
!4238 = distinct !DILexicalBlock(scope: !4239, file: !3, line: 1661, column: 14)
!4239 = distinct !DILexicalBlock(scope: !4240, file: !3, line: 1661, column: 5)
!4240 = distinct !DILexicalBlock(scope: !4173, file: !3, line: 1661, column: 5)
!4241 = !DILocation(line: 1663, column: 14, scope: !4242)
!4242 = distinct !DILexicalBlock(scope: !4238, file: !3, line: 1663, column: 13)
!4243 = !DILocation(line: 1663, column: 13, scope: !4242)
!4244 = !DILocation(line: 1663, column: 16, scope: !4242)
!4245 = !DILocation(line: 1663, column: 13, scope: !4238)
!4246 = !DILocation(line: 1664, column: 13, scope: !4247)
!4247 = distinct !DILexicalBlock(scope: !4242, file: !3, line: 1663, column: 22)
!4248 = !DILocation(line: 1666, column: 14, scope: !4249)
!4249 = distinct !DILexicalBlock(scope: !4238, file: !3, line: 1666, column: 13)
!4250 = !DILocation(line: 1666, column: 13, scope: !4249)
!4251 = !DILocation(line: 1666, column: 16, scope: !4249)
!4252 = !DILocation(line: 1666, column: 13, scope: !4238)
!4253 = !DILocation(line: 1667, column: 14, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4249, file: !3, line: 1666, column: 26)
!4255 = !DILocation(line: 1667, column: 16, scope: !4254)
!4256 = !DILocation(line: 1668, column: 17, scope: !4257)
!4257 = distinct !DILexicalBlock(scope: !4254, file: !3, line: 1668, column: 17)
!4258 = !DILocation(line: 1668, column: 22, scope: !4257)
!4259 = !DILocation(line: 1668, column: 17, scope: !4254)
!4260 = !DILocation(line: 1669, column: 17, scope: !4261)
!4261 = distinct !DILexicalBlock(scope: !4257, file: !3, line: 1668, column: 28)
!4262 = !DILocation(line: 1671, column: 26, scope: !4254)
!4263 = !DILocation(line: 1671, column: 20, scope: !4254)
!4264 = !DILocation(line: 1672, column: 14, scope: !4254)
!4265 = !DILocation(line: 1672, column: 16, scope: !4254)
!4266 = !DILocation(line: 1673, column: 9, scope: !4254)
!4267 = !DILocation(line: 1661, column: 5, scope: !4239)
!4268 = distinct !{!4268, !4269, !4270}
!4269 = !DILocation(line: 1661, column: 5, scope: !4240)
!4270 = !DILocation(line: 1674, column: 5, scope: !4240)
!4271 = !DILocation(line: 1675, column: 5, scope: !4173)
!4272 = !DILocation(line: 1675, column: 5, scope: !4273)
!4273 = distinct !DILexicalBlock(scope: !4173, file: !3, line: 1675, column: 5)
!4274 = !DILocation(line: 1676, column: 18, scope: !4173)
!4275 = !DILocation(line: 1676, column: 12, scope: !4173)
!4276 = !DILocation(line: 1677, column: 15, scope: !4277)
!4277 = distinct !DILexicalBlock(scope: !4173, file: !3, line: 1677, column: 9)
!4278 = !DILocation(line: 1677, column: 9, scope: !4277)
!4279 = !DILocation(line: 1677, column: 21, scope: !4277)
!4280 = !DILocation(line: 1677, column: 9, scope: !4173)
!4281 = !DILocation(line: 1678, column: 9, scope: !4282)
!4282 = distinct !DILexicalBlock(scope: !4277, file: !3, line: 1677, column: 27)
!4283 = !DILocation(line: 1680, column: 15, scope: !4284)
!4284 = distinct !DILexicalBlock(scope: !4173, file: !3, line: 1680, column: 9)
!4285 = !DILocation(line: 1680, column: 38, scope: !4284)
!4286 = !DILocation(line: 1680, column: 37, scope: !4284)
!4287 = !DILocation(line: 1680, column: 35, scope: !4284)
!4288 = !DILocation(line: 1680, column: 9, scope: !4284)
!4289 = !DILocation(line: 1680, column: 48, scope: !4284)
!4290 = !DILocation(line: 1680, column: 52, scope: !4284)
!4291 = !DILocation(line: 1681, column: 15, scope: !4284)
!4292 = !DILocation(line: 1681, column: 32, scope: !4284)
!4293 = !DILocation(line: 1681, column: 48, scope: !4284)
!4294 = !DILocation(line: 1681, column: 9, scope: !4284)
!4295 = !DILocation(line: 1681, column: 53, scope: !4284)
!4296 = !DILocation(line: 1680, column: 9, scope: !4173)
!4297 = !DILocation(line: 1682, column: 9, scope: !4298)
!4298 = distinct !DILexicalBlock(scope: !4284, file: !3, line: 1681, column: 58)
!4299 = !DILocation(line: 1685, column: 18, scope: !4173)
!4300 = !DILocation(line: 1685, column: 12, scope: !4173)
!4301 = !DILocation(line: 1685, column: 5, scope: !4173)
!4302 = !DILocation(line: 1686, column: 1, scope: !4173)
!4303 = distinct !DISubprogram(name: "check_trustedgroup", scope: !3, file: !3, line: 1589, type: !4304, scopeLine: 1590, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!4304 = !DISubroutineType(types: !4305)
!4305 = !{!326, !3819, !3820}
!4306 = !DILocalVariable(name: "uid", arg: 1, scope: !4303, file: !3, line: 1589, type: !3819)
!4307 = !DILocation(line: 1589, column: 43, scope: !4303)
!4308 = !DILocalVariable(name: "gid", arg: 2, scope: !4303, file: !3, line: 1589, type: !3820)
!4309 = !DILocation(line: 1589, column: 60, scope: !4303)
!4310 = !DILocalVariable(name: "alloca_suppgroups", scope: !4303, file: !3, line: 1591, type: !4311)
!4311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !359, size: 64)
!4312 = !DILocation(line: 1591, column: 18, scope: !4303)
!4313 = !DILocalVariable(name: "n", scope: !4303, file: !3, line: 1592, type: !326)
!4314 = !DILocation(line: 1592, column: 9, scope: !4303)
!4315 = !DILocalVariable(name: "n2", scope: !4303, file: !3, line: 1593, type: !326)
!4316 = !DILocation(line: 1593, column: 9, scope: !4303)
!4317 = !DILocalVariable(name: "result", scope: !4303, file: !3, line: 1594, type: !326)
!4318 = !DILocation(line: 1594, column: 9, scope: !4303)
!4319 = !DILocation(line: 1596, column: 9, scope: !4320)
!4320 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 1596, column: 9)
!4321 = !DILocation(line: 1596, column: 13, scope: !4320)
!4322 = !DILocation(line: 1596, column: 9, scope: !4303)
!4323 = !DILocation(line: 1597, column: 9, scope: !4324)
!4324 = distinct !DILexicalBlock(scope: !4320, file: !3, line: 1596, column: 27)
!4325 = !DILocation(line: 1599, column: 9, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 1599, column: 9)
!4327 = !DILocation(line: 1599, column: 20, scope: !4326)
!4328 = !DILocation(line: 1599, column: 9, scope: !4303)
!4329 = !DILocation(line: 1600, column: 9, scope: !4330)
!4330 = distinct !DILexicalBlock(scope: !4326, file: !3, line: 1599, column: 26)
!4331 = !DILocation(line: 1602, column: 9, scope: !4332)
!4332 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 1602, column: 9)
!4333 = !DILocation(line: 1602, column: 16, scope: !4332)
!4334 = !DILocation(line: 1602, column: 13, scope: !4332)
!4335 = !DILocation(line: 1602, column: 9, scope: !4303)
!4336 = !DILocation(line: 1603, column: 9, scope: !4337)
!4337 = distinct !DILexicalBlock(scope: !4332, file: !3, line: 1602, column: 35)
!4338 = !DILocation(line: 1606, column: 14, scope: !4339)
!4339 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 1606, column: 9)
!4340 = !DILocation(line: 1606, column: 12, scope: !4339)
!4341 = !DILocation(line: 1606, column: 34, scope: !4339)
!4342 = !DILocation(line: 1606, column: 9, scope: !4303)
!4343 = !DILocation(line: 1607, column: 9, scope: !4344)
!4344 = distinct !DILexicalBlock(scope: !4339, file: !3, line: 1606, column: 40)
!4345 = !DILocation(line: 1610, column: 10, scope: !4346)
!4346 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 1609, column: 9)
!4347 = !DILocation(line: 1609, column: 28, scope: !4346)
!4348 = !DILocation(line: 1610, column: 51, scope: !4346)
!4349 = !DILocation(line: 1609, column: 9, scope: !4303)
!4350 = !DILocation(line: 1611, column: 9, scope: !4351)
!4351 = distinct !DILexicalBlock(scope: !4346, file: !3, line: 1610, column: 60)
!4352 = !DILocation(line: 1613, column: 20, scope: !4303)
!4353 = !DILocation(line: 1613, column: 23, scope: !4303)
!4354 = !DILocation(line: 1613, column: 10, scope: !4303)
!4355 = !DILocation(line: 1613, column: 8, scope: !4303)
!4356 = !DILocation(line: 1615, column: 9, scope: !4357)
!4357 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 1615, column: 9)
!4358 = !DILocation(line: 1615, column: 14, scope: !4357)
!4359 = !DILocation(line: 1615, column: 12, scope: !4357)
!4360 = !DILocation(line: 1615, column: 9, scope: !4303)
!4361 = !DILocation(line: 1616, column: 13, scope: !4362)
!4362 = distinct !DILexicalBlock(scope: !4357, file: !3, line: 1615, column: 17)
!4363 = !DILocation(line: 1616, column: 11, scope: !4362)
!4364 = !DILocation(line: 1617, column: 5, scope: !4362)
!4365 = !DILocation(line: 1618, column: 12, scope: !4303)
!4366 = !DILocation(line: 1619, column: 5, scope: !4303)
!4367 = !DILocation(line: 1619, column: 12, scope: !4303)
!4368 = !DILocation(line: 1619, column: 14, scope: !4303)
!4369 = !DILocation(line: 1620, column: 10, scope: !4370)
!4370 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 1619, column: 20)
!4371 = !DILocation(line: 1621, column: 13, scope: !4372)
!4372 = distinct !DILexicalBlock(scope: !4370, file: !3, line: 1621, column: 13)
!4373 = !DILocation(line: 1621, column: 31, scope: !4372)
!4374 = !DILocation(line: 1621, column: 51, scope: !4372)
!4375 = !DILocation(line: 1621, column: 34, scope: !4372)
!4376 = !DILocation(line: 1621, column: 13, scope: !4370)
!4377 = !DILocation(line: 1622, column: 20, scope: !4378)
!4378 = distinct !DILexicalBlock(scope: !4372, file: !3, line: 1621, column: 70)
!4379 = !DILocation(line: 1623, column: 13, scope: !4378)
!4380 = distinct !{!4380, !4366, !4381}
!4381 = !DILocation(line: 1625, column: 5, scope: !4303)
!4382 = !DILocation(line: 1626, column: 5, scope: !4303)
!4383 = !DILocation(line: 1626, column: 5, scope: !4384)
!4384 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 1626, column: 5)
!4385 = !DILocation(line: 1629, column: 12, scope: !4303)
!4386 = !DILocation(line: 1629, column: 5, scope: !4303)
!4387 = !DILocation(line: 1630, column: 1, scope: !4303)
!4388 = distinct !DISubprogram(name: "docwd", scope: !3, file: !3, line: 1981, type: !3536, scopeLine: 1982, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!4389 = !DILocalVariable(name: "dir", arg: 1, scope: !4388, file: !3, line: 1981, type: !385)
!4390 = !DILocation(line: 1981, column: 24, scope: !4388)
!4391 = !DILocalVariable(name: "where", scope: !4388, file: !3, line: 1983, type: !385)
!4392 = !DILocation(line: 1983, column: 17, scope: !4388)
!4393 = !DILocalVariable(name: "buffer", scope: !4388, file: !3, line: 1984, type: !3306)
!4394 = !DILocation(line: 1984, column: 10, scope: !4388)
!4395 = !DILocation(line: 1986, column: 9, scope: !4396)
!4396 = distinct !DILexicalBlock(scope: !4388, file: !3, line: 1986, column: 9)
!4397 = !DILocation(line: 1986, column: 18, scope: !4396)
!4398 = !DILocation(line: 1986, column: 9, scope: !4388)
!4399 = !DILocation(line: 1987, column: 9, scope: !4400)
!4400 = distinct !DILexicalBlock(scope: !4396, file: !3, line: 1986, column: 24)
!4401 = !DILocation(line: 1994, column: 13, scope: !4388)
!4402 = !DILocation(line: 1994, column: 11, scope: !4388)
!4403 = !DILocation(line: 1995, column: 9, scope: !4404)
!4404 = distinct !DILexicalBlock(scope: !4388, file: !3, line: 1995, column: 9)
!4405 = !DILocation(line: 1995, column: 13, scope: !4404)
!4406 = !DILocation(line: 1995, column: 21, scope: !4404)
!4407 = !DILocation(line: 1995, column: 25, scope: !4404)
!4408 = !DILocation(line: 1995, column: 24, scope: !4404)
!4409 = !DILocation(line: 1995, column: 29, scope: !4404)
!4410 = !DILocation(line: 1995, column: 9, scope: !4388)
!4411 = !DILocation(line: 1996, column: 13, scope: !4412)
!4412 = distinct !DILexicalBlock(scope: !4404, file: !3, line: 1995, column: 35)
!4413 = !DILocation(line: 1997, column: 5, scope: !4412)
!4414 = !DILocation(line: 1998, column: 10, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4388, file: !3, line: 1998, column: 9)
!4416 = !DILocation(line: 1998, column: 9, scope: !4415)
!4417 = !DILocation(line: 1998, column: 14, scope: !4415)
!4418 = !DILocation(line: 1998, column: 9, scope: !4388)
!4419 = !DILocalVariable(name: "pw", scope: !4420, file: !3, line: 1999, type: !3840)
!4420 = distinct !DILexicalBlock(scope: !4415, file: !3, line: 1998, column: 22)
!4421 = !DILocation(line: 1999, column: 30, scope: !4420)
!4422 = !DILocation(line: 2001, column: 13, scope: !4423)
!4423 = distinct !DILexicalBlock(scope: !4420, file: !3, line: 2001, column: 13)
!4424 = !DILocation(line: 2001, column: 20, scope: !4423)
!4425 = !DILocation(line: 2001, column: 13, scope: !4420)
!4426 = !DILocation(line: 2002, column: 21, scope: !4427)
!4427 = distinct !DILexicalBlock(scope: !4423, file: !3, line: 2001, column: 26)
!4428 = !DILocation(line: 2002, column: 29, scope: !4427)
!4429 = !DILocation(line: 2002, column: 38, scope: !4427)
!4430 = !DILocation(line: 2002, column: 62, scope: !4427)
!4431 = !DILocation(line: 2002, column: 13, scope: !4427)
!4432 = !DILocation(line: 2004, column: 13, scope: !4427)
!4433 = !DILocation(line: 2004, column: 49, scope: !4427)
!4434 = !DILocation(line: 2005, column: 21, scope: !4427)
!4435 = !DILocation(line: 2005, column: 19, scope: !4427)
!4436 = !DILocation(line: 2006, column: 9, scope: !4427)
!4437 = !DILocalVariable(name: "bufpnt", scope: !4438, file: !3, line: 2007, type: !308)
!4438 = distinct !DILexicalBlock(scope: !4423, file: !3, line: 2006, column: 16)
!4439 = !DILocation(line: 2007, column: 19, scope: !4438)
!4440 = !DILocation(line: 2007, column: 28, scope: !4438)
!4441 = !DILocalVariable(name: "s", scope: !4438, file: !3, line: 2008, type: !304)
!4442 = !DILocation(line: 2008, column: 20, scope: !4438)
!4443 = !DILocalVariable(name: "dirscan", scope: !4438, file: !3, line: 2009, type: !385)
!4444 = !DILocation(line: 2009, column: 25, scope: !4438)
!4445 = !DILocation(line: 2009, column: 35, scope: !4438)
!4446 = !DILocation(line: 2009, column: 39, scope: !4438)
!4447 = !DILocation(line: 2011, column: 13, scope: !4438)
!4448 = !DILocation(line: 2011, column: 21, scope: !4438)
!4449 = !DILocation(line: 2011, column: 20, scope: !4438)
!4450 = !DILocation(line: 2011, column: 29, scope: !4438)
!4451 = !DILocation(line: 2011, column: 34, scope: !4438)
!4452 = !DILocation(line: 2011, column: 38, scope: !4438)
!4453 = !DILocation(line: 2011, column: 37, scope: !4438)
!4454 = !DILocation(line: 2011, column: 46, scope: !4438)
!4455 = !DILocation(line: 0, scope: !4438)
!4456 = !DILocation(line: 2012, column: 21, scope: !4457)
!4457 = distinct !DILexicalBlock(scope: !4458, file: !3, line: 2012, column: 21)
!4458 = distinct !DILexicalBlock(scope: !4438, file: !3, line: 2011, column: 54)
!4459 = !DILocation(line: 2012, column: 25, scope: !4457)
!4460 = !DILocation(line: 2012, column: 21, scope: !4458)
!4461 = !DILocation(line: 2013, column: 21, scope: !4462)
!4462 = distinct !DILexicalBlock(scope: !4457, file: !3, line: 2012, column: 31)
!4463 = !DILocation(line: 2015, column: 37, scope: !4458)
!4464 = !DILocation(line: 2015, column: 29, scope: !4458)
!4465 = !DILocation(line: 2015, column: 24, scope: !4458)
!4466 = !DILocation(line: 2015, column: 27, scope: !4458)
!4467 = distinct !{!4467, !4447, !4468}
!4468 = !DILocation(line: 2016, column: 13, scope: !4438)
!4469 = !DILocation(line: 2017, column: 14, scope: !4438)
!4470 = !DILocation(line: 2017, column: 21, scope: !4438)
!4471 = !DILocation(line: 2018, column: 17, scope: !4472)
!4472 = distinct !DILexicalBlock(scope: !4438, file: !3, line: 2018, column: 17)
!4473 = !DILocation(line: 2018, column: 25, scope: !4472)
!4474 = !DILocation(line: 2018, column: 17, scope: !4438)
!4475 = !DILocation(line: 2019, column: 26, scope: !4476)
!4476 = distinct !DILexicalBlock(scope: !4472, file: !3, line: 2018, column: 31)
!4477 = !DILocation(line: 2020, column: 26, scope: !4476)
!4478 = !DILocation(line: 2020, column: 35, scope: !4476)
!4479 = !DILocation(line: 2020, column: 59, scope: !4476)
!4480 = !DILocation(line: 2020, column: 64, scope: !4476)
!4481 = !DILocation(line: 2019, column: 17, scope: !4476)
!4482 = !DILocation(line: 2021, column: 25, scope: !4476)
!4483 = !DILocation(line: 2021, column: 23, scope: !4476)
!4484 = !DILocation(line: 2022, column: 13, scope: !4476)
!4485 = !DILocation(line: 2022, column: 35, scope: !4486)
!4486 = distinct !DILexicalBlock(scope: !4472, file: !3, line: 2022, column: 24)
!4487 = !DILocation(line: 2022, column: 56, scope: !4486)
!4488 = !DILocation(line: 2022, column: 24, scope: !4472)
!4489 = !DILocation(line: 2023, column: 21, scope: !4490)
!4490 = distinct !DILexicalBlock(scope: !4491, file: !3, line: 2023, column: 21)
!4491 = distinct !DILexicalBlock(scope: !4486, file: !3, line: 2022, column: 62)
!4492 = !DILocation(line: 2023, column: 30, scope: !4490)
!4493 = !DILocation(line: 2023, column: 35, scope: !4490)
!4494 = !DILocation(line: 2023, column: 38, scope: !4490)
!4495 = !DILocation(line: 2023, column: 44, scope: !4490)
!4496 = !DILocation(line: 2023, column: 49, scope: !4490)
!4497 = !DILocation(line: 2024, column: 36, scope: !4490)
!4498 = !DILocation(line: 2024, column: 27, scope: !4490)
!4499 = !DILocation(line: 2024, column: 25, scope: !4490)
!4500 = !DILocation(line: 2024, column: 45, scope: !4490)
!4501 = !DILocation(line: 2024, column: 53, scope: !4490)
!4502 = !DILocation(line: 2024, column: 56, scope: !4490)
!4503 = !DILocation(line: 2024, column: 60, scope: !4490)
!4504 = !DILocation(line: 2024, column: 67, scope: !4490)
!4505 = !DILocation(line: 2023, column: 21, scope: !4491)
!4506 = !DILocation(line: 2026, column: 17, scope: !4507)
!4507 = distinct !DILexicalBlock(scope: !4490, file: !3, line: 2024, column: 76)
!4508 = !DILocation(line: 2027, column: 30, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4490, file: !3, line: 2026, column: 24)
!4510 = !DILocation(line: 2027, column: 61, scope: !4509)
!4511 = !DILocation(line: 2027, column: 65, scope: !4509)
!4512 = !DILocation(line: 2027, column: 73, scope: !4509)
!4513 = !DILocation(line: 2027, column: 21, scope: !4509)
!4514 = !DILocation(line: 2028, column: 29, scope: !4509)
!4515 = !DILocation(line: 2028, column: 27, scope: !4509)
!4516 = !DILocation(line: 2030, column: 13, scope: !4491)
!4517 = !DILocation(line: 2032, column: 5, scope: !4420)
!4518 = !DILocation(line: 2033, column: 25, scope: !4519)
!4519 = distinct !DILexicalBlock(scope: !4388, file: !3, line: 2033, column: 9)
!4520 = !DILocation(line: 2033, column: 32, scope: !4519)
!4521 = !DILocation(line: 2033, column: 9, scope: !4519)
!4522 = !DILocation(line: 2033, column: 45, scope: !4519)
!4523 = !DILocation(line: 2033, column: 9, scope: !4388)
!4524 = !DILocation(line: 2034, column: 48, scope: !4525)
!4525 = distinct !DILexicalBlock(scope: !4519, file: !3, line: 2033, column: 51)
!4526 = !DILocation(line: 2034, column: 9, scope: !4525)
!4527 = !DILocation(line: 2035, column: 9, scope: !4525)
!4528 = !DILocation(line: 2037, column: 15, scope: !4529)
!4529 = distinct !DILexicalBlock(scope: !4388, file: !3, line: 2037, column: 9)
!4530 = !DILocation(line: 2037, column: 9, scope: !4529)
!4531 = !DILocation(line: 2037, column: 22, scope: !4529)
!4532 = !DILocation(line: 2037, column: 9, scope: !4388)
!4533 = !DILocalVariable(name: "real_errno", scope: !4534, file: !3, line: 2040, type: !731)
!4534 = distinct !DILexicalBlock(scope: !4529, file: !3, line: 2037, column: 28)
!4535 = !DILocation(line: 2040, column: 19, scope: !4534)
!4536 = !DILocation(line: 2040, column: 32, scope: !4534)
!4537 = !DILocalVariable(name: "where_alias", scope: !4534, file: !3, line: 2041, type: !385)
!4538 = !DILocation(line: 2041, column: 21, scope: !4534)
!4539 = !DILocation(line: 2043, column: 41, scope: !4540)
!4540 = distinct !DILexicalBlock(scope: !4534, file: !3, line: 2043, column: 13)
!4541 = !DILocation(line: 2043, column: 28, scope: !4540)
!4542 = !DILocation(line: 2043, column: 26, scope: !4540)
!4543 = !DILocation(line: 2043, column: 49, scope: !4540)
!4544 = !DILocation(line: 2043, column: 57, scope: !4540)
!4545 = !DILocation(line: 2044, column: 19, scope: !4540)
!4546 = !DILocation(line: 2044, column: 13, scope: !4540)
!4547 = !DILocation(line: 2044, column: 32, scope: !4540)
!4548 = !DILocation(line: 2043, column: 13, scope: !4534)
!4549 = !DILocation(line: 2045, column: 21, scope: !4550)
!4550 = distinct !DILexicalBlock(scope: !4540, file: !3, line: 2044, column: 38)
!4551 = !DILocation(line: 2045, column: 13, scope: !4550)
!4552 = !DILocation(line: 2045, column: 19, scope: !4550)
!4553 = !DILocation(line: 2046, column: 9, scope: !4550)
!4554 = !DILocation(line: 2047, column: 13, scope: !4555)
!4555 = distinct !DILexicalBlock(scope: !4540, file: !3, line: 2046, column: 16)
!4556 = !DILocation(line: 2051, column: 13, scope: !4557)
!4557 = distinct !DILexicalBlock(scope: !4534, file: !3, line: 2051, column: 13)
!4558 = !DILocation(line: 2051, column: 13, scope: !4534)
!4559 = !DILocation(line: 2054, column: 13, scope: !4560)
!4560 = distinct !DILexicalBlock(scope: !4557, file: !3, line: 2053, column: 69)
!4561 = !DILocation(line: 2056, column: 33, scope: !4534)
!4562 = !DILocation(line: 2056, column: 9, scope: !4534)
!4563 = !DILocation(line: 2057, column: 29, scope: !4534)
!4564 = !DILocation(line: 2057, column: 9, scope: !4534)
!4565 = !DILocation(line: 2061, column: 13, scope: !4566)
!4566 = distinct !DILexicalBlock(scope: !4534, file: !3, line: 2061, column: 13)
!4567 = !DILocation(line: 2061, column: 26, scope: !4566)
!4568 = !DILocation(line: 2061, column: 13, scope: !4534)
!4569 = !DILocation(line: 2062, column: 13, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4566, file: !3, line: 2061, column: 48)
!4571 = !DILocation(line: 2065, column: 21, scope: !4534)
!4572 = !DILocation(line: 2069, column: 9, scope: !4534)
!4573 = !DILocation(line: 2037, column: 25, scope: !4529)
!4574 = !DILabel(scope: !4388, name: "chdir_success", file: !3, line: 2073)
!4575 = !DILocation(line: 2073, column: 5, scope: !4388)
!4576 = !DILocation(line: 2077, column: 18, scope: !4388)
!4577 = !DILocation(line: 2078, column: 5, scope: !4388)
!4578 = !DILocation(line: 2080, column: 9, scope: !4579)
!4579 = distinct !DILexicalBlock(scope: !4388, file: !3, line: 2080, column: 9)
!4580 = !DILocation(line: 2080, column: 45, scope: !4579)
!4581 = !DILocation(line: 2080, column: 9, scope: !4388)
!4582 = !DILocation(line: 2081, column: 14, scope: !4583)
!4583 = distinct !DILexicalBlock(scope: !4584, file: !3, line: 2081, column: 13)
!4584 = distinct !DILexicalBlock(scope: !4579, file: !3, line: 2080, column: 54)
!4585 = !DILocation(line: 2081, column: 13, scope: !4583)
!4586 = !DILocation(line: 2081, column: 18, scope: !4583)
!4587 = !DILocation(line: 2081, column: 13, scope: !4584)
!4588 = !DILocation(line: 2082, column: 17, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 2082, column: 17)
!4590 = distinct !DILexicalBlock(scope: !4583, file: !3, line: 2081, column: 26)
!4591 = !DILocation(line: 2082, column: 17, scope: !4590)
!4592 = !DILocation(line: 2083, column: 17, scope: !4593)
!4593 = distinct !DILexicalBlock(scope: !4589, file: !3, line: 2082, column: 73)
!4594 = !DILocation(line: 2085, column: 9, scope: !4590)
!4595 = !DILocalVariable(name: "dir_len", scope: !4596, file: !3, line: 2086, type: !425)
!4596 = distinct !DILexicalBlock(scope: !4583, file: !3, line: 2085, column: 16)
!4597 = !DILocation(line: 2086, column: 26, scope: !4596)
!4598 = !DILocation(line: 2086, column: 43, scope: !4596)
!4599 = !DILocation(line: 2086, column: 36, scope: !4596)
!4600 = !DILocalVariable(name: "wd_len", scope: !4596, file: !3, line: 2087, type: !425)
!4601 = !DILocation(line: 2087, column: 26, scope: !4596)
!4602 = !DILocation(line: 2087, column: 35, scope: !4596)
!4603 = !DILocation(line: 2088, column: 29, scope: !4604)
!4604 = distinct !DILexicalBlock(scope: !4596, file: !3, line: 2088, column: 17)
!4605 = !DILocation(line: 2088, column: 37, scope: !4604)
!4606 = !DILocation(line: 2088, column: 50, scope: !4604)
!4607 = !DILocation(line: 2088, column: 57, scope: !4604)
!4608 = !DILocation(line: 2088, column: 55, scope: !4604)
!4609 = !DILocation(line: 2088, column: 64, scope: !4604)
!4610 = !DILocation(line: 2088, column: 27, scope: !4604)
!4611 = !DILocation(line: 2088, column: 17, scope: !4596)
!4612 = !DILocation(line: 2088, column: 70, scope: !4604)
!4613 = !DILabel(scope: !4614, name: "kaboom", file: !3, line: 2089)
!4614 = distinct !DILexicalBlock(scope: !4604, file: !3, line: 2088, column: 70)
!4615 = !DILocation(line: 2089, column: 17, scope: !4614)
!4616 = !DILocation(line: 2090, column: 17, scope: !4614)
!4617 = !DILocation(line: 2092, column: 20, scope: !4596)
!4618 = !DILocation(line: 2092, column: 37, scope: !4596)
!4619 = !DILocation(line: 2092, column: 13, scope: !4596)
!4620 = !DILocation(line: 2094, column: 5, scope: !4584)
!4621 = !DILocation(line: 2095, column: 5, scope: !4388)
!4622 = !DILocation(line: 2096, column: 1, scope: !4388)
!4623 = distinct !DISubprogram(name: "checknamesanity", scope: !3, file: !3, line: 788, type: !4624, scopeLine: 789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!4624 = !DISubroutineType(types: !4625)
!4625 = !{!326, !385, !326}
!4626 = !DILocalVariable(name: "name", arg: 1, scope: !4623, file: !3, line: 788, type: !385)
!4627 = !DILocation(line: 788, column: 40, scope: !4623)
!4628 = !DILocalVariable(name: "dot_ok", arg: 2, scope: !4623, file: !3, line: 788, type: !326)
!4629 = !DILocation(line: 788, column: 50, scope: !4623)
!4630 = !DILocalVariable(name: "namepnt", scope: !4623, file: !3, line: 790, type: !385)
!4631 = !DILocation(line: 790, column: 17, scope: !4623)
!4632 = !DILocation(line: 799, column: 9, scope: !4633)
!4633 = distinct !DILexicalBlock(scope: !4623, file: !3, line: 799, column: 9)
!4634 = !DILocation(line: 799, column: 14, scope: !4633)
!4635 = !DILocation(line: 799, column: 22, scope: !4633)
!4636 = !DILocation(line: 799, column: 26, scope: !4633)
!4637 = !DILocation(line: 799, column: 25, scope: !4633)
!4638 = !DILocation(line: 799, column: 31, scope: !4633)
!4639 = !DILocation(line: 799, column: 9, scope: !4623)
!4640 = !DILocation(line: 800, column: 9, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4633, file: !3, line: 799, column: 37)
!4642 = !DILocation(line: 803, column: 9, scope: !4643)
!4643 = distinct !DILexicalBlock(scope: !4623, file: !3, line: 803, column: 9)
!4644 = !DILocation(line: 803, column: 17, scope: !4643)
!4645 = !DILocation(line: 803, column: 24, scope: !4643)
!4646 = !DILocation(line: 803, column: 28, scope: !4643)
!4647 = !DILocation(line: 803, column: 36, scope: !4643)
!4648 = !DILocation(line: 803, column: 41, scope: !4643)
!4649 = !DILocation(line: 803, column: 45, scope: !4643)
!4650 = !DILocation(line: 803, column: 53, scope: !4643)
!4651 = !DILocation(line: 803, column: 60, scope: !4643)
!4652 = !DILocation(line: 803, column: 63, scope: !4643)
!4653 = !DILocation(line: 803, column: 71, scope: !4643)
!4654 = !DILocation(line: 803, column: 9, scope: !4623)
!4655 = !DILocation(line: 804, column: 9, scope: !4656)
!4656 = distinct !DILexicalBlock(scope: !4643, file: !3, line: 803, column: 79)
!4657 = !DILocation(line: 806, column: 15, scope: !4623)
!4658 = !DILocation(line: 806, column: 13, scope: !4623)
!4659 = !DILocation(line: 825, column: 5, scope: !4623)
!4660 = !DILocation(line: 825, column: 13, scope: !4623)
!4661 = !DILocation(line: 825, column: 12, scope: !4623)
!4662 = !DILocation(line: 825, column: 21, scope: !4623)
!4663 = !DILocation(line: 827, column: 13, scope: !4664)
!4664 = distinct !DILexicalBlock(scope: !4665, file: !3, line: 827, column: 13)
!4665 = distinct !DILexicalBlock(scope: !4623, file: !3, line: 825, column: 27)
!4666 = !DILocation(line: 827, column: 34, scope: !4664)
!4667 = !DILocation(line: 827, column: 38, scope: !4664)
!4668 = !DILocation(line: 827, column: 37, scope: !4664)
!4669 = !DILocation(line: 827, column: 46, scope: !4664)
!4670 = !DILocation(line: 827, column: 13, scope: !4665)
!4671 = !DILocation(line: 828, column: 13, scope: !4672)
!4672 = distinct !DILexicalBlock(scope: !4664, file: !3, line: 827, column: 55)
!4673 = !DILocation(line: 831, column: 13, scope: !4674)
!4674 = distinct !DILexicalBlock(scope: !4665, file: !3, line: 831, column: 13)
!4675 = !DILocation(line: 831, column: 20, scope: !4674)
!4676 = !DILocation(line: 831, column: 13, scope: !4665)
!4677 = !DILocation(line: 832, column: 18, scope: !4678)
!4678 = distinct !DILexicalBlock(scope: !4679, file: !3, line: 832, column: 17)
!4679 = distinct !DILexicalBlock(scope: !4674, file: !3, line: 831, column: 26)
!4680 = !DILocation(line: 832, column: 17, scope: !4678)
!4681 = !DILocation(line: 832, column: 26, scope: !4678)
!4682 = !DILocation(line: 832, column: 17, scope: !4679)
!4683 = !DILocation(line: 833, column: 24, scope: !4684)
!4684 = distinct !DILexicalBlock(scope: !4678, file: !3, line: 832, column: 34)
!4685 = !DILocation(line: 834, column: 13, scope: !4684)
!4686 = !DILocation(line: 834, column: 24, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4678, file: !3, line: 834, column: 24)
!4688 = !DILocation(line: 834, column: 35, scope: !4687)
!4689 = !DILocation(line: 834, column: 32, scope: !4687)
!4690 = !DILocation(line: 834, column: 24, scope: !4678)
!4691 = !DILocation(line: 835, column: 24, scope: !4692)
!4692 = distinct !DILexicalBlock(scope: !4687, file: !3, line: 834, column: 41)
!4693 = !DILocation(line: 836, column: 17, scope: !4692)
!4694 = distinct !{!4694, !4659, !4695}
!4695 = !DILocation(line: 861, column: 5, scope: !4623)
!4696 = !DILocation(line: 838, column: 17, scope: !4697)
!4697 = distinct !DILexicalBlock(scope: !4679, file: !3, line: 838, column: 17)
!4698 = !DILocation(line: 838, column: 28, scope: !4697)
!4699 = !DILocation(line: 838, column: 17, scope: !4679)
!4700 = !DILocation(line: 839, column: 17, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !4697, file: !3, line: 838, column: 34)
!4702 = !DILocation(line: 841, column: 17, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4679, file: !3, line: 841, column: 17)
!4704 = !DILocation(line: 841, column: 28, scope: !4703)
!4705 = !DILocation(line: 841, column: 17, scope: !4679)
!4706 = !DILocation(line: 842, column: 21, scope: !4707)
!4707 = distinct !DILexicalBlock(scope: !4708, file: !3, line: 842, column: 21)
!4708 = distinct !DILexicalBlock(scope: !4703, file: !3, line: 841, column: 36)
!4709 = !DILocation(line: 842, column: 32, scope: !4707)
!4710 = !DILocation(line: 842, column: 21, scope: !4708)
!4711 = !DILocation(line: 843, column: 21, scope: !4712)
!4712 = distinct !DILexicalBlock(scope: !4707, file: !3, line: 842, column: 38)
!4713 = !DILocation(line: 845, column: 21, scope: !4714)
!4714 = distinct !DILexicalBlock(scope: !4708, file: !3, line: 845, column: 21)
!4715 = !DILocation(line: 845, column: 32, scope: !4714)
!4716 = !DILocation(line: 845, column: 21, scope: !4708)
!4717 = !DILocation(line: 846, column: 25, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !4719, file: !3, line: 846, column: 25)
!4719 = distinct !DILexicalBlock(scope: !4714, file: !3, line: 845, column: 40)
!4720 = !DILocation(line: 846, column: 36, scope: !4718)
!4721 = !DILocation(line: 846, column: 25, scope: !4719)
!4722 = !DILocation(line: 847, column: 25, scope: !4723)
!4723 = distinct !DILexicalBlock(scope: !4718, file: !3, line: 846, column: 42)
!4724 = !DILocation(line: 849, column: 25, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !4719, file: !3, line: 849, column: 25)
!4726 = !DILocation(line: 849, column: 36, scope: !4725)
!4727 = !DILocation(line: 849, column: 25, scope: !4719)
!4728 = !DILocation(line: 850, column: 25, scope: !4729)
!4729 = distinct !DILexicalBlock(scope: !4725, file: !3, line: 849, column: 44)
!4730 = !DILocation(line: 852, column: 17, scope: !4719)
!4731 = !DILocation(line: 852, column: 28, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4714, file: !3, line: 852, column: 28)
!4733 = !DILocation(line: 852, column: 39, scope: !4732)
!4734 = !DILocation(line: 852, column: 28, scope: !4714)
!4735 = !DILocation(line: 853, column: 21, scope: !4736)
!4736 = distinct !DILexicalBlock(scope: !4732, file: !3, line: 852, column: 47)
!4737 = !DILocation(line: 855, column: 13, scope: !4708)
!4738 = !DILocation(line: 856, column: 17, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4679, file: !3, line: 856, column: 17)
!4740 = !DILocation(line: 856, column: 28, scope: !4739)
!4741 = !DILocation(line: 856, column: 25, scope: !4739)
!4742 = !DILocation(line: 856, column: 17, scope: !4679)
!4743 = !DILocation(line: 857, column: 17, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4739, file: !3, line: 856, column: 34)
!4745 = !DILocation(line: 859, column: 9, scope: !4679)
!4746 = !DILocation(line: 860, column: 16, scope: !4665)
!4747 = !DILocation(line: 862, column: 5, scope: !4623)
!4748 = !DILocation(line: 863, column: 1, scope: !4623)
!4749 = distinct !DISubprogram(name: "zrand", scope: !3, file: !3, line: 2098, type: !4750, scopeLine: 2099, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!4750 = !DISubroutineType(types: !4751)
!4751 = !{!7}
!4752 = !DILocation(line: 2100, column: 27, scope: !4749)
!4753 = !DILocation(line: 2100, column: 5, scope: !4749)
!4754 = distinct !DISubprogram(name: "dopasv", scope: !3, file: !3, line: 2116, type: !390, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!4755 = !DILocalVariable(name: "psvtype", arg: 1, scope: !4754, file: !3, line: 2116, type: !326)
!4756 = !DILocation(line: 2116, column: 17, scope: !4754)
!4757 = !DILocalVariable(name: "dataconn", scope: !4754, file: !3, line: 2118, type: !549)
!4758 = !DILocation(line: 2118, column: 29, scope: !4754)
!4759 = !DILocalVariable(name: "a", scope: !4754, file: !3, line: 2119, type: !306)
!4760 = !DILocation(line: 2119, column: 19, scope: !4754)
!4761 = !DILocalVariable(name: "p", scope: !4754, file: !3, line: 2120, type: !7)
!4762 = !DILocation(line: 2120, column: 18, scope: !4754)
!4763 = !DILocalVariable(name: "on", scope: !4754, file: !3, line: 2121, type: !326)
!4764 = !DILocation(line: 2121, column: 9, scope: !4754)
!4765 = !DILocalVariable(name: "firstporttried", scope: !4754, file: !3, line: 2122, type: !7)
!4766 = !DILocation(line: 2122, column: 18, scope: !4754)
!4767 = !DILocation(line: 2124, column: 9, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4754, file: !3, line: 2124, column: 9)
!4769 = !DILocation(line: 2124, column: 18, scope: !4768)
!4770 = !DILocation(line: 2124, column: 9, scope: !4754)
!4771 = !DILocation(line: 2125, column: 9, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !4768, file: !3, line: 2124, column: 24)
!4773 = !DILocation(line: 2126, column: 9, scope: !4772)
!4774 = !DILocation(line: 2128, column: 9, scope: !4775)
!4775 = distinct !DILexicalBlock(scope: !4754, file: !3, line: 2128, column: 9)
!4776 = !DILocation(line: 2128, column: 16, scope: !4775)
!4777 = !DILocation(line: 2128, column: 9, scope: !4754)
!4778 = !DILocation(line: 2129, column: 22, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4775, file: !3, line: 2128, column: 23)
!4780 = !DILocation(line: 2129, column: 16, scope: !4779)
!4781 = !DILocation(line: 2130, column: 16, scope: !4779)
!4782 = !DILocation(line: 2131, column: 5, scope: !4779)
!4783 = !DILocation(line: 2132, column: 5, scope: !4754)
!4784 = !DILocation(line: 2133, column: 9, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4754, file: !3, line: 2133, column: 9)
!4786 = !DILocation(line: 2133, column: 34, scope: !4785)
!4787 = !DILocation(line: 2133, column: 46, scope: !4785)
!4788 = !DILocation(line: 2133, column: 49, scope: !4785)
!4789 = !DILocation(line: 2133, column: 57, scope: !4785)
!4790 = !DILocation(line: 2133, column: 9, scope: !4754)
!4791 = !DILocation(line: 2134, column: 9, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !4785, file: !3, line: 2133, column: 63)
!4793 = !DILocation(line: 2135, column: 9, scope: !4792)
!4794 = !DILocation(line: 2137, column: 22, scope: !4754)
!4795 = !DILocation(line: 2137, column: 34, scope: !4754)
!4796 = !DILocation(line: 2137, column: 45, scope: !4754)
!4797 = !DILocation(line: 2137, column: 56, scope: !4754)
!4798 = !DILocation(line: 2137, column: 54, scope: !4754)
!4799 = !DILocation(line: 2137, column: 66, scope: !4754)
!4800 = !DILocation(line: 2137, column: 42, scope: !4754)
!4801 = !DILocation(line: 2137, column: 32, scope: !4754)
!4802 = !DILocation(line: 2137, column: 20, scope: !4754)
!4803 = !DILocation(line: 2138, column: 9, scope: !4754)
!4804 = !DILocation(line: 2138, column: 7, scope: !4754)
!4805 = !DILocation(line: 2139, column: 21, scope: !4754)
!4806 = !DILocation(line: 2139, column: 14, scope: !4754)
!4807 = !DILocation(line: 2139, column: 12, scope: !4754)
!4808 = !DILocation(line: 2140, column: 9, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4754, file: !3, line: 2140, column: 9)
!4810 = !DILocation(line: 2140, column: 16, scope: !4809)
!4811 = !DILocation(line: 2140, column: 9, scope: !4754)
!4812 = !DILocation(line: 2141, column: 9, scope: !4813)
!4813 = distinct !DILexicalBlock(scope: !4809, file: !3, line: 2140, column: 23)
!4814 = !DILocation(line: 2142, column: 9, scope: !4813)
!4815 = !DILocation(line: 2144, column: 8, scope: !4754)
!4816 = !DILocation(line: 2145, column: 20, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4754, file: !3, line: 2145, column: 9)
!4818 = !DILocation(line: 2146, column: 20, scope: !4817)
!4819 = !DILocation(line: 2145, column: 9, scope: !4817)
!4820 = !DILocation(line: 2146, column: 45, scope: !4817)
!4821 = !DILocation(line: 2145, column: 9, scope: !4754)
!4822 = !DILocation(line: 2147, column: 9, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4817, file: !3, line: 2146, column: 50)
!4824 = !DILocation(line: 2148, column: 9, scope: !4823)
!4825 = !DILocation(line: 2150, column: 16, scope: !4754)
!4826 = !DILocation(line: 2151, column: 5, scope: !4754)
!4827 = !DILocation(line: 2152, column: 13, scope: !4828)
!4828 = distinct !DILexicalBlock(scope: !4829, file: !3, line: 2152, column: 13)
!4829 = distinct !DILexicalBlock(scope: !4830, file: !3, line: 2151, column: 14)
!4830 = distinct !DILexicalBlock(scope: !4831, file: !3, line: 2151, column: 5)
!4831 = distinct !DILexicalBlock(scope: !4754, file: !3, line: 2151, column: 5)
!4832 = !DILocation(line: 2152, column: 38, scope: !4828)
!4833 = !DILocation(line: 2152, column: 13, scope: !4829)
!4834 = !DILocation(line: 2153, column: 45, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !4828, file: !3, line: 2152, column: 51)
!4836 = !DILocation(line: 2153, column: 39, scope: !4835)
!4837 = !DILocation(line: 2153, column: 13, scope: !4835)
!4838 = !DILocation(line: 2153, column: 37, scope: !4835)
!4839 = !DILocation(line: 2154, column: 9, scope: !4835)
!4840 = !DILocation(line: 2155, column: 44, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4828, file: !3, line: 2154, column: 16)
!4842 = !DILocation(line: 2155, column: 38, scope: !4841)
!4843 = !DILocation(line: 2155, column: 13, scope: !4841)
!4844 = !DILocation(line: 2155, column: 36, scope: !4841)
!4845 = !DILocation(line: 2157, column: 18, scope: !4846)
!4846 = distinct !DILexicalBlock(scope: !4829, file: !3, line: 2157, column: 13)
!4847 = !DILocation(line: 2157, column: 26, scope: !4846)
!4848 = !DILocation(line: 2158, column: 18, scope: !4846)
!4849 = !DILocation(line: 2157, column: 13, scope: !4846)
!4850 = !DILocation(line: 2158, column: 41, scope: !4846)
!4851 = !DILocation(line: 2157, column: 13, scope: !4829)
!4852 = !DILocation(line: 2159, column: 13, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4846, file: !3, line: 2158, column: 47)
!4854 = !DILocation(line: 2161, column: 10, scope: !4829)
!4855 = !DILocation(line: 2162, column: 13, scope: !4856)
!4856 = distinct !DILexicalBlock(scope: !4829, file: !3, line: 2162, column: 13)
!4857 = !DILocation(line: 2162, column: 17, scope: !4856)
!4858 = !DILocation(line: 2162, column: 15, scope: !4856)
!4859 = !DILocation(line: 2162, column: 13, scope: !4829)
!4860 = !DILocation(line: 2163, column: 17, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !4856, file: !3, line: 2162, column: 28)
!4862 = !DILocation(line: 2163, column: 15, scope: !4861)
!4863 = !DILocation(line: 2164, column: 9, scope: !4861)
!4864 = !DILocation(line: 2165, column: 13, scope: !4865)
!4865 = distinct !DILexicalBlock(scope: !4829, file: !3, line: 2165, column: 13)
!4866 = !DILocation(line: 2165, column: 18, scope: !4865)
!4867 = !DILocation(line: 2165, column: 15, scope: !4865)
!4868 = !DILocation(line: 2165, column: 13, scope: !4829)
!4869 = !DILocation(line: 2166, column: 26, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4865, file: !3, line: 2165, column: 34)
!4871 = !DILocation(line: 2166, column: 20, scope: !4870)
!4872 = !DILocation(line: 2167, column: 20, scope: !4870)
!4873 = !DILocation(line: 2168, column: 13, scope: !4870)
!4874 = !DILocation(line: 2169, column: 13, scope: !4870)
!4875 = !DILocation(line: 2151, column: 5, scope: !4830)
!4876 = distinct !{!4876, !4877, !4878}
!4877 = !DILocation(line: 2151, column: 5, scope: !4831)
!4878 = !DILocation(line: 2171, column: 5, scope: !4831)
!4879 = !DILocation(line: 2173, column: 16, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4754, file: !3, line: 2173, column: 9)
!4881 = !DILocation(line: 2173, column: 9, scope: !4880)
!4882 = !DILocation(line: 2173, column: 46, scope: !4880)
!4883 = !DILocation(line: 2173, column: 9, scope: !4754)
!4884 = !DILocation(line: 2174, column: 22, scope: !4885)
!4885 = distinct !DILexicalBlock(scope: !4880, file: !3, line: 2173, column: 51)
!4886 = !DILocation(line: 2174, column: 16, scope: !4885)
!4887 = !DILocation(line: 2175, column: 16, scope: !4885)
!4888 = !DILocation(line: 2176, column: 9, scope: !4885)
!4889 = !DILocation(line: 2177, column: 9, scope: !4885)
!4890 = !DILocation(line: 2179, column: 13, scope: !4754)
!4891 = !DILocation(line: 2179, column: 5, scope: !4754)
!4892 = !DILocation(line: 2181, column: 13, scope: !4893)
!4893 = distinct !DILexicalBlock(scope: !4894, file: !3, line: 2181, column: 13)
!4894 = distinct !DILexicalBlock(scope: !4754, file: !3, line: 2179, column: 22)
!4895 = !DILocation(line: 2181, column: 46, scope: !4893)
!4896 = !DILocation(line: 2181, column: 13, scope: !4894)
!4897 = !DILocation(line: 2182, column: 23, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !4893, file: !3, line: 2181, column: 52)
!4899 = !DILocation(line: 2182, column: 17, scope: !4898)
!4900 = !DILocation(line: 2182, column: 15, scope: !4898)
!4901 = !DILocation(line: 2183, column: 9, scope: !4898)
!4902 = !DILocation(line: 2183, column: 20, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4893, file: !3, line: 2183, column: 20)
!4904 = !DILocation(line: 2183, column: 53, scope: !4903)
!4905 = !DILocation(line: 2183, column: 20, scope: !4893)
!4906 = !DILocation(line: 2184, column: 26, scope: !4907)
!4907 = distinct !DILexicalBlock(scope: !4903, file: !3, line: 2183, column: 66)
!4908 = !DILocation(line: 2184, column: 20, scope: !4907)
!4909 = !DILocation(line: 2185, column: 20, scope: !4907)
!4910 = !DILocation(line: 2186, column: 13, scope: !4907)
!4911 = !DILocation(line: 2187, column: 13, scope: !4907)
!4912 = !DILocation(line: 2188, column: 20, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4903, file: !3, line: 2188, column: 20)
!4914 = !DILocation(line: 2188, column: 53, scope: !4913)
!4915 = !DILocation(line: 2188, column: 20, scope: !4903)
!4916 = !DILocation(line: 2189, column: 23, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4913, file: !3, line: 2188, column: 65)
!4918 = !DILocation(line: 2189, column: 17, scope: !4917)
!4919 = !DILocation(line: 2189, column: 15, scope: !4917)
!4920 = !DILocation(line: 2190, column: 9, scope: !4917)
!4921 = !DILocation(line: 2191, column: 13, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4913, file: !3, line: 2190, column: 16)
!4923 = !DILocation(line: 2199, column: 19, scope: !4894)
!4924 = !DILocation(line: 2199, column: 21, scope: !4894)
!4925 = !DILocation(line: 2199, column: 28, scope: !4894)
!4926 = !DILocation(line: 2199, column: 38, scope: !4894)
!4927 = !DILocation(line: 2199, column: 40, scope: !4894)
!4928 = !DILocation(line: 2199, column: 47, scope: !4894)
!4929 = !DILocation(line: 2199, column: 57, scope: !4894)
!4930 = !DILocation(line: 2199, column: 59, scope: !4894)
!4931 = !DILocation(line: 2199, column: 65, scope: !4894)
!4932 = !DILocation(line: 2199, column: 74, scope: !4894)
!4933 = !DILocation(line: 2199, column: 76, scope: !4894)
!4934 = !DILocation(line: 2200, column: 19, scope: !4894)
!4935 = !DILocation(line: 2200, column: 21, scope: !4894)
!4936 = !DILocation(line: 2200, column: 27, scope: !4894)
!4937 = !DILocation(line: 2200, column: 34, scope: !4894)
!4938 = !DILocation(line: 2200, column: 36, scope: !4894)
!4939 = !DILocation(line: 2198, column: 9, scope: !4894)
!4940 = !DILocation(line: 2201, column: 9, scope: !4894)
!4941 = !DILocation(line: 2203, column: 60, scope: !4894)
!4942 = !DILocation(line: 2203, column: 9, scope: !4894)
!4943 = !DILocation(line: 2204, column: 9, scope: !4894)
!4944 = !DILocation(line: 2206, column: 29, scope: !4894)
!4945 = !DILocation(line: 2206, column: 9, scope: !4894)
!4946 = !DILocation(line: 2207, column: 9, scope: !4894)
!4947 = !DILocation(line: 2209, column: 9, scope: !4894)
!4948 = !DILocation(line: 2211, column: 13, scope: !4754)
!4949 = !DILocation(line: 2212, column: 1, scope: !4754)
!4950 = distinct !DISubprogram(name: "doport", scope: !3, file: !3, line: 2214, type: !3536, scopeLine: 2215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!4951 = !DILocalVariable(name: "arg", arg: 1, scope: !4950, file: !3, line: 2214, type: !385)
!4952 = !DILocation(line: 2214, column: 25, scope: !4950)
!4953 = !DILocalVariable(name: "a1", scope: !4950, file: !3, line: 2216, type: !7)
!4954 = !DILocation(line: 2216, column: 18, scope: !4950)
!4955 = !DILocalVariable(name: "a2", scope: !4950, file: !3, line: 2216, type: !7)
!4956 = !DILocation(line: 2216, column: 22, scope: !4950)
!4957 = !DILocalVariable(name: "a3", scope: !4950, file: !3, line: 2216, type: !7)
!4958 = !DILocation(line: 2216, column: 26, scope: !4950)
!4959 = !DILocalVariable(name: "a4", scope: !4950, file: !3, line: 2216, type: !7)
!4960 = !DILocation(line: 2216, column: 30, scope: !4950)
!4961 = !DILocalVariable(name: "p1", scope: !4950, file: !3, line: 2216, type: !7)
!4962 = !DILocation(line: 2216, column: 34, scope: !4950)
!4963 = !DILocalVariable(name: "p2", scope: !4950, file: !3, line: 2216, type: !7)
!4964 = !DILocation(line: 2216, column: 38, scope: !4950)
!4965 = !DILocalVariable(name: "a", scope: !4950, file: !3, line: 2217, type: !549)
!4966 = !DILocation(line: 2217, column: 29, scope: !4950)
!4967 = !DILocation(line: 2219, column: 16, scope: !4968)
!4968 = distinct !DILexicalBlock(scope: !4950, file: !3, line: 2219, column: 9)
!4969 = !DILocation(line: 2219, column: 9, scope: !4968)
!4970 = !DILocation(line: 2220, column: 46, scope: !4968)
!4971 = !DILocation(line: 2220, column: 51, scope: !4968)
!4972 = !DILocation(line: 2221, column: 9, scope: !4968)
!4973 = !DILocation(line: 2221, column: 12, scope: !4968)
!4974 = !DILocation(line: 2221, column: 18, scope: !4968)
!4975 = !DILocation(line: 2221, column: 21, scope: !4968)
!4976 = !DILocation(line: 2221, column: 24, scope: !4968)
!4977 = !DILocation(line: 2221, column: 30, scope: !4968)
!4978 = !DILocation(line: 2221, column: 33, scope: !4968)
!4979 = !DILocation(line: 2221, column: 36, scope: !4968)
!4980 = !DILocation(line: 2221, column: 42, scope: !4968)
!4981 = !DILocation(line: 2221, column: 45, scope: !4968)
!4982 = !DILocation(line: 2221, column: 48, scope: !4968)
!4983 = !DILocation(line: 2221, column: 54, scope: !4968)
!4984 = !DILocation(line: 2222, column: 9, scope: !4968)
!4985 = !DILocation(line: 2222, column: 12, scope: !4968)
!4986 = !DILocation(line: 2222, column: 18, scope: !4968)
!4987 = !DILocation(line: 2222, column: 21, scope: !4968)
!4988 = !DILocation(line: 2222, column: 24, scope: !4968)
!4989 = !DILocation(line: 2222, column: 30, scope: !4968)
!4990 = !DILocation(line: 2222, column: 34, scope: !4968)
!4991 = !DILocation(line: 2222, column: 37, scope: !4968)
!4992 = !DILocation(line: 2222, column: 36, scope: !4968)
!4993 = !DILocation(line: 2222, column: 40, scope: !4968)
!4994 = !DILocation(line: 2222, column: 39, scope: !4968)
!4995 = !DILocation(line: 2222, column: 43, scope: !4968)
!4996 = !DILocation(line: 2222, column: 42, scope: !4968)
!4997 = !DILocation(line: 2222, column: 47, scope: !4968)
!4998 = !DILocation(line: 2222, column: 52, scope: !4968)
!4999 = !DILocation(line: 2223, column: 10, scope: !4968)
!5000 = !DILocation(line: 2223, column: 15, scope: !4968)
!5001 = !DILocation(line: 2223, column: 13, scope: !4968)
!5002 = !DILocation(line: 2223, column: 19, scope: !4968)
!5003 = !DILocation(line: 2219, column: 9, scope: !4950)
!5004 = !DILocation(line: 2224, column: 9, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !4968, file: !3, line: 2223, column: 25)
!5006 = !DILocation(line: 2225, column: 9, scope: !5005)
!5007 = !DILocation(line: 2227, column: 5, scope: !4950)
!5008 = !DILocation(line: 2228, column: 5, scope: !4950)
!5009 = !DILocation(line: 2228, column: 23, scope: !4950)
!5010 = !DILocation(line: 2230, column: 27, scope: !4950)
!5011 = !DILocation(line: 2230, column: 30, scope: !4950)
!5012 = !DILocation(line: 2230, column: 51, scope: !4950)
!5013 = !DILocation(line: 2230, column: 54, scope: !4950)
!5014 = !DILocation(line: 2230, column: 37, scope: !4950)
!5015 = !DILocation(line: 2231, column: 16, scope: !4950)
!5016 = !DILocation(line: 2231, column: 19, scope: !4950)
!5017 = !DILocation(line: 2230, column: 61, scope: !4950)
!5018 = !DILocation(line: 2231, column: 27, scope: !4950)
!5019 = !DILocation(line: 2231, column: 25, scope: !4950)
!5020 = !DILocation(line: 2230, column: 9, scope: !4950)
!5021 = !DILocation(line: 2229, column: 5, scope: !4950)
!5022 = !DILocation(line: 2229, column: 25, scope: !4950)
!5023 = !DILocation(line: 2233, column: 17, scope: !4950)
!5024 = !DILocation(line: 2233, column: 20, scope: !4950)
!5025 = !DILocation(line: 2233, column: 28, scope: !4950)
!5026 = !DILocation(line: 2233, column: 26, scope: !4950)
!5027 = !DILocation(line: 2233, column: 5, scope: !4950)
!5028 = !DILocation(line: 2234, column: 1, scope: !4950)
!5029 = !DILocalVariable(name: "name", arg: 1, scope: !474, file: !3, line: 2544, type: !308)
!5030 = !DILocation(line: 2544, column: 20, scope: !474)
!5031 = !DILocalVariable(name: "mode", arg: 2, scope: !474, file: !3, line: 2544, type: !348)
!5032 = !DILocation(line: 2544, column: 33, scope: !474)
!5033 = !DILocalVariable(name: "st2", scope: !474, file: !3, line: 2548, type: !3147)
!5034 = !DILocation(line: 2548, column: 17, scope: !474)
!5035 = !DILocalVariable(name: "fd", scope: !474, file: !3, line: 2549, type: !326)
!5036 = !DILocation(line: 2549, column: 9, scope: !474)
!5037 = !DILocation(line: 2551, column: 9, scope: !5038)
!5038 = distinct !DILexicalBlock(scope: !474, file: !3, line: 2551, column: 9)
!5039 = !DILocation(line: 2551, column: 17, scope: !5038)
!5040 = !DILocation(line: 2551, column: 22, scope: !5038)
!5041 = !DILocation(line: 2551, column: 36, scope: !5038)
!5042 = !DILocation(line: 2551, column: 40, scope: !5038)
!5043 = !DILocation(line: 2551, column: 9, scope: !474)
!5044 = !DILocation(line: 2552, column: 41, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !5038, file: !3, line: 2551, column: 54)
!5046 = !DILocation(line: 2552, column: 9, scope: !5045)
!5047 = !DILocation(line: 2553, column: 9, scope: !5045)
!5048 = !DILocation(line: 2556, column: 9, scope: !5049)
!5049 = distinct !DILexicalBlock(scope: !474, file: !3, line: 2556, column: 9)
!5050 = !DILocation(line: 2556, column: 15, scope: !5049)
!5051 = !DILocation(line: 2556, column: 9, scope: !474)
!5052 = !DILocation(line: 2557, column: 9, scope: !5053)
!5053 = distinct !DILexicalBlock(scope: !5049, file: !3, line: 2556, column: 21)
!5054 = !DILocation(line: 2558, column: 9, scope: !5053)
!5055 = !DILocation(line: 2561, column: 9, scope: !5056)
!5056 = distinct !DILexicalBlock(scope: !474, file: !3, line: 2561, column: 9)
!5057 = !DILocation(line: 2561, column: 14, scope: !5056)
!5058 = !DILocation(line: 2561, column: 22, scope: !5056)
!5059 = !DILocation(line: 2561, column: 26, scope: !5056)
!5060 = !DILocation(line: 2561, column: 25, scope: !5056)
!5061 = !DILocation(line: 2561, column: 31, scope: !5056)
!5062 = !DILocation(line: 2561, column: 9, scope: !474)
!5063 = !DILocation(line: 2562, column: 9, scope: !5064)
!5064 = distinct !DILexicalBlock(scope: !5056, file: !3, line: 2561, column: 37)
!5065 = !DILocation(line: 2563, column: 9, scope: !5064)
!5066 = !DILocation(line: 2565, column: 25, scope: !5067)
!5067 = distinct !DILexicalBlock(scope: !474, file: !3, line: 2565, column: 9)
!5068 = !DILocation(line: 2565, column: 31, scope: !5067)
!5069 = !DILocation(line: 2565, column: 9, scope: !5067)
!5070 = !DILocation(line: 2565, column: 45, scope: !5067)
!5071 = !DILocation(line: 2565, column: 9, scope: !474)
!5072 = !DILocation(line: 2566, column: 48, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !5067, file: !3, line: 2565, column: 51)
!5074 = !DILocation(line: 2566, column: 9, scope: !5073)
!5075 = !DILocation(line: 2567, column: 9, scope: !5073)
!5076 = !DILocation(line: 2569, column: 15, scope: !474)
!5077 = !DILocation(line: 2569, column: 10, scope: !474)
!5078 = !DILocation(line: 2569, column: 8, scope: !474)
!5079 = !DILocation(line: 2570, column: 9, scope: !5080)
!5080 = distinct !DILexicalBlock(scope: !474, file: !3, line: 2570, column: 9)
!5081 = !DILocation(line: 2570, column: 12, scope: !5080)
!5082 = !DILocation(line: 2570, column: 9, scope: !474)
!5083 = !DILocation(line: 2571, column: 9, scope: !5084)
!5084 = distinct !DILexicalBlock(scope: !5080, file: !3, line: 2570, column: 19)
!5085 = !DILocation(line: 2573, column: 10, scope: !5086)
!5086 = distinct !DILexicalBlock(scope: !474, file: !3, line: 2573, column: 9)
!5087 = !DILocation(line: 2573, column: 24, scope: !5086)
!5088 = !DILocation(line: 2573, column: 22, scope: !5086)
!5089 = !DILocation(line: 2573, column: 37, scope: !5086)
!5090 = !DILocation(line: 2573, column: 9, scope: !474)
!5091 = !DILocalVariable(name: "st", scope: !5092, file: !3, line: 2574, type: !3147)
!5092 = distinct !DILexicalBlock(scope: !5086, file: !3, line: 2573, column: 43)
!5093 = !DILocation(line: 2574, column: 21, scope: !5092)
!5094 = !DILocation(line: 2576, column: 13, scope: !5095)
!5095 = distinct !DILexicalBlock(scope: !5092, file: !3, line: 2576, column: 13)
!5096 = !DILocation(line: 2576, column: 28, scope: !5095)
!5097 = !DILocation(line: 2576, column: 13, scope: !5092)
!5098 = !DILocation(line: 2577, column: 13, scope: !5099)
!5099 = distinct !DILexicalBlock(scope: !5095, file: !3, line: 2576, column: 34)
!5100 = !DILocation(line: 2579, column: 26, scope: !5092)
!5101 = !DILocation(line: 2579, column: 21, scope: !5092)
!5102 = !DILocation(line: 2580, column: 26, scope: !5092)
!5103 = !DILocation(line: 2580, column: 21, scope: !5092)
!5104 = !DILocation(line: 2581, column: 5, scope: !5092)
!5105 = !DILocation(line: 2582, column: 15, scope: !5106)
!5106 = distinct !DILexicalBlock(scope: !474, file: !3, line: 2582, column: 9)
!5107 = !DILocation(line: 2582, column: 9, scope: !5106)
!5108 = !DILocation(line: 2582, column: 25, scope: !5106)
!5109 = !DILocation(line: 2582, column: 9, scope: !474)
!5110 = !DILocation(line: 2583, column: 9, scope: !5111)
!5111 = distinct !DILexicalBlock(scope: !5106, file: !3, line: 2582, column: 31)
!5112 = !DILocation(line: 2590, column: 13, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !474, file: !3, line: 2590, column: 9)
!5114 = !DILocation(line: 2590, column: 23, scope: !5113)
!5115 = !DILocation(line: 2590, column: 20, scope: !5113)
!5116 = !DILocation(line: 2590, column: 35, scope: !5113)
!5117 = !DILocation(line: 2590, column: 42, scope: !5113)
!5118 = !DILocation(line: 2590, column: 52, scope: !5113)
!5119 = !DILocation(line: 2590, column: 49, scope: !5113)
!5120 = !DILocation(line: 2590, column: 9, scope: !474)
!5121 = !DILocation(line: 2591, column: 14, scope: !5122)
!5122 = distinct !DILexicalBlock(scope: !5113, file: !3, line: 2590, column: 65)
!5123 = !DILocation(line: 2592, column: 5, scope: !5122)
!5124 = !DILocation(line: 2592, column: 16, scope: !5125)
!5125 = distinct !DILexicalBlock(scope: !5113, file: !3, line: 2592, column: 16)
!5126 = !DILocation(line: 2592, column: 34, scope: !5125)
!5127 = !DILocation(line: 2592, column: 16, scope: !5113)
!5128 = !DILocation(line: 2593, column: 18, scope: !5129)
!5129 = distinct !DILexicalBlock(scope: !5125, file: !3, line: 2592, column: 40)
!5130 = !DILocation(line: 2593, column: 14, scope: !5129)
!5131 = !DILocation(line: 2594, column: 5, scope: !5129)
!5132 = !DILocation(line: 2595, column: 16, scope: !5133)
!5133 = distinct !DILexicalBlock(scope: !474, file: !3, line: 2595, column: 9)
!5134 = !DILocation(line: 2595, column: 20, scope: !5133)
!5135 = !DILocation(line: 2595, column: 9, scope: !5133)
!5136 = !DILocation(line: 2595, column: 26, scope: !5133)
!5137 = !DILocation(line: 2595, column: 30, scope: !5133)
!5138 = !DILocation(line: 2595, column: 39, scope: !5133)
!5139 = !DILocation(line: 2595, column: 45, scope: !5133)
!5140 = !DILocation(line: 2595, column: 33, scope: !5133)
!5141 = !DILocation(line: 2595, column: 51, scope: !5133)
!5142 = !DILocation(line: 2595, column: 9, scope: !474)
!5143 = !DILocation(line: 2595, column: 56, scope: !5133)
!5144 = !DILabel(scope: !5145, name: "failure", file: !3, line: 2596)
!5145 = distinct !DILexicalBlock(scope: !5133, file: !3, line: 2595, column: 56)
!5146 = !DILocation(line: 2596, column: 9, scope: !5145)
!5147 = !DILocation(line: 2597, column: 13, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !5145, file: !3, line: 2597, column: 13)
!5149 = !DILocation(line: 2597, column: 16, scope: !5148)
!5150 = !DILocation(line: 2597, column: 13, scope: !5145)
!5151 = !DILocation(line: 2598, column: 26, scope: !5152)
!5152 = distinct !DILexicalBlock(scope: !5148, file: !3, line: 2597, column: 23)
!5153 = !DILocation(line: 2598, column: 20, scope: !5152)
!5154 = !DILocation(line: 2599, column: 9, scope: !5152)
!5155 = !DILocation(line: 2600, column: 48, scope: !5145)
!5156 = !DILocation(line: 2600, column: 63, scope: !5145)
!5157 = !DILocation(line: 2600, column: 54, scope: !5145)
!5158 = !DILocation(line: 2600, column: 9, scope: !5145)
!5159 = !DILocation(line: 2601, column: 9, scope: !5145)
!5160 = !DILocation(line: 2603, column: 18, scope: !474)
!5161 = !DILocation(line: 2603, column: 12, scope: !474)
!5162 = !DILocation(line: 2604, column: 38, scope: !474)
!5163 = !DILocation(line: 2604, column: 5, scope: !474)
!5164 = !DILocation(line: 2605, column: 1, scope: !474)
!5165 = distinct !DISubprogram(name: "doutime", scope: !3, file: !3, line: 2607, type: !5166, scopeLine: 2608, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!5166 = !DISubroutineType(types: !5167)
!5167 = !{null, !308, !529}
!5168 = !DILocalVariable(name: "name", arg: 1, scope: !5165, file: !3, line: 2607, type: !308)
!5169 = !DILocation(line: 2607, column: 20, scope: !5165)
!5170 = !DILocalVariable(name: "wanted_time", arg: 2, scope: !5165, file: !3, line: 2607, type: !529)
!5171 = !DILocation(line: 2607, column: 45, scope: !5165)
!5172 = !DILocalVariable(name: "tm", scope: !5165, file: !3, line: 2609, type: !3131)
!5173 = !DILocation(line: 2609, column: 15, scope: !5165)
!5174 = !DILocalVariable(name: "ts", scope: !5165, file: !3, line: 2610, type: !331)
!5175 = !DILocation(line: 2610, column: 12, scope: !5165)
!5176 = !DILocalVariable(name: "tb", scope: !5165, file: !3, line: 2611, type: !5177)
!5177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utimbuf", file: !5178, line: 36, size: 128, elements: !5179)
!5178 = !DIFile(filename: "/usr/include/utime.h", directory: "")
!5179 = !{!5180, !5181}
!5180 = !DIDerivedType(tag: DW_TAG_member, name: "actime", scope: !5177, file: !5178, line: 38, baseType: !333, size: 64)
!5181 = !DIDerivedType(tag: DW_TAG_member, name: "modtime", scope: !5177, file: !5178, line: 39, baseType: !333, size: 64, offset: 64)
!5182 = !DILocation(line: 2611, column: 20, scope: !5165)
!5183 = !DILocation(line: 2614, column: 9, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !5165, file: !3, line: 2614, column: 9)
!5185 = !DILocation(line: 2614, column: 15, scope: !5184)
!5186 = !DILocation(line: 2614, column: 9, scope: !5165)
!5187 = !DILocation(line: 2615, column: 9, scope: !5188)
!5188 = distinct !DILexicalBlock(scope: !5184, file: !3, line: 2614, column: 21)
!5189 = !DILocation(line: 2616, column: 9, scope: !5188)
!5190 = !DILocation(line: 2619, column: 9, scope: !5191)
!5191 = distinct !DILexicalBlock(scope: !5165, file: !3, line: 2619, column: 9)
!5192 = !DILocation(line: 2619, column: 14, scope: !5191)
!5193 = !DILocation(line: 2619, column: 22, scope: !5191)
!5194 = !DILocation(line: 2619, column: 26, scope: !5191)
!5195 = !DILocation(line: 2619, column: 25, scope: !5191)
!5196 = !DILocation(line: 2619, column: 31, scope: !5191)
!5197 = !DILocation(line: 2619, column: 9, scope: !5165)
!5198 = !DILocation(line: 2620, column: 9, scope: !5199)
!5199 = distinct !DILexicalBlock(scope: !5191, file: !3, line: 2619, column: 37)
!5200 = !DILocation(line: 2621, column: 9, scope: !5199)
!5201 = !DILocation(line: 2623, column: 25, scope: !5202)
!5202 = distinct !DILexicalBlock(scope: !5165, file: !3, line: 2623, column: 9)
!5203 = !DILocation(line: 2623, column: 31, scope: !5202)
!5204 = !DILocation(line: 2623, column: 9, scope: !5202)
!5205 = !DILocation(line: 2623, column: 45, scope: !5202)
!5206 = !DILocation(line: 2623, column: 9, scope: !5165)
!5207 = !DILocation(line: 2624, column: 48, scope: !5208)
!5208 = distinct !DILexicalBlock(scope: !5202, file: !3, line: 2623, column: 51)
!5209 = !DILocation(line: 2624, column: 9, scope: !5208)
!5210 = !DILocation(line: 2625, column: 9, scope: !5208)
!5211 = !DILocation(line: 2627, column: 5, scope: !5165)
!5212 = !DILocation(line: 2628, column: 12, scope: !5165)
!5213 = !DILocation(line: 2628, column: 51, scope: !5165)
!5214 = !DILocation(line: 2628, column: 64, scope: !5165)
!5215 = !DILocation(line: 2629, column: 16, scope: !5165)
!5216 = !DILocation(line: 2629, column: 29, scope: !5165)
!5217 = !DILocation(line: 2629, column: 42, scope: !5165)
!5218 = !DILocation(line: 2629, column: 54, scope: !5165)
!5219 = !DILocation(line: 2628, column: 5, scope: !5165)
!5220 = !DILocation(line: 2630, column: 8, scope: !5165)
!5221 = !DILocation(line: 2630, column: 14, scope: !5165)
!5222 = !DILocation(line: 2631, column: 8, scope: !5165)
!5223 = !DILocation(line: 2631, column: 16, scope: !5165)
!5224 = !DILocation(line: 2636, column: 10, scope: !5165)
!5225 = !DILocation(line: 2636, column: 8, scope: !5165)
!5226 = !DILocation(line: 2651, column: 12, scope: !5227)
!5227 = distinct !DILexicalBlock(scope: !5165, file: !3, line: 2651, column: 9)
!5228 = !DILocation(line: 2651, column: 19, scope: !5227)
!5229 = !DILocation(line: 2651, column: 23, scope: !5227)
!5230 = !DILocation(line: 2651, column: 29, scope: !5227)
!5231 = !DILocation(line: 2651, column: 37, scope: !5227)
!5232 = !DILocation(line: 2651, column: 42, scope: !5227)
!5233 = !DILocation(line: 2651, column: 45, scope: !5227)
!5234 = !DILocation(line: 2651, column: 48, scope: !5227)
!5235 = !DILocation(line: 2651, column: 9, scope: !5165)
!5236 = !DILocation(line: 2652, column: 9, scope: !5237)
!5237 = distinct !DILexicalBlock(scope: !5227, file: !3, line: 2651, column: 64)
!5238 = !DILocation(line: 2653, column: 9, scope: !5237)
!5239 = !DILocation(line: 2655, column: 30, scope: !5165)
!5240 = !DILocation(line: 2655, column: 20, scope: !5165)
!5241 = !DILocation(line: 2655, column: 28, scope: !5165)
!5242 = !DILocation(line: 2655, column: 8, scope: !5165)
!5243 = !DILocation(line: 2655, column: 15, scope: !5165)
!5244 = !DILocation(line: 2656, column: 15, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5165, file: !3, line: 2656, column: 9)
!5246 = !DILocation(line: 2656, column: 9, scope: !5245)
!5247 = !DILocation(line: 2656, column: 26, scope: !5245)
!5248 = !DILocation(line: 2656, column: 9, scope: !5165)
!5249 = !DILocation(line: 2657, column: 40, scope: !5250)
!5250 = distinct !DILexicalBlock(scope: !5245, file: !3, line: 2656, column: 31)
!5251 = !DILocation(line: 2657, column: 55, scope: !5250)
!5252 = !DILocation(line: 2657, column: 46, scope: !5250)
!5253 = !DILocation(line: 2657, column: 9, scope: !5250)
!5254 = !DILocation(line: 2658, column: 5, scope: !5250)
!5255 = !DILocation(line: 2659, column: 9, scope: !5256)
!5256 = distinct !DILexicalBlock(scope: !5245, file: !3, line: 2658, column: 12)
!5257 = !DILocation(line: 2661, column: 1, scope: !5165)
!5258 = distinct !DISubprogram(name: "dodele", scope: !3, file: !3, line: 2664, type: !469, scopeLine: 2665, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!5259 = !DILocalVariable(name: "name", arg: 1, scope: !5258, file: !3, line: 2664, type: !308)
!5260 = !DILocation(line: 2664, column: 19, scope: !5258)
!5261 = !DILocation(line: 2667, column: 9, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !5258, file: !3, line: 2667, column: 9)
!5263 = !DILocation(line: 2667, column: 15, scope: !5262)
!5264 = !DILocation(line: 2667, column: 9, scope: !5258)
!5265 = !DILocation(line: 2668, column: 9, scope: !5266)
!5266 = distinct !DILexicalBlock(scope: !5262, file: !3, line: 2667, column: 21)
!5267 = !DILocation(line: 2669, column: 9, scope: !5266)
!5268 = !DILocation(line: 2672, column: 9, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5258, file: !3, line: 2672, column: 9)
!5270 = !DILocation(line: 2672, column: 14, scope: !5269)
!5271 = !DILocation(line: 2672, column: 22, scope: !5269)
!5272 = !DILocation(line: 2672, column: 26, scope: !5269)
!5273 = !DILocation(line: 2672, column: 25, scope: !5269)
!5274 = !DILocation(line: 2672, column: 31, scope: !5269)
!5275 = !DILocation(line: 2672, column: 9, scope: !5258)
!5276 = !DILocation(line: 2673, column: 9, scope: !5277)
!5277 = distinct !DILexicalBlock(scope: !5269, file: !3, line: 2672, column: 37)
!5278 = !DILocation(line: 2674, column: 9, scope: !5277)
!5279 = !DILocation(line: 2676, column: 25, scope: !5280)
!5280 = distinct !DILexicalBlock(scope: !5258, file: !3, line: 2676, column: 9)
!5281 = !DILocation(line: 2676, column: 31, scope: !5280)
!5282 = !DILocation(line: 2676, column: 9, scope: !5280)
!5283 = !DILocation(line: 2676, column: 45, scope: !5280)
!5284 = !DILocation(line: 2676, column: 9, scope: !5258)
!5285 = !DILocation(line: 2677, column: 48, scope: !5286)
!5286 = distinct !DILexicalBlock(scope: !5280, file: !3, line: 2676, column: 51)
!5287 = !DILocation(line: 2677, column: 9, scope: !5286)
!5288 = !DILocation(line: 2678, column: 9, scope: !5286)
!5289 = !DILocation(line: 2680, column: 9, scope: !5290)
!5290 = distinct !DILexicalBlock(scope: !5258, file: !3, line: 2680, column: 9)
!5291 = !DILocation(line: 2680, column: 22, scope: !5290)
!5292 = !DILocation(line: 2680, column: 9, scope: !5258)
!5293 = !DILocation(line: 2682, column: 9, scope: !5294)
!5294 = distinct !DILexicalBlock(scope: !5290, file: !3, line: 2680, column: 28)
!5295 = !DILocation(line: 2682, column: 15, scope: !5294)
!5296 = !DILocation(line: 2686, column: 9, scope: !5294)
!5297 = !DILocation(line: 2772, column: 49, scope: !5258)
!5298 = !DILocation(line: 2772, column: 5, scope: !5258)
!5299 = !DILocation(line: 2773, column: 43, scope: !5258)
!5300 = !DILocation(line: 2774, column: 14, scope: !5258)
!5301 = !DILocation(line: 2774, column: 13, scope: !5258)
!5302 = !DILocation(line: 2774, column: 19, scope: !5258)
!5303 = !DILocation(line: 2775, column: 15, scope: !5258)
!5304 = !DILocation(line: 2775, column: 14, scope: !5258)
!5305 = !DILocation(line: 2775, column: 20, scope: !5258)
!5306 = !DILocation(line: 2775, column: 27, scope: !5258)
!5307 = !DILocation(line: 2775, column: 32, scope: !5258)
!5308 = !DILocation(line: 2775, column: 36, scope: !5258)
!5309 = !DILocation(line: 2775, column: 42, scope: !5258)
!5310 = !DILocation(line: 2775, column: 53, scope: !5258)
!5311 = !DILocation(line: 2775, column: 39, scope: !5258)
!5312 = !DILocation(line: 2775, column: 58, scope: !5258)
!5313 = !DILocation(line: 0, scope: !5258)
!5314 = !DILocation(line: 2775, column: 13, scope: !5258)
!5315 = !DILocation(line: 2776, column: 25, scope: !5258)
!5316 = !DILocation(line: 2773, column: 5, scope: !5258)
!5317 = !DILocation(line: 2777, column: 5, scope: !5258)
!5318 = !DILabel(scope: !5258, name: "denied", file: !3, line: 2779)
!5319 = !DILocation(line: 2779, column: 5, scope: !5258)
!5320 = !DILocation(line: 2780, column: 43, scope: !5258)
!5321 = !DILocation(line: 2780, column: 58, scope: !5258)
!5322 = !DILocation(line: 2780, column: 49, scope: !5258)
!5323 = !DILocation(line: 2780, column: 5, scope: !5258)
!5324 = !DILocation(line: 2781, column: 1, scope: !5258)
!5325 = distinct !DISubprogram(name: "doretr", scope: !3, file: !3, line: 3313, type: !469, scopeLine: 3314, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!5326 = !DILocalVariable(name: "name", arg: 1, scope: !5325, file: !3, line: 3313, type: !308)
!5327 = !DILocation(line: 3313, column: 19, scope: !5325)
!5328 = !DILocalVariable(name: "dlhandler", scope: !5325, file: !3, line: 3315, type: !5329)
!5329 = !DIDerivedType(tag: DW_TAG_typedef, name: "DLHandler", file: !352, line: 313, baseType: !5330)
!5330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DLHandler_", file: !352, line: 289, size: 1408, elements: !5331)
!5331 = !{!5332, !5333, !5334, !5335, !5336, !5337, !5338, !5339, !5340, !5341, !5342, !5343, !5344, !5345, !5346, !5347, !5348, !5349, !5350, !5351, !5352, !5353, !5354}
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "clientfd", scope: !5330, file: !352, line: 290, baseType: !326, size: 32)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "tls_clientfd", scope: !5330, file: !352, line: 291, baseType: !303, size: 64, offset: 64)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "xferfd", scope: !5330, file: !352, line: 292, baseType: !326, size: 32, offset: 128)
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !5330, file: !352, line: 293, baseType: !326, size: 32, offset: 160)
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "tls_fd", scope: !5330, file: !352, line: 294, baseType: !303, size: 64, offset: 192)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "file_size", scope: !5330, file: !352, line: 295, baseType: !344, size: 64, offset: 256)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "dlmap_size", scope: !5330, file: !352, line: 296, baseType: !304, size: 64, offset: 320)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "cur_pos", scope: !5330, file: !352, line: 297, baseType: !344, size: 64, offset: 384)
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !5330, file: !352, line: 298, baseType: !344, size: 64, offset: 448)
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "min_chunk_size", scope: !5330, file: !352, line: 299, baseType: !344, size: 64, offset: 512)
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "default_chunk_size", scope: !5330, file: !352, line: 300, baseType: !344, size: 64, offset: 576)
!5343 = !DIDerivedType(tag: DW_TAG_member, name: "max_chunk_size", scope: !5330, file: !352, line: 301, baseType: !344, size: 64, offset: 640)
!5344 = !DIDerivedType(tag: DW_TAG_member, name: "dlmap_pos", scope: !5330, file: !352, line: 302, baseType: !344, size: 64, offset: 704)
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "dlmap_fdpos", scope: !5330, file: !352, line: 303, baseType: !344, size: 64, offset: 768)
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "total_downloaded", scope: !5330, file: !352, line: 304, baseType: !344, size: 64, offset: 832)
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "sizeof_map", scope: !5330, file: !352, line: 305, baseType: !304, size: 64, offset: 896)
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !5330, file: !352, line: 306, baseType: !382, size: 64, offset: 960)
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "map_data", scope: !5330, file: !352, line: 307, baseType: !382, size: 64, offset: 1024)
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "ascii_mode", scope: !5330, file: !352, line: 308, baseType: !326, size: 32, offset: 1088)
!5351 = !DIDerivedType(tag: DW_TAG_member, name: "min_sleep", scope: !5330, file: !352, line: 309, baseType: !336, size: 64, offset: 1152)
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "max_sleep", scope: !5330, file: !352, line: 310, baseType: !336, size: 64, offset: 1216)
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth", scope: !5330, file: !352, line: 311, baseType: !306, size: 64, offset: 1280)
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "pfds_f_in", scope: !5330, file: !352, line: 312, baseType: !2058, size: 64, offset: 1344)
!5355 = !DILocation(line: 3315, column: 15, scope: !5325)
!5356 = !DILocalVariable(name: "f", scope: !5325, file: !3, line: 3316, type: !326)
!5357 = !DILocation(line: 3316, column: 9, scope: !5325)
!5358 = !DILocalVariable(name: "st", scope: !5325, file: !3, line: 3317, type: !3147)
!5359 = !DILocation(line: 3317, column: 17, scope: !5325)
!5360 = !DILocalVariable(name: "started", scope: !5325, file: !3, line: 3318, type: !336)
!5361 = !DILocation(line: 3318, column: 12, scope: !5325)
!5362 = !DILocalVariable(name: "ret", scope: !5325, file: !3, line: 3319, type: !326)
!5363 = !DILocation(line: 3319, column: 9, scope: !5325)
!5364 = !DILocation(line: 3321, column: 15, scope: !5325)
!5365 = !DILocation(line: 3321, column: 32, scope: !5325)
!5366 = !DILocation(line: 3322, column: 10, scope: !5367)
!5367 = distinct !DILexicalBlock(scope: !5325, file: !3, line: 3322, column: 9)
!5368 = !DILocation(line: 3322, column: 9, scope: !5325)
!5369 = !DILocation(line: 3323, column: 42, scope: !5370)
!5370 = distinct !DILexicalBlock(scope: !5367, file: !3, line: 3322, column: 23)
!5371 = !DILocation(line: 3323, column: 9, scope: !5370)
!5372 = !DILocation(line: 3324, column: 9, scope: !5370)
!5373 = !DILocation(line: 3326, column: 9, scope: !5374)
!5374 = distinct !DILexicalBlock(scope: !5325, file: !3, line: 3326, column: 9)
!5375 = !DILocation(line: 3326, column: 14, scope: !5374)
!5376 = !DILocation(line: 3326, column: 18, scope: !5374)
!5377 = !DILocation(line: 3326, column: 22, scope: !5374)
!5378 = !DILocation(line: 3326, column: 27, scope: !5374)
!5379 = !DILocation(line: 3326, column: 32, scope: !5374)
!5380 = !DILocation(line: 3326, column: 35, scope: !5374)
!5381 = !DILocation(line: 3326, column: 45, scope: !5374)
!5382 = !DILocation(line: 3326, column: 9, scope: !5325)
!5383 = !DILocation(line: 3327, column: 9, scope: !5384)
!5384 = distinct !DILexicalBlock(scope: !5374, file: !3, line: 3326, column: 59)
!5385 = !DILocation(line: 3328, column: 9, scope: !5384)
!5386 = !DILocation(line: 3330, column: 25, scope: !5387)
!5387 = distinct !DILexicalBlock(scope: !5325, file: !3, line: 3330, column: 9)
!5388 = !DILocation(line: 3330, column: 31, scope: !5387)
!5389 = !DILocation(line: 3330, column: 9, scope: !5387)
!5390 = !DILocation(line: 3330, column: 44, scope: !5387)
!5391 = !DILocation(line: 3330, column: 9, scope: !5325)
!5392 = !DILocation(line: 3331, column: 48, scope: !5393)
!5393 = distinct !DILexicalBlock(scope: !5387, file: !3, line: 3330, column: 50)
!5394 = !DILocation(line: 3331, column: 9, scope: !5393)
!5395 = !DILocation(line: 3332, column: 9, scope: !5393)
!5396 = !DILocation(line: 3334, column: 19, scope: !5397)
!5397 = distinct !DILexicalBlock(scope: !5325, file: !3, line: 3334, column: 9)
!5398 = !DILocation(line: 3334, column: 14, scope: !5397)
!5399 = !DILocation(line: 3334, column: 12, scope: !5397)
!5400 = !DILocation(line: 3334, column: 36, scope: !5397)
!5401 = !DILocation(line: 3334, column: 9, scope: !5325)
!5402 = !DILocation(line: 3335, column: 28, scope: !5403)
!5403 = distinct !DILexicalBlock(scope: !5397, file: !3, line: 3334, column: 43)
!5404 = !DILocation(line: 3335, column: 9, scope: !5403)
!5405 = !DILocation(line: 3336, column: 9, scope: !5403)
!5406 = !DILocation(line: 3338, column: 15, scope: !5407)
!5407 = distinct !DILexicalBlock(scope: !5325, file: !3, line: 3338, column: 9)
!5408 = !DILocation(line: 3338, column: 9, scope: !5407)
!5409 = !DILocation(line: 3338, column: 23, scope: !5407)
!5410 = !DILocation(line: 3338, column: 9, scope: !5325)
!5411 = !DILocation(line: 3338, column: 28, scope: !5407)
!5412 = !DILabel(scope: !5413, name: "stat_failure", file: !3, line: 3339)
!5413 = distinct !DILexicalBlock(scope: !5407, file: !3, line: 3338, column: 28)
!5414 = !DILocation(line: 3339, column: 9, scope: !5413)
!5415 = !DILocation(line: 3340, column: 22, scope: !5413)
!5416 = !DILocation(line: 3340, column: 16, scope: !5413)
!5417 = !DILocation(line: 3341, column: 9, scope: !5413)
!5418 = !DILocation(line: 3342, column: 9, scope: !5413)
!5419 = !DILocation(line: 3344, column: 9, scope: !5420)
!5420 = distinct !DILexicalBlock(scope: !5325, file: !3, line: 3344, column: 9)
!5421 = !DILocation(line: 3344, column: 9, scope: !5325)
!5422 = !DILocation(line: 3345, column: 18, scope: !5423)
!5423 = distinct !DILexicalBlock(scope: !5424, file: !3, line: 3345, column: 13)
!5424 = distinct !DILexicalBlock(scope: !5420, file: !3, line: 3344, column: 30)
!5425 = !DILocation(line: 3345, column: 13, scope: !5423)
!5426 = !DILocation(line: 3345, column: 29, scope: !5423)
!5427 = !DILocation(line: 3345, column: 13, scope: !5424)
!5428 = !DILocation(line: 3346, column: 13, scope: !5429)
!5429 = distinct !DILexicalBlock(scope: !5423, file: !3, line: 3345, column: 34)
!5430 = !DILocation(line: 3348, column: 5, scope: !5424)
!5431 = !DILocation(line: 3349, column: 9, scope: !5432)
!5432 = distinct !DILexicalBlock(scope: !5325, file: !3, line: 3349, column: 9)
!5433 = !DILocation(line: 3349, column: 24, scope: !5432)
!5434 = !DILocation(line: 3349, column: 19, scope: !5432)
!5435 = !DILocation(line: 3349, column: 9, scope: !5325)
!5436 = !DILocation(line: 3350, column: 22, scope: !5437)
!5437 = distinct !DILexicalBlock(scope: !5432, file: !3, line: 3349, column: 33)
!5438 = !DILocation(line: 3350, column: 16, scope: !5437)
!5439 = !DILocation(line: 3352, column: 30, scope: !5437)
!5440 = !DILocation(line: 3352, column: 56, scope: !5437)
!5441 = !DILocation(line: 3351, column: 9, scope: !5437)
!5442 = !DILocation(line: 3353, column: 9, scope: !5437)
!5443 = !DILocation(line: 3355, column: 10, scope: !5444)
!5444 = distinct !DILexicalBlock(scope: !5325, file: !3, line: 3355, column: 9)
!5445 = !DILocation(line: 3355, column: 30, scope: !5444)
!5446 = !DILocation(line: 3355, column: 45, scope: !5444)
!5447 = !DILocation(line: 3355, column: 59, scope: !5444)
!5448 = !DILocation(line: 3355, column: 53, scope: !5444)
!5449 = !DILocation(line: 3355, column: 9, scope: !5325)
!5450 = !DILocation(line: 3356, column: 22, scope: !5451)
!5451 = distinct !DILexicalBlock(scope: !5444, file: !3, line: 3355, column: 69)
!5452 = !DILocation(line: 3356, column: 16, scope: !5451)
!5453 = !DILocation(line: 3357, column: 9, scope: !5451)
!5454 = !DILocation(line: 3358, column: 9, scope: !5451)
!5455 = !DILocation(line: 3360, column: 9, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !5325, file: !3, line: 3360, column: 9)
!5457 = !DILocation(line: 3360, column: 15, scope: !5456)
!5458 = !DILocation(line: 3360, column: 20, scope: !5456)
!5459 = !DILocation(line: 3360, column: 26, scope: !5456)
!5460 = !DILocation(line: 3360, column: 36, scope: !5456)
!5461 = !DILocation(line: 3360, column: 33, scope: !5456)
!5462 = !DILocation(line: 3360, column: 42, scope: !5456)
!5463 = !DILocation(line: 3360, column: 45, scope: !5456)
!5464 = !DILocation(line: 3360, column: 51, scope: !5456)
!5465 = !DILocation(line: 3360, column: 9, scope: !5325)
!5466 = !DILocation(line: 3361, column: 22, scope: !5467)
!5467 = distinct !DILexicalBlock(scope: !5456, file: !3, line: 3360, column: 57)
!5468 = !DILocation(line: 3361, column: 16, scope: !5467)
!5469 = !DILocation(line: 3362, column: 9, scope: !5467)
!5470 = !DILocation(line: 3363, column: 9, scope: !5467)
!5471 = !DILocation(line: 3377, column: 5, scope: !5325)
!5472 = !DILocation(line: 3378, column: 9, scope: !5473)
!5473 = distinct !DILexicalBlock(scope: !5325, file: !3, line: 3378, column: 9)
!5474 = !DILocation(line: 3378, column: 16, scope: !5473)
!5475 = !DILocation(line: 3378, column: 9, scope: !5325)
!5476 = !DILocation(line: 3379, column: 22, scope: !5477)
!5477 = distinct !DILexicalBlock(scope: !5473, file: !3, line: 3378, column: 23)
!5478 = !DILocation(line: 3379, column: 16, scope: !5477)
!5479 = !DILocation(line: 3380, column: 9, scope: !5477)
!5480 = !DILocation(line: 3383, column: 10, scope: !5481)
!5481 = distinct !DILexicalBlock(scope: !5325, file: !3, line: 3383, column: 9)
!5482 = !DILocation(line: 3383, column: 21, scope: !5481)
!5483 = !DILocation(line: 3383, column: 28, scope: !5481)
!5484 = !DILocation(line: 3383, column: 9, scope: !5325)
!5485 = !DILocation(line: 3384, column: 9, scope: !5486)
!5486 = distinct !DILexicalBlock(scope: !5481, file: !3, line: 3383, column: 34)
!5487 = !DILocation(line: 3385, column: 5, scope: !5486)
!5488 = !DILocation(line: 3387, column: 12, scope: !5489)
!5489 = distinct !DILexicalBlock(scope: !5325, file: !3, line: 3387, column: 9)
!5490 = !DILocation(line: 3387, column: 22, scope: !5489)
!5491 = !DILocation(line: 3387, column: 20, scope: !5489)
!5492 = !DILocation(line: 3387, column: 32, scope: !5489)
!5493 = !DILocation(line: 3387, column: 9, scope: !5325)
!5494 = !DILocation(line: 3388, column: 52, scope: !5495)
!5495 = distinct !DILexicalBlock(scope: !5489, file: !3, line: 3387, column: 40)
!5496 = !DILocation(line: 3388, column: 62, scope: !5495)
!5497 = !DILocation(line: 3388, column: 60, scope: !5495)
!5498 = !DILocation(line: 3388, column: 48, scope: !5495)
!5499 = !DILocation(line: 3388, column: 73, scope: !5495)
!5500 = !DILocation(line: 3388, column: 9, scope: !5495)
!5501 = !DILocation(line: 3389, column: 5, scope: !5495)
!5502 = !DILocation(line: 3390, column: 5, scope: !5325)
!5503 = !DILocation(line: 3396, column: 24, scope: !5325)
!5504 = !DILocation(line: 3397, column: 5, scope: !5325)
!5505 = !DILocation(line: 3421, column: 26, scope: !5325)
!5506 = !DILocation(line: 3421, column: 43, scope: !5325)
!5507 = !DILocation(line: 3421, column: 12, scope: !5325)
!5508 = !DILocation(line: 3424, column: 15, scope: !5325)
!5509 = !DILocation(line: 3424, column: 13, scope: !5325)
!5510 = !DILocation(line: 3426, column: 32, scope: !5511)
!5511 = distinct !DILexicalBlock(scope: !5325, file: !3, line: 3426, column: 9)
!5512 = !DILocation(line: 3426, column: 42, scope: !5511)
!5513 = !DILocation(line: 3426, column: 51, scope: !5511)
!5514 = !DILocation(line: 3426, column: 59, scope: !5511)
!5515 = !DILocation(line: 3426, column: 65, scope: !5511)
!5516 = !DILocation(line: 3427, column: 20, scope: !5511)
!5517 = !DILocation(line: 3427, column: 34, scope: !5511)
!5518 = !DILocation(line: 3427, column: 45, scope: !5511)
!5519 = !DILocation(line: 3427, column: 50, scope: !5511)
!5520 = !DILocation(line: 3428, column: 20, scope: !5511)
!5521 = !DILocation(line: 3426, column: 9, scope: !5511)
!5522 = !DILocation(line: 3428, column: 45, scope: !5511)
!5523 = !DILocation(line: 3426, column: 9, scope: !5325)
!5524 = !DILocation(line: 3429, column: 15, scope: !5525)
!5525 = distinct !DILexicalBlock(scope: !5511, file: !3, line: 3428, column: 51)
!5526 = !DILocation(line: 3429, column: 13, scope: !5525)
!5527 = !DILocation(line: 3430, column: 9, scope: !5525)
!5528 = !DILocation(line: 3431, column: 5, scope: !5525)
!5529 = !DILocation(line: 3432, column: 13, scope: !5530)
!5530 = distinct !DILexicalBlock(scope: !5511, file: !3, line: 3431, column: 12)
!5531 = !DILocation(line: 3435, column: 18, scope: !5325)
!5532 = !DILocation(line: 3435, column: 12, scope: !5325)
!5533 = !DILocation(line: 3436, column: 5, scope: !5325)
!5534 = !DILocation(line: 3437, column: 9, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5325, file: !3, line: 3437, column: 9)
!5536 = !DILocation(line: 3437, column: 13, scope: !5535)
!5537 = !DILocation(line: 3437, column: 9, scope: !5325)
!5538 = !DILocation(line: 3438, column: 9, scope: !5539)
!5539 = distinct !DILexicalBlock(scope: !5535, file: !3, line: 3437, column: 19)
!5540 = !DILocation(line: 3439, column: 5, scope: !5539)
!5541 = !DILocation(line: 3440, column: 29, scope: !5325)
!5542 = !DILocation(line: 3440, column: 16, scope: !5325)
!5543 = !DILocation(line: 3441, column: 43, scope: !5325)
!5544 = !DILocation(line: 3441, column: 61, scope: !5325)
!5545 = !DILocation(line: 3441, column: 70, scope: !5325)
!5546 = !DILocation(line: 3441, column: 5, scope: !5325)
!5547 = !DILabel(scope: !5325, name: "end", file: !3, line: 3443)
!5548 = !DILocation(line: 3443, column: 5, scope: !5325)
!5549 = !DILocation(line: 3444, column: 15, scope: !5325)
!5550 = !DILocation(line: 3445, column: 1, scope: !5325)
!5551 = distinct !DISubprogram(name: "displayopenfailure", scope: !3, file: !3, line: 2898, type: !527, scopeLine: 2899, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!5552 = !DILocalVariable(name: "name", arg: 1, scope: !5551, file: !3, line: 2898, type: !529)
!5553 = !DILocation(line: 2898, column: 51, scope: !5551)
!5554 = !DILocalVariable(name: "buffer", scope: !5551, file: !3, line: 2900, type: !5555)
!5555 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 33104, elements: !5556)
!5556 = !{!5557}
!5557 = !DISubrange(count: 4138)
!5558 = !DILocation(line: 2900, column: 10, scope: !5551)
!5559 = !DILocalVariable(name: "e", scope: !5551, file: !3, line: 2901, type: !731)
!5560 = !DILocation(line: 2901, column: 15, scope: !5551)
!5561 = !DILocation(line: 2901, column: 19, scope: !5551)
!5562 = !DILocation(line: 2903, column: 9, scope: !5563)
!5563 = distinct !DILexicalBlock(scope: !5551, file: !3, line: 2903, column: 9)
!5564 = !DILocation(line: 2903, column: 9, scope: !5551)
!5565 = !DILocation(line: 2905, column: 9, scope: !5566)
!5566 = distinct !DILexicalBlock(scope: !5563, file: !3, line: 2904, column: 33)
!5567 = !DILocation(line: 2907, column: 13, scope: !5551)
!5568 = !DILocation(line: 2907, column: 5, scope: !5551)
!5569 = !DILocation(line: 2907, column: 11, scope: !5551)
!5570 = !DILocation(line: 2908, column: 16, scope: !5551)
!5571 = !DILocation(line: 2908, column: 5, scope: !5551)
!5572 = !DILocation(line: 2909, column: 1, scope: !5551)
!5573 = distinct !DISubprogram(name: "get_usec_time", scope: !3, file: !3, line: 2783, type: !5574, scopeLine: 2784, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!5574 = !DISubroutineType(types: !5575)
!5575 = !{!336}
!5576 = !DILocalVariable(name: "tv", scope: !5573, file: !3, line: 2785, type: !5577)
!5577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !5578, line: 8, size: 128, elements: !5579)
!5578 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h", directory: "")
!5579 = !{!5580, !5581}
!5580 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !5577, file: !5578, line: 10, baseType: !333, size: 64)
!5581 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !5577, file: !5578, line: 11, baseType: !5582, size: 64, offset: 64)
!5582 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !313, line: 162, baseType: !334)
!5583 = !DILocation(line: 2785, column: 20, scope: !5573)
!5584 = !DILocalVariable(name: "tz", scope: !5573, file: !3, line: 2786, type: !5585)
!5585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timezone", file: !5586, line: 52, size: 64, elements: !5587)
!5586 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/time.h", directory: "")
!5587 = !{!5588, !5589}
!5588 = !DIDerivedType(tag: DW_TAG_member, name: "tz_minuteswest", scope: !5585, file: !5586, line: 54, baseType: !326, size: 32)
!5589 = !DIDerivedType(tag: DW_TAG_member, name: "tz_dsttime", scope: !5585, file: !5586, line: 55, baseType: !326, size: 32, offset: 32)
!5590 = !DILocation(line: 2786, column: 21, scope: !5573)
!5591 = !DILocation(line: 2788, column: 27, scope: !5592)
!5592 = distinct !DILexicalBlock(scope: !5573, file: !3, line: 2788, column: 9)
!5593 = !DILocation(line: 2788, column: 9, scope: !5592)
!5594 = !DILocation(line: 2788, column: 32, scope: !5592)
!5595 = !DILocation(line: 2788, column: 9, scope: !5573)
!5596 = !DILocation(line: 2789, column: 9, scope: !5597)
!5597 = distinct !DILexicalBlock(scope: !5592, file: !3, line: 2788, column: 37)
!5598 = !DILocation(line: 2791, column: 24, scope: !5573)
!5599 = !DILocation(line: 2791, column: 12, scope: !5573)
!5600 = !DILocation(line: 2791, column: 46, scope: !5573)
!5601 = !DILocation(line: 2791, column: 34, scope: !5573)
!5602 = !DILocation(line: 2791, column: 55, scope: !5573)
!5603 = !DILocation(line: 2791, column: 31, scope: !5573)
!5604 = !DILocation(line: 2791, column: 5, scope: !5573)
!5605 = !DILocation(line: 2792, column: 1, scope: !5573)
!5606 = distinct !DISubprogram(name: "dlmap_init", scope: !3, file: !3, line: 3028, type: !5607, scopeLine: 3033, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!5607 = !DISubroutineType(types: !5608)
!5608 = !{!326, !5609, !731, !892, !731, !529, !731, !892, !3330, !731, !1251}
!5609 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5610)
!5610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5329, size: 64)
!5611 = !DILocalVariable(name: "dlhandler", arg: 1, scope: !5606, file: !3, line: 3028, type: !5609)
!5612 = !DILocation(line: 3028, column: 41, scope: !5606)
!5613 = !DILocalVariable(name: "clientfd", arg: 2, scope: !5606, file: !3, line: 3028, type: !731)
!5614 = !DILocation(line: 3028, column: 62, scope: !5606)
!5615 = !DILocalVariable(name: "tls_clientfd", arg: 3, scope: !5606, file: !3, line: 3029, type: !892)
!5616 = !DILocation(line: 3029, column: 36, scope: !5606)
!5617 = !DILocalVariable(name: "xferfd", arg: 4, scope: !5606, file: !3, line: 3029, type: !731)
!5618 = !DILocation(line: 3029, column: 60, scope: !5606)
!5619 = !DILocalVariable(name: "name", arg: 5, scope: !5606, file: !3, line: 3030, type: !529)
!5620 = !DILocation(line: 3030, column: 42, scope: !5606)
!5621 = !DILocalVariable(name: "f", arg: 6, scope: !5606, file: !3, line: 3030, type: !731)
!5622 = !DILocation(line: 3030, column: 58, scope: !5606)
!5623 = !DILocalVariable(name: "tls_fd", arg: 7, scope: !5606, file: !3, line: 3031, type: !892)
!5624 = !DILocation(line: 3031, column: 36, scope: !5606)
!5625 = !DILocalVariable(name: "restartat", arg: 8, scope: !5606, file: !3, line: 3031, type: !3330)
!5626 = !DILocation(line: 3031, column: 56, scope: !5606)
!5627 = !DILocalVariable(name: "ascii_mode", arg: 9, scope: !5606, file: !3, line: 3032, type: !731)
!5628 = !DILocation(line: 3032, column: 33, scope: !5606)
!5629 = !DILocalVariable(name: "bandwidth", arg: 10, scope: !5606, file: !3, line: 3032, type: !1251)
!5630 = !DILocation(line: 3032, column: 65, scope: !5606)
!5631 = !DILocation(line: 3034, column: 24, scope: !5632)
!5632 = distinct !DILexicalBlock(scope: !5606, file: !3, line: 3034, column: 9)
!5633 = !DILocation(line: 3034, column: 35, scope: !5632)
!5634 = !DILocation(line: 3034, column: 45, scope: !5632)
!5635 = !DILocation(line: 3034, column: 59, scope: !5632)
!5636 = !DILocation(line: 3034, column: 67, scope: !5632)
!5637 = !DILocation(line: 3034, column: 73, scope: !5632)
!5638 = !DILocation(line: 3035, column: 24, scope: !5632)
!5639 = !DILocation(line: 3035, column: 32, scope: !5632)
!5640 = !DILocation(line: 3035, column: 43, scope: !5632)
!5641 = !DILocation(line: 3035, column: 55, scope: !5632)
!5642 = !DILocation(line: 3034, column: 9, scope: !5632)
!5643 = !DILocation(line: 3035, column: 66, scope: !5632)
!5644 = !DILocation(line: 3034, column: 9, scope: !5606)
!5645 = !DILocation(line: 3036, column: 9, scope: !5646)
!5646 = distinct !DILexicalBlock(scope: !5632, file: !3, line: 3035, column: 72)
!5647 = !DILocation(line: 3038, column: 5, scope: !5606)
!5648 = !DILocation(line: 3038, column: 16, scope: !5606)
!5649 = !DILocation(line: 3038, column: 31, scope: !5606)
!5650 = !DILocation(line: 3039, column: 9, scope: !5651)
!5651 = distinct !DILexicalBlock(scope: !5606, file: !3, line: 3039, column: 9)
!5652 = !DILocation(line: 3039, column: 20, scope: !5651)
!5653 = !DILocation(line: 3039, column: 9, scope: !5606)
!5654 = !DILocation(line: 3040, column: 41, scope: !5655)
!5655 = distinct !DILexicalBlock(scope: !5651, file: !3, line: 3039, column: 25)
!5656 = !DILocation(line: 3040, column: 52, scope: !5655)
!5657 = !DILocation(line: 3040, column: 67, scope: !5655)
!5658 = !DILocation(line: 3040, column: 9, scope: !5655)
!5659 = !DILocation(line: 3040, column: 20, scope: !5655)
!5660 = !DILocation(line: 3040, column: 39, scope: !5655)
!5661 = !DILocation(line: 3042, column: 5, scope: !5655)
!5662 = !DILocation(line: 3043, column: 9, scope: !5663)
!5663 = distinct !DILexicalBlock(scope: !5651, file: !3, line: 3042, column: 12)
!5664 = !DILocation(line: 3043, column: 20, scope: !5663)
!5665 = !DILocation(line: 3043, column: 35, scope: !5663)
!5666 = !DILocation(line: 3044, column: 13, scope: !5667)
!5667 = distinct !DILexicalBlock(scope: !5663, file: !3, line: 3044, column: 13)
!5668 = !DILocation(line: 3044, column: 23, scope: !5667)
!5669 = !DILocation(line: 3044, column: 13, scope: !5663)
!5670 = !DILocation(line: 3045, column: 45, scope: !5671)
!5671 = distinct !DILexicalBlock(scope: !5667, file: !3, line: 3044, column: 31)
!5672 = !DILocation(line: 3045, column: 56, scope: !5671)
!5673 = !DILocation(line: 3045, column: 13, scope: !5671)
!5674 = !DILocation(line: 3045, column: 24, scope: !5671)
!5675 = !DILocation(line: 3045, column: 43, scope: !5671)
!5676 = !DILocation(line: 3046, column: 9, scope: !5671)
!5677 = !DILocation(line: 3047, column: 13, scope: !5678)
!5678 = distinct !DILexicalBlock(scope: !5667, file: !3, line: 3046, column: 16)
!5679 = !DILocation(line: 3047, column: 24, scope: !5678)
!5680 = !DILocation(line: 3047, column: 43, scope: !5678)
!5681 = !DILocation(line: 3050, column: 29, scope: !5606)
!5682 = !DILocation(line: 3050, column: 40, scope: !5606)
!5683 = !DILocation(line: 3050, column: 5, scope: !5606)
!5684 = !DILocation(line: 3050, column: 16, scope: !5606)
!5685 = !DILocation(line: 3050, column: 27, scope: !5606)
!5686 = !DILocation(line: 3052, column: 26, scope: !5606)
!5687 = !DILocation(line: 3052, column: 24, scope: !5606)
!5688 = !DILocation(line: 3052, column: 36, scope: !5606)
!5689 = !DILocation(line: 3052, column: 55, scope: !5606)
!5690 = !DILocation(line: 3052, column: 65, scope: !5606)
!5691 = !DILocation(line: 3052, column: 53, scope: !5606)
!5692 = !DILocation(line: 3052, column: 51, scope: !5606)
!5693 = !DILocation(line: 3051, column: 5, scope: !5606)
!5694 = !DILocation(line: 3051, column: 16, scope: !5606)
!5695 = !DILocation(line: 3051, column: 27, scope: !5606)
!5696 = !DILocation(line: 3053, column: 26, scope: !5606)
!5697 = !DILocation(line: 3053, column: 5, scope: !5606)
!5698 = !DILocation(line: 3053, column: 16, scope: !5606)
!5699 = !DILocation(line: 3053, column: 24, scope: !5606)
!5700 = !DILocation(line: 3054, column: 5, scope: !5606)
!5701 = !DILocation(line: 3054, column: 16, scope: !5606)
!5702 = !DILocation(line: 3054, column: 26, scope: !5606)
!5703 = !DILocation(line: 3055, column: 5, scope: !5606)
!5704 = !DILocation(line: 3055, column: 16, scope: !5606)
!5705 = !DILocation(line: 3055, column: 28, scope: !5606)
!5706 = !DILocation(line: 3056, column: 5, scope: !5606)
!5707 = !DILocation(line: 3056, column: 16, scope: !5606)
!5708 = !DILocation(line: 3056, column: 27, scope: !5606)
!5709 = !DILocation(line: 3057, column: 5, scope: !5606)
!5710 = !DILocation(line: 3057, column: 16, scope: !5606)
!5711 = !DILocation(line: 3057, column: 25, scope: !5606)
!5712 = !DILocation(line: 3058, column: 29, scope: !5606)
!5713 = !DILocation(line: 3058, column: 40, scope: !5606)
!5714 = !DILocation(line: 3058, column: 5, scope: !5606)
!5715 = !DILocation(line: 3058, column: 16, scope: !5606)
!5716 = !DILocation(line: 3058, column: 27, scope: !5606)
!5717 = !DILocation(line: 3059, column: 29, scope: !5606)
!5718 = !DILocation(line: 3059, column: 40, scope: !5606)
!5719 = !DILocation(line: 3059, column: 22, scope: !5606)
!5720 = !DILocation(line: 3059, column: 5, scope: !5606)
!5721 = !DILocation(line: 3059, column: 16, scope: !5606)
!5722 = !DILocation(line: 3059, column: 20, scope: !5606)
!5723 = !DILocation(line: 3060, column: 9, scope: !5724)
!5724 = distinct !DILexicalBlock(scope: !5606, file: !3, line: 3060, column: 9)
!5725 = !DILocation(line: 3060, column: 20, scope: !5724)
!5726 = !DILocation(line: 3060, column: 24, scope: !5724)
!5727 = !DILocation(line: 3060, column: 9, scope: !5606)
!5728 = !DILocation(line: 3061, column: 9, scope: !5729)
!5729 = distinct !DILexicalBlock(scope: !5724, file: !3, line: 3060, column: 33)
!5730 = !DILocation(line: 3063, column: 5, scope: !5606)
!5731 = !DILocation(line: 3064, column: 1, scope: !5606)
!5732 = distinct !DISubprogram(name: "dlmap_send", scope: !3, file: !3, line: 3258, type: !5733, scopeLine: 3259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!5733 = !DISubroutineType(types: !5734)
!5734 = !{!326, !5609}
!5735 = !DILocalVariable(name: "dlhandler", arg: 1, scope: !5732, file: !3, line: 3258, type: !5609)
!5736 = !DILocation(line: 3258, column: 41, scope: !5732)
!5737 = !DILocalVariable(name: "ret", scope: !5732, file: !3, line: 3260, type: !326)
!5738 = !DILocation(line: 3260, column: 9, scope: !5732)
!5739 = !DILocalVariable(name: "ts_start", scope: !5732, file: !3, line: 3261, type: !336)
!5740 = !DILocation(line: 3261, column: 12, scope: !5732)
!5741 = !DILocalVariable(name: "required_sleep", scope: !5732, file: !3, line: 3262, type: !336)
!5742 = !DILocation(line: 3262, column: 12, scope: !5732)
!5743 = !DILocalVariable(name: "downloaded", scope: !5732, file: !3, line: 3263, type: !344)
!5744 = !DILocation(line: 3263, column: 11, scope: !5732)
!5745 = !DILocation(line: 3265, column: 9, scope: !5746)
!5746 = distinct !DILexicalBlock(scope: !5732, file: !3, line: 3265, column: 9)
!5747 = !DILocation(line: 3265, column: 20, scope: !5746)
!5748 = !DILocation(line: 3265, column: 30, scope: !5746)
!5749 = !DILocation(line: 3265, column: 36, scope: !5746)
!5750 = !DILocation(line: 3265, column: 51, scope: !5746)
!5751 = !DILocation(line: 3265, column: 49, scope: !5746)
!5752 = !DILocation(line: 3265, column: 68, scope: !5746)
!5753 = !DILocation(line: 3265, column: 9, scope: !5732)
!5754 = !DILocation(line: 3266, column: 9, scope: !5755)
!5755 = distinct !DILexicalBlock(scope: !5746, file: !3, line: 3265, column: 76)
!5756 = !DILocation(line: 3267, column: 9, scope: !5755)
!5757 = !DILocation(line: 3269, column: 20, scope: !5732)
!5758 = !DILocation(line: 3270, column: 5, scope: !5732)
!5759 = !DILocation(line: 3271, column: 28, scope: !5760)
!5760 = distinct !DILexicalBlock(scope: !5761, file: !3, line: 3270, column: 14)
!5761 = distinct !DILexicalBlock(scope: !5762, file: !3, line: 3270, column: 5)
!5762 = distinct !DILexicalBlock(scope: !5732, file: !3, line: 3270, column: 5)
!5763 = !DILocation(line: 3271, column: 15, scope: !5760)
!5764 = !DILocation(line: 3271, column: 13, scope: !5760)
!5765 = !DILocation(line: 3272, column: 13, scope: !5766)
!5766 = distinct !DILexicalBlock(scope: !5760, file: !3, line: 3272, column: 13)
!5767 = !DILocation(line: 3272, column: 17, scope: !5766)
!5768 = !DILocation(line: 3272, column: 13, scope: !5760)
!5769 = !DILocation(line: 3273, column: 13, scope: !5770)
!5770 = distinct !DILexicalBlock(scope: !5766, file: !3, line: 3272, column: 22)
!5771 = !DILocation(line: 3275, column: 13, scope: !5772)
!5772 = distinct !DILexicalBlock(scope: !5760, file: !3, line: 3275, column: 13)
!5773 = !DILocation(line: 3275, column: 17, scope: !5772)
!5774 = !DILocation(line: 3275, column: 13, scope: !5760)
!5775 = !DILocation(line: 3276, column: 13, scope: !5776)
!5776 = distinct !DILexicalBlock(scope: !5772, file: !3, line: 3275, column: 23)
!5777 = !DILocation(line: 3278, column: 24, scope: !5778)
!5778 = distinct !DILexicalBlock(scope: !5760, file: !3, line: 3278, column: 13)
!5779 = !DILocation(line: 3278, column: 35, scope: !5778)
!5780 = !DILocation(line: 3278, column: 46, scope: !5778)
!5781 = !DILocation(line: 3278, column: 56, scope: !5778)
!5782 = !DILocation(line: 3278, column: 67, scope: !5778)
!5783 = !DILocation(line: 3278, column: 13, scope: !5778)
!5784 = !DILocation(line: 3279, column: 37, scope: !5778)
!5785 = !DILocation(line: 3278, column: 13, scope: !5760)
!5786 = !DILocation(line: 3280, column: 13, scope: !5787)
!5787 = distinct !DILexicalBlock(scope: !5778, file: !3, line: 3279, column: 43)
!5788 = !DILocation(line: 3282, column: 31, scope: !5760)
!5789 = !DILocation(line: 3282, column: 42, scope: !5760)
!5790 = !DILocation(line: 3282, column: 9, scope: !5760)
!5791 = !DILocation(line: 3282, column: 20, scope: !5760)
!5792 = !DILocation(line: 3282, column: 28, scope: !5760)
!5793 = !DILocation(line: 3288, column: 40, scope: !5760)
!5794 = !DILocation(line: 3288, column: 9, scope: !5760)
!5795 = !DILocation(line: 3288, column: 20, scope: !5760)
!5796 = !DILocation(line: 3288, column: 37, scope: !5760)
!5797 = !DILocation(line: 3289, column: 24, scope: !5760)
!5798 = !DILocation(line: 3290, column: 13, scope: !5799)
!5799 = distinct !DILexicalBlock(scope: !5760, file: !3, line: 3290, column: 13)
!5800 = !DILocation(line: 3290, column: 24, scope: !5799)
!5801 = !DILocation(line: 3290, column: 34, scope: !5799)
!5802 = !DILocation(line: 3290, column: 13, scope: !5760)
!5803 = !DILocation(line: 3291, column: 32, scope: !5804)
!5804 = distinct !DILexicalBlock(scope: !5799, file: !3, line: 3290, column: 41)
!5805 = !DILocation(line: 3291, column: 43, scope: !5804)
!5806 = !DILocation(line: 3291, column: 55, scope: !5804)
!5807 = !DILocation(line: 3291, column: 13, scope: !5804)
!5808 = !DILocation(line: 3293, column: 9, scope: !5804)
!5809 = !DILocation(line: 3294, column: 41, scope: !5760)
!5810 = !DILocation(line: 3294, column: 52, scope: !5760)
!5811 = !DILocation(line: 3294, column: 15, scope: !5760)
!5812 = !DILocation(line: 3294, column: 13, scope: !5760)
!5813 = !DILocation(line: 3295, column: 13, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5760, file: !3, line: 3295, column: 13)
!5815 = !DILocation(line: 3295, column: 17, scope: !5814)
!5816 = !DILocation(line: 3295, column: 13, scope: !5760)
!5817 = !DILocation(line: 3296, column: 20, scope: !5818)
!5818 = distinct !DILexicalBlock(scope: !5814, file: !3, line: 3295, column: 23)
!5819 = !DILocation(line: 3296, column: 13, scope: !5818)
!5820 = !DILocation(line: 3270, column: 5, scope: !5761)
!5821 = distinct !{!5821, !5822, !5823}
!5822 = !DILocation(line: 3270, column: 5, scope: !5762)
!5823 = !DILocation(line: 3298, column: 5, scope: !5762)
!5824 = !DILocation(line: 3299, column: 5, scope: !5732)
!5825 = !DILocation(line: 3300, column: 1, scope: !5732)
!5826 = distinct !DISubprogram(name: "dlmap_exit", scope: !3, file: !3, line: 3302, type: !5733, scopeLine: 3303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!5827 = !DILocalVariable(name: "dlhandler", arg: 1, scope: !5826, file: !3, line: 3302, type: !5609)
!5828 = !DILocation(line: 3302, column: 41, scope: !5826)
!5829 = !DILocation(line: 3304, column: 9, scope: !5830)
!5830 = distinct !DILexicalBlock(scope: !5826, file: !3, line: 3304, column: 9)
!5831 = !DILocation(line: 3304, column: 20, scope: !5830)
!5832 = !DILocation(line: 3304, column: 24, scope: !5830)
!5833 = !DILocation(line: 3304, column: 9, scope: !5826)
!5834 = !DILocation(line: 3305, column: 14, scope: !5835)
!5835 = distinct !DILexicalBlock(scope: !5830, file: !3, line: 3304, column: 33)
!5836 = !DILocation(line: 3305, column: 25, scope: !5835)
!5837 = !DILocation(line: 3305, column: 9, scope: !5835)
!5838 = !DILocation(line: 3306, column: 9, scope: !5835)
!5839 = !DILocation(line: 3306, column: 20, scope: !5835)
!5840 = !DILocation(line: 3306, column: 24, scope: !5835)
!5841 = !DILocation(line: 3307, column: 9, scope: !5835)
!5842 = !DILocation(line: 3307, column: 20, scope: !5835)
!5843 = !DILocation(line: 3307, column: 31, scope: !5835)
!5844 = !DILocation(line: 3308, column: 9, scope: !5835)
!5845 = !DILocation(line: 3308, column: 20, scope: !5835)
!5846 = !DILocation(line: 3308, column: 31, scope: !5835)
!5847 = !DILocation(line: 3309, column: 5, scope: !5835)
!5848 = !DILocation(line: 3310, column: 5, scope: !5826)
!5849 = distinct !DISubprogram(name: "displayrate", scope: !3, file: !3, line: 2794, type: !5850, scopeLine: 2797, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!5850 = !DISubroutineType(types: !5851)
!5851 = !{null, !385, !344, !3364, !529, !326}
!5852 = !DILocalVariable(name: "word", arg: 1, scope: !5849, file: !3, line: 2794, type: !385)
!5853 = !DILocation(line: 2794, column: 37, scope: !5849)
!5854 = !DILocalVariable(name: "size", arg: 2, scope: !5849, file: !3, line: 2794, type: !344)
!5855 = !DILocation(line: 2794, column: 49, scope: !5849)
!5856 = !DILocalVariable(name: "started", arg: 3, scope: !5849, file: !3, line: 2795, type: !3364)
!5857 = !DILocation(line: 2795, column: 38, scope: !5849)
!5858 = !DILocalVariable(name: "name", arg: 4, scope: !5849, file: !3, line: 2796, type: !529)
!5859 = !DILocation(line: 2796, column: 44, scope: !5849)
!5860 = !DILocalVariable(name: "up", arg: 5, scope: !5849, file: !3, line: 2796, type: !326)
!5861 = !DILocation(line: 2796, column: 54, scope: !5849)
!5862 = !DILocalVariable(name: "ended", scope: !5849, file: !3, line: 2798, type: !336)
!5863 = !DILocation(line: 2798, column: 12, scope: !5849)
!5864 = !DILocalVariable(name: "t", scope: !5849, file: !3, line: 2799, type: !336)
!5865 = !DILocation(line: 2799, column: 12, scope: !5849)
!5866 = !DILocalVariable(name: "speed", scope: !5849, file: !3, line: 2800, type: !336)
!5867 = !DILocation(line: 2800, column: 12, scope: !5849)
!5868 = !DILocalVariable(name: "speedstring", scope: !5849, file: !3, line: 2801, type: !3507)
!5869 = !DILocation(line: 2801, column: 10, scope: !5849)
!5870 = !DILocation(line: 2803, column: 13, scope: !5849)
!5871 = !DILocation(line: 2803, column: 11, scope: !5849)
!5872 = !DILocation(line: 2805, column: 9, scope: !5849)
!5873 = !DILocation(line: 2805, column: 17, scope: !5849)
!5874 = !DILocation(line: 2805, column: 15, scope: !5849)
!5875 = !DILocation(line: 2805, column: 7, scope: !5849)
!5876 = !DILocation(line: 2806, column: 9, scope: !5877)
!5877 = distinct !DILexicalBlock(scope: !5849, file: !3, line: 2806, column: 9)
!5878 = !DILocation(line: 2806, column: 11, scope: !5877)
!5879 = !DILocation(line: 2806, column: 17, scope: !5877)
!5880 = !DILocation(line: 2806, column: 20, scope: !5877)
!5881 = !DILocation(line: 2806, column: 25, scope: !5877)
!5882 = !DILocation(line: 2806, column: 9, scope: !5849)
!5883 = !DILocation(line: 2807, column: 17, scope: !5884)
!5884 = distinct !DILexicalBlock(scope: !5877, file: !3, line: 2806, column: 38)
!5885 = !DILocation(line: 2807, column: 24, scope: !5884)
!5886 = !DILocation(line: 2807, column: 22, scope: !5884)
!5887 = !DILocation(line: 2807, column: 15, scope: !5884)
!5888 = !DILocation(line: 2808, column: 5, scope: !5884)
!5889 = !DILocation(line: 2809, column: 15, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !5877, file: !3, line: 2808, column: 12)
!5891 = !DILocation(line: 2811, column: 9, scope: !5892)
!5892 = distinct !DILexicalBlock(scope: !5849, file: !3, line: 2811, column: 9)
!5893 = !DILocation(line: 2811, column: 15, scope: !5892)
!5894 = !DILocation(line: 2811, column: 9, scope: !5849)
!5895 = !DILocation(line: 2812, column: 42, scope: !5896)
!5896 = distinct !DILexicalBlock(scope: !5892, file: !3, line: 2811, column: 27)
!5897 = !DILocation(line: 2812, column: 45, scope: !5896)
!5898 = !DILocation(line: 2812, column: 51, scope: !5896)
!5899 = !DILocation(line: 2812, column: 9, scope: !5896)
!5900 = !DILocation(line: 2813, column: 5, scope: !5896)
!5901 = !DILocation(line: 2813, column: 16, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !5892, file: !3, line: 2813, column: 16)
!5903 = !DILocation(line: 2813, column: 22, scope: !5902)
!5904 = !DILocation(line: 2813, column: 16, scope: !5892)
!5905 = !DILocation(line: 2814, column: 42, scope: !5906)
!5906 = distinct !DILexicalBlock(scope: !5902, file: !3, line: 2813, column: 31)
!5907 = !DILocation(line: 2814, column: 45, scope: !5906)
!5908 = !DILocation(line: 2814, column: 51, scope: !5906)
!5909 = !DILocation(line: 2814, column: 9, scope: !5906)
!5910 = !DILocation(line: 2815, column: 5, scope: !5906)
!5911 = !DILocation(line: 2815, column: 16, scope: !5912)
!5912 = distinct !DILexicalBlock(scope: !5902, file: !3, line: 2815, column: 16)
!5913 = !DILocation(line: 2815, column: 22, scope: !5912)
!5914 = !DILocation(line: 2815, column: 16, scope: !5902)
!5915 = !DILocation(line: 2816, column: 42, scope: !5916)
!5916 = distinct !DILexicalBlock(scope: !5912, file: !3, line: 2815, column: 29)
!5917 = !DILocation(line: 2816, column: 45, scope: !5916)
!5918 = !DILocation(line: 2816, column: 9, scope: !5916)
!5919 = !DILocation(line: 2817, column: 5, scope: !5916)
!5920 = !DILocation(line: 2818, column: 10, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5849, file: !3, line: 2818, column: 9)
!5922 = !DILocation(line: 2818, column: 9, scope: !5849)
!5923 = !DILocation(line: 2822, column: 47, scope: !5924)
!5924 = distinct !DILexicalBlock(scope: !5921, file: !3, line: 2821, column: 39)
!5925 = !DILocation(line: 2823, column: 18, scope: !5924)
!5926 = !DILocation(line: 2823, column: 17, scope: !5924)
!5927 = !DILocation(line: 2823, column: 23, scope: !5924)
!5928 = !DILocation(line: 2824, column: 19, scope: !5924)
!5929 = !DILocation(line: 2824, column: 18, scope: !5924)
!5930 = !DILocation(line: 2824, column: 24, scope: !5924)
!5931 = !DILocation(line: 2824, column: 31, scope: !5924)
!5932 = !DILocation(line: 2824, column: 36, scope: !5924)
!5933 = !DILocation(line: 2824, column: 40, scope: !5924)
!5934 = !DILocation(line: 2824, column: 46, scope: !5924)
!5935 = !DILocation(line: 2824, column: 57, scope: !5924)
!5936 = !DILocation(line: 2824, column: 43, scope: !5924)
!5937 = !DILocation(line: 2824, column: 62, scope: !5924)
!5938 = !DILocation(line: 0, scope: !5924)
!5939 = !DILocation(line: 2824, column: 17, scope: !5924)
!5940 = !DILocation(line: 2825, column: 29, scope: !5924)
!5941 = !DILocation(line: 2825, column: 35, scope: !5924)
!5942 = !DILocation(line: 2825, column: 41, scope: !5924)
!5943 = !DILocation(line: 2822, column: 9, scope: !5924)
!5944 = !DILocation(line: 2826, column: 5, scope: !5924)
!5945 = !DILocation(line: 2894, column: 12, scope: !5849)
!5946 = !DILocation(line: 2896, column: 1, scope: !5849)
!5947 = distinct !DISubprogram(name: "_dlmap_remap", scope: !3, file: !3, line: 3103, type: !5733, scopeLine: 3104, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!5948 = !DILocalVariable(name: "dlhandler", arg: 1, scope: !5947, file: !3, line: 3103, type: !5609)
!5949 = !DILocation(line: 3103, column: 43, scope: !5947)
!5950 = !DILocalVariable(name: "min_dlmap_size", scope: !5947, file: !3, line: 3105, type: !304)
!5951 = !DILocation(line: 3105, column: 12, scope: !5947)
!5952 = !DILocalVariable(name: "remaining", scope: !5947, file: !3, line: 3106, type: !344)
!5953 = !DILocation(line: 3106, column: 11, scope: !5947)
!5954 = !DILocation(line: 3108, column: 9, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !5947, file: !3, line: 3108, column: 9)
!5956 = !DILocation(line: 3108, column: 20, scope: !5955)
!5957 = !DILocation(line: 3108, column: 29, scope: !5955)
!5958 = !DILocation(line: 3108, column: 9, scope: !5947)
!5959 = !DILocation(line: 3109, column: 13, scope: !5960)
!5960 = distinct !DILexicalBlock(scope: !5961, file: !3, line: 3109, column: 13)
!5961 = distinct !DILexicalBlock(scope: !5955, file: !3, line: 3108, column: 38)
!5962 = !DILocation(line: 3109, column: 24, scope: !5960)
!5963 = !DILocation(line: 3109, column: 35, scope: !5960)
!5964 = !DILocation(line: 3109, column: 46, scope: !5960)
!5965 = !DILocation(line: 3109, column: 32, scope: !5960)
!5966 = !DILocation(line: 3109, column: 56, scope: !5960)
!5967 = !DILocation(line: 3110, column: 13, scope: !5960)
!5968 = !DILocation(line: 3110, column: 24, scope: !5960)
!5969 = !DILocation(line: 3110, column: 34, scope: !5960)
!5970 = !DILocation(line: 3110, column: 45, scope: !5960)
!5971 = !DILocation(line: 3110, column: 32, scope: !5960)
!5972 = !DILocation(line: 3111, column: 13, scope: !5960)
!5973 = !DILocation(line: 3111, column: 24, scope: !5960)
!5974 = !DILocation(line: 3111, column: 44, scope: !5960)
!5975 = !DILocation(line: 3111, column: 55, scope: !5960)
!5976 = !DILocation(line: 3111, column: 34, scope: !5960)
!5977 = !DILocation(line: 3110, column: 56, scope: !5960)
!5978 = !DILocation(line: 3109, column: 13, scope: !5961)
!5979 = !DILocation(line: 3112, column: 17, scope: !5980)
!5980 = distinct !DILexicalBlock(scope: !5981, file: !3, line: 3112, column: 17)
!5981 = distinct !DILexicalBlock(scope: !5960, file: !3, line: 3111, column: 67)
!5982 = !DILocation(line: 3112, column: 28, scope: !5980)
!5983 = !DILocation(line: 3112, column: 38, scope: !5980)
!5984 = !DILocation(line: 3112, column: 49, scope: !5980)
!5985 = !DILocation(line: 3112, column: 36, scope: !5980)
!5986 = !DILocation(line: 3112, column: 59, scope: !5980)
!5987 = !DILocation(line: 3113, column: 17, scope: !5980)
!5988 = !DILocation(line: 3113, column: 28, scope: !5980)
!5989 = !DILocation(line: 3113, column: 38, scope: !5980)
!5990 = !DILocation(line: 3113, column: 49, scope: !5980)
!5991 = !DILocation(line: 3113, column: 36, scope: !5980)
!5992 = !DILocation(line: 3114, column: 25, scope: !5980)
!5993 = !DILocation(line: 3114, column: 36, scope: !5980)
!5994 = !DILocation(line: 3113, column: 59, scope: !5980)
!5995 = !DILocation(line: 3112, column: 17, scope: !5981)
!5996 = !DILocation(line: 3115, column: 17, scope: !5997)
!5997 = distinct !DILexicalBlock(scope: !5980, file: !3, line: 3114, column: 48)
!5998 = !DILocation(line: 3116, column: 17, scope: !5997)
!5999 = !DILocation(line: 3119, column: 17, scope: !5981)
!6000 = !DILocation(line: 3119, column: 28, scope: !5981)
!6001 = !DILocation(line: 3119, column: 34, scope: !5981)
!6002 = !DILocation(line: 3119, column: 45, scope: !5981)
!6003 = !DILocation(line: 3119, column: 32, scope: !5981)
!6004 = !DILocation(line: 3119, column: 55, scope: !5981)
!6005 = !DILocation(line: 3119, column: 66, scope: !5981)
!6006 = !DILocation(line: 3119, column: 53, scope: !5981)
!6007 = !DILocation(line: 3118, column: 13, scope: !5981)
!6008 = !DILocation(line: 3118, column: 24, scope: !5981)
!6009 = !DILocation(line: 3118, column: 33, scope: !5981)
!6010 = !DILocation(line: 3120, column: 13, scope: !5981)
!6011 = !DILocation(line: 3122, column: 5, scope: !5961)
!6012 = !DILocation(line: 3123, column: 9, scope: !6013)
!6013 = distinct !DILexicalBlock(scope: !5947, file: !3, line: 3123, column: 9)
!6014 = !DILocation(line: 3123, column: 20, scope: !6013)
!6015 = !DILocation(line: 3123, column: 32, scope: !6013)
!6016 = !DILocation(line: 3123, column: 43, scope: !6013)
!6017 = !DILocation(line: 3123, column: 30, scope: !6013)
!6018 = !DILocation(line: 3123, column: 53, scope: !6013)
!6019 = !DILocation(line: 3123, column: 64, scope: !6013)
!6020 = !DILocation(line: 3123, column: 51, scope: !6013)
!6021 = !DILocation(line: 3123, column: 9, scope: !5947)
!6022 = !DILocation(line: 3124, column: 33, scope: !6023)
!6023 = distinct !DILexicalBlock(scope: !6013, file: !3, line: 3123, column: 76)
!6024 = !DILocation(line: 3124, column: 44, scope: !6023)
!6025 = !DILocation(line: 3124, column: 56, scope: !6023)
!6026 = !DILocation(line: 3124, column: 67, scope: !6023)
!6027 = !DILocation(line: 3124, column: 54, scope: !6023)
!6028 = !DILocation(line: 3124, column: 9, scope: !6023)
!6029 = !DILocation(line: 3124, column: 20, scope: !6023)
!6030 = !DILocation(line: 3124, column: 31, scope: !6023)
!6031 = !DILocation(line: 3125, column: 5, scope: !6023)
!6032 = !DILocation(line: 3126, column: 9, scope: !6033)
!6033 = distinct !DILexicalBlock(scope: !5947, file: !3, line: 3126, column: 9)
!6034 = !DILocation(line: 3126, column: 20, scope: !6033)
!6035 = !DILocation(line: 3126, column: 31, scope: !6033)
!6036 = !DILocation(line: 3126, column: 9, scope: !5947)
!6037 = !DILocation(line: 3127, column: 9, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !6033, file: !3, line: 3126, column: 37)
!6039 = !DILocation(line: 3129, column: 28, scope: !5947)
!6040 = !DILocation(line: 3129, column: 39, scope: !5947)
!6041 = !DILocation(line: 3129, column: 5, scope: !5947)
!6042 = !DILocation(line: 3129, column: 16, scope: !5947)
!6043 = !DILocation(line: 3129, column: 26, scope: !5947)
!6044 = !DILocation(line: 3130, column: 22, scope: !5947)
!6045 = !DILocation(line: 3130, column: 33, scope: !5947)
!6046 = !DILocation(line: 3130, column: 20, scope: !5947)
!6047 = !DILocation(line: 3131, column: 9, scope: !6048)
!6048 = distinct !DILexicalBlock(scope: !5947, file: !3, line: 3131, column: 9)
!6049 = !DILocation(line: 3131, column: 20, scope: !6048)
!6050 = !DILocation(line: 3131, column: 33, scope: !6048)
!6051 = !DILocation(line: 3131, column: 31, scope: !6048)
!6052 = !DILocation(line: 3131, column: 9, scope: !5947)
!6053 = !DILocation(line: 3132, column: 33, scope: !6054)
!6054 = distinct !DILexicalBlock(scope: !6048, file: !3, line: 3131, column: 49)
!6055 = !DILocation(line: 3132, column: 9, scope: !6054)
!6056 = !DILocation(line: 3132, column: 20, scope: !6054)
!6057 = !DILocation(line: 3132, column: 31, scope: !6054)
!6058 = !DILocation(line: 3133, column: 5, scope: !6054)
!6059 = !DILocation(line: 3134, column: 30, scope: !5947)
!6060 = !DILocation(line: 3134, column: 41, scope: !5947)
!6061 = !DILocation(line: 3134, column: 54, scope: !5947)
!6062 = !DILocation(line: 3134, column: 52, scope: !5947)
!6063 = !DILocation(line: 3134, column: 64, scope: !5947)
!6064 = !DILocation(line: 3135, column: 11, scope: !5947)
!6065 = !DILocation(line: 3135, column: 21, scope: !5947)
!6066 = !DILocation(line: 3135, column: 9, scope: !5947)
!6067 = !DILocation(line: 3134, column: 79, scope: !5947)
!6068 = !DILocation(line: 3134, column: 5, scope: !5947)
!6069 = !DILocation(line: 3134, column: 16, scope: !5947)
!6070 = !DILocation(line: 3134, column: 27, scope: !5947)
!6071 = !DILocation(line: 3136, column: 9, scope: !6072)
!6072 = distinct !DILexicalBlock(scope: !5947, file: !3, line: 3136, column: 9)
!6073 = !DILocation(line: 3136, column: 20, scope: !6072)
!6074 = !DILocation(line: 3136, column: 33, scope: !6072)
!6075 = !DILocation(line: 3136, column: 31, scope: !6072)
!6076 = !DILocation(line: 3136, column: 9, scope: !5947)
!6077 = !DILocation(line: 3137, column: 33, scope: !6078)
!6078 = distinct !DILexicalBlock(scope: !6072, file: !3, line: 3136, column: 44)
!6079 = !DILocation(line: 3137, column: 9, scope: !6078)
!6080 = !DILocation(line: 3137, column: 20, scope: !6078)
!6081 = !DILocation(line: 3137, column: 31, scope: !6078)
!6082 = !DILocation(line: 3138, column: 5, scope: !6078)
!6083 = !DILocation(line: 3139, column: 17, scope: !5947)
!6084 = !DILocation(line: 3139, column: 28, scope: !5947)
!6085 = !DILocation(line: 3139, column: 40, scope: !5947)
!6086 = !DILocation(line: 3139, column: 51, scope: !5947)
!6087 = !DILocation(line: 3139, column: 38, scope: !5947)
!6088 = !DILocation(line: 3139, column: 15, scope: !5947)
!6089 = !DILocation(line: 3140, column: 17, scope: !6090)
!6090 = distinct !DILexicalBlock(scope: !5947, file: !3, line: 3140, column: 9)
!6091 = !DILocation(line: 3140, column: 28, scope: !6090)
!6092 = !DILocation(line: 3140, column: 41, scope: !6090)
!6093 = !DILocation(line: 3140, column: 39, scope: !6090)
!6094 = !DILocation(line: 3140, column: 9, scope: !5947)
!6095 = !DILocation(line: 3141, column: 41, scope: !6096)
!6096 = distinct !DILexicalBlock(scope: !6090, file: !3, line: 3140, column: 52)
!6097 = !DILocation(line: 3141, column: 9, scope: !6096)
!6098 = !DILocation(line: 3141, column: 20, scope: !6096)
!6099 = !DILocation(line: 3141, column: 31, scope: !6096)
!6100 = !DILocation(line: 3142, column: 5, scope: !6096)
!6101 = !DILocation(line: 3143, column: 21, scope: !6102)
!6102 = distinct !DILexicalBlock(scope: !5947, file: !3, line: 3143, column: 9)
!6103 = !DILocation(line: 3143, column: 9, scope: !6102)
!6104 = !DILocation(line: 3143, column: 32, scope: !6102)
!6105 = !DILocation(line: 3143, column: 9, scope: !5947)
!6106 = !DILocation(line: 3144, column: 9, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !6102, file: !3, line: 3143, column: 38)
!6108 = !DILocation(line: 3145, column: 9, scope: !6107)
!6109 = !DILocation(line: 3147, column: 27, scope: !5947)
!6110 = !DILocation(line: 3147, column: 38, scope: !5947)
!6111 = !DILocation(line: 3147, column: 5, scope: !5947)
!6112 = !DILocation(line: 3147, column: 16, scope: !5947)
!6113 = !DILocation(line: 3147, column: 25, scope: !5947)
!6114 = !DILocation(line: 3149, column: 5, scope: !5947)
!6115 = !DILocation(line: 3150, column: 1, scope: !5947)
!6116 = distinct !DISubprogram(name: "dl_dowrite", scope: !3, file: !3, line: 3152, type: !6117, scopeLine: 3154, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!6117 = !DISubroutineType(types: !6118)
!6118 = !{!326, !5609, !1061, !425, !6119}
!6119 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6120)
!6120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 64)
!6121 = !DILocalVariable(name: "dlhandler", arg: 1, scope: !6116, file: !3, line: 3152, type: !5609)
!6122 = !DILocation(line: 3152, column: 41, scope: !6116)
!6123 = !DILocalVariable(name: "buf_", arg: 2, scope: !6116, file: !3, line: 3152, type: !1061)
!6124 = !DILocation(line: 3152, column: 73, scope: !6116)
!6125 = !DILocalVariable(name: "size_", arg: 3, scope: !6116, file: !3, line: 3153, type: !425)
!6126 = !DILocation(line: 3153, column: 36, scope: !6116)
!6127 = !DILocalVariable(name: "downloaded", arg: 4, scope: !6116, file: !3, line: 3153, type: !6119)
!6128 = !DILocation(line: 3153, column: 57, scope: !6116)
!6129 = !DILocalVariable(name: "size", scope: !6116, file: !3, line: 3155, type: !304)
!6130 = !DILocation(line: 3155, column: 12, scope: !6116)
!6131 = !DILocation(line: 3155, column: 19, scope: !6116)
!6132 = !DILocalVariable(name: "buf", scope: !6116, file: !3, line: 3156, type: !1061)
!6133 = !DILocation(line: 3156, column: 26, scope: !6116)
!6134 = !DILocation(line: 3156, column: 32, scope: !6116)
!6135 = !DILocalVariable(name: "asciibuf", scope: !6116, file: !3, line: 3157, type: !382)
!6136 = !DILocation(line: 3157, column: 20, scope: !6116)
!6137 = !DILocalVariable(name: "ret", scope: !6116, file: !3, line: 3158, type: !326)
!6138 = !DILocation(line: 3158, column: 9, scope: !6116)
!6139 = !DILocation(line: 3160, column: 9, scope: !6140)
!6140 = distinct !DILexicalBlock(scope: !6116, file: !3, line: 3160, column: 9)
!6141 = !DILocation(line: 3160, column: 15, scope: !6140)
!6142 = !DILocation(line: 3160, column: 9, scope: !6116)
!6143 = !DILocation(line: 3161, column: 10, scope: !6144)
!6144 = distinct !DILexicalBlock(scope: !6140, file: !3, line: 3160, column: 31)
!6145 = !DILocation(line: 3161, column: 21, scope: !6144)
!6146 = !DILocation(line: 3162, column: 9, scope: !6144)
!6147 = !DILocation(line: 3165, column: 9, scope: !6148)
!6148 = distinct !DILexicalBlock(scope: !6116, file: !3, line: 3165, column: 9)
!6149 = !DILocation(line: 3165, column: 20, scope: !6148)
!6150 = !DILocation(line: 3165, column: 31, scope: !6148)
!6151 = !DILocation(line: 3165, column: 9, scope: !6116)
!6152 = !DILocalVariable(name: "asciibufpnt", scope: !6153, file: !3, line: 3166, type: !382)
!6153 = distinct !DILexicalBlock(scope: !6148, file: !3, line: 3165, column: 36)
!6154 = !DILocation(line: 3166, column: 24, scope: !6153)
!6155 = !DILocalVariable(name: "z", scope: !6153, file: !3, line: 3167, type: !304)
!6156 = !DILocation(line: 3167, column: 16, scope: !6153)
!6157 = !DILocation(line: 3169, column: 13, scope: !6158)
!6158 = distinct !DILexicalBlock(scope: !6153, file: !3, line: 3169, column: 13)
!6159 = !DILocation(line: 3169, column: 29, scope: !6158)
!6160 = !DILocation(line: 3169, column: 40, scope: !6158)
!6161 = !DILocation(line: 3169, column: 18, scope: !6158)
!6162 = !DILocation(line: 3169, column: 51, scope: !6158)
!6163 = !DILocation(line: 3170, column: 25, scope: !6158)
!6164 = !DILocation(line: 3170, column: 23, scope: !6158)
!6165 = !DILocation(line: 3170, column: 70, scope: !6158)
!6166 = !DILocation(line: 3169, column: 13, scope: !6153)
!6167 = !DILocation(line: 3171, column: 13, scope: !6168)
!6168 = distinct !DILexicalBlock(scope: !6158, file: !3, line: 3170, column: 79)
!6169 = !DILocation(line: 3173, column: 23, scope: !6153)
!6170 = !DILocation(line: 3173, column: 21, scope: !6153)
!6171 = !DILocation(line: 3174, column: 9, scope: !6153)
!6172 = !DILocation(line: 3175, column: 17, scope: !6173)
!6173 = distinct !DILexicalBlock(scope: !6174, file: !3, line: 3175, column: 17)
!6174 = distinct !DILexicalBlock(scope: !6153, file: !3, line: 3174, column: 12)
!6175 = !DILocation(line: 3175, column: 22, scope: !6173)
!6176 = !DILocation(line: 3175, column: 25, scope: !6173)
!6177 = !DILocation(line: 3175, column: 17, scope: !6174)
!6178 = !DILocation(line: 3176, column: 29, scope: !6179)
!6179 = distinct !DILexicalBlock(scope: !6173, file: !3, line: 3175, column: 50)
!6180 = !DILocation(line: 3176, column: 32, scope: !6179)
!6181 = !DILocation(line: 3177, column: 13, scope: !6179)
!6182 = !DILocation(line: 3178, column: 30, scope: !6174)
!6183 = !DILocation(line: 3178, column: 35, scope: !6174)
!6184 = !DILocation(line: 3178, column: 25, scope: !6174)
!6185 = !DILocation(line: 3178, column: 28, scope: !6174)
!6186 = !DILocation(line: 3179, column: 14, scope: !6174)
!6187 = !DILocation(line: 3180, column: 9, scope: !6174)
!6188 = !DILocation(line: 3180, column: 18, scope: !6153)
!6189 = !DILocation(line: 3180, column: 22, scope: !6153)
!6190 = !DILocation(line: 3180, column: 20, scope: !6153)
!6191 = distinct !{!6191, !6171, !6192}
!6192 = !DILocation(line: 3180, column: 26, scope: !6153)
!6193 = !DILocation(line: 3181, column: 15, scope: !6153)
!6194 = !DILocation(line: 3181, column: 13, scope: !6153)
!6195 = !DILocation(line: 3182, column: 26, scope: !6153)
!6196 = !DILocation(line: 3182, column: 40, scope: !6153)
!6197 = !DILocation(line: 3182, column: 38, scope: !6153)
!6198 = !DILocation(line: 3182, column: 14, scope: !6153)
!6199 = !DILocation(line: 3183, column: 5, scope: !6153)
!6200 = !DILocation(line: 3185, column: 31, scope: !6116)
!6201 = !DILocation(line: 3185, column: 42, scope: !6116)
!6202 = !DILocation(line: 3185, column: 50, scope: !6116)
!6203 = !DILocation(line: 3185, column: 61, scope: !6116)
!6204 = !DILocation(line: 3185, column: 69, scope: !6116)
!6205 = !DILocation(line: 3185, column: 74, scope: !6116)
!6206 = !DILocation(line: 3185, column: 11, scope: !6116)
!6207 = !DILocation(line: 3185, column: 9, scope: !6116)
!6208 = !DILocation(line: 3186, column: 9, scope: !6209)
!6209 = distinct !DILexicalBlock(scope: !6116, file: !3, line: 3186, column: 9)
!6210 = !DILocation(line: 3186, column: 18, scope: !6209)
!6211 = !DILocation(line: 3186, column: 9, scope: !6116)
!6212 = !DILocation(line: 3187, column: 9, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !6209, file: !3, line: 3186, column: 27)
!6214 = !DILocation(line: 3187, column: 9, scope: !6215)
!6215 = distinct !DILexicalBlock(scope: !6213, file: !3, line: 3187, column: 9)
!6216 = !DILocation(line: 3188, column: 5, scope: !6213)
!6217 = !DILocation(line: 3189, column: 9, scope: !6218)
!6218 = distinct !DILexicalBlock(scope: !6116, file: !3, line: 3189, column: 9)
!6219 = !DILocation(line: 3189, column: 13, scope: !6218)
!6220 = !DILocation(line: 3189, column: 9, scope: !6116)
!6221 = !DILocation(line: 3190, column: 10, scope: !6222)
!6222 = distinct !DILexicalBlock(scope: !6218, file: !3, line: 3189, column: 18)
!6223 = !DILocation(line: 3190, column: 21, scope: !6222)
!6224 = !DILocation(line: 3191, column: 5, scope: !6222)
!6225 = !DILocation(line: 3192, column: 23, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !6218, file: !3, line: 3191, column: 12)
!6227 = !DILocation(line: 3192, column: 10, scope: !6226)
!6228 = !DILocation(line: 3192, column: 21, scope: !6226)
!6229 = !DILocation(line: 3194, column: 12, scope: !6116)
!6230 = !DILocation(line: 3194, column: 5, scope: !6116)
!6231 = !DILocation(line: 3195, column: 1, scope: !6116)
!6232 = distinct !DISubprogram(name: "dlhandler_throttle", scope: !3, file: !3, line: 2911, type: !6233, scopeLine: 2914, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!6233 = !DISubroutineType(types: !6234)
!6234 = !{!326, !5609, !3330, !3364, !6235}
!6235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 64)
!6236 = !DILocalVariable(name: "dlhandler", arg: 1, scope: !6232, file: !3, line: 2911, type: !5609)
!6237 = !DILocation(line: 2911, column: 49, scope: !6232)
!6238 = !DILocalVariable(name: "downloaded", arg: 2, scope: !6232, file: !3, line: 2912, type: !3330)
!6239 = !DILocation(line: 2912, column: 43, scope: !6232)
!6240 = !DILocalVariable(name: "ts_start", arg: 3, scope: !6232, file: !3, line: 2912, type: !3364)
!6241 = !DILocation(line: 2912, column: 68, scope: !6232)
!6242 = !DILocalVariable(name: "required_sleep", arg: 4, scope: !6232, file: !3, line: 2913, type: !6235)
!6243 = !DILocation(line: 2913, column: 39, scope: !6232)
!6244 = !DILocalVariable(name: "ts_now", scope: !6232, file: !3, line: 2915, type: !336)
!6245 = !DILocation(line: 2915, column: 12, scope: !6232)
!6246 = !DILocalVariable(name: "elapsed", scope: !6232, file: !3, line: 2916, type: !336)
!6247 = !DILocation(line: 2916, column: 12, scope: !6232)
!6248 = !DILocalVariable(name: "would_be_downloaded", scope: !6232, file: !3, line: 2917, type: !344)
!6249 = !DILocation(line: 2917, column: 11, scope: !6232)
!6250 = !DILocalVariable(name: "wanted_ts", scope: !6232, file: !3, line: 2918, type: !336)
!6251 = !DILocation(line: 2918, column: 12, scope: !6232)
!6252 = !DILocalVariable(name: "previous_chunk_size", scope: !6232, file: !3, line: 2919, type: !344)
!6253 = !DILocation(line: 2919, column: 11, scope: !6232)
!6254 = !DILocation(line: 2921, column: 9, scope: !6255)
!6255 = distinct !DILexicalBlock(scope: !6232, file: !3, line: 2921, column: 9)
!6256 = !DILocation(line: 2921, column: 20, scope: !6255)
!6257 = !DILocation(line: 2921, column: 30, scope: !6255)
!6258 = !DILocation(line: 2921, column: 37, scope: !6255)
!6259 = !DILocation(line: 2921, column: 40, scope: !6255)
!6260 = !DILocation(line: 2921, column: 51, scope: !6255)
!6261 = !DILocation(line: 2921, column: 9, scope: !6232)
!6262 = !DILocation(line: 2922, column: 10, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6255, file: !3, line: 2921, column: 65)
!6264 = !DILocation(line: 2922, column: 25, scope: !6263)
!6265 = !DILocation(line: 2923, column: 9, scope: !6263)
!6266 = !DILocation(line: 2925, column: 19, scope: !6267)
!6267 = distinct !DILexicalBlock(scope: !6232, file: !3, line: 2925, column: 9)
!6268 = !DILocation(line: 2925, column: 17, scope: !6267)
!6269 = !DILocation(line: 2925, column: 36, scope: !6267)
!6270 = !DILocation(line: 2925, column: 9, scope: !6232)
!6271 = !DILocation(line: 2926, column: 18, scope: !6272)
!6272 = distinct !DILexicalBlock(scope: !6267, file: !3, line: 2925, column: 44)
!6273 = !DILocation(line: 2926, column: 16, scope: !6272)
!6274 = !DILocation(line: 2927, column: 5, scope: !6272)
!6275 = !DILocation(line: 2928, column: 9, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !6232, file: !3, line: 2928, column: 9)
!6277 = !DILocation(line: 2928, column: 20, scope: !6276)
!6278 = !DILocation(line: 2928, column: 18, scope: !6276)
!6279 = !DILocation(line: 2928, column: 9, scope: !6232)
!6280 = !DILocation(line: 2929, column: 18, scope: !6281)
!6281 = distinct !DILexicalBlock(scope: !6276, file: !3, line: 2928, column: 28)
!6282 = !DILocation(line: 2929, column: 16, scope: !6281)
!6283 = !DILocation(line: 2930, column: 5, scope: !6281)
!6284 = !DILocation(line: 2931, column: 15, scope: !6232)
!6285 = !DILocation(line: 2931, column: 24, scope: !6232)
!6286 = !DILocation(line: 2931, column: 22, scope: !6232)
!6287 = !DILocation(line: 2931, column: 13, scope: !6232)
!6288 = !DILocation(line: 2932, column: 27, scope: !6232)
!6289 = !DILocation(line: 2932, column: 38, scope: !6232)
!6290 = !DILocation(line: 2932, column: 57, scope: !6232)
!6291 = !DILocation(line: 2932, column: 68, scope: !6232)
!6292 = !DILocation(line: 2932, column: 55, scope: !6232)
!6293 = !DILocation(line: 2932, column: 25, scope: !6232)
!6294 = !DILocation(line: 2933, column: 9, scope: !6295)
!6295 = distinct !DILexicalBlock(scope: !6232, file: !3, line: 2933, column: 9)
!6296 = !DILocation(line: 2933, column: 20, scope: !6295)
!6297 = !DILocation(line: 2933, column: 30, scope: !6295)
!6298 = !DILocation(line: 2933, column: 9, scope: !6232)
!6299 = !DILocation(line: 2934, column: 30, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6295, file: !3, line: 2933, column: 37)
!6301 = !DILocation(line: 2934, column: 21, scope: !6300)
!6302 = !DILocation(line: 2935, column: 22, scope: !6300)
!6303 = !DILocation(line: 2935, column: 33, scope: !6300)
!6304 = !DILocation(line: 2935, column: 13, scope: !6300)
!6305 = !DILocation(line: 2934, column: 50, scope: !6300)
!6306 = !DILocation(line: 2934, column: 19, scope: !6300)
!6307 = !DILocation(line: 2936, column: 5, scope: !6300)
!6308 = !DILocation(line: 2937, column: 21, scope: !6309)
!6309 = distinct !DILexicalBlock(scope: !6295, file: !3, line: 2936, column: 12)
!6310 = !DILocation(line: 2937, column: 19, scope: !6309)
!6311 = !DILocation(line: 2939, column: 23, scope: !6232)
!6312 = !DILocation(line: 2939, column: 35, scope: !6232)
!6313 = !DILocation(line: 2939, column: 33, scope: !6232)
!6314 = !DILocation(line: 2939, column: 6, scope: !6232)
!6315 = !DILocation(line: 2939, column: 21, scope: !6232)
!6316 = !DILocation(line: 2940, column: 27, scope: !6232)
!6317 = !DILocation(line: 2940, column: 38, scope: !6232)
!6318 = !DILocation(line: 2940, column: 25, scope: !6232)
!6319 = !DILocation(line: 2941, column: 9, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6232, file: !3, line: 2941, column: 9)
!6321 = !DILocation(line: 2941, column: 20, scope: !6320)
!6322 = !DILocation(line: 2941, column: 40, scope: !6320)
!6323 = !DILocation(line: 2941, column: 51, scope: !6320)
!6324 = !DILocation(line: 2941, column: 37, scope: !6320)
!6325 = !DILocation(line: 2941, column: 9, scope: !6232)
!6326 = !DILocation(line: 2942, column: 9, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6320, file: !3, line: 2941, column: 63)
!6328 = !DILocation(line: 2944, column: 10, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6232, file: !3, line: 2944, column: 9)
!6330 = !DILocation(line: 2944, column: 9, scope: !6329)
!6331 = !DILocation(line: 2944, column: 27, scope: !6329)
!6332 = !DILocation(line: 2944, column: 38, scope: !6329)
!6333 = !DILocation(line: 2944, column: 25, scope: !6329)
!6334 = !DILocation(line: 2944, column: 9, scope: !6232)
!6335 = !DILocation(line: 2946, column: 14, scope: !6336)
!6336 = distinct !DILexicalBlock(scope: !6329, file: !3, line: 2944, column: 49)
!6337 = !DILocation(line: 2946, column: 25, scope: !6336)
!6338 = !DILocation(line: 2946, column: 42, scope: !6336)
!6339 = !DILocation(line: 2946, column: 53, scope: !6336)
!6340 = !DILocation(line: 2946, column: 40, scope: !6336)
!6341 = !DILocation(line: 2946, column: 65, scope: !6336)
!6342 = !DILocation(line: 2945, column: 9, scope: !6336)
!6343 = !DILocation(line: 2945, column: 20, scope: !6336)
!6344 = !DILocation(line: 2945, column: 31, scope: !6336)
!6345 = !DILocation(line: 2947, column: 5, scope: !6336)
!6346 = !DILocation(line: 2947, column: 17, scope: !6347)
!6347 = distinct !DILexicalBlock(scope: !6329, file: !3, line: 2947, column: 16)
!6348 = !DILocation(line: 2947, column: 16, scope: !6347)
!6349 = !DILocation(line: 2947, column: 34, scope: !6347)
!6350 = !DILocation(line: 2947, column: 45, scope: !6347)
!6351 = !DILocation(line: 2947, column: 32, scope: !6347)
!6352 = !DILocation(line: 2947, column: 16, scope: !6329)
!6353 = !DILocation(line: 2949, column: 14, scope: !6354)
!6354 = distinct !DILexicalBlock(scope: !6347, file: !3, line: 2947, column: 56)
!6355 = !DILocation(line: 2949, column: 25, scope: !6354)
!6356 = !DILocation(line: 2949, column: 42, scope: !6354)
!6357 = !DILocation(line: 2949, column: 53, scope: !6354)
!6358 = !DILocation(line: 2949, column: 40, scope: !6354)
!6359 = !DILocation(line: 2949, column: 65, scope: !6354)
!6360 = !DILocation(line: 2948, column: 9, scope: !6354)
!6361 = !DILocation(line: 2948, column: 20, scope: !6354)
!6362 = !DILocation(line: 2948, column: 31, scope: !6354)
!6363 = !DILocation(line: 2950, column: 5, scope: !6354)
!6364 = !DILocation(line: 2951, column: 33, scope: !6365)
!6365 = distinct !DILexicalBlock(scope: !6347, file: !3, line: 2950, column: 12)
!6366 = !DILocation(line: 2951, column: 44, scope: !6365)
!6367 = !DILocation(line: 2951, column: 9, scope: !6365)
!6368 = !DILocation(line: 2951, column: 20, scope: !6365)
!6369 = !DILocation(line: 2951, column: 31, scope: !6365)
!6370 = !DILocation(line: 2953, column: 9, scope: !6371)
!6371 = distinct !DILexicalBlock(scope: !6232, file: !3, line: 2953, column: 9)
!6372 = !DILocation(line: 2953, column: 20, scope: !6371)
!6373 = !DILocation(line: 2953, column: 31, scope: !6371)
!6374 = !DILocation(line: 2953, column: 36, scope: !6371)
!6375 = !DILocation(line: 2953, column: 39, scope: !6371)
!6376 = !DILocation(line: 2953, column: 50, scope: !6371)
!6377 = !DILocation(line: 2953, column: 61, scope: !6371)
!6378 = !DILocation(line: 2953, column: 9, scope: !6232)
!6379 = !DILocation(line: 2954, column: 33, scope: !6380)
!6380 = distinct !DILexicalBlock(scope: !6371, file: !3, line: 2953, column: 72)
!6381 = !DILocation(line: 2954, column: 44, scope: !6380)
!6382 = !DILocation(line: 2954, column: 9, scope: !6380)
!6383 = !DILocation(line: 2954, column: 20, scope: !6380)
!6384 = !DILocation(line: 2954, column: 31, scope: !6380)
!6385 = !DILocation(line: 2955, column: 5, scope: !6380)
!6386 = !DILocation(line: 2956, column: 9, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6232, file: !3, line: 2956, column: 9)
!6388 = !DILocation(line: 2956, column: 32, scope: !6387)
!6389 = !DILocation(line: 2956, column: 43, scope: !6387)
!6390 = !DILocation(line: 2956, column: 29, scope: !6387)
!6391 = !DILocation(line: 2956, column: 9, scope: !6232)
!6392 = !DILocation(line: 2958, column: 13, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6387, file: !3, line: 2956, column: 63)
!6394 = !DILocation(line: 2958, column: 24, scope: !6393)
!6395 = !DILocation(line: 2958, column: 43, scope: !6393)
!6396 = !DILocation(line: 2958, column: 54, scope: !6393)
!6397 = !DILocation(line: 2958, column: 41, scope: !6393)
!6398 = !DILocation(line: 2957, column: 29, scope: !6393)
!6399 = !DILocation(line: 2959, column: 13, scope: !6400)
!6400 = distinct !DILexicalBlock(scope: !6393, file: !3, line: 2959, column: 13)
!6401 = !DILocation(line: 2959, column: 24, scope: !6400)
!6402 = !DILocation(line: 2959, column: 34, scope: !6400)
!6403 = !DILocation(line: 2959, column: 13, scope: !6393)
!6404 = !DILocation(line: 2960, column: 34, scope: !6405)
!6405 = distinct !DILexicalBlock(scope: !6400, file: !3, line: 2959, column: 41)
!6406 = !DILocation(line: 2960, column: 25, scope: !6405)
!6407 = !DILocation(line: 2961, column: 26, scope: !6405)
!6408 = !DILocation(line: 2961, column: 37, scope: !6405)
!6409 = !DILocation(line: 2961, column: 17, scope: !6405)
!6410 = !DILocation(line: 2960, column: 54, scope: !6405)
!6411 = !DILocation(line: 2960, column: 23, scope: !6405)
!6412 = !DILocation(line: 2962, column: 9, scope: !6405)
!6413 = !DILocation(line: 2963, column: 25, scope: !6414)
!6414 = distinct !DILexicalBlock(scope: !6400, file: !3, line: 2962, column: 16)
!6415 = !DILocation(line: 2963, column: 23, scope: !6414)
!6416 = !DILocation(line: 2965, column: 27, scope: !6393)
!6417 = !DILocation(line: 2965, column: 39, scope: !6393)
!6418 = !DILocation(line: 2965, column: 37, scope: !6393)
!6419 = !DILocation(line: 2965, column: 10, scope: !6393)
!6420 = !DILocation(line: 2965, column: 25, scope: !6393)
!6421 = !DILocation(line: 2966, column: 5, scope: !6393)
!6422 = !DILocation(line: 2967, column: 5, scope: !6232)
!6423 = !DILocation(line: 2968, column: 1, scope: !6232)
!6424 = distinct !DISubprogram(name: "dlhandler_handle_commands", scope: !3, file: !3, line: 3197, type: !6425, scopeLine: 3199, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!6425 = !DISubroutineType(types: !6426)
!6426 = !{!326, !5609, !3364}
!6427 = !DILocalVariable(name: "dlhandler", arg: 1, scope: !6424, file: !3, line: 3197, type: !5609)
!6428 = !DILocation(line: 3197, column: 56, scope: !6424)
!6429 = !DILocalVariable(name: "required_sleep", arg: 2, scope: !6424, file: !3, line: 3198, type: !3364)
!6430 = !DILocation(line: 3198, column: 51, scope: !6424)
!6431 = !DILocalVariable(name: "pollret", scope: !6424, file: !3, line: 3200, type: !326)
!6432 = !DILocation(line: 3200, column: 9, scope: !6424)
!6433 = !DILocalVariable(name: "buf", scope: !6424, file: !3, line: 3201, type: !6434)
!6434 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 800, elements: !6435)
!6435 = !{!6436}
!6436 = !DISubrange(count: 100)
!6437 = !DILocation(line: 3201, column: 10, scope: !6424)
!6438 = !DILocalVariable(name: "bufpnt", scope: !6424, file: !3, line: 3202, type: !308)
!6439 = !DILocation(line: 3202, column: 11, scope: !6424)
!6440 = !DILocalVariable(name: "readnb", scope: !6424, file: !3, line: 3203, type: !383)
!6441 = !DILocation(line: 3203, column: 13, scope: !6424)
!6442 = !DILocation(line: 3203, column: 5, scope: !6424)
!6443 = !DILabel(scope: !6424, name: "repoll", file: !3, line: 3205)
!6444 = !DILocation(line: 3205, column: 5, scope: !6424)
!6445 = !DILocation(line: 3206, column: 5, scope: !6424)
!6446 = !DILocation(line: 3206, column: 16, scope: !6424)
!6447 = !DILocation(line: 3206, column: 26, scope: !6424)
!6448 = !DILocation(line: 3206, column: 34, scope: !6424)
!6449 = !DILocation(line: 3207, column: 21, scope: !6424)
!6450 = !DILocation(line: 3207, column: 32, scope: !6424)
!6451 = !DILocation(line: 3208, column: 20, scope: !6424)
!6452 = !DILocation(line: 3208, column: 35, scope: !6424)
!6453 = !DILocation(line: 3209, column: 31, scope: !6424)
!6454 = !DILocation(line: 3209, column: 46, scope: !6424)
!6455 = !DILocation(line: 3209, column: 24, scope: !6424)
!6456 = !DILocation(line: 3207, column: 15, scope: !6424)
!6457 = !DILocation(line: 3207, column: 13, scope: !6424)
!6458 = !DILocation(line: 3210, column: 9, scope: !6459)
!6459 = distinct !DILexicalBlock(scope: !6424, file: !3, line: 3210, column: 9)
!6460 = !DILocation(line: 3210, column: 17, scope: !6459)
!6461 = !DILocation(line: 3210, column: 9, scope: !6424)
!6462 = !DILocation(line: 3211, column: 16, scope: !6463)
!6463 = distinct !DILexicalBlock(scope: !6459, file: !3, line: 3210, column: 23)
!6464 = !DILocation(line: 3211, column: 9, scope: !6463)
!6465 = !DILocation(line: 3213, column: 10, scope: !6466)
!6466 = distinct !DILexicalBlock(scope: !6424, file: !3, line: 3213, column: 9)
!6467 = !DILocation(line: 3213, column: 21, scope: !6466)
!6468 = !DILocation(line: 3213, column: 31, scope: !6466)
!6469 = !DILocation(line: 3213, column: 39, scope: !6466)
!6470 = !DILocation(line: 3213, column: 61, scope: !6466)
!6471 = !DILocation(line: 3213, column: 9, scope: !6424)
!6472 = !DILocation(line: 3214, column: 13, scope: !6473)
!6473 = distinct !DILexicalBlock(scope: !6474, file: !3, line: 3214, column: 13)
!6474 = distinct !DILexicalBlock(scope: !6466, file: !3, line: 3213, column: 67)
!6475 = !DILocation(line: 3214, column: 24, scope: !6473)
!6476 = !DILocation(line: 3214, column: 37, scope: !6473)
!6477 = !DILocation(line: 3214, column: 13, scope: !6474)
!6478 = !DILocation(line: 3219, column: 13, scope: !6479)
!6479 = distinct !DILexicalBlock(scope: !6473, file: !3, line: 3214, column: 46)
!6480 = !DILocation(line: 3222, column: 27, scope: !6481)
!6481 = distinct !DILexicalBlock(scope: !6473, file: !3, line: 3221, column: 16)
!6482 = !DILocation(line: 3222, column: 38, scope: !6481)
!6483 = !DILocation(line: 3222, column: 48, scope: !6481)
!6484 = !DILocation(line: 3222, column: 22, scope: !6481)
!6485 = !DILocation(line: 3222, column: 20, scope: !6481)
!6486 = !DILocation(line: 3224, column: 13, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6474, file: !3, line: 3224, column: 13)
!6488 = !DILocation(line: 3224, column: 20, scope: !6487)
!6489 = !DILocation(line: 3224, column: 13, scope: !6474)
!6490 = !DILocation(line: 3225, column: 13, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !6487, file: !3, line: 3224, column: 36)
!6492 = !DILocation(line: 3227, column: 13, scope: !6493)
!6493 = distinct !DILexicalBlock(scope: !6474, file: !3, line: 3227, column: 13)
!6494 = !DILocation(line: 3227, column: 20, scope: !6493)
!6495 = !DILocation(line: 3227, column: 13, scope: !6474)
!6496 = !DILocation(line: 3228, column: 17, scope: !6497)
!6497 = distinct !DILexicalBlock(scope: !6498, file: !3, line: 3228, column: 17)
!6498 = distinct !DILexicalBlock(scope: !6493, file: !3, line: 3227, column: 35)
!6499 = !DILocation(line: 3228, column: 23, scope: !6497)
!6500 = !DILocation(line: 3228, column: 33, scope: !6497)
!6501 = !DILocation(line: 3228, column: 36, scope: !6497)
!6502 = !DILocation(line: 3228, column: 42, scope: !6497)
!6503 = !DILocation(line: 3228, column: 17, scope: !6498)
!6504 = !DILocation(line: 3229, column: 17, scope: !6505)
!6505 = distinct !DILexicalBlock(scope: !6497, file: !3, line: 3228, column: 52)
!6506 = !DILocation(line: 3231, column: 13, scope: !6498)
!6507 = !DILocation(line: 3233, column: 13, scope: !6474)
!6508 = !DILocation(line: 3233, column: 9, scope: !6474)
!6509 = !DILocation(line: 3233, column: 21, scope: !6474)
!6510 = !DILocation(line: 3234, column: 39, scope: !6474)
!6511 = !DILocation(line: 3234, column: 18, scope: !6474)
!6512 = !DILocation(line: 3234, column: 16, scope: !6474)
!6513 = !DILocation(line: 3235, column: 20, scope: !6514)
!6514 = distinct !DILexicalBlock(scope: !6474, file: !3, line: 3235, column: 13)
!6515 = !DILocation(line: 3235, column: 13, scope: !6514)
!6516 = !DILocation(line: 3235, column: 34, scope: !6514)
!6517 = !DILocation(line: 3235, column: 13, scope: !6474)
!6518 = !DILocation(line: 3236, column: 29, scope: !6519)
!6519 = distinct !DILexicalBlock(scope: !6520, file: !3, line: 3236, column: 17)
!6520 = distinct !DILexicalBlock(scope: !6514, file: !3, line: 3235, column: 43)
!6521 = !DILocation(line: 3236, column: 17, scope: !6519)
!6522 = !DILocation(line: 3236, column: 65, scope: !6519)
!6523 = !DILocation(line: 3236, column: 70, scope: !6519)
!6524 = !DILocation(line: 3237, column: 29, scope: !6519)
!6525 = !DILocation(line: 3237, column: 17, scope: !6519)
!6526 = !DILocation(line: 3237, column: 65, scope: !6519)
!6527 = !DILocation(line: 3236, column: 17, scope: !6520)
!6528 = !DILocation(line: 3238, column: 17, scope: !6529)
!6529 = distinct !DILexicalBlock(scope: !6519, file: !3, line: 3237, column: 71)
!6530 = !DILocation(line: 3239, column: 17, scope: !6529)
!6531 = !DILocation(line: 3240, column: 13, scope: !6529)
!6532 = !DILocation(line: 3241, column: 17, scope: !6533)
!6533 = distinct !DILexicalBlock(scope: !6519, file: !3, line: 3240, column: 20)
!6534 = !DILocation(line: 3242, column: 17, scope: !6533)
!6535 = !DILocation(line: 3243, column: 17, scope: !6533)
!6536 = !DILocation(line: 3244, column: 17, scope: !6533)
!6537 = !DILocation(line: 3246, column: 9, scope: !6520)
!6538 = !DILocation(line: 3247, column: 13, scope: !6539)
!6539 = distinct !DILexicalBlock(scope: !6474, file: !3, line: 3247, column: 13)
!6540 = !DILocation(line: 3247, column: 28, scope: !6539)
!6541 = !DILocation(line: 3247, column: 13, scope: !6474)
!6542 = !DILocation(line: 3248, column: 13, scope: !6543)
!6543 = distinct !DILexicalBlock(scope: !6539, file: !3, line: 3247, column: 35)
!6544 = !DILocation(line: 3250, column: 5, scope: !6474)
!6545 = !DILocation(line: 3250, column: 17, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !6466, file: !3, line: 3250, column: 16)
!6547 = !DILocation(line: 3250, column: 28, scope: !6546)
!6548 = !DILocation(line: 3250, column: 38, scope: !6546)
!6549 = !DILocation(line: 3250, column: 46, scope: !6546)
!6550 = !DILocation(line: 3251, column: 49, scope: !6546)
!6551 = !DILocation(line: 3250, column: 16, scope: !6466)
!6552 = !DILocation(line: 3252, column: 9, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6546, file: !3, line: 3251, column: 55)
!6554 = !DILocation(line: 3253, column: 9, scope: !6553)
!6555 = !DILocation(line: 3255, column: 5, scope: !6424)
!6556 = !DILocation(line: 3256, column: 1, scope: !6424)
!6557 = distinct !DISubprogram(name: "safe_nonblock_write", scope: !3, file: !3, line: 98, type: !6558, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!6558 = !DISubroutineType(types: !6559)
!6559 = !{!383, !731, !892, !6560, !304}
!6560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6561, size: 64)
!6561 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!6562 = !DILocalVariable(name: "fd", arg: 1, scope: !6557, file: !3, line: 98, type: !731)
!6563 = !DILocation(line: 98, column: 46, scope: !6557)
!6564 = !DILocalVariable(name: "tls_fd", arg: 2, scope: !6557, file: !3, line: 98, type: !892)
!6565 = !DILocation(line: 98, column: 63, scope: !6557)
!6566 = !DILocalVariable(name: "buf_", arg: 3, scope: !6557, file: !3, line: 99, type: !6560)
!6567 = !DILocation(line: 99, column: 48, scope: !6557)
!6568 = !DILocalVariable(name: "count", arg: 4, scope: !6557, file: !3, line: 99, type: !304)
!6569 = !DILocation(line: 99, column: 61, scope: !6557)
!6570 = !DILocalVariable(name: "written", scope: !6557, file: !3, line: 101, type: !383)
!6571 = !DILocation(line: 101, column: 13, scope: !6557)
!6572 = !DILocalVariable(name: "buf", scope: !6557, file: !3, line: 102, type: !385)
!6573 = !DILocation(line: 102, column: 17, scope: !6557)
!6574 = !DILocation(line: 102, column: 38, scope: !6557)
!6575 = !DILocalVariable(name: "pfd", scope: !6557, file: !3, line: 103, type: !2058)
!6576 = !DILocation(line: 103, column: 19, scope: !6557)
!6577 = !DILocation(line: 105, column: 5, scope: !6557)
!6578 = !DILocation(line: 105, column: 12, scope: !6557)
!6579 = !DILocation(line: 105, column: 18, scope: !6557)
!6580 = !DILocation(line: 106, column: 9, scope: !6581)
!6581 = distinct !DILexicalBlock(scope: !6557, file: !3, line: 105, column: 33)
!6582 = !DILocation(line: 107, column: 17, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6584, file: !3, line: 107, column: 17)
!6584 = distinct !DILexicalBlock(scope: !6585, file: !3, line: 106, column: 18)
!6585 = distinct !DILexicalBlock(scope: !6586, file: !3, line: 106, column: 9)
!6586 = distinct !DILexicalBlock(scope: !6581, file: !3, line: 106, column: 9)
!6587 = !DILocation(line: 107, column: 24, scope: !6583)
!6588 = !DILocation(line: 107, column: 17, scope: !6584)
!6589 = !DILocation(line: 110, column: 48, scope: !6590)
!6590 = distinct !DILexicalBlock(scope: !6583, file: !3, line: 107, column: 33)
!6591 = !DILocation(line: 110, column: 53, scope: !6590)
!6592 = !DILocation(line: 110, column: 27, scope: !6590)
!6593 = !DILocation(line: 110, column: 25, scope: !6590)
!6594 = !DILocation(line: 111, column: 13, scope: !6590)
!6595 = !DILocation(line: 118, column: 17, scope: !6596)
!6596 = distinct !DILexicalBlock(scope: !6583, file: !3, line: 111, column: 20)
!6597 = !DILocation(line: 121, column: 17, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !6584, file: !3, line: 121, column: 17)
!6599 = !DILocation(line: 121, column: 25, scope: !6598)
!6600 = !DILocation(line: 121, column: 17, scope: !6584)
!6601 = !DILocation(line: 122, column: 17, scope: !6602)
!6602 = distinct !DILexicalBlock(scope: !6598, file: !3, line: 121, column: 40)
!6603 = !DILocation(line: 124, column: 17, scope: !6604)
!6604 = distinct !DILexicalBlock(scope: !6584, file: !3, line: 124, column: 17)
!6605 = !DILocation(line: 124, column: 23, scope: !6604)
!6606 = !DILocation(line: 124, column: 33, scope: !6604)
!6607 = !DILocation(line: 124, column: 36, scope: !6604)
!6608 = !DILocation(line: 124, column: 42, scope: !6604)
!6609 = !DILocation(line: 124, column: 17, scope: !6584)
!6610 = !DILocation(line: 125, column: 26, scope: !6611)
!6611 = distinct !DILexicalBlock(scope: !6604, file: !3, line: 124, column: 58)
!6612 = !DILocation(line: 125, column: 21, scope: !6611)
!6613 = !DILocation(line: 125, column: 24, scope: !6611)
!6614 = !DILocation(line: 126, column: 21, scope: !6611)
!6615 = !DILocation(line: 126, column: 28, scope: !6611)
!6616 = !DILocation(line: 127, column: 21, scope: !6611)
!6617 = !DILocation(line: 127, column: 29, scope: !6611)
!6618 = !DILocation(line: 128, column: 36, scope: !6619)
!6619 = distinct !DILexicalBlock(scope: !6611, file: !3, line: 128, column: 21)
!6620 = !DILocation(line: 128, column: 45, scope: !6619)
!6621 = !DILocation(line: 128, column: 21, scope: !6619)
!6622 = !DILocation(line: 128, column: 55, scope: !6619)
!6623 = !DILocation(line: 128, column: 60, scope: !6619)
!6624 = !DILocation(line: 129, column: 26, scope: !6619)
!6625 = !DILocation(line: 129, column: 22, scope: !6619)
!6626 = !DILocation(line: 129, column: 34, scope: !6619)
!6627 = !DILocation(line: 129, column: 57, scope: !6619)
!6628 = !DILocation(line: 129, column: 62, scope: !6619)
!6629 = !DILocation(line: 130, column: 26, scope: !6619)
!6630 = !DILocation(line: 130, column: 22, scope: !6619)
!6631 = !DILocation(line: 130, column: 34, scope: !6619)
!6632 = !DILocation(line: 130, column: 45, scope: !6619)
!6633 = !DILocation(line: 128, column: 21, scope: !6611)
!6634 = !DILocation(line: 131, column: 21, scope: !6635)
!6635 = distinct !DILexicalBlock(scope: !6619, file: !3, line: 130, column: 51)
!6636 = !DILocation(line: 131, column: 27, scope: !6635)
!6637 = !DILocation(line: 132, column: 21, scope: !6635)
!6638 = !DILocation(line: 134, column: 13, scope: !6611)
!6639 = !DILocation(line: 134, column: 24, scope: !6640)
!6640 = distinct !DILexicalBlock(scope: !6604, file: !3, line: 134, column: 24)
!6641 = !DILocation(line: 134, column: 30, scope: !6640)
!6642 = !DILocation(line: 134, column: 24, scope: !6604)
!6643 = !DILocation(line: 135, column: 17, scope: !6644)
!6644 = distinct !DILexicalBlock(scope: !6640, file: !3, line: 134, column: 40)
!6645 = !DILocation(line: 106, column: 9, scope: !6585)
!6646 = distinct !{!6646, !6647, !6648}
!6647 = !DILocation(line: 106, column: 9, scope: !6586)
!6648 = !DILocation(line: 137, column: 9, scope: !6586)
!6649 = !DILocation(line: 138, column: 16, scope: !6581)
!6650 = !DILocation(line: 138, column: 13, scope: !6581)
!6651 = !DILocation(line: 139, column: 18, scope: !6581)
!6652 = !DILocation(line: 139, column: 15, scope: !6581)
!6653 = distinct !{!6653, !6577, !6654}
!6654 = !DILocation(line: 140, column: 5, scope: !6557)
!6655 = !DILocation(line: 141, column: 5, scope: !6557)
!6656 = !DILocation(line: 142, column: 1, scope: !6557)
!6657 = distinct !DISubprogram(name: "_dlmap_read", scope: !3, file: !3, line: 3066, type: !5733, scopeLine: 3067, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!6658 = !DILocalVariable(name: "dlhandler", arg: 1, scope: !6657, file: !3, line: 3066, type: !5609)
!6659 = !DILocation(line: 3066, column: 42, scope: !6657)
!6660 = !DILocalVariable(name: "readnb", scope: !6657, file: !3, line: 3068, type: !383)
!6661 = !DILocation(line: 3068, column: 13, scope: !6657)
!6662 = !DILocation(line: 3070, column: 9, scope: !6663)
!6663 = distinct !DILexicalBlock(scope: !6657, file: !3, line: 3070, column: 9)
!6664 = !DILocation(line: 3070, column: 20, scope: !6663)
!6665 = !DILocation(line: 3070, column: 33, scope: !6663)
!6666 = !DILocation(line: 3070, column: 44, scope: !6663)
!6667 = !DILocation(line: 3070, column: 31, scope: !6663)
!6668 = !DILocation(line: 3070, column: 9, scope: !6657)
!6669 = !DILocation(line: 3071, column: 9, scope: !6670)
!6670 = distinct !DILexicalBlock(scope: !6663, file: !3, line: 3070, column: 56)
!6671 = !DILocation(line: 3073, column: 9, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !6657, file: !3, line: 3073, column: 9)
!6673 = !DILocation(line: 3073, column: 20, scope: !6672)
!6674 = !DILocation(line: 3073, column: 31, scope: !6672)
!6675 = !DILocation(line: 3073, column: 9, scope: !6657)
!6676 = !DILocation(line: 3074, column: 9, scope: !6677)
!6677 = distinct !DILexicalBlock(scope: !6672, file: !3, line: 3073, column: 47)
!6678 = !DILocation(line: 3076, column: 9, scope: !6679)
!6679 = distinct !DILexicalBlock(scope: !6657, file: !3, line: 3076, column: 9)
!6680 = !DILocation(line: 3076, column: 20, scope: !6679)
!6681 = !DILocation(line: 3076, column: 33, scope: !6679)
!6682 = !DILocation(line: 3076, column: 44, scope: !6679)
!6683 = !DILocation(line: 3076, column: 30, scope: !6679)
!6684 = !DILocation(line: 3076, column: 9, scope: !6657)
!6685 = !DILocation(line: 3077, column: 9, scope: !6686)
!6686 = distinct !DILexicalBlock(scope: !6679, file: !3, line: 3076, column: 57)
!6687 = !DILocation(line: 3078, column: 23, scope: !6688)
!6688 = distinct !DILexicalBlock(scope: !6689, file: !3, line: 3078, column: 17)
!6689 = distinct !DILexicalBlock(scope: !6686, file: !3, line: 3077, column: 12)
!6690 = !DILocation(line: 3078, column: 34, scope: !6688)
!6691 = !DILocation(line: 3078, column: 37, scope: !6688)
!6692 = !DILocation(line: 3078, column: 48, scope: !6688)
!6693 = !DILocation(line: 3078, column: 17, scope: !6688)
!6694 = !DILocation(line: 3079, column: 33, scope: !6688)
!6695 = !DILocation(line: 3078, column: 17, scope: !6689)
!6696 = !DILocation(line: 3080, column: 17, scope: !6697)
!6697 = distinct !DILexicalBlock(scope: !6688, file: !3, line: 3079, column: 48)
!6698 = !DILocation(line: 3080, column: 28, scope: !6697)
!6699 = !DILocation(line: 3080, column: 40, scope: !6697)
!6700 = !DILocation(line: 3081, column: 17, scope: !6697)
!6701 = !DILocation(line: 3083, column: 38, scope: !6689)
!6702 = !DILocation(line: 3083, column: 49, scope: !6689)
!6703 = !DILocation(line: 3083, column: 13, scope: !6689)
!6704 = !DILocation(line: 3083, column: 24, scope: !6689)
!6705 = !DILocation(line: 3083, column: 36, scope: !6689)
!6706 = !DILocation(line: 3084, column: 27, scope: !6689)
!6707 = !DILocation(line: 3084, column: 38, scope: !6689)
!6708 = !DILocation(line: 3084, column: 41, scope: !6689)
!6709 = !DILocation(line: 3084, column: 52, scope: !6689)
!6710 = !DILocation(line: 3084, column: 57, scope: !6689)
!6711 = !DILocation(line: 3084, column: 68, scope: !6689)
!6712 = !DILocation(line: 3084, column: 22, scope: !6689)
!6713 = !DILocation(line: 3084, column: 20, scope: !6689)
!6714 = !DILocation(line: 3085, column: 9, scope: !6689)
!6715 = !DILocation(line: 3085, column: 18, scope: !6686)
!6716 = !DILocation(line: 3085, column: 25, scope: !6686)
!6717 = !DILocation(line: 3085, column: 41, scope: !6686)
!6718 = !DILocation(line: 3085, column: 44, scope: !6686)
!6719 = !DILocation(line: 3085, column: 50, scope: !6686)
!6720 = !DILocation(line: 0, scope: !6686)
!6721 = distinct !{!6721, !6685, !6722}
!6722 = !DILocation(line: 3085, column: 58, scope: !6686)
!6723 = !DILocation(line: 3086, column: 5, scope: !6686)
!6724 = !DILocation(line: 3087, column: 9, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6679, file: !3, line: 3086, column: 12)
!6726 = !DILocation(line: 3088, column: 27, scope: !6727)
!6727 = distinct !DILexicalBlock(scope: !6725, file: !3, line: 3087, column: 12)
!6728 = !DILocation(line: 3088, column: 38, scope: !6727)
!6729 = !DILocation(line: 3088, column: 41, scope: !6727)
!6730 = !DILocation(line: 3088, column: 52, scope: !6727)
!6731 = !DILocation(line: 3088, column: 57, scope: !6727)
!6732 = !DILocation(line: 3088, column: 68, scope: !6727)
!6733 = !DILocation(line: 3088, column: 22, scope: !6727)
!6734 = !DILocation(line: 3088, column: 20, scope: !6727)
!6735 = !DILocation(line: 3089, column: 9, scope: !6727)
!6736 = !DILocation(line: 3089, column: 18, scope: !6725)
!6737 = !DILocation(line: 3089, column: 25, scope: !6725)
!6738 = !DILocation(line: 3089, column: 41, scope: !6725)
!6739 = !DILocation(line: 3089, column: 44, scope: !6725)
!6740 = !DILocation(line: 3089, column: 50, scope: !6725)
!6741 = !DILocation(line: 0, scope: !6725)
!6742 = distinct !{!6742, !6724, !6743}
!6743 = !DILocation(line: 3089, column: 58, scope: !6725)
!6744 = !DILocation(line: 3091, column: 9, scope: !6745)
!6745 = distinct !DILexicalBlock(scope: !6657, file: !3, line: 3091, column: 9)
!6746 = !DILocation(line: 3091, column: 16, scope: !6745)
!6747 = !DILocation(line: 3091, column: 9, scope: !6657)
!6748 = !DILocation(line: 3092, column: 9, scope: !6749)
!6749 = distinct !DILexicalBlock(scope: !6745, file: !3, line: 3091, column: 32)
!6750 = !DILocation(line: 3092, column: 20, scope: !6749)
!6751 = !DILocation(line: 3092, column: 32, scope: !6749)
!6752 = !DILocation(line: 3093, column: 9, scope: !6749)
!6753 = !DILocation(line: 3095, column: 9, scope: !6754)
!6754 = distinct !DILexicalBlock(scope: !6657, file: !3, line: 3095, column: 9)
!6755 = !DILocation(line: 3095, column: 29, scope: !6754)
!6756 = !DILocation(line: 3095, column: 40, scope: !6754)
!6757 = !DILocation(line: 3095, column: 16, scope: !6754)
!6758 = !DILocation(line: 3095, column: 9, scope: !6657)
!6759 = !DILocation(line: 3096, column: 9, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !6754, file: !3, line: 3095, column: 52)
!6761 = !DILocation(line: 3096, column: 20, scope: !6760)
!6762 = !DILocation(line: 3096, column: 32, scope: !6760)
!6763 = !DILocation(line: 3097, column: 5, scope: !6760)
!6764 = !DILocation(line: 3098, column: 43, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6754, file: !3, line: 3097, column: 12)
!6766 = !DILocation(line: 3098, column: 9, scope: !6765)
!6767 = !DILocation(line: 3098, column: 20, scope: !6765)
!6768 = !DILocation(line: 3098, column: 32, scope: !6765)
!6769 = !DILocation(line: 3100, column: 5, scope: !6657)
!6770 = !DILocation(line: 3101, column: 1, scope: !6657)
!6771 = distinct !DISubprogram(name: "dlhandler_init", scope: !3, file: !3, line: 2970, type: !5607, scopeLine: 2978, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!6772 = !DILocalVariable(name: "dlhandler", arg: 1, scope: !6771, file: !3, line: 2970, type: !5609)
!6773 = !DILocation(line: 2970, column: 45, scope: !6771)
!6774 = !DILocalVariable(name: "clientfd", arg: 2, scope: !6771, file: !3, line: 2971, type: !731)
!6775 = !DILocation(line: 2971, column: 37, scope: !6771)
!6776 = !DILocalVariable(name: "tls_clientfd", arg: 3, scope: !6771, file: !3, line: 2971, type: !892)
!6777 = !DILocation(line: 2971, column: 60, scope: !6771)
!6778 = !DILocalVariable(name: "xferfd", arg: 4, scope: !6771, file: !3, line: 2972, type: !731)
!6779 = !DILocation(line: 2972, column: 37, scope: !6771)
!6780 = !DILocalVariable(name: "name", arg: 5, scope: !6771, file: !3, line: 2973, type: !529)
!6781 = !DILocation(line: 2973, column: 46, scope: !6771)
!6782 = !DILocalVariable(name: "f", arg: 6, scope: !6771, file: !3, line: 2974, type: !731)
!6783 = !DILocation(line: 2974, column: 37, scope: !6771)
!6784 = !DILocalVariable(name: "tls_fd", arg: 7, scope: !6771, file: !3, line: 2974, type: !892)
!6785 = !DILocation(line: 2974, column: 53, scope: !6771)
!6786 = !DILocalVariable(name: "restartat", arg: 8, scope: !6771, file: !3, line: 2975, type: !3330)
!6787 = !DILocation(line: 2975, column: 39, scope: !6771)
!6788 = !DILocalVariable(name: "ascii_mode", arg: 9, scope: !6771, file: !3, line: 2976, type: !731)
!6789 = !DILocation(line: 2976, column: 37, scope: !6771)
!6790 = !DILocalVariable(name: "bandwidth", arg: 10, scope: !6771, file: !3, line: 2977, type: !1251)
!6791 = !DILocation(line: 2977, column: 47, scope: !6771)
!6792 = !DILocalVariable(name: "st", scope: !6771, file: !3, line: 2979, type: !3147)
!6793 = !DILocation(line: 2979, column: 17, scope: !6771)
!6794 = !DILocalVariable(name: "pfd", scope: !6771, file: !3, line: 2980, type: !2066)
!6795 = !DILocation(line: 2980, column: 20, scope: !6771)
!6796 = !DILocation(line: 2982, column: 15, scope: !6797)
!6797 = distinct !DILexicalBlock(scope: !6771, file: !3, line: 2982, column: 9)
!6798 = !DILocation(line: 2982, column: 9, scope: !6797)
!6799 = !DILocation(line: 2982, column: 23, scope: !6797)
!6800 = !DILocation(line: 2982, column: 27, scope: !6797)
!6801 = !DILocation(line: 2982, column: 31, scope: !6797)
!6802 = !DILocation(line: 2982, column: 51, scope: !6797)
!6803 = !DILocation(line: 2982, column: 59, scope: !6797)
!6804 = !DILocation(line: 2982, column: 54, scope: !6797)
!6805 = !DILocation(line: 2982, column: 70, scope: !6797)
!6806 = !DILocation(line: 2982, column: 9, scope: !6771)
!6807 = !DILocation(line: 2983, column: 9, scope: !6808)
!6808 = distinct !DILexicalBlock(scope: !6797, file: !3, line: 2982, column: 76)
!6809 = !DILocation(line: 2984, column: 9, scope: !6808)
!6810 = !DILocation(line: 2986, column: 10, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !6771, file: !3, line: 2986, column: 9)
!6812 = !DILocation(line: 2986, column: 9, scope: !6771)
!6813 = !DILocation(line: 2987, column: 9, scope: !6814)
!6814 = distinct !DILexicalBlock(scope: !6811, file: !3, line: 2986, column: 31)
!6815 = !DILocation(line: 2988, column: 9, scope: !6814)
!6816 = !DILocation(line: 2990, column: 27, scope: !6771)
!6817 = !DILocation(line: 2990, column: 5, scope: !6771)
!6818 = !DILocation(line: 2990, column: 16, scope: !6771)
!6819 = !DILocation(line: 2990, column: 25, scope: !6771)
!6820 = !DILocation(line: 2991, column: 31, scope: !6771)
!6821 = !DILocation(line: 2991, column: 5, scope: !6771)
!6822 = !DILocation(line: 2991, column: 16, scope: !6771)
!6823 = !DILocation(line: 2991, column: 29, scope: !6771)
!6824 = !DILocation(line: 2992, column: 25, scope: !6771)
!6825 = !DILocation(line: 2992, column: 5, scope: !6771)
!6826 = !DILocation(line: 2992, column: 16, scope: !6771)
!6827 = !DILocation(line: 2992, column: 23, scope: !6771)
!6828 = !DILocation(line: 2993, column: 20, scope: !6771)
!6829 = !DILocation(line: 2993, column: 5, scope: !6771)
!6830 = !DILocation(line: 2993, column: 16, scope: !6771)
!6831 = !DILocation(line: 2993, column: 18, scope: !6771)
!6832 = !DILocation(line: 2994, column: 25, scope: !6771)
!6833 = !DILocation(line: 2994, column: 5, scope: !6771)
!6834 = !DILocation(line: 2994, column: 16, scope: !6771)
!6835 = !DILocation(line: 2994, column: 23, scope: !6771)
!6836 = !DILocation(line: 2995, column: 31, scope: !6771)
!6837 = !DILocation(line: 2995, column: 5, scope: !6771)
!6838 = !DILocation(line: 2995, column: 16, scope: !6771)
!6839 = !DILocation(line: 2995, column: 26, scope: !6771)
!6840 = !DILocation(line: 2996, column: 29, scope: !6771)
!6841 = !DILocation(line: 2996, column: 5, scope: !6771)
!6842 = !DILocation(line: 2996, column: 16, scope: !6771)
!6843 = !DILocation(line: 2996, column: 27, scope: !6771)
!6844 = !DILocation(line: 2997, column: 26, scope: !6771)
!6845 = !DILocation(line: 2997, column: 5, scope: !6771)
!6846 = !DILocation(line: 2997, column: 16, scope: !6771)
!6847 = !DILocation(line: 2997, column: 24, scope: !6771)
!6848 = !DILocation(line: 2998, column: 5, scope: !6771)
!6849 = !DILocation(line: 2998, column: 16, scope: !6771)
!6850 = !DILocation(line: 2998, column: 33, scope: !6771)
!6851 = !DILocation(line: 2999, column: 5, scope: !6771)
!6852 = !DILocation(line: 2999, column: 16, scope: !6771)
!6853 = !DILocation(line: 2999, column: 26, scope: !6771)
!6854 = !DILocation(line: 3000, column: 5, scope: !6771)
!6855 = !DILocation(line: 3000, column: 16, scope: !6771)
!6856 = !DILocation(line: 3000, column: 26, scope: !6771)
!6857 = !DILocation(line: 3001, column: 28, scope: !6771)
!6858 = !DILocation(line: 3001, column: 5, scope: !6771)
!6859 = !DILocation(line: 3001, column: 16, scope: !6771)
!6860 = !DILocation(line: 3001, column: 26, scope: !6771)
!6861 = !DILocation(line: 3002, column: 12, scope: !6771)
!6862 = !DILocation(line: 3002, column: 23, scope: !6771)
!6863 = !DILocation(line: 3002, column: 9, scope: !6771)
!6864 = !DILocation(line: 3003, column: 15, scope: !6771)
!6865 = !DILocation(line: 3003, column: 5, scope: !6771)
!6866 = !DILocation(line: 3003, column: 10, scope: !6771)
!6867 = !DILocation(line: 3003, column: 13, scope: !6771)
!6868 = !DILocation(line: 3007, column: 5, scope: !6771)
!6869 = !DILocation(line: 3007, column: 10, scope: !6771)
!6870 = !DILocation(line: 3007, column: 17, scope: !6771)
!6871 = !DILocation(line: 3009, column: 5, scope: !6771)
!6872 = !DILocation(line: 3009, column: 10, scope: !6771)
!6873 = !DILocation(line: 3009, column: 18, scope: !6771)
!6874 = !DILocation(line: 3011, column: 9, scope: !6875)
!6875 = distinct !DILexicalBlock(scope: !6771, file: !3, line: 3011, column: 9)
!6876 = !DILocation(line: 3011, column: 19, scope: !6875)
!6877 = !DILocation(line: 3011, column: 9, scope: !6771)
!6878 = !DILocation(line: 3012, column: 13, scope: !6879)
!6879 = distinct !DILexicalBlock(scope: !6880, file: !3, line: 3012, column: 13)
!6880 = distinct !DILexicalBlock(scope: !6875, file: !3, line: 3011, column: 32)
!6881 = !DILocation(line: 3012, column: 29, scope: !6879)
!6882 = !DILocation(line: 3012, column: 23, scope: !6879)
!6883 = !DILocation(line: 3012, column: 13, scope: !6880)
!6884 = !DILocation(line: 3013, column: 13, scope: !6885)
!6885 = distinct !DILexicalBlock(scope: !6879, file: !3, line: 3012, column: 38)
!6886 = !DILocation(line: 3014, column: 13, scope: !6885)
!6887 = !DILocation(line: 3015, column: 20, scope: !6888)
!6888 = distinct !DILexicalBlock(scope: !6879, file: !3, line: 3015, column: 20)
!6889 = !DILocation(line: 3015, column: 35, scope: !6888)
!6890 = !DILocation(line: 3015, column: 30, scope: !6888)
!6891 = !DILocation(line: 3015, column: 20, scope: !6879)
!6892 = !DILocation(line: 3017, column: 34, scope: !6893)
!6893 = distinct !DILexicalBlock(scope: !6888, file: !3, line: 3015, column: 44)
!6894 = !DILocation(line: 3017, column: 60, scope: !6893)
!6895 = !DILocation(line: 3016, column: 13, scope: !6893)
!6896 = !DILocation(line: 3018, column: 13, scope: !6893)
!6897 = !DILocation(line: 3020, column: 5, scope: !6880)
!6898 = !DILocation(line: 3021, column: 15, scope: !6899)
!6899 = distinct !DILexicalBlock(scope: !6771, file: !3, line: 3021, column: 9)
!6900 = !DILocation(line: 3021, column: 38, scope: !6899)
!6901 = !DILocation(line: 3021, column: 32, scope: !6899)
!6902 = !DILocation(line: 3021, column: 55, scope: !6899)
!6903 = !DILocation(line: 3021, column: 9, scope: !6899)
!6904 = !DILocation(line: 3021, column: 69, scope: !6899)
!6905 = !DILocation(line: 3021, column: 9, scope: !6771)
!6906 = !DILocation(line: 3022, column: 9, scope: !6907)
!6907 = distinct !DILexicalBlock(scope: !6899, file: !3, line: 3021, column: 76)
!6908 = !DILocation(line: 3023, column: 9, scope: !6907)
!6909 = !DILocation(line: 3025, column: 5, scope: !6771)
!6910 = !DILocation(line: 3026, column: 1, scope: !6771)
!6911 = distinct !DISubprogram(name: "dorest", scope: !3, file: !3, line: 3447, type: !3536, scopeLine: 3448, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!6912 = !DILocalVariable(name: "name", arg: 1, scope: !6911, file: !3, line: 3447, type: !385)
!6913 = !DILocation(line: 3447, column: 25, scope: !6911)
!6914 = !DILocalVariable(name: "endptr", scope: !6911, file: !3, line: 3449, type: !308)
!6915 = !DILocation(line: 3449, column: 11, scope: !6911)
!6916 = !DILocation(line: 3451, column: 34, scope: !6911)
!6917 = !DILocation(line: 3451, column: 25, scope: !6911)
!6918 = !DILocation(line: 3451, column: 15, scope: !6911)
!6919 = !DILocation(line: 3452, column: 10, scope: !6920)
!6920 = distinct !DILexicalBlock(scope: !6911, file: !3, line: 3452, column: 9)
!6921 = !DILocation(line: 3452, column: 9, scope: !6920)
!6922 = !DILocation(line: 3452, column: 17, scope: !6920)
!6923 = !DILocation(line: 3452, column: 22, scope: !6920)
!6924 = !DILocation(line: 3452, column: 25, scope: !6920)
!6925 = !DILocation(line: 3452, column: 35, scope: !6920)
!6926 = !DILocation(line: 3452, column: 9, scope: !6911)
!6927 = !DILocation(line: 3453, column: 19, scope: !6928)
!6928 = distinct !DILexicalBlock(scope: !6920, file: !3, line: 3452, column: 48)
!6929 = !DILocation(line: 3454, column: 9, scope: !6928)
!6930 = !DILocation(line: 3455, column: 5, scope: !6928)
!6931 = !DILocation(line: 3456, column: 13, scope: !6932)
!6932 = distinct !DILexicalBlock(scope: !6933, file: !3, line: 3456, column: 13)
!6933 = distinct !DILexicalBlock(scope: !6920, file: !3, line: 3455, column: 12)
!6934 = !DILocation(line: 3456, column: 18, scope: !6932)
!6935 = !DILocation(line: 3456, column: 23, scope: !6932)
!6936 = !DILocation(line: 3456, column: 26, scope: !6932)
!6937 = !DILocation(line: 3456, column: 36, scope: !6932)
!6938 = !DILocation(line: 3456, column: 13, scope: !6933)
!6939 = !DILocation(line: 3461, column: 34, scope: !6940)
!6940 = distinct !DILexicalBlock(scope: !6932, file: !3, line: 3456, column: 42)
!6941 = !DILocation(line: 3460, column: 13, scope: !6940)
!6942 = !DILocation(line: 3463, column: 9, scope: !6940)
!6943 = !DILocation(line: 3464, column: 17, scope: !6944)
!6944 = distinct !DILexicalBlock(scope: !6945, file: !3, line: 3464, column: 17)
!6945 = distinct !DILexicalBlock(scope: !6932, file: !3, line: 3463, column: 16)
!6946 = !DILocation(line: 3464, column: 27, scope: !6944)
!6947 = !DILocation(line: 3464, column: 17, scope: !6945)
!6948 = !DILocation(line: 3465, column: 67, scope: !6949)
!6949 = distinct !DILexicalBlock(scope: !6944, file: !3, line: 3464, column: 33)
!6950 = !DILocation(line: 3465, column: 17, scope: !6949)
!6951 = !DILocation(line: 3466, column: 13, scope: !6949)
!6952 = !DILocation(line: 3467, column: 57, scope: !6945)
!6953 = !DILocation(line: 3467, column: 13, scope: !6945)
!6954 = !DILocation(line: 3470, column: 1, scope: !6911)
!6955 = distinct !DISubprogram(name: "domkd", scope: !3, file: !3, line: 3472, type: !469, scopeLine: 3473, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!6956 = !DILocalVariable(name: "name", arg: 1, scope: !6955, file: !3, line: 3472, type: !308)
!6957 = !DILocation(line: 3472, column: 18, scope: !6955)
!6958 = !DILocation(line: 3479, column: 9, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6955, file: !3, line: 3479, column: 9)
!6960 = !DILocation(line: 3479, column: 15, scope: !6959)
!6961 = !DILocation(line: 3479, column: 20, scope: !6959)
!6962 = !DILocation(line: 3479, column: 23, scope: !6959)
!6963 = !DILocation(line: 3479, column: 40, scope: !6959)
!6964 = !DILocation(line: 3479, column: 9, scope: !6955)
!6965 = !DILocation(line: 3480, column: 9, scope: !6966)
!6966 = distinct !DILexicalBlock(scope: !6959, file: !3, line: 3479, column: 46)
!6967 = !DILocation(line: 3481, column: 9, scope: !6966)
!6968 = !DILocation(line: 3483, column: 25, scope: !6969)
!6969 = distinct !DILexicalBlock(scope: !6955, file: !3, line: 3483, column: 9)
!6970 = !DILocation(line: 3483, column: 31, scope: !6969)
!6971 = !DILocation(line: 3483, column: 9, scope: !6969)
!6972 = !DILocation(line: 3483, column: 45, scope: !6969)
!6973 = !DILocation(line: 3483, column: 9, scope: !6955)
!6974 = !DILocation(line: 3484, column: 9, scope: !6975)
!6975 = distinct !DILexicalBlock(scope: !6969, file: !3, line: 3483, column: 51)
!6976 = !DILocation(line: 3485, column: 9, scope: !6975)
!6977 = !DILocation(line: 3494, column: 16, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !6955, file: !3, line: 3494, column: 9)
!6979 = !DILocation(line: 3494, column: 40, scope: !6978)
!6980 = !DILocation(line: 3494, column: 39, scope: !6978)
!6981 = !DILocation(line: 3494, column: 37, scope: !6978)
!6982 = !DILocation(line: 3494, column: 10, scope: !6978)
!6983 = !DILocation(line: 3494, column: 52, scope: !6978)
!6984 = !DILocation(line: 3494, column: 9, scope: !6955)
!6985 = !DILocation(line: 3498, column: 9, scope: !6986)
!6986 = distinct !DILexicalBlock(scope: !6978, file: !3, line: 3494, column: 57)
!6987 = !DILocation(line: 3499, column: 5, scope: !6986)
!6988 = !DILocation(line: 3500, column: 52, scope: !6989)
!6989 = distinct !DILexicalBlock(scope: !6978, file: !3, line: 3499, column: 12)
!6990 = !DILocation(line: 3500, column: 9, scope: !6989)
!6991 = !DILocation(line: 3502, column: 22, scope: !6989)
!6992 = !DILocation(line: 3509, column: 1, scope: !6955)
!6993 = distinct !DISubprogram(name: "dormd", scope: !3, file: !3, line: 3511, type: !469, scopeLine: 3512, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!6994 = !DILocalVariable(name: "name", arg: 1, scope: !6993, file: !3, line: 3511, type: !308)
!6995 = !DILocation(line: 3511, column: 18, scope: !6993)
!6996 = !DILocation(line: 3518, column: 9, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !6993, file: !3, line: 3518, column: 9)
!6998 = !DILocation(line: 3518, column: 15, scope: !6997)
!6999 = !DILocation(line: 3518, column: 9, scope: !6993)
!7000 = !DILocation(line: 3519, column: 9, scope: !7001)
!7001 = distinct !DILexicalBlock(scope: !6997, file: !3, line: 3518, column: 21)
!7002 = !DILocation(line: 3520, column: 9, scope: !7001)
!7003 = !DILocation(line: 3523, column: 25, scope: !7004)
!7004 = distinct !DILexicalBlock(scope: !6993, file: !3, line: 3523, column: 9)
!7005 = !DILocation(line: 3523, column: 31, scope: !7004)
!7006 = !DILocation(line: 3523, column: 9, scope: !7004)
!7007 = !DILocation(line: 3523, column: 45, scope: !7004)
!7008 = !DILocation(line: 3523, column: 9, scope: !6993)
!7009 = !DILocation(line: 3524, column: 9, scope: !7010)
!7010 = distinct !DILexicalBlock(scope: !7004, file: !3, line: 3523, column: 51)
!7011 = !DILocation(line: 3525, column: 9, scope: !7010)
!7012 = !DILocation(line: 3535, column: 9, scope: !6993)
!7013 = !DILocation(line: 3537, column: 1, scope: !6993)
!7014 = distinct !DISubprogram(name: "dofeat", scope: !3, file: !3, line: 3540, type: !486, scopeLine: 3541, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!7015 = !DILocalVariable(name: "feat", scope: !7014, file: !3, line: 3575, type: !7016)
!7016 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 1656, elements: !7017)
!7017 = !{!7018}
!7018 = !DISubrange(count: 207)
!7019 = !DILocation(line: 3575, column: 10, scope: !7014)
!7020 = !DILocation(line: 3577, column: 9, scope: !7021)
!7021 = distinct !DILexicalBlock(scope: !7014, file: !3, line: 3577, column: 9)
!7022 = !DILocation(line: 3577, column: 26, scope: !7021)
!7023 = !DILocation(line: 3577, column: 9, scope: !7014)
!7024 = !DILocation(line: 3578, column: 9, scope: !7025)
!7025 = distinct !DILexicalBlock(scope: !7021, file: !3, line: 3577, column: 32)
!7026 = !DILocation(line: 3578, column: 67, scope: !7025)
!7027 = !DILocation(line: 3579, column: 5, scope: !7025)
!7028 = !DILocation(line: 3581, column: 14, scope: !7029)
!7029 = distinct !DILexicalBlock(scope: !7021, file: !3, line: 3581, column: 14)
!7030 = !DILocation(line: 3581, column: 47, scope: !7029)
!7031 = !DILocation(line: 3581, column: 14, scope: !7021)
!7032 = !DILocation(line: 3582, column: 9, scope: !7033)
!7033 = distinct !DILexicalBlock(scope: !7029, file: !3, line: 3581, column: 53)
!7034 = !DILocation(line: 3582, column: 77, scope: !7033)
!7035 = !DILocation(line: 3583, column: 5, scope: !7033)
!7036 = !DILocation(line: 3585, column: 26, scope: !7014)
!7037 = !DILocation(line: 3585, column: 5, scope: !7014)
!7038 = !DILocation(line: 3586, column: 5, scope: !7014)
!7039 = !DILocation(line: 3587, column: 1, scope: !7014)
!7040 = !DILocalVariable(name: "file", scope: !485, file: !3, line: 3593, type: !3507)
!7041 = !DILocation(line: 3593, column: 10, scope: !485)
!7042 = !DILocalVariable(name: "tv", scope: !485, file: !3, line: 3595, type: !5577)
!7043 = !DILocation(line: 3595, column: 20, scope: !485)
!7044 = !DILocalVariable(name: "tz", scope: !485, file: !3, line: 3596, type: !5585)
!7045 = !DILocation(line: 3596, column: 21, scope: !485)
!7046 = !DILocation(line: 3598, column: 27, scope: !7047)
!7047 = distinct !DILexicalBlock(scope: !485, file: !3, line: 3598, column: 9)
!7048 = !DILocation(line: 3598, column: 9, scope: !7047)
!7049 = !DILocation(line: 3598, column: 32, scope: !7047)
!7050 = !DILocation(line: 3598, column: 9, scope: !485)
!7051 = !DILocation(line: 3599, column: 9, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7047, file: !3, line: 3598, column: 38)
!7053 = !DILocation(line: 3600, column: 9, scope: !7052)
!7054 = !DILocation(line: 3602, column: 9, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !485, file: !3, line: 3602, column: 9)
!7056 = !DILocation(line: 3602, column: 9, scope: !485)
!7057 = !DILocation(line: 3606, column: 9, scope: !7058)
!7058 = distinct !DILexicalBlock(scope: !7055, file: !3, line: 3605, column: 46)
!7059 = !DILocation(line: 3608, column: 8, scope: !485)
!7060 = !DILocation(line: 3609, column: 9, scope: !485)
!7061 = !DILocation(line: 3610, column: 31, scope: !485)
!7062 = !DILocation(line: 3610, column: 5, scope: !485)
!7063 = !DILocation(line: 3611, column: 12, scope: !485)
!7064 = !DILocation(line: 3611, column: 5, scope: !485)
!7065 = !DILocation(line: 3612, column: 1, scope: !485)
!7066 = distinct !DISubprogram(name: "dostor", scope: !3, file: !3, line: 4190, type: !7067, scopeLine: 4191, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!7067 = !DISubroutineType(types: !7068)
!7068 = !{null, !308, !731, !731}
!7069 = !DILocalVariable(name: "name", arg: 1, scope: !7066, file: !3, line: 4190, type: !308)
!7070 = !DILocation(line: 4190, column: 19, scope: !7066)
!7071 = !DILocalVariable(name: "append", arg: 2, scope: !7066, file: !3, line: 4190, type: !731)
!7072 = !DILocation(line: 4190, column: 35, scope: !7066)
!7073 = !DILocalVariable(name: "autorename", arg: 3, scope: !7066, file: !3, line: 4190, type: !731)
!7074 = !DILocation(line: 4190, column: 53, scope: !7066)
!7075 = !DILocalVariable(name: "ulhandler", scope: !7066, file: !3, line: 4192, type: !7076)
!7076 = !DIDerivedType(tag: DW_TAG_typedef, name: "ULHandler", file: !352, line: 337, baseType: !7077)
!7077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ULHandler_", file: !352, line: 315, size: 1408, elements: !7078)
!7078 = !{!7079, !7080, !7081, !7082, !7083, !7084, !7085, !7086, !7087, !7088, !7089, !7090, !7091, !7092, !7093, !7094, !7095, !7096, !7097, !7098, !7099}
!7079 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !7077, file: !352, line: 316, baseType: !382, size: 64)
!7080 = !DIDerivedType(tag: DW_TAG_member, name: "sizeof_buf", scope: !7077, file: !352, line: 317, baseType: !304, size: 64, offset: 64)
!7081 = !DIDerivedType(tag: DW_TAG_member, name: "clientfd", scope: !7077, file: !352, line: 318, baseType: !326, size: 32, offset: 128)
!7082 = !DIDerivedType(tag: DW_TAG_member, name: "tls_clientfd", scope: !7077, file: !352, line: 319, baseType: !303, size: 64, offset: 192)
!7083 = !DIDerivedType(tag: DW_TAG_member, name: "xferfd", scope: !7077, file: !352, line: 320, baseType: !326, size: 32, offset: 256)
!7084 = !DIDerivedType(tag: DW_TAG_member, name: "tls_fd", scope: !7077, file: !352, line: 321, baseType: !303, size: 64, offset: 320)
!7085 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !7077, file: !352, line: 322, baseType: !326, size: 32, offset: 384)
!7086 = !DIDerivedType(tag: DW_TAG_member, name: "cur_pos", scope: !7077, file: !352, line: 323, baseType: !344, size: 64, offset: 448)
!7087 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !7077, file: !352, line: 324, baseType: !344, size: 64, offset: 512)
!7088 = !DIDerivedType(tag: DW_TAG_member, name: "min_chunk_size", scope: !7077, file: !352, line: 325, baseType: !344, size: 64, offset: 576)
!7089 = !DIDerivedType(tag: DW_TAG_member, name: "default_chunk_size", scope: !7077, file: !352, line: 326, baseType: !344, size: 64, offset: 640)
!7090 = !DIDerivedType(tag: DW_TAG_member, name: "max_chunk_size", scope: !7077, file: !352, line: 327, baseType: !344, size: 64, offset: 704)
!7091 = !DIDerivedType(tag: DW_TAG_member, name: "total_uploaded", scope: !7077, file: !352, line: 328, baseType: !344, size: 64, offset: 768)
!7092 = !DIDerivedType(tag: DW_TAG_member, name: "ascii_mode", scope: !7077, file: !352, line: 329, baseType: !326, size: 32, offset: 832)
!7093 = !DIDerivedType(tag: DW_TAG_member, name: "min_sleep", scope: !7077, file: !352, line: 330, baseType: !336, size: 64, offset: 896)
!7094 = !DIDerivedType(tag: DW_TAG_member, name: "max_sleep", scope: !7077, file: !352, line: 331, baseType: !336, size: 64, offset: 960)
!7095 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth", scope: !7077, file: !352, line: 332, baseType: !306, size: 64, offset: 1024)
!7096 = !DIDerivedType(tag: DW_TAG_member, name: "max_filesize", scope: !7077, file: !352, line: 333, baseType: !344, size: 64, offset: 1088)
!7097 = !DIDerivedType(tag: DW_TAG_member, name: "idletime", scope: !7077, file: !352, line: 334, baseType: !306, size: 64, offset: 1152)
!7098 = !DIDerivedType(tag: DW_TAG_member, name: "pfds", scope: !7077, file: !352, line: 335, baseType: !2057, size: 128, offset: 1216)
!7099 = !DIDerivedType(tag: DW_TAG_member, name: "pfds_command", scope: !7077, file: !352, line: 336, baseType: !2058, size: 64, offset: 1344)
!7100 = !DILocation(line: 4192, column: 15, scope: !7066)
!7101 = !DILocalVariable(name: "f", scope: !7066, file: !3, line: 4193, type: !326)
!7102 = !DILocation(line: 4193, column: 9, scope: !7066)
!7103 = !DILocalVariable(name: "ul_name", scope: !7066, file: !3, line: 4194, type: !385)
!7104 = !DILocation(line: 4194, column: 17, scope: !7066)
!7105 = !DILocalVariable(name: "atomic_file", scope: !7066, file: !3, line: 4195, type: !385)
!7106 = !DILocation(line: 4195, column: 17, scope: !7066)
!7107 = !DILocalVariable(name: "filesize", scope: !7066, file: !3, line: 4196, type: !344)
!7108 = !DILocation(line: 4196, column: 11, scope: !7066)
!7109 = !DILocalVariable(name: "st", scope: !7066, file: !3, line: 4197, type: !3147)
!7110 = !DILocation(line: 4197, column: 17, scope: !7066)
!7111 = !DILocalVariable(name: "started", scope: !7066, file: !3, line: 4198, type: !336)
!7112 = !DILocation(line: 4198, column: 12, scope: !7066)
!7113 = !DILocalVariable(name: "overwrite", scope: !7066, file: !3, line: 4199, type: !396)
!7114 = !DILocation(line: 4199, column: 17, scope: !7066)
!7115 = !DILocalVariable(name: "overflow", scope: !7066, file: !3, line: 4200, type: !326)
!7116 = !DILocation(line: 4200, column: 9, scope: !7066)
!7117 = !DILocalVariable(name: "ret", scope: !7066, file: !3, line: 4201, type: !326)
!7118 = !DILocation(line: 4201, column: 9, scope: !7066)
!7119 = !DILocalVariable(name: "max_filesize", scope: !7066, file: !3, line: 4202, type: !344)
!7120 = !DILocation(line: 4202, column: 11, scope: !7066)
!7121 = !DILocalVariable(name: "name2", scope: !7066, file: !3, line: 4206, type: !385)
!7122 = !DILocation(line: 4206, column: 17, scope: !7066)
!7123 = !DILocation(line: 4208, column: 9, scope: !7124)
!7124 = distinct !DILexicalBlock(scope: !7066, file: !3, line: 4208, column: 9)
!7125 = !DILocation(line: 4208, column: 14, scope: !7124)
!7126 = !DILocation(line: 4208, column: 18, scope: !7124)
!7127 = !DILocation(line: 4208, column: 22, scope: !7124)
!7128 = !DILocation(line: 4208, column: 27, scope: !7124)
!7129 = !DILocation(line: 4208, column: 32, scope: !7124)
!7130 = !DILocation(line: 4208, column: 35, scope: !7124)
!7131 = !DILocation(line: 4208, column: 45, scope: !7124)
!7132 = !DILocation(line: 4208, column: 9, scope: !7066)
!7133 = !DILocation(line: 4209, column: 9, scope: !7134)
!7134 = distinct !DILexicalBlock(scope: !7124, file: !3, line: 4208, column: 59)
!7135 = !DILocation(line: 4210, column: 9, scope: !7134)
!7136 = !DILocation(line: 4213, column: 9, scope: !7137)
!7137 = distinct !DILexicalBlock(scope: !7066, file: !3, line: 4213, column: 9)
!7138 = !DILocation(line: 4213, column: 15, scope: !7137)
!7139 = !DILocation(line: 4213, column: 20, scope: !7137)
!7140 = !DILocation(line: 4213, column: 23, scope: !7137)
!7141 = !DILocation(line: 4213, column: 37, scope: !7137)
!7142 = !DILocation(line: 4213, column: 9, scope: !7066)
!7143 = !DILocation(line: 4214, column: 9, scope: !7144)
!7144 = distinct !DILexicalBlock(scope: !7137, file: !3, line: 4213, column: 43)
!7145 = !DILocation(line: 4215, column: 9, scope: !7144)
!7146 = !DILocation(line: 4218, column: 29, scope: !7147)
!7147 = distinct !DILexicalBlock(scope: !7066, file: !3, line: 4218, column: 9)
!7148 = !DILocation(line: 4218, column: 9, scope: !7147)
!7149 = !DILocation(line: 4218, column: 41, scope: !7147)
!7150 = !DILocation(line: 4218, column: 9, scope: !7066)
!7151 = !DILocation(line: 4219, column: 9, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7147, file: !3, line: 4218, column: 47)
!7153 = !DILocation(line: 4220, column: 9, scope: !7152)
!7154 = !DILocation(line: 4222, column: 25, scope: !7155)
!7155 = distinct !DILexicalBlock(scope: !7066, file: !3, line: 4222, column: 9)
!7156 = !DILocation(line: 4222, column: 31, scope: !7155)
!7157 = !DILocation(line: 4222, column: 9, scope: !7155)
!7158 = !DILocation(line: 4222, column: 45, scope: !7155)
!7159 = !DILocation(line: 4222, column: 9, scope: !7066)
!7160 = !DILocation(line: 4223, column: 48, scope: !7161)
!7161 = distinct !DILexicalBlock(scope: !7155, file: !3, line: 4222, column: 51)
!7162 = !DILocation(line: 4223, column: 9, scope: !7161)
!7163 = !DILocation(line: 4224, column: 9, scope: !7161)
!7164 = !DILocation(line: 4226, column: 9, scope: !7165)
!7165 = distinct !DILexicalBlock(scope: !7066, file: !3, line: 4226, column: 9)
!7166 = !DILocation(line: 4226, column: 20, scope: !7165)
!7167 = !DILocation(line: 4226, column: 9, scope: !7066)
!7168 = !DILocation(line: 4227, column: 21, scope: !7169)
!7169 = distinct !DILexicalBlock(scope: !7165, file: !3, line: 4226, column: 26)
!7170 = !DILocation(line: 4228, column: 5, scope: !7169)
!7171 = !DILocation(line: 4229, column: 9, scope: !7172)
!7172 = distinct !DILexicalBlock(scope: !7066, file: !3, line: 4229, column: 9)
!7173 = !DILocation(line: 4229, column: 19, scope: !7172)
!7174 = !DILocation(line: 4229, column: 31, scope: !7172)
!7175 = !DILocation(line: 4229, column: 34, scope: !7172)
!7176 = !DILocation(line: 4229, column: 46, scope: !7172)
!7177 = !DILocation(line: 4229, column: 9, scope: !7066)
!7178 = !DILocation(line: 4230, column: 44, scope: !7179)
!7179 = distinct !DILexicalBlock(scope: !7180, file: !3, line: 4230, column: 13)
!7180 = distinct !DILexicalBlock(scope: !7172, file: !3, line: 4229, column: 52)
!7181 = !DILocation(line: 4230, column: 28, scope: !7179)
!7182 = !DILocation(line: 4230, column: 26, scope: !7179)
!7183 = !DILocation(line: 4230, column: 51, scope: !7179)
!7184 = !DILocation(line: 4230, column: 13, scope: !7180)
!7185 = !DILocation(line: 4231, column: 52, scope: !7186)
!7186 = distinct !DILexicalBlock(scope: !7179, file: !3, line: 4230, column: 60)
!7187 = !DILocation(line: 4231, column: 13, scope: !7186)
!7188 = !DILocation(line: 4232, column: 13, scope: !7186)
!7189 = !DILocation(line: 4234, column: 13, scope: !7190)
!7190 = distinct !DILexicalBlock(scope: !7180, file: !3, line: 4234, column: 13)
!7191 = !DILocation(line: 4234, column: 23, scope: !7190)
!7192 = !DILocation(line: 4234, column: 35, scope: !7190)
!7193 = !DILocation(line: 4235, column: 20, scope: !7190)
!7194 = !DILocation(line: 4235, column: 26, scope: !7190)
!7195 = !DILocation(line: 4235, column: 13, scope: !7190)
!7196 = !DILocation(line: 4235, column: 39, scope: !7190)
!7197 = !DILocation(line: 4235, column: 44, scope: !7190)
!7198 = !DILocation(line: 4235, column: 47, scope: !7190)
!7199 = !DILocation(line: 4235, column: 53, scope: !7190)
!7200 = !DILocation(line: 4234, column: 13, scope: !7180)
!7201 = !DILocation(line: 4236, column: 13, scope: !7202)
!7202 = distinct !DILexicalBlock(scope: !7190, file: !3, line: 4235, column: 64)
!7203 = !DILocation(line: 4237, column: 25, scope: !7202)
!7204 = !DILocation(line: 4238, column: 13, scope: !7202)
!7205 = !DILocation(line: 4240, column: 5, scope: !7180)
!7206 = !DILocation(line: 4241, column: 9, scope: !7207)
!7207 = distinct !DILexicalBlock(scope: !7066, file: !3, line: 4241, column: 9)
!7208 = !DILocation(line: 4241, column: 21, scope: !7207)
!7209 = !DILocation(line: 4241, column: 9, scope: !7066)
!7210 = !DILocation(line: 4242, column: 19, scope: !7211)
!7211 = distinct !DILexicalBlock(scope: !7207, file: !3, line: 4241, column: 30)
!7212 = !DILocation(line: 4242, column: 17, scope: !7211)
!7213 = !DILocation(line: 4243, column: 5, scope: !7211)
!7214 = !DILocation(line: 4244, column: 19, scope: !7215)
!7215 = distinct !DILexicalBlock(scope: !7207, file: !3, line: 4243, column: 12)
!7216 = !DILocation(line: 4244, column: 17, scope: !7215)
!7217 = !DILocation(line: 4246, column: 9, scope: !7218)
!7218 = distinct !DILexicalBlock(scope: !7066, file: !3, line: 4246, column: 9)
!7219 = !DILocation(line: 4246, column: 21, scope: !7218)
!7220 = !DILocation(line: 4246, column: 29, scope: !7218)
!7221 = !DILocation(line: 4247, column: 19, scope: !7218)
!7222 = !DILocation(line: 4247, column: 14, scope: !7218)
!7223 = !DILocation(line: 4247, column: 12, scope: !7218)
!7224 = !DILocation(line: 4247, column: 52, scope: !7218)
!7225 = !DILocation(line: 4246, column: 9, scope: !7066)
!7226 = !DILocation(line: 4248, column: 18, scope: !7227)
!7227 = distinct !DILexicalBlock(scope: !7218, file: !3, line: 4247, column: 59)
!7228 = !DILocation(line: 4249, column: 5, scope: !7227)
!7229 = !DILocation(line: 4249, column: 26, scope: !7230)
!7230 = distinct !DILexicalBlock(scope: !7218, file: !3, line: 4249, column: 16)
!7231 = !DILocation(line: 4250, column: 43, scope: !7230)
!7232 = !DILocation(line: 4250, column: 42, scope: !7230)
!7233 = !DILocation(line: 4250, column: 40, scope: !7230)
!7234 = !DILocation(line: 4249, column: 21, scope: !7230)
!7235 = !DILocation(line: 4249, column: 19, scope: !7230)
!7236 = !DILocation(line: 4250, column: 52, scope: !7230)
!7237 = !DILocation(line: 4249, column: 16, scope: !7218)
!7238 = !DILocation(line: 4251, column: 9, scope: !7239)
!7239 = distinct !DILexicalBlock(scope: !7230, file: !3, line: 4250, column: 59)
!7240 = !DILocation(line: 4252, column: 9, scope: !7239)
!7241 = !DILocation(line: 4254, column: 15, scope: !7242)
!7242 = distinct !DILexicalBlock(scope: !7066, file: !3, line: 4254, column: 9)
!7243 = !DILocation(line: 4254, column: 9, scope: !7242)
!7244 = !DILocation(line: 4254, column: 23, scope: !7242)
!7245 = !DILocation(line: 4254, column: 9, scope: !7066)
!7246 = !DILocation(line: 4255, column: 22, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7242, file: !3, line: 4254, column: 28)
!7248 = !DILocation(line: 4255, column: 16, scope: !7247)
!7249 = !DILocation(line: 4256, column: 9, scope: !7247)
!7250 = !DILocation(line: 4257, column: 9, scope: !7247)
!7251 = !DILocation(line: 4259, column: 10, scope: !7252)
!7252 = distinct !DILexicalBlock(scope: !7066, file: !3, line: 4259, column: 9)
!7253 = !DILocation(line: 4259, column: 9, scope: !7066)
!7254 = !DILocation(line: 4260, column: 22, scope: !7255)
!7255 = distinct !DILexicalBlock(scope: !7252, file: !3, line: 4259, column: 31)
!7256 = !DILocation(line: 4260, column: 16, scope: !7255)
!7257 = !DILocation(line: 4261, column: 9, scope: !7255)
!7258 = !DILocation(line: 4262, column: 9, scope: !7255)
!7259 = !DILocation(line: 4267, column: 12, scope: !7260)
!7260 = distinct !DILexicalBlock(scope: !7066, file: !3, line: 4267, column: 9)
!7261 = !DILocation(line: 4267, column: 20, scope: !7260)
!7262 = !DILocation(line: 4267, column: 9, scope: !7066)
!7263 = !DILocation(line: 4269, column: 13, scope: !7264)
!7264 = distinct !DILexicalBlock(scope: !7265, file: !3, line: 4269, column: 13)
!7265 = distinct !DILexicalBlock(scope: !7260, file: !3, line: 4267, column: 33)
!7266 = !DILocation(line: 4269, column: 19, scope: !7264)
!7267 = !DILocation(line: 4269, column: 13, scope: !7265)
!7268 = !DILocation(line: 4270, column: 13, scope: !7269)
!7269 = distinct !DILexicalBlock(scope: !7264, file: !3, line: 4269, column: 25)
!7270 = !DILocation(line: 4271, column: 26, scope: !7269)
!7271 = !DILocation(line: 4271, column: 20, scope: !7269)
!7272 = !DILocation(line: 4272, column: 13, scope: !7269)
!7273 = !DILocation(line: 4275, column: 13, scope: !7274)
!7274 = distinct !DILexicalBlock(scope: !7265, file: !3, line: 4275, column: 13)
!7275 = !DILocation(line: 4275, column: 20, scope: !7274)
!7276 = !DILocation(line: 4275, column: 13, scope: !7265)
!7277 = !DILocation(line: 4276, column: 28, scope: !7278)
!7278 = distinct !DILexicalBlock(scope: !7274, file: !3, line: 4275, column: 26)
!7279 = !DILocation(line: 4276, column: 23, scope: !7278)
!7280 = !DILocation(line: 4277, column: 9, scope: !7278)
!7281 = !DILocation(line: 4278, column: 5, scope: !7265)
!7282 = !DILocation(line: 4279, column: 19, scope: !7283)
!7283 = distinct !DILexicalBlock(scope: !7260, file: !3, line: 4278, column: 12)
!7284 = !DILocation(line: 4281, column: 9, scope: !7285)
!7285 = distinct !DILexicalBlock(scope: !7066, file: !3, line: 4281, column: 9)
!7286 = !DILocation(line: 4281, column: 24, scope: !7285)
!7287 = !DILocation(line: 4281, column: 19, scope: !7285)
!7288 = !DILocation(line: 4281, column: 9, scope: !7066)
!7289 = !DILocation(line: 4282, column: 24, scope: !7290)
!7290 = distinct !DILexicalBlock(scope: !7285, file: !3, line: 4281, column: 33)
!7291 = !DILocation(line: 4282, column: 19, scope: !7290)
!7292 = !DILocation(line: 4283, column: 5, scope: !7290)
!7293 = !DILocation(line: 4284, column: 9, scope: !7294)
!7294 = distinct !DILexicalBlock(scope: !7066, file: !3, line: 4284, column: 9)
!7295 = !DILocation(line: 4284, column: 19, scope: !7294)
!7296 = !DILocation(line: 4284, column: 31, scope: !7294)
!7297 = !DILocation(line: 4284, column: 40, scope: !7294)
!7298 = !DILocation(line: 4284, column: 43, scope: !7294)
!7299 = !DILocation(line: 4284, column: 34, scope: !7294)
!7300 = !DILocation(line: 4284, column: 64, scope: !7294)
!7301 = !DILocation(line: 4284, column: 9, scope: !7066)
!7302 = !DILocation(line: 4285, column: 22, scope: !7303)
!7303 = distinct !DILexicalBlock(scope: !7294, file: !3, line: 4284, column: 77)
!7304 = !DILocation(line: 4285, column: 16, scope: !7303)
!7305 = !DILocation(line: 4286, column: 9, scope: !7303)
!7306 = !DILocation(line: 4287, column: 9, scope: !7303)
!7307 = !DILocation(line: 4289, column: 9, scope: !7308)
!7308 = distinct !DILexicalBlock(scope: !7066, file: !3, line: 4289, column: 9)
!7309 = !DILocation(line: 4289, column: 24, scope: !7308)
!7310 = !DILocation(line: 4289, column: 19, scope: !7308)
!7311 = !DILocation(line: 4289, column: 9, scope: !7066)
!7312 = !DILocation(line: 4290, column: 23, scope: !7313)
!7313 = distinct !DILexicalBlock(scope: !7314, file: !3, line: 4290, column: 13)
!7314 = distinct !DILexicalBlock(scope: !7308, file: !3, line: 4289, column: 33)
!7315 = !DILocation(line: 4290, column: 26, scope: !7313)
!7316 = !DILocation(line: 4290, column: 13, scope: !7313)
!7317 = !DILocation(line: 4290, column: 37, scope: !7313)
!7318 = !DILocation(line: 4290, column: 13, scope: !7314)
!7319 = !DILocation(line: 4291, column: 26, scope: !7320)
!7320 = distinct !DILexicalBlock(scope: !7313, file: !3, line: 4290, column: 42)
!7321 = !DILocation(line: 4291, column: 20, scope: !7320)
!7322 = !DILocation(line: 4292, column: 13, scope: !7320)
!7323 = !DILocation(line: 4293, column: 13, scope: !7320)
!7324 = !DILocation(line: 4302, column: 5, scope: !7314)
!7325 = !DILocation(line: 4314, column: 5, scope: !7066)
!7326 = !DILocation(line: 4315, column: 9, scope: !7327)
!7327 = distinct !DILexicalBlock(scope: !7066, file: !3, line: 4315, column: 9)
!7328 = !DILocation(line: 4315, column: 16, scope: !7327)
!7329 = !DILocation(line: 4315, column: 9, scope: !7066)
!7330 = !DILocation(line: 4316, column: 22, scope: !7331)
!7331 = distinct !DILexicalBlock(scope: !7327, file: !3, line: 4315, column: 23)
!7332 = !DILocation(line: 4316, column: 16, scope: !7331)
!7333 = !DILocation(line: 4317, column: 9, scope: !7331)
!7334 = !DILocation(line: 4319, column: 5, scope: !7066)
!7335 = !DILocation(line: 4325, column: 24, scope: !7066)
!7336 = !DILocation(line: 4326, column: 5, scope: !7066)
!7337 = !DILocation(line: 4327, column: 16, scope: !7066)
!7338 = !DILocation(line: 4327, column: 14, scope: !7066)
!7339 = !DILocation(line: 4353, column: 15, scope: !7066)
!7340 = !DILocation(line: 4353, column: 13, scope: !7066)
!7341 = !DILocation(line: 4355, column: 29, scope: !7342)
!7342 = distinct !DILexicalBlock(scope: !7066, file: !3, line: 4355, column: 9)
!7343 = !DILocation(line: 4355, column: 39, scope: !7342)
!7344 = !DILocation(line: 4355, column: 48, scope: !7342)
!7345 = !DILocation(line: 4355, column: 56, scope: !7342)
!7346 = !DILocation(line: 4355, column: 62, scope: !7342)
!7347 = !DILocation(line: 4355, column: 65, scope: !7342)
!7348 = !DILocation(line: 4356, column: 17, scope: !7342)
!7349 = !DILocation(line: 4356, column: 28, scope: !7342)
!7350 = !DILocation(line: 4356, column: 33, scope: !7342)
!7351 = !DILocation(line: 4356, column: 39, scope: !7342)
!7352 = !DILocation(line: 4357, column: 17, scope: !7342)
!7353 = !DILocation(line: 4355, column: 9, scope: !7342)
!7354 = !DILocation(line: 4357, column: 31, scope: !7342)
!7355 = !DILocation(line: 4355, column: 9, scope: !7066)
!7356 = !DILocation(line: 4358, column: 15, scope: !7357)
!7357 = distinct !DILexicalBlock(scope: !7342, file: !3, line: 4357, column: 37)
!7358 = !DILocation(line: 4358, column: 13, scope: !7357)
!7359 = !DILocation(line: 4359, column: 9, scope: !7357)
!7360 = !DILocation(line: 4360, column: 5, scope: !7357)
!7361 = !DILocation(line: 4361, column: 13, scope: !7362)
!7362 = distinct !DILexicalBlock(scope: !7342, file: !3, line: 4360, column: 12)
!7363 = !DILocation(line: 4363, column: 18, scope: !7066)
!7364 = !DILocation(line: 4363, column: 12, scope: !7066)
!7365 = !DILocation(line: 4364, column: 5, scope: !7066)
!7366 = !DILocation(line: 4382, column: 48, scope: !7066)
!7367 = !DILocation(line: 4382, column: 14, scope: !7066)
!7368 = !DILocalVariable(name: "atomic_file_size", scope: !7369, file: !3, line: 4384, type: !344)
!7369 = distinct !DILexicalBlock(scope: !7066, file: !3, line: 4383, column: 5)
!7370 = !DILocation(line: 4384, column: 15, scope: !7369)
!7371 = !DILocalVariable(name: "original_file_size", scope: !7369, file: !3, line: 4385, type: !344)
!7372 = !DILocation(line: 4385, column: 15, scope: !7369)
!7373 = !DILocalVariable(name: "files_count", scope: !7369, file: !3, line: 4386, type: !326)
!7374 = !DILocation(line: 4386, column: 13, scope: !7369)
!7375 = !DILocation(line: 4388, column: 13, scope: !7376)
!7376 = distinct !DILexicalBlock(scope: !7369, file: !3, line: 4388, column: 13)
!7377 = !DILocation(line: 4388, column: 23, scope: !7376)
!7378 = !DILocation(line: 4388, column: 13, scope: !7369)
!7379 = !DILocation(line: 4389, column: 25, scope: !7380)
!7380 = distinct !DILexicalBlock(scope: !7376, file: !3, line: 4388, column: 29)
!7381 = !DILocation(line: 4390, column: 9, scope: !7380)
!7382 = !DILocation(line: 4391, column: 25, scope: !7383)
!7383 = distinct !DILexicalBlock(scope: !7376, file: !3, line: 4390, column: 16)
!7384 = !DILocation(line: 4393, column: 13, scope: !7385)
!7385 = distinct !DILexicalBlock(scope: !7369, file: !3, line: 4393, column: 13)
!7386 = !DILocation(line: 4393, column: 24, scope: !7385)
!7387 = !DILocation(line: 4393, column: 29, scope: !7385)
!7388 = !DILocation(line: 4393, column: 32, scope: !7385)
!7389 = !DILocation(line: 4393, column: 42, scope: !7385)
!7390 = !DILocation(line: 4393, column: 13, scope: !7369)
!7391 = !DILocation(line: 4394, column: 51, scope: !7392)
!7392 = distinct !DILexicalBlock(scope: !7393, file: !3, line: 4394, column: 17)
!7393 = distinct !DILexicalBlock(scope: !7385, file: !3, line: 4393, column: 56)
!7394 = !DILocation(line: 4394, column: 37, scope: !7392)
!7395 = !DILocation(line: 4394, column: 35, scope: !7392)
!7396 = !DILocation(line: 4394, column: 65, scope: !7392)
!7397 = !DILocation(line: 4394, column: 17, scope: !7393)
!7398 = !DILocation(line: 4395, column: 17, scope: !7399)
!7399 = distinct !DILexicalBlock(scope: !7392, file: !3, line: 4394, column: 78)
!7400 = !DILocation(line: 4397, column: 31, scope: !7401)
!7401 = distinct !DILexicalBlock(scope: !7393, file: !3, line: 4397, column: 17)
!7402 = !DILocation(line: 4397, column: 44, scope: !7401)
!7403 = !DILocation(line: 4397, column: 17, scope: !7401)
!7404 = !DILocation(line: 4397, column: 58, scope: !7401)
!7405 = !DILocation(line: 4397, column: 17, scope: !7393)
!7406 = !DILocation(line: 4398, column: 17, scope: !7407)
!7407 = distinct !DILexicalBlock(scope: !7401, file: !3, line: 4397, column: 64)
!7408 = !DILocation(line: 4399, column: 17, scope: !7407)
!7409 = !DILocation(line: 4404, column: 29, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7401, file: !3, line: 4400, column: 20)
!7411 = !DILocation(line: 4406, column: 9, scope: !7393)
!7412 = !DILocation(line: 4406, column: 20, scope: !7413)
!7413 = distinct !DILexicalBlock(scope: !7385, file: !3, line: 4406, column: 20)
!7414 = !DILocation(line: 4406, column: 32, scope: !7413)
!7415 = !DILocation(line: 4406, column: 20, scope: !7385)
!7416 = !DILocation(line: 4407, column: 51, scope: !7417)
!7417 = distinct !DILexicalBlock(scope: !7418, file: !3, line: 4407, column: 17)
!7418 = distinct !DILexicalBlock(scope: !7413, file: !3, line: 4406, column: 41)
!7419 = !DILocation(line: 4407, column: 37, scope: !7417)
!7420 = !DILocation(line: 4407, column: 35, scope: !7417)
!7421 = !DILocation(line: 4407, column: 65, scope: !7417)
!7422 = !DILocation(line: 4407, column: 17, scope: !7418)
!7423 = !DILocation(line: 4408, column: 17, scope: !7424)
!7424 = distinct !DILexicalBlock(scope: !7417, file: !3, line: 4407, column: 78)
!7425 = !DILocation(line: 4410, column: 53, scope: !7426)
!7426 = distinct !DILexicalBlock(scope: !7418, file: !3, line: 4410, column: 17)
!7427 = !DILocation(line: 4410, column: 39, scope: !7426)
!7428 = !DILocation(line: 4410, column: 37, scope: !7426)
!7429 = !DILocation(line: 4410, column: 60, scope: !7426)
!7430 = !DILocation(line: 4410, column: 72, scope: !7426)
!7431 = !DILocation(line: 4411, column: 17, scope: !7426)
!7432 = !DILocation(line: 4411, column: 29, scope: !7426)
!7433 = !DILocation(line: 4411, column: 27, scope: !7426)
!7434 = !DILocation(line: 4410, column: 17, scope: !7418)
!7435 = !DILocation(line: 4412, column: 38, scope: !7436)
!7436 = distinct !DILexicalBlock(scope: !7426, file: !3, line: 4411, column: 49)
!7437 = !DILocation(line: 4412, column: 36, scope: !7436)
!7438 = !DILocation(line: 4413, column: 13, scope: !7436)
!7439 = !DILocation(line: 4414, column: 24, scope: !7440)
!7440 = distinct !DILexicalBlock(scope: !7418, file: !3, line: 4414, column: 17)
!7441 = !DILocation(line: 4414, column: 37, scope: !7440)
!7442 = !DILocation(line: 4414, column: 17, scope: !7440)
!7443 = !DILocation(line: 4414, column: 43, scope: !7440)
!7444 = !DILocation(line: 4414, column: 17, scope: !7418)
!7445 = !DILocation(line: 4415, column: 17, scope: !7446)
!7446 = distinct !DILexicalBlock(scope: !7440, file: !3, line: 4414, column: 49)
!7447 = !DILocation(line: 4416, column: 17, scope: !7446)
!7448 = !DILocation(line: 4422, column: 29, scope: !7449)
!7449 = distinct !DILexicalBlock(scope: !7440, file: !3, line: 4417, column: 20)
!7450 = !DILocation(line: 4424, column: 9, scope: !7418)
!7451 = !DILocation(line: 4430, column: 5, scope: !7369)
!7452 = !DILabel(scope: !7066, name: "afterquota", file: !3, line: 4431)
!7453 = !DILocation(line: 4431, column: 5, scope: !7066)
!7454 = !DILocation(line: 4432, column: 9, scope: !7455)
!7455 = distinct !DILexicalBlock(scope: !7066, file: !3, line: 4432, column: 9)
!7456 = !DILocation(line: 4432, column: 18, scope: !7455)
!7457 = !DILocation(line: 4432, column: 9, scope: !7066)
!7458 = !DILocation(line: 4433, column: 43, scope: !7459)
!7459 = distinct !DILexicalBlock(scope: !7455, file: !3, line: 4432, column: 23)
!7460 = !DILocation(line: 4433, column: 9, scope: !7459)
!7461 = !DILocation(line: 4434, column: 5, scope: !7459)
!7462 = !DILocation(line: 4435, column: 13, scope: !7463)
!7463 = distinct !DILexicalBlock(scope: !7464, file: !3, line: 4435, column: 13)
!7464 = distinct !DILexicalBlock(scope: !7455, file: !3, line: 4434, column: 12)
!7465 = !DILocation(line: 4435, column: 17, scope: !7463)
!7466 = !DILocation(line: 4435, column: 13, scope: !7464)
!7467 = !DILocation(line: 4436, column: 13, scope: !7468)
!7468 = distinct !DILexicalBlock(scope: !7463, file: !3, line: 4435, column: 23)
!7469 = !DILocation(line: 4437, column: 9, scope: !7468)
!7470 = !DILocation(line: 4438, column: 13, scope: !7471)
!7471 = distinct !DILexicalBlock(scope: !7463, file: !3, line: 4437, column: 16)
!7472 = !DILocation(line: 4440, column: 45, scope: !7464)
!7473 = !DILocation(line: 4440, column: 61, scope: !7464)
!7474 = !DILocation(line: 4441, column: 21, scope: !7464)
!7475 = !DILocation(line: 4441, column: 29, scope: !7464)
!7476 = !DILocation(line: 4441, column: 37, scope: !7464)
!7477 = !DILocation(line: 4440, column: 9, scope: !7464)
!7478 = !DILocation(line: 4432, column: 20, scope: !7455)
!7479 = !DILabel(scope: !7066, name: "end", file: !3, line: 4443)
!7480 = !DILocation(line: 4443, column: 5, scope: !7066)
!7481 = !DILocation(line: 4444, column: 15, scope: !7066)
!7482 = !DILocation(line: 4445, column: 9, scope: !7483)
!7483 = distinct !DILexicalBlock(scope: !7066, file: !3, line: 4445, column: 9)
!7484 = !DILocation(line: 4445, column: 21, scope: !7483)
!7485 = !DILocation(line: 4445, column: 9, scope: !7066)
!7486 = !DILocation(line: 4447, column: 21, scope: !7487)
!7487 = distinct !DILexicalBlock(scope: !7483, file: !3, line: 4445, column: 30)
!7488 = !DILocation(line: 4448, column: 5, scope: !7487)
!7489 = !DILocation(line: 4449, column: 1, scope: !7066)
!7490 = distinct !DISubprogram(name: "ul_init", scope: !3, file: !3, line: 3810, type: !7491, scopeLine: 3815, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!7491 = !DISubroutineType(types: !7492)
!7492 = !{!326, !7493, !731, !892, !731, !529, !731, !892, !3330, !731, !1251, !3330}
!7493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7494)
!7494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7076, size: 64)
!7495 = !DILocalVariable(name: "ulhandler", arg: 1, scope: !7490, file: !3, line: 3810, type: !7493)
!7496 = !DILocation(line: 3810, column: 38, scope: !7490)
!7497 = !DILocalVariable(name: "clientfd", arg: 2, scope: !7490, file: !3, line: 3810, type: !731)
!7498 = !DILocation(line: 3810, column: 59, scope: !7490)
!7499 = !DILocalVariable(name: "tls_clientfd", arg: 3, scope: !7490, file: !3, line: 3811, type: !892)
!7500 = !DILocation(line: 3811, column: 33, scope: !7490)
!7501 = !DILocalVariable(name: "xferfd", arg: 4, scope: !7490, file: !3, line: 3811, type: !731)
!7502 = !DILocation(line: 3811, column: 57, scope: !7490)
!7503 = !DILocalVariable(name: "name", arg: 5, scope: !7490, file: !3, line: 3812, type: !529)
!7504 = !DILocation(line: 3812, column: 39, scope: !7490)
!7505 = !DILocalVariable(name: "f", arg: 6, scope: !7490, file: !3, line: 3812, type: !731)
!7506 = !DILocation(line: 3812, column: 55, scope: !7490)
!7507 = !DILocalVariable(name: "tls_fd", arg: 7, scope: !7490, file: !3, line: 3812, type: !892)
!7508 = !DILocation(line: 3812, column: 71, scope: !7490)
!7509 = !DILocalVariable(name: "restartat", arg: 8, scope: !7490, file: !3, line: 3813, type: !3330)
!7510 = !DILocation(line: 3813, column: 32, scope: !7490)
!7511 = !DILocalVariable(name: "ascii_mode", arg: 9, scope: !7490, file: !3, line: 3813, type: !731)
!7512 = !DILocation(line: 3813, column: 53, scope: !7490)
!7513 = !DILocalVariable(name: "bandwidth", arg: 10, scope: !7490, file: !3, line: 3814, type: !1251)
!7514 = !DILocation(line: 3814, column: 40, scope: !7490)
!7515 = !DILocalVariable(name: "max_filesize", arg: 11, scope: !7490, file: !3, line: 3814, type: !3330)
!7516 = !DILocation(line: 3814, column: 63, scope: !7490)
!7517 = !DILocalVariable(name: "pfd", scope: !7490, file: !3, line: 3816, type: !2066)
!7518 = !DILocation(line: 3816, column: 20, scope: !7490)
!7519 = !DILocation(line: 3818, column: 12, scope: !7490)
!7520 = !DILocation(line: 3819, column: 15, scope: !7521)
!7521 = distinct !DILexicalBlock(scope: !7490, file: !3, line: 3819, column: 9)
!7522 = !DILocation(line: 3819, column: 38, scope: !7521)
!7523 = !DILocation(line: 3819, column: 32, scope: !7521)
!7524 = !DILocation(line: 3819, column: 55, scope: !7521)
!7525 = !DILocation(line: 3819, column: 9, scope: !7521)
!7526 = !DILocation(line: 3819, column: 69, scope: !7521)
!7527 = !DILocation(line: 3819, column: 9, scope: !7490)
!7528 = !DILocation(line: 3820, column: 9, scope: !7529)
!7529 = distinct !DILexicalBlock(scope: !7521, file: !3, line: 3819, column: 76)
!7530 = !DILocation(line: 3821, column: 9, scope: !7529)
!7531 = !DILocation(line: 3823, column: 5, scope: !7490)
!7532 = !DILocation(line: 3823, column: 16, scope: !7490)
!7533 = !DILocation(line: 3823, column: 20, scope: !7490)
!7534 = !DILocation(line: 3824, column: 5, scope: !7490)
!7535 = !DILocation(line: 3824, column: 16, scope: !7490)
!7536 = !DILocation(line: 3824, column: 27, scope: !7490)
!7537 = !DILocation(line: 3825, column: 27, scope: !7490)
!7538 = !DILocation(line: 3825, column: 5, scope: !7490)
!7539 = !DILocation(line: 3825, column: 16, scope: !7490)
!7540 = !DILocation(line: 3825, column: 25, scope: !7490)
!7541 = !DILocation(line: 3826, column: 31, scope: !7490)
!7542 = !DILocation(line: 3826, column: 5, scope: !7490)
!7543 = !DILocation(line: 3826, column: 16, scope: !7490)
!7544 = !DILocation(line: 3826, column: 29, scope: !7490)
!7545 = !DILocation(line: 3827, column: 25, scope: !7490)
!7546 = !DILocation(line: 3827, column: 5, scope: !7490)
!7547 = !DILocation(line: 3827, column: 16, scope: !7490)
!7548 = !DILocation(line: 3827, column: 23, scope: !7490)
!7549 = !DILocation(line: 3828, column: 20, scope: !7490)
!7550 = !DILocation(line: 3828, column: 5, scope: !7490)
!7551 = !DILocation(line: 3828, column: 16, scope: !7490)
!7552 = !DILocation(line: 3828, column: 18, scope: !7490)
!7553 = !DILocation(line: 3829, column: 25, scope: !7490)
!7554 = !DILocation(line: 3829, column: 5, scope: !7490)
!7555 = !DILocation(line: 3829, column: 16, scope: !7490)
!7556 = !DILocation(line: 3829, column: 23, scope: !7490)
!7557 = !DILocation(line: 3830, column: 29, scope: !7490)
!7558 = !DILocation(line: 3830, column: 5, scope: !7490)
!7559 = !DILocation(line: 3830, column: 16, scope: !7490)
!7560 = !DILocation(line: 3830, column: 27, scope: !7490)
!7561 = !DILocation(line: 3831, column: 26, scope: !7490)
!7562 = !DILocation(line: 3831, column: 5, scope: !7490)
!7563 = !DILocation(line: 3831, column: 16, scope: !7490)
!7564 = !DILocation(line: 3831, column: 24, scope: !7490)
!7565 = !DILocation(line: 3832, column: 5, scope: !7490)
!7566 = !DILocation(line: 3832, column: 16, scope: !7490)
!7567 = !DILocation(line: 3832, column: 31, scope: !7490)
!7568 = !DILocation(line: 3833, column: 5, scope: !7490)
!7569 = !DILocation(line: 3833, column: 16, scope: !7490)
!7570 = !DILocation(line: 3833, column: 26, scope: !7490)
!7571 = !DILocation(line: 3834, column: 5, scope: !7490)
!7572 = !DILocation(line: 3834, column: 16, scope: !7490)
!7573 = !DILocation(line: 3834, column: 26, scope: !7490)
!7574 = !DILocation(line: 3835, column: 28, scope: !7490)
!7575 = !DILocation(line: 3835, column: 5, scope: !7490)
!7576 = !DILocation(line: 3835, column: 16, scope: !7490)
!7577 = !DILocation(line: 3835, column: 26, scope: !7490)
!7578 = !DILocation(line: 3836, column: 31, scope: !7490)
!7579 = !DILocation(line: 3836, column: 5, scope: !7490)
!7580 = !DILocation(line: 3836, column: 16, scope: !7490)
!7581 = !DILocation(line: 3836, column: 29, scope: !7490)
!7582 = !DILocation(line: 3837, column: 27, scope: !7490)
!7583 = !DILocation(line: 3837, column: 5, scope: !7490)
!7584 = !DILocation(line: 3837, column: 16, scope: !7490)
!7585 = !DILocation(line: 3837, column: 25, scope: !7490)
!7586 = !DILocation(line: 3838, column: 12, scope: !7490)
!7587 = !DILocation(line: 3838, column: 23, scope: !7490)
!7588 = !DILocation(line: 3838, column: 9, scope: !7490)
!7589 = !DILocation(line: 3839, column: 15, scope: !7490)
!7590 = !DILocation(line: 3839, column: 5, scope: !7490)
!7591 = !DILocation(line: 3839, column: 10, scope: !7490)
!7592 = !DILocation(line: 3839, column: 13, scope: !7490)
!7593 = !DILocation(line: 3840, column: 5, scope: !7490)
!7594 = !DILocation(line: 3840, column: 10, scope: !7490)
!7595 = !DILocation(line: 3840, column: 17, scope: !7490)
!7596 = !DILocation(line: 3841, column: 5, scope: !7490)
!7597 = !DILocation(line: 3841, column: 10, scope: !7490)
!7598 = !DILocation(line: 3841, column: 18, scope: !7490)
!7599 = !DILocation(line: 3842, column: 12, scope: !7490)
!7600 = !DILocation(line: 3842, column: 23, scope: !7490)
!7601 = !DILocation(line: 3842, column: 9, scope: !7490)
!7602 = !DILocation(line: 3843, column: 15, scope: !7490)
!7603 = !DILocation(line: 3843, column: 5, scope: !7490)
!7604 = !DILocation(line: 3843, column: 10, scope: !7490)
!7605 = !DILocation(line: 3843, column: 13, scope: !7490)
!7606 = !DILocation(line: 3847, column: 5, scope: !7490)
!7607 = !DILocation(line: 3847, column: 10, scope: !7490)
!7608 = !DILocation(line: 3847, column: 17, scope: !7490)
!7609 = !DILocation(line: 3849, column: 5, scope: !7490)
!7610 = !DILocation(line: 3849, column: 10, scope: !7490)
!7611 = !DILocation(line: 3849, column: 18, scope: !7490)
!7612 = !DILocation(line: 3850, column: 12, scope: !7490)
!7613 = !DILocation(line: 3850, column: 23, scope: !7490)
!7614 = !DILocation(line: 3850, column: 9, scope: !7490)
!7615 = !DILocation(line: 3851, column: 15, scope: !7490)
!7616 = !DILocation(line: 3851, column: 5, scope: !7490)
!7617 = !DILocation(line: 3851, column: 10, scope: !7490)
!7618 = !DILocation(line: 3851, column: 13, scope: !7490)
!7619 = !DILocation(line: 3855, column: 5, scope: !7490)
!7620 = !DILocation(line: 3855, column: 10, scope: !7490)
!7621 = !DILocation(line: 3855, column: 17, scope: !7490)
!7622 = !DILocation(line: 3857, column: 5, scope: !7490)
!7623 = !DILocation(line: 3857, column: 10, scope: !7490)
!7624 = !DILocation(line: 3857, column: 18, scope: !7490)
!7625 = !DILocation(line: 3858, column: 5, scope: !7490)
!7626 = !DILocation(line: 3858, column: 16, scope: !7490)
!7627 = !DILocation(line: 3858, column: 31, scope: !7490)
!7628 = !DILocation(line: 3859, column: 9, scope: !7629)
!7629 = distinct !DILexicalBlock(scope: !7490, file: !3, line: 3859, column: 9)
!7630 = !DILocation(line: 3859, column: 20, scope: !7629)
!7631 = !DILocation(line: 3859, column: 9, scope: !7490)
!7632 = !DILocation(line: 3860, column: 41, scope: !7633)
!7633 = distinct !DILexicalBlock(scope: !7629, file: !3, line: 3859, column: 25)
!7634 = !DILocation(line: 3860, column: 52, scope: !7633)
!7635 = !DILocation(line: 3860, column: 67, scope: !7633)
!7636 = !DILocation(line: 3860, column: 9, scope: !7633)
!7637 = !DILocation(line: 3860, column: 20, scope: !7633)
!7638 = !DILocation(line: 3860, column: 39, scope: !7633)
!7639 = !DILocation(line: 3862, column: 5, scope: !7633)
!7640 = !DILocation(line: 3863, column: 9, scope: !7641)
!7641 = distinct !DILexicalBlock(scope: !7629, file: !3, line: 3862, column: 12)
!7642 = !DILocation(line: 3863, column: 20, scope: !7641)
!7643 = !DILocation(line: 3863, column: 35, scope: !7641)
!7644 = !DILocation(line: 3864, column: 13, scope: !7645)
!7645 = distinct !DILexicalBlock(scope: !7641, file: !3, line: 3864, column: 13)
!7646 = !DILocation(line: 3864, column: 23, scope: !7645)
!7647 = !DILocation(line: 3864, column: 13, scope: !7641)
!7648 = !DILocation(line: 3865, column: 45, scope: !7649)
!7649 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3864, column: 31)
!7650 = !DILocation(line: 3865, column: 56, scope: !7649)
!7651 = !DILocation(line: 3865, column: 13, scope: !7649)
!7652 = !DILocation(line: 3865, column: 24, scope: !7649)
!7653 = !DILocation(line: 3865, column: 43, scope: !7649)
!7654 = !DILocation(line: 3866, column: 9, scope: !7649)
!7655 = !DILocation(line: 3867, column: 13, scope: !7656)
!7656 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3866, column: 16)
!7657 = !DILocation(line: 3867, column: 24, scope: !7656)
!7658 = !DILocation(line: 3867, column: 43, scope: !7656)
!7659 = !DILocation(line: 3870, column: 29, scope: !7490)
!7660 = !DILocation(line: 3870, column: 40, scope: !7490)
!7661 = !DILocation(line: 3870, column: 5, scope: !7490)
!7662 = !DILocation(line: 3870, column: 16, scope: !7490)
!7663 = !DILocation(line: 3870, column: 27, scope: !7490)
!7664 = !DILocation(line: 3871, column: 26, scope: !7490)
!7665 = !DILocation(line: 3871, column: 5, scope: !7490)
!7666 = !DILocation(line: 3871, column: 16, scope: !7490)
!7667 = !DILocation(line: 3871, column: 24, scope: !7490)
!7668 = !DILocation(line: 3872, column: 29, scope: !7490)
!7669 = !DILocation(line: 3872, column: 40, scope: !7490)
!7670 = !DILocation(line: 3872, column: 5, scope: !7490)
!7671 = !DILocation(line: 3872, column: 16, scope: !7490)
!7672 = !DILocation(line: 3872, column: 27, scope: !7490)
!7673 = !DILocation(line: 3873, column: 34, scope: !7674)
!7674 = distinct !DILexicalBlock(scope: !7490, file: !3, line: 3873, column: 9)
!7675 = !DILocation(line: 3873, column: 45, scope: !7674)
!7676 = !DILocation(line: 3873, column: 27, scope: !7674)
!7677 = !DILocation(line: 3873, column: 10, scope: !7674)
!7678 = !DILocation(line: 3873, column: 21, scope: !7674)
!7679 = !DILocation(line: 3873, column: 25, scope: !7674)
!7680 = !DILocation(line: 3873, column: 58, scope: !7674)
!7681 = !DILocation(line: 3873, column: 9, scope: !7490)
!7682 = !DILocation(line: 3874, column: 9, scope: !7683)
!7683 = distinct !DILexicalBlock(scope: !7674, file: !3, line: 3873, column: 67)
!7684 = !DILocation(line: 3874, column: 20, scope: !7683)
!7685 = !DILocation(line: 3874, column: 24, scope: !7683)
!7686 = !DILocation(line: 3875, column: 9, scope: !7683)
!7687 = !DILocation(line: 3875, column: 20, scope: !7683)
!7688 = !DILocation(line: 3875, column: 31, scope: !7683)
!7689 = !DILocation(line: 3876, column: 9, scope: !7683)
!7690 = !DILocation(line: 3878, column: 5, scope: !7490)
!7691 = !DILocation(line: 3879, column: 1, scope: !7490)
!7692 = distinct !DISubprogram(name: "ul_send", scope: !3, file: !3, line: 4051, type: !7693, scopeLine: 4052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!7693 = !DISubroutineType(types: !7694)
!7694 = !{!326, !7493}
!7695 = !DILocalVariable(name: "ulhandler", arg: 1, scope: !7692, file: !3, line: 4051, type: !7493)
!7696 = !DILocation(line: 4051, column: 38, scope: !7692)
!7697 = !DILocalVariable(name: "ts_start", scope: !7692, file: !3, line: 4053, type: !336)
!7698 = !DILocation(line: 4053, column: 12, scope: !7692)
!7699 = !DILocalVariable(name: "uploaded", scope: !7692, file: !3, line: 4054, type: !344)
!7700 = !DILocation(line: 4054, column: 11, scope: !7692)
!7701 = !DILocalVariable(name: "pollret", scope: !7692, file: !3, line: 4055, type: !326)
!7702 = !DILocation(line: 4055, column: 9, scope: !7692)
!7703 = !DILocalVariable(name: "timeout", scope: !7692, file: !3, line: 4056, type: !326)
!7704 = !DILocation(line: 4056, column: 9, scope: !7692)
!7705 = !DILocalVariable(name: "ret", scope: !7692, file: !3, line: 4057, type: !326)
!7706 = !DILocation(line: 4057, column: 9, scope: !7692)
!7707 = !DILocation(line: 4059, column: 9, scope: !7708)
!7708 = distinct !DILexicalBlock(scope: !7692, file: !3, line: 4059, column: 9)
!7709 = !DILocation(line: 4059, column: 20, scope: !7708)
!7710 = !DILocation(line: 4059, column: 30, scope: !7708)
!7711 = !DILocation(line: 4059, column: 36, scope: !7708)
!7712 = !DILocation(line: 4059, column: 51, scope: !7708)
!7713 = !DILocation(line: 4059, column: 49, scope: !7708)
!7714 = !DILocation(line: 4059, column: 68, scope: !7708)
!7715 = !DILocation(line: 4059, column: 9, scope: !7692)
!7716 = !DILocation(line: 4060, column: 9, scope: !7717)
!7717 = distinct !DILexicalBlock(scope: !7708, file: !3, line: 4059, column: 76)
!7718 = !DILocation(line: 4061, column: 9, scope: !7717)
!7719 = !DILocation(line: 4063, column: 5, scope: !7692)
!7720 = !DILocation(line: 4064, column: 13, scope: !7721)
!7721 = distinct !DILexicalBlock(scope: !7722, file: !3, line: 4064, column: 13)
!7722 = distinct !DILexicalBlock(scope: !7723, file: !3, line: 4063, column: 14)
!7723 = distinct !DILexicalBlock(scope: !7724, file: !3, line: 4063, column: 5)
!7724 = distinct !DILexicalBlock(scope: !7692, file: !3, line: 4063, column: 5)
!7725 = !DILocation(line: 4064, column: 24, scope: !7721)
!7726 = !DILocation(line: 4064, column: 33, scope: !7721)
!7727 = !DILocation(line: 4064, column: 13, scope: !7722)
!7728 = !DILocation(line: 4065, column: 21, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7721, file: !3, line: 4064, column: 52)
!7730 = !DILocation(line: 4066, column: 9, scope: !7729)
!7731 = !DILocation(line: 4067, column: 29, scope: !7732)
!7732 = distinct !DILexicalBlock(scope: !7721, file: !3, line: 4066, column: 16)
!7733 = !DILocation(line: 4067, column: 40, scope: !7732)
!7734 = !DILocation(line: 4067, column: 23, scope: !7732)
!7735 = !DILocation(line: 4067, column: 49, scope: !7732)
!7736 = !DILocation(line: 4067, column: 21, scope: !7732)
!7737 = !DILocation(line: 4070, column: 13, scope: !7722)
!7738 = !DILocation(line: 4070, column: 24, scope: !7722)
!7739 = !DILocation(line: 4070, column: 43, scope: !7722)
!7740 = !DILocation(line: 4070, column: 51, scope: !7722)
!7741 = !DILocation(line: 4069, column: 9, scope: !7722)
!7742 = !DILocation(line: 4069, column: 20, scope: !7722)
!7743 = !DILocation(line: 4069, column: 35, scope: !7722)
!7744 = !DILocation(line: 4069, column: 43, scope: !7722)
!7745 = !DILocation(line: 4072, column: 29, scope: !7722)
!7746 = !DILocation(line: 4072, column: 40, scope: !7722)
!7747 = !DILocation(line: 4074, column: 24, scope: !7722)
!7748 = !DILocation(line: 4072, column: 19, scope: !7722)
!7749 = !DILocation(line: 4072, column: 17, scope: !7722)
!7750 = !DILocation(line: 4078, column: 13, scope: !7751)
!7751 = distinct !DILexicalBlock(scope: !7722, file: !3, line: 4078, column: 13)
!7752 = !DILocation(line: 4078, column: 21, scope: !7751)
!7753 = !DILocation(line: 4078, column: 13, scope: !7722)
!7754 = !DILocation(line: 4079, column: 13, scope: !7755)
!7755 = distinct !DILexicalBlock(scope: !7751, file: !3, line: 4078, column: 26)
!7756 = !DILocation(line: 4080, column: 13, scope: !7755)
!7757 = !DILocation(line: 4082, column: 13, scope: !7758)
!7758 = distinct !DILexicalBlock(scope: !7722, file: !3, line: 4082, column: 13)
!7759 = !DILocation(line: 4082, column: 21, scope: !7758)
!7760 = !DILocation(line: 4082, column: 13, scope: !7722)
!7761 = !DILocation(line: 4083, column: 13, scope: !7762)
!7762 = distinct !DILexicalBlock(scope: !7758, file: !3, line: 4082, column: 27)
!7763 = !DILocation(line: 4084, column: 13, scope: !7762)
!7764 = !DILocation(line: 4086, column: 14, scope: !7765)
!7765 = distinct !DILexicalBlock(scope: !7722, file: !3, line: 4086, column: 13)
!7766 = !DILocation(line: 4086, column: 25, scope: !7765)
!7767 = !DILocation(line: 4086, column: 40, scope: !7765)
!7768 = !DILocation(line: 4086, column: 48, scope: !7765)
!7769 = !DILocation(line: 4086, column: 58, scope: !7765)
!7770 = !DILocation(line: 4086, column: 13, scope: !7722)
!7771 = !DILocation(line: 4087, column: 34, scope: !7772)
!7772 = distinct !DILexicalBlock(scope: !7765, file: !3, line: 4086, column: 64)
!7773 = !DILocation(line: 4087, column: 56, scope: !7772)
!7774 = !DILocation(line: 4087, column: 19, scope: !7772)
!7775 = !DILocation(line: 4087, column: 17, scope: !7772)
!7776 = !DILocation(line: 4088, column: 21, scope: !7772)
!7777 = !DILocation(line: 4088, column: 13, scope: !7772)
!7778 = !DILocation(line: 4090, column: 17, scope: !7779)
!7779 = distinct !DILexicalBlock(scope: !7772, file: !3, line: 4088, column: 26)
!7780 = !DILocation(line: 4092, column: 17, scope: !7779)
!7781 = !DILocation(line: 4094, column: 17, scope: !7779)
!7782 = !DILocation(line: 4096, column: 21, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7779, file: !3, line: 4096, column: 21)
!7784 = !DILocation(line: 4096, column: 25, scope: !7783)
!7785 = !DILocation(line: 4096, column: 21, scope: !7779)
!7786 = !DILocation(line: 4097, column: 21, scope: !7787)
!7787 = distinct !DILexicalBlock(scope: !7783, file: !3, line: 4096, column: 30)
!7788 = !DILocation(line: 4099, column: 24, scope: !7779)
!7789 = !DILocation(line: 4099, column: 17, scope: !7779)
!7790 = !DILocation(line: 4101, column: 9, scope: !7772)
!7791 = !DILocation(line: 4102, column: 14, scope: !7792)
!7792 = distinct !DILexicalBlock(scope: !7722, file: !3, line: 4102, column: 13)
!7793 = !DILocation(line: 4102, column: 25, scope: !7792)
!7794 = !DILocation(line: 4102, column: 44, scope: !7792)
!7795 = !DILocation(line: 4102, column: 52, scope: !7792)
!7796 = !DILocation(line: 4102, column: 74, scope: !7792)
!7797 = !DILocation(line: 4102, column: 13, scope: !7722)
!7798 = !DILocation(line: 4103, column: 45, scope: !7799)
!7799 = distinct !DILexicalBlock(scope: !7792, file: !3, line: 4102, column: 80)
!7800 = !DILocation(line: 4103, column: 19, scope: !7799)
!7801 = !DILocation(line: 4103, column: 17, scope: !7799)
!7802 = !DILocation(line: 4104, column: 17, scope: !7803)
!7803 = distinct !DILexicalBlock(scope: !7799, file: !3, line: 4104, column: 17)
!7804 = !DILocation(line: 4104, column: 21, scope: !7803)
!7805 = !DILocation(line: 4104, column: 17, scope: !7799)
!7806 = !DILocation(line: 4105, column: 24, scope: !7807)
!7807 = distinct !DILexicalBlock(scope: !7803, file: !3, line: 4104, column: 27)
!7808 = !DILocation(line: 4105, column: 17, scope: !7807)
!7809 = !DILocation(line: 4107, column: 9, scope: !7799)
!7810 = !DILocation(line: 4108, column: 14, scope: !7811)
!7811 = distinct !DILexicalBlock(scope: !7722, file: !3, line: 4108, column: 13)
!7812 = !DILocation(line: 4108, column: 25, scope: !7811)
!7813 = !DILocation(line: 4108, column: 40, scope: !7811)
!7814 = !DILocation(line: 4108, column: 48, scope: !7811)
!7815 = !DILocation(line: 4108, column: 72, scope: !7811)
!7816 = !DILocation(line: 4108, column: 77, scope: !7811)
!7817 = !DILocation(line: 4109, column: 15, scope: !7811)
!7818 = !DILocation(line: 4109, column: 26, scope: !7811)
!7819 = !DILocation(line: 4109, column: 41, scope: !7811)
!7820 = !DILocation(line: 4109, column: 49, scope: !7811)
!7821 = !DILocation(line: 4109, column: 60, scope: !7811)
!7822 = !DILocation(line: 4109, column: 65, scope: !7811)
!7823 = !DILocation(line: 4110, column: 15, scope: !7811)
!7824 = !DILocation(line: 4110, column: 26, scope: !7811)
!7825 = !DILocation(line: 4110, column: 41, scope: !7811)
!7826 = !DILocation(line: 4110, column: 49, scope: !7811)
!7827 = !DILocation(line: 4110, column: 59, scope: !7811)
!7828 = !DILocation(line: 4108, column: 13, scope: !7722)
!7829 = !DILocation(line: 4111, column: 13, scope: !7830)
!7830 = distinct !DILexicalBlock(scope: !7811, file: !3, line: 4110, column: 66)
!7831 = !DILocation(line: 4113, column: 14, scope: !7832)
!7832 = distinct !DILexicalBlock(scope: !7722, file: !3, line: 4113, column: 13)
!7833 = !DILocation(line: 4113, column: 25, scope: !7832)
!7834 = !DILocation(line: 4113, column: 44, scope: !7832)
!7835 = !DILocation(line: 4113, column: 52, scope: !7832)
!7836 = !DILocation(line: 4114, column: 46, scope: !7832)
!7837 = !DILocation(line: 4113, column: 13, scope: !7722)
!7838 = !DILocation(line: 4115, column: 13, scope: !7839)
!7839 = distinct !DILexicalBlock(scope: !7832, file: !3, line: 4114, column: 52)
!7840 = !DILocation(line: 4116, column: 13, scope: !7839)
!7841 = !DILocation(line: 4063, column: 5, scope: !7723)
!7842 = distinct !{!7842, !7843, !7844}
!7843 = !DILocation(line: 4063, column: 5, scope: !7724)
!7844 = !DILocation(line: 4118, column: 5, scope: !7724)
!7845 = !DILocation(line: 4121, column: 1, scope: !7692)
!7846 = distinct !DISubprogram(name: "ul_exit", scope: !3, file: !3, line: 4123, type: !7693, scopeLine: 4124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!7847 = !DILocalVariable(name: "ulhandler", arg: 1, scope: !7846, file: !3, line: 4123, type: !7493)
!7848 = !DILocation(line: 4123, column: 38, scope: !7846)
!7849 = !DILocation(line: 4125, column: 10, scope: !7846)
!7850 = !DILocation(line: 4125, column: 21, scope: !7846)
!7851 = !DILocation(line: 4125, column: 5, scope: !7846)
!7852 = !DILocation(line: 4126, column: 5, scope: !7846)
!7853 = !DILocation(line: 4126, column: 16, scope: !7846)
!7854 = !DILocation(line: 4126, column: 20, scope: !7846)
!7855 = !DILocation(line: 4128, column: 5, scope: !7846)
!7856 = distinct !DISubprogram(name: "get_file_size", scope: !3, file: !3, line: 3710, type: !7857, scopeLine: 3711, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!7857 = !DISubroutineType(types: !7858)
!7858 = !{!344, !529}
!7859 = !DILocalVariable(name: "file", arg: 1, scope: !7856, file: !3, line: 3710, type: !529)
!7860 = !DILocation(line: 3710, column: 47, scope: !7856)
!7861 = !DILocalVariable(name: "st", scope: !7856, file: !3, line: 3712, type: !3147)
!7862 = !DILocation(line: 3712, column: 17, scope: !7856)
!7863 = !DILocation(line: 3714, column: 14, scope: !7864)
!7864 = distinct !DILexicalBlock(scope: !7856, file: !3, line: 3714, column: 9)
!7865 = !DILocation(line: 3714, column: 9, scope: !7864)
!7866 = !DILocation(line: 3714, column: 25, scope: !7864)
!7867 = !DILocation(line: 3714, column: 9, scope: !7856)
!7868 = !DILocation(line: 3715, column: 9, scope: !7869)
!7869 = distinct !DILexicalBlock(scope: !7864, file: !3, line: 3714, column: 31)
!7870 = !DILocation(line: 3717, column: 15, scope: !7856)
!7871 = !DILocation(line: 3717, column: 5, scope: !7856)
!7872 = !DILocation(line: 3718, column: 1, scope: !7856)
!7873 = !DILocalVariable(name: "atomic_file", arg: 1, scope: !746, file: !3, line: 3615, type: !529)
!7874 = !DILocation(line: 3615, column: 45, scope: !746)
!7875 = !DILocalVariable(name: "name", arg: 2, scope: !746, file: !3, line: 3615, type: !749)
!7876 = !DILocation(line: 3615, column: 71, scope: !746)
!7877 = !DILocalVariable(name: "name2_", arg: 3, scope: !746, file: !3, line: 3616, type: !750)
!7878 = !DILocation(line: 3616, column: 46, scope: !746)
!7879 = !DILocalVariable(name: "gc", scope: !746, file: !3, line: 3619, type: !7)
!7880 = !DILocation(line: 3619, column: 18, scope: !746)
!7881 = !DILocation(line: 3621, column: 14, scope: !7882)
!7882 = distinct !DILexicalBlock(scope: !746, file: !3, line: 3621, column: 9)
!7883 = !DILocation(line: 3621, column: 27, scope: !7882)
!7884 = !DILocation(line: 3621, column: 9, scope: !7882)
!7885 = !DILocation(line: 3621, column: 33, scope: !7882)
!7886 = !DILocation(line: 3621, column: 9, scope: !746)
!7887 = !DILocation(line: 3622, column: 10, scope: !7888)
!7888 = distinct !DILexicalBlock(scope: !7882, file: !3, line: 3621, column: 39)
!7889 = !DILocation(line: 3622, column: 17, scope: !7888)
!7890 = !DILocation(line: 3624, column: 9, scope: !7888)
!7891 = !DILocation(line: 3626, column: 6, scope: !746)
!7892 = !DILocation(line: 3626, column: 13, scope: !746)
!7893 = !DILocation(line: 3627, column: 5, scope: !746)
!7894 = !DILocation(line: 3628, column: 11, scope: !7895)
!7895 = distinct !DILexicalBlock(scope: !7896, file: !3, line: 3627, column: 14)
!7896 = distinct !DILexicalBlock(scope: !7897, file: !3, line: 3627, column: 5)
!7897 = distinct !DILexicalBlock(scope: !746, file: !3, line: 3627, column: 5)
!7898 = !DILocation(line: 3629, column: 13, scope: !7899)
!7899 = distinct !DILexicalBlock(scope: !7895, file: !3, line: 3629, column: 13)
!7900 = !DILocation(line: 3629, column: 16, scope: !7899)
!7901 = !DILocation(line: 3629, column: 22, scope: !7899)
!7902 = !DILocation(line: 3634, column: 13, scope: !7899)
!7903 = !DILocation(line: 3629, column: 13, scope: !7895)
!7904 = !DILocation(line: 3638, column: 13, scope: !7905)
!7905 = distinct !DILexicalBlock(scope: !7899, file: !3, line: 3637, column: 15)
!7906 = !DILocation(line: 3640, column: 18, scope: !7907)
!7907 = distinct !DILexicalBlock(scope: !7895, file: !3, line: 3640, column: 13)
!7908 = !DILocation(line: 3640, column: 13, scope: !7907)
!7909 = !DILocation(line: 3640, column: 38, scope: !7907)
!7910 = !DILocation(line: 3640, column: 13, scope: !7895)
!7911 = !DILocation(line: 3642, column: 13, scope: !7912)
!7912 = distinct !DILexicalBlock(scope: !7907, file: !3, line: 3640, column: 44)
!7913 = !DILocation(line: 3644, column: 17, scope: !7895)
!7914 = !DILocation(line: 3644, column: 9, scope: !7895)
!7915 = !DILocation(line: 3654, column: 13, scope: !7916)
!7916 = distinct !DILexicalBlock(scope: !7895, file: !3, line: 3644, column: 24)
!7917 = distinct !{!7917, !7918, !7919}
!7918 = !DILocation(line: 3627, column: 5, scope: !7897)
!7919 = !DILocation(line: 3657, column: 5, scope: !7897)
!7920 = !DILocation(line: 3656, column: 9, scope: !7895)
!7921 = !DILocation(line: 3658, column: 6, scope: !746)
!7922 = !DILocation(line: 3658, column: 13, scope: !746)
!7923 = !DILocation(line: 3660, column: 5, scope: !746)
!7924 = !DILocation(line: 3661, column: 1, scope: !746)
!7925 = distinct !DISubprogram(name: "ul_handle_data", scope: !3, file: !3, line: 3968, type: !7926, scopeLine: 3970, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!7926 = !DISubroutineType(types: !7927)
!7927 = !{!326, !7493, !6119, !3364}
!7928 = !DILocalVariable(name: "ulhandler", arg: 1, scope: !7925, file: !3, line: 3968, type: !7493)
!7929 = !DILocation(line: 3968, column: 45, scope: !7925)
!7930 = !DILocalVariable(name: "uploaded", arg: 2, scope: !7925, file: !3, line: 3968, type: !6119)
!7931 = !DILocation(line: 3968, column: 70, scope: !7925)
!7932 = !DILocalVariable(name: "ts_start", arg: 3, scope: !7925, file: !3, line: 3969, type: !3364)
!7933 = !DILocation(line: 3969, column: 40, scope: !7925)
!7934 = !DILocalVariable(name: "readnb", scope: !7925, file: !3, line: 3971, type: !383)
!7935 = !DILocation(line: 3971, column: 13, scope: !7925)
!7936 = !DILocalVariable(name: "required_sleep", scope: !7925, file: !3, line: 3972, type: !336)
!7937 = !DILocation(line: 3972, column: 12, scope: !7925)
!7938 = !DILocalVariable(name: "pollret", scope: !7925, file: !3, line: 3973, type: !326)
!7939 = !DILocation(line: 3973, column: 9, scope: !7925)
!7940 = !DILocalVariable(name: "ret", scope: !7925, file: !3, line: 3974, type: !326)
!7941 = !DILocation(line: 3974, column: 9, scope: !7925)
!7942 = !DILocation(line: 3976, column: 9, scope: !7943)
!7943 = distinct !DILexicalBlock(scope: !7925, file: !3, line: 3976, column: 9)
!7944 = !DILocation(line: 3976, column: 20, scope: !7943)
!7945 = !DILocation(line: 3976, column: 33, scope: !7943)
!7946 = !DILocation(line: 3976, column: 46, scope: !7943)
!7947 = !DILocation(line: 3977, column: 9, scope: !7943)
!7948 = !DILocation(line: 3977, column: 20, scope: !7943)
!7949 = !DILocation(line: 3977, column: 37, scope: !7943)
!7950 = !DILocation(line: 3977, column: 48, scope: !7943)
!7951 = !DILocation(line: 3977, column: 35, scope: !7943)
!7952 = !DILocation(line: 3976, column: 9, scope: !7925)
!7953 = !DILocation(line: 3978, column: 9, scope: !7954)
!7954 = distinct !DILexicalBlock(scope: !7943, file: !3, line: 3977, column: 62)
!7955 = !DILocation(line: 3979, column: 9, scope: !7954)
!7956 = !DILocation(line: 3981, column: 9, scope: !7957)
!7957 = distinct !DILexicalBlock(scope: !7925, file: !3, line: 3981, column: 9)
!7958 = !DILocation(line: 3981, column: 20, scope: !7957)
!7959 = !DILocation(line: 3981, column: 41, scope: !7957)
!7960 = !DILocation(line: 3981, column: 52, scope: !7957)
!7961 = !DILocation(line: 3981, column: 31, scope: !7957)
!7962 = !DILocation(line: 3981, column: 9, scope: !7925)
!7963 = !DILocation(line: 3983, column: 13, scope: !7964)
!7964 = distinct !DILexicalBlock(scope: !7957, file: !3, line: 3981, column: 64)
!7965 = !DILocation(line: 3983, column: 24, scope: !7964)
!7966 = !DILocation(line: 3982, column: 33, scope: !7964)
!7967 = !DILocation(line: 3982, column: 44, scope: !7964)
!7968 = !DILocation(line: 3982, column: 59, scope: !7964)
!7969 = !DILocation(line: 3982, column: 9, scope: !7964)
!7970 = !DILocation(line: 3982, column: 20, scope: !7964)
!7971 = !DILocation(line: 3982, column: 31, scope: !7964)
!7972 = !DILocation(line: 3984, column: 5, scope: !7964)
!7973 = !DILocation(line: 3985, column: 9, scope: !7974)
!7974 = distinct !DILexicalBlock(scope: !7925, file: !3, line: 3985, column: 9)
!7975 = !DILocation(line: 3985, column: 20, scope: !7974)
!7976 = !DILocation(line: 3985, column: 27, scope: !7974)
!7977 = !DILocation(line: 3985, column: 9, scope: !7925)
!7978 = !DILocation(line: 3990, column: 9, scope: !7979)
!7979 = distinct !DILexicalBlock(scope: !7974, file: !3, line: 3985, column: 36)
!7980 = !DILocation(line: 3994, column: 28, scope: !7981)
!7981 = distinct !DILexicalBlock(scope: !7974, file: !3, line: 3992, column: 12)
!7982 = !DILocation(line: 3994, column: 39, scope: !7981)
!7983 = !DILocation(line: 3994, column: 43, scope: !7981)
!7984 = !DILocation(line: 3994, column: 54, scope: !7981)
!7985 = !DILocation(line: 3994, column: 18, scope: !7981)
!7986 = !DILocation(line: 3994, column: 16, scope: !7981)
!7987 = !DILocation(line: 3998, column: 9, scope: !7988)
!7988 = distinct !DILexicalBlock(scope: !7925, file: !3, line: 3998, column: 9)
!7989 = !DILocation(line: 3998, column: 16, scope: !7988)
!7990 = !DILocation(line: 3998, column: 9, scope: !7925)
!7991 = !DILocation(line: 3999, column: 9, scope: !7992)
!7992 = distinct !DILexicalBlock(scope: !7988, file: !3, line: 3998, column: 32)
!7993 = !DILocation(line: 4001, column: 9, scope: !7994)
!7994 = distinct !DILexicalBlock(scope: !7925, file: !3, line: 4001, column: 9)
!7995 = !DILocation(line: 4001, column: 16, scope: !7994)
!7996 = !DILocation(line: 4001, column: 9, scope: !7925)
!7997 = !DILocation(line: 4002, column: 13, scope: !7998)
!7998 = distinct !DILexicalBlock(scope: !7999, file: !3, line: 4002, column: 13)
!7999 = distinct !DILexicalBlock(scope: !7994, file: !3, line: 4001, column: 31)
!8000 = !DILocation(line: 4002, column: 19, scope: !7998)
!8001 = !DILocation(line: 4002, column: 29, scope: !7998)
!8002 = !DILocation(line: 4002, column: 32, scope: !7998)
!8003 = !DILocation(line: 4002, column: 38, scope: !7998)
!8004 = !DILocation(line: 4002, column: 13, scope: !7999)
!8005 = !DILocation(line: 4003, column: 13, scope: !8006)
!8006 = distinct !DILexicalBlock(scope: !7998, file: !3, line: 4002, column: 48)
!8007 = !DILocation(line: 4005, column: 9, scope: !7999)
!8008 = !DILocation(line: 4006, column: 9, scope: !7999)
!8009 = !DILocation(line: 4008, column: 20, scope: !8010)
!8010 = distinct !DILexicalBlock(scope: !7925, file: !3, line: 4008, column: 9)
!8011 = !DILocation(line: 4008, column: 31, scope: !8010)
!8012 = !DILocation(line: 4008, column: 42, scope: !8010)
!8013 = !DILocation(line: 4008, column: 47, scope: !8010)
!8014 = !DILocation(line: 4008, column: 55, scope: !8010)
!8015 = !DILocation(line: 4008, column: 9, scope: !8010)
!8016 = !DILocation(line: 4008, column: 65, scope: !8010)
!8017 = !DILocation(line: 4008, column: 9, scope: !7925)
!8018 = !DILocation(line: 4009, column: 9, scope: !8019)
!8019 = distinct !DILexicalBlock(scope: !8010, file: !3, line: 4008, column: 71)
!8020 = !DILocation(line: 4010, column: 9, scope: !8019)
!8021 = !DILocation(line: 4012, column: 28, scope: !7925)
!8022 = !DILocation(line: 4012, column: 27, scope: !7925)
!8023 = !DILocation(line: 4012, column: 5, scope: !7925)
!8024 = !DILocation(line: 4012, column: 16, scope: !7925)
!8025 = !DILocation(line: 4012, column: 24, scope: !7925)
!8026 = !DILocation(line: 4019, column: 35, scope: !7925)
!8027 = !DILocation(line: 4019, column: 34, scope: !7925)
!8028 = !DILocation(line: 4019, column: 5, scope: !7925)
!8029 = !DILocation(line: 4019, column: 16, scope: !7925)
!8030 = !DILocation(line: 4019, column: 31, scope: !7925)
!8031 = !DILocation(line: 4020, column: 9, scope: !8032)
!8032 = distinct !DILexicalBlock(scope: !7925, file: !3, line: 4020, column: 9)
!8033 = !DILocation(line: 4020, column: 20, scope: !8032)
!8034 = !DILocation(line: 4020, column: 30, scope: !8032)
!8035 = !DILocation(line: 4020, column: 9, scope: !7925)
!8036 = !DILocation(line: 4021, column: 28, scope: !8037)
!8037 = distinct !DILexicalBlock(scope: !8032, file: !3, line: 4020, column: 37)
!8038 = !DILocation(line: 4021, column: 40, scope: !8037)
!8039 = !DILocation(line: 4021, column: 39, scope: !8037)
!8040 = !DILocation(line: 4021, column: 50, scope: !8037)
!8041 = !DILocation(line: 4021, column: 9, scope: !8037)
!8042 = !DILocation(line: 4022, column: 13, scope: !8043)
!8043 = distinct !DILexicalBlock(scope: !8037, file: !3, line: 4022, column: 13)
!8044 = !DILocation(line: 4022, column: 28, scope: !8043)
!8045 = !DILocation(line: 4022, column: 13, scope: !8037)
!8046 = !DILocation(line: 4022, column: 35, scope: !8043)
!8047 = !DILabel(scope: !8048, name: "repoll", file: !3, line: 4023)
!8048 = distinct !DILexicalBlock(scope: !8043, file: !3, line: 4022, column: 35)
!8049 = !DILocation(line: 4023, column: 13, scope: !8048)
!8050 = !DILocation(line: 4024, column: 13, scope: !8048)
!8051 = !DILocation(line: 4024, column: 24, scope: !8048)
!8052 = !DILocation(line: 4024, column: 37, scope: !8048)
!8053 = !DILocation(line: 4024, column: 45, scope: !8048)
!8054 = !DILocation(line: 4025, column: 29, scope: !8048)
!8055 = !DILocation(line: 4025, column: 40, scope: !8048)
!8056 = !DILocation(line: 4025, column: 57, scope: !8048)
!8057 = !DILocation(line: 4025, column: 72, scope: !8048)
!8058 = !DILocation(line: 4025, column: 23, scope: !8048)
!8059 = !DILocation(line: 4025, column: 21, scope: !8048)
!8060 = !DILocation(line: 4026, column: 17, scope: !8061)
!8061 = distinct !DILexicalBlock(scope: !8048, file: !3, line: 4026, column: 17)
!8062 = !DILocation(line: 4026, column: 25, scope: !8061)
!8063 = !DILocation(line: 4026, column: 17, scope: !8048)
!8064 = !DILocation(line: 4027, column: 17, scope: !8065)
!8065 = distinct !DILexicalBlock(scope: !8061, file: !3, line: 4026, column: 31)
!8066 = !DILocation(line: 4029, column: 17, scope: !8067)
!8067 = distinct !DILexicalBlock(scope: !8048, file: !3, line: 4029, column: 17)
!8068 = !DILocation(line: 4029, column: 25, scope: !8067)
!8069 = !DILocation(line: 4029, column: 17, scope: !8048)
!8070 = !DILocation(line: 4030, column: 21, scope: !8071)
!8071 = distinct !DILexicalBlock(scope: !8072, file: !3, line: 4030, column: 21)
!8072 = distinct !DILexicalBlock(scope: !8067, file: !3, line: 4029, column: 30)
!8073 = !DILocation(line: 4030, column: 27, scope: !8071)
!8074 = !DILocation(line: 4030, column: 21, scope: !8072)
!8075 = !DILocation(line: 4031, column: 21, scope: !8076)
!8076 = distinct !DILexicalBlock(scope: !8071, file: !3, line: 4030, column: 37)
!8077 = !DILocation(line: 4033, column: 17, scope: !8072)
!8078 = !DILocation(line: 4035, column: 18, scope: !8079)
!8079 = distinct !DILexicalBlock(scope: !8048, file: !3, line: 4035, column: 17)
!8080 = !DILocation(line: 4035, column: 29, scope: !8079)
!8081 = !DILocation(line: 4035, column: 42, scope: !8079)
!8082 = !DILocation(line: 4035, column: 50, scope: !8079)
!8083 = !DILocation(line: 4036, column: 50, scope: !8079)
!8084 = !DILocation(line: 4035, column: 17, scope: !8048)
!8085 = !DILocation(line: 4037, column: 17, scope: !8086)
!8086 = distinct !DILexicalBlock(scope: !8079, file: !3, line: 4036, column: 56)
!8087 = !DILocation(line: 4039, column: 18, scope: !8088)
!8088 = distinct !DILexicalBlock(scope: !8048, file: !3, line: 4039, column: 17)
!8089 = !DILocation(line: 4039, column: 29, scope: !8088)
!8090 = !DILocation(line: 4039, column: 42, scope: !8088)
!8091 = !DILocation(line: 4039, column: 50, scope: !8088)
!8092 = !DILocation(line: 4039, column: 72, scope: !8088)
!8093 = !DILocation(line: 4039, column: 17, scope: !8048)
!8094 = !DILocation(line: 4040, column: 49, scope: !8095)
!8095 = distinct !DILexicalBlock(scope: !8088, file: !3, line: 4039, column: 78)
!8096 = !DILocation(line: 4040, column: 23, scope: !8095)
!8097 = !DILocation(line: 4040, column: 21, scope: !8095)
!8098 = !DILocation(line: 4041, column: 21, scope: !8099)
!8099 = distinct !DILexicalBlock(scope: !8095, file: !3, line: 4041, column: 21)
!8100 = !DILocation(line: 4041, column: 25, scope: !8099)
!8101 = !DILocation(line: 4041, column: 21, scope: !8095)
!8102 = !DILocation(line: 4042, column: 28, scope: !8103)
!8103 = distinct !DILexicalBlock(scope: !8099, file: !3, line: 4041, column: 31)
!8104 = !DILocation(line: 4042, column: 21, scope: !8103)
!8105 = !DILocation(line: 4044, column: 17, scope: !8095)
!8106 = !DILocation(line: 4046, column: 9, scope: !8048)
!8107 = !DILocation(line: 4047, column: 5, scope: !8037)
!8108 = !DILocation(line: 4048, column: 5, scope: !7925)
!8109 = !DILocation(line: 4049, column: 1, scope: !7925)
!8110 = distinct !DISubprogram(name: "ulhandler_handle_commands", scope: !3, file: !3, line: 3927, type: !7693, scopeLine: 3928, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!8111 = !DILocalVariable(name: "ulhandler", arg: 1, scope: !8110, file: !3, line: 3927, type: !7493)
!8112 = !DILocation(line: 3927, column: 56, scope: !8110)
!8113 = !DILocalVariable(name: "buf", scope: !8110, file: !3, line: 3929, type: !6434)
!8114 = !DILocation(line: 3929, column: 10, scope: !8110)
!8115 = !DILocalVariable(name: "bufpnt", scope: !8110, file: !3, line: 3930, type: !308)
!8116 = !DILocation(line: 3930, column: 11, scope: !8110)
!8117 = !DILocalVariable(name: "readnb", scope: !8110, file: !3, line: 3931, type: !383)
!8118 = !DILocation(line: 3931, column: 13, scope: !8110)
!8119 = !DILocation(line: 3933, column: 9, scope: !8120)
!8120 = distinct !DILexicalBlock(scope: !8110, file: !3, line: 3933, column: 9)
!8121 = !DILocation(line: 3933, column: 20, scope: !8120)
!8122 = !DILocation(line: 3933, column: 33, scope: !8120)
!8123 = !DILocation(line: 3933, column: 9, scope: !8110)
!8124 = !DILocation(line: 3938, column: 9, scope: !8125)
!8125 = distinct !DILexicalBlock(scope: !8120, file: !3, line: 3933, column: 42)
!8126 = !DILocation(line: 3941, column: 23, scope: !8127)
!8127 = distinct !DILexicalBlock(scope: !8120, file: !3, line: 3940, column: 12)
!8128 = !DILocation(line: 3941, column: 34, scope: !8127)
!8129 = !DILocation(line: 3941, column: 44, scope: !8127)
!8130 = !DILocation(line: 3941, column: 18, scope: !8127)
!8131 = !DILocation(line: 3941, column: 16, scope: !8127)
!8132 = !DILocation(line: 3943, column: 9, scope: !8133)
!8133 = distinct !DILexicalBlock(scope: !8110, file: !3, line: 3943, column: 9)
!8134 = !DILocation(line: 3943, column: 16, scope: !8133)
!8135 = !DILocation(line: 3943, column: 9, scope: !8110)
!8136 = !DILocation(line: 3944, column: 9, scope: !8137)
!8137 = distinct !DILexicalBlock(scope: !8133, file: !3, line: 3943, column: 32)
!8138 = !DILocation(line: 3946, column: 9, scope: !8139)
!8139 = distinct !DILexicalBlock(scope: !8110, file: !3, line: 3946, column: 9)
!8140 = !DILocation(line: 3946, column: 16, scope: !8139)
!8141 = !DILocation(line: 3946, column: 9, scope: !8110)
!8142 = !DILocation(line: 3947, column: 13, scope: !8143)
!8143 = distinct !DILexicalBlock(scope: !8144, file: !3, line: 3947, column: 13)
!8144 = distinct !DILexicalBlock(scope: !8139, file: !3, line: 3946, column: 31)
!8145 = !DILocation(line: 3947, column: 19, scope: !8143)
!8146 = !DILocation(line: 3947, column: 29, scope: !8143)
!8147 = !DILocation(line: 3947, column: 32, scope: !8143)
!8148 = !DILocation(line: 3947, column: 38, scope: !8143)
!8149 = !DILocation(line: 3947, column: 13, scope: !8144)
!8150 = !DILocation(line: 3948, column: 13, scope: !8151)
!8151 = distinct !DILexicalBlock(scope: !8143, file: !3, line: 3947, column: 48)
!8152 = !DILocation(line: 3950, column: 9, scope: !8144)
!8153 = !DILocation(line: 3952, column: 9, scope: !8110)
!8154 = !DILocation(line: 3952, column: 5, scope: !8110)
!8155 = !DILocation(line: 3952, column: 17, scope: !8110)
!8156 = !DILocation(line: 3953, column: 35, scope: !8110)
!8157 = !DILocation(line: 3953, column: 14, scope: !8110)
!8158 = !DILocation(line: 3953, column: 12, scope: !8110)
!8159 = !DILocation(line: 3954, column: 16, scope: !8160)
!8160 = distinct !DILexicalBlock(scope: !8110, file: !3, line: 3954, column: 9)
!8161 = !DILocation(line: 3954, column: 9, scope: !8160)
!8162 = !DILocation(line: 3954, column: 27, scope: !8160)
!8163 = !DILocation(line: 3954, column: 9, scope: !8110)
!8164 = !DILocation(line: 3955, column: 25, scope: !8165)
!8165 = distinct !DILexicalBlock(scope: !8166, file: !3, line: 3955, column: 13)
!8166 = distinct !DILexicalBlock(scope: !8160, file: !3, line: 3954, column: 36)
!8167 = !DILocation(line: 3955, column: 13, scope: !8165)
!8168 = !DILocation(line: 3955, column: 61, scope: !8165)
!8169 = !DILocation(line: 3955, column: 66, scope: !8165)
!8170 = !DILocation(line: 3956, column: 25, scope: !8165)
!8171 = !DILocation(line: 3956, column: 13, scope: !8165)
!8172 = !DILocation(line: 3956, column: 61, scope: !8165)
!8173 = !DILocation(line: 3955, column: 13, scope: !8166)
!8174 = !DILocation(line: 3957, column: 13, scope: !8175)
!8175 = distinct !DILexicalBlock(scope: !8165, file: !3, line: 3956, column: 67)
!8176 = !DILocation(line: 3958, column: 13, scope: !8175)
!8177 = !DILocation(line: 3959, column: 9, scope: !8175)
!8178 = !DILocation(line: 3960, column: 13, scope: !8179)
!8179 = distinct !DILexicalBlock(scope: !8165, file: !3, line: 3959, column: 16)
!8180 = !DILocation(line: 3961, column: 13, scope: !8179)
!8181 = !DILocation(line: 3962, column: 13, scope: !8179)
!8182 = !DILocation(line: 3964, column: 5, scope: !8166)
!8183 = !DILocation(line: 3965, column: 5, scope: !8110)
!8184 = !DILocation(line: 3966, column: 1, scope: !8110)
!8185 = distinct !DISubprogram(name: "ul_dowrite", scope: !3, file: !3, line: 3881, type: !8186, scopeLine: 3883, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!8186 = !DISubroutineType(types: !8187)
!8187 = !{!326, !7493, !1061, !425, !6119}
!8188 = !DILocalVariable(name: "ulhandler", arg: 1, scope: !8185, file: !3, line: 3881, type: !7493)
!8189 = !DILocation(line: 3881, column: 41, scope: !8185)
!8190 = !DILocalVariable(name: "buf_", arg: 2, scope: !8185, file: !3, line: 3881, type: !1061)
!8191 = !DILocation(line: 3881, column: 73, scope: !8185)
!8192 = !DILocalVariable(name: "size_", arg: 3, scope: !8185, file: !3, line: 3882, type: !425)
!8193 = !DILocation(line: 3882, column: 36, scope: !8185)
!8194 = !DILocalVariable(name: "uploaded", arg: 4, scope: !8185, file: !3, line: 3882, type: !6119)
!8195 = !DILocation(line: 3882, column: 57, scope: !8185)
!8196 = !DILocalVariable(name: "size", scope: !8185, file: !3, line: 3884, type: !304)
!8197 = !DILocation(line: 3884, column: 12, scope: !8185)
!8198 = !DILocation(line: 3884, column: 19, scope: !8185)
!8199 = !DILocalVariable(name: "written", scope: !8185, file: !3, line: 3885, type: !383)
!8200 = !DILocation(line: 3885, column: 13, scope: !8185)
!8201 = !DILocalVariable(name: "buf", scope: !8185, file: !3, line: 3886, type: !1061)
!8202 = !DILocation(line: 3886, column: 26, scope: !8185)
!8203 = !DILocation(line: 3886, column: 32, scope: !8185)
!8204 = !DILocalVariable(name: "unasciibuf", scope: !8185, file: !3, line: 3887, type: !382)
!8205 = !DILocation(line: 3887, column: 20, scope: !8185)
!8206 = !DILocalVariable(name: "ret", scope: !8185, file: !3, line: 3888, type: !326)
!8207 = !DILocation(line: 3888, column: 9, scope: !8185)
!8208 = !DILocation(line: 3890, column: 9, scope: !8209)
!8209 = distinct !DILexicalBlock(scope: !8185, file: !3, line: 3890, column: 9)
!8210 = !DILocation(line: 3890, column: 15, scope: !8209)
!8211 = !DILocation(line: 3890, column: 9, scope: !8185)
!8212 = !DILocation(line: 3891, column: 10, scope: !8213)
!8213 = distinct !DILexicalBlock(scope: !8209, file: !3, line: 3890, column: 31)
!8214 = !DILocation(line: 3891, column: 19, scope: !8213)
!8215 = !DILocation(line: 3892, column: 9, scope: !8213)
!8216 = !DILocation(line: 3895, column: 9, scope: !8217)
!8217 = distinct !DILexicalBlock(scope: !8185, file: !3, line: 3895, column: 9)
!8218 = !DILocation(line: 3895, column: 20, scope: !8217)
!8219 = !DILocation(line: 3895, column: 31, scope: !8217)
!8220 = !DILocation(line: 3895, column: 9, scope: !8185)
!8221 = !DILocalVariable(name: "unasciibufpnt", scope: !8222, file: !3, line: 3896, type: !382)
!8222 = distinct !DILexicalBlock(scope: !8217, file: !3, line: 3895, column: 36)
!8223 = !DILocation(line: 3896, column: 24, scope: !8222)
!8224 = !DILocalVariable(name: "z", scope: !8222, file: !3, line: 3897, type: !304)
!8225 = !DILocation(line: 3897, column: 16, scope: !8222)
!8226 = !DILocation(line: 3899, column: 13, scope: !8227)
!8227 = distinct !DILexicalBlock(scope: !8222, file: !3, line: 3899, column: 13)
!8228 = !DILocation(line: 3899, column: 29, scope: !8227)
!8229 = !DILocation(line: 3899, column: 40, scope: !8227)
!8230 = !DILocation(line: 3899, column: 18, scope: !8227)
!8231 = !DILocation(line: 3899, column: 51, scope: !8227)
!8232 = !DILocation(line: 3900, column: 27, scope: !8227)
!8233 = !DILocation(line: 3900, column: 25, scope: !8227)
!8234 = !DILocation(line: 3900, column: 67, scope: !8227)
!8235 = !DILocation(line: 3899, column: 13, scope: !8222)
!8236 = !DILocation(line: 3901, column: 13, scope: !8237)
!8237 = distinct !DILexicalBlock(scope: !8227, file: !3, line: 3900, column: 76)
!8238 = !DILocation(line: 3903, column: 25, scope: !8222)
!8239 = !DILocation(line: 3903, column: 23, scope: !8222)
!8240 = !DILocation(line: 3904, column: 9, scope: !8222)
!8241 = !DILocation(line: 3905, column: 17, scope: !8242)
!8242 = distinct !DILexicalBlock(scope: !8243, file: !3, line: 3905, column: 17)
!8243 = distinct !DILexicalBlock(scope: !8222, file: !3, line: 3904, column: 12)
!8244 = !DILocation(line: 3905, column: 22, scope: !8242)
!8245 = !DILocation(line: 3905, column: 25, scope: !8242)
!8246 = !DILocation(line: 3905, column: 17, scope: !8243)
!8247 = !DILocation(line: 3906, column: 36, scope: !8248)
!8248 = distinct !DILexicalBlock(scope: !8242, file: !3, line: 3905, column: 50)
!8249 = !DILocation(line: 3906, column: 41, scope: !8248)
!8250 = !DILocation(line: 3906, column: 31, scope: !8248)
!8251 = !DILocation(line: 3906, column: 34, scope: !8248)
!8252 = !DILocation(line: 3907, column: 13, scope: !8248)
!8253 = !DILocation(line: 3908, column: 14, scope: !8243)
!8254 = !DILocation(line: 3909, column: 9, scope: !8243)
!8255 = !DILocation(line: 3909, column: 18, scope: !8222)
!8256 = !DILocation(line: 3909, column: 22, scope: !8222)
!8257 = !DILocation(line: 3909, column: 20, scope: !8222)
!8258 = distinct !{!8258, !8240, !8259}
!8259 = !DILocation(line: 3909, column: 26, scope: !8222)
!8260 = !DILocation(line: 3910, column: 15, scope: !8222)
!8261 = !DILocation(line: 3910, column: 13, scope: !8222)
!8262 = !DILocation(line: 3911, column: 26, scope: !8222)
!8263 = !DILocation(line: 3911, column: 42, scope: !8222)
!8264 = !DILocation(line: 3911, column: 40, scope: !8222)
!8265 = !DILocation(line: 3911, column: 14, scope: !8222)
!8266 = !DILocation(line: 3912, column: 5, scope: !8222)
!8267 = !DILocation(line: 3914, column: 26, scope: !8185)
!8268 = !DILocation(line: 3914, column: 37, scope: !8185)
!8269 = !DILocation(line: 3914, column: 40, scope: !8185)
!8270 = !DILocation(line: 3914, column: 45, scope: !8185)
!8271 = !DILocation(line: 3914, column: 15, scope: !8185)
!8272 = !DILocation(line: 3914, column: 13, scope: !8185)
!8273 = !DILocation(line: 3915, column: 14, scope: !8185)
!8274 = !DILocation(line: 3915, column: 35, scope: !8185)
!8275 = !DILocation(line: 3915, column: 22, scope: !8185)
!8276 = !DILocation(line: 3915, column: 11, scope: !8185)
!8277 = !DILocation(line: 3915, column: 9, scope: !8185)
!8278 = !DILocation(line: 3916, column: 9, scope: !8279)
!8279 = distinct !DILexicalBlock(scope: !8185, file: !3, line: 3916, column: 9)
!8280 = !DILocation(line: 3916, column: 20, scope: !8279)
!8281 = !DILocation(line: 3916, column: 9, scope: !8185)
!8282 = !DILocation(line: 3917, column: 9, scope: !8283)
!8283 = distinct !DILexicalBlock(scope: !8279, file: !3, line: 3916, column: 29)
!8284 = !DILocation(line: 3917, column: 9, scope: !8285)
!8285 = distinct !DILexicalBlock(scope: !8283, file: !3, line: 3917, column: 9)
!8286 = !DILocation(line: 3918, column: 5, scope: !8283)
!8287 = !DILocation(line: 3919, column: 9, scope: !8288)
!8288 = distinct !DILexicalBlock(scope: !8185, file: !3, line: 3919, column: 9)
!8289 = !DILocation(line: 3919, column: 13, scope: !8288)
!8290 = !DILocation(line: 3919, column: 9, scope: !8185)
!8291 = !DILocation(line: 3920, column: 10, scope: !8292)
!8292 = distinct !DILexicalBlock(scope: !8288, file: !3, line: 3919, column: 18)
!8293 = !DILocation(line: 3920, column: 19, scope: !8292)
!8294 = !DILocation(line: 3921, column: 5, scope: !8292)
!8295 = !DILocation(line: 3922, column: 21, scope: !8296)
!8296 = distinct !DILexicalBlock(scope: !8288, file: !3, line: 3921, column: 12)
!8297 = !DILocation(line: 3922, column: 10, scope: !8296)
!8298 = !DILocation(line: 3922, column: 19, scope: !8296)
!8299 = !DILocation(line: 3924, column: 12, scope: !8185)
!8300 = !DILocation(line: 3924, column: 5, scope: !8185)
!8301 = !DILocation(line: 3925, column: 1, scope: !8185)
!8302 = distinct !DISubprogram(name: "ulhandler_throttle", scope: !3, file: !3, line: 3751, type: !8303, scopeLine: 3754, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!8303 = !DISubroutineType(types: !8304)
!8304 = !{!326, !7493, !3330, !3364, !6235}
!8305 = !DILocalVariable(name: "ulhandler", arg: 1, scope: !8302, file: !3, line: 3751, type: !7493)
!8306 = !DILocation(line: 3751, column: 49, scope: !8302)
!8307 = !DILocalVariable(name: "uploaded", arg: 2, scope: !8302, file: !3, line: 3752, type: !3330)
!8308 = !DILocation(line: 3752, column: 43, scope: !8302)
!8309 = !DILocalVariable(name: "ts_start", arg: 3, scope: !8302, file: !3, line: 3752, type: !3364)
!8310 = !DILocation(line: 3752, column: 66, scope: !8302)
!8311 = !DILocalVariable(name: "required_sleep", arg: 4, scope: !8302, file: !3, line: 3753, type: !6235)
!8312 = !DILocation(line: 3753, column: 39, scope: !8302)
!8313 = !DILocalVariable(name: "ts_now", scope: !8302, file: !3, line: 3755, type: !336)
!8314 = !DILocation(line: 3755, column: 12, scope: !8302)
!8315 = !DILocalVariable(name: "elapsed", scope: !8302, file: !3, line: 3756, type: !336)
!8316 = !DILocation(line: 3756, column: 12, scope: !8302)
!8317 = !DILocalVariable(name: "would_be_uploaded", scope: !8302, file: !3, line: 3757, type: !344)
!8318 = !DILocation(line: 3757, column: 11, scope: !8302)
!8319 = !DILocalVariable(name: "wanted_ts", scope: !8302, file: !3, line: 3758, type: !336)
!8320 = !DILocation(line: 3758, column: 12, scope: !8302)
!8321 = !DILocalVariable(name: "previous_chunk_size", scope: !8302, file: !3, line: 3759, type: !344)
!8322 = !DILocation(line: 3759, column: 11, scope: !8302)
!8323 = !DILocation(line: 3761, column: 12, scope: !8302)
!8324 = !DILocation(line: 3762, column: 9, scope: !8325)
!8325 = distinct !DILexicalBlock(scope: !8302, file: !3, line: 3762, column: 9)
!8326 = !DILocation(line: 3762, column: 20, scope: !8325)
!8327 = !DILocation(line: 3762, column: 30, scope: !8325)
!8328 = !DILocation(line: 3762, column: 9, scope: !8302)
!8329 = !DILocation(line: 3763, column: 10, scope: !8330)
!8330 = distinct !DILexicalBlock(scope: !8325, file: !3, line: 3762, column: 38)
!8331 = !DILocation(line: 3763, column: 25, scope: !8330)
!8332 = !DILocation(line: 3764, column: 9, scope: !8330)
!8333 = !DILocation(line: 3766, column: 19, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !8302, file: !3, line: 3766, column: 9)
!8335 = !DILocation(line: 3766, column: 17, scope: !8334)
!8336 = !DILocation(line: 3766, column: 36, scope: !8334)
!8337 = !DILocation(line: 3766, column: 9, scope: !8302)
!8338 = !DILocation(line: 3767, column: 18, scope: !8339)
!8339 = distinct !DILexicalBlock(scope: !8334, file: !3, line: 3766, column: 44)
!8340 = !DILocation(line: 3767, column: 16, scope: !8339)
!8341 = !DILocation(line: 3768, column: 5, scope: !8339)
!8342 = !DILocation(line: 3769, column: 9, scope: !8343)
!8343 = distinct !DILexicalBlock(scope: !8302, file: !3, line: 3769, column: 9)
!8344 = !DILocation(line: 3769, column: 20, scope: !8343)
!8345 = !DILocation(line: 3769, column: 18, scope: !8343)
!8346 = !DILocation(line: 3769, column: 9, scope: !8302)
!8347 = !DILocation(line: 3770, column: 18, scope: !8348)
!8348 = distinct !DILexicalBlock(scope: !8343, file: !3, line: 3769, column: 28)
!8349 = !DILocation(line: 3770, column: 16, scope: !8348)
!8350 = !DILocation(line: 3771, column: 5, scope: !8348)
!8351 = !DILocation(line: 3772, column: 15, scope: !8302)
!8352 = !DILocation(line: 3772, column: 24, scope: !8302)
!8353 = !DILocation(line: 3772, column: 22, scope: !8302)
!8354 = !DILocation(line: 3772, column: 13, scope: !8302)
!8355 = !DILocation(line: 3773, column: 25, scope: !8302)
!8356 = !DILocation(line: 3773, column: 36, scope: !8302)
!8357 = !DILocation(line: 3773, column: 53, scope: !8302)
!8358 = !DILocation(line: 3773, column: 64, scope: !8302)
!8359 = !DILocation(line: 3773, column: 51, scope: !8302)
!8360 = !DILocation(line: 3773, column: 23, scope: !8302)
!8361 = !DILocation(line: 3774, column: 9, scope: !8362)
!8362 = distinct !DILexicalBlock(scope: !8302, file: !3, line: 3774, column: 9)
!8363 = !DILocation(line: 3774, column: 20, scope: !8362)
!8364 = !DILocation(line: 3774, column: 30, scope: !8362)
!8365 = !DILocation(line: 3774, column: 9, scope: !8302)
!8366 = !DILocation(line: 3775, column: 30, scope: !8367)
!8367 = distinct !DILexicalBlock(scope: !8362, file: !3, line: 3774, column: 37)
!8368 = !DILocation(line: 3775, column: 21, scope: !8367)
!8369 = !DILocation(line: 3775, column: 59, scope: !8367)
!8370 = !DILocation(line: 3775, column: 70, scope: !8367)
!8371 = !DILocation(line: 3775, column: 50, scope: !8367)
!8372 = !DILocation(line: 3775, column: 48, scope: !8367)
!8373 = !DILocation(line: 3775, column: 19, scope: !8367)
!8374 = !DILocation(line: 3776, column: 5, scope: !8367)
!8375 = !DILocation(line: 3777, column: 21, scope: !8376)
!8376 = distinct !DILexicalBlock(scope: !8362, file: !3, line: 3776, column: 12)
!8377 = !DILocation(line: 3777, column: 19, scope: !8376)
!8378 = !DILocation(line: 3779, column: 23, scope: !8302)
!8379 = !DILocation(line: 3779, column: 35, scope: !8302)
!8380 = !DILocation(line: 3779, column: 33, scope: !8302)
!8381 = !DILocation(line: 3779, column: 6, scope: !8302)
!8382 = !DILocation(line: 3779, column: 21, scope: !8302)
!8383 = !DILocation(line: 3780, column: 27, scope: !8302)
!8384 = !DILocation(line: 3780, column: 38, scope: !8302)
!8385 = !DILocation(line: 3780, column: 25, scope: !8302)
!8386 = !DILocation(line: 3781, column: 9, scope: !8387)
!8387 = distinct !DILexicalBlock(scope: !8302, file: !3, line: 3781, column: 9)
!8388 = !DILocation(line: 3781, column: 20, scope: !8387)
!8389 = !DILocation(line: 3781, column: 37, scope: !8387)
!8390 = !DILocation(line: 3781, column: 48, scope: !8387)
!8391 = !DILocation(line: 3781, column: 35, scope: !8387)
!8392 = !DILocation(line: 3781, column: 9, scope: !8302)
!8393 = !DILocation(line: 3782, column: 14, scope: !8394)
!8394 = distinct !DILexicalBlock(scope: !8395, file: !3, line: 3782, column: 13)
!8395 = distinct !DILexicalBlock(scope: !8387, file: !3, line: 3781, column: 60)
!8396 = !DILocation(line: 3782, column: 13, scope: !8394)
!8397 = !DILocation(line: 3782, column: 31, scope: !8394)
!8398 = !DILocation(line: 3782, column: 42, scope: !8394)
!8399 = !DILocation(line: 3782, column: 29, scope: !8394)
!8400 = !DILocation(line: 3782, column: 13, scope: !8395)
!8401 = !DILocation(line: 3784, column: 18, scope: !8402)
!8402 = distinct !DILexicalBlock(scope: !8394, file: !3, line: 3782, column: 53)
!8403 = !DILocation(line: 3784, column: 29, scope: !8402)
!8404 = !DILocation(line: 3784, column: 46, scope: !8402)
!8405 = !DILocation(line: 3784, column: 57, scope: !8402)
!8406 = !DILocation(line: 3784, column: 44, scope: !8402)
!8407 = !DILocation(line: 3784, column: 69, scope: !8402)
!8408 = !DILocation(line: 3783, column: 13, scope: !8402)
!8409 = !DILocation(line: 3783, column: 24, scope: !8402)
!8410 = !DILocation(line: 3783, column: 35, scope: !8402)
!8411 = !DILocation(line: 3785, column: 9, scope: !8402)
!8412 = !DILocation(line: 3785, column: 21, scope: !8413)
!8413 = distinct !DILexicalBlock(scope: !8394, file: !3, line: 3785, column: 20)
!8414 = !DILocation(line: 3785, column: 20, scope: !8413)
!8415 = !DILocation(line: 3785, column: 38, scope: !8413)
!8416 = !DILocation(line: 3785, column: 49, scope: !8413)
!8417 = !DILocation(line: 3785, column: 36, scope: !8413)
!8418 = !DILocation(line: 3785, column: 20, scope: !8394)
!8419 = !DILocation(line: 3787, column: 18, scope: !8420)
!8420 = distinct !DILexicalBlock(scope: !8413, file: !3, line: 3785, column: 60)
!8421 = !DILocation(line: 3787, column: 29, scope: !8420)
!8422 = !DILocation(line: 3787, column: 46, scope: !8420)
!8423 = !DILocation(line: 3787, column: 57, scope: !8420)
!8424 = !DILocation(line: 3787, column: 44, scope: !8420)
!8425 = !DILocation(line: 3787, column: 69, scope: !8420)
!8426 = !DILocation(line: 3786, column: 13, scope: !8420)
!8427 = !DILocation(line: 3786, column: 24, scope: !8420)
!8428 = !DILocation(line: 3786, column: 35, scope: !8420)
!8429 = !DILocation(line: 3788, column: 9, scope: !8420)
!8430 = !DILocation(line: 3789, column: 37, scope: !8431)
!8431 = distinct !DILexicalBlock(scope: !8413, file: !3, line: 3788, column: 16)
!8432 = !DILocation(line: 3789, column: 48, scope: !8431)
!8433 = !DILocation(line: 3789, column: 13, scope: !8431)
!8434 = !DILocation(line: 3789, column: 24, scope: !8431)
!8435 = !DILocation(line: 3789, column: 35, scope: !8431)
!8436 = !DILocation(line: 3791, column: 13, scope: !8437)
!8437 = distinct !DILexicalBlock(scope: !8395, file: !3, line: 3791, column: 13)
!8438 = !DILocation(line: 3791, column: 24, scope: !8437)
!8439 = !DILocation(line: 3791, column: 35, scope: !8437)
!8440 = !DILocation(line: 3791, column: 40, scope: !8437)
!8441 = !DILocation(line: 3792, column: 13, scope: !8437)
!8442 = !DILocation(line: 3792, column: 24, scope: !8437)
!8443 = !DILocation(line: 3792, column: 45, scope: !8437)
!8444 = !DILocation(line: 3792, column: 56, scope: !8437)
!8445 = !DILocation(line: 3792, column: 35, scope: !8437)
!8446 = !DILocation(line: 3791, column: 13, scope: !8395)
!8447 = !DILocation(line: 3793, column: 37, scope: !8448)
!8448 = distinct !DILexicalBlock(scope: !8437, file: !3, line: 3792, column: 68)
!8449 = !DILocation(line: 3793, column: 48, scope: !8448)
!8450 = !DILocation(line: 3793, column: 13, scope: !8448)
!8451 = !DILocation(line: 3793, column: 24, scope: !8448)
!8452 = !DILocation(line: 3793, column: 35, scope: !8448)
!8453 = !DILocation(line: 3794, column: 9, scope: !8448)
!8454 = !DILocation(line: 3795, column: 13, scope: !8455)
!8455 = distinct !DILexicalBlock(scope: !8395, file: !3, line: 3795, column: 13)
!8456 = !DILocation(line: 3795, column: 36, scope: !8455)
!8457 = !DILocation(line: 3795, column: 47, scope: !8455)
!8458 = !DILocation(line: 3795, column: 33, scope: !8455)
!8459 = !DILocation(line: 3795, column: 13, scope: !8395)
!8460 = !DILocation(line: 3797, column: 17, scope: !8461)
!8461 = distinct !DILexicalBlock(scope: !8455, file: !3, line: 3795, column: 67)
!8462 = !DILocation(line: 3797, column: 28, scope: !8461)
!8463 = !DILocation(line: 3797, column: 45, scope: !8461)
!8464 = !DILocation(line: 3797, column: 56, scope: !8461)
!8465 = !DILocation(line: 3797, column: 43, scope: !8461)
!8466 = !DILocation(line: 3796, column: 31, scope: !8461)
!8467 = !DILocation(line: 3798, column: 17, scope: !8468)
!8468 = distinct !DILexicalBlock(scope: !8461, file: !3, line: 3798, column: 17)
!8469 = !DILocation(line: 3798, column: 28, scope: !8468)
!8470 = !DILocation(line: 3798, column: 38, scope: !8468)
!8471 = !DILocation(line: 3798, column: 17, scope: !8461)
!8472 = !DILocation(line: 3799, column: 38, scope: !8473)
!8473 = distinct !DILexicalBlock(scope: !8468, file: !3, line: 3798, column: 45)
!8474 = !DILocation(line: 3799, column: 29, scope: !8473)
!8475 = !DILocation(line: 3800, column: 30, scope: !8473)
!8476 = !DILocation(line: 3800, column: 41, scope: !8473)
!8477 = !DILocation(line: 3800, column: 21, scope: !8473)
!8478 = !DILocation(line: 3799, column: 56, scope: !8473)
!8479 = !DILocation(line: 3799, column: 27, scope: !8473)
!8480 = !DILocation(line: 3801, column: 13, scope: !8473)
!8481 = !DILocation(line: 3802, column: 29, scope: !8482)
!8482 = distinct !DILexicalBlock(scope: !8468, file: !3, line: 3801, column: 20)
!8483 = !DILocation(line: 3802, column: 27, scope: !8482)
!8484 = !DILocation(line: 3804, column: 31, scope: !8461)
!8485 = !DILocation(line: 3804, column: 43, scope: !8461)
!8486 = !DILocation(line: 3804, column: 41, scope: !8461)
!8487 = !DILocation(line: 3804, column: 14, scope: !8461)
!8488 = !DILocation(line: 3804, column: 29, scope: !8461)
!8489 = !DILocation(line: 3805, column: 9, scope: !8461)
!8490 = !DILocation(line: 3806, column: 5, scope: !8395)
!8491 = !DILocation(line: 3807, column: 5, scope: !8302)
!8492 = !DILocation(line: 3808, column: 1, scope: !8302)
!8493 = distinct !DISubprogram(name: "domdtm", scope: !3, file: !3, line: 4451, type: !3536, scopeLine: 4452, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!8494 = !DILocalVariable(name: "name", arg: 1, scope: !8493, file: !3, line: 4451, type: !385)
!8495 = !DILocation(line: 4451, column: 25, scope: !8493)
!8496 = !DILocalVariable(name: "st", scope: !8493, file: !3, line: 4453, type: !3147)
!8497 = !DILocation(line: 4453, column: 17, scope: !8493)
!8498 = !DILocalVariable(name: "t", scope: !8493, file: !3, line: 4454, type: !3130)
!8499 = !DILocation(line: 4454, column: 16, scope: !8493)
!8500 = !DILocation(line: 4456, column: 10, scope: !8501)
!8501 = distinct !DILexicalBlock(scope: !8493, file: !3, line: 4456, column: 9)
!8502 = !DILocation(line: 4456, column: 15, scope: !8501)
!8503 = !DILocation(line: 4456, column: 20, scope: !8501)
!8504 = !DILocation(line: 4456, column: 19, scope: !8501)
!8505 = !DILocation(line: 4456, column: 9, scope: !8493)
!8506 = !DILocation(line: 4457, column: 9, scope: !8507)
!8507 = distinct !DILexicalBlock(scope: !8501, file: !3, line: 4456, column: 26)
!8508 = !DILocation(line: 4458, column: 5, scope: !8507)
!8509 = !DILocation(line: 4458, column: 21, scope: !8510)
!8510 = distinct !DILexicalBlock(scope: !8501, file: !3, line: 4458, column: 16)
!8511 = !DILocation(line: 4458, column: 16, scope: !8510)
!8512 = !DILocation(line: 4458, column: 16, scope: !8501)
!8513 = !DILocation(line: 4464, column: 9, scope: !8514)
!8514 = distinct !DILexicalBlock(scope: !8510, file: !3, line: 4458, column: 33)
!8515 = !DILocation(line: 4465, column: 5, scope: !8514)
!8516 = !DILocation(line: 4465, column: 17, scope: !8517)
!8517 = distinct !DILexicalBlock(scope: !8510, file: !3, line: 4465, column: 16)
!8518 = !DILocation(line: 4465, column: 16, scope: !8510)
!8519 = !DILocation(line: 4466, column: 9, scope: !8520)
!8520 = distinct !DILexicalBlock(scope: !8517, file: !3, line: 4465, column: 38)
!8521 = !DILocation(line: 4467, column: 5, scope: !8520)
!8522 = !DILocation(line: 4468, column: 36, scope: !8523)
!8523 = distinct !DILexicalBlock(scope: !8517, file: !3, line: 4467, column: 12)
!8524 = !DILocation(line: 4468, column: 13, scope: !8523)
!8525 = !DILocation(line: 4468, column: 11, scope: !8523)
!8526 = !DILocation(line: 4469, column: 14, scope: !8527)
!8527 = distinct !DILexicalBlock(scope: !8523, file: !3, line: 4469, column: 13)
!8528 = !DILocation(line: 4469, column: 13, scope: !8523)
!8529 = !DILocation(line: 4470, column: 13, scope: !8530)
!8530 = distinct !DILexicalBlock(scope: !8527, file: !3, line: 4469, column: 17)
!8531 = !DILocation(line: 4471, column: 9, scope: !8530)
!8532 = !DILocation(line: 4473, column: 22, scope: !8533)
!8533 = distinct !DILexicalBlock(scope: !8527, file: !3, line: 4471, column: 16)
!8534 = !DILocation(line: 4473, column: 25, scope: !8533)
!8535 = !DILocation(line: 4473, column: 33, scope: !8533)
!8536 = !DILocation(line: 4473, column: 41, scope: !8533)
!8537 = !DILocation(line: 4473, column: 44, scope: !8533)
!8538 = !DILocation(line: 4473, column: 51, scope: !8533)
!8539 = !DILocation(line: 4473, column: 56, scope: !8533)
!8540 = !DILocation(line: 4473, column: 59, scope: !8533)
!8541 = !DILocation(line: 4474, column: 22, scope: !8533)
!8542 = !DILocation(line: 4474, column: 25, scope: !8533)
!8543 = !DILocation(line: 4474, column: 34, scope: !8533)
!8544 = !DILocation(line: 4474, column: 37, scope: !8533)
!8545 = !DILocation(line: 4474, column: 45, scope: !8533)
!8546 = !DILocation(line: 4474, column: 48, scope: !8533)
!8547 = !DILocation(line: 4472, column: 13, scope: !8533)
!8548 = !DILocation(line: 4477, column: 1, scope: !8493)
!8549 = distinct !DISubprogram(name: "dosize", scope: !3, file: !3, line: 4479, type: !3536, scopeLine: 4480, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!8550 = !DILocalVariable(name: "name", arg: 1, scope: !8549, file: !3, line: 4479, type: !385)
!8551 = !DILocation(line: 4479, column: 25, scope: !8549)
!8552 = !DILocalVariable(name: "st", scope: !8549, file: !3, line: 4481, type: !3147)
!8553 = !DILocation(line: 4481, column: 17, scope: !8549)
!8554 = !DILocation(line: 4483, column: 10, scope: !8555)
!8555 = distinct !DILexicalBlock(scope: !8549, file: !3, line: 4483, column: 9)
!8556 = !DILocation(line: 4483, column: 15, scope: !8555)
!8557 = !DILocation(line: 4483, column: 20, scope: !8555)
!8558 = !DILocation(line: 4483, column: 19, scope: !8555)
!8559 = !DILocation(line: 4483, column: 9, scope: !8549)
!8560 = !DILocation(line: 4484, column: 9, scope: !8561)
!8561 = distinct !DILexicalBlock(scope: !8555, file: !3, line: 4483, column: 26)
!8562 = !DILocation(line: 4485, column: 5, scope: !8561)
!8563 = !DILocation(line: 4485, column: 21, scope: !8564)
!8564 = distinct !DILexicalBlock(scope: !8555, file: !3, line: 4485, column: 16)
!8565 = !DILocation(line: 4485, column: 16, scope: !8564)
!8566 = !DILocation(line: 4485, column: 16, scope: !8555)
!8567 = !DILocation(line: 4491, column: 9, scope: !8568)
!8568 = distinct !DILexicalBlock(scope: !8564, file: !3, line: 4485, column: 33)
!8569 = !DILocation(line: 4492, column: 5, scope: !8568)
!8570 = !DILocation(line: 4492, column: 17, scope: !8571)
!8571 = distinct !DILexicalBlock(scope: !8564, file: !3, line: 4492, column: 16)
!8572 = !DILocation(line: 4492, column: 16, scope: !8564)
!8573 = !DILocation(line: 4493, column: 9, scope: !8574)
!8574 = distinct !DILexicalBlock(scope: !8571, file: !3, line: 4492, column: 38)
!8575 = !DILocation(line: 4494, column: 5, scope: !8574)
!8576 = !DILocation(line: 4495, column: 55, scope: !8577)
!8577 = distinct !DILexicalBlock(scope: !8571, file: !3, line: 4494, column: 12)
!8578 = !DILocation(line: 4495, column: 9, scope: !8577)
!8579 = !DILocation(line: 4497, column: 1, scope: !8549)
!8580 = distinct !DISubprogram(name: "dotype", scope: !3, file: !3, line: 4499, type: !3536, scopeLine: 4500, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!8581 = !DILocalVariable(name: "arg", arg: 1, scope: !8580, file: !3, line: 4499, type: !385)
!8582 = !DILocation(line: 4499, column: 25, scope: !8580)
!8583 = !DILocation(line: 4501, column: 15, scope: !8580)
!8584 = !DILocation(line: 4503, column: 10, scope: !8585)
!8585 = distinct !DILexicalBlock(scope: !8580, file: !3, line: 4503, column: 9)
!8586 = !DILocation(line: 4503, column: 14, scope: !8585)
!8587 = !DILocation(line: 4503, column: 19, scope: !8585)
!8588 = !DILocation(line: 4503, column: 18, scope: !8585)
!8589 = !DILocation(line: 4503, column: 9, scope: !8580)
!8590 = !DILocation(line: 4504, column: 9, scope: !8591)
!8591 = distinct !DILexicalBlock(scope: !8585, file: !3, line: 4503, column: 24)
!8592 = !DILocation(line: 4505, column: 5, scope: !8591)
!8593 = !DILocation(line: 4505, column: 41, scope: !8594)
!8594 = distinct !DILexicalBlock(scope: !8585, file: !3, line: 4505, column: 16)
!8595 = !DILocation(line: 4505, column: 40, scope: !8594)
!8596 = !DILocation(line: 4505, column: 24, scope: !8594)
!8597 = !DILocation(line: 4505, column: 16, scope: !8594)
!8598 = !DILocation(line: 4505, column: 46, scope: !8594)
!8599 = !DILocation(line: 4505, column: 16, scope: !8585)
!8600 = !DILocation(line: 4506, column: 14, scope: !8594)
!8601 = !DILocation(line: 4506, column: 9, scope: !8594)
!8602 = !DILocation(line: 4507, column: 39, scope: !8603)
!8603 = distinct !DILexicalBlock(scope: !8594, file: !3, line: 4507, column: 14)
!8604 = !DILocation(line: 4507, column: 38, scope: !8603)
!8605 = !DILocation(line: 4507, column: 22, scope: !8603)
!8606 = !DILocation(line: 4507, column: 14, scope: !8603)
!8607 = !DILocation(line: 4507, column: 44, scope: !8603)
!8608 = !DILocation(line: 4507, column: 14, scope: !8594)
!8609 = !DILocation(line: 4508, column: 14, scope: !8603)
!8610 = !DILocation(line: 4508, column: 9, scope: !8603)
!8611 = !DILocation(line: 4509, column: 39, scope: !8612)
!8612 = distinct !DILexicalBlock(scope: !8603, file: !3, line: 4509, column: 14)
!8613 = !DILocation(line: 4509, column: 38, scope: !8612)
!8614 = !DILocation(line: 4509, column: 22, scope: !8612)
!8615 = !DILocation(line: 4509, column: 14, scope: !8612)
!8616 = !DILocation(line: 4509, column: 44, scope: !8612)
!8617 = !DILocation(line: 4509, column: 14, scope: !8603)
!8618 = !DILocation(line: 4510, column: 13, scope: !8619)
!8619 = distinct !DILexicalBlock(scope: !8620, file: !3, line: 4510, column: 13)
!8620 = distinct !DILexicalBlock(scope: !8612, file: !3, line: 4509, column: 52)
!8621 = !DILocation(line: 4510, column: 20, scope: !8619)
!8622 = !DILocation(line: 4510, column: 13, scope: !8620)
!8623 = !DILocation(line: 4511, column: 18, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8619, file: !3, line: 4510, column: 28)
!8625 = !DILocation(line: 4512, column: 9, scope: !8624)
!8626 = !DILocation(line: 4512, column: 20, scope: !8627)
!8627 = distinct !DILexicalBlock(scope: !8619, file: !3, line: 4512, column: 20)
!8628 = !DILocation(line: 4512, column: 20, scope: !8619)
!8629 = !DILocation(line: 4513, column: 13, scope: !8630)
!8630 = distinct !DILexicalBlock(scope: !8627, file: !3, line: 4512, column: 53)
!8631 = !DILocation(line: 4514, column: 9, scope: !8630)
!8632 = !DILocation(line: 4515, column: 13, scope: !8633)
!8633 = distinct !DILexicalBlock(scope: !8627, file: !3, line: 4514, column: 16)
!8634 = !DILocation(line: 4516, column: 18, scope: !8633)
!8635 = !DILocation(line: 4518, column: 5, scope: !8620)
!8636 = !DILocation(line: 4519, column: 48, scope: !8637)
!8637 = distinct !DILexicalBlock(scope: !8612, file: !3, line: 4518, column: 12)
!8638 = !DILocation(line: 4519, column: 9, scope: !8637)
!8639 = !DILocation(line: 4522, column: 42, scope: !8580)
!8640 = !DILocation(line: 4522, column: 47, scope: !8580)
!8641 = !DILocation(line: 4522, column: 41, scope: !8580)
!8642 = !DILocation(line: 4522, column: 5, scope: !8580)
!8643 = !DILocation(line: 4523, column: 1, scope: !8580)
!8644 = distinct !DISubprogram(name: "dostru", scope: !3, file: !3, line: 4525, type: !3536, scopeLine: 4526, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!8645 = !DILocalVariable(name: "arg", arg: 1, scope: !8644, file: !3, line: 4525, type: !385)
!8646 = !DILocation(line: 4525, column: 25, scope: !8644)
!8647 = !DILocation(line: 4527, column: 9, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8644, file: !3, line: 4527, column: 9)
!8649 = !DILocation(line: 4527, column: 13, scope: !8648)
!8650 = !DILocation(line: 4527, column: 21, scope: !8648)
!8651 = !DILocation(line: 4527, column: 26, scope: !8648)
!8652 = !DILocation(line: 4527, column: 25, scope: !8648)
!8653 = !DILocation(line: 4527, column: 9, scope: !8644)
!8654 = !DILocation(line: 4528, column: 9, scope: !8655)
!8655 = distinct !DILexicalBlock(scope: !8648, file: !3, line: 4527, column: 31)
!8656 = !DILocation(line: 4529, column: 5, scope: !8655)
!8657 = !DILocation(line: 4529, column: 27, scope: !8658)
!8658 = distinct !DILexicalBlock(scope: !8648, file: !3, line: 4529, column: 16)
!8659 = !DILocation(line: 4529, column: 16, scope: !8658)
!8660 = !DILocation(line: 4529, column: 16, scope: !8648)
!8661 = !DILocation(line: 4530, column: 9, scope: !8662)
!8662 = distinct !DILexicalBlock(scope: !8658, file: !3, line: 4529, column: 38)
!8663 = !DILocation(line: 4531, column: 5, scope: !8662)
!8664 = !DILocation(line: 4532, column: 9, scope: !8665)
!8665 = distinct !DILexicalBlock(scope: !8658, file: !3, line: 4531, column: 12)
!8666 = !DILocation(line: 4534, column: 1, scope: !8644)
!8667 = distinct !DISubprogram(name: "domode", scope: !3, file: !3, line: 4536, type: !3536, scopeLine: 4537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!8668 = !DILocalVariable(name: "arg", arg: 1, scope: !8667, file: !3, line: 4536, type: !385)
!8669 = !DILocation(line: 4536, column: 25, scope: !8667)
!8670 = !DILocation(line: 4538, column: 9, scope: !8671)
!8671 = distinct !DILexicalBlock(scope: !8667, file: !3, line: 4538, column: 9)
!8672 = !DILocation(line: 4538, column: 13, scope: !8671)
!8673 = !DILocation(line: 4538, column: 21, scope: !8671)
!8674 = !DILocation(line: 4538, column: 26, scope: !8671)
!8675 = !DILocation(line: 4538, column: 25, scope: !8671)
!8676 = !DILocation(line: 4538, column: 9, scope: !8667)
!8677 = !DILocation(line: 4539, column: 9, scope: !8678)
!8678 = distinct !DILexicalBlock(scope: !8671, file: !3, line: 4538, column: 31)
!8679 = !DILocation(line: 4540, column: 5, scope: !8678)
!8680 = !DILocation(line: 4540, column: 27, scope: !8681)
!8681 = distinct !DILexicalBlock(scope: !8671, file: !3, line: 4540, column: 16)
!8682 = !DILocation(line: 4540, column: 16, scope: !8681)
!8683 = !DILocation(line: 4540, column: 16, scope: !8671)
!8684 = !DILocation(line: 4541, column: 9, scope: !8685)
!8685 = distinct !DILexicalBlock(scope: !8681, file: !3, line: 4540, column: 38)
!8686 = !DILocation(line: 4542, column: 5, scope: !8685)
!8687 = !DILocation(line: 4543, column: 9, scope: !8688)
!8688 = distinct !DILexicalBlock(scope: !8681, file: !3, line: 4542, column: 12)
!8689 = !DILocation(line: 4545, column: 1, scope: !8667)
!8690 = distinct !DISubprogram(name: "dornfr", scope: !3, file: !3, line: 4547, type: !469, scopeLine: 4548, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!8691 = !DILocalVariable(name: "name", arg: 1, scope: !8690, file: !3, line: 4547, type: !308)
!8692 = !DILocation(line: 4547, column: 19, scope: !8690)
!8693 = !DILocalVariable(name: "st", scope: !8690, file: !3, line: 4549, type: !3147)
!8694 = !DILocation(line: 4549, column: 17, scope: !8690)
!8695 = !DILocation(line: 4552, column: 9, scope: !8696)
!8696 = distinct !DILexicalBlock(scope: !8690, file: !3, line: 4552, column: 9)
!8697 = !DILocation(line: 4552, column: 15, scope: !8696)
!8698 = !DILocation(line: 4552, column: 9, scope: !8690)
!8699 = !DILocation(line: 4553, column: 9, scope: !8700)
!8700 = distinct !DILexicalBlock(scope: !8696, file: !3, line: 4552, column: 21)
!8701 = !DILocation(line: 4554, column: 9, scope: !8700)
!8702 = !DILocation(line: 4557, column: 9, scope: !8703)
!8703 = distinct !DILexicalBlock(scope: !8690, file: !3, line: 4557, column: 9)
!8704 = !DILocation(line: 4557, column: 25, scope: !8703)
!8705 = !DILocation(line: 4557, column: 9, scope: !8690)
!8706 = !DILocation(line: 4558, column: 9, scope: !8707)
!8707 = distinct !DILexicalBlock(scope: !8703, file: !3, line: 4557, column: 31)
!8708 = !DILocation(line: 4559, column: 9, scope: !8707)
!8709 = !DILocation(line: 4561, column: 25, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8690, file: !3, line: 4561, column: 9)
!8711 = !DILocation(line: 4561, column: 31, scope: !8710)
!8712 = !DILocation(line: 4561, column: 9, scope: !8710)
!8713 = !DILocation(line: 4561, column: 45, scope: !8710)
!8714 = !DILocation(line: 4561, column: 9, scope: !8690)
!8715 = !DILocation(line: 4562, column: 48, scope: !8716)
!8716 = distinct !DILexicalBlock(scope: !8710, file: !3, line: 4561, column: 51)
!8717 = !DILocation(line: 4562, column: 9, scope: !8716)
!8718 = !DILocation(line: 4563, column: 9, scope: !8716)
!8719 = !DILocation(line: 4565, column: 16, scope: !8720)
!8720 = distinct !DILexicalBlock(scope: !8690, file: !3, line: 4565, column: 9)
!8721 = !DILocation(line: 4565, column: 10, scope: !8720)
!8722 = !DILocation(line: 4565, column: 28, scope: !8720)
!8723 = !DILocation(line: 4565, column: 9, scope: !8690)
!8724 = !DILocation(line: 4566, column: 13, scope: !8725)
!8725 = distinct !DILexicalBlock(scope: !8726, file: !3, line: 4566, column: 13)
!8726 = distinct !DILexicalBlock(scope: !8720, file: !3, line: 4565, column: 34)
!8727 = !DILocation(line: 4566, column: 24, scope: !8725)
!8728 = !DILocation(line: 4566, column: 13, scope: !8726)
!8729 = !DILocation(line: 4567, column: 13, scope: !8730)
!8730 = distinct !DILexicalBlock(scope: !8725, file: !3, line: 4566, column: 33)
!8731 = !DILocation(line: 4568, column: 25, scope: !8730)
!8732 = !DILocation(line: 4568, column: 20, scope: !8730)
!8733 = !DILocation(line: 4569, column: 9, scope: !8730)
!8734 = !DILocation(line: 4570, column: 34, scope: !8735)
!8735 = distinct !DILexicalBlock(scope: !8726, file: !3, line: 4570, column: 13)
!8736 = !DILocation(line: 4570, column: 27, scope: !8735)
!8737 = !DILocation(line: 4570, column: 25, scope: !8735)
!8738 = !DILocation(line: 4570, column: 41, scope: !8735)
!8739 = !DILocation(line: 4570, column: 13, scope: !8726)
!8740 = !DILocation(line: 4571, column: 13, scope: !8741)
!8741 = distinct !DILexicalBlock(scope: !8735, file: !3, line: 4570, column: 50)
!8742 = !DILocation(line: 4573, column: 9, scope: !8726)
!8743 = !DILocation(line: 4574, column: 5, scope: !8726)
!8744 = !DILocation(line: 4575, column: 9, scope: !8745)
!8745 = distinct !DILexicalBlock(scope: !8720, file: !3, line: 4574, column: 12)
!8746 = !DILocation(line: 4577, column: 1, scope: !8690)
!8747 = distinct !DISubprogram(name: "dornto", scope: !3, file: !3, line: 4579, type: !469, scopeLine: 4580, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!8748 = !DILocalVariable(name: "name", arg: 1, scope: !8747, file: !3, line: 4579, type: !308)
!8749 = !DILocation(line: 4579, column: 19, scope: !8747)
!8750 = !DILocation(line: 4588, column: 9, scope: !8751)
!8751 = distinct !DILexicalBlock(scope: !8747, file: !3, line: 4588, column: 9)
!8752 = !DILocation(line: 4588, column: 15, scope: !8751)
!8753 = !DILocation(line: 4588, column: 9, scope: !8747)
!8754 = !DILocation(line: 4589, column: 9, scope: !8755)
!8755 = distinct !DILexicalBlock(scope: !8751, file: !3, line: 4588, column: 21)
!8756 = !DILocation(line: 4590, column: 9, scope: !8755)
!8757 = !DILocation(line: 4593, column: 9, scope: !8758)
!8758 = distinct !DILexicalBlock(scope: !8747, file: !3, line: 4593, column: 9)
!8759 = !DILocation(line: 4593, column: 20, scope: !8758)
!8760 = !DILocation(line: 4593, column: 9, scope: !8747)
!8761 = !DILocation(line: 4594, column: 9, scope: !8762)
!8762 = distinct !DILexicalBlock(scope: !8758, file: !3, line: 4593, column: 29)
!8763 = !DILocation(line: 4595, column: 9, scope: !8762)
!8764 = !DILocation(line: 4597, column: 25, scope: !8765)
!8765 = distinct !DILexicalBlock(scope: !8747, file: !3, line: 4597, column: 9)
!8766 = !DILocation(line: 4597, column: 31, scope: !8765)
!8767 = !DILocation(line: 4597, column: 9, scope: !8765)
!8768 = !DILocation(line: 4597, column: 45, scope: !8765)
!8769 = !DILocation(line: 4597, column: 9, scope: !8747)
!8770 = !DILocation(line: 4598, column: 48, scope: !8771)
!8771 = distinct !DILexicalBlock(scope: !8765, file: !3, line: 4597, column: 51)
!8772 = !DILocation(line: 4598, column: 9, scope: !8771)
!8773 = !DILocation(line: 4599, column: 9, scope: !8771)
!8774 = !DILocation(line: 4632, column: 16, scope: !8775)
!8775 = distinct !DILexicalBlock(scope: !8747, file: !3, line: 4632, column: 9)
!8776 = !DILocation(line: 4632, column: 28, scope: !8775)
!8777 = !DILocation(line: 4632, column: 9, scope: !8775)
!8778 = !DILocation(line: 4632, column: 34, scope: !8775)
!8779 = !DILocation(line: 4632, column: 9, scope: !8747)
!8780 = !DILocation(line: 4633, column: 9, scope: !8781)
!8781 = distinct !DILexicalBlock(scope: !8775, file: !3, line: 4632, column: 39)
!8782 = !DILocation(line: 4637, column: 5, scope: !8781)
!8783 = !DILocation(line: 4638, column: 9, scope: !8784)
!8784 = distinct !DILexicalBlock(scope: !8775, file: !3, line: 4637, column: 12)
!8785 = !DILocation(line: 4640, column: 17, scope: !8784)
!8786 = !DILocation(line: 4640, column: 29, scope: !8784)
!8787 = !DILocation(line: 4639, column: 9, scope: !8784)
!8788 = !DILocation(line: 4632, column: 36, scope: !8775)
!8789 = !DILabel(scope: !8747, name: "bye", file: !3, line: 4642)
!8790 = !DILocation(line: 4642, column: 5, scope: !8747)
!8791 = !DILocation(line: 4643, column: 17, scope: !8747)
!8792 = !DILocation(line: 4643, column: 12, scope: !8747)
!8793 = !DILocation(line: 4644, column: 16, scope: !8747)
!8794 = !DILocation(line: 4645, column: 1, scope: !8747)
!8795 = distinct !DISubprogram(name: "doopts", scope: !3, file: !3, line: 4648, type: !469, scopeLine: 4649, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !471)
!8796 = !DILocalVariable(name: "args", arg: 1, scope: !8795, file: !3, line: 4648, type: !308)
!8797 = !DILocation(line: 4648, column: 19, scope: !8795)
!8798 = !DILocalVariable(name: "cmdopts", scope: !8795, file: !3, line: 4650, type: !308)
!8799 = !DILocation(line: 4650, column: 11, scope: !8795)
!8800 = !DILocation(line: 4652, column: 27, scope: !8801)
!8801 = distinct !DILexicalBlock(scope: !8795, file: !3, line: 4652, column: 9)
!8802 = !DILocation(line: 4652, column: 20, scope: !8801)
!8803 = !DILocation(line: 4652, column: 18, scope: !8801)
!8804 = !DILocation(line: 4652, column: 39, scope: !8801)
!8805 = !DILocation(line: 4652, column: 9, scope: !8795)
!8806 = !DILocation(line: 4653, column: 16, scope: !8807)
!8807 = distinct !DILexicalBlock(scope: !8801, file: !3, line: 4652, column: 48)
!8808 = !DILocation(line: 4654, column: 16, scope: !8807)
!8809 = !DILocation(line: 4655, column: 5, scope: !8807)
!8810 = !DILocation(line: 4656, column: 30, scope: !8811)
!8811 = distinct !DILexicalBlock(scope: !8795, file: !3, line: 4656, column: 9)
!8812 = !DILocation(line: 4656, column: 9, scope: !8811)
!8813 = !DILocation(line: 4656, column: 39, scope: !8811)
!8814 = !DILocation(line: 4656, column: 9, scope: !8795)
!8815 = !DILocation(line: 4657, column: 9, scope: !8816)
!8816 = distinct !DILexicalBlock(scope: !8811, file: !3, line: 4656, column: 45)
!8817 = !DILocation(line: 4660, column: 9, scope: !8816)
!8818 = !DILocation(line: 4662, column: 5, scope: !8795)
!8819 = !DILocation(line: 4663, column: 1, scope: !8795)
!8820 = !DILocalVariable(name: "argc", arg: 1, scope: !490, file: !3, line: 5524, type: !326)
!8821 = !DILocation(line: 5524, column: 24, scope: !490)
!8822 = !DILocalVariable(name: "argv", arg: 2, scope: !490, file: !3, line: 5524, type: !493)
!8823 = !DILocation(line: 5524, column: 36, scope: !490)
!8824 = !DILocalVariable(name: "home_directory_", arg: 3, scope: !490, file: !3, line: 5524, type: !385)
!8825 = !DILocation(line: 5524, column: 56, scope: !490)
!8826 = !DILocalVariable(name: "option_index", scope: !490, file: !3, line: 5527, type: !326)
!8827 = !DILocation(line: 5527, column: 9, scope: !490)
!8828 = !DILocalVariable(name: "fodder", scope: !490, file: !3, line: 5529, type: !326)
!8829 = !DILocation(line: 5529, column: 9, scope: !490)
!8830 = !DILocalVariable(name: "bypass_ipv6", scope: !490, file: !3, line: 5530, type: !326)
!8831 = !DILocation(line: 5530, column: 9, scope: !490)
!8832 = !DILocalVariable(name: "pw", scope: !490, file: !3, line: 5531, type: !3541)
!8833 = !DILocation(line: 5531, column: 20, scope: !490)
!8834 = !DILocation(line: 5533, column: 12, scope: !490)
!8835 = !DILocation(line: 5537, column: 5, scope: !490)
!8836 = !DILocation(line: 5540, column: 26, scope: !490)
!8837 = !DILocation(line: 5540, column: 17, scope: !490)
!8838 = !DILocation(line: 5540, column: 15, scope: !490)
!8839 = !DILocation(line: 5551, column: 12, scope: !490)
!8840 = !DILocation(line: 5554, column: 12, scope: !490)
!8841 = !DILocation(line: 5557, column: 12, scope: !490)
!8842 = !DILocation(line: 5561, column: 5, scope: !490)
!8843 = !DILocation(line: 5562, column: 12, scope: !490)
!8844 = !DILocation(line: 5565, column: 39, scope: !490)
!8845 = !DILocation(line: 5565, column: 37, scope: !490)
!8846 = !DILocation(line: 5565, column: 5, scope: !490)
!8847 = !DILocation(line: 5571, column: 5, scope: !490)
!8848 = !DILocation(line: 5573, column: 14, scope: !490)
!8849 = !DILocation(line: 5588, column: 9, scope: !490)
!8850 = !DILocation(line: 5590, column: 9, scope: !8851)
!8851 = distinct !DILexicalBlock(scope: !490, file: !3, line: 5590, column: 9)
!8852 = !DILocation(line: 5590, column: 14, scope: !8851)
!8853 = !DILocation(line: 5590, column: 19, scope: !8851)
!8854 = !DILocation(line: 5590, column: 23, scope: !8851)
!8855 = !DILocation(line: 5590, column: 22, scope: !8851)
!8856 = !DILocation(line: 5590, column: 31, scope: !8851)
!8857 = !DILocation(line: 5590, column: 38, scope: !8851)
!8858 = !DILocation(line: 5591, column: 41, scope: !8851)
!8859 = !DILocation(line: 5594, column: 41, scope: !8851)
!8860 = !DILocation(line: 5591, column: 9, scope: !8851)
!8861 = !DILocation(line: 5594, column: 64, scope: !8851)
!8862 = !DILocation(line: 5590, column: 9, scope: !490)
!8863 = !DILocation(line: 5595, column: 9, scope: !8864)
!8864 = distinct !DILexicalBlock(scope: !8851, file: !3, line: 5594, column: 70)
!8865 = !DILocation(line: 5599, column: 5, scope: !490)
!8866 = !DILocation(line: 5601, column: 25, scope: !490)
!8867 = !DILocation(line: 5601, column: 31, scope: !490)
!8868 = !DILocation(line: 5601, column: 37, scope: !490)
!8869 = !DILocation(line: 5601, column: 13, scope: !490)
!8870 = !DILocation(line: 5599, column: 20, scope: !490)
!8871 = !DILocation(line: 5605, column: 15, scope: !490)
!8872 = !DILocation(line: 5606, column: 17, scope: !8873)
!8873 = distinct !DILexicalBlock(scope: !490, file: !3, line: 5605, column: 22)
!8874 = !DILocation(line: 5606, column: 9, scope: !8873)
!8875 = !DILocation(line: 5608, column: 23, scope: !8876)
!8876 = distinct !DILexicalBlock(scope: !8877, file: !3, line: 5608, column: 17)
!8877 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 5607, column: 19)
!8878 = distinct !DILexicalBlock(scope: !8873, file: !3, line: 5606, column: 25)
!8879 = !DILocation(line: 5608, column: 21, scope: !8876)
!8880 = !DILocation(line: 5608, column: 40, scope: !8876)
!8881 = !DILocation(line: 5608, column: 48, scope: !8876)
!8882 = !DILocation(line: 5609, column: 23, scope: !8876)
!8883 = !DILocation(line: 5609, column: 21, scope: !8876)
!8884 = !DILocation(line: 5609, column: 41, scope: !8876)
!8885 = !DILocation(line: 5608, column: 17, scope: !8877)
!8886 = !DILocation(line: 5610, column: 25, scope: !8887)
!8887 = distinct !DILexicalBlock(scope: !8876, file: !3, line: 5609, column: 50)
!8888 = !DILocation(line: 5610, column: 29, scope: !8887)
!8889 = !DILocation(line: 5610, column: 23, scope: !8887)
!8890 = !DILocation(line: 5611, column: 13, scope: !8887)
!8891 = !DILocation(line: 5612, column: 17, scope: !8892)
!8892 = distinct !DILexicalBlock(scope: !8876, file: !3, line: 5611, column: 20)
!8893 = !DILocation(line: 5614, column: 13, scope: !8877)
!8894 = !DILocation(line: 5617, column: 25, scope: !8895)
!8895 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 5616, column: 19)
!8896 = !DILocation(line: 5618, column: 13, scope: !8895)
!8897 = !DILocation(line: 5621, column: 25, scope: !8898)
!8898 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 5620, column: 19)
!8899 = !DILocation(line: 5622, column: 13, scope: !8898)
!8900 = !DILocation(line: 5625, column: 21, scope: !8901)
!8901 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 5624, column: 19)
!8902 = !DILocation(line: 5626, column: 13, scope: !8901)
!8903 = !DILocation(line: 5629, column: 21, scope: !8904)
!8904 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 5628, column: 19)
!8905 = !DILocation(line: 5630, column: 13, scope: !8904)
!8906 = !DILocalVariable(name: "struck", scope: !8907, file: !3, line: 5634, type: !308)
!8907 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 5633, column: 19)
!8908 = !DILocation(line: 5634, column: 19, scope: !8907)
!8909 = !DILocation(line: 5636, column: 34, scope: !8910)
!8910 = distinct !DILexicalBlock(scope: !8907, file: !3, line: 5636, column: 17)
!8911 = !DILocation(line: 5636, column: 27, scope: !8910)
!8912 = !DILocation(line: 5636, column: 25, scope: !8910)
!8913 = !DILocation(line: 5636, column: 48, scope: !8910)
!8914 = !DILocation(line: 5636, column: 17, scope: !8907)
!8915 = !DILocation(line: 5637, column: 18, scope: !8916)
!8916 = distinct !DILexicalBlock(scope: !8910, file: !3, line: 5636, column: 57)
!8917 = !DILocation(line: 5637, column: 25, scope: !8916)
!8918 = !DILocation(line: 5638, column: 22, scope: !8919)
!8919 = distinct !DILexicalBlock(scope: !8916, file: !3, line: 5638, column: 21)
!8920 = !DILocation(line: 5638, column: 21, scope: !8919)
!8921 = !DILocation(line: 5638, column: 29, scope: !8919)
!8922 = !DILocation(line: 5638, column: 21, scope: !8916)
!8923 = !DILocation(line: 5639, column: 25, scope: !8924)
!8924 = distinct !DILexicalBlock(scope: !8925, file: !3, line: 5639, column: 25)
!8925 = distinct !DILexicalBlock(scope: !8919, file: !3, line: 5638, column: 35)
!8926 = !DILocation(line: 5639, column: 39, scope: !8924)
!8927 = !DILocation(line: 5639, column: 47, scope: !8924)
!8928 = !DILocation(line: 5640, column: 49, scope: !8924)
!8929 = !DILocation(line: 5640, column: 42, scope: !8924)
!8930 = !DILocation(line: 5640, column: 40, scope: !8924)
!8931 = !DILocation(line: 5640, column: 58, scope: !8924)
!8932 = !DILocation(line: 5639, column: 25, scope: !8925)
!8933 = !DILocation(line: 5641, column: 25, scope: !8934)
!8934 = distinct !DILexicalBlock(scope: !8924, file: !3, line: 5640, column: 67)
!8935 = !DILocation(line: 5643, column: 17, scope: !8925)
!8936 = !DILocation(line: 5644, column: 18, scope: !8916)
!8937 = !DILocation(line: 5644, column: 25, scope: !8916)
!8938 = !DILocation(line: 5645, column: 21, scope: !8939)
!8939 = distinct !DILexicalBlock(scope: !8916, file: !3, line: 5645, column: 21)
!8940 = !DILocation(line: 5645, column: 31, scope: !8939)
!8941 = !DILocation(line: 5645, column: 21, scope: !8916)
!8942 = !DILocation(line: 5646, column: 51, scope: !8943)
!8943 = distinct !DILexicalBlock(scope: !8944, file: !3, line: 5646, column: 25)
!8944 = distinct !DILexicalBlock(scope: !8939, file: !3, line: 5645, column: 37)
!8945 = !DILocation(line: 5646, column: 58, scope: !8943)
!8946 = !DILocation(line: 5646, column: 44, scope: !8943)
!8947 = !DILocation(line: 5646, column: 42, scope: !8943)
!8948 = !DILocation(line: 5646, column: 64, scope: !8943)
!8949 = !DILocation(line: 5646, column: 25, scope: !8944)
!8950 = !DILocation(line: 5647, column: 25, scope: !8951)
!8951 = distinct !DILexicalBlock(scope: !8943, file: !3, line: 5646, column: 73)
!8952 = !DILocation(line: 5649, column: 17, scope: !8944)
!8953 = !DILocation(line: 5650, column: 13, scope: !8916)
!8954 = !DILocation(line: 5651, column: 47, scope: !8955)
!8955 = distinct !DILexicalBlock(scope: !8956, file: !3, line: 5651, column: 21)
!8956 = distinct !DILexicalBlock(scope: !8910, file: !3, line: 5650, column: 20)
!8957 = !DILocation(line: 5651, column: 40, scope: !8955)
!8958 = !DILocation(line: 5651, column: 38, scope: !8955)
!8959 = !DILocation(line: 5651, column: 56, scope: !8955)
!8960 = !DILocation(line: 5651, column: 21, scope: !8956)
!8961 = !DILocation(line: 5652, column: 21, scope: !8962)
!8962 = distinct !DILexicalBlock(scope: !8955, file: !3, line: 5651, column: 65)
!8963 = !DILocation(line: 5655, column: 13, scope: !8907)
!8964 = !DILocation(line: 5659, column: 24, scope: !8965)
!8965 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 5658, column: 19)
!8966 = !DILocation(line: 5660, column: 13, scope: !8965)
!8967 = !DILocalVariable(name: "nptr", scope: !8968, file: !3, line: 5708, type: !385)
!8968 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 5707, column: 19)
!8969 = !DILocation(line: 5708, column: 25, scope: !8968)
!8970 = !DILocalVariable(name: "endptr", scope: !8968, file: !3, line: 5709, type: !308)
!8971 = !DILocation(line: 5709, column: 19, scope: !8968)
!8972 = !DILocation(line: 5711, column: 20, scope: !8968)
!8973 = !DILocation(line: 5711, column: 18, scope: !8968)
!8974 = !DILocation(line: 5712, column: 20, scope: !8968)
!8975 = !DILocation(line: 5713, column: 41, scope: !8968)
!8976 = !DILocation(line: 5713, column: 33, scope: !8968)
!8977 = !DILocation(line: 5713, column: 31, scope: !8968)
!8978 = !DILocation(line: 5714, column: 18, scope: !8979)
!8979 = distinct !DILexicalBlock(scope: !8968, file: !3, line: 5714, column: 17)
!8980 = !DILocation(line: 5714, column: 23, scope: !8979)
!8981 = !DILocation(line: 5714, column: 28, scope: !8979)
!8982 = !DILocation(line: 5714, column: 27, scope: !8979)
!8983 = !DILocation(line: 5714, column: 33, scope: !8979)
!8984 = !DILocation(line: 5714, column: 37, scope: !8979)
!8985 = !DILocation(line: 5714, column: 44, scope: !8979)
!8986 = !DILocation(line: 5714, column: 48, scope: !8979)
!8987 = !DILocation(line: 5714, column: 47, scope: !8979)
!8988 = !DILocation(line: 5714, column: 17, scope: !8968)
!8989 = !DILocation(line: 5715, column: 86, scope: !8990)
!8990 = distinct !DILexicalBlock(scope: !8979, file: !3, line: 5714, column: 56)
!8991 = !DILocation(line: 5715, column: 17, scope: !8990)
!8992 = !DILocation(line: 5717, column: 24, scope: !8968)
!8993 = !DILocation(line: 5718, column: 13, scope: !8968)
!8994 = !DILocation(line: 5721, column: 26, scope: !8995)
!8995 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 5720, column: 19)
!8996 = !DILocation(line: 5722, column: 13, scope: !8995)
!8997 = !DILocation(line: 5725, column: 40, scope: !8998)
!8998 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 5724, column: 19)
!8999 = !DILocation(line: 5725, column: 26, scope: !8998)
!9000 = !DILocation(line: 5726, column: 13, scope: !8998)
!9001 = !DILocation(line: 5729, column: 30, scope: !9002)
!9002 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 5728, column: 19)
!9003 = !DILocation(line: 5730, column: 13, scope: !9002)
!9004 = !DILocation(line: 5733, column: 31, scope: !9005)
!9005 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 5732, column: 19)
!9006 = !DILocation(line: 5734, column: 13, scope: !9005)
!9007 = !DILocation(line: 5737, column: 24, scope: !9008)
!9008 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 5736, column: 19)
!9009 = !DILocation(line: 5738, column: 13, scope: !9008)
!9010 = !DILocation(line: 5741, column: 22, scope: !9011)
!9011 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 5740, column: 19)
!9012 = !DILocation(line: 5742, column: 13, scope: !9011)
!9013 = !DILocation(line: 5745, column: 22, scope: !9014)
!9014 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 5744, column: 19)
!9015 = !DILocation(line: 5746, column: 13, scope: !9014)
!9016 = !DILocation(line: 5749, column: 17, scope: !9017)
!9017 = distinct !DILexicalBlock(scope: !9018, file: !3, line: 5749, column: 17)
!9018 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 5748, column: 19)
!9019 = !DILocation(line: 5749, column: 25, scope: !9017)
!9020 = !DILocation(line: 5749, column: 17, scope: !9018)
!9021 = !DILocation(line: 5750, column: 24, scope: !9022)
!9022 = distinct !DILexicalBlock(scope: !9017, file: !3, line: 5749, column: 30)
!9023 = !DILocation(line: 5751, column: 13, scope: !9022)
!9024 = !DILocation(line: 5752, column: 13, scope: !9018)
!9025 = !DILocation(line: 5755, column: 34, scope: !9026)
!9026 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 5754, column: 19)
!9027 = !DILocation(line: 5756, column: 13, scope: !9026)
!9028 = !DILocalVariable(name: "nptr", scope: !9029, file: !3, line: 5759, type: !385)
!9029 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 5758, column: 19)
!9030 = !DILocation(line: 5759, column: 25, scope: !9029)
!9031 = !DILocalVariable(name: "endptr", scope: !9029, file: !3, line: 5760, type: !308)
!9032 = !DILocation(line: 5760, column: 19, scope: !9029)
!9033 = !DILocation(line: 5762, column: 20, scope: !9029)
!9034 = !DILocation(line: 5762, column: 18, scope: !9029)
!9035 = !DILocation(line: 5763, column: 20, scope: !9029)
!9036 = !DILocation(line: 5764, column: 47, scope: !9029)
!9037 = !DILocation(line: 5764, column: 39, scope: !9029)
!9038 = !DILocation(line: 5764, column: 24, scope: !9029)
!9039 = !DILocation(line: 5764, column: 22, scope: !9029)
!9040 = !DILocation(line: 5765, column: 18, scope: !9041)
!9041 = distinct !DILexicalBlock(scope: !9029, file: !3, line: 5765, column: 17)
!9042 = !DILocation(line: 5765, column: 23, scope: !9041)
!9043 = !DILocation(line: 5765, column: 28, scope: !9041)
!9044 = !DILocation(line: 5765, column: 27, scope: !9041)
!9045 = !DILocation(line: 5765, column: 33, scope: !9041)
!9046 = !DILocation(line: 5765, column: 37, scope: !9041)
!9047 = !DILocation(line: 5765, column: 44, scope: !9041)
!9048 = !DILocation(line: 5765, column: 48, scope: !9041)
!9049 = !DILocation(line: 5765, column: 47, scope: !9041)
!9050 = !DILocation(line: 5765, column: 55, scope: !9041)
!9051 = !DILocation(line: 5765, column: 59, scope: !9041)
!9052 = !DILocation(line: 5765, column: 17, scope: !9029)
!9053 = !DILocation(line: 5766, column: 85, scope: !9054)
!9054 = distinct !DILexicalBlock(scope: !9041, file: !3, line: 5765, column: 69)
!9055 = !DILocation(line: 5766, column: 17, scope: !9054)
!9056 = !DILocation(line: 5768, column: 13, scope: !9029)
!9057 = !DILocation(line: 5772, column: 23, scope: !9058)
!9058 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 5771, column: 19)
!9059 = !DILocation(line: 5773, column: 13, scope: !9058)
!9060 = !DILocalVariable(name: "nptr", scope: !9061, file: !3, line: 5776, type: !385)
!9061 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 5775, column: 19)
!9062 = !DILocation(line: 5776, column: 25, scope: !9061)
!9063 = !DILocalVariable(name: "endptr", scope: !9061, file: !3, line: 5777, type: !308)
!9064 = !DILocation(line: 5777, column: 19, scope: !9061)
!9065 = !DILocation(line: 5779, column: 20, scope: !9061)
!9066 = !DILocation(line: 5779, column: 18, scope: !9061)
!9067 = !DILocation(line: 5780, column: 20, scope: !9061)
!9068 = !DILocation(line: 5781, column: 44, scope: !9061)
!9069 = !DILocation(line: 5781, column: 36, scope: !9061)
!9070 = !DILocation(line: 5781, column: 21, scope: !9061)
!9071 = !DILocation(line: 5781, column: 19, scope: !9061)
!9072 = !DILocation(line: 5782, column: 18, scope: !9073)
!9073 = distinct !DILexicalBlock(scope: !9061, file: !3, line: 5782, column: 17)
!9074 = !DILocation(line: 5782, column: 23, scope: !9073)
!9075 = !DILocation(line: 5782, column: 28, scope: !9073)
!9076 = !DILocation(line: 5782, column: 27, scope: !9073)
!9077 = !DILocation(line: 5782, column: 33, scope: !9073)
!9078 = !DILocation(line: 5782, column: 37, scope: !9073)
!9079 = !DILocation(line: 5782, column: 44, scope: !9073)
!9080 = !DILocation(line: 5782, column: 48, scope: !9073)
!9081 = !DILocation(line: 5782, column: 47, scope: !9073)
!9082 = !DILocation(line: 5782, column: 55, scope: !9073)
!9083 = !DILocation(line: 5782, column: 59, scope: !9073)
!9084 = !DILocation(line: 5782, column: 17, scope: !9061)
!9085 = !DILocation(line: 5783, column: 85, scope: !9086)
!9086 = distinct !DILexicalBlock(scope: !9073, file: !3, line: 5782, column: 66)
!9087 = !DILocation(line: 5783, column: 17, scope: !9086)
!9088 = !DILocation(line: 5785, column: 13, scope: !9061)
!9089 = !DILocation(line: 5847, column: 23, scope: !9090)
!9090 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 5846, column: 19)
!9091 = !DILocation(line: 5848, column: 13, scope: !9090)
!9092 = !DILocation(line: 5851, column: 23, scope: !9093)
!9093 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 5850, column: 19)
!9094 = !DILocation(line: 5852, column: 13, scope: !9093)
!9095 = !DILocalVariable(name: "n", scope: !9096, file: !3, line: 5864, type: !326)
!9096 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 5863, column: 19)
!9097 = !DILocation(line: 5864, column: 17, scope: !9096)
!9098 = !DILocation(line: 5866, column: 28, scope: !9099)
!9099 = distinct !DILexicalBlock(scope: !9096, file: !3, line: 5866, column: 17)
!9100 = !DILocation(line: 5866, column: 17, scope: !9099)
!9101 = !DILocation(line: 5866, column: 44, scope: !9099)
!9102 = !DILocation(line: 5866, column: 17, scope: !9096)
!9103 = !DILocation(line: 5867, column: 27, scope: !9104)
!9104 = distinct !DILexicalBlock(scope: !9099, file: !3, line: 5866, column: 50)
!9105 = !DILocation(line: 5868, column: 17, scope: !9104)
!9106 = !DILocation(line: 5870, column: 13, scope: !9096)
!9107 = !DILocation(line: 5870, column: 34, scope: !9096)
!9108 = !DILocation(line: 5870, column: 20, scope: !9096)
!9109 = !DILocation(line: 5870, column: 37, scope: !9096)
!9110 = !DILocation(line: 5870, column: 44, scope: !9096)
!9111 = !DILocation(line: 5871, column: 45, scope: !9096)
!9112 = !DILocation(line: 5871, column: 31, scope: !9096)
!9113 = !DILocation(line: 5871, column: 48, scope: !9096)
!9114 = !DILocation(line: 5871, column: 56, scope: !9096)
!9115 = !DILocation(line: 5871, column: 20, scope: !9096)
!9116 = !DILocation(line: 5871, column: 64, scope: !9096)
!9117 = !DILocation(line: 0, scope: !9096)
!9118 = !DILocation(line: 5872, column: 18, scope: !9119)
!9119 = distinct !DILexicalBlock(scope: !9096, file: !3, line: 5871, column: 70)
!9120 = distinct !{!9120, !9106, !9121}
!9121 = !DILocation(line: 5873, column: 13, scope: !9096)
!9122 = !DILocation(line: 5874, column: 31, scope: !9123)
!9123 = distinct !DILexicalBlock(scope: !9096, file: !3, line: 5874, column: 17)
!9124 = !DILocation(line: 5874, column: 17, scope: !9123)
!9125 = !DILocation(line: 5874, column: 34, scope: !9123)
!9126 = !DILocation(line: 5874, column: 17, scope: !9096)
!9127 = !DILocation(line: 5875, column: 49, scope: !9128)
!9128 = distinct !DILexicalBlock(scope: !9123, file: !3, line: 5874, column: 42)
!9129 = !DILocation(line: 5875, column: 35, scope: !9128)
!9130 = !DILocation(line: 5875, column: 52, scope: !9128)
!9131 = !DILocation(line: 5875, column: 33, scope: !9128)
!9132 = !DILocation(line: 5876, column: 13, scope: !9128)
!9133 = !DILocation(line: 5878, column: 72, scope: !9134)
!9134 = distinct !DILexicalBlock(scope: !9123, file: !3, line: 5876, column: 20)
!9135 = !DILocation(line: 5877, column: 17, scope: !9134)
!9136 = !DILocation(line: 5880, column: 13, scope: !9096)
!9137 = !DILocalVariable(name: "auth_list_pnt", scope: !9138, file: !3, line: 5883, type: !519)
!9138 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 5882, column: 19)
!9139 = !DILocation(line: 5883, column: 35, scope: !9138)
!9140 = !DILocalVariable(name: "opt", scope: !9138, file: !3, line: 5884, type: !385)
!9141 = !DILocation(line: 5884, column: 25, scope: !9138)
!9142 = !DILocation(line: 5884, column: 31, scope: !9138)
!9143 = !DILocalVariable(name: "new_auth", scope: !9138, file: !3, line: 5885, type: !514)
!9144 = !DILocation(line: 5885, column: 30, scope: !9138)
!9145 = !DILocalVariable(name: "auth_name_len", scope: !9138, file: !3, line: 5886, type: !304)
!9146 = !DILocation(line: 5886, column: 20, scope: !9138)
!9147 = !DILocation(line: 5888, column: 13, scope: !9138)
!9148 = !DILocation(line: 5889, column: 40, scope: !9149)
!9149 = distinct !DILexicalBlock(scope: !9150, file: !3, line: 5888, column: 22)
!9150 = distinct !DILexicalBlock(scope: !9151, file: !3, line: 5888, column: 13)
!9151 = distinct !DILexicalBlock(scope: !9138, file: !3, line: 5888, column: 13)
!9152 = !DILocation(line: 5889, column: 55, scope: !9149)
!9153 = !DILocation(line: 5889, column: 33, scope: !9149)
!9154 = !DILocation(line: 5889, column: 31, scope: !9149)
!9155 = !DILocation(line: 5890, column: 33, scope: !9156)
!9156 = distinct !DILexicalBlock(scope: !9149, file: !3, line: 5890, column: 21)
!9157 = !DILocation(line: 5890, column: 38, scope: !9156)
!9158 = !DILocation(line: 5890, column: 53, scope: !9156)
!9159 = !DILocation(line: 5891, column: 33, scope: !9156)
!9160 = !DILocation(line: 5890, column: 21, scope: !9156)
!9161 = !DILocation(line: 5891, column: 48, scope: !9156)
!9162 = !DILocation(line: 5890, column: 21, scope: !9149)
!9163 = !DILocalVariable(name: "file", scope: !9164, file: !3, line: 5892, type: !308)
!9164 = distinct !DILexicalBlock(scope: !9156, file: !3, line: 5891, column: 54)
!9165 = !DILocation(line: 5892, column: 27, scope: !9164)
!9166 = !DILocation(line: 5894, column: 28, scope: !9164)
!9167 = !DILocation(line: 5894, column: 25, scope: !9164)
!9168 = !DILocation(line: 5895, column: 26, scope: !9169)
!9169 = distinct !DILexicalBlock(scope: !9164, file: !3, line: 5895, column: 25)
!9170 = !DILocation(line: 5895, column: 25, scope: !9169)
!9171 = !DILocation(line: 5895, column: 30, scope: !9169)
!9172 = !DILocation(line: 5895, column: 25, scope: !9164)
!9173 = !DILocation(line: 5896, column: 28, scope: !9174)
!9174 = distinct !DILexicalBlock(scope: !9169, file: !3, line: 5895, column: 38)
!9175 = !DILocation(line: 5897, column: 30, scope: !9176)
!9176 = distinct !DILexicalBlock(scope: !9174, file: !3, line: 5897, column: 29)
!9177 = !DILocation(line: 5897, column: 29, scope: !9176)
!9178 = !DILocation(line: 5897, column: 34, scope: !9176)
!9179 = !DILocation(line: 5897, column: 29, scope: !9174)
!9180 = !DILocation(line: 5898, column: 48, scope: !9181)
!9181 = distinct !DILexicalBlock(scope: !9182, file: !3, line: 5898, column: 33)
!9182 = distinct !DILexicalBlock(scope: !9176, file: !3, line: 5897, column: 40)
!9183 = !DILocation(line: 5898, column: 41, scope: !9181)
!9184 = !DILocation(line: 5898, column: 39, scope: !9181)
!9185 = !DILocation(line: 5898, column: 54, scope: !9181)
!9186 = !DILocation(line: 5898, column: 33, scope: !9182)
!9187 = !DILocation(line: 5899, column: 33, scope: !9188)
!9188 = distinct !DILexicalBlock(scope: !9181, file: !3, line: 5898, column: 63)
!9189 = !DILocation(line: 5901, column: 25, scope: !9182)
!9190 = !DILocation(line: 5902, column: 21, scope: !9174)
!9191 = !DILocation(line: 5903, column: 25, scope: !9192)
!9192 = distinct !DILexicalBlock(scope: !9164, file: !3, line: 5903, column: 25)
!9193 = !DILocation(line: 5903, column: 40, scope: !9192)
!9194 = !DILocation(line: 5903, column: 46, scope: !9192)
!9195 = !DILocation(line: 5903, column: 25, scope: !9164)
!9196 = !DILocation(line: 5904, column: 25, scope: !9197)
!9197 = distinct !DILexicalBlock(scope: !9192, file: !3, line: 5903, column: 55)
!9198 = !DILocation(line: 5904, column: 40, scope: !9197)
!9199 = !DILocation(line: 5904, column: 46, scope: !9197)
!9200 = !DILocation(line: 5905, column: 21, scope: !9197)
!9201 = !DILocation(line: 5906, column: 37, scope: !9202)
!9202 = distinct !DILexicalBlock(scope: !9164, file: !3, line: 5906, column: 25)
!9203 = !DILocation(line: 5906, column: 35, scope: !9202)
!9204 = !DILocation(line: 5906, column: 63, scope: !9202)
!9205 = !DILocation(line: 5906, column: 25, scope: !9164)
!9206 = !DILocation(line: 5907, column: 25, scope: !9207)
!9207 = distinct !DILexicalBlock(scope: !9202, file: !3, line: 5906, column: 72)
!9208 = !DILocation(line: 5909, column: 38, scope: !9164)
!9209 = !DILocation(line: 5909, column: 21, scope: !9164)
!9210 = !DILocation(line: 5909, column: 31, scope: !9164)
!9211 = !DILocation(line: 5909, column: 36, scope: !9164)
!9212 = !DILocation(line: 5910, column: 43, scope: !9164)
!9213 = !DILocation(line: 5910, column: 21, scope: !9164)
!9214 = !DILocation(line: 5910, column: 31, scope: !9164)
!9215 = !DILocation(line: 5910, column: 41, scope: !9164)
!9216 = !DILocation(line: 5911, column: 21, scope: !9164)
!9217 = !DILocation(line: 5911, column: 31, scope: !9164)
!9218 = !DILocation(line: 5911, column: 36, scope: !9164)
!9219 = !DILocation(line: 5912, column: 25, scope: !9220)
!9220 = distinct !DILexicalBlock(scope: !9164, file: !3, line: 5912, column: 25)
!9221 = !DILocation(line: 5912, column: 46, scope: !9220)
!9222 = !DILocation(line: 5912, column: 25, scope: !9164)
!9223 = !DILocation(line: 5913, column: 49, scope: !9224)
!9224 = distinct !DILexicalBlock(scope: !9220, file: !3, line: 5912, column: 55)
!9225 = !DILocation(line: 5913, column: 47, scope: !9224)
!9226 = !DILocation(line: 5914, column: 21, scope: !9224)
!9227 = !DILocation(line: 5915, column: 54, scope: !9228)
!9228 = distinct !DILexicalBlock(scope: !9220, file: !3, line: 5914, column: 28)
!9229 = !DILocation(line: 5915, column: 25, scope: !9228)
!9230 = !DILocation(line: 5915, column: 47, scope: !9228)
!9231 = !DILocation(line: 5915, column: 52, scope: !9228)
!9232 = !DILocation(line: 5917, column: 44, scope: !9164)
!9233 = !DILocation(line: 5917, column: 42, scope: !9164)
!9234 = !DILocation(line: 5919, column: 21, scope: !9164)
!9235 = !DILocation(line: 5921, column: 30, scope: !9149)
!9236 = !DILocation(line: 5922, column: 21, scope: !9237)
!9237 = distinct !DILexicalBlock(scope: !9149, file: !3, line: 5922, column: 21)
!9238 = !DILocation(line: 5922, column: 36, scope: !9237)
!9239 = !DILocation(line: 5922, column: 41, scope: !9237)
!9240 = !DILocation(line: 5922, column: 21, scope: !9149)
!9241 = !DILocation(line: 5923, column: 64, scope: !9242)
!9242 = distinct !DILexicalBlock(scope: !9237, file: !3, line: 5922, column: 50)
!9243 = !DILocation(line: 5923, column: 21, scope: !9242)
!9244 = !DILocation(line: 5888, column: 13, scope: !9150)
!9245 = distinct !{!9245, !9246, !9247}
!9246 = !DILocation(line: 5888, column: 13, scope: !9151)
!9247 = !DILocation(line: 5925, column: 13, scope: !9151)
!9248 = !DILocation(line: 5927, column: 13, scope: !9138)
!9249 = !DILocalVariable(name: "nptr", scope: !9250, file: !3, line: 5930, type: !385)
!9250 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 5929, column: 19)
!9251 = !DILocation(line: 5930, column: 25, scope: !9250)
!9252 = !DILocalVariable(name: "endptr", scope: !9250, file: !3, line: 5931, type: !308)
!9253 = !DILocation(line: 5931, column: 19, scope: !9250)
!9254 = !DILocation(line: 5933, column: 20, scope: !9250)
!9255 = !DILocation(line: 5933, column: 18, scope: !9250)
!9256 = !DILocation(line: 5934, column: 20, scope: !9250)
!9257 = !DILocation(line: 5935, column: 30, scope: !9250)
!9258 = !DILocation(line: 5935, column: 23, scope: !9250)
!9259 = !DILocation(line: 5935, column: 21, scope: !9250)
!9260 = !DILocation(line: 5936, column: 18, scope: !9261)
!9261 = distinct !DILexicalBlock(scope: !9250, file: !3, line: 5936, column: 17)
!9262 = !DILocation(line: 5936, column: 23, scope: !9261)
!9263 = !DILocation(line: 5936, column: 28, scope: !9261)
!9264 = !DILocation(line: 5936, column: 27, scope: !9261)
!9265 = !DILocation(line: 5936, column: 33, scope: !9261)
!9266 = !DILocation(line: 5936, column: 37, scope: !9261)
!9267 = !DILocation(line: 5936, column: 44, scope: !9261)
!9268 = !DILocation(line: 5936, column: 48, scope: !9261)
!9269 = !DILocation(line: 5936, column: 47, scope: !9261)
!9270 = !DILocation(line: 5936, column: 55, scope: !9261)
!9271 = !DILocation(line: 5936, column: 58, scope: !9261)
!9272 = !DILocation(line: 5936, column: 66, scope: !9261)
!9273 = !DILocation(line: 5936, column: 17, scope: !9250)
!9274 = !DILocation(line: 5938, column: 53, scope: !9275)
!9275 = distinct !DILexicalBlock(scope: !9261, file: !3, line: 5936, column: 74)
!9276 = !DILocation(line: 5937, column: 17, scope: !9275)
!9277 = !DILocation(line: 5940, column: 13, scope: !9250)
!9278 = !DILocation(line: 5943, column: 30, scope: !9279)
!9279 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 5942, column: 19)
!9280 = !DILocation(line: 5944, column: 13, scope: !9279)
!9281 = !DILocation(line: 5947, column: 30, scope: !9282)
!9282 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 5946, column: 19)
!9283 = !DILocation(line: 5948, column: 13, scope: !9282)
!9284 = !DILocalVariable(name: "ret", scope: !9285, file: !3, line: 5999, type: !326)
!9285 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 5998, column: 19)
!9286 = !DILocation(line: 5999, column: 17, scope: !9285)
!9287 = !DILocation(line: 6001, column: 26, scope: !9285)
!9288 = !DILocation(line: 6001, column: 19, scope: !9285)
!9289 = !DILocation(line: 6001, column: 17, scope: !9285)
!9290 = !DILocation(line: 6002, column: 17, scope: !9291)
!9291 = distinct !DILexicalBlock(scope: !9285, file: !3, line: 6002, column: 17)
!9292 = !DILocation(line: 6002, column: 21, scope: !9291)
!9293 = !DILocation(line: 6002, column: 26, scope: !9291)
!9294 = !DILocation(line: 6003, column: 17, scope: !9291)
!9295 = !DILocation(line: 6003, column: 27, scope: !9291)
!9296 = !DILocation(line: 6003, column: 35, scope: !9291)
!9297 = !DILocation(line: 6003, column: 38, scope: !9291)
!9298 = !DILocation(line: 6003, column: 47, scope: !9291)
!9299 = !DILocation(line: 6004, column: 17, scope: !9291)
!9300 = !DILocation(line: 6004, column: 20, scope: !9291)
!9301 = !DILocation(line: 6004, column: 31, scope: !9291)
!9302 = !DILocation(line: 6004, column: 29, scope: !9291)
!9303 = !DILocation(line: 6002, column: 17, scope: !9285)
!9304 = !DILocation(line: 6005, column: 86, scope: !9305)
!9305 = distinct !DILexicalBlock(scope: !9291, file: !3, line: 6004, column: 42)
!9306 = !DILocation(line: 6005, column: 17, scope: !9305)
!9307 = !DILocation(line: 6007, column: 13, scope: !9285)
!9308 = !DILocalVariable(name: "ret", scope: !9309, file: !3, line: 6010, type: !326)
!9309 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 6009, column: 19)
!9310 = !DILocation(line: 6010, column: 17, scope: !9309)
!9311 = !DILocation(line: 6012, column: 26, scope: !9309)
!9312 = !DILocation(line: 6012, column: 19, scope: !9309)
!9313 = !DILocation(line: 6012, column: 17, scope: !9309)
!9314 = !DILocation(line: 6013, column: 17, scope: !9315)
!9315 = distinct !DILexicalBlock(scope: !9309, file: !3, line: 6013, column: 17)
!9316 = !DILocation(line: 6013, column: 21, scope: !9315)
!9317 = !DILocation(line: 6013, column: 26, scope: !9315)
!9318 = !DILocation(line: 6014, column: 17, scope: !9315)
!9319 = !DILocation(line: 6014, column: 30, scope: !9315)
!9320 = !DILocation(line: 6014, column: 35, scope: !9315)
!9321 = !DILocation(line: 6014, column: 38, scope: !9315)
!9322 = !DILocation(line: 6014, column: 51, scope: !9315)
!9323 = !DILocation(line: 6013, column: 17, scope: !9309)
!9324 = !DILocation(line: 6015, column: 84, scope: !9325)
!9325 = distinct !DILexicalBlock(scope: !9315, file: !3, line: 6014, column: 57)
!9326 = !DILocation(line: 6015, column: 17, scope: !9325)
!9327 = !DILocation(line: 6017, column: 13, scope: !9309)
!9328 = !DILocation(line: 6033, column: 17, scope: !9329)
!9329 = distinct !DILexicalBlock(scope: !9330, file: !3, line: 6033, column: 17)
!9330 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 6032, column: 19)
!9331 = !DILocation(line: 6033, column: 36, scope: !9329)
!9332 = !DILocation(line: 6033, column: 44, scope: !9329)
!9333 = !DILocation(line: 6034, column: 46, scope: !9329)
!9334 = !DILocation(line: 6034, column: 39, scope: !9329)
!9335 = !DILocation(line: 6034, column: 37, scope: !9329)
!9336 = !DILocation(line: 6034, column: 55, scope: !9329)
!9337 = !DILocation(line: 6033, column: 17, scope: !9330)
!9338 = !DILocation(line: 6035, column: 17, scope: !9339)
!9339 = distinct !DILexicalBlock(scope: !9329, file: !3, line: 6034, column: 64)
!9340 = !DILocation(line: 6037, column: 13, scope: !9330)
!9341 = !DILocation(line: 6056, column: 24, scope: !9342)
!9342 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 6055, column: 19)
!9343 = !DILocation(line: 6057, column: 13, scope: !9342)
!9344 = !DILocation(line: 6060, column: 21, scope: !9345)
!9345 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 6059, column: 19)
!9346 = !DILocation(line: 6061, column: 13, scope: !9345)
!9347 = !DILocation(line: 6064, column: 26, scope: !9348)
!9348 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 6063, column: 19)
!9349 = !DILocation(line: 6065, column: 13, scope: !9348)
!9350 = !DILocation(line: 6069, column: 36, scope: !9351)
!9351 = distinct !DILexicalBlock(scope: !9352, file: !3, line: 6069, column: 17)
!9352 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 6068, column: 19)
!9353 = !DILocation(line: 6069, column: 29, scope: !9351)
!9354 = !DILocation(line: 6069, column: 27, scope: !9351)
!9355 = !DILocation(line: 6069, column: 45, scope: !9351)
!9356 = !DILocation(line: 6069, column: 17, scope: !9352)
!9357 = !DILocation(line: 6070, column: 17, scope: !9358)
!9358 = distinct !DILexicalBlock(scope: !9351, file: !3, line: 6069, column: 54)
!9359 = !DILocation(line: 6072, column: 13, scope: !9352)
!9360 = !DILocation(line: 6076, column: 29, scope: !9361)
!9361 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 6075, column: 19)
!9362 = !DILocation(line: 6077, column: 13, scope: !9361)
!9363 = !DILocation(line: 6080, column: 31, scope: !9364)
!9364 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 6079, column: 19)
!9365 = !DILocation(line: 6081, column: 13, scope: !9364)
!9366 = !DILocalVariable(name: "nptr", scope: !9367, file: !3, line: 6084, type: !385)
!9367 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 6083, column: 19)
!9368 = !DILocation(line: 6084, column: 25, scope: !9367)
!9369 = !DILocalVariable(name: "endptr", scope: !9367, file: !3, line: 6085, type: !308)
!9370 = !DILocation(line: 6085, column: 19, scope: !9367)
!9371 = !DILocation(line: 6087, column: 20, scope: !9367)
!9372 = !DILocation(line: 6087, column: 18, scope: !9367)
!9373 = !DILocation(line: 6088, column: 20, scope: !9367)
!9374 = !DILocation(line: 6089, column: 32, scope: !9367)
!9375 = !DILocation(line: 6089, column: 24, scope: !9367)
!9376 = !DILocation(line: 6089, column: 50, scope: !9367)
!9377 = !DILocation(line: 6089, column: 22, scope: !9367)
!9378 = !DILocation(line: 6090, column: 17, scope: !9379)
!9379 = distinct !DILexicalBlock(scope: !9367, file: !3, line: 6090, column: 17)
!9380 = !DILocation(line: 6090, column: 26, scope: !9379)
!9381 = !DILocation(line: 6090, column: 17, scope: !9367)
!9382 = !DILocation(line: 6091, column: 26, scope: !9383)
!9383 = distinct !DILexicalBlock(scope: !9379, file: !3, line: 6090, column: 32)
!9384 = !DILocation(line: 6092, column: 13, scope: !9383)
!9385 = !DILocation(line: 6093, column: 13, scope: !9367)
!9386 = !DILocation(line: 6096, column: 27, scope: !9387)
!9387 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 6095, column: 19)
!9388 = !DILocation(line: 6097, column: 13, scope: !9387)
!9389 = !DILocation(line: 6100, column: 25, scope: !9390)
!9390 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 6099, column: 19)
!9391 = !DILocation(line: 6101, column: 13, scope: !9390)
!9392 = !DILocalVariable(name: "nptr", scope: !9393, file: !3, line: 6104, type: !385)
!9393 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 6103, column: 19)
!9394 = !DILocation(line: 6104, column: 25, scope: !9393)
!9395 = !DILocalVariable(name: "endptr", scope: !9393, file: !3, line: 6105, type: !308)
!9396 = !DILocation(line: 6105, column: 19, scope: !9393)
!9397 = !DILocation(line: 6107, column: 20, scope: !9393)
!9398 = !DILocation(line: 6107, column: 18, scope: !9393)
!9399 = !DILocation(line: 6108, column: 20, scope: !9393)
!9400 = !DILocation(line: 6109, column: 45, scope: !9393)
!9401 = !DILocation(line: 6109, column: 38, scope: !9393)
!9402 = !DILocation(line: 6109, column: 60, scope: !9393)
!9403 = !DILocation(line: 6109, column: 35, scope: !9393)
!9404 = !DILocation(line: 6109, column: 29, scope: !9393)
!9405 = !DILocation(line: 6110, column: 17, scope: !9406)
!9406 = distinct !DILexicalBlock(scope: !9393, file: !3, line: 6110, column: 17)
!9407 = !DILocation(line: 6110, column: 33, scope: !9406)
!9408 = !DILocation(line: 6110, column: 40, scope: !9406)
!9409 = !DILocation(line: 6110, column: 43, scope: !9406)
!9410 = !DILocation(line: 6110, column: 59, scope: !9406)
!9411 = !DILocation(line: 6110, column: 17, scope: !9393)
!9412 = !DILocation(line: 6111, column: 33, scope: !9413)
!9413 = distinct !DILexicalBlock(scope: !9406, file: !3, line: 6110, column: 66)
!9414 = !DILocation(line: 6112, column: 13, scope: !9413)
!9415 = !DILocation(line: 6113, column: 13, scope: !9393)
!9416 = !DILocalVariable(name: "nptr", scope: !9417, file: !3, line: 6116, type: !385)
!9417 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 6115, column: 19)
!9418 = !DILocation(line: 6116, column: 25, scope: !9417)
!9419 = !DILocalVariable(name: "endptr", scope: !9417, file: !3, line: 6117, type: !308)
!9420 = !DILocation(line: 6117, column: 19, scope: !9417)
!9421 = !DILocalVariable(name: "tmp", scope: !9417, file: !3, line: 6118, type: !334)
!9422 = !DILocation(line: 6118, column: 18, scope: !9417)
!9423 = !DILocation(line: 6120, column: 20, scope: !9417)
!9424 = !DILocation(line: 6120, column: 18, scope: !9417)
!9425 = !DILocation(line: 6121, column: 20, scope: !9417)
!9426 = !DILocation(line: 6122, column: 26, scope: !9417)
!9427 = !DILocation(line: 6122, column: 19, scope: !9417)
!9428 = !DILocation(line: 6122, column: 17, scope: !9417)
!9429 = !DILocation(line: 6123, column: 18, scope: !9430)
!9430 = distinct !DILexicalBlock(scope: !9417, file: !3, line: 6123, column: 17)
!9431 = !DILocation(line: 6123, column: 23, scope: !9430)
!9432 = !DILocation(line: 6123, column: 28, scope: !9430)
!9433 = !DILocation(line: 6123, column: 27, scope: !9430)
!9434 = !DILocation(line: 6123, column: 33, scope: !9430)
!9435 = !DILocation(line: 6123, column: 37, scope: !9430)
!9436 = !DILocation(line: 6123, column: 44, scope: !9430)
!9437 = !DILocation(line: 6123, column: 48, scope: !9430)
!9438 = !DILocation(line: 6123, column: 47, scope: !9430)
!9439 = !DILocation(line: 6123, column: 55, scope: !9430)
!9440 = !DILocation(line: 6123, column: 58, scope: !9430)
!9441 = !DILocation(line: 6123, column: 62, scope: !9430)
!9442 = !DILocation(line: 6123, column: 17, scope: !9417)
!9443 = !DILocation(line: 6124, column: 84, scope: !9444)
!9444 = distinct !DILexicalBlock(scope: !9430, file: !3, line: 6123, column: 67)
!9445 = !DILocation(line: 6124, column: 17, scope: !9444)
!9446 = !DILocation(line: 6126, column: 31, scope: !9417)
!9447 = !DILocation(line: 6126, column: 23, scope: !9417)
!9448 = !DILocation(line: 6126, column: 21, scope: !9417)
!9449 = !DILocation(line: 6127, column: 13, scope: !9417)
!9450 = !DILocalVariable(name: "optarg_copy", scope: !9451, file: !3, line: 6130, type: !308)
!9451 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 6129, column: 19)
!9452 = !DILocation(line: 6130, column: 19, scope: !9451)
!9453 = !DILocalVariable(name: "struck", scope: !9451, file: !3, line: 6131, type: !308)
!9454 = !DILocation(line: 6131, column: 19, scope: !9451)
!9455 = !DILocalVariable(name: "tr_umask", scope: !9451, file: !3, line: 6132, type: !385)
!9456 = !DILocation(line: 6132, column: 25, scope: !9451)
!9457 = !DILocalVariable(name: "tr_umask_d", scope: !9451, file: !3, line: 6133, type: !385)
!9458 = !DILocation(line: 6133, column: 25, scope: !9451)
!9459 = !DILocation(line: 6135, column: 39, scope: !9460)
!9460 = distinct !DILexicalBlock(scope: !9451, file: !3, line: 6135, column: 17)
!9461 = !DILocation(line: 6135, column: 32, scope: !9460)
!9462 = !DILocation(line: 6135, column: 30, scope: !9460)
!9463 = !DILocation(line: 6135, column: 48, scope: !9460)
!9464 = !DILocation(line: 6135, column: 17, scope: !9451)
!9465 = !DILocation(line: 6136, column: 17, scope: !9466)
!9466 = distinct !DILexicalBlock(scope: !9460, file: !3, line: 6135, column: 57)
!9467 = !DILocation(line: 6138, column: 34, scope: !9468)
!9468 = distinct !DILexicalBlock(scope: !9451, file: !3, line: 6138, column: 17)
!9469 = !DILocation(line: 6138, column: 27, scope: !9468)
!9470 = !DILocation(line: 6138, column: 25, scope: !9468)
!9471 = !DILocation(line: 6138, column: 53, scope: !9468)
!9472 = !DILocation(line: 6138, column: 17, scope: !9451)
!9473 = !DILocation(line: 6139, column: 18, scope: !9474)
!9474 = distinct !DILexicalBlock(scope: !9468, file: !3, line: 6138, column: 62)
!9475 = !DILocation(line: 6139, column: 25, scope: !9474)
!9476 = !DILocation(line: 6140, column: 22, scope: !9477)
!9477 = distinct !DILexicalBlock(scope: !9474, file: !3, line: 6140, column: 21)
!9478 = !DILocation(line: 6140, column: 21, scope: !9477)
!9479 = !DILocation(line: 6140, column: 34, scope: !9477)
!9480 = !DILocation(line: 6140, column: 21, scope: !9474)
!9481 = !DILocation(line: 6141, column: 32, scope: !9482)
!9482 = distinct !DILexicalBlock(scope: !9477, file: !3, line: 6140, column: 40)
!9483 = !DILocation(line: 6141, column: 30, scope: !9482)
!9484 = !DILocation(line: 6142, column: 17, scope: !9482)
!9485 = !DILocation(line: 6143, column: 21, scope: !9486)
!9486 = distinct !DILexicalBlock(scope: !9474, file: !3, line: 6143, column: 21)
!9487 = !DILocation(line: 6143, column: 31, scope: !9486)
!9488 = !DILocation(line: 6143, column: 21, scope: !9474)
!9489 = !DILocation(line: 6144, column: 35, scope: !9490)
!9490 = distinct !DILexicalBlock(scope: !9486, file: !3, line: 6143, column: 37)
!9491 = !DILocation(line: 6144, column: 32, scope: !9490)
!9492 = !DILocation(line: 6145, column: 17, scope: !9490)
!9493 = !DILocation(line: 6146, column: 13, scope: !9474)
!9494 = !DILocation(line: 6147, column: 41, scope: !9495)
!9495 = distinct !DILexicalBlock(scope: !9468, file: !3, line: 6146, column: 20)
!9496 = !DILocation(line: 6147, column: 39, scope: !9495)
!9497 = !DILocation(line: 6147, column: 26, scope: !9495)
!9498 = !DILocation(line: 6149, column: 18, scope: !9499)
!9499 = distinct !DILexicalBlock(scope: !9451, file: !3, line: 6149, column: 17)
!9500 = !DILocation(line: 6149, column: 27, scope: !9499)
!9501 = !DILocation(line: 6149, column: 35, scope: !9499)
!9502 = !DILocation(line: 6149, column: 39, scope: !9499)
!9503 = !DILocation(line: 6149, column: 38, scope: !9499)
!9504 = !DILocation(line: 6149, column: 48, scope: !9499)
!9505 = !DILocation(line: 6149, column: 54, scope: !9499)
!9506 = !DILocation(line: 6150, column: 18, scope: !9499)
!9507 = !DILocation(line: 6150, column: 29, scope: !9499)
!9508 = !DILocation(line: 6150, column: 37, scope: !9499)
!9509 = !DILocation(line: 6150, column: 41, scope: !9499)
!9510 = !DILocation(line: 6150, column: 40, scope: !9499)
!9511 = !DILocation(line: 6150, column: 52, scope: !9499)
!9512 = !DILocation(line: 6149, column: 17, scope: !9451)
!9513 = !DILocation(line: 6150, column: 59, scope: !9499)
!9514 = !DILabel(scope: !9515, name: "bad_umask", file: !3, line: 6151)
!9515 = distinct !DILexicalBlock(scope: !9499, file: !3, line: 6150, column: 59)
!9516 = !DILocation(line: 6151, column: 17, scope: !9515)
!9517 = !DILocation(line: 6153, column: 21, scope: !9515)
!9518 = !DILocation(line: 6152, column: 17, scope: !9515)
!9519 = !DILocation(line: 6155, column: 17, scope: !9520)
!9520 = distinct !DILexicalBlock(scope: !9451, file: !3, line: 6155, column: 17)
!9521 = !DILocation(line: 6155, column: 26, scope: !9520)
!9522 = !DILocation(line: 6155, column: 17, scope: !9451)
!9523 = !DILocation(line: 6157, column: 30, scope: !9524)
!9524 = distinct !DILexicalBlock(scope: !9525, file: !3, line: 6156, column: 21)
!9525 = distinct !DILexicalBlock(scope: !9520, file: !3, line: 6155, column: 35)
!9526 = !DILocation(line: 6157, column: 22, scope: !9524)
!9527 = !DILocation(line: 6156, column: 29, scope: !9524)
!9528 = !DILocation(line: 6157, column: 50, scope: !9524)
!9529 = !DILocation(line: 6156, column: 21, scope: !9525)
!9530 = !DILocation(line: 6158, column: 21, scope: !9531)
!9531 = distinct !DILexicalBlock(scope: !9524, file: !3, line: 6157, column: 58)
!9532 = !DILocation(line: 6160, column: 13, scope: !9525)
!9533 = !DILocation(line: 6161, column: 17, scope: !9534)
!9534 = distinct !DILexicalBlock(scope: !9451, file: !3, line: 6161, column: 17)
!9535 = !DILocation(line: 6161, column: 28, scope: !9534)
!9536 = !DILocation(line: 6161, column: 17, scope: !9451)
!9537 = !DILocation(line: 6163, column: 30, scope: !9538)
!9538 = distinct !DILexicalBlock(scope: !9539, file: !3, line: 6162, column: 21)
!9539 = distinct !DILexicalBlock(scope: !9534, file: !3, line: 6161, column: 37)
!9540 = !DILocation(line: 6163, column: 22, scope: !9538)
!9541 = !DILocation(line: 6162, column: 31, scope: !9538)
!9542 = !DILocation(line: 6163, column: 52, scope: !9538)
!9543 = !DILocation(line: 6162, column: 21, scope: !9539)
!9544 = !DILocation(line: 6164, column: 21, scope: !9545)
!9545 = distinct !DILexicalBlock(scope: !9538, file: !3, line: 6163, column: 60)
!9546 = !DILocation(line: 6166, column: 13, scope: !9539)
!9547 = !DILocation(line: 6167, column: 25, scope: !9451)
!9548 = !DILocation(line: 6167, column: 20, scope: !9451)
!9549 = !DILocation(line: 6168, column: 13, scope: !9451)
!9550 = !DILocation(line: 6196, column: 17, scope: !9551)
!9551 = distinct !DILexicalBlock(scope: !9552, file: !3, line: 6196, column: 17)
!9552 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 6194, column: 19)
!9553 = !DILocation(line: 6196, column: 27, scope: !9551)
!9554 = !DILocation(line: 6196, column: 17, scope: !9552)
!9555 = !DILocation(line: 6199, column: 17, scope: !9556)
!9556 = distinct !DILexicalBlock(scope: !9551, file: !3, line: 6198, column: 13)
!9557 = !DILocation(line: 6200, column: 13, scope: !9556)
!9558 = !DILocalVariable(name: "options", scope: !9559, file: !3, line: 6203, type: !9560)
!9559 = distinct !DILexicalBlock(scope: !9552, file: !3, line: 6202, column: 13)
!9560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9561, size: 64)
!9561 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !783)
!9562 = !DILocation(line: 6203, column: 38, scope: !9559)
!9563 = !DILocation(line: 6205, column: 17, scope: !9559)
!9564 = !DILocation(line: 6206, column: 47, scope: !9565)
!9565 = distinct !DILexicalBlock(scope: !9559, file: !3, line: 6205, column: 20)
!9566 = !DILocation(line: 6206, column: 56, scope: !9565)
!9567 = !DILocation(line: 6206, column: 61, scope: !9565)
!9568 = !DILocation(line: 6206, column: 70, scope: !9565)
!9569 = !DILocation(line: 6207, column: 28, scope: !9565)
!9570 = !DILocation(line: 6207, column: 37, scope: !9565)
!9571 = !DILocation(line: 6206, column: 21, scope: !9565)
!9572 = !DILocation(line: 6208, column: 28, scope: !9565)
!9573 = !DILocation(line: 6209, column: 17, scope: !9565)
!9574 = !DILocation(line: 6209, column: 26, scope: !9559)
!9575 = !DILocation(line: 6209, column: 35, scope: !9559)
!9576 = !DILocation(line: 6209, column: 40, scope: !9559)
!9577 = distinct !{!9577, !9563, !9578}
!9578 = !DILocation(line: 6209, column: 47, scope: !9559)
!9579 = !DILocation(line: 6212, column: 13, scope: !9552)
!9580 = !DILocation(line: 6215, column: 13, scope: !8878)
!9581 = distinct !{!9581, !8865, !9582}
!9582 = !DILocation(line: 6217, column: 5, scope: !490)
!9583 = !DILocation(line: 6218, column: 9, scope: !9584)
!9584 = distinct !DILexicalBlock(scope: !490, file: !3, line: 6218, column: 9)
!9585 = !DILocation(line: 6218, column: 18, scope: !9584)
!9586 = !DILocation(line: 6218, column: 16, scope: !9584)
!9587 = !DILocation(line: 6218, column: 9, scope: !490)
!9588 = !DILocation(line: 6219, column: 49, scope: !9589)
!9589 = distinct !DILexicalBlock(scope: !9584, file: !3, line: 6218, column: 24)
!9590 = !DILocation(line: 6219, column: 54, scope: !9589)
!9591 = !DILocation(line: 6219, column: 9, scope: !9589)
!9592 = !DILocation(line: 6221, column: 9, scope: !9593)
!9593 = distinct !DILexicalBlock(scope: !490, file: !3, line: 6221, column: 9)
!9594 = !DILocation(line: 6221, column: 31, scope: !9593)
!9595 = !DILocation(line: 6221, column: 9, scope: !490)
!9596 = !DILocation(line: 6223, column: 14, scope: !9597)
!9597 = distinct !DILexicalBlock(scope: !9598, file: !3, line: 6222, column: 13)
!9598 = distinct !DILexicalBlock(scope: !9593, file: !3, line: 6221, column: 40)
!9599 = !DILocation(line: 6222, column: 36, scope: !9597)
!9600 = !DILocation(line: 6223, column: 53, scope: !9597)
!9601 = !DILocation(line: 6222, column: 13, scope: !9598)
!9602 = !DILocation(line: 6224, column: 13, scope: !9603)
!9603 = distinct !DILexicalBlock(scope: !9597, file: !3, line: 6223, column: 62)
!9604 = !DILocation(line: 6226, column: 9, scope: !9598)
!9605 = !DILocation(line: 6226, column: 32, scope: !9598)
!9606 = !DILocation(line: 6226, column: 37, scope: !9598)
!9607 = !DILocation(line: 6227, column: 9, scope: !9598)
!9608 = !DILocation(line: 6227, column: 32, scope: !9598)
!9609 = !DILocation(line: 6227, column: 42, scope: !9598)
!9610 = !DILocation(line: 6228, column: 9, scope: !9598)
!9611 = !DILocation(line: 6228, column: 32, scope: !9598)
!9612 = !DILocation(line: 6228, column: 37, scope: !9598)
!9613 = !DILocation(line: 6229, column: 5, scope: !9598)
!9614 = !DILocation(line: 6231, column: 5, scope: !490)
!9615 = !DILocation(line: 6234, column: 9, scope: !9616)
!9616 = distinct !DILexicalBlock(scope: !490, file: !3, line: 6234, column: 9)
!9617 = !DILocation(line: 6234, column: 19, scope: !9616)
!9618 = !DILocation(line: 6234, column: 24, scope: !9616)
!9619 = !DILocation(line: 6234, column: 28, scope: !9616)
!9620 = !DILocation(line: 6234, column: 36, scope: !9616)
!9621 = !DILocation(line: 6234, column: 39, scope: !9616)
!9622 = !DILocation(line: 6234, column: 55, scope: !9616)
!9623 = !DILocation(line: 6234, column: 9, scope: !490)
!9624 = !DILocation(line: 6235, column: 9, scope: !9625)
!9625 = distinct !DILexicalBlock(scope: !9616, file: !3, line: 6234, column: 77)
!9626 = !DILocation(line: 6236, column: 43, scope: !9625)
!9627 = !DILocation(line: 6236, column: 41, scope: !9625)
!9628 = !DILocation(line: 6236, column: 52, scope: !9625)
!9629 = !DILocation(line: 6236, column: 9, scope: !9625)
!9630 = !DILocation(line: 6237, column: 5, scope: !9625)
!9631 = !DILocation(line: 6240, column: 12, scope: !490)
!9632 = !DILocation(line: 6241, column: 15, scope: !490)
!9633 = !DILocation(line: 6241, column: 21, scope: !490)
!9634 = !DILocation(line: 6241, column: 5, scope: !490)
!9635 = !DILocation(line: 6242, column: 30, scope: !490)
!9636 = !DILocation(line: 6242, column: 21, scope: !490)
!9637 = !DILocation(line: 6242, column: 39, scope: !490)
!9638 = !DILocation(line: 6242, column: 19, scope: !490)
!9639 = !DILocation(line: 6243, column: 9, scope: !9640)
!9640 = distinct !DILexicalBlock(scope: !490, file: !3, line: 6243, column: 9)
!9641 = !DILocation(line: 6243, column: 9, scope: !490)
!9642 = !DILocalVariable(name: "portmax", scope: !9643, file: !3, line: 6244, type: !7)
!9643 = distinct !DILexicalBlock(scope: !9640, file: !3, line: 6243, column: 20)
!9644 = !DILocation(line: 6244, column: 22, scope: !9643)
!9645 = !DILocation(line: 6246, column: 20, scope: !9643)
!9646 = !DILocation(line: 6246, column: 31, scope: !9643)
!9647 = !DILocation(line: 6246, column: 29, scope: !9643)
!9648 = !DILocation(line: 6246, column: 41, scope: !9643)
!9649 = !DILocation(line: 6246, column: 46, scope: !9643)
!9650 = !DILocation(line: 6246, column: 17, scope: !9643)
!9651 = !DILocation(line: 6247, column: 14, scope: !9652)
!9652 = distinct !DILexicalBlock(scope: !9643, file: !3, line: 6247, column: 13)
!9653 = !DILocation(line: 6247, column: 23, scope: !9652)
!9654 = !DILocation(line: 6247, column: 26, scope: !9652)
!9655 = !DILocation(line: 6247, column: 37, scope: !9652)
!9656 = !DILocation(line: 6247, column: 35, scope: !9652)
!9657 = !DILocation(line: 6247, column: 13, scope: !9643)
!9658 = !DILocation(line: 6248, column: 24, scope: !9659)
!9659 = distinct !DILexicalBlock(scope: !9652, file: !3, line: 6247, column: 46)
!9660 = !DILocation(line: 6248, column: 22, scope: !9659)
!9661 = !DILocation(line: 6249, column: 9, scope: !9659)
!9662 = !DILocation(line: 6250, column: 5, scope: !9643)
!9663 = !DILocation(line: 6251, column: 9, scope: !9664)
!9664 = distinct !DILexicalBlock(scope: !490, file: !3, line: 6251, column: 9)
!9665 = !DILocation(line: 6251, column: 21, scope: !9664)
!9666 = !DILocation(line: 6251, column: 9, scope: !490)
!9667 = !DILocation(line: 6252, column: 9, scope: !9668)
!9668 = distinct !DILexicalBlock(scope: !9664, file: !3, line: 6251, column: 27)
!9669 = !DILocation(line: 6253, column: 5, scope: !9668)
!9670 = !DILocation(line: 6260, column: 9, scope: !9671)
!9671 = distinct !DILexicalBlock(scope: !490, file: !3, line: 6260, column: 9)
!9672 = !DILocation(line: 6260, column: 24, scope: !9671)
!9673 = !DILocation(line: 6260, column: 9, scope: !490)
!9674 = !DILocation(line: 6261, column: 9, scope: !9675)
!9675 = distinct !DILexicalBlock(scope: !9671, file: !3, line: 6260, column: 30)
!9676 = !DILocation(line: 6262, column: 5, scope: !9675)
!9677 = !DILocation(line: 6270, column: 5, scope: !490)
!9678 = !DILocation(line: 6270, column: 5, scope: !9679)
!9679 = distinct !DILexicalBlock(scope: !490, file: !3, line: 6270, column: 5)
!9680 = !DILocation(line: 6273, column: 22, scope: !490)
!9681 = !DILocation(line: 6273, column: 27, scope: !490)
!9682 = !DILocation(line: 6273, column: 5, scope: !490)
!9683 = !DILocation(line: 6278, column: 9, scope: !9684)
!9684 = distinct !DILexicalBlock(scope: !490, file: !3, line: 6278, column: 9)
!9685 = !DILocation(line: 6278, column: 28, scope: !9684)
!9686 = !DILocation(line: 6278, column: 9, scope: !490)
!9687 = !DILocation(line: 6279, column: 9, scope: !9688)
!9688 = distinct !DILexicalBlock(scope: !9684, file: !3, line: 6278, column: 34)
!9689 = !DILocation(line: 6280, column: 5, scope: !9688)
!9690 = !DILocation(line: 6281, column: 9, scope: !9691)
!9691 = distinct !DILexicalBlock(scope: !9684, file: !3, line: 6280, column: 12)
!9692 = !DILocalVariable(name: "auth_scan", scope: !9693, file: !3, line: 6295, type: !514)
!9693 = distinct !DILexicalBlock(scope: !490, file: !3, line: 6294, column: 5)
!9694 = !DILocation(line: 6295, column: 26, scope: !9693)
!9695 = !DILocation(line: 6295, column: 38, scope: !9693)
!9696 = !DILocalVariable(name: "previous", scope: !9693, file: !3, line: 6296, type: !514)
!9697 = !DILocation(line: 6296, column: 26, scope: !9693)
!9698 = !DILocation(line: 6298, column: 9, scope: !9693)
!9699 = !DILocation(line: 6298, column: 16, scope: !9693)
!9700 = !DILocation(line: 6298, column: 26, scope: !9693)
!9701 = !DILocation(line: 6299, column: 17, scope: !9702)
!9702 = distinct !DILexicalBlock(scope: !9703, file: !3, line: 6299, column: 17)
!9703 = distinct !DILexicalBlock(scope: !9693, file: !3, line: 6298, column: 35)
!9704 = !DILocation(line: 6299, column: 28, scope: !9702)
!9705 = !DILocation(line: 6299, column: 34, scope: !9702)
!9706 = !DILocation(line: 6299, column: 39, scope: !9702)
!9707 = !DILocation(line: 6299, column: 17, scope: !9703)
!9708 = !DILocation(line: 6300, column: 17, scope: !9709)
!9709 = distinct !DILexicalBlock(scope: !9702, file: !3, line: 6299, column: 48)
!9710 = !DILocation(line: 6300, column: 28, scope: !9709)
!9711 = !DILocation(line: 6300, column: 34, scope: !9709)
!9712 = !DILocation(line: 6301, column: 13, scope: !9709)
!9713 = !DILocation(line: 6302, column: 18, scope: !9703)
!9714 = !DILocation(line: 6302, column: 29, scope: !9703)
!9715 = !DILocation(line: 6302, column: 13, scope: !9703)
!9716 = !DILocation(line: 6303, column: 24, scope: !9703)
!9717 = !DILocation(line: 6303, column: 22, scope: !9703)
!9718 = !DILocation(line: 6304, column: 25, scope: !9703)
!9719 = !DILocation(line: 6304, column: 36, scope: !9703)
!9720 = !DILocation(line: 6304, column: 23, scope: !9703)
!9721 = !DILocation(line: 6305, column: 18, scope: !9703)
!9722 = !DILocation(line: 6305, column: 13, scope: !9703)
!9723 = distinct !{!9723, !9698, !9724}
!9724 = !DILocation(line: 6306, column: 9, scope: !9693)
!9725 = !DILocation(line: 6308, column: 50, scope: !490)
!9726 = !DILocation(line: 6308, column: 27, scope: !490)
!9727 = !DILocation(line: 6309, column: 10, scope: !490)
!9728 = !DILocation(line: 6309, column: 5, scope: !490)
!9729 = !DILocation(line: 6311, column: 5, scope: !490)
!9730 = !DILocation(line: 6314, column: 5, scope: !490)
!9731 = !DILocation(line: 6320, column: 5, scope: !490)
!9732 = !DILocation(line: 6322, column: 5, scope: !490)
!9733 = distinct !DISubprogram(name: "init_tz", scope: !3, file: !3, line: 168, type: !9734, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!9734 = !DISubroutineType(types: !9735)
!9735 = !{!326}
!9736 = !DILocalVariable(name: "stbuf", scope: !9733, file: !3, line: 170, type: !9737)
!9737 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 80, elements: !734)
!9738 = !DILocation(line: 170, column: 10, scope: !9733)
!9739 = !DILocalVariable(name: "tm", scope: !9733, file: !3, line: 171, type: !3130)
!9740 = !DILocation(line: 171, column: 16, scope: !9733)
!9741 = !DILocalVariable(name: "now", scope: !9733, file: !3, line: 172, type: !331)
!9742 = !DILocation(line: 172, column: 12, scope: !9733)
!9743 = !DILocation(line: 172, column: 18, scope: !9733)
!9744 = !DILocation(line: 175, column: 5, scope: !9733)
!9745 = !DILocation(line: 178, column: 15, scope: !9746)
!9746 = distinct !DILexicalBlock(scope: !9733, file: !3, line: 178, column: 9)
!9747 = !DILocation(line: 178, column: 13, scope: !9746)
!9748 = !DILocation(line: 178, column: 32, scope: !9746)
!9749 = !DILocation(line: 178, column: 40, scope: !9746)
!9750 = !DILocation(line: 179, column: 18, scope: !9746)
!9751 = !DILocation(line: 179, column: 45, scope: !9746)
!9752 = !DILocation(line: 179, column: 9, scope: !9746)
!9753 = !DILocation(line: 179, column: 49, scope: !9746)
!9754 = !DILocation(line: 178, column: 9, scope: !9733)
!9755 = !DILocation(line: 181, column: 40, scope: !9756)
!9756 = distinct !DILexicalBlock(scope: !9746, file: !3, line: 179, column: 65)
!9757 = !DILocation(line: 181, column: 47, scope: !9756)
!9758 = !DILocation(line: 182, column: 18, scope: !9756)
!9759 = !DILocation(line: 182, column: 28, scope: !9756)
!9760 = !DILocation(line: 182, column: 38, scope: !9756)
!9761 = !DILocation(line: 182, column: 48, scope: !9756)
!9762 = !DILocation(line: 180, column: 9, scope: !9756)
!9763 = !DILocation(line: 183, column: 5, scope: !9756)
!9764 = !DILocation(line: 184, column: 5, scope: !9733)
!9765 = !DILocation(line: 186, column: 12, scope: !9733)
!9766 = !DILocation(line: 187, column: 12, scope: !9733)
!9767 = !DILocation(line: 189, column: 5, scope: !9733)
!9768 = distinct !DISubprogram(name: "set_signals", scope: !3, file: !3, line: 4841, type: !486, scopeLine: 4842, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!9769 = !DILocalVariable(name: "sigs", scope: !9768, file: !3, line: 4844, type: !500)
!9770 = !DILocation(line: 4844, column: 14, scope: !9768)
!9771 = !DILocalVariable(name: "sa", scope: !9768, file: !3, line: 4845, type: !9772)
!9772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !9773, line: 27, size: 1216, elements: !9774)
!9773 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/sigaction.h", directory: "")
!9774 = !{!9775, !9856, !9857, !9858}
!9775 = !DIDerivedType(tag: DW_TAG_member, name: "__sigaction_handler", scope: !9772, file: !9773, line: 38, baseType: !9776, size: 64)
!9776 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9772, file: !9773, line: 31, size: 64, elements: !9777)
!9777 = !{!9778, !9779}
!9778 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !9776, file: !9773, line: 34, baseType: !387, size: 64)
!9779 = !DIDerivedType(tag: DW_TAG_member, name: "sa_sigaction", scope: !9776, file: !9773, line: 36, baseType: !9780, size: 64)
!9780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9781, size: 64)
!9781 = !DISubroutineType(types: !9782)
!9782 = !{null, !326, !9783, !303}
!9783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9784, size: 64)
!9784 = !DIDerivedType(tag: DW_TAG_typedef, name: "siginfo_t", file: !9785, line: 124, baseType: !9786)
!9785 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/siginfo_t.h", directory: "")
!9786 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9785, line: 36, size: 1024, elements: !9787)
!9787 = !{!9788, !9789, !9790, !9791, !9792}
!9788 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !9786, file: !9785, line: 38, baseType: !326, size: 32)
!9789 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !9786, file: !9785, line: 40, baseType: !326, size: 32, offset: 32)
!9790 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !9786, file: !9785, line: 42, baseType: !326, size: 32, offset: 64)
!9791 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !9786, file: !9785, line: 48, baseType: !326, size: 32, offset: 96)
!9792 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !9786, file: !9785, line: 123, baseType: !9793, size: 896, offset: 128)
!9793 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9786, file: !9785, line: 51, size: 896, elements: !9794)
!9794 = !{!9795, !9799, !9804, !9816, !9822, !9831, !9845, !9850}
!9795 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !9793, file: !9785, line: 53, baseType: !9796, size: 896)
!9796 = !DICompositeType(tag: DW_TAG_array_type, baseType: !326, size: 896, elements: !9797)
!9797 = !{!9798}
!9798 = !DISubrange(count: 28)
!9799 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !9793, file: !9785, line: 60, baseType: !9800, size: 64)
!9800 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9793, file: !9785, line: 56, size: 64, elements: !9801)
!9801 = !{!9802, !9803}
!9802 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !9800, file: !9785, line: 58, baseType: !393, size: 32)
!9803 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !9800, file: !9785, line: 59, baseType: !339, size: 32, offset: 32)
!9804 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !9793, file: !9785, line: 68, baseType: !9805, size: 128)
!9805 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9793, file: !9785, line: 63, size: 128, elements: !9806)
!9806 = !{!9807, !9808, !9809}
!9807 = !DIDerivedType(tag: DW_TAG_member, name: "si_tid", scope: !9805, file: !9785, line: 65, baseType: !326, size: 32)
!9808 = !DIDerivedType(tag: DW_TAG_member, name: "si_overrun", scope: !9805, file: !9785, line: 66, baseType: !326, size: 32, offset: 32)
!9809 = !DIDerivedType(tag: DW_TAG_member, name: "si_sigval", scope: !9805, file: !9785, line: 67, baseType: !9810, size: 64, offset: 64)
!9810 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigval_t", file: !9811, line: 30, baseType: !9812)
!9811 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__sigval_t.h", directory: "")
!9812 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !9811, line: 24, size: 64, elements: !9813)
!9813 = !{!9814, !9815}
!9814 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !9812, file: !9811, line: 26, baseType: !326, size: 32)
!9815 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !9812, file: !9811, line: 27, baseType: !303, size: 64)
!9816 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !9793, file: !9785, line: 76, baseType: !9817, size: 128)
!9817 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9793, file: !9785, line: 71, size: 128, elements: !9818)
!9818 = !{!9819, !9820, !9821}
!9819 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !9817, file: !9785, line: 73, baseType: !393, size: 32)
!9820 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !9817, file: !9785, line: 74, baseType: !339, size: 32, offset: 32)
!9821 = !DIDerivedType(tag: DW_TAG_member, name: "si_sigval", scope: !9817, file: !9785, line: 75, baseType: !9810, size: 64, offset: 64)
!9822 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !9793, file: !9785, line: 86, baseType: !9823, size: 256)
!9823 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9793, file: !9785, line: 79, size: 256, elements: !9824)
!9824 = !{!9825, !9826, !9827, !9828, !9830}
!9825 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !9823, file: !9785, line: 81, baseType: !393, size: 32)
!9826 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !9823, file: !9785, line: 82, baseType: !339, size: 32, offset: 32)
!9827 = !DIDerivedType(tag: DW_TAG_member, name: "si_status", scope: !9823, file: !9785, line: 83, baseType: !326, size: 32, offset: 64)
!9828 = !DIDerivedType(tag: DW_TAG_member, name: "si_utime", scope: !9823, file: !9785, line: 84, baseType: !9829, size: 64, offset: 128)
!9829 = !DIDerivedType(tag: DW_TAG_typedef, name: "__clock_t", file: !313, line: 156, baseType: !334)
!9830 = !DIDerivedType(tag: DW_TAG_member, name: "si_stime", scope: !9823, file: !9785, line: 85, baseType: !9829, size: 64, offset: 192)
!9831 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !9793, file: !9785, line: 105, baseType: !9832, size: 256)
!9832 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9793, file: !9785, line: 89, size: 256, elements: !9833)
!9833 = !{!9834, !9835, !9836}
!9834 = !DIDerivedType(tag: DW_TAG_member, name: "si_addr", scope: !9832, file: !9785, line: 91, baseType: !303, size: 64)
!9835 = !DIDerivedType(tag: DW_TAG_member, name: "si_addr_lsb", scope: !9832, file: !9785, line: 93, baseType: !2062, size: 16, offset: 64)
!9836 = !DIDerivedType(tag: DW_TAG_member, name: "_bounds", scope: !9832, file: !9785, line: 104, baseType: !9837, size: 128, offset: 128)
!9837 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9832, file: !9785, line: 94, size: 128, elements: !9838)
!9838 = !{!9839, !9844}
!9839 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !9837, file: !9785, line: 101, baseType: !9840, size: 128)
!9840 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9837, file: !9785, line: 97, size: 128, elements: !9841)
!9841 = !{!9842, !9843}
!9842 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !9840, file: !9785, line: 99, baseType: !303, size: 64)
!9843 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !9840, file: !9785, line: 100, baseType: !303, size: 64, offset: 64)
!9844 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !9837, file: !9785, line: 103, baseType: !329, size: 32)
!9845 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !9793, file: !9785, line: 112, baseType: !9846, size: 128)
!9846 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9793, file: !9785, line: 108, size: 128, elements: !9847)
!9847 = !{!9848, !9849}
!9848 = !DIDerivedType(tag: DW_TAG_member, name: "si_band", scope: !9846, file: !9785, line: 110, baseType: !334, size: 64)
!9849 = !DIDerivedType(tag: DW_TAG_member, name: "si_fd", scope: !9846, file: !9785, line: 111, baseType: !326, size: 32, offset: 64)
!9850 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !9793, file: !9785, line: 121, baseType: !9851, size: 128)
!9851 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9793, file: !9785, line: 116, size: 128, elements: !9852)
!9852 = !{!9853, !9854, !9855}
!9853 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !9851, file: !9785, line: 118, baseType: !303, size: 64)
!9854 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !9851, file: !9785, line: 119, baseType: !326, size: 32, offset: 64)
!9855 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !9851, file: !9785, line: 120, baseType: !7, size: 32, offset: 96)
!9856 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !9772, file: !9773, line: 46, baseType: !502, size: 1024, offset: 64)
!9857 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !9772, file: !9773, line: 49, baseType: !326, size: 32, offset: 1088)
!9858 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !9772, file: !9773, line: 52, baseType: !558, size: 64, offset: 1152)
!9859 = !DILocation(line: 4845, column: 22, scope: !9768)
!9860 = !DILocation(line: 4847, column: 5, scope: !9768)
!9861 = !DILocation(line: 4848, column: 21, scope: !9768)
!9862 = !DILocation(line: 4848, column: 5, scope: !9768)
!9863 = !DILocation(line: 4850, column: 8, scope: !9768)
!9864 = !DILocation(line: 4850, column: 17, scope: !9768)
!9865 = !DILocation(line: 4851, column: 8, scope: !9768)
!9866 = !DILocation(line: 4851, column: 19, scope: !9768)
!9867 = !DILocation(line: 4852, column: 5, scope: !9768)
!9868 = !DILocation(line: 4853, column: 12, scope: !9768)
!9869 = !DILocation(line: 4855, column: 8, scope: !9768)
!9870 = !DILocation(line: 4855, column: 19, scope: !9768)
!9871 = !DILocation(line: 4856, column: 12, scope: !9768)
!9872 = !DILocation(line: 4857, column: 12, scope: !9768)
!9873 = !DILocation(line: 4858, column: 12, scope: !9768)
!9874 = !DILocation(line: 4860, column: 12, scope: !9768)
!9875 = !DILocation(line: 4863, column: 8, scope: !9768)
!9876 = !DILocation(line: 4863, column: 17, scope: !9768)
!9877 = !DILocation(line: 4864, column: 8, scope: !9768)
!9878 = !DILocation(line: 4864, column: 19, scope: !9768)
!9879 = !DILocation(line: 4865, column: 5, scope: !9768)
!9880 = !DILocation(line: 4866, column: 12, scope: !9768)
!9881 = !DILocation(line: 4867, column: 5, scope: !9768)
!9882 = !DILocation(line: 4868, column: 12, scope: !9768)
!9883 = !DILocation(line: 4869, column: 5, scope: !9768)
!9884 = !DILocation(line: 4870, column: 12, scope: !9768)
!9885 = !DILocation(line: 4871, column: 5, scope: !9768)
!9886 = !DILocation(line: 4872, column: 12, scope: !9768)
!9887 = !DILocation(line: 4874, column: 5, scope: !9768)
!9888 = !DILocation(line: 4875, column: 12, scope: !9768)
!9889 = !DILocation(line: 4877, column: 12, scope: !9768)
!9890 = !DILocation(line: 4879, column: 1, scope: !9768)
!9891 = distinct !DISubprogram(name: "dodaemonize", scope: !3, file: !3, line: 5245, type: !486, scopeLine: 5246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!9892 = !DILocalVariable(name: "child", scope: !9891, file: !3, line: 5247, type: !392)
!9893 = !DILocation(line: 5247, column: 11, scope: !9891)
!9894 = !DILocalVariable(name: "i", scope: !9891, file: !3, line: 5248, type: !7)
!9895 = !DILocation(line: 5248, column: 18, scope: !9891)
!9896 = !DILocation(line: 5251, column: 9, scope: !9897)
!9897 = distinct !DILexicalBlock(scope: !9891, file: !3, line: 5251, column: 9)
!9898 = !DILocation(line: 5251, column: 19, scope: !9897)
!9899 = !DILocation(line: 5251, column: 9, scope: !9891)
!9900 = !DILocation(line: 5252, column: 22, scope: !9901)
!9901 = distinct !DILexicalBlock(scope: !9902, file: !3, line: 5252, column: 13)
!9902 = distinct !DILexicalBlock(scope: !9897, file: !3, line: 5251, column: 25)
!9903 = !DILocation(line: 5252, column: 20, scope: !9901)
!9904 = !DILocation(line: 5252, column: 30, scope: !9901)
!9905 = !DILocation(line: 5252, column: 13, scope: !9902)
!9906 = !DILocation(line: 5253, column: 13, scope: !9907)
!9907 = distinct !DILexicalBlock(scope: !9901, file: !3, line: 5252, column: 45)
!9908 = !DILocation(line: 5254, column: 77, scope: !9907)
!9909 = !DILocation(line: 5254, column: 68, scope: !9907)
!9910 = !DILocation(line: 5254, column: 13, scope: !9907)
!9911 = !DILocation(line: 5255, column: 13, scope: !9907)
!9912 = !DILocation(line: 5256, column: 20, scope: !9913)
!9913 = distinct !DILexicalBlock(scope: !9901, file: !3, line: 5256, column: 20)
!9914 = !DILocation(line: 5256, column: 26, scope: !9913)
!9915 = !DILocation(line: 5256, column: 20, scope: !9901)
!9916 = !DILocation(line: 5257, column: 13, scope: !9917)
!9917 = distinct !DILexicalBlock(scope: !9913, file: !3, line: 5256, column: 40)
!9918 = !DILocation(line: 5259, column: 13, scope: !9919)
!9919 = distinct !DILexicalBlock(scope: !9902, file: !3, line: 5259, column: 13)
!9920 = !DILocation(line: 5259, column: 22, scope: !9919)
!9921 = !DILocation(line: 5259, column: 13, scope: !9902)
!9922 = !DILocation(line: 5260, column: 13, scope: !9923)
!9923 = distinct !DILexicalBlock(scope: !9919, file: !3, line: 5259, column: 37)
!9924 = !DILocation(line: 5261, column: 9, scope: !9923)
!9925 = !DILocation(line: 5263, column: 13, scope: !9926)
!9926 = distinct !DILexicalBlock(scope: !9902, file: !3, line: 5263, column: 13)
!9927 = !DILocation(line: 5263, column: 24, scope: !9926)
!9928 = !DILocation(line: 5263, column: 13, scope: !9902)
!9929 = !DILocation(line: 5264, column: 13, scope: !9930)
!9930 = distinct !DILexicalBlock(scope: !9926, file: !3, line: 5263, column: 30)
!9931 = !DILocation(line: 5265, column: 13, scope: !9930)
!9932 = !DILocation(line: 5268, column: 13, scope: !9902)
!9933 = !DILocation(line: 5268, column: 11, scope: !9902)
!9934 = !DILocation(line: 5269, column: 9, scope: !9902)
!9935 = !DILocation(line: 5270, column: 30, scope: !9936)
!9936 = distinct !DILexicalBlock(scope: !9937, file: !3, line: 5270, column: 17)
!9937 = distinct !DILexicalBlock(scope: !9902, file: !3, line: 5269, column: 12)
!9938 = !DILocation(line: 5270, column: 17, scope: !9936)
!9939 = !DILocation(line: 5270, column: 17, scope: !9937)
!9940 = !DILocation(line: 5271, column: 36, scope: !9941)
!9941 = distinct !DILexicalBlock(scope: !9936, file: !3, line: 5270, column: 34)
!9942 = !DILocation(line: 5271, column: 24, scope: !9941)
!9943 = !DILocation(line: 5272, column: 13, scope: !9941)
!9944 = !DILocation(line: 5273, column: 14, scope: !9937)
!9945 = !DILocation(line: 5274, column: 9, scope: !9937)
!9946 = !DILocation(line: 5274, column: 18, scope: !9902)
!9947 = !DILocation(line: 5274, column: 20, scope: !9902)
!9948 = distinct !{!9948, !9934, !9949}
!9949 = !DILocation(line: 5274, column: 24, scope: !9902)
!9950 = !DILocation(line: 5275, column: 13, scope: !9951)
!9951 = distinct !DILexicalBlock(scope: !9902, file: !3, line: 5275, column: 13)
!9952 = !DILocation(line: 5275, column: 30, scope: !9951)
!9953 = !DILocation(line: 5275, column: 13, scope: !9902)
!9954 = !DILocation(line: 5276, column: 13, scope: !9955)
!9955 = distinct !DILexicalBlock(scope: !9951, file: !3, line: 5275, column: 36)
!9956 = !DILocation(line: 5277, column: 13, scope: !9955)
!9957 = !DILocation(line: 5279, column: 5, scope: !9902)
!9958 = !DILocation(line: 5280, column: 1, scope: !9891)
!9959 = distinct !DISubprogram(name: "clearargs", scope: !3, file: !3, line: 448, type: !9960, scopeLine: 449, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!9960 = !DISubroutineType(types: !9961)
!9961 = !{null, !326, !493}
!9962 = !DILocalVariable(name: "argc", arg: 1, scope: !9959, file: !3, line: 448, type: !326)
!9963 = !DILocation(line: 448, column: 27, scope: !9959)
!9964 = !DILocalVariable(name: "argv", arg: 2, scope: !9959, file: !3, line: 448, type: !493)
!9965 = !DILocation(line: 448, column: 40, scope: !9959)
!9966 = !DILocalVariable(name: "i", scope: !9959, file: !3, line: 452, type: !326)
!9967 = !DILocation(line: 452, column: 9, scope: !9959)
!9968 = !DILocalVariable(name: "first", scope: !9959, file: !3, line: 453, type: !308)
!9969 = !DILocation(line: 453, column: 11, scope: !9959)
!9970 = !DILocalVariable(name: "next", scope: !9959, file: !3, line: 454, type: !308)
!9971 = !DILocation(line: 454, column: 11, scope: !9959)
!9972 = !DILocation(line: 456, column: 12, scope: !9973)
!9973 = distinct !DILexicalBlock(scope: !9959, file: !3, line: 456, column: 5)
!9974 = !DILocation(line: 456, column: 10, scope: !9973)
!9975 = !DILocation(line: 456, column: 17, scope: !9976)
!9976 = distinct !DILexicalBlock(scope: !9973, file: !3, line: 456, column: 5)
!9977 = !DILocation(line: 456, column: 21, scope: !9976)
!9978 = !DILocation(line: 456, column: 19, scope: !9976)
!9979 = !DILocation(line: 456, column: 5, scope: !9973)
!9980 = !DILocation(line: 457, column: 13, scope: !9981)
!9981 = distinct !DILexicalBlock(scope: !9982, file: !3, line: 457, column: 13)
!9982 = distinct !DILexicalBlock(scope: !9976, file: !3, line: 456, column: 32)
!9983 = !DILocation(line: 457, column: 19, scope: !9981)
!9984 = !DILocation(line: 457, column: 13, scope: !9982)
!9985 = !DILocation(line: 458, column: 21, scope: !9986)
!9986 = distinct !DILexicalBlock(scope: !9981, file: !3, line: 457, column: 28)
!9987 = !DILocation(line: 458, column: 26, scope: !9986)
!9988 = !DILocation(line: 458, column: 19, scope: !9986)
!9989 = !DILocation(line: 459, column: 9, scope: !9986)
!9990 = !DILocation(line: 460, column: 13, scope: !9991)
!9991 = distinct !DILexicalBlock(scope: !9982, file: !3, line: 460, column: 13)
!9992 = !DILocation(line: 460, column: 18, scope: !9991)
!9993 = !DILocation(line: 460, column: 26, scope: !9991)
!9994 = !DILocation(line: 460, column: 29, scope: !9991)
!9995 = !DILocation(line: 460, column: 34, scope: !9991)
!9996 = !DILocation(line: 460, column: 40, scope: !9991)
!9997 = !DILocation(line: 460, column: 45, scope: !9991)
!9998 = !DILocation(line: 460, column: 37, scope: !9991)
!9999 = !DILocation(line: 460, column: 13, scope: !9982)
!10000 = !DILocation(line: 461, column: 20, scope: !10001)
!10001 = distinct !DILexicalBlock(scope: !9991, file: !3, line: 460, column: 50)
!10002 = !DILocation(line: 461, column: 25, scope: !10001)
!10003 = !DILocation(line: 461, column: 37, scope: !10001)
!10004 = !DILocation(line: 461, column: 42, scope: !10001)
!10005 = !DILocation(line: 461, column: 30, scope: !10001)
!10006 = !DILocation(line: 461, column: 28, scope: !10001)
!10007 = !DILocation(line: 461, column: 18, scope: !10001)
!10008 = !DILocation(line: 462, column: 9, scope: !10001)
!10009 = !DILocation(line: 463, column: 5, scope: !9982)
!10010 = !DILocation(line: 456, column: 28, scope: !9976)
!10011 = !DILocation(line: 456, column: 5, scope: !9976)
!10012 = distinct !{!10012, !9979, !10013}
!10013 = !DILocation(line: 463, column: 5, scope: !9973)
!10014 = !DILocation(line: 464, column: 12, scope: !10015)
!10015 = distinct !DILexicalBlock(scope: !9959, file: !3, line: 464, column: 5)
!10016 = !DILocation(line: 464, column: 10, scope: !10015)
!10017 = !DILocation(line: 464, column: 17, scope: !10018)
!10018 = distinct !DILexicalBlock(scope: !10015, file: !3, line: 464, column: 5)
!10019 = !DILocation(line: 464, column: 25, scope: !10018)
!10020 = !DILocation(line: 464, column: 28, scope: !10018)
!10021 = !DILocation(line: 464, column: 5, scope: !10015)
!10022 = !DILocation(line: 465, column: 13, scope: !10023)
!10023 = distinct !DILexicalBlock(scope: !10024, file: !3, line: 465, column: 13)
!10024 = distinct !DILexicalBlock(scope: !10018, file: !3, line: 464, column: 42)
!10025 = !DILocation(line: 465, column: 19, scope: !10023)
!10026 = !DILocation(line: 465, column: 13, scope: !10024)
!10027 = !DILocation(line: 466, column: 21, scope: !10028)
!10028 = distinct !DILexicalBlock(scope: !10023, file: !3, line: 465, column: 28)
!10029 = !DILocation(line: 466, column: 26, scope: !10028)
!10030 = !DILocation(line: 466, column: 19, scope: !10028)
!10031 = !DILocation(line: 467, column: 9, scope: !10028)
!10032 = !DILocation(line: 468, column: 13, scope: !10033)
!10033 = distinct !DILexicalBlock(scope: !10024, file: !3, line: 468, column: 13)
!10034 = !DILocation(line: 468, column: 18, scope: !10033)
!10035 = !DILocation(line: 468, column: 26, scope: !10033)
!10036 = !DILocation(line: 468, column: 29, scope: !10033)
!10037 = !DILocation(line: 468, column: 34, scope: !10033)
!10038 = !DILocation(line: 468, column: 40, scope: !10033)
!10039 = !DILocation(line: 468, column: 45, scope: !10033)
!10040 = !DILocation(line: 468, column: 37, scope: !10033)
!10041 = !DILocation(line: 468, column: 13, scope: !10024)
!10042 = !DILocation(line: 469, column: 20, scope: !10043)
!10043 = distinct !DILexicalBlock(scope: !10033, file: !3, line: 468, column: 50)
!10044 = !DILocation(line: 469, column: 25, scope: !10043)
!10045 = !DILocation(line: 469, column: 37, scope: !10043)
!10046 = !DILocation(line: 469, column: 42, scope: !10043)
!10047 = !DILocation(line: 469, column: 30, scope: !10043)
!10048 = !DILocation(line: 469, column: 28, scope: !10043)
!10049 = !DILocation(line: 469, column: 18, scope: !10043)
!10050 = !DILocation(line: 470, column: 9, scope: !10043)
!10051 = !DILocation(line: 471, column: 5, scope: !10024)
!10052 = !DILocation(line: 464, column: 38, scope: !10018)
!10053 = !DILocation(line: 464, column: 5, scope: !10018)
!10054 = distinct !{!10054, !10021, !10055}
!10055 = !DILocation(line: 471, column: 5, scope: !10015)
!10056 = !DILocation(line: 472, column: 9, scope: !10057)
!10057 = distinct !DILexicalBlock(scope: !9959, file: !3, line: 472, column: 9)
!10058 = !DILocation(line: 472, column: 15, scope: !10057)
!10059 = !DILocation(line: 472, column: 23, scope: !10057)
!10060 = !DILocation(line: 472, column: 26, scope: !10057)
!10061 = !DILocation(line: 472, column: 31, scope: !10057)
!10062 = !DILocation(line: 472, column: 9, scope: !9959)
!10063 = !DILocation(line: 473, column: 9, scope: !10064)
!10064 = distinct !DILexicalBlock(scope: !10057, file: !3, line: 472, column: 40)
!10065 = !DILocation(line: 475, column: 16, scope: !9959)
!10066 = !DILocation(line: 475, column: 23, scope: !9959)
!10067 = !DILocation(line: 475, column: 21, scope: !9959)
!10068 = !DILocation(line: 475, column: 14, scope: !9959)
!10069 = !DILocation(line: 476, column: 13, scope: !9959)
!10070 = !DILocation(line: 476, column: 11, scope: !9959)
!10071 = !DILocation(line: 477, column: 9, scope: !10072)
!10072 = distinct !DILexicalBlock(scope: !9959, file: !3, line: 477, column: 9)
!10073 = !DILocation(line: 477, column: 17, scope: !10072)
!10074 = !DILocation(line: 477, column: 9, scope: !9959)
!10075 = !DILocalVariable(name: "new_environ", scope: !10076, file: !3, line: 478, type: !493)
!10076 = distinct !DILexicalBlock(scope: !10072, file: !3, line: 477, column: 26)
!10077 = !DILocation(line: 478, column: 16, scope: !10076)
!10078 = !DILocalVariable(name: "env_nb", scope: !10076, file: !3, line: 479, type: !7)
!10079 = !DILocation(line: 479, column: 22, scope: !10076)
!10080 = !DILocation(line: 481, column: 9, scope: !10076)
!10081 = !DILocation(line: 481, column: 16, scope: !10076)
!10082 = !DILocation(line: 481, column: 24, scope: !10076)
!10083 = !DILocation(line: 481, column: 32, scope: !10076)
!10084 = !DILocation(line: 482, column: 19, scope: !10085)
!10085 = distinct !DILexicalBlock(scope: !10076, file: !3, line: 481, column: 41)
!10086 = distinct !{!10086, !10080, !10087}
!10087 = !DILocation(line: 483, column: 9, scope: !10076)
!10088 = !DILocation(line: 484, column: 41, scope: !10089)
!10089 = distinct !DILexicalBlock(scope: !10076, file: !3, line: 484, column: 13)
!10090 = !DILocation(line: 484, column: 39, scope: !10089)
!10091 = !DILocation(line: 484, column: 35, scope: !10089)
!10092 = !DILocation(line: 484, column: 49, scope: !10089)
!10093 = !DILocation(line: 484, column: 28, scope: !10089)
!10094 = !DILocation(line: 484, column: 26, scope: !10089)
!10095 = !DILocation(line: 484, column: 69, scope: !10089)
!10096 = !DILocation(line: 484, column: 13, scope: !10076)
!10097 = !DILocation(line: 485, column: 13, scope: !10098)
!10098 = distinct !DILexicalBlock(scope: !10089, file: !3, line: 484, column: 78)
!10099 = !DILocation(line: 487, column: 9, scope: !10076)
!10100 = !DILocation(line: 487, column: 21, scope: !10076)
!10101 = !DILocation(line: 487, column: 29, scope: !10076)
!10102 = !DILocation(line: 488, column: 9, scope: !10076)
!10103 = !DILocation(line: 488, column: 16, scope: !10076)
!10104 = !DILocation(line: 488, column: 23, scope: !10076)
!10105 = !DILocation(line: 489, column: 19, scope: !10106)
!10106 = distinct !DILexicalBlock(scope: !10076, file: !3, line: 488, column: 29)
!10107 = !DILocation(line: 490, column: 42, scope: !10106)
!10108 = !DILocation(line: 490, column: 50, scope: !10106)
!10109 = !DILocation(line: 490, column: 35, scope: !10106)
!10110 = !DILocation(line: 490, column: 13, scope: !10106)
!10111 = !DILocation(line: 490, column: 25, scope: !10106)
!10112 = !DILocation(line: 490, column: 33, scope: !10106)
!10113 = distinct !{!10113, !10102, !10114}
!10114 = !DILocation(line: 491, column: 9, scope: !10076)
!10115 = !DILocation(line: 492, column: 19, scope: !10076)
!10116 = !DILocation(line: 492, column: 17, scope: !10076)
!10117 = !DILocation(line: 493, column: 5, scope: !10076)
!10118 = !DILocation(line: 499, column: 1, scope: !9959)
!10119 = distinct !DISubprogram(name: "check_ipv6_support", scope: !3, file: !3, line: 5180, type: !486, scopeLine: 5181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!10120 = !DILocalVariable(name: "p", scope: !10119, file: !3, line: 5183, type: !326)
!10121 = !DILocation(line: 5183, column: 9, scope: !10119)
!10122 = !DILocation(line: 5185, column: 14, scope: !10123)
!10123 = distinct !DILexicalBlock(scope: !10119, file: !3, line: 5185, column: 9)
!10124 = !DILocation(line: 5185, column: 12, scope: !10123)
!10125 = !DILocation(line: 5185, column: 58, scope: !10123)
!10126 = !DILocation(line: 5185, column: 9, scope: !10119)
!10127 = !DILocation(line: 5186, column: 22, scope: !10128)
!10128 = distinct !DILexicalBlock(scope: !10123, file: !3, line: 5185, column: 65)
!10129 = !DILocation(line: 5186, column: 16, scope: !10128)
!10130 = !DILocation(line: 5187, column: 16, scope: !10128)
!10131 = !DILocation(line: 5188, column: 5, scope: !10128)
!10132 = !DILocation(line: 5190, column: 1, scope: !10119)
!10133 = distinct !DISubprogram(name: "check_standalone", scope: !3, file: !3, line: 4779, type: !9734, scopeLine: 4780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!10134 = !DILocalVariable(name: "socksize", scope: !10133, file: !3, line: 4781, type: !310)
!10135 = !DILocation(line: 4781, column: 15, scope: !10133)
!10136 = !DILocation(line: 4782, column: 24, scope: !10137)
!10137 = distinct !DILexicalBlock(scope: !10133, file: !3, line: 4782, column: 9)
!10138 = !DILocation(line: 4782, column: 9, scope: !10137)
!10139 = !DILocation(line: 4782, column: 66, scope: !10137)
!10140 = !DILocation(line: 4782, column: 9, scope: !10133)
!10141 = !DILocation(line: 4783, column: 18, scope: !10142)
!10142 = distinct !DILexicalBlock(scope: !10137, file: !3, line: 4782, column: 72)
!10143 = !DILocation(line: 4784, column: 9, scope: !10142)
!10144 = !DILocation(line: 4786, column: 9, scope: !10145)
!10145 = distinct !DILexicalBlock(scope: !10133, file: !3, line: 4786, column: 9)
!10146 = !DILocation(line: 4786, column: 20, scope: !10145)
!10147 = !DILocation(line: 4786, column: 9, scope: !10133)
!10148 = !DILocation(line: 4787, column: 9, scope: !10149)
!10149 = distinct !DILexicalBlock(scope: !10145, file: !3, line: 4786, column: 27)
!10150 = !DILocation(line: 4789, column: 14, scope: !10133)
!10151 = !DILocation(line: 4791, column: 5, scope: !10133)
!10152 = !DILocation(line: 4792, column: 1, scope: !10133)
!10153 = distinct !DISubprogram(name: "standalone_server", scope: !3, file: !3, line: 5386, type: !486, scopeLine: 5387, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!10154 = !DILocalVariable(name: "on", scope: !10153, file: !3, line: 5388, type: !326)
!10155 = !DILocation(line: 5388, column: 9, scope: !10153)
!10156 = !DILocalVariable(name: "hints", scope: !10153, file: !3, line: 5389, type: !10157)
!10157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "addrinfo", file: !10158, line: 565, size: 384, elements: !10159)
!10158 = !DIFile(filename: "/usr/include/netdb.h", directory: "")
!10159 = !{!10160, !10161, !10162, !10163, !10164, !10165, !10166, !10167}
!10160 = !DIDerivedType(tag: DW_TAG_member, name: "ai_flags", scope: !10157, file: !10158, line: 567, baseType: !326, size: 32)
!10161 = !DIDerivedType(tag: DW_TAG_member, name: "ai_family", scope: !10157, file: !10158, line: 568, baseType: !326, size: 32, offset: 32)
!10162 = !DIDerivedType(tag: DW_TAG_member, name: "ai_socktype", scope: !10157, file: !10158, line: 569, baseType: !326, size: 32, offset: 64)
!10163 = !DIDerivedType(tag: DW_TAG_member, name: "ai_protocol", scope: !10157, file: !10158, line: 570, baseType: !326, size: 32, offset: 96)
!10164 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addrlen", scope: !10157, file: !10158, line: 571, baseType: !310, size: 32, offset: 128)
!10165 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addr", scope: !10157, file: !10158, line: 572, baseType: !314, size: 64, offset: 192)
!10166 = !DIDerivedType(tag: DW_TAG_member, name: "ai_canonname", scope: !10157, file: !10158, line: 573, baseType: !308, size: 64, offset: 256)
!10167 = !DIDerivedType(tag: DW_TAG_member, name: "ai_next", scope: !10157, file: !10158, line: 574, baseType: !10168, size: 64, offset: 320)
!10168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10157, size: 64)
!10169 = !DILocation(line: 5389, column: 21, scope: !10153)
!10170 = !DILocalVariable(name: "res", scope: !10153, file: !3, line: 5389, type: !10168)
!10171 = !DILocation(line: 5389, column: 29, scope: !10153)
!10172 = !DILocalVariable(name: "res6", scope: !10153, file: !3, line: 5389, type: !10168)
!10173 = !DILocation(line: 5389, column: 35, scope: !10153)
!10174 = !DILocalVariable(name: "rs", scope: !10153, file: !3, line: 5390, type: !10175)
!10175 = !DIDerivedType(tag: DW_TAG_typedef, name: "fd_set", file: !395, line: 70, baseType: !10176)
!10176 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !395, line: 59, size: 1024, elements: !10177)
!10177 = !{!10178}
!10178 = !DIDerivedType(tag: DW_TAG_member, name: "fds_bits", scope: !10176, file: !395, line: 64, baseType: !10179, size: 1024)
!10179 = !DICompositeType(tag: DW_TAG_array_type, baseType: !394, size: 1024, elements: !372)
!10180 = !DILocation(line: 5390, column: 12, scope: !10153)
!10181 = !DILocalVariable(name: "max_fd", scope: !10153, file: !3, line: 5391, type: !326)
!10182 = !DILocation(line: 5391, column: 9, scope: !10153)
!10183 = !DILocation(line: 5394, column: 16, scope: !10153)
!10184 = !DILocation(line: 5396, column: 5, scope: !10153)
!10185 = !DILocation(line: 5397, column: 11, scope: !10153)
!10186 = !DILocation(line: 5397, column: 20, scope: !10153)
!10187 = !DILocation(line: 5398, column: 11, scope: !10153)
!10188 = !DILocation(line: 5398, column: 21, scope: !10153)
!10189 = !DILocation(line: 5399, column: 11, scope: !10153)
!10190 = !DILocation(line: 5399, column: 23, scope: !10153)
!10191 = !DILocation(line: 5400, column: 11, scope: !10153)
!10192 = !DILocation(line: 5400, column: 19, scope: !10153)
!10193 = !DILocation(line: 5401, column: 8, scope: !10153)
!10194 = !DILocation(line: 5402, column: 9, scope: !10195)
!10195 = distinct !DILexicalBlock(scope: !10153, file: !3, line: 5402, column: 9)
!10196 = !DILocation(line: 5402, column: 18, scope: !10195)
!10197 = !DILocation(line: 5402, column: 24, scope: !10195)
!10198 = !DILocation(line: 5402, column: 27, scope: !10195)
!10199 = !DILocation(line: 5402, column: 35, scope: !10195)
!10200 = !DILocation(line: 5402, column: 40, scope: !10195)
!10201 = !DILocation(line: 5403, column: 21, scope: !10195)
!10202 = !DILocation(line: 5403, column: 36, scope: !10195)
!10203 = !DILocation(line: 5403, column: 9, scope: !10195)
!10204 = !DILocation(line: 5403, column: 67, scope: !10195)
!10205 = !DILocation(line: 5402, column: 9, scope: !10153)
!10206 = !DILocation(line: 5404, column: 26, scope: !10207)
!10207 = distinct !DILexicalBlock(scope: !10208, file: !3, line: 5404, column: 14)
!10208 = distinct !DILexicalBlock(scope: !10195, file: !3, line: 5403, column: 73)
!10209 = !DILocation(line: 5404, column: 24, scope: !10207)
!10210 = !DILocation(line: 5404, column: 69, scope: !10207)
!10211 = !DILocation(line: 5404, column: 75, scope: !10207)
!10212 = !DILocation(line: 5405, column: 24, scope: !10207)
!10213 = !DILocation(line: 5406, column: 24, scope: !10207)
!10214 = !DILocation(line: 5405, column: 13, scope: !10207)
!10215 = !DILocation(line: 5406, column: 49, scope: !10207)
!10216 = !DILocation(line: 5404, column: 14, scope: !10208)
!10217 = !DILocalVariable(name: "old_errno", scope: !10218, file: !3, line: 5407, type: !326)
!10218 = distinct !DILexicalBlock(scope: !10207, file: !3, line: 5406, column: 55)
!10219 = !DILocation(line: 5407, column: 17, scope: !10218)
!10220 = !DILocation(line: 5409, column: 26, scope: !10218)
!10221 = !DILocation(line: 5409, column: 13, scope: !10218)
!10222 = !DILabel(scope: !10218, name: "cant_bind", file: !3, line: 5410)
!10223 = !DILocation(line: 5410, column: 13, scope: !10218)
!10224 = !DILocation(line: 5411, column: 25, scope: !10218)
!10225 = !DILocation(line: 5411, column: 23, scope: !10218)
!10226 = !DILocation(line: 5412, column: 13, scope: !10218)
!10227 = !DILocation(line: 5414, column: 30, scope: !10218)
!10228 = !DILocation(line: 5414, column: 21, scope: !10218)
!10229 = !DILocation(line: 5413, column: 13, scope: !10218)
!10230 = !DILocation(line: 5415, column: 13, scope: !10218)
!10231 = !DILocalVariable(name: "tfo", scope: !10232, file: !3, line: 5422, type: !326)
!10232 = distinct !DILexicalBlock(scope: !10208, file: !3, line: 5418, column: 9)
!10233 = !DILocation(line: 5422, column: 17, scope: !10232)
!10234 = !DILocation(line: 5424, column: 24, scope: !10232)
!10235 = !DILocation(line: 5425, column: 24, scope: !10232)
!10236 = !DILocation(line: 5424, column: 13, scope: !10232)
!10237 = !DILocation(line: 5428, column: 18, scope: !10238)
!10238 = distinct !DILexicalBlock(scope: !10208, file: !3, line: 5428, column: 13)
!10239 = !DILocation(line: 5428, column: 28, scope: !10238)
!10240 = !DILocation(line: 5428, column: 33, scope: !10238)
!10241 = !DILocation(line: 5428, column: 54, scope: !10238)
!10242 = !DILocation(line: 5428, column: 59, scope: !10238)
!10243 = !DILocation(line: 5428, column: 13, scope: !10238)
!10244 = !DILocation(line: 5428, column: 71, scope: !10238)
!10245 = !DILocation(line: 5428, column: 76, scope: !10238)
!10246 = !DILocation(line: 5429, column: 20, scope: !10238)
!10247 = !DILocation(line: 5429, column: 30, scope: !10238)
!10248 = !DILocation(line: 5429, column: 39, scope: !10238)
!10249 = !DILocation(line: 5430, column: 25, scope: !10238)
!10250 = !DILocation(line: 5430, column: 34, scope: !10238)
!10251 = !DILocation(line: 5430, column: 23, scope: !10238)
!10252 = !DILocation(line: 5429, column: 13, scope: !10238)
!10253 = !DILocation(line: 5430, column: 58, scope: !10238)
!10254 = !DILocation(line: 5428, column: 13, scope: !10208)
!10255 = !DILocation(line: 5431, column: 26, scope: !10256)
!10256 = distinct !DILexicalBlock(scope: !10238, file: !3, line: 5430, column: 64)
!10257 = !DILocation(line: 5431, column: 13, scope: !10256)
!10258 = !DILocation(line: 5432, column: 13, scope: !10256)
!10259 = !DILocation(line: 5434, column: 22, scope: !10208)
!10260 = !DILocation(line: 5434, column: 9, scope: !10208)
!10261 = !DILocation(line: 5435, column: 26, scope: !10208)
!10262 = !DILocation(line: 5435, column: 9, scope: !10208)
!10263 = !DILocation(line: 5436, column: 5, scope: !10208)
!10264 = !DILocation(line: 5437, column: 9, scope: !10265)
!10265 = distinct !DILexicalBlock(scope: !10153, file: !3, line: 5437, column: 9)
!10266 = !DILocation(line: 5437, column: 19, scope: !10265)
!10267 = !DILocation(line: 5437, column: 25, scope: !10265)
!10268 = !DILocation(line: 5437, column: 28, scope: !10265)
!10269 = !DILocation(line: 5437, column: 36, scope: !10265)
!10270 = !DILocation(line: 5437, column: 9, scope: !10153)
!10271 = !DILocation(line: 5438, column: 15, scope: !10272)
!10272 = distinct !DILexicalBlock(scope: !10265, file: !3, line: 5437, column: 42)
!10273 = !DILocation(line: 5438, column: 25, scope: !10272)
!10274 = !DILocation(line: 5439, column: 25, scope: !10275)
!10275 = distinct !DILexicalBlock(scope: !10272, file: !3, line: 5439, column: 13)
!10276 = !DILocation(line: 5439, column: 40, scope: !10275)
!10277 = !DILocation(line: 5439, column: 13, scope: !10275)
!10278 = !DILocation(line: 5439, column: 72, scope: !10275)
!10279 = !DILocation(line: 5439, column: 13, scope: !10272)
!10280 = !DILocation(line: 5440, column: 30, scope: !10281)
!10281 = distinct !DILexicalBlock(scope: !10282, file: !3, line: 5440, column: 17)
!10282 = distinct !DILexicalBlock(scope: !10275, file: !3, line: 5439, column: 78)
!10283 = !DILocation(line: 5440, column: 28, scope: !10281)
!10284 = !DILocation(line: 5441, column: 64, scope: !10281)
!10285 = !DILocation(line: 5441, column: 70, scope: !10281)
!10286 = !DILocation(line: 5442, column: 28, scope: !10281)
!10287 = !DILocation(line: 5443, column: 28, scope: !10281)
!10288 = !DILocation(line: 5442, column: 17, scope: !10281)
!10289 = !DILocation(line: 5443, column: 53, scope: !10281)
!10290 = !DILocation(line: 5440, column: 17, scope: !10282)
!10291 = !DILocation(line: 5444, column: 30, scope: !10292)
!10292 = distinct !DILexicalBlock(scope: !10281, file: !3, line: 5443, column: 59)
!10293 = !DILocation(line: 5444, column: 17, scope: !10292)
!10294 = !DILocation(line: 5445, column: 17, scope: !10292)
!10295 = !DILocation(line: 5448, column: 31, scope: !10282)
!10296 = !DILocation(line: 5449, column: 31, scope: !10282)
!10297 = !DILocation(line: 5448, column: 20, scope: !10282)
!10298 = !DILocalVariable(name: "tfo", scope: !10299, file: !3, line: 5453, type: !326)
!10299 = distinct !DILexicalBlock(scope: !10282, file: !3, line: 5452, column: 13)
!10300 = !DILocation(line: 5453, column: 21, scope: !10299)
!10301 = !DILocation(line: 5453, column: 27, scope: !10299)
!10302 = !DILocation(line: 5453, column: 36, scope: !10299)
!10303 = !DILocation(line: 5453, column: 48, scope: !10299)
!10304 = !DILocation(line: 5453, column: 57, scope: !10299)
!10305 = !DILocation(line: 5453, column: 46, scope: !10299)
!10306 = !DILocation(line: 5454, column: 28, scope: !10299)
!10307 = !DILocation(line: 5455, column: 28, scope: !10299)
!10308 = !DILocation(line: 5454, column: 17, scope: !10299)
!10309 = !DILocation(line: 5458, column: 22, scope: !10310)
!10310 = distinct !DILexicalBlock(scope: !10282, file: !3, line: 5458, column: 17)
!10311 = !DILocation(line: 5458, column: 33, scope: !10310)
!10312 = !DILocation(line: 5458, column: 39, scope: !10310)
!10313 = !DILocation(line: 5459, column: 34, scope: !10310)
!10314 = !DILocation(line: 5459, column: 40, scope: !10310)
!10315 = !DILocation(line: 5458, column: 17, scope: !10310)
!10316 = !DILocation(line: 5459, column: 52, scope: !10310)
!10317 = !DILocation(line: 5459, column: 57, scope: !10310)
!10318 = !DILocation(line: 5460, column: 24, scope: !10310)
!10319 = !DILocation(line: 5460, column: 35, scope: !10310)
!10320 = !DILocation(line: 5460, column: 44, scope: !10310)
!10321 = !DILocation(line: 5461, column: 29, scope: !10310)
!10322 = !DILocation(line: 5461, column: 38, scope: !10310)
!10323 = !DILocation(line: 5461, column: 27, scope: !10310)
!10324 = !DILocation(line: 5460, column: 17, scope: !10310)
!10325 = !DILocation(line: 5461, column: 62, scope: !10310)
!10326 = !DILocation(line: 5458, column: 17, scope: !10282)
!10327 = !DILocation(line: 5462, column: 30, scope: !10328)
!10328 = distinct !DILexicalBlock(scope: !10310, file: !3, line: 5461, column: 68)
!10329 = !DILocation(line: 5462, column: 17, scope: !10328)
!10330 = !DILocation(line: 5463, column: 17, scope: !10328)
!10331 = !DILocation(line: 5465, column: 26, scope: !10282)
!10332 = !DILocation(line: 5465, column: 13, scope: !10282)
!10333 = !DILocation(line: 5466, column: 30, scope: !10282)
!10334 = !DILocation(line: 5466, column: 13, scope: !10282)
!10335 = !DILocation(line: 5467, column: 9, scope: !10282)
!10336 = !DILocation(line: 5468, column: 5, scope: !10272)
!10337 = !DILocation(line: 5469, column: 9, scope: !10338)
!10338 = distinct !DILexicalBlock(scope: !10153, file: !3, line: 5469, column: 9)
!10339 = !DILocation(line: 5469, column: 18, scope: !10338)
!10340 = !DILocation(line: 5469, column: 24, scope: !10338)
!10341 = !DILocation(line: 5469, column: 27, scope: !10338)
!10342 = !DILocation(line: 5469, column: 37, scope: !10338)
!10343 = !DILocation(line: 5469, column: 9, scope: !10153)
!10344 = !DILocation(line: 5471, column: 9, scope: !10345)
!10345 = distinct !DILexicalBlock(scope: !10338, file: !3, line: 5469, column: 44)
!10346 = !DILocation(line: 5471, column: 15, scope: !10345)
!10347 = !DILocation(line: 5473, column: 9, scope: !10345)
!10348 = !DILocation(line: 5475, column: 5, scope: !10153)
!10349 = !DILocation(line: 5476, column: 5, scope: !10153)
!10350 = !DILocation(line: 5477, column: 5, scope: !10153)
!10351 = !DILocalVariable(name: "__d0", scope: !10352, file: !3, line: 5477, type: !326)
!10352 = distinct !DILexicalBlock(scope: !10153, file: !3, line: 5477, column: 5)
!10353 = !DILocation(line: 5477, column: 5, scope: !10352)
!10354 = !DILocalVariable(name: "__d1", scope: !10352, file: !3, line: 5477, type: !326)
!10355 = !{i32 -2145776588}
!10356 = !DILocation(line: 5478, column: 9, scope: !10357)
!10357 = distinct !DILexicalBlock(scope: !10153, file: !3, line: 5478, column: 9)
!10358 = !DILocation(line: 5478, column: 20, scope: !10357)
!10359 = !DILocation(line: 5478, column: 18, scope: !10357)
!10360 = !DILocation(line: 5478, column: 9, scope: !10153)
!10361 = !DILocation(line: 5479, column: 18, scope: !10362)
!10362 = distinct !DILexicalBlock(scope: !10357, file: !3, line: 5478, column: 31)
!10363 = !DILocation(line: 5479, column: 16, scope: !10362)
!10364 = !DILocation(line: 5480, column: 5, scope: !10362)
!10365 = !DILocation(line: 5481, column: 18, scope: !10366)
!10366 = distinct !DILexicalBlock(scope: !10357, file: !3, line: 5480, column: 12)
!10367 = !DILocation(line: 5481, column: 16, scope: !10366)
!10368 = !DILocation(line: 5483, column: 11, scope: !10153)
!10369 = !DILocation(line: 5484, column: 5, scope: !10153)
!10370 = !DILocation(line: 5484, column: 12, scope: !10153)
!10371 = !DILocation(line: 5484, column: 24, scope: !10153)
!10372 = !DILocation(line: 5485, column: 21, scope: !10373)
!10373 = distinct !DILexicalBlock(scope: !10153, file: !3, line: 5484, column: 30)
!10374 = !DILocation(line: 5485, column: 9, scope: !10373)
!10375 = !DILocation(line: 5486, column: 21, scope: !10373)
!10376 = !DILocation(line: 5486, column: 9, scope: !10373)
!10377 = !DILocation(line: 5489, column: 23, scope: !10373)
!10378 = !DILocation(line: 5489, column: 9, scope: !10373)
!10379 = !DILocation(line: 5490, column: 9, scope: !10373)
!10380 = distinct !{!10380, !10369, !10381}
!10381 = !DILocation(line: 5504, column: 5, scope: !10153)
!10382 = !DILocation(line: 5505, column: 1, scope: !10153)
!10383 = distinct !DISubprogram(name: "doit", scope: !3, file: !3, line: 4912, type: !486, scopeLine: 4913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!10384 = !DILocalVariable(name: "socksize", scope: !10383, file: !3, line: 4914, type: !310)
!10385 = !DILocation(line: 4914, column: 15, scope: !10383)
!10386 = !DILocalVariable(name: "users", scope: !10383, file: !3, line: 4915, type: !7)
!10387 = !DILocation(line: 4915, column: 18, scope: !10383)
!10388 = !DILocalVariable(name: "display_banner", scope: !10383, file: !3, line: 4916, type: !326)
!10389 = !DILocation(line: 4916, column: 9, scope: !10383)
!10390 = !DILocation(line: 4918, column: 5, scope: !10383)
!10391 = !DILocation(line: 4919, column: 26, scope: !10383)
!10392 = !DILocation(line: 4919, column: 24, scope: !10383)
!10393 = !DILocation(line: 4920, column: 5, scope: !10383)
!10394 = !DILocation(line: 4922, column: 11, scope: !10383)
!10395 = !DILocation(line: 4922, column: 31, scope: !10383)
!10396 = !DILocation(line: 4922, column: 5, scope: !10383)
!10397 = !DILocation(line: 4924, column: 5, scope: !10383)
!10398 = !DILocation(line: 4925, column: 5, scope: !10383)
!10399 = !DILocation(line: 4926, column: 12, scope: !10383)
!10400 = !DILocation(line: 4927, column: 14, scope: !10383)
!10401 = !DILocation(line: 4933, column: 5, scope: !10383)
!10402 = !DILocation(line: 4934, column: 9, scope: !10403)
!10403 = distinct !DILexicalBlock(scope: !10383, file: !3, line: 4934, column: 9)
!10404 = !DILocation(line: 4934, column: 35, scope: !10403)
!10405 = !DILocation(line: 4934, column: 9, scope: !10383)
!10406 = !DILocation(line: 4935, column: 9, scope: !10407)
!10407 = distinct !DILexicalBlock(scope: !10403, file: !3, line: 4934, column: 41)
!10408 = !DILocation(line: 4937, column: 9, scope: !10409)
!10409 = distinct !DILexicalBlock(scope: !10383, file: !3, line: 4937, column: 9)
!10410 = !DILocation(line: 4937, column: 34, scope: !10409)
!10411 = !DILocation(line: 4937, column: 9, scope: !10383)
!10412 = !DILocation(line: 4938, column: 40, scope: !10413)
!10413 = distinct !DILexicalBlock(scope: !10409, file: !3, line: 4937, column: 47)
!10414 = !DILocation(line: 4938, column: 22, scope: !10413)
!10415 = !DILocation(line: 4938, column: 20, scope: !10413)
!10416 = !DILocation(line: 4939, column: 5, scope: !10413)
!10417 = !DILocation(line: 4940, column: 40, scope: !10418)
!10418 = distinct !DILexicalBlock(scope: !10409, file: !3, line: 4939, column: 12)
!10419 = !DILocation(line: 4940, column: 22, scope: !10418)
!10420 = !DILocation(line: 4940, column: 20, scope: !10418)
!10421 = !DILocation(line: 4942, column: 9, scope: !10422)
!10422 = distinct !DILexicalBlock(scope: !10383, file: !3, line: 4942, column: 9)
!10423 = !DILocation(line: 4942, column: 19, scope: !10422)
!10424 = !DILocation(line: 4942, column: 27, scope: !10422)
!10425 = !DILocation(line: 4942, column: 49, scope: !10422)
!10426 = !DILocation(line: 4942, column: 30, scope: !10422)
!10427 = !DILocation(line: 4942, column: 60, scope: !10422)
!10428 = !DILocation(line: 4942, column: 9, scope: !10383)
!10429 = !DILocation(line: 4943, column: 18, scope: !10430)
!10430 = distinct !DILexicalBlock(scope: !10422, file: !3, line: 4942, column: 66)
!10431 = !DILocation(line: 4944, column: 5, scope: !10430)
!10432 = !DILocation(line: 4945, column: 14, scope: !10383)
!10433 = !DILocation(line: 4949, column: 5, scope: !10383)
!10434 = !DILocation(line: 4950, column: 9, scope: !10435)
!10435 = distinct !DILexicalBlock(scope: !10383, file: !3, line: 4950, column: 9)
!10436 = !DILocation(line: 4950, column: 31, scope: !10435)
!10437 = !DILocation(line: 4950, column: 9, scope: !10383)
!10438 = !DILocation(line: 4951, column: 9, scope: !10439)
!10439 = distinct !DILexicalBlock(scope: !10435, file: !3, line: 4950, column: 37)
!10440 = !DILocation(line: 4954, column: 5, scope: !10383)
!10441 = !DILocalVariable(name: "eai", scope: !10442, file: !3, line: 4955, type: !326)
!10442 = distinct !DILexicalBlock(scope: !10443, file: !3, line: 4954, column: 14)
!10443 = distinct !DILexicalBlock(scope: !10444, file: !3, line: 4954, column: 5)
!10444 = distinct !DILexicalBlock(scope: !10383, file: !3, line: 4954, column: 5)
!10445 = !DILocation(line: 4955, column: 13, scope: !10442)
!10446 = !DILocation(line: 4958, column: 42, scope: !10447)
!10447 = distinct !DILexicalBlock(scope: !10442, file: !3, line: 4957, column: 13)
!10448 = !DILocation(line: 4960, column: 15, scope: !10447)
!10449 = !DILocation(line: 4960, column: 33, scope: !10447)
!10450 = !DILocation(line: 4957, column: 20, scope: !10447)
!10451 = !DILocation(line: 4957, column: 18, scope: !10447)
!10452 = !DILocation(line: 4960, column: 61, scope: !10447)
!10453 = !DILocation(line: 4957, column: 13, scope: !10442)
!10454 = !DILocation(line: 4961, column: 13, scope: !10455)
!10455 = distinct !DILexicalBlock(scope: !10447, file: !3, line: 4960, column: 67)
!10456 = !DILocation(line: 4963, column: 13, scope: !10457)
!10457 = distinct !DILexicalBlock(scope: !10442, file: !3, line: 4963, column: 13)
!10458 = !DILocation(line: 4963, column: 31, scope: !10457)
!10459 = !DILocation(line: 4963, column: 36, scope: !10457)
!10460 = !DILocation(line: 4965, column: 41, scope: !10457)
!10461 = !DILocation(line: 4964, column: 13, scope: !10457)
!10462 = !DILocation(line: 4966, column: 62, scope: !10457)
!10463 = !DILocation(line: 4963, column: 13, scope: !10442)
!10464 = !DILocation(line: 4967, column: 13, scope: !10465)
!10465 = distinct !DILexicalBlock(scope: !10457, file: !3, line: 4966, column: 68)
!10466 = !DILocation(line: 4969, column: 9, scope: !10442)
!10467 = !DILocation(line: 4973, column: 5, scope: !10383)
!10468 = !DILocation(line: 4978, column: 5, scope: !10383)
!10469 = !DILocation(line: 4980, column: 15, scope: !10383)
!10470 = !DILocation(line: 4982, column: 5, scope: !10383)
!10471 = !DILocation(line: 4984, column: 9, scope: !10472)
!10472 = distinct !DILexicalBlock(scope: !10383, file: !3, line: 4984, column: 9)
!10473 = !DILocation(line: 4984, column: 18, scope: !10472)
!10474 = !DILocation(line: 4984, column: 9, scope: !10383)
!10475 = !DILocation(line: 4991, column: 13, scope: !10476)
!10476 = distinct !DILexicalBlock(scope: !10477, file: !3, line: 4991, column: 13)
!10477 = distinct !DILexicalBlock(scope: !10472, file: !3, line: 4984, column: 24)
!10478 = !DILocation(line: 4991, column: 13, scope: !10477)
!10479 = !DILocation(line: 4992, column: 21, scope: !10480)
!10480 = distinct !DILexicalBlock(scope: !10476, file: !3, line: 4991, column: 25)
!10481 = !DILocation(line: 4992, column: 19, scope: !10480)
!10482 = !DILocation(line: 4993, column: 9, scope: !10480)
!10483 = !DILocation(line: 4994, column: 29, scope: !10484)
!10484 = distinct !DILexicalBlock(scope: !10476, file: !3, line: 4993, column: 16)
!10485 = !DILocation(line: 4994, column: 21, scope: !10484)
!10486 = !DILocation(line: 4994, column: 19, scope: !10484)
!10487 = !DILocation(line: 4998, column: 13, scope: !10488)
!10488 = distinct !DILexicalBlock(scope: !10477, file: !3, line: 4998, column: 13)
!10489 = !DILocation(line: 4998, column: 21, scope: !10488)
!10490 = !DILocation(line: 4998, column: 19, scope: !10488)
!10491 = !DILocation(line: 4998, column: 13, scope: !10477)
!10492 = !DILocation(line: 4999, column: 58, scope: !10493)
!10493 = distinct !DILexicalBlock(scope: !10488, file: !3, line: 4998, column: 31)
!10494 = !DILocation(line: 4999, column: 42, scope: !10493)
!10495 = !DILocation(line: 4999, column: 13, scope: !10493)
!10496 = !DILocation(line: 5000, column: 13, scope: !10493)
!10497 = !DILocation(line: 5001, column: 13, scope: !10493)
!10498 = !DILocation(line: 5003, column: 5, scope: !10477)
!10499 = !DILocalVariable(name: "load_", scope: !10500, file: !3, line: 5046, type: !10501)
!10500 = distinct !DILexicalBlock(scope: !10383, file: !3, line: 5045, column: 5)
!10501 = !DICompositeType(tag: DW_TAG_array_type, baseType: !336, size: 128, elements: !798)
!10502 = !DILocation(line: 5046, column: 16, scope: !10500)
!10503 = !DILocation(line: 5048, column: 24, scope: !10504)
!10504 = distinct !DILexicalBlock(scope: !10500, file: !3, line: 5048, column: 13)
!10505 = !DILocation(line: 5048, column: 13, scope: !10504)
!10506 = !DILocation(line: 5048, column: 63, scope: !10504)
!10507 = !DILocation(line: 5048, column: 13, scope: !10500)
!10508 = !DILocation(line: 5049, column: 18, scope: !10509)
!10509 = distinct !DILexicalBlock(scope: !10504, file: !3, line: 5048, column: 68)
!10510 = !DILocation(line: 5050, column: 9, scope: !10509)
!10511 = !DILocation(line: 5051, column: 20, scope: !10512)
!10512 = distinct !DILexicalBlock(scope: !10504, file: !3, line: 5050, column: 16)
!10513 = !DILocation(line: 5051, column: 18, scope: !10512)
!10514 = !DILocation(line: 5055, column: 11, scope: !10383)
!10515 = !DILocation(line: 5056, column: 11, scope: !10383)
!10516 = !DILocation(line: 5057, column: 9, scope: !10517)
!10517 = distinct !DILexicalBlock(scope: !10383, file: !3, line: 5057, column: 9)
!10518 = !DILocation(line: 5057, column: 9, scope: !10383)
!10519 = !DILocation(line: 5058, column: 9, scope: !10520)
!10520 = distinct !DILexicalBlock(scope: !10517, file: !3, line: 5057, column: 20)
!10521 = !DILocation(line: 5085, column: 5, scope: !10383)
!10522 = !DILocation(line: 5095, column: 9, scope: !10523)
!10523 = distinct !DILexicalBlock(scope: !10383, file: !3, line: 5095, column: 9)
!10524 = !DILocation(line: 5095, column: 9, scope: !10383)
!10525 = !DILocation(line: 5103, column: 9, scope: !10526)
!10526 = distinct !DILexicalBlock(scope: !10523, file: !3, line: 5095, column: 25)
!10527 = !DILocation(line: 5107, column: 13, scope: !10528)
!10528 = distinct !DILexicalBlock(scope: !10526, file: !3, line: 5107, column: 13)
!10529 = !DILocation(line: 5107, column: 19, scope: !10528)
!10530 = !DILocation(line: 5107, column: 13, scope: !10526)
!10531 = !DILocation(line: 5108, column: 39, scope: !10532)
!10532 = distinct !DILexicalBlock(scope: !10528, file: !3, line: 5107, column: 25)
!10533 = !DILocation(line: 5108, column: 46, scope: !10532)
!10534 = !DILocation(line: 5108, column: 13, scope: !10532)
!10535 = !DILocation(line: 5109, column: 9, scope: !10532)
!10536 = !DILocalVariable(name: "t", scope: !10537, file: !3, line: 5111, type: !3130)
!10537 = distinct !DILexicalBlock(scope: !10526, file: !3, line: 5110, column: 9)
!10538 = !DILocation(line: 5111, column: 24, scope: !10537)
!10539 = !DILocation(line: 5113, column: 22, scope: !10540)
!10540 = distinct !DILexicalBlock(scope: !10537, file: !3, line: 5113, column: 17)
!10541 = !DILocation(line: 5113, column: 20, scope: !10540)
!10542 = !DILocation(line: 5113, column: 54, scope: !10540)
!10543 = !DILocation(line: 5113, column: 17, scope: !10537)
!10544 = !DILocation(line: 5115, column: 26, scope: !10545)
!10545 = distinct !DILexicalBlock(scope: !10540, file: !3, line: 5113, column: 63)
!10546 = !DILocation(line: 5115, column: 29, scope: !10545)
!10547 = !DILocation(line: 5115, column: 38, scope: !10545)
!10548 = !DILocation(line: 5115, column: 41, scope: !10545)
!10549 = !DILocation(line: 5115, column: 64, scope: !10545)
!10550 = !DILocation(line: 5115, column: 49, scope: !10545)
!10551 = !DILocation(line: 5114, column: 17, scope: !10545)
!10552 = !DILocation(line: 5116, column: 13, scope: !10545)
!10553 = !DILocation(line: 5118, column: 5, scope: !10526)
!10554 = !DILocation(line: 5119, column: 9, scope: !10555)
!10555 = distinct !DILexicalBlock(scope: !10383, file: !3, line: 5119, column: 9)
!10556 = !DILocation(line: 5119, column: 19, scope: !10555)
!10557 = !DILocation(line: 5119, column: 9, scope: !10383)
!10558 = !DILocation(line: 5120, column: 9, scope: !10559)
!10559 = distinct !DILexicalBlock(scope: !10555, file: !3, line: 5119, column: 24)
!10560 = !DILocation(line: 5121, column: 5, scope: !10559)
!10561 = !DILocation(line: 5121, column: 16, scope: !10562)
!10562 = distinct !DILexicalBlock(scope: !10555, file: !3, line: 5121, column: 16)
!10563 = !DILocation(line: 5121, column: 26, scope: !10562)
!10564 = !DILocation(line: 5121, column: 16, scope: !10555)
!10565 = !DILocation(line: 5122, column: 9, scope: !10566)
!10566 = distinct !DILexicalBlock(scope: !10562, file: !3, line: 5121, column: 31)
!10567 = !DILocation(line: 5123, column: 5, scope: !10566)
!10568 = !DILocation(line: 5124, column: 9, scope: !10569)
!10569 = distinct !DILexicalBlock(scope: !10383, file: !3, line: 5124, column: 9)
!10570 = !DILocation(line: 5124, column: 18, scope: !10569)
!10571 = !DILocation(line: 5124, column: 9, scope: !10383)
!10572 = !DILocation(line: 5125, column: 9, scope: !10573)
!10573 = distinct !DILexicalBlock(scope: !10569, file: !3, line: 5124, column: 24)
!10574 = !DILocation(line: 5126, column: 5, scope: !10573)
!10575 = !DILocation(line: 5137, column: 9, scope: !10576)
!10576 = distinct !DILexicalBlock(scope: !10383, file: !3, line: 5137, column: 9)
!10577 = !DILocation(line: 5137, column: 9, scope: !10383)
!10578 = !DILocation(line: 5138, column: 13, scope: !10579)
!10579 = distinct !DILexicalBlock(scope: !10580, file: !3, line: 5138, column: 13)
!10580 = distinct !DILexicalBlock(scope: !10576, file: !3, line: 5137, column: 25)
!10581 = !DILocation(line: 5138, column: 21, scope: !10579)
!10582 = !DILocation(line: 5138, column: 26, scope: !10579)
!10583 = !DILocation(line: 5138, column: 29, scope: !10579)
!10584 = !DILocation(line: 5138, column: 50, scope: !10579)
!10585 = !DILocation(line: 5138, column: 13, scope: !10580)
!10586 = !DILocation(line: 5139, column: 13, scope: !10587)
!10587 = distinct !DILexicalBlock(scope: !10579, file: !3, line: 5138, column: 63)
!10588 = !DILocation(line: 5140, column: 9, scope: !10587)
!10589 = !DILocation(line: 5141, column: 13, scope: !10590)
!10590 = distinct !DILexicalBlock(scope: !10580, file: !3, line: 5141, column: 13)
!10591 = !DILocation(line: 5141, column: 22, scope: !10590)
!10592 = !DILocation(line: 5141, column: 13, scope: !10580)
!10593 = !DILocation(line: 5142, column: 44, scope: !10594)
!10594 = distinct !DILexicalBlock(scope: !10590, file: !3, line: 5141, column: 32)
!10595 = !DILocation(line: 5142, column: 53, scope: !10594)
!10596 = !DILocation(line: 5142, column: 13, scope: !10594)
!10597 = !DILocation(line: 5143, column: 9, scope: !10594)
!10598 = !DILocation(line: 5144, column: 60, scope: !10599)
!10599 = distinct !DILexicalBlock(scope: !10590, file: !3, line: 5143, column: 16)
!10600 = !DILocation(line: 5144, column: 13, scope: !10599)
!10601 = !DILocation(line: 5146, column: 5, scope: !10580)
!10602 = !DILocation(line: 5147, column: 35, scope: !10383)
!10603 = !DILocation(line: 5147, column: 43, scope: !10383)
!10604 = !DILocation(line: 5147, column: 51, scope: !10383)
!10605 = !DILocation(line: 5147, column: 55, scope: !10383)
!10606 = !DILocation(line: 5147, column: 62, scope: !10383)
!10607 = !DILocation(line: 5147, column: 60, scope: !10383)
!10608 = !DILocation(line: 5147, column: 19, scope: !10383)
!10609 = !DILocation(line: 5147, column: 17, scope: !10383)
!10610 = !DILocation(line: 5149, column: 9, scope: !10611)
!10611 = distinct !DILexicalBlock(scope: !10383, file: !3, line: 5149, column: 9)
!10612 = !DILocation(line: 5149, column: 28, scope: !10611)
!10613 = !DILocation(line: 5149, column: 9, scope: !10383)
!10614 = !DILocalVariable(name: "hints", scope: !10615, file: !3, line: 5150, type: !10157)
!10615 = distinct !DILexicalBlock(scope: !10611, file: !3, line: 5149, column: 37)
!10616 = !DILocation(line: 5150, column: 25, scope: !10615)
!10617 = !DILocalVariable(name: "res", scope: !10615, file: !3, line: 5150, type: !10168)
!10618 = !DILocation(line: 5150, column: 33, scope: !10615)
!10619 = !DILocation(line: 5152, column: 9, scope: !10615)
!10620 = !DILocation(line: 5153, column: 15, scope: !10615)
!10621 = !DILocation(line: 5153, column: 25, scope: !10615)
!10622 = !DILocation(line: 5154, column: 15, scope: !10615)
!10623 = !DILocation(line: 5154, column: 23, scope: !10615)
!10624 = !DILocation(line: 5155, column: 25, scope: !10625)
!10625 = distinct !DILexicalBlock(scope: !10615, file: !3, line: 5155, column: 13)
!10626 = !DILocation(line: 5155, column: 13, scope: !10625)
!10627 = !DILocation(line: 5155, column: 65, scope: !10625)
!10628 = !DILocation(line: 5155, column: 70, scope: !10625)
!10629 = !DILocation(line: 5156, column: 13, scope: !10625)
!10630 = !DILocation(line: 5156, column: 18, scope: !10625)
!10631 = !DILocation(line: 5156, column: 28, scope: !10625)
!10632 = !DILocation(line: 5156, column: 39, scope: !10625)
!10633 = !DILocation(line: 5157, column: 13, scope: !10625)
!10634 = !DILocation(line: 5157, column: 18, scope: !10625)
!10635 = !DILocation(line: 5157, column: 29, scope: !10625)
!10636 = !DILocation(line: 5155, column: 13, scope: !10615)
!10637 = !DILocation(line: 5158, column: 13, scope: !10638)
!10638 = distinct !DILexicalBlock(scope: !10625, file: !3, line: 5157, column: 56)
!10639 = !DILocation(line: 5160, column: 35, scope: !10615)
!10640 = !DILocation(line: 5160, column: 40, scope: !10615)
!10641 = !DILocation(line: 5160, column: 9, scope: !10615)
!10642 = !DILocation(line: 5160, column: 49, scope: !10615)
!10643 = !DILocation(line: 5160, column: 54, scope: !10615)
!10644 = !DILocation(line: 5161, column: 22, scope: !10615)
!10645 = !DILocation(line: 5161, column: 9, scope: !10615)
!10646 = !DILocation(line: 5162, column: 5, scope: !10615)
!10647 = !DILocation(line: 5170, column: 5, scope: !10383)
!10648 = !DILocation(line: 5172, column: 5, scope: !10383)
!10649 = !DILocation(line: 5173, column: 5, scope: !10383)
!10650 = !DILocation(line: 5174, column: 5, scope: !10383)
!10651 = !DILocation(line: 5178, column: 1, scope: !10383)
!10652 = !DILocation(line: 4679, column: 33, scope: !807)
!10653 = !DILocation(line: 4679, column: 18, scope: !807)
!10654 = !DILocation(line: 4680, column: 5, scope: !807)
!10655 = !DILocation(line: 4681, column: 33, scope: !807)
!10656 = !DILocation(line: 4681, column: 18, scope: !807)
!10657 = !DILocation(line: 4684, column: 33, scope: !807)
!10658 = !DILocation(line: 4684, column: 18, scope: !807)
!10659 = !DILocation(line: 4685, column: 5, scope: !807)
!10660 = !DILocation(line: 4688, column: 1, scope: !807)
!10661 = distinct !DISubprogram(name: "set_signals_client", scope: !3, file: !3, line: 4795, type: !486, scopeLine: 4796, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!10662 = !DILocalVariable(name: "sigs", scope: !10661, file: !3, line: 4797, type: !500)
!10663 = !DILocation(line: 4797, column: 14, scope: !10661)
!10664 = !DILocalVariable(name: "sa", scope: !10661, file: !3, line: 4798, type: !9772)
!10665 = !DILocation(line: 4798, column: 22, scope: !10661)
!10666 = !DILocation(line: 4800, column: 5, scope: !10661)
!10667 = !DILocation(line: 4801, column: 21, scope: !10661)
!10668 = !DILocation(line: 4801, column: 5, scope: !10661)
!10669 = !DILocation(line: 4803, column: 8, scope: !10661)
!10670 = !DILocation(line: 4803, column: 17, scope: !10661)
!10671 = !DILocation(line: 4805, column: 8, scope: !10661)
!10672 = !DILocation(line: 4805, column: 19, scope: !10661)
!10673 = !DILocation(line: 4806, column: 12, scope: !10661)
!10674 = !DILocation(line: 4807, column: 12, scope: !10661)
!10675 = !DILocation(line: 4809, column: 12, scope: !10661)
!10676 = !DILocation(line: 4812, column: 8, scope: !10661)
!10677 = !DILocation(line: 4812, column: 19, scope: !10661)
!10678 = !DILocation(line: 4813, column: 5, scope: !10661)
!10679 = !DILocation(line: 4814, column: 12, scope: !10661)
!10680 = !DILocation(line: 4816, column: 12, scope: !10661)
!10681 = !DILocation(line: 4817, column: 5, scope: !10661)
!10682 = !DILocation(line: 4819, column: 8, scope: !10661)
!10683 = !DILocation(line: 4819, column: 17, scope: !10661)
!10684 = !DILocation(line: 4821, column: 8, scope: !10661)
!10685 = !DILocation(line: 4821, column: 19, scope: !10661)
!10686 = !DILocation(line: 4822, column: 5, scope: !10661)
!10687 = !DILocation(line: 4823, column: 12, scope: !10661)
!10688 = !DILocation(line: 4825, column: 8, scope: !10661)
!10689 = !DILocation(line: 4825, column: 19, scope: !10661)
!10690 = !DILocation(line: 4826, column: 5, scope: !10661)
!10691 = !DILocation(line: 4827, column: 12, scope: !10661)
!10692 = !DILocation(line: 4828, column: 5, scope: !10661)
!10693 = !DILocation(line: 4829, column: 12, scope: !10661)
!10694 = !DILocation(line: 4830, column: 5, scope: !10661)
!10695 = !DILocation(line: 4831, column: 12, scope: !10661)
!10696 = !DILocation(line: 4832, column: 5, scope: !10661)
!10697 = !DILocation(line: 4833, column: 12, scope: !10661)
!10698 = !DILocation(line: 4835, column: 5, scope: !10661)
!10699 = !DILocation(line: 4836, column: 12, scope: !10661)
!10700 = !DILocation(line: 4838, column: 12, scope: !10661)
!10701 = !DILocation(line: 4839, column: 1, scope: !10661)
!10702 = distinct !DISubprogram(name: "checkvalidaddr", scope: !3, file: !3, line: 527, type: !10703, scopeLine: 528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!10703 = !DISubroutineType(types: !10704)
!10704 = !{!326, !546}
!10705 = !DILocalVariable(name: "addr", arg: 1, scope: !10702, file: !3, line: 527, type: !546)
!10706 = !DILocation(line: 527, column: 65, scope: !10702)
!10707 = !DILocation(line: 529, column: 9, scope: !10708)
!10708 = distinct !DILexicalBlock(scope: !10702, file: !3, line: 529, column: 9)
!10709 = !DILocation(line: 529, column: 14, scope: !10708)
!10710 = !DILocation(line: 529, column: 9, scope: !10702)
!10711 = !DILocation(line: 530, column: 9, scope: !10712)
!10712 = distinct !DILexicalBlock(scope: !10708, file: !3, line: 529, column: 23)
!10713 = !DILocation(line: 536, column: 9, scope: !10714)
!10714 = distinct !DILexicalBlock(scope: !10702, file: !3, line: 536, column: 9)
!10715 = !DILocation(line: 536, column: 31, scope: !10714)
!10716 = !DILocation(line: 536, column: 9, scope: !10702)
!10717 = !DILocation(line: 537, column: 13, scope: !10718)
!10718 = distinct !DILexicalBlock(scope: !10719, file: !3, line: 537, column: 13)
!10719 = distinct !DILexicalBlock(scope: !10714, file: !3, line: 536, column: 44)
!10720 = !DILocation(line: 537, column: 71, scope: !10718)
!10721 = !DILocalVariable(name: "__a", scope: !10722, file: !3, line: 538, type: !361)
!10722 = distinct !DILexicalBlock(scope: !10718, file: !3, line: 538, column: 13)
!10723 = !DILocation(line: 538, column: 13, scope: !10722)
!10724 = !DILocation(line: 0, scope: !10722)
!10725 = !DILocation(line: 538, column: 13, scope: !10718)
!10726 = !DILocation(line: 537, column: 13, scope: !10719)
!10727 = !DILocation(line: 539, column: 13, scope: !10728)
!10728 = distinct !DILexicalBlock(scope: !10718, file: !3, line: 538, column: 74)
!10729 = !DILocation(line: 541, column: 9, scope: !10719)
!10730 = !DILocation(line: 542, column: 16, scope: !10731)
!10731 = distinct !DILexicalBlock(scope: !10714, file: !3, line: 542, column: 16)
!10732 = !DILocation(line: 542, column: 38, scope: !10731)
!10733 = !DILocation(line: 542, column: 16, scope: !10714)
!10734 = !DILocation(line: 543, column: 19, scope: !10735)
!10735 = distinct !DILexicalBlock(scope: !10736, file: !3, line: 543, column: 13)
!10736 = distinct !DILexicalBlock(scope: !10731, file: !3, line: 542, column: 50)
!10737 = !DILocation(line: 543, column: 13, scope: !10735)
!10738 = !DILocation(line: 543, column: 50, scope: !10735)
!10739 = !DILocation(line: 543, column: 64, scope: !10735)
!10740 = !DILocation(line: 544, column: 19, scope: !10735)
!10741 = !DILocation(line: 544, column: 13, scope: !10735)
!10742 = !DILocation(line: 544, column: 50, scope: !10735)
!10743 = !DILocation(line: 544, column: 65, scope: !10735)
!10744 = !DILocation(line: 545, column: 19, scope: !10735)
!10745 = !DILocation(line: 545, column: 13, scope: !10735)
!10746 = !DILocation(line: 545, column: 50, scope: !10735)
!10747 = !DILocation(line: 545, column: 70, scope: !10735)
!10748 = !DILocation(line: 546, column: 13, scope: !10735)
!10749 = !DILocation(line: 546, column: 64, scope: !10735)
!10750 = !DILocation(line: 547, column: 13, scope: !10735)
!10751 = !DILocation(line: 543, column: 13, scope: !10736)
!10752 = !DILocation(line: 548, column: 13, scope: !10753)
!10753 = distinct !DILexicalBlock(scope: !10735, file: !3, line: 547, column: 64)
!10754 = !DILocation(line: 550, column: 9, scope: !10736)
!10755 = !DILocation(line: 552, column: 5, scope: !10702)
!10756 = !DILocation(line: 553, column: 1, scope: !10702)
!10757 = distinct !DISubprogram(name: "dns_sanitize", scope: !3, file: !3, line: 4881, type: !469, scopeLine: 4882, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!10758 = !DILocalVariable(name: "z", arg: 1, scope: !10757, file: !3, line: 4881, type: !308)
!10759 = !DILocation(line: 4881, column: 32, scope: !10757)
!10760 = !DILocation(line: 4883, column: 5, scope: !10757)
!10761 = !DILocation(line: 4883, column: 13, scope: !10757)
!10762 = !DILocation(line: 4883, column: 12, scope: !10757)
!10763 = !DILocation(line: 4883, column: 15, scope: !10757)
!10764 = !DILocation(line: 4884, column: 15, scope: !10765)
!10765 = distinct !DILexicalBlock(scope: !10766, file: !3, line: 4884, column: 13)
!10766 = distinct !DILexicalBlock(scope: !10757, file: !3, line: 4883, column: 21)
!10767 = !DILocation(line: 4884, column: 14, scope: !10765)
!10768 = !DILocation(line: 4884, column: 17, scope: !10765)
!10769 = !DILocation(line: 4884, column: 24, scope: !10765)
!10770 = !DILocation(line: 4884, column: 28, scope: !10765)
!10771 = !DILocation(line: 4884, column: 27, scope: !10765)
!10772 = !DILocation(line: 4884, column: 30, scope: !10765)
!10773 = !DILocation(line: 4884, column: 38, scope: !10765)
!10774 = !DILocation(line: 4885, column: 15, scope: !10765)
!10775 = !DILocation(line: 4885, column: 14, scope: !10765)
!10776 = !DILocation(line: 4885, column: 17, scope: !10765)
!10777 = !DILocation(line: 4885, column: 24, scope: !10765)
!10778 = !DILocation(line: 4885, column: 28, scope: !10765)
!10779 = !DILocation(line: 4885, column: 27, scope: !10765)
!10780 = !DILocation(line: 4885, column: 30, scope: !10765)
!10781 = !DILocation(line: 4885, column: 38, scope: !10765)
!10782 = !DILocation(line: 4886, column: 14, scope: !10765)
!10783 = !DILocation(line: 4886, column: 13, scope: !10765)
!10784 = !DILocation(line: 4886, column: 16, scope: !10765)
!10785 = !DILocation(line: 4886, column: 23, scope: !10765)
!10786 = !DILocation(line: 4886, column: 27, scope: !10765)
!10787 = !DILocation(line: 4886, column: 26, scope: !10765)
!10788 = !DILocation(line: 4886, column: 29, scope: !10765)
!10789 = !DILocation(line: 4886, column: 36, scope: !10765)
!10790 = !DILocation(line: 4886, column: 40, scope: !10765)
!10791 = !DILocation(line: 4886, column: 39, scope: !10765)
!10792 = !DILocation(line: 4886, column: 42, scope: !10765)
!10793 = !DILocation(line: 4886, column: 49, scope: !10765)
!10794 = !DILocation(line: 4887, column: 15, scope: !10765)
!10795 = !DILocation(line: 4887, column: 14, scope: !10765)
!10796 = !DILocation(line: 4887, column: 17, scope: !10765)
!10797 = !DILocation(line: 4887, column: 24, scope: !10765)
!10798 = !DILocation(line: 4887, column: 28, scope: !10765)
!10799 = !DILocation(line: 4887, column: 27, scope: !10765)
!10800 = !DILocation(line: 4887, column: 30, scope: !10765)
!10801 = !DILocation(line: 4884, column: 13, scope: !10766)
!10802 = !DILocation(line: 4889, column: 9, scope: !10803)
!10803 = distinct !DILexicalBlock(scope: !10765, file: !3, line: 4887, column: 39)
!10804 = !DILocation(line: 4890, column: 14, scope: !10805)
!10805 = distinct !DILexicalBlock(scope: !10765, file: !3, line: 4889, column: 16)
!10806 = !DILocation(line: 4890, column: 16, scope: !10805)
!10807 = !DILocation(line: 4892, column: 10, scope: !10766)
!10808 = distinct !{!10808, !10760, !10809}
!10809 = !DILocation(line: 4893, column: 5, scope: !10757)
!10810 = !DILocation(line: 4894, column: 1, scope: !10757)
!10811 = distinct !DISubprogram(name: "fill_atomic_prefix", scope: !3, file: !3, line: 4896, type: !486, scopeLine: 4897, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!10812 = !DILocalVariable(name: "tmp_atomic_prefix", scope: !10811, file: !3, line: 4898, type: !741)
!10813 = !DILocation(line: 4898, column: 10, scope: !10811)
!10814 = !DILocation(line: 4900, column: 14, scope: !10811)
!10815 = !DILocation(line: 4903, column: 30, scope: !10811)
!10816 = !DILocation(line: 4904, column: 29, scope: !10811)
!10817 = !DILocation(line: 4904, column: 14, scope: !10811)
!10818 = !DILocation(line: 4905, column: 30, scope: !10811)
!10819 = !DILocation(line: 4905, column: 14, scope: !10811)
!10820 = !DILocation(line: 4906, column: 14, scope: !10811)
!10821 = !DILocation(line: 4900, column: 5, scope: !10811)
!10822 = !DILocation(line: 4907, column: 33, scope: !10823)
!10823 = distinct !DILexicalBlock(scope: !10811, file: !3, line: 4907, column: 9)
!10824 = !DILocation(line: 4907, column: 26, scope: !10823)
!10825 = !DILocation(line: 4907, column: 24, scope: !10823)
!10826 = !DILocation(line: 4907, column: 53, scope: !10823)
!10827 = !DILocation(line: 4907, column: 9, scope: !10811)
!10828 = !DILocation(line: 4908, column: 9, scope: !10829)
!10829 = distinct !DILexicalBlock(scope: !10823, file: !3, line: 4907, column: 62)
!10830 = !DILocation(line: 4910, column: 1, scope: !10811)
!10831 = distinct !DISubprogram(name: "sigalarm", scope: !3, file: !3, line: 377, type: !390, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!10832 = !DILocalVariable(name: "sig", arg: 1, scope: !10831, file: !3, line: 377, type: !326)
!10833 = !DILocation(line: 377, column: 32, scope: !10831)
!10834 = !DILocation(line: 379, column: 12, scope: !10831)
!10835 = !DILocation(line: 380, column: 5, scope: !10831)
!10836 = !DILocation(line: 381, column: 5, scope: !10831)
!10837 = distinct !DISubprogram(name: "sigterm_client", scope: !3, file: !3, line: 416, type: !390, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!10838 = !DILocalVariable(name: "sig", arg: 1, scope: !10837, file: !3, line: 416, type: !326)
!10839 = !DILocation(line: 416, column: 38, scope: !10837)
!10840 = !DILocation(line: 418, column: 12, scope: !10837)
!10841 = !DILocation(line: 420, column: 5, scope: !10837)
!10842 = !DILocation(line: 421, column: 5, scope: !10837)
!10843 = distinct !DISubprogram(name: "set_cloexec_flag", scope: !3, file: !3, line: 442, type: !803, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!10844 = !DILocalVariable(name: "fd", arg: 1, scope: !10843, file: !3, line: 442, type: !731)
!10845 = !DILocation(line: 442, column: 40, scope: !10843)
!10846 = !DILocation(line: 444, column: 11, scope: !10843)
!10847 = !DILocation(line: 444, column: 5, scope: !10843)
!10848 = !DILocation(line: 445, column: 1, scope: !10843)
!10849 = distinct !DISubprogram(name: "updatepidfile", scope: !3, file: !3, line: 5193, type: !486, scopeLine: 5194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!10850 = !DILocalVariable(name: "fd", scope: !10849, file: !3, line: 5195, type: !326)
!10851 = !DILocation(line: 5195, column: 9, scope: !10849)
!10852 = !DILocalVariable(name: "buf", scope: !10849, file: !3, line: 5196, type: !10853)
!10853 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 336, elements: !10854)
!10854 = !{!10855}
!10855 = !DISubrange(count: 42)
!10856 = !DILocation(line: 5196, column: 10, scope: !10849)
!10857 = !DILocalVariable(name: "buf_len", scope: !10849, file: !3, line: 5197, type: !304)
!10858 = !DILocation(line: 5197, column: 12, scope: !10849)
!10859 = !DILocation(line: 5199, column: 9, scope: !10860)
!10860 = distinct !DILexicalBlock(scope: !10849, file: !3, line: 5199, column: 9)
!10861 = !DILocation(line: 5199, column: 9, scope: !10849)
!10862 = !DILocation(line: 5201, column: 9, scope: !10863)
!10863 = distinct !DILexicalBlock(scope: !10860, file: !3, line: 5200, column: 66)
!10864 = !DILocation(line: 5204, column: 9, scope: !10865)
!10865 = distinct !DILexicalBlock(scope: !10849, file: !3, line: 5204, column: 9)
!10866 = !DILocation(line: 5204, column: 15, scope: !10865)
!10867 = !DILocation(line: 5204, column: 9, scope: !10849)
!10868 = !DILocation(line: 5205, column: 9, scope: !10869)
!10869 = distinct !DILexicalBlock(scope: !10865, file: !3, line: 5204, column: 26)
!10870 = !DILocation(line: 5207, column: 20, scope: !10871)
!10871 = distinct !DILexicalBlock(scope: !10849, file: !3, line: 5207, column: 9)
!10872 = !DILocation(line: 5207, column: 15, scope: !10871)
!10873 = !DILocation(line: 5207, column: 13, scope: !10871)
!10874 = !DILocation(line: 5208, column: 48, scope: !10871)
!10875 = !DILocation(line: 5207, column: 9, scope: !10849)
!10876 = !DILocation(line: 5209, column: 9, scope: !10877)
!10877 = distinct !DILexicalBlock(scope: !10871, file: !3, line: 5208, column: 55)
!10878 = !DILocation(line: 5211, column: 22, scope: !10849)
!10879 = !DILocation(line: 5211, column: 15, scope: !10849)
!10880 = !DILocation(line: 5211, column: 13, scope: !10849)
!10881 = !DILocation(line: 5212, column: 20, scope: !10882)
!10882 = distinct !DILexicalBlock(scope: !10849, file: !3, line: 5212, column: 9)
!10883 = !DILocation(line: 5212, column: 24, scope: !10882)
!10884 = !DILocation(line: 5212, column: 29, scope: !10882)
!10885 = !DILocation(line: 5212, column: 9, scope: !10882)
!10886 = !DILocation(line: 5212, column: 55, scope: !10882)
!10887 = !DILocation(line: 5212, column: 42, scope: !10882)
!10888 = !DILocation(line: 5212, column: 9, scope: !10849)
!10889 = !DILocation(line: 5213, column: 26, scope: !10890)
!10890 = distinct !DILexicalBlock(scope: !10882, file: !3, line: 5212, column: 64)
!10891 = !DILocation(line: 5213, column: 16, scope: !10890)
!10892 = !DILocation(line: 5214, column: 5, scope: !10890)
!10893 = !DILocation(line: 5215, column: 18, scope: !10849)
!10894 = !DILocation(line: 5215, column: 12, scope: !10849)
!10895 = !DILocation(line: 5216, column: 1, scope: !10849)
!10896 = distinct !DISubprogram(name: "safe_fd_set", scope: !3, file: !3, line: 152, type: !10897, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!10897 = !DISubroutineType(types: !10898)
!10898 = !{null, !731, !10899}
!10899 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10900)
!10900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10175, size: 64)
!10901 = !DILocalVariable(name: "fd", arg: 1, scope: !10896, file: !3, line: 152, type: !731)
!10902 = !DILocation(line: 152, column: 35, scope: !10896)
!10903 = !DILocalVariable(name: "fds", arg: 2, scope: !10896, file: !3, line: 152, type: !10899)
!10904 = !DILocation(line: 152, column: 54, scope: !10896)
!10905 = !DILocation(line: 154, column: 9, scope: !10906)
!10906 = distinct !DILexicalBlock(scope: !10896, file: !3, line: 154, column: 9)
!10907 = !DILocation(line: 154, column: 12, scope: !10906)
!10908 = !DILocation(line: 154, column: 9, scope: !10896)
!10909 = !DILocation(line: 155, column: 9, scope: !10910)
!10910 = distinct !DILexicalBlock(scope: !10906, file: !3, line: 154, column: 19)
!10911 = !DILocation(line: 157, column: 5, scope: !10896)
!10912 = !DILocation(line: 158, column: 1, scope: !10896)
!10913 = !DILocalVariable(name: "active_listen_fd", arg: 1, scope: !802, file: !3, line: 5283, type: !731)
!10914 = !DILocation(line: 5283, column: 37, scope: !802)
!10915 = !DILocalVariable(name: "set", scope: !802, file: !3, line: 5284, type: !500)
!10916 = !DILocation(line: 5284, column: 14, scope: !802)
!10917 = !DILocalVariable(name: "sa", scope: !802, file: !3, line: 5285, type: !549)
!10918 = !DILocation(line: 5285, column: 29, scope: !802)
!10919 = !DILocalVariable(name: "dummy", scope: !802, file: !3, line: 5286, type: !310)
!10920 = !DILocation(line: 5286, column: 15, scope: !802)
!10921 = !DILocalVariable(name: "child", scope: !802, file: !3, line: 5287, type: !392)
!10922 = !DILocation(line: 5287, column: 11, scope: !802)
!10923 = !DILocation(line: 5289, column: 5, scope: !802)
!10924 = !DILocation(line: 5290, column: 11, scope: !802)
!10925 = !DILocation(line: 5292, column: 31, scope: !802)
!10926 = !DILocation(line: 5292, column: 29, scope: !802)
!10927 = !DILocation(line: 5292, column: 14, scope: !802)
!10928 = !DILocalVariable(name: "peer_addr", scope: !802, file: !3, line: 5294, type: !2143)
!10929 = !DILocation(line: 5294, column: 24, scope: !802)
!10930 = !DILocation(line: 5295, column: 5, scope: !802)
!10931 = !DILocation(line: 5296, column: 15, scope: !802)
!10932 = !DILocation(line: 5296, column: 26, scope: !802)
!10933 = !DILocation(line: 5297, column: 33, scope: !802)
!10934 = !DILocation(line: 5297, column: 15, scope: !802)
!10935 = !DILocation(line: 5297, column: 24, scope: !802)
!10936 = !DILocation(line: 5297, column: 31, scope: !802)
!10937 = !DILocation(line: 5298, column: 26, scope: !802)
!10938 = !DILocation(line: 5298, column: 15, scope: !802)
!10939 = !DILocation(line: 5298, column: 24, scope: !802)
!10940 = !DILocation(line: 5300, column: 5, scope: !802)
!10941 = !DILocation(line: 5302, column: 16, scope: !802)
!10942 = !DILocation(line: 5303, column: 12, scope: !802)
!10943 = !DILocation(line: 5309, column: 9, scope: !10944)
!10944 = distinct !DILexicalBlock(scope: !802, file: !3, line: 5309, column: 9)
!10945 = !DILocation(line: 5309, column: 28, scope: !10944)
!10946 = !DILocation(line: 5309, column: 39, scope: !10944)
!10947 = !DILocation(line: 5309, column: 42, scope: !10944)
!10948 = !DILocation(line: 5309, column: 61, scope: !10944)
!10949 = !DILocation(line: 5309, column: 9, scope: !802)
!10950 = !DILocation(line: 5310, column: 22, scope: !10951)
!10951 = distinct !DILexicalBlock(scope: !10944, file: !3, line: 5309, column: 74)
!10952 = !DILocation(line: 5310, column: 16, scope: !10951)
!10953 = !DILocation(line: 5311, column: 18, scope: !10951)
!10954 = !DILocation(line: 5312, column: 9, scope: !10951)
!10955 = !DILocation(line: 5314, column: 9, scope: !10956)
!10956 = distinct !DILexicalBlock(scope: !802, file: !3, line: 5314, column: 9)
!10957 = !DILocation(line: 5314, column: 18, scope: !10956)
!10958 = !DILocation(line: 5314, column: 23, scope: !10956)
!10959 = !DILocation(line: 5314, column: 26, scope: !10956)
!10960 = !DILocation(line: 5314, column: 41, scope: !10956)
!10961 = !DILocation(line: 5314, column: 38, scope: !10956)
!10962 = !DILocation(line: 5314, column: 9, scope: !802)
!10963 = !DILocalVariable(name: "line", scope: !10964, file: !3, line: 5315, type: !582)
!10964 = distinct !DILexicalBlock(scope: !10956, file: !3, line: 5314, column: 51)
!10965 = !DILocation(line: 5315, column: 14, scope: !10964)
!10966 = !DILocation(line: 5317, column: 18, scope: !10964)
!10967 = !DILocation(line: 5318, column: 34, scope: !10964)
!10968 = !DILocation(line: 5318, column: 18, scope: !10964)
!10969 = !DILocation(line: 5317, column: 9, scope: !10964)
!10970 = !DILocation(line: 5320, column: 22, scope: !10964)
!10971 = !DILocation(line: 5320, column: 47, scope: !10964)
!10972 = !DILocation(line: 5320, column: 41, scope: !10964)
!10973 = !DILocation(line: 5320, column: 66, scope: !10964)
!10974 = !DILocation(line: 5320, column: 16, scope: !10964)
!10975 = !DILocation(line: 5321, column: 22, scope: !10964)
!10976 = !DILocation(line: 5321, column: 32, scope: !10964)
!10977 = !DILocation(line: 5321, column: 45, scope: !10964)
!10978 = !DILocation(line: 5321, column: 38, scope: !10964)
!10979 = !DILocation(line: 5321, column: 16, scope: !10964)
!10980 = !DILocation(line: 5322, column: 22, scope: !10964)
!10981 = !DILocation(line: 5322, column: 16, scope: !10964)
!10982 = !DILocation(line: 5323, column: 18, scope: !10964)
!10983 = !DILocation(line: 5324, column: 9, scope: !10964)
!10984 = !DILocation(line: 5326, column: 9, scope: !10985)
!10985 = distinct !DILexicalBlock(scope: !802, file: !3, line: 5326, column: 9)
!10986 = !DILocation(line: 5326, column: 15, scope: !10985)
!10987 = !DILocation(line: 5326, column: 9, scope: !802)
!10988 = !DILocation(line: 5327, column: 9, scope: !10989)
!10989 = distinct !DILexicalBlock(scope: !10985, file: !3, line: 5326, column: 21)
!10990 = !DILocation(line: 5328, column: 13, scope: !10991)
!10991 = distinct !DILexicalBlock(scope: !10989, file: !3, line: 5328, column: 13)
!10992 = !DILocation(line: 5328, column: 33, scope: !10991)
!10993 = !DILocation(line: 5328, column: 30, scope: !10991)
!10994 = !DILocation(line: 5328, column: 13, scope: !10989)
!10995 = !DILocalVariable(name: "line", scope: !10996, file: !3, line: 5329, type: !582)
!10996 = distinct !DILexicalBlock(scope: !10991, file: !3, line: 5328, column: 40)
!10997 = !DILocation(line: 5329, column: 18, scope: !10996)
!10998 = !DILocalVariable(name: "hbuf", scope: !10996, file: !3, line: 5330, type: !654)
!10999 = !DILocation(line: 5330, column: 18, scope: !10996)
!11000 = !DILocation(line: 5333, column: 26, scope: !10996)
!11001 = !DILocation(line: 5333, column: 51, scope: !10996)
!11002 = !DILocation(line: 5333, column: 45, scope: !10996)
!11003 = !DILocation(line: 5333, column: 70, scope: !10996)
!11004 = !DILocation(line: 5333, column: 20, scope: !10996)
!11005 = !DILocation(line: 5334, column: 18, scope: !11006)
!11006 = distinct !DILexicalBlock(scope: !10996, file: !3, line: 5334, column: 17)
!11007 = !DILocation(line: 5334, column: 17, scope: !10996)
!11008 = !DILocation(line: 5337, column: 30, scope: !11009)
!11009 = distinct !DILexicalBlock(scope: !11006, file: !3, line: 5336, column: 73)
!11010 = !DILocation(line: 5337, column: 40, scope: !11009)
!11011 = !DILocation(line: 5337, column: 53, scope: !11009)
!11012 = !DILocation(line: 5337, column: 46, scope: !11009)
!11013 = !DILocation(line: 5337, column: 24, scope: !11009)
!11014 = !DILocation(line: 5338, column: 13, scope: !11009)
!11015 = !DILocation(line: 5339, column: 17, scope: !11016)
!11016 = distinct !DILexicalBlock(scope: !10996, file: !3, line: 5339, column: 17)
!11017 = !DILocation(line: 5339, column: 39, scope: !11016)
!11018 = !DILocation(line: 5339, column: 17, scope: !10996)
!11019 = !DILocation(line: 5340, column: 26, scope: !11020)
!11020 = distinct !DILexicalBlock(scope: !11016, file: !3, line: 5339, column: 45)
!11021 = !DILocation(line: 5341, column: 33, scope: !11022)
!11022 = distinct !DILexicalBlock(scope: !11020, file: !3, line: 5341, column: 21)
!11023 = !DILocation(line: 5342, column: 33, scope: !11022)
!11024 = !DILocation(line: 5342, column: 50, scope: !11022)
!11025 = !DILocation(line: 5341, column: 21, scope: !11022)
!11026 = !DILocation(line: 5344, column: 49, scope: !11022)
!11027 = !DILocation(line: 5341, column: 21, scope: !11020)
!11028 = !DILocation(line: 5346, column: 45, scope: !11029)
!11029 = distinct !DILexicalBlock(scope: !11022, file: !3, line: 5344, column: 55)
!11030 = !DILocation(line: 5346, column: 29, scope: !11029)
!11031 = !DILocation(line: 5346, column: 52, scope: !11029)
!11032 = !DILocation(line: 5345, column: 21, scope: !11029)
!11033 = !DILocation(line: 5347, column: 17, scope: !11029)
!11034 = !DILocation(line: 5348, column: 13, scope: !11020)
!11035 = !DILocation(line: 5349, column: 26, scope: !10996)
!11036 = !DILocation(line: 5349, column: 20, scope: !10996)
!11037 = !DILocation(line: 5350, column: 22, scope: !10996)
!11038 = !DILocation(line: 5351, column: 13, scope: !10996)
!11039 = !DILocation(line: 5353, column: 5, scope: !10989)
!11040 = !DILocation(line: 5354, column: 5, scope: !802)
!11041 = !DILocation(line: 5355, column: 5, scope: !802)
!11042 = !DILocation(line: 5356, column: 5, scope: !802)
!11043 = !DILocation(line: 5357, column: 16, scope: !802)
!11044 = !DILocation(line: 5358, column: 11, scope: !802)
!11045 = !DILocation(line: 5359, column: 9, scope: !11046)
!11046 = distinct !DILexicalBlock(scope: !802, file: !3, line: 5359, column: 9)
!11047 = !DILocation(line: 5359, column: 15, scope: !11046)
!11048 = !DILocation(line: 5359, column: 9, scope: !802)
!11049 = !DILocation(line: 5360, column: 13, scope: !11050)
!11050 = distinct !DILexicalBlock(scope: !11051, file: !3, line: 5360, column: 13)
!11051 = distinct !DILexicalBlock(scope: !11046, file: !3, line: 5359, column: 29)
!11052 = !DILocation(line: 5360, column: 13, scope: !11051)
!11053 = !DILocation(line: 5363, column: 9, scope: !11054)
!11054 = distinct !DILexicalBlock(scope: !11050, file: !3, line: 5360, column: 24)
!11055 = !DILocation(line: 5365, column: 13, scope: !11056)
!11056 = distinct !DILexicalBlock(scope: !11051, file: !3, line: 5365, column: 13)
!11057 = !DILocation(line: 5365, column: 23, scope: !11056)
!11058 = !DILocation(line: 5365, column: 13, scope: !11051)
!11059 = !DILocation(line: 5366, column: 13, scope: !11060)
!11060 = distinct !DILexicalBlock(scope: !11056, file: !3, line: 5365, column: 29)
!11061 = !DILocation(line: 5367, column: 47, scope: !11060)
!11062 = !DILocation(line: 5367, column: 45, scope: !11060)
!11063 = !DILocation(line: 5367, column: 56, scope: !11060)
!11064 = !DILocation(line: 5367, column: 13, scope: !11060)
!11065 = !DILocation(line: 5368, column: 9, scope: !11060)
!11066 = !DILocation(line: 5370, column: 9, scope: !11051)
!11067 = !DILocation(line: 5371, column: 9, scope: !11051)
!11068 = !DILocation(line: 5372, column: 16, scope: !11069)
!11069 = distinct !DILexicalBlock(scope: !11046, file: !3, line: 5372, column: 16)
!11070 = !DILocation(line: 5372, column: 22, scope: !11069)
!11071 = !DILocation(line: 5372, column: 16, scope: !11046)
!11072 = !DILocation(line: 5373, column: 13, scope: !11073)
!11073 = distinct !DILexicalBlock(scope: !11074, file: !3, line: 5373, column: 13)
!11074 = distinct !DILexicalBlock(scope: !11069, file: !3, line: 5372, column: 37)
!11075 = !DILocation(line: 5373, column: 25, scope: !11073)
!11076 = !DILocation(line: 5373, column: 13, scope: !11074)
!11077 = !DILocation(line: 5374, column: 24, scope: !11078)
!11078 = distinct !DILexicalBlock(scope: !11073, file: !3, line: 5373, column: 31)
!11079 = !DILocation(line: 5375, column: 9, scope: !11078)
!11080 = !DILocation(line: 5376, column: 5, scope: !11074)
!11081 = !DILocation(line: 5377, column: 13, scope: !11082)
!11082 = distinct !DILexicalBlock(scope: !11083, file: !3, line: 5377, column: 13)
!11083 = distinct !DILexicalBlock(scope: !11069, file: !3, line: 5376, column: 12)
!11084 = !DILocation(line: 5377, column: 19, scope: !11082)
!11085 = !DILocation(line: 5377, column: 13, scope: !11083)
!11086 = !DILocation(line: 5378, column: 30, scope: !11087)
!11087 = distinct !DILexicalBlock(scope: !11082, file: !3, line: 5377, column: 25)
!11088 = !DILocation(line: 5378, column: 13, scope: !11087)
!11089 = !DILocation(line: 5379, column: 9, scope: !11087)
!11090 = !DILocation(line: 5381, column: 18, scope: !802)
!11091 = !DILocation(line: 5381, column: 12, scope: !802)
!11092 = !DILocation(line: 5382, column: 14, scope: !802)
!11093 = !DILocation(line: 5383, column: 5, scope: !802)
!11094 = !DILocation(line: 5384, column: 1, scope: !802)
!11095 = distinct !DISubprogram(name: "open_max", scope: !3, file: !3, line: 672, type: !4750, scopeLine: 673, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!11096 = !DILocalVariable(name: "z", scope: !11095, file: !3, line: 674, type: !334)
!11097 = !DILocation(line: 674, column: 10, scope: !11095)
!11098 = !DILocation(line: 676, column: 21, scope: !11099)
!11099 = distinct !DILexicalBlock(scope: !11095, file: !3, line: 676, column: 9)
!11100 = !DILocation(line: 676, column: 12, scope: !11099)
!11101 = !DILocation(line: 676, column: 44, scope: !11099)
!11102 = !DILocation(line: 676, column: 9, scope: !11095)
!11103 = !DILocation(line: 677, column: 9, scope: !11104)
!11104 = distinct !DILexicalBlock(scope: !11099, file: !3, line: 676, column: 50)
!11105 = !DILocation(line: 678, column: 9, scope: !11104)
!11106 = !DILocation(line: 680, column: 27, scope: !11095)
!11107 = !DILocation(line: 680, column: 12, scope: !11095)
!11108 = !DILocation(line: 680, column: 5, scope: !11095)
!11109 = distinct !DISubprogram(name: "closedesc_all", scope: !3, file: !3, line: 5219, type: !729, scopeLine: 5220, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!11110 = !DILocalVariable(name: "closestdin", arg: 1, scope: !11109, file: !3, line: 5219, type: !731)
!11111 = !DILocation(line: 5219, column: 36, scope: !11109)
!11112 = !DILocalVariable(name: "fodder", scope: !11109, file: !3, line: 5221, type: !326)
!11113 = !DILocation(line: 5221, column: 9, scope: !11109)
!11114 = !DILocation(line: 5223, column: 9, scope: !11115)
!11115 = distinct !DILexicalBlock(scope: !11109, file: !3, line: 5223, column: 9)
!11116 = !DILocation(line: 5223, column: 20, scope: !11115)
!11117 = !DILocation(line: 5223, column: 9, scope: !11109)
!11118 = !DILocation(line: 5224, column: 16, scope: !11119)
!11119 = distinct !DILexicalBlock(scope: !11115, file: !3, line: 5223, column: 26)
!11120 = !DILocation(line: 5225, column: 23, scope: !11121)
!11121 = distinct !DILexicalBlock(scope: !11119, file: !3, line: 5225, column: 13)
!11122 = !DILocation(line: 5225, column: 21, scope: !11121)
!11123 = !DILocation(line: 5225, column: 52, scope: !11121)
!11124 = !DILocation(line: 5225, column: 13, scope: !11119)
!11125 = !DILocation(line: 5226, column: 13, scope: !11126)
!11126 = distinct !DILexicalBlock(scope: !11121, file: !3, line: 5225, column: 59)
!11127 = !DILocation(line: 5228, column: 21, scope: !11119)
!11128 = !DILocation(line: 5228, column: 16, scope: !11119)
!11129 = !DILocation(line: 5229, column: 13, scope: !11130)
!11130 = distinct !DILexicalBlock(scope: !11119, file: !3, line: 5229, column: 13)
!11131 = !DILocation(line: 5229, column: 20, scope: !11130)
!11132 = !DILocation(line: 5229, column: 13, scope: !11119)
!11133 = !DILocation(line: 5230, column: 26, scope: !11134)
!11134 = distinct !DILexicalBlock(scope: !11130, file: !3, line: 5229, column: 25)
!11135 = !DILocation(line: 5230, column: 20, scope: !11134)
!11136 = !DILocation(line: 5231, column: 9, scope: !11134)
!11137 = !DILocation(line: 5232, column: 5, scope: !11119)
!11138 = !DILocation(line: 5233, column: 19, scope: !11139)
!11139 = distinct !DILexicalBlock(scope: !11109, file: !3, line: 5233, column: 9)
!11140 = !DILocation(line: 5233, column: 17, scope: !11139)
!11141 = !DILocation(line: 5233, column: 48, scope: !11139)
!11142 = !DILocation(line: 5233, column: 9, scope: !11109)
!11143 = !DILocation(line: 5234, column: 9, scope: !11144)
!11144 = distinct !DILexicalBlock(scope: !11139, file: !3, line: 5233, column: 55)
!11145 = !DILocation(line: 5236, column: 17, scope: !11109)
!11146 = !DILocation(line: 5236, column: 12, scope: !11109)
!11147 = !DILocation(line: 5237, column: 12, scope: !11109)
!11148 = !DILocation(line: 5238, column: 9, scope: !11149)
!11149 = distinct !DILexicalBlock(scope: !11109, file: !3, line: 5238, column: 9)
!11150 = !DILocation(line: 5238, column: 16, scope: !11149)
!11151 = !DILocation(line: 5238, column: 9, scope: !11109)
!11152 = !DILocation(line: 5239, column: 22, scope: !11153)
!11153 = distinct !DILexicalBlock(scope: !11149, file: !3, line: 5238, column: 21)
!11154 = !DILocation(line: 5239, column: 16, scope: !11153)
!11155 = !DILocation(line: 5240, column: 5, scope: !11153)
!11156 = !DILocation(line: 5242, column: 5, scope: !11109)
!11157 = !DILocation(line: 5243, column: 1, scope: !11109)
!11158 = distinct !DISubprogram(name: "sigchild", scope: !3, file: !3, line: 385, type: !390, scopeLine: 386, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!11159 = !DILocalVariable(name: "sig", arg: 1, scope: !11158, file: !3, line: 385, type: !326)
!11160 = !DILocation(line: 385, column: 32, scope: !11158)
!11161 = !DILocalVariable(name: "olderrno", scope: !11158, file: !3, line: 387, type: !731)
!11162 = !DILocation(line: 387, column: 15, scope: !11158)
!11163 = !DILocation(line: 387, column: 26, scope: !11158)
!11164 = !DILocalVariable(name: "pid", scope: !11158, file: !3, line: 388, type: !392)
!11165 = !DILocation(line: 388, column: 11, scope: !11158)
!11166 = !DILocation(line: 390, column: 12, scope: !11158)
!11167 = !DILocation(line: 392, column: 5, scope: !11158)
!11168 = !DILocation(line: 392, column: 19, scope: !11158)
!11169 = !DILocation(line: 392, column: 17, scope: !11158)
!11170 = !DILocation(line: 392, column: 55, scope: !11158)
!11171 = !DILocation(line: 393, column: 13, scope: !11172)
!11172 = distinct !DILexicalBlock(scope: !11173, file: !3, line: 393, column: 13)
!11173 = distinct !DILexicalBlock(scope: !11158, file: !3, line: 392, column: 68)
!11174 = !DILocation(line: 393, column: 25, scope: !11172)
!11175 = !DILocation(line: 393, column: 13, scope: !11173)
!11176 = !DILocation(line: 394, column: 24, scope: !11177)
!11177 = distinct !DILexicalBlock(scope: !11172, file: !3, line: 393, column: 31)
!11178 = !DILocation(line: 395, column: 9, scope: !11177)
!11179 = !DILocation(line: 399, column: 28, scope: !11173)
!11180 = !DILocation(line: 399, column: 9, scope: !11173)
!11181 = distinct !{!11181, !11167, !11182}
!11182 = !DILocation(line: 400, column: 5, scope: !11158)
!11183 = !DILocation(line: 412, column: 13, scope: !11158)
!11184 = !DILocation(line: 412, column: 5, scope: !11158)
!11185 = !DILocation(line: 412, column: 11, scope: !11158)
!11186 = !DILocation(line: 413, column: 1, scope: !11158)
!11187 = distinct !DISubprogram(name: "sigterm", scope: !3, file: !3, line: 425, type: !390, scopeLine: 426, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !471)
!11188 = !DILocalVariable(name: "sig", arg: 1, scope: !11187, file: !3, line: 425, type: !326)
!11189 = !DILocation(line: 425, column: 31, scope: !11187)
!11190 = !DILocalVariable(name: "olderrno", scope: !11187, file: !3, line: 427, type: !731)
!11191 = !DILocation(line: 427, column: 15, scope: !11187)
!11192 = !DILocation(line: 427, column: 26, scope: !11187)
!11193 = !DILocation(line: 428, column: 12, scope: !11187)
!11194 = !DILocation(line: 430, column: 17, scope: !11187)
!11195 = !DILocation(line: 431, column: 9, scope: !11196)
!11196 = distinct !DILexicalBlock(scope: !11187, file: !3, line: 431, column: 9)
!11197 = !DILocation(line: 431, column: 18, scope: !11196)
!11198 = !DILocation(line: 431, column: 9, scope: !11187)
!11199 = !DILocation(line: 432, column: 18, scope: !11200)
!11200 = distinct !DILexicalBlock(scope: !11196, file: !3, line: 431, column: 25)
!11201 = !DILocation(line: 432, column: 9, scope: !11200)
!11202 = !DILocation(line: 433, column: 22, scope: !11200)
!11203 = !DILocation(line: 433, column: 16, scope: !11200)
!11204 = !DILocation(line: 434, column: 5, scope: !11200)
!11205 = !DILocation(line: 435, column: 9, scope: !11206)
!11206 = distinct !DILexicalBlock(scope: !11187, file: !3, line: 435, column: 9)
!11207 = !DILocation(line: 435, column: 19, scope: !11206)
!11208 = !DILocation(line: 435, column: 9, scope: !11187)
!11209 = !DILocation(line: 436, column: 18, scope: !11210)
!11210 = distinct !DILexicalBlock(scope: !11206, file: !3, line: 435, column: 26)
!11211 = !DILocation(line: 436, column: 9, scope: !11210)
!11212 = !DILocation(line: 437, column: 22, scope: !11210)
!11213 = !DILocation(line: 437, column: 16, scope: !11210)
!11214 = !DILocation(line: 438, column: 5, scope: !11210)
!11215 = !DILocation(line: 439, column: 13, scope: !11187)
!11216 = !DILocation(line: 439, column: 5, scope: !11187)
!11217 = !DILocation(line: 439, column: 11, scope: !11187)
!11218 = !DILocation(line: 440, column: 1, scope: !11187)
!11219 = distinct !DISubprogram(name: "storage_port", scope: !974, file: !974, line: 186, type: !11220, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !973, retainedNodes: !471)
!11220 = !DISubroutineType(types: !11221)
!11221 = !{!11222, !11223}
!11222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64)
!11223 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11224)
!11224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11225, size: 64)
!11225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_storage", file: !316, line: 191, size: 1024, elements: !11226)
!11226 = !{!11227, !11228, !11229}
!11227 = !DIDerivedType(tag: DW_TAG_member, name: "ss_family", scope: !11225, file: !316, line: 193, baseType: !319, size: 16)
!11228 = !DIDerivedType(tag: DW_TAG_member, name: "__ss_padding", scope: !11225, file: !316, line: 194, baseType: !553, size: 944, offset: 16)
!11229 = !DIDerivedType(tag: DW_TAG_member, name: "__ss_align", scope: !11225, file: !316, line: 195, baseType: !306, size: 64, offset: 960)
!11230 = !DILocalVariable(name: "ss", arg: 1, scope: !11219, file: !974, line: 186, type: !11223)
!11231 = !DILocation(line: 186, column: 45, scope: !11219)
!11232 = !DILocalVariable(name: "si", scope: !11219, file: !974, line: 188, type: !11233)
!11233 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !976)
!11234 = !DILocation(line: 188, column: 31, scope: !11219)
!11235 = !DILocation(line: 188, column: 59, scope: !11219)
!11236 = !DILocation(line: 188, column: 36, scope: !11219)
!11237 = !DILocation(line: 190, column: 13, scope: !11219)
!11238 = !DILocation(line: 190, column: 17, scope: !11219)
!11239 = !DILocation(line: 190, column: 5, scope: !11219)
!11240 = distinct !DISubprogram(name: "storage_port_const", scope: !974, file: !974, line: 194, type: !11241, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !973, retainedNodes: !471)
!11241 = !DISubroutineType(types: !11242)
!11242 = !{!2816, !11243}
!11243 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11244)
!11244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11245, size: 64)
!11245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11225)
!11246 = !DILocalVariable(name: "ss", arg: 1, scope: !11240, file: !974, line: 194, type: !11243)
!11247 = !DILocation(line: 194, column: 57, scope: !11240)
!11248 = !DILocalVariable(name: "si", scope: !11240, file: !974, line: 196, type: !11249)
!11249 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !987)
!11250 = !DILocation(line: 196, column: 37, scope: !11240)
!11251 = !DILocation(line: 196, column: 71, scope: !11240)
!11252 = !DILocation(line: 196, column: 42, scope: !11240)
!11253 = !DILocation(line: 198, column: 13, scope: !11240)
!11254 = !DILocation(line: 198, column: 17, scope: !11240)
!11255 = !DILocation(line: 198, column: 5, scope: !11240)
!11256 = distinct !DISubprogram(name: "storage_port6", scope: !974, file: !974, line: 202, type: !11220, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !973, retainedNodes: !471)
!11257 = !DILocalVariable(name: "ss", arg: 1, scope: !11256, file: !974, line: 202, type: !11223)
!11258 = !DILocation(line: 202, column: 46, scope: !11256)
!11259 = !DILocalVariable(name: "si", scope: !11256, file: !974, line: 204, type: !11260)
!11260 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !989)
!11261 = !DILocation(line: 204, column: 32, scope: !11256)
!11262 = !DILocation(line: 204, column: 61, scope: !11256)
!11263 = !DILocation(line: 204, column: 37, scope: !11256)
!11264 = !DILocation(line: 206, column: 13, scope: !11256)
!11265 = !DILocation(line: 206, column: 17, scope: !11256)
!11266 = !DILocation(line: 206, column: 5, scope: !11256)
!11267 = distinct !DISubprogram(name: "storage_port6_const", scope: !974, file: !974, line: 210, type: !11241, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !973, retainedNodes: !471)
!11268 = !DILocalVariable(name: "ss", arg: 1, scope: !11267, file: !974, line: 210, type: !11243)
!11269 = !DILocation(line: 210, column: 58, scope: !11267)
!11270 = !DILocalVariable(name: "si", scope: !11267, file: !974, line: 212, type: !11271)
!11271 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1005)
!11272 = !DILocation(line: 212, column: 38, scope: !11267)
!11273 = !DILocation(line: 212, column: 73, scope: !11267)
!11274 = !DILocation(line: 212, column: 43, scope: !11267)
!11275 = !DILocation(line: 214, column: 13, scope: !11267)
!11276 = !DILocation(line: 214, column: 17, scope: !11267)
!11277 = !DILocation(line: 214, column: 5, scope: !11267)
!11278 = distinct !DISubprogram(name: "storage_sin_addr", scope: !974, file: !974, line: 218, type: !11279, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !973, retainedNodes: !471)
!11279 = !DISubroutineType(types: !11280)
!11280 = !{!11281, !11223}
!11281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 64)
!11282 = !DILocalVariable(name: "ss", arg: 1, scope: !11278, file: !974, line: 218, type: !11223)
!11283 = !DILocation(line: 218, column: 49, scope: !11278)
!11284 = !DILocalVariable(name: "si", scope: !11278, file: !974, line: 220, type: !11233)
!11285 = !DILocation(line: 220, column: 31, scope: !11278)
!11286 = !DILocation(line: 220, column: 59, scope: !11278)
!11287 = !DILocation(line: 220, column: 36, scope: !11278)
!11288 = !DILocation(line: 222, column: 13, scope: !11278)
!11289 = !DILocation(line: 222, column: 17, scope: !11278)
!11290 = !DILocation(line: 222, column: 5, scope: !11278)
!11291 = distinct !DISubprogram(name: "storage_sin_addr_const", scope: !974, file: !974, line: 226, type: !11292, scopeLine: 227, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !973, retainedNodes: !471)
!11292 = !DISubroutineType(types: !11293)
!11293 = !{!11294, !11243}
!11294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11295, size: 64)
!11295 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !982)
!11296 = !DILocalVariable(name: "ss", arg: 1, scope: !11291, file: !974, line: 226, type: !11243)
!11297 = !DILocation(line: 226, column: 61, scope: !11291)
!11298 = !DILocalVariable(name: "si", scope: !11291, file: !974, line: 228, type: !11249)
!11299 = !DILocation(line: 228, column: 37, scope: !11291)
!11300 = !DILocation(line: 228, column: 71, scope: !11291)
!11301 = !DILocation(line: 228, column: 42, scope: !11291)
!11302 = !DILocation(line: 230, column: 13, scope: !11291)
!11303 = !DILocation(line: 230, column: 17, scope: !11291)
!11304 = !DILocation(line: 230, column: 5, scope: !11291)
!11305 = distinct !DISubprogram(name: "storage_sin_addr6", scope: !974, file: !974, line: 234, type: !11306, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !973, retainedNodes: !471)
!11306 = !DISubroutineType(types: !11307)
!11307 = !{!11308, !11223}
!11308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 64)
!11309 = !DILocalVariable(name: "ss", arg: 1, scope: !11305, file: !974, line: 234, type: !11223)
!11310 = !DILocation(line: 234, column: 50, scope: !11305)
!11311 = !DILocalVariable(name: "si", scope: !11305, file: !974, line: 236, type: !11260)
!11312 = !DILocation(line: 236, column: 32, scope: !11305)
!11313 = !DILocation(line: 236, column: 61, scope: !11305)
!11314 = !DILocation(line: 236, column: 37, scope: !11305)
!11315 = !DILocation(line: 238, column: 13, scope: !11305)
!11316 = !DILocation(line: 238, column: 17, scope: !11305)
!11317 = !DILocation(line: 238, column: 5, scope: !11305)
!11318 = distinct !DISubprogram(name: "storage_sin_addr6_const", scope: !974, file: !974, line: 242, type: !11319, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !973, retainedNodes: !471)
!11319 = !DISubroutineType(types: !11320)
!11320 = !{!11321, !11243}
!11321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11322, size: 64)
!11322 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !996)
!11323 = !DILocalVariable(name: "ss", arg: 1, scope: !11318, file: !974, line: 242, type: !11243)
!11324 = !DILocation(line: 242, column: 62, scope: !11318)
!11325 = !DILocalVariable(name: "si", scope: !11318, file: !974, line: 244, type: !11271)
!11326 = !DILocation(line: 244, column: 38, scope: !11318)
!11327 = !DILocation(line: 244, column: 73, scope: !11318)
!11328 = !DILocation(line: 244, column: 43, scope: !11318)
!11329 = !DILocation(line: 246, column: 13, scope: !11318)
!11330 = !DILocation(line: 246, column: 17, scope: !11318)
!11331 = !DILocation(line: 246, column: 5, scope: !11318)
!11332 = distinct !DISubprogram(name: "pw_unix_check", scope: !1008, file: !1008, line: 11, type: !11333, scopeLine: 15, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1007, retainedNodes: !471)
!11333 = !DISubroutineType(types: !11334)
!11334 = !{null, !11335, !385, !385, !11346, !11346}
!11335 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11336)
!11336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11337, size: 64)
!11337 = !DIDerivedType(tag: DW_TAG_typedef, name: "AuthResult", file: !537, line: 294, baseType: !11338)
!11338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AuthResult_", file: !537, line: 266, size: 320, elements: !11339)
!11339 = !{!11340, !11341, !11342, !11343, !11344, !11345}
!11340 = !DIDerivedType(tag: DW_TAG_member, name: "auth_ok", scope: !11338, file: !537, line: 267, baseType: !326, size: 32)
!11341 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !11338, file: !537, line: 268, baseType: !337, size: 32, offset: 32)
!11342 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !11338, file: !537, line: 269, baseType: !359, size: 32, offset: 64)
!11343 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !11338, file: !537, line: 270, baseType: !385, size: 64, offset: 128)
!11344 = !DIDerivedType(tag: DW_TAG_member, name: "slow_tilde_expansion", scope: !11338, file: !537, line: 271, baseType: !326, size: 32, offset: 192)
!11345 = !DIDerivedType(tag: DW_TAG_member, name: "backend_data", scope: !11338, file: !537, line: 272, baseType: !303, size: 64, offset: 256)
!11346 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11347)
!11347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11348, size: 64)
!11348 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11349)
!11349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_storage", file: !316, line: 191, size: 1024, elements: !11350)
!11350 = !{!11351, !11352, !11353}
!11351 = !DIDerivedType(tag: DW_TAG_member, name: "ss_family", scope: !11349, file: !316, line: 193, baseType: !319, size: 16)
!11352 = !DIDerivedType(tag: DW_TAG_member, name: "__ss_padding", scope: !11349, file: !316, line: 194, baseType: !553, size: 944, offset: 16)
!11353 = !DIDerivedType(tag: DW_TAG_member, name: "__ss_align", scope: !11349, file: !316, line: 195, baseType: !306, size: 64, offset: 960)
!11354 = !DILocalVariable(name: "result", arg: 1, scope: !11332, file: !1008, line: 11, type: !11335)
!11355 = !DILocation(line: 11, column: 39, scope: !11332)
!11356 = !DILocalVariable(name: "account", arg: 2, scope: !11332, file: !1008, line: 12, type: !385)
!11357 = !DILocation(line: 12, column: 32, scope: !11332)
!11358 = !DILocalVariable(name: "password", arg: 3, scope: !11332, file: !1008, line: 12, type: !385)
!11359 = !DILocation(line: 12, column: 53, scope: !11332)
!11360 = !DILocalVariable(name: "sa", arg: 4, scope: !11332, file: !1008, line: 13, type: !11346)
!11361 = !DILocation(line: 13, column: 58, scope: !11332)
!11362 = !DILocalVariable(name: "peer", arg: 5, scope: !11332, file: !1008, line: 14, type: !11346)
!11363 = !DILocation(line: 14, column: 58, scope: !11332)
!11364 = !DILocalVariable(name: "cpwd", scope: !11332, file: !1008, line: 16, type: !385)
!11365 = !DILocation(line: 16, column: 17, scope: !11332)
!11366 = !DILocalVariable(name: "pw", scope: !11332, file: !1008, line: 17, type: !11367)
!11367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !3543, line: 49, size: 384, elements: !11368)
!11368 = !{!11369, !11370, !11371, !11372, !11373, !11374, !11375}
!11369 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !11367, file: !3543, line: 51, baseType: !308, size: 64)
!11370 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !11367, file: !3543, line: 52, baseType: !308, size: 64, offset: 64)
!11371 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !11367, file: !3543, line: 54, baseType: !339, size: 32, offset: 128)
!11372 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !11367, file: !3543, line: 55, baseType: !360, size: 32, offset: 160)
!11373 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !11367, file: !3543, line: 56, baseType: !308, size: 64, offset: 192)
!11374 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !11367, file: !3543, line: 57, baseType: !308, size: 64, offset: 256)
!11375 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !11367, file: !3543, line: 58, baseType: !308, size: 64, offset: 320)
!11376 = !DILocation(line: 17, column: 19, scope: !11332)
!11377 = !DILocalVariable(name: "pw_", scope: !11332, file: !1008, line: 17, type: !11378)
!11378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11367, size: 64)
!11379 = !DILocation(line: 17, column: 24, scope: !11332)
!11380 = !DILocalVariable(name: "spw", scope: !11332, file: !1008, line: 19, type: !11381)
!11381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11382, size: 64)
!11382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spwd", file: !11383, line: 43, size: 576, elements: !11384)
!11383 = !DIFile(filename: "/usr/include/shadow.h", directory: "")
!11384 = !{!11385, !11386, !11387, !11388, !11389, !11390, !11391, !11392, !11393}
!11385 = !DIDerivedType(tag: DW_TAG_member, name: "sp_namp", scope: !11382, file: !11383, line: 45, baseType: !308, size: 64)
!11386 = !DIDerivedType(tag: DW_TAG_member, name: "sp_pwdp", scope: !11382, file: !11383, line: 46, baseType: !308, size: 64, offset: 64)
!11387 = !DIDerivedType(tag: DW_TAG_member, name: "sp_lstchg", scope: !11382, file: !11383, line: 47, baseType: !334, size: 64, offset: 128)
!11388 = !DIDerivedType(tag: DW_TAG_member, name: "sp_min", scope: !11382, file: !11383, line: 48, baseType: !334, size: 64, offset: 192)
!11389 = !DIDerivedType(tag: DW_TAG_member, name: "sp_max", scope: !11382, file: !11383, line: 49, baseType: !334, size: 64, offset: 256)
!11390 = !DIDerivedType(tag: DW_TAG_member, name: "sp_warn", scope: !11382, file: !11383, line: 50, baseType: !334, size: 64, offset: 320)
!11391 = !DIDerivedType(tag: DW_TAG_member, name: "sp_inact", scope: !11382, file: !11383, line: 52, baseType: !334, size: 64, offset: 384)
!11392 = !DIDerivedType(tag: DW_TAG_member, name: "sp_expire", scope: !11382, file: !11383, line: 54, baseType: !334, size: 64, offset: 448)
!11393 = !DIDerivedType(tag: DW_TAG_member, name: "sp_flag", scope: !11382, file: !11383, line: 56, baseType: !306, size: 64, offset: 512)
!11394 = !DILocation(line: 19, column: 18, scope: !11332)
!11395 = !DILocalVariable(name: "dir", scope: !11332, file: !1008, line: 21, type: !308)
!11396 = !DILocation(line: 21, column: 11, scope: !11332)
!11397 = !DILocation(line: 23, column: 12, scope: !11332)
!11398 = !DILocation(line: 24, column: 12, scope: !11332)
!11399 = !DILocation(line: 25, column: 5, scope: !11332)
!11400 = !DILocation(line: 25, column: 13, scope: !11332)
!11401 = !DILocation(line: 25, column: 21, scope: !11332)
!11402 = !DILocation(line: 31, column: 25, scope: !11403)
!11403 = distinct !DILexicalBlock(scope: !11332, file: !1008, line: 31, column: 9)
!11404 = !DILocation(line: 31, column: 16, scope: !11403)
!11405 = !DILocation(line: 31, column: 14, scope: !11403)
!11406 = !DILocation(line: 31, column: 35, scope: !11403)
!11407 = !DILocation(line: 31, column: 9, scope: !11332)
!11408 = !DILocation(line: 32, column: 9, scope: !11409)
!11409 = distinct !DILexicalBlock(scope: !11403, file: !1008, line: 31, column: 44)
!11410 = !DILocation(line: 35, column: 11, scope: !11332)
!11411 = !DILocation(line: 35, column: 10, scope: !11332)
!11412 = !DILocation(line: 36, column: 5, scope: !11332)
!11413 = !DILocation(line: 36, column: 13, scope: !11332)
!11414 = !DILocation(line: 36, column: 20, scope: !11332)
!11415 = !DILocation(line: 38, column: 12, scope: !11416)
!11416 = distinct !DILexicalBlock(scope: !11332, file: !1008, line: 38, column: 9)
!11417 = !DILocation(line: 38, column: 21, scope: !11416)
!11418 = !DILocation(line: 38, column: 9, scope: !11332)
!11419 = !DILocation(line: 39, column: 9, scope: !11420)
!11420 = distinct !DILexicalBlock(scope: !11416, file: !1008, line: 38, column: 30)
!11421 = !DILocation(line: 41, column: 23, scope: !11422)
!11422 = distinct !DILexicalBlock(scope: !11332, file: !1008, line: 41, column: 9)
!11423 = !DILocation(line: 41, column: 9, scope: !11422)
!11424 = !DILocation(line: 41, column: 45, scope: !11422)
!11425 = !DILocation(line: 41, column: 9, scope: !11332)
!11426 = !DILocalVariable(name: "shell", scope: !11427, file: !1008, line: 42, type: !385)
!11427 = distinct !DILexicalBlock(scope: !11422, file: !1008, line: 41, column: 51)
!11428 = !DILocation(line: 42, column: 21, scope: !11427)
!11429 = !DILocation(line: 44, column: 9, scope: !11427)
!11430 = !DILocation(line: 45, column: 9, scope: !11427)
!11431 = !DILocation(line: 45, column: 34, scope: !11427)
!11432 = !DILocation(line: 45, column: 23, scope: !11427)
!11433 = !DILocation(line: 45, column: 50, scope: !11427)
!11434 = !DILocation(line: 45, column: 58, scope: !11427)
!11435 = !DILocation(line: 46, column: 26, scope: !11427)
!11436 = !DILocation(line: 46, column: 36, scope: !11427)
!11437 = !DILocation(line: 46, column: 16, scope: !11427)
!11438 = !DILocation(line: 46, column: 43, scope: !11427)
!11439 = !DILocation(line: 0, scope: !11427)
!11440 = distinct !{!11440, !11430, !11441}
!11441 = !DILocation(line: 46, column: 48, scope: !11427)
!11442 = !DILocation(line: 47, column: 9, scope: !11427)
!11443 = !DILocation(line: 48, column: 13, scope: !11444)
!11444 = distinct !DILexicalBlock(scope: !11427, file: !1008, line: 48, column: 13)
!11445 = !DILocation(line: 48, column: 19, scope: !11444)
!11446 = !DILocation(line: 48, column: 13, scope: !11427)
!11447 = !DILocation(line: 49, column: 13, scope: !11448)
!11448 = distinct !DILexicalBlock(scope: !11444, file: !1008, line: 48, column: 28)
!11449 = !DILocation(line: 51, column: 5, scope: !11427)
!11450 = !DILocation(line: 53, column: 26, scope: !11451)
!11451 = distinct !DILexicalBlock(scope: !11332, file: !1008, line: 53, column: 9)
!11452 = !DILocation(line: 53, column: 16, scope: !11451)
!11453 = !DILocation(line: 53, column: 14, scope: !11451)
!11454 = !DILocation(line: 53, column: 35, scope: !11451)
!11455 = !DILocation(line: 53, column: 9, scope: !11332)
!11456 = !DILocation(line: 54, column: 9, scope: !11457)
!11457 = distinct !DILexicalBlock(scope: !11451, file: !1008, line: 53, column: 44)
!11458 = !DILocation(line: 57, column: 15, scope: !11459)
!11459 = distinct !DILexicalBlock(scope: !11332, file: !1008, line: 57, column: 9)
!11460 = !DILocation(line: 57, column: 11, scope: !11459)
!11461 = !DILocation(line: 57, column: 29, scope: !11459)
!11462 = !DILocation(line: 57, column: 36, scope: !11459)
!11463 = !DILocation(line: 57, column: 43, scope: !11459)
!11464 = !DILocation(line: 57, column: 39, scope: !11459)
!11465 = !DILocation(line: 57, column: 57, scope: !11459)
!11466 = !DILocation(line: 57, column: 63, scope: !11459)
!11467 = !DILocation(line: 58, column: 15, scope: !11459)
!11468 = !DILocation(line: 58, column: 11, scope: !11459)
!11469 = !DILocation(line: 58, column: 29, scope: !11459)
!11470 = !DILocation(line: 58, column: 36, scope: !11459)
!11471 = !DILocation(line: 58, column: 43, scope: !11459)
!11472 = !DILocation(line: 58, column: 39, scope: !11459)
!11473 = !DILocation(line: 58, column: 57, scope: !11459)
!11474 = !DILocation(line: 58, column: 64, scope: !11459)
!11475 = !DILocation(line: 59, column: 21, scope: !11459)
!11476 = !DILocation(line: 59, column: 31, scope: !11459)
!11477 = !DILocation(line: 59, column: 36, scope: !11459)
!11478 = !DILocation(line: 59, column: 11, scope: !11459)
!11479 = !DILocation(line: 59, column: 45, scope: !11459)
!11480 = !DILocation(line: 59, column: 52, scope: !11459)
!11481 = !DILocation(line: 60, column: 25, scope: !11459)
!11482 = !DILocation(line: 60, column: 16, scope: !11459)
!11483 = !DILocation(line: 60, column: 14, scope: !11459)
!11484 = !DILocation(line: 60, column: 35, scope: !11459)
!11485 = !DILocation(line: 60, column: 43, scope: !11459)
!11486 = !DILocation(line: 60, column: 46, scope: !11459)
!11487 = !DILocation(line: 60, column: 51, scope: !11459)
!11488 = !DILocation(line: 60, column: 59, scope: !11459)
!11489 = !DILocation(line: 57, column: 9, scope: !11332)
!11490 = !DILocation(line: 61, column: 16, scope: !11491)
!11491 = distinct !DILexicalBlock(scope: !11459, file: !1008, line: 60, column: 68)
!11492 = !DILocation(line: 61, column: 21, scope: !11491)
!11493 = !DILocation(line: 61, column: 32, scope: !11491)
!11494 = !DILocation(line: 61, column: 48, scope: !11491)
!11495 = !DILocation(line: 61, column: 53, scope: !11491)
!11496 = !DILocation(line: 61, column: 14, scope: !11491)
!11497 = !DILocation(line: 62, column: 13, scope: !11498)
!11498 = distinct !DILexicalBlock(scope: !11491, file: !1008, line: 62, column: 13)
!11499 = !DILocation(line: 62, column: 18, scope: !11498)
!11500 = !DILocation(line: 62, column: 28, scope: !11498)
!11501 = !DILocation(line: 62, column: 32, scope: !11498)
!11502 = !DILocation(line: 62, column: 35, scope: !11498)
!11503 = !DILocation(line: 62, column: 40, scope: !11498)
!11504 = !DILocation(line: 62, column: 47, scope: !11498)
!11505 = !DILocation(line: 62, column: 13, scope: !11491)
!11506 = !DILocalVariable(name: "today", scope: !11507, file: !1008, line: 63, type: !334)
!11507 = distinct !DILexicalBlock(scope: !11498, file: !1008, line: 62, column: 52)
!11508 = !DILocation(line: 63, column: 18, scope: !11507)
!11509 = !DILocation(line: 63, column: 26, scope: !11507)
!11510 = !DILocation(line: 63, column: 37, scope: !11507)
!11511 = !DILocation(line: 65, column: 17, scope: !11512)
!11512 = distinct !DILexicalBlock(scope: !11507, file: !1008, line: 65, column: 17)
!11513 = !DILocation(line: 65, column: 22, scope: !11512)
!11514 = !DILocation(line: 65, column: 32, scope: !11512)
!11515 = !DILocation(line: 65, column: 36, scope: !11512)
!11516 = !DILocation(line: 65, column: 39, scope: !11512)
!11517 = !DILocation(line: 65, column: 44, scope: !11512)
!11518 = !DILocation(line: 65, column: 56, scope: !11512)
!11519 = !DILocation(line: 65, column: 54, scope: !11512)
!11520 = !DILocation(line: 65, column: 17, scope: !11507)
!11521 = !DILocation(line: 66, column: 17, scope: !11522)
!11522 = distinct !DILexicalBlock(scope: !11512, file: !1008, line: 65, column: 63)
!11523 = !DILocation(line: 68, column: 17, scope: !11524)
!11524 = distinct !DILexicalBlock(scope: !11507, file: !1008, line: 68, column: 17)
!11525 = !DILocation(line: 68, column: 22, scope: !11524)
!11526 = !DILocation(line: 68, column: 29, scope: !11524)
!11527 = !DILocation(line: 68, column: 33, scope: !11524)
!11528 = !DILocation(line: 68, column: 36, scope: !11524)
!11529 = !DILocation(line: 68, column: 41, scope: !11524)
!11530 = !DILocation(line: 68, column: 51, scope: !11524)
!11531 = !DILocation(line: 68, column: 55, scope: !11524)
!11532 = !DILocation(line: 69, column: 18, scope: !11524)
!11533 = !DILocation(line: 69, column: 23, scope: !11524)
!11534 = !DILocation(line: 69, column: 35, scope: !11524)
!11535 = !DILocation(line: 69, column: 40, scope: !11524)
!11536 = !DILocation(line: 69, column: 33, scope: !11524)
!11537 = !DILocation(line: 69, column: 49, scope: !11524)
!11538 = !DILocation(line: 69, column: 47, scope: !11524)
!11539 = !DILocation(line: 68, column: 17, scope: !11507)
!11540 = !DILocation(line: 70, column: 17, scope: !11541)
!11541 = distinct !DILexicalBlock(scope: !11524, file: !1008, line: 69, column: 57)
!11542 = !DILocation(line: 72, column: 9, scope: !11507)
!11543 = !DILocation(line: 73, column: 5, scope: !11491)
!11544 = !DILocation(line: 76, column: 19, scope: !11545)
!11545 = distinct !DILexicalBlock(scope: !11459, file: !1008, line: 75, column: 5)
!11546 = !DILocation(line: 76, column: 14, scope: !11545)
!11547 = !DILocalVariable(name: "crypted", scope: !11548, file: !1008, line: 79, type: !385)
!11548 = distinct !DILexicalBlock(scope: !11332, file: !1008, line: 78, column: 5)
!11549 = !DILocation(line: 79, column: 21, scope: !11548)
!11550 = !DILocation(line: 81, column: 13, scope: !11551)
!11551 = distinct !DILexicalBlock(scope: !11548, file: !1008, line: 81, column: 13)
!11552 = !DILocation(line: 81, column: 18, scope: !11551)
!11553 = !DILocation(line: 81, column: 26, scope: !11551)
!11554 = !DILocation(line: 82, column: 45, scope: !11551)
!11555 = !DILocation(line: 82, column: 55, scope: !11551)
!11556 = !DILocation(line: 82, column: 39, scope: !11551)
!11557 = !DILocation(line: 82, column: 22, scope: !11551)
!11558 = !DILocation(line: 82, column: 62, scope: !11551)
!11559 = !DILocation(line: 82, column: 70, scope: !11551)
!11560 = !DILocation(line: 83, column: 25, scope: !11551)
!11561 = !DILocation(line: 83, column: 31, scope: !11551)
!11562 = !DILocation(line: 83, column: 13, scope: !11551)
!11563 = !DILocation(line: 83, column: 40, scope: !11551)
!11564 = !DILocation(line: 81, column: 13, scope: !11548)
!11565 = !DILocation(line: 84, column: 13, scope: !11566)
!11566 = distinct !DILexicalBlock(scope: !11551, file: !1008, line: 83, column: 46)
!11567 = !DILocation(line: 87, column: 22, scope: !11332)
!11568 = !DILocation(line: 87, column: 5, scope: !11332)
!11569 = !DILocation(line: 87, column: 13, scope: !11332)
!11570 = !DILocation(line: 87, column: 17, scope: !11332)
!11571 = !DILocation(line: 88, column: 22, scope: !11332)
!11572 = !DILocation(line: 88, column: 5, scope: !11332)
!11573 = !DILocation(line: 88, column: 13, scope: !11332)
!11574 = !DILocation(line: 88, column: 17, scope: !11332)
!11575 = !DILocation(line: 89, column: 19, scope: !11332)
!11576 = !DILocation(line: 89, column: 5, scope: !11332)
!11577 = !DILocation(line: 89, column: 13, scope: !11332)
!11578 = !DILocation(line: 89, column: 17, scope: !11332)
!11579 = !DILocation(line: 90, column: 5, scope: !11332)
!11580 = !DILocation(line: 90, column: 13, scope: !11332)
!11581 = !DILocation(line: 90, column: 34, scope: !11332)
!11582 = !DILocation(line: 91, column: 24, scope: !11332)
!11583 = !DILocation(line: 91, column: 32, scope: !11332)
!11584 = !DILocation(line: 91, column: 23, scope: !11332)
!11585 = !DILocation(line: 91, column: 5, scope: !11332)
!11586 = !DILocation(line: 91, column: 13, scope: !11332)
!11587 = !DILocation(line: 91, column: 21, scope: !11332)
!11588 = !DILocation(line: 92, column: 5, scope: !11332)
!11589 = !DILabel(scope: !11332, name: "bye", file: !1008, line: 94)
!11590 = !DILocation(line: 94, column: 5, scope: !11332)
!11591 = !DILocation(line: 95, column: 10, scope: !11332)
!11592 = !DILocation(line: 95, column: 5, scope: !11332)
!11593 = !DILocation(line: 96, column: 1, scope: !11332)
!11594 = distinct !DISubprogram(name: "getname", scope: !818, file: !818, line: 120, type: !11595, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !817, retainedNodes: !471)
!11595 = !DISubroutineType(types: !11596)
!11596 = !{!385, !3819}
!11597 = !DILocalVariable(name: "uid", arg: 1, scope: !11594, file: !818, line: 120, type: !3819)
!11598 = !DILocation(line: 120, column: 33, scope: !11594)
!11599 = !DILocalVariable(name: "p", scope: !11594, file: !818, line: 122, type: !842)
!11600 = !DILocation(line: 122, column: 20, scope: !11594)
!11601 = !DILocalVariable(name: "pwd", scope: !11594, file: !818, line: 123, type: !11602)
!11602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11603, size: 64)
!11603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !3543, line: 49, size: 384, elements: !11604)
!11604 = !{!11605, !11606, !11607, !11608, !11609, !11610, !11611}
!11605 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !11603, file: !3543, line: 51, baseType: !308, size: 64)
!11606 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !11603, file: !3543, line: 52, baseType: !308, size: 64, offset: 64)
!11607 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !11603, file: !3543, line: 54, baseType: !339, size: 32, offset: 128)
!11608 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !11603, file: !3543, line: 55, baseType: !360, size: 32, offset: 160)
!11609 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !11603, file: !3543, line: 56, baseType: !308, size: 64, offset: 192)
!11610 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !11603, file: !3543, line: 57, baseType: !308, size: 64, offset: 256)
!11611 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !11603, file: !3543, line: 58, baseType: !308, size: 64, offset: 320)
!11612 = !DILocation(line: 123, column: 20, scope: !11594)
!11613 = !DILocation(line: 125, column: 14, scope: !11614)
!11614 = distinct !DILexicalBlock(scope: !11594, file: !818, line: 125, column: 5)
!11615 = !DILocation(line: 125, column: 12, scope: !11614)
!11616 = !DILocation(line: 125, column: 10, scope: !11614)
!11617 = !DILocation(line: 125, column: 25, scope: !11618)
!11618 = distinct !DILexicalBlock(scope: !11614, file: !818, line: 125, column: 5)
!11619 = !DILocation(line: 125, column: 5, scope: !11614)
!11620 = !DILocation(line: 126, column: 13, scope: !11621)
!11621 = distinct !DILexicalBlock(scope: !11622, file: !818, line: 126, column: 13)
!11622 = distinct !DILexicalBlock(scope: !11618, file: !818, line: 125, column: 41)
!11623 = !DILocation(line: 126, column: 16, scope: !11621)
!11624 = !DILocation(line: 126, column: 23, scope: !11621)
!11625 = !DILocation(line: 126, column: 20, scope: !11621)
!11626 = !DILocation(line: 126, column: 13, scope: !11622)
!11627 = !DILocation(line: 127, column: 20, scope: !11628)
!11628 = distinct !DILexicalBlock(scope: !11621, file: !818, line: 126, column: 28)
!11629 = !DILocation(line: 127, column: 23, scope: !11628)
!11630 = !DILocation(line: 127, column: 13, scope: !11628)
!11631 = !DILocation(line: 129, column: 5, scope: !11622)
!11632 = !DILocation(line: 125, column: 32, scope: !11618)
!11633 = !DILocation(line: 125, column: 35, scope: !11618)
!11634 = !DILocation(line: 125, column: 30, scope: !11618)
!11635 = !DILocation(line: 125, column: 5, scope: !11618)
!11636 = distinct !{!11636, !11619, !11637}
!11637 = !DILocation(line: 129, column: 5, scope: !11614)
!11638 = !DILocation(line: 132, column: 9, scope: !11639)
!11639 = distinct !DILexicalBlock(scope: !11594, file: !818, line: 132, column: 9)
!11640 = !DILocation(line: 132, column: 18, scope: !11639)
!11641 = !DILocation(line: 132, column: 23, scope: !11639)
!11642 = !DILocation(line: 134, column: 20, scope: !11639)
!11643 = !DILocation(line: 134, column: 41, scope: !11639)
!11644 = !DILocation(line: 132, column: 9, scope: !11594)
!11645 = !DILocation(line: 135, column: 24, scope: !11646)
!11646 = distinct !DILexicalBlock(scope: !11639, file: !818, line: 134, column: 47)
!11647 = !DILocation(line: 135, column: 15, scope: !11646)
!11648 = !DILocation(line: 135, column: 13, scope: !11646)
!11649 = !DILocation(line: 136, column: 5, scope: !11646)
!11650 = !DILocation(line: 137, column: 14, scope: !11651)
!11651 = distinct !DILexicalBlock(scope: !11594, file: !818, line: 137, column: 9)
!11652 = !DILocation(line: 137, column: 12, scope: !11651)
!11653 = !DILocation(line: 137, column: 33, scope: !11651)
!11654 = !DILocation(line: 137, column: 9, scope: !11594)
!11655 = !DILocation(line: 138, column: 9, scope: !11656)
!11656 = distinct !DILexicalBlock(scope: !11651, file: !818, line: 137, column: 42)
!11657 = !DILocation(line: 140, column: 14, scope: !11594)
!11658 = !DILocation(line: 140, column: 5, scope: !11594)
!11659 = !DILocation(line: 140, column: 8, scope: !11594)
!11660 = !DILocation(line: 140, column: 12, scope: !11594)
!11661 = !DILocation(line: 141, column: 20, scope: !11662)
!11662 = distinct !DILexicalBlock(scope: !11594, file: !818, line: 141, column: 9)
!11663 = !DILocation(line: 141, column: 10, scope: !11662)
!11664 = !DILocation(line: 141, column: 13, scope: !11662)
!11665 = !DILocation(line: 141, column: 18, scope: !11662)
!11666 = !DILocation(line: 141, column: 42, scope: !11662)
!11667 = !DILocation(line: 141, column: 9, scope: !11594)
!11668 = !DILocation(line: 142, column: 9, scope: !11669)
!11669 = distinct !DILexicalBlock(scope: !11662, file: !818, line: 141, column: 51)
!11670 = !DILocation(line: 144, column: 9, scope: !11671)
!11671 = distinct !DILexicalBlock(scope: !11594, file: !818, line: 144, column: 9)
!11672 = !DILocation(line: 144, column: 13, scope: !11671)
!11673 = !DILocation(line: 144, column: 9, scope: !11594)
!11674 = !DILocation(line: 145, column: 13, scope: !11675)
!11675 = distinct !DILexicalBlock(scope: !11676, file: !818, line: 145, column: 13)
!11676 = distinct !DILexicalBlock(scope: !11671, file: !818, line: 144, column: 22)
!11677 = !DILocation(line: 145, column: 13, scope: !11676)
!11678 = !DILocation(line: 147, column: 13, scope: !11679)
!11679 = distinct !DILexicalBlock(scope: !11675, file: !818, line: 146, column: 72)
!11680 = !DILocation(line: 149, column: 5, scope: !11676)
!11681 = !DILocation(line: 150, column: 13, scope: !11682)
!11682 = distinct !DILexicalBlock(scope: !11683, file: !818, line: 150, column: 13)
!11683 = distinct !DILexicalBlock(scope: !11671, file: !818, line: 149, column: 12)
!11684 = !DILocation(line: 150, column: 13, scope: !11683)
!11685 = !DILocation(line: 152, column: 13, scope: !11686)
!11686 = distinct !DILexicalBlock(scope: !11682, file: !818, line: 151, column: 36)
!11687 = !DILocation(line: 155, column: 15, scope: !11594)
!11688 = !DILocation(line: 155, column: 5, scope: !11594)
!11689 = !DILocation(line: 155, column: 8, scope: !11594)
!11690 = !DILocation(line: 155, column: 13, scope: !11594)
!11691 = !DILocation(line: 156, column: 17, scope: !11594)
!11692 = !DILocation(line: 156, column: 15, scope: !11594)
!11693 = !DILocation(line: 158, column: 12, scope: !11594)
!11694 = !DILocation(line: 158, column: 15, scope: !11594)
!11695 = !DILocation(line: 158, column: 5, scope: !11594)
!11696 = !DILocation(line: 159, column: 1, scope: !11594)
!11697 = distinct !DISubprogram(name: "getgroup", scope: !818, file: !818, line: 162, type: !11698, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !817, retainedNodes: !471)
!11698 = !DISubroutineType(types: !11699)
!11699 = !{!385, !3820}
!11700 = !DILocalVariable(name: "gid", arg: 1, scope: !11697, file: !818, line: 162, type: !3820)
!11701 = !DILocation(line: 162, column: 34, scope: !11697)
!11702 = !DILocalVariable(name: "p", scope: !11697, file: !818, line: 164, type: !850)
!11703 = !DILocation(line: 164, column: 21, scope: !11697)
!11704 = !DILocalVariable(name: "pwd", scope: !11697, file: !818, line: 165, type: !11705)
!11705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11706, size: 64)
!11706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !11707, line: 42, size: 256, elements: !11708)
!11707 = !DIFile(filename: "/usr/include/grp.h", directory: "")
!11708 = !{!11709, !11710, !11711, !11712}
!11709 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !11706, file: !11707, line: 44, baseType: !308, size: 64)
!11710 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !11706, file: !11707, line: 45, baseType: !308, size: 64, offset: 64)
!11711 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !11706, file: !11707, line: 46, baseType: !360, size: 32, offset: 128)
!11712 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !11706, file: !11707, line: 47, baseType: !493, size: 64, offset: 192)
!11713 = !DILocation(line: 165, column: 19, scope: !11697)
!11714 = !DILocation(line: 167, column: 14, scope: !11715)
!11715 = distinct !DILexicalBlock(scope: !11697, file: !818, line: 167, column: 5)
!11716 = !DILocation(line: 167, column: 12, scope: !11715)
!11717 = !DILocation(line: 167, column: 10, scope: !11715)
!11718 = !DILocation(line: 167, column: 26, scope: !11719)
!11719 = distinct !DILexicalBlock(scope: !11715, file: !818, line: 167, column: 5)
!11720 = !DILocation(line: 167, column: 5, scope: !11715)
!11721 = !DILocation(line: 168, column: 13, scope: !11722)
!11722 = distinct !DILexicalBlock(scope: !11723, file: !818, line: 168, column: 13)
!11723 = distinct !DILexicalBlock(scope: !11719, file: !818, line: 167, column: 42)
!11724 = !DILocation(line: 168, column: 16, scope: !11722)
!11725 = !DILocation(line: 168, column: 23, scope: !11722)
!11726 = !DILocation(line: 168, column: 20, scope: !11722)
!11727 = !DILocation(line: 168, column: 13, scope: !11723)
!11728 = !DILocation(line: 169, column: 20, scope: !11729)
!11729 = distinct !DILexicalBlock(scope: !11722, file: !818, line: 168, column: 28)
!11730 = !DILocation(line: 169, column: 23, scope: !11729)
!11731 = !DILocation(line: 169, column: 13, scope: !11729)
!11732 = !DILocation(line: 171, column: 5, scope: !11723)
!11733 = !DILocation(line: 167, column: 33, scope: !11719)
!11734 = !DILocation(line: 167, column: 36, scope: !11719)
!11735 = !DILocation(line: 167, column: 31, scope: !11719)
!11736 = !DILocation(line: 167, column: 5, scope: !11719)
!11737 = distinct !{!11737, !11720, !11738}
!11738 = !DILocation(line: 171, column: 5, scope: !11715)
!11739 = !DILocation(line: 173, column: 9, scope: !11740)
!11740 = distinct !DILexicalBlock(scope: !11697, file: !818, line: 173, column: 9)
!11741 = !DILocation(line: 173, column: 18, scope: !11740)
!11742 = !DILocation(line: 173, column: 9, scope: !11697)
!11743 = !DILocation(line: 176, column: 24, scope: !11744)
!11744 = distinct !DILexicalBlock(scope: !11740, file: !818, line: 175, column: 5)
!11745 = !DILocation(line: 176, column: 15, scope: !11744)
!11746 = !DILocation(line: 176, column: 13, scope: !11744)
!11747 = !DILocation(line: 177, column: 5, scope: !11744)
!11748 = !DILocation(line: 178, column: 14, scope: !11749)
!11749 = distinct !DILexicalBlock(scope: !11697, file: !818, line: 178, column: 9)
!11750 = !DILocation(line: 178, column: 12, scope: !11749)
!11751 = !DILocation(line: 178, column: 33, scope: !11749)
!11752 = !DILocation(line: 178, column: 9, scope: !11697)
!11753 = !DILocation(line: 179, column: 9, scope: !11754)
!11754 = distinct !DILexicalBlock(scope: !11749, file: !818, line: 178, column: 42)
!11755 = !DILocation(line: 181, column: 14, scope: !11697)
!11756 = !DILocation(line: 181, column: 5, scope: !11697)
!11757 = !DILocation(line: 181, column: 8, scope: !11697)
!11758 = !DILocation(line: 181, column: 12, scope: !11697)
!11759 = !DILocation(line: 182, column: 20, scope: !11760)
!11760 = distinct !DILexicalBlock(scope: !11697, file: !818, line: 182, column: 9)
!11761 = !DILocation(line: 182, column: 10, scope: !11760)
!11762 = !DILocation(line: 182, column: 13, scope: !11760)
!11763 = !DILocation(line: 182, column: 18, scope: !11760)
!11764 = !DILocation(line: 182, column: 42, scope: !11760)
!11765 = !DILocation(line: 182, column: 9, scope: !11697)
!11766 = !DILocation(line: 183, column: 9, scope: !11767)
!11767 = distinct !DILexicalBlock(scope: !11760, file: !818, line: 182, column: 51)
!11768 = !DILocation(line: 185, column: 9, scope: !11769)
!11769 = distinct !DILexicalBlock(scope: !11697, file: !818, line: 185, column: 9)
!11770 = !DILocation(line: 185, column: 13, scope: !11769)
!11771 = !DILocation(line: 185, column: 9, scope: !11697)
!11772 = !DILocation(line: 186, column: 13, scope: !11773)
!11773 = distinct !DILexicalBlock(scope: !11774, file: !818, line: 186, column: 13)
!11774 = distinct !DILexicalBlock(scope: !11769, file: !818, line: 185, column: 22)
!11775 = !DILocation(line: 186, column: 13, scope: !11774)
!11776 = !DILocation(line: 188, column: 13, scope: !11777)
!11777 = distinct !DILexicalBlock(scope: !11773, file: !818, line: 187, column: 60)
!11778 = !DILocation(line: 190, column: 5, scope: !11774)
!11779 = !DILocation(line: 191, column: 13, scope: !11780)
!11780 = distinct !DILexicalBlock(scope: !11781, file: !818, line: 191, column: 13)
!11781 = distinct !DILexicalBlock(scope: !11769, file: !818, line: 190, column: 12)
!11782 = !DILocation(line: 191, column: 13, scope: !11781)
!11783 = !DILocation(line: 193, column: 13, scope: !11784)
!11784 = distinct !DILexicalBlock(scope: !11780, file: !818, line: 192, column: 36)
!11785 = !DILocation(line: 196, column: 15, scope: !11697)
!11786 = !DILocation(line: 196, column: 5, scope: !11697)
!11787 = !DILocation(line: 196, column: 8, scope: !11697)
!11788 = !DILocation(line: 196, column: 13, scope: !11697)
!11789 = !DILocation(line: 197, column: 18, scope: !11697)
!11790 = !DILocation(line: 197, column: 16, scope: !11697)
!11791 = !DILocation(line: 199, column: 12, scope: !11697)
!11792 = !DILocation(line: 199, column: 15, scope: !11697)
!11793 = !DILocation(line: 199, column: 5, scope: !11697)
!11794 = !DILocation(line: 200, column: 1, scope: !11697)
!11795 = distinct !DISubprogram(name: "dolist", scope: !818, file: !818, line: 754, type: !11796, scopeLine: 755, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !817, retainedNodes: !471)
!11796 = !DISubroutineType(types: !11797)
!11797 = !{null, !308, !731}
!11798 = !DILocalVariable(name: "arg", arg: 1, scope: !11795, file: !818, line: 754, type: !308)
!11799 = !DILocation(line: 754, column: 19, scope: !11795)
!11800 = !DILocalVariable(name: "on_ctrl_conn", arg: 2, scope: !11795, file: !818, line: 754, type: !731)
!11801 = !DILocation(line: 754, column: 34, scope: !11795)
!11802 = !DILocalVariable(name: "c", scope: !11795, file: !818, line: 756, type: !326)
!11803 = !DILocation(line: 756, column: 9, scope: !11795)
!11804 = !DILocalVariable(name: "tls_fd", scope: !11795, file: !818, line: 757, type: !303)
!11805 = !DILocation(line: 757, column: 11, scope: !11795)
!11806 = !DILocation(line: 759, column: 13, scope: !11795)
!11807 = !DILocation(line: 761, column: 67, scope: !11795)
!11808 = !DILocation(line: 761, column: 59, scope: !11795)
!11809 = !DILocation(line: 761, column: 51, scope: !11795)
!11810 = !DILocation(line: 761, column: 43, scope: !11795)
!11811 = !DILocation(line: 761, column: 35, scope: !11795)
!11812 = !DILocation(line: 761, column: 27, scope: !11795)
!11813 = !DILocation(line: 761, column: 19, scope: !11795)
!11814 = !DILocation(line: 761, column: 11, scope: !11795)
!11815 = !DILocation(line: 762, column: 11, scope: !11795)
!11816 = !DILocation(line: 763, column: 9, scope: !11817)
!11817 = distinct !DILexicalBlock(scope: !11795, file: !818, line: 763, column: 9)
!11818 = !DILocation(line: 763, column: 20, scope: !11817)
!11819 = !DILocation(line: 763, column: 9, scope: !11795)
!11820 = !DILocation(line: 764, column: 15, scope: !11821)
!11821 = distinct !DILexicalBlock(scope: !11817, file: !818, line: 763, column: 26)
!11822 = !DILocation(line: 765, column: 5, scope: !11821)
!11823 = !DILocation(line: 766, column: 9, scope: !11824)
!11824 = distinct !DILexicalBlock(scope: !11795, file: !818, line: 766, column: 9)
!11825 = !DILocation(line: 766, column: 13, scope: !11824)
!11826 = !DILocation(line: 766, column: 9, scope: !11795)
!11827 = !DILocation(line: 767, column: 9, scope: !11828)
!11828 = distinct !DILexicalBlock(scope: !11824, file: !818, line: 766, column: 22)
!11829 = !DILocation(line: 767, column: 16, scope: !11828)
!11830 = !DILocation(line: 768, column: 16, scope: !11831)
!11831 = distinct !DILexicalBlock(scope: !11828, file: !818, line: 767, column: 47)
!11832 = distinct !{!11832, !11827, !11833}
!11833 = !DILocation(line: 769, column: 9, scope: !11828)
!11834 = !DILocation(line: 770, column: 9, scope: !11828)
!11835 = !DILocation(line: 770, column: 17, scope: !11828)
!11836 = !DILocation(line: 770, column: 16, scope: !11828)
!11837 = !DILocation(line: 770, column: 21, scope: !11828)
!11838 = !DILocation(line: 771, column: 13, scope: !11839)
!11839 = distinct !DILexicalBlock(scope: !11828, file: !818, line: 770, column: 29)
!11840 = !DILocation(line: 771, column: 23, scope: !11839)
!11841 = !DILocation(line: 771, column: 26, scope: !11839)
!11842 = !DILocation(line: 771, column: 29, scope: !11839)
!11843 = !DILocation(line: 0, scope: !11839)
!11844 = !DILocation(line: 772, column: 26, scope: !11845)
!11845 = distinct !DILexicalBlock(scope: !11839, file: !818, line: 771, column: 60)
!11846 = !DILocation(line: 772, column: 25, scope: !11845)
!11847 = !DILocation(line: 772, column: 17, scope: !11845)
!11848 = !DILocation(line: 774, column: 27, scope: !11849)
!11849 = distinct !DILexicalBlock(scope: !11845, file: !818, line: 772, column: 31)
!11850 = !DILocation(line: 775, column: 21, scope: !11849)
!11851 = !DILocation(line: 777, column: 27, scope: !11849)
!11852 = !DILocation(line: 778, column: 27, scope: !11849)
!11853 = !DILocation(line: 779, column: 21, scope: !11849)
!11854 = !DILocation(line: 781, column: 35, scope: !11849)
!11855 = !DILocation(line: 781, column: 27, scope: !11849)
!11856 = !DILocation(line: 782, column: 21, scope: !11849)
!11857 = !DILocation(line: 784, column: 27, scope: !11849)
!11858 = !DILocation(line: 785, column: 27, scope: !11849)
!11859 = !DILocation(line: 786, column: 21, scope: !11849)
!11860 = !DILocation(line: 788, column: 27, scope: !11849)
!11861 = !DILocation(line: 789, column: 21, scope: !11849)
!11862 = !DILocation(line: 791, column: 27, scope: !11849)
!11863 = !DILocation(line: 792, column: 21, scope: !11849)
!11864 = !DILocation(line: 794, column: 27, scope: !11849)
!11865 = !DILocation(line: 795, column: 21, scope: !11849)
!11866 = !DILocation(line: 797, column: 27, scope: !11849)
!11867 = !DILocation(line: 798, column: 21, scope: !11849)
!11868 = !DILocation(line: 800, column: 27, scope: !11849)
!11869 = !DILocation(line: 801, column: 27, scope: !11849)
!11870 = !DILocation(line: 802, column: 21, scope: !11849)
!11871 = !DILocation(line: 804, column: 27, scope: !11849)
!11872 = !DILocation(line: 805, column: 27, scope: !11849)
!11873 = !DILocation(line: 806, column: 21, scope: !11849)
!11874 = distinct !{!11874, !11838, !11875}
!11875 = !DILocation(line: 808, column: 13, scope: !11839)
!11876 = !DILocation(line: 809, column: 13, scope: !11839)
!11877 = !DILocation(line: 809, column: 20, scope: !11839)
!11878 = !DILocation(line: 810, column: 20, scope: !11879)
!11879 = distinct !DILexicalBlock(scope: !11839, file: !818, line: 809, column: 51)
!11880 = distinct !{!11880, !11876, !11881}
!11881 = !DILocation(line: 811, column: 13, scope: !11839)
!11882 = distinct !{!11882, !11834, !11883}
!11883 = !DILocation(line: 812, column: 9, scope: !11828)
!11884 = !DILocation(line: 813, column: 5, scope: !11828)
!11885 = !DILocation(line: 814, column: 9, scope: !11886)
!11886 = distinct !DILexicalBlock(scope: !11795, file: !818, line: 814, column: 9)
!11887 = !DILocation(line: 814, column: 22, scope: !11886)
!11888 = !DILocation(line: 814, column: 9, scope: !11795)
!11889 = !DILocation(line: 815, column: 9, scope: !11890)
!11890 = distinct !DILexicalBlock(scope: !11886, file: !818, line: 814, column: 28)
!11891 = !DILocation(line: 816, column: 18, scope: !11892)
!11892 = distinct !DILexicalBlock(scope: !11890, file: !818, line: 816, column: 13)
!11893 = !DILocation(line: 816, column: 16, scope: !11892)
!11894 = !DILocation(line: 816, column: 26, scope: !11892)
!11895 = !DILocation(line: 816, column: 13, scope: !11890)
!11896 = !DILocation(line: 817, column: 13, scope: !11897)
!11897 = distinct !DILexicalBlock(scope: !11892, file: !818, line: 816, column: 33)
!11898 = !DILocation(line: 819, column: 9, scope: !11890)
!11899 = !DILocation(line: 826, column: 5, scope: !11890)
!11900 = !DILocation(line: 827, column: 13, scope: !11901)
!11901 = distinct !DILexicalBlock(scope: !11886, file: !818, line: 826, column: 12)
!11902 = !DILocation(line: 827, column: 11, scope: !11901)
!11903 = !DILocation(line: 837, column: 24, scope: !11904)
!11904 = distinct !DILexicalBlock(scope: !11901, file: !818, line: 836, column: 9)
!11905 = !DILocation(line: 837, column: 13, scope: !11904)
!11906 = !DILocation(line: 840, column: 9, scope: !11907)
!11907 = distinct !DILexicalBlock(scope: !11795, file: !818, line: 840, column: 9)
!11908 = !DILocation(line: 840, column: 13, scope: !11907)
!11909 = !DILocation(line: 840, column: 21, scope: !11907)
!11910 = !DILocation(line: 840, column: 25, scope: !11907)
!11911 = !DILocation(line: 840, column: 24, scope: !11907)
!11912 = !DILocation(line: 840, column: 29, scope: !11907)
!11913 = !DILocation(line: 840, column: 9, scope: !11795)
!11914 = !DILocalVariable(name: "justone", scope: !11915, file: !818, line: 841, type: !326)
!11915 = distinct !DILexicalBlock(scope: !11907, file: !818, line: 840, column: 35)
!11916 = !DILocation(line: 841, column: 13, scope: !11915)
!11917 = !DILocation(line: 843, column: 17, scope: !11915)
!11918 = !DILocation(line: 845, column: 9, scope: !11915)
!11919 = !DILocalVariable(name: "g", scope: !11920, file: !818, line: 846, type: !11921)
!11920 = distinct !DILexicalBlock(scope: !11915, file: !818, line: 845, column: 12)
!11921 = !DIDerivedType(tag: DW_TAG_typedef, name: "glob_t", file: !11922, line: 60, baseType: !11923)
!11922 = !DIFile(filename: "./bsd-glob.h", directory: "/home/songxiangpu/Documents/protocol_implementation/pure-ftpd/src")
!11923 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11922, line: 38, size: 768, elements: !11924)
!11924 = !{!11925, !11926, !11927, !11928, !11929, !11930, !11931, !11932, !11956, !11958, !11962, !11974, !11978, !11982}
!11925 = !DIDerivedType(tag: DW_TAG_member, name: "gl_maxfiles", scope: !11923, file: !11922, line: 39, baseType: !306, size: 64)
!11926 = !DIDerivedType(tag: DW_TAG_member, name: "gl_maxdepth", scope: !11923, file: !11922, line: 40, baseType: !326, size: 32, offset: 64)
!11927 = !DIDerivedType(tag: DW_TAG_member, name: "gl_pathc", scope: !11923, file: !11922, line: 41, baseType: !326, size: 32, offset: 96)
!11928 = !DIDerivedType(tag: DW_TAG_member, name: "gl_matchc", scope: !11923, file: !11922, line: 42, baseType: !326, size: 32, offset: 128)
!11929 = !DIDerivedType(tag: DW_TAG_member, name: "gl_offs", scope: !11923, file: !11922, line: 43, baseType: !326, size: 32, offset: 160)
!11930 = !DIDerivedType(tag: DW_TAG_member, name: "gl_flags", scope: !11923, file: !11922, line: 44, baseType: !326, size: 32, offset: 192)
!11931 = !DIDerivedType(tag: DW_TAG_member, name: "gl_pathv", scope: !11923, file: !11922, line: 45, baseType: !493, size: 64, offset: 256)
!11932 = !DIDerivedType(tag: DW_TAG_member, name: "gl_statv", scope: !11923, file: !11922, line: 46, baseType: !11933, size: 64, offset: 320)
!11933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11934, size: 64)
!11934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11935, size: 64)
!11935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !1095, line: 46, size: 1152, elements: !11936)
!11936 = !{!11937, !11938, !11939, !11940, !11941, !11942, !11943, !11944, !11945, !11946, !11947, !11948, !11953, !11954, !11955}
!11937 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !11935, file: !1095, line: 48, baseType: !478, size: 64)
!11938 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !11935, file: !1095, line: 53, baseType: !482, size: 64, offset: 64)
!11939 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !11935, file: !1095, line: 61, baseType: !833, size: 64, offset: 128)
!11940 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !11935, file: !1095, line: 62, baseType: !349, size: 32, offset: 192)
!11941 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !11935, file: !1095, line: 64, baseType: !339, size: 32, offset: 224)
!11942 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !11935, file: !1095, line: 65, baseType: !360, size: 32, offset: 256)
!11943 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !11935, file: !1095, line: 67, baseType: !326, size: 32, offset: 288)
!11944 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !11935, file: !1095, line: 69, baseType: !478, size: 64, offset: 320)
!11945 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !11935, file: !1095, line: 74, baseType: !346, size: 64, offset: 384)
!11946 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !11935, file: !1095, line: 78, baseType: !1107, size: 64, offset: 448)
!11947 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !11935, file: !1095, line: 80, baseType: !1109, size: 64, offset: 512)
!11948 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !11935, file: !1095, line: 91, baseType: !11949, size: 128, offset: 576)
!11949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !1112, line: 10, size: 128, elements: !11950)
!11950 = !{!11951, !11952}
!11951 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !11949, file: !1112, line: 12, baseType: !333, size: 64)
!11952 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !11949, file: !1112, line: 16, baseType: !1116, size: 64, offset: 64)
!11953 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !11935, file: !1095, line: 92, baseType: !11949, size: 128, offset: 704)
!11954 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !11935, file: !1095, line: 93, baseType: !11949, size: 128, offset: 832)
!11955 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !11935, file: !1095, line: 106, baseType: !1120, size: 192, offset: 960)
!11956 = !DIDerivedType(tag: DW_TAG_member, name: "gl_errfunc", scope: !11923, file: !11922, line: 48, baseType: !11957, size: 64, offset: 384)
!11957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4624, size: 64)
!11958 = !DIDerivedType(tag: DW_TAG_member, name: "gl_closedir", scope: !11923, file: !11922, line: 55, baseType: !11959, size: 64, offset: 448)
!11959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11960, size: 64)
!11960 = !DISubroutineType(types: !11961)
!11961 = !{null, !303}
!11962 = !DIDerivedType(tag: DW_TAG_member, name: "gl_readdir", scope: !11923, file: !11922, line: 56, baseType: !11963, size: 64, offset: 512)
!11963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11964, size: 64)
!11964 = !DISubroutineType(types: !11965)
!11965 = !{!11966, !303}
!11966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11967, size: 64)
!11967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !1077, line: 22, size: 2240, elements: !11968)
!11968 = !{!11969, !11970, !11971, !11972, !11973}
!11969 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !11967, file: !1077, line: 25, baseType: !482, size: 64)
!11970 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !11967, file: !1077, line: 26, baseType: !346, size: 64, offset: 64)
!11971 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !11967, file: !1077, line: 31, baseType: !321, size: 16, offset: 128)
!11972 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !11967, file: !1077, line: 32, baseType: !307, size: 8, offset: 144)
!11973 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !11967, file: !1077, line: 33, baseType: !1084, size: 2048, offset: 152)
!11974 = !DIDerivedType(tag: DW_TAG_member, name: "gl_opendir", scope: !11923, file: !11922, line: 57, baseType: !11975, size: 64, offset: 576)
!11975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11976, size: 64)
!11976 = !DISubroutineType(types: !11977)
!11977 = !{!303, !385}
!11978 = !DIDerivedType(tag: DW_TAG_member, name: "gl_lstat", scope: !11923, file: !11922, line: 58, baseType: !11979, size: 64, offset: 640)
!11979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11980, size: 64)
!11980 = !DISubroutineType(types: !11981)
!11981 = !{!326, !385, !11934}
!11982 = !DIDerivedType(tag: DW_TAG_member, name: "gl_stat", scope: !11923, file: !11922, line: 59, baseType: !11979, size: 64, offset: 704)
!11983 = !DILocation(line: 846, column: 20, scope: !11920)
!11984 = !DILocalVariable(name: "a", scope: !11920, file: !818, line: 847, type: !326)
!11985 = !DILocation(line: 847, column: 17, scope: !11920)
!11986 = !DILocalVariable(name: "endarg", scope: !11920, file: !818, line: 848, type: !308)
!11987 = !DILocation(line: 848, column: 19, scope: !11920)
!11988 = !DILocation(line: 850, column: 57, scope: !11989)
!11989 = distinct !DILexicalBlock(scope: !11920, file: !818, line: 850, column: 17)
!11990 = !DILocation(line: 850, column: 27, scope: !11989)
!11991 = !DILocation(line: 850, column: 25, scope: !11989)
!11992 = !DILocation(line: 850, column: 63, scope: !11989)
!11993 = !DILocation(line: 850, column: 17, scope: !11920)
!11994 = !DILocation(line: 851, column: 25, scope: !11995)
!11995 = distinct !DILexicalBlock(scope: !11989, file: !818, line: 850, column: 72)
!11996 = !DILocation(line: 852, column: 13, scope: !11995)
!11997 = !DILocation(line: 857, column: 13, scope: !11920)
!11998 = !DILocation(line: 858, column: 23, scope: !11920)
!11999 = !DILocation(line: 859, column: 23, scope: !11920)
!12000 = !DILocation(line: 860, column: 33, scope: !11920)
!12001 = !DILocation(line: 860, column: 46, scope: !11920)
!12002 = !DILocation(line: 860, column: 51, scope: !11920)
!12003 = !DILocation(line: 860, column: 64, scope: !11920)
!12004 = !DILocation(line: 858, column: 17, scope: !11920)
!12005 = !DILocation(line: 858, column: 15, scope: !11920)
!12006 = !DILocation(line: 862, column: 17, scope: !12007)
!12007 = distinct !DILexicalBlock(scope: !11920, file: !818, line: 862, column: 17)
!12008 = !DILocation(line: 862, column: 19, scope: !12007)
!12009 = !DILocation(line: 862, column: 17, scope: !11920)
!12010 = !DILocalVariable(name: "path", scope: !12011, file: !818, line: 863, type: !493)
!12011 = distinct !DILexicalBlock(scope: !12007, file: !818, line: 862, column: 25)
!12012 = !DILocation(line: 863, column: 24, scope: !12011)
!12013 = !DILocation(line: 865, column: 23, scope: !12014)
!12014 = distinct !DILexicalBlock(scope: !12011, file: !818, line: 865, column: 21)
!12015 = !DILocation(line: 865, column: 32, scope: !12014)
!12016 = !DILocation(line: 865, column: 21, scope: !12011)
!12017 = !DILocation(line: 866, column: 26, scope: !12018)
!12018 = distinct !DILexicalBlock(scope: !12014, file: !818, line: 865, column: 38)
!12019 = !DILocation(line: 867, column: 17, scope: !12018)
!12020 = !DILocation(line: 868, column: 30, scope: !12021)
!12021 = distinct !DILexicalBlock(scope: !12014, file: !818, line: 867, column: 24)
!12022 = !DILocation(line: 868, column: 26, scope: !12021)
!12023 = !DILocation(line: 870, column: 21, scope: !12024)
!12024 = distinct !DILexicalBlock(scope: !12011, file: !818, line: 870, column: 21)
!12025 = !DILocation(line: 870, column: 26, scope: !12024)
!12026 = !DILocation(line: 870, column: 34, scope: !12024)
!12027 = !DILocation(line: 870, column: 37, scope: !12024)
!12028 = !DILocation(line: 870, column: 45, scope: !12024)
!12029 = !DILocation(line: 870, column: 53, scope: !12024)
!12030 = !DILocation(line: 870, column: 56, scope: !12024)
!12031 = !DILocation(line: 870, column: 64, scope: !12024)
!12032 = !DILocation(line: 870, column: 21, scope: !12011)
!12033 = !DILocation(line: 871, column: 29, scope: !12034)
!12034 = distinct !DILexicalBlock(scope: !12024, file: !818, line: 870, column: 73)
!12035 = !DILocation(line: 872, column: 17, scope: !12034)
!12036 = !DILocation(line: 873, column: 17, scope: !12011)
!12037 = !DILocation(line: 873, column: 24, scope: !12011)
!12038 = !DILocation(line: 873, column: 29, scope: !12011)
!12039 = !DILocation(line: 873, column: 37, scope: !12011)
!12040 = !DILocation(line: 873, column: 41, scope: !12011)
!12041 = !DILocation(line: 873, column: 40, scope: !12011)
!12042 = !DILocation(line: 873, column: 46, scope: !12011)
!12043 = !DILocation(line: 0, scope: !12011)
!12044 = !DILocalVariable(name: "st", scope: !12045, file: !818, line: 874, type: !11935)
!12045 = distinct !DILexicalBlock(scope: !12011, file: !818, line: 873, column: 55)
!12046 = !DILocation(line: 874, column: 33, scope: !12045)
!12047 = !DILocation(line: 876, column: 31, scope: !12048)
!12048 = distinct !DILexicalBlock(scope: !12045, file: !818, line: 876, column: 25)
!12049 = !DILocation(line: 876, column: 30, scope: !12048)
!12050 = !DILocation(line: 876, column: 25, scope: !12048)
!12051 = !DILocation(line: 876, column: 42, scope: !12048)
!12052 = !DILocation(line: 876, column: 25, scope: !12045)
!12053 = !DILocation(line: 877, column: 29, scope: !12054)
!12054 = distinct !DILexicalBlock(scope: !12055, file: !818, line: 877, column: 29)
!12055 = distinct !DILexicalBlock(scope: !12048, file: !818, line: 876, column: 48)
!12056 = !DILocation(line: 877, column: 35, scope: !12054)
!12057 = !DILocation(line: 877, column: 40, scope: !12054)
!12058 = !DILocation(line: 877, column: 29, scope: !12055)
!12059 = !DILocation(line: 878, column: 45, scope: !12060)
!12060 = distinct !DILexicalBlock(scope: !12054, file: !818, line: 877, column: 62)
!12061 = !DILocation(line: 878, column: 44, scope: !12060)
!12062 = !DILocation(line: 878, column: 29, scope: !12060)
!12063 = !DILocation(line: 879, column: 31, scope: !12060)
!12064 = !DILocation(line: 879, column: 30, scope: !12060)
!12065 = !DILocation(line: 879, column: 36, scope: !12060)
!12066 = !DILocation(line: 880, column: 25, scope: !12060)
!12067 = !DILocation(line: 881, column: 21, scope: !12055)
!12068 = !DILocation(line: 882, column: 27, scope: !12069)
!12069 = distinct !DILexicalBlock(scope: !12048, file: !818, line: 881, column: 28)
!12070 = !DILocation(line: 882, column: 26, scope: !12069)
!12071 = !DILocation(line: 882, column: 32, scope: !12069)
!12072 = !DILocation(line: 884, column: 25, scope: !12045)
!12073 = distinct !{!12073, !12036, !12074}
!12074 = !DILocation(line: 885, column: 17, scope: !12011)
!12075 = !DILocation(line: 886, column: 29, scope: !12011)
!12076 = !DILocation(line: 886, column: 32, scope: !12011)
!12077 = !DILocation(line: 886, column: 17, scope: !12011)
!12078 = !DILocation(line: 887, column: 26, scope: !12011)
!12079 = !DILocation(line: 887, column: 22, scope: !12011)
!12080 = !DILocation(line: 888, column: 17, scope: !12011)
!12081 = !DILocation(line: 888, column: 24, scope: !12011)
!12082 = !DILocation(line: 888, column: 29, scope: !12011)
!12083 = !DILocation(line: 888, column: 37, scope: !12011)
!12084 = !DILocation(line: 888, column: 41, scope: !12011)
!12085 = !DILocation(line: 888, column: 40, scope: !12011)
!12086 = !DILocation(line: 888, column: 46, scope: !12011)
!12087 = !DILocation(line: 889, column: 25, scope: !12088)
!12088 = distinct !DILexicalBlock(scope: !12089, file: !818, line: 889, column: 25)
!12089 = distinct !DILexicalBlock(scope: !12011, file: !818, line: 888, column: 55)
!12090 = !DILocation(line: 889, column: 36, scope: !12088)
!12091 = !DILocation(line: 889, column: 33, scope: !12088)
!12092 = !DILocation(line: 889, column: 25, scope: !12089)
!12093 = !DILocation(line: 890, column: 25, scope: !12094)
!12094 = distinct !DILexicalBlock(scope: !12088, file: !818, line: 889, column: 50)
!12095 = !DILocation(line: 892, column: 27, scope: !12096)
!12096 = distinct !DILexicalBlock(scope: !12089, file: !818, line: 892, column: 25)
!12097 = !DILocation(line: 892, column: 26, scope: !12096)
!12098 = !DILocation(line: 892, column: 25, scope: !12096)
!12099 = !DILocation(line: 892, column: 32, scope: !12096)
!12100 = !DILocation(line: 892, column: 25, scope: !12089)
!12101 = !DILocation(line: 893, column: 30, scope: !12102)
!12102 = distinct !DILexicalBlock(scope: !12103, file: !818, line: 893, column: 29)
!12103 = distinct !DILexicalBlock(scope: !12096, file: !818, line: 892, column: 38)
!12104 = !DILocation(line: 893, column: 29, scope: !12103)
!12105 = !DILocation(line: 894, column: 35, scope: !12106)
!12106 = distinct !DILexicalBlock(scope: !12102, file: !818, line: 893, column: 39)
!12107 = !DILocation(line: 894, column: 38, scope: !12106)
!12108 = !DILocation(line: 894, column: 29, scope: !12106)
!12109 = !DILocation(line: 895, column: 35, scope: !12106)
!12110 = !DILocation(line: 895, column: 38, scope: !12106)
!12111 = !DILocation(line: 895, column: 47, scope: !12106)
!12112 = !DILocation(line: 895, column: 46, scope: !12106)
!12113 = !DILocation(line: 895, column: 29, scope: !12106)
!12114 = !DILocation(line: 896, column: 35, scope: !12106)
!12115 = !DILocation(line: 896, column: 38, scope: !12106)
!12116 = !DILocation(line: 896, column: 29, scope: !12106)
!12117 = !DILocation(line: 897, column: 25, scope: !12106)
!12118 = !DILocation(line: 898, column: 37, scope: !12119)
!12119 = distinct !DILexicalBlock(scope: !12103, file: !818, line: 898, column: 29)
!12120 = !DILocation(line: 898, column: 36, scope: !12119)
!12121 = !DILocation(line: 898, column: 30, scope: !12119)
!12122 = !DILocation(line: 898, column: 29, scope: !12103)
!12123 = !DILocation(line: 899, column: 41, scope: !12124)
!12124 = distinct !DILexicalBlock(scope: !12119, file: !818, line: 898, column: 44)
!12125 = !DILocation(line: 899, column: 44, scope: !12124)
!12126 = !DILocation(line: 899, column: 53, scope: !12124)
!12127 = !DILocation(line: 899, column: 52, scope: !12124)
!12128 = !DILocation(line: 899, column: 29, scope: !12124)
!12129 = !DILocation(line: 900, column: 33, scope: !12130)
!12130 = distinct !DILexicalBlock(scope: !12124, file: !818, line: 900, column: 33)
!12131 = !DILocation(line: 900, column: 33, scope: !12124)
!12132 = !DILocation(line: 901, column: 73, scope: !12133)
!12133 = distinct !DILexicalBlock(scope: !12130, file: !818, line: 900, column: 44)
!12134 = !DILocation(line: 901, column: 64, scope: !12133)
!12135 = !DILocation(line: 901, column: 33, scope: !12133)
!12136 = !DILocation(line: 903, column: 25, scope: !12124)
!12137 = !DILocation(line: 904, column: 21, scope: !12103)
!12138 = !DILocation(line: 905, column: 25, scope: !12089)
!12139 = distinct !{!12139, !12080, !12140}
!12140 = !DILocation(line: 906, column: 17, scope: !12011)
!12141 = !DILocation(line: 907, column: 13, scope: !12011)
!12142 = !DILocation(line: 908, column: 21, scope: !12143)
!12143 = distinct !DILexicalBlock(scope: !12144, file: !818, line: 908, column: 21)
!12144 = distinct !DILexicalBlock(scope: !12007, file: !818, line: 907, column: 20)
!12145 = !DILocation(line: 908, column: 23, scope: !12143)
!12146 = !DILocation(line: 908, column: 21, scope: !12144)
!12147 = !DILocation(line: 909, column: 55, scope: !12148)
!12148 = distinct !DILexicalBlock(scope: !12143, file: !818, line: 908, column: 40)
!12149 = !DILocation(line: 909, column: 21, scope: !12148)
!12150 = !DILocation(line: 910, column: 21, scope: !12148)
!12151 = !DILocation(line: 911, column: 17, scope: !12148)
!12152 = !DILocation(line: 911, column: 28, scope: !12153)
!12153 = distinct !DILexicalBlock(scope: !12143, file: !818, line: 911, column: 28)
!12154 = !DILocation(line: 911, column: 30, scope: !12153)
!12155 = !DILocation(line: 911, column: 28, scope: !12143)
!12156 = !DILocation(line: 912, column: 56, scope: !12157)
!12157 = distinct !DILexicalBlock(scope: !12153, file: !818, line: 911, column: 45)
!12158 = !DILocation(line: 912, column: 21, scope: !12157)
!12159 = !DILocation(line: 913, column: 17, scope: !12157)
!12160 = !DILocation(line: 913, column: 28, scope: !12161)
!12161 = distinct !DILexicalBlock(scope: !12153, file: !818, line: 913, column: 28)
!12162 = !DILocation(line: 913, column: 30, scope: !12161)
!12163 = !DILocation(line: 913, column: 28, scope: !12153)
!12164 = !DILocation(line: 914, column: 56, scope: !12165)
!12165 = distinct !DILexicalBlock(scope: !12161, file: !818, line: 913, column: 47)
!12166 = !DILocation(line: 914, column: 21, scope: !12165)
!12167 = !DILocation(line: 915, column: 21, scope: !12165)
!12168 = !DILocation(line: 916, column: 17, scope: !12165)
!12169 = !DILocation(line: 918, column: 13, scope: !11920)
!12170 = !DILocation(line: 919, column: 19, scope: !11920)
!12171 = !DILocation(line: 919, column: 17, scope: !11920)
!12172 = !DILocation(line: 920, column: 9, scope: !11920)
!12173 = !DILocation(line: 920, column: 18, scope: !11915)
!12174 = !DILocation(line: 920, column: 22, scope: !11915)
!12175 = distinct !{!12175, !11918, !12176}
!12176 = !DILocation(line: 920, column: 29, scope: !11915)
!12177 = !DILocation(line: 921, column: 5, scope: !11915)
!12178 = !DILocation(line: 922, column: 13, scope: !12179)
!12179 = distinct !DILexicalBlock(scope: !12180, file: !818, line: 922, column: 13)
!12180 = distinct !DILexicalBlock(scope: !11907, file: !818, line: 921, column: 12)
!12181 = !DILocation(line: 922, column: 13, scope: !12180)
!12182 = !DILocation(line: 923, column: 13, scope: !12183)
!12183 = distinct !DILexicalBlock(scope: !12179, file: !818, line: 922, column: 20)
!12184 = !DILocation(line: 924, column: 9, scope: !12183)
!12185 = !DILocation(line: 926, column: 17, scope: !12186)
!12186 = distinct !DILexicalBlock(scope: !12187, file: !818, line: 926, column: 17)
!12187 = distinct !DILexicalBlock(scope: !12179, file: !818, line: 924, column: 16)
!12188 = !DILocation(line: 926, column: 26, scope: !12186)
!12189 = !DILocation(line: 926, column: 17, scope: !12187)
!12190 = !DILocation(line: 927, column: 29, scope: !12191)
!12191 = distinct !DILexicalBlock(scope: !12186, file: !818, line: 926, column: 45)
!12192 = !DILocation(line: 927, column: 32, scope: !12191)
!12193 = !DILocation(line: 927, column: 17, scope: !12191)
!12194 = !DILocation(line: 928, column: 13, scope: !12191)
!12195 = !DILocation(line: 930, column: 21, scope: !12180)
!12196 = !DILocation(line: 930, column: 24, scope: !12180)
!12197 = !DILocation(line: 930, column: 9, scope: !12180)
!12198 = !DILocation(line: 932, column: 11, scope: !11795)
!12199 = !DILocation(line: 932, column: 14, scope: !11795)
!12200 = !DILocation(line: 932, column: 5, scope: !11795)
!12201 = !DILocation(line: 933, column: 9, scope: !12202)
!12202 = distinct !DILexicalBlock(scope: !11795, file: !818, line: 933, column: 9)
!12203 = !DILocation(line: 933, column: 22, scope: !12202)
!12204 = !DILocation(line: 933, column: 9, scope: !11795)
!12205 = !DILocation(line: 937, column: 15, scope: !12206)
!12206 = distinct !DILexicalBlock(scope: !12202, file: !818, line: 933, column: 28)
!12207 = !DILocation(line: 937, column: 9, scope: !12206)
!12208 = !DILocation(line: 938, column: 5, scope: !12206)
!12209 = !DILocation(line: 939, column: 9, scope: !12210)
!12210 = distinct !DILexicalBlock(scope: !12202, file: !818, line: 938, column: 12)
!12211 = !DILocation(line: 940, column: 9, scope: !12210)
!12212 = !DILocation(line: 942, column: 9, scope: !12213)
!12213 = distinct !DILexicalBlock(scope: !11795, file: !818, line: 942, column: 9)
!12214 = !DILocation(line: 942, column: 15, scope: !12213)
!12215 = !DILocation(line: 942, column: 18, scope: !12213)
!12216 = !DILocation(line: 942, column: 24, scope: !12213)
!12217 = !DILocation(line: 942, column: 27, scope: !12213)
!12218 = !DILocation(line: 942, column: 33, scope: !12213)
!12219 = !DILocation(line: 942, column: 36, scope: !12213)
!12220 = !DILocation(line: 942, column: 42, scope: !12213)
!12221 = !DILocation(line: 942, column: 45, scope: !12213)
!12222 = !DILocation(line: 942, column: 51, scope: !12213)
!12223 = !DILocation(line: 942, column: 54, scope: !12213)
!12224 = !DILocation(line: 942, column: 60, scope: !12213)
!12225 = !DILocation(line: 942, column: 63, scope: !12213)
!12226 = !DILocation(line: 942, column: 69, scope: !12213)
!12227 = !DILocation(line: 943, column: 9, scope: !12213)
!12228 = !DILocation(line: 943, column: 15, scope: !12213)
!12229 = !DILocation(line: 943, column: 18, scope: !12213)
!12230 = !DILocation(line: 942, column: 9, scope: !11795)
!12231 = !DILocation(line: 945, column: 18, scope: !12213)
!12232 = !DILocation(line: 946, column: 18, scope: !12213)
!12233 = !DILocation(line: 947, column: 18, scope: !12213)
!12234 = !DILocation(line: 948, column: 18, scope: !12213)
!12235 = !DILocation(line: 949, column: 18, scope: !12213)
!12236 = !DILocation(line: 950, column: 18, scope: !12213)
!12237 = !DILocation(line: 951, column: 18, scope: !12213)
!12238 = !DILocation(line: 951, column: 38, scope: !12213)
!12239 = !DILocation(line: 952, column: 18, scope: !12213)
!12240 = !DILocation(line: 944, column: 9, scope: !12213)
!12241 = !DILocation(line: 953, column: 9, scope: !12242)
!12242 = distinct !DILexicalBlock(scope: !11795, file: !818, line: 953, column: 9)
!12243 = !DILocation(line: 953, column: 20, scope: !12242)
!12244 = !DILocation(line: 953, column: 17, scope: !12242)
!12245 = !DILocation(line: 953, column: 9, scope: !11795)
!12246 = !DILocation(line: 954, column: 41, scope: !12247)
!12247 = distinct !DILexicalBlock(scope: !12242, file: !818, line: 953, column: 34)
!12248 = !DILocation(line: 954, column: 9, scope: !12247)
!12249 = !DILocation(line: 955, column: 5, scope: !12247)
!12250 = !DILocation(line: 956, column: 39, scope: !12251)
!12251 = distinct !DILexicalBlock(scope: !12242, file: !818, line: 955, column: 12)
!12252 = !DILocation(line: 956, column: 9, scope: !12251)
!12253 = !DILabel(scope: !11795, name: "end", file: !818, line: 958)
!12254 = !DILocation(line: 958, column: 1, scope: !11795)
!12255 = !DILocation(line: 959, column: 9, scope: !12256)
!12256 = distinct !DILexicalBlock(scope: !11795, file: !818, line: 959, column: 9)
!12257 = !DILocation(line: 959, column: 9, scope: !11795)
!12258 = !DILocation(line: 960, column: 49, scope: !12259)
!12259 = distinct !DILexicalBlock(scope: !12256, file: !818, line: 959, column: 20)
!12260 = !DILocation(line: 960, column: 40, scope: !12259)
!12261 = !DILocation(line: 960, column: 9, scope: !12259)
!12262 = !DILocation(line: 962, column: 1, scope: !11795)
!12263 = distinct !DISubprogram(name: "unescape_and_return_next_file", scope: !818, file: !818, line: 728, type: !12264, scopeLine: 728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !817, retainedNodes: !471)
!12264 = !DISubroutineType(types: !12265)
!12265 = !{!308, !749}
!12266 = !DILocalVariable(name: "str", arg: 1, scope: !12263, file: !818, line: 728, type: !749)
!12267 = !DILocation(line: 728, column: 57, scope: !12263)
!12268 = !DILocalVariable(name: "pnt", scope: !12263, file: !818, line: 729, type: !308)
!12269 = !DILocation(line: 729, column: 11, scope: !12263)
!12270 = !DILocation(line: 729, column: 17, scope: !12263)
!12271 = !DILocalVariable(name: "seen_backslash", scope: !12263, file: !818, line: 730, type: !396)
!12272 = !DILocation(line: 730, column: 17, scope: !12263)
!12273 = !DILocation(line: 732, column: 5, scope: !12263)
!12274 = !DILocation(line: 732, column: 13, scope: !12263)
!12275 = !DILocation(line: 732, column: 12, scope: !12263)
!12276 = !DILocation(line: 732, column: 17, scope: !12263)
!12277 = !DILocation(line: 733, column: 13, scope: !12278)
!12278 = distinct !DILexicalBlock(scope: !12279, file: !818, line: 733, column: 13)
!12279 = distinct !DILexicalBlock(scope: !12263, file: !818, line: 732, column: 23)
!12280 = !DILocation(line: 733, column: 28, scope: !12278)
!12281 = !DILocation(line: 733, column: 13, scope: !12279)
!12282 = !DILocation(line: 734, column: 18, scope: !12283)
!12283 = distinct !DILexicalBlock(scope: !12284, file: !818, line: 734, column: 17)
!12284 = distinct !DILexicalBlock(scope: !12278, file: !818, line: 733, column: 34)
!12285 = !DILocation(line: 734, column: 17, scope: !12283)
!12286 = !DILocation(line: 734, column: 22, scope: !12283)
!12287 = !DILocation(line: 734, column: 17, scope: !12284)
!12288 = !DILocation(line: 735, column: 32, scope: !12289)
!12289 = distinct !DILexicalBlock(scope: !12283, file: !818, line: 734, column: 31)
!12290 = !DILocation(line: 736, column: 13, scope: !12289)
!12291 = !DILocation(line: 736, column: 25, scope: !12292)
!12292 = distinct !DILexicalBlock(scope: !12283, file: !818, line: 736, column: 24)
!12293 = !DILocation(line: 736, column: 24, scope: !12292)
!12294 = !DILocation(line: 736, column: 29, scope: !12292)
!12295 = !DILocation(line: 736, column: 24, scope: !12283)
!12296 = !DILocation(line: 737, column: 21, scope: !12297)
!12297 = distinct !DILexicalBlock(scope: !12292, file: !818, line: 736, column: 37)
!12298 = !DILocation(line: 737, column: 24, scope: !12297)
!12299 = !DILocation(line: 738, column: 22, scope: !12300)
!12300 = distinct !DILexicalBlock(scope: !12297, file: !818, line: 738, column: 21)
!12301 = !DILocation(line: 738, column: 21, scope: !12300)
!12302 = !DILocation(line: 738, column: 26, scope: !12300)
!12303 = !DILocation(line: 738, column: 21, scope: !12297)
!12304 = !DILocation(line: 739, column: 28, scope: !12305)
!12305 = distinct !DILexicalBlock(scope: !12300, file: !818, line: 738, column: 32)
!12306 = !DILocation(line: 739, column: 21, scope: !12305)
!12307 = !DILocation(line: 741, column: 17, scope: !12297)
!12308 = !DILocation(line: 743, column: 16, scope: !12284)
!12309 = !DILocation(line: 744, column: 9, scope: !12284)
!12310 = !DILocation(line: 745, column: 28, scope: !12311)
!12311 = distinct !DILexicalBlock(scope: !12278, file: !818, line: 744, column: 16)
!12312 = !DILocation(line: 746, column: 18, scope: !12313)
!12313 = distinct !DILexicalBlock(scope: !12311, file: !818, line: 746, column: 17)
!12314 = !DILocation(line: 746, column: 17, scope: !12313)
!12315 = !DILocation(line: 746, column: 22, scope: !12313)
!12316 = !DILocation(line: 746, column: 29, scope: !12313)
!12317 = !DILocation(line: 746, column: 33, scope: !12313)
!12318 = !DILocation(line: 746, column: 32, scope: !12313)
!12319 = !DILocation(line: 746, column: 37, scope: !12313)
!12320 = !DILocation(line: 746, column: 45, scope: !12313)
!12321 = !DILocation(line: 746, column: 49, scope: !12313)
!12322 = !DILocation(line: 746, column: 48, scope: !12313)
!12323 = !DILocation(line: 746, column: 53, scope: !12313)
!12324 = !DILocation(line: 746, column: 60, scope: !12313)
!12325 = !DILocation(line: 746, column: 64, scope: !12313)
!12326 = !DILocation(line: 746, column: 63, scope: !12313)
!12327 = !DILocation(line: 746, column: 68, scope: !12313)
!12328 = !DILocation(line: 746, column: 17, scope: !12311)
!12329 = !DILocation(line: 747, column: 25, scope: !12330)
!12330 = distinct !DILexicalBlock(scope: !12313, file: !818, line: 746, column: 76)
!12331 = !DILocation(line: 747, column: 29, scope: !12330)
!12332 = !DILocation(line: 747, column: 34, scope: !12330)
!12333 = !DILocation(line: 747, column: 46, scope: !12330)
!12334 = !DILocation(line: 747, column: 39, scope: !12330)
!12335 = !DILocation(line: 747, column: 51, scope: !12330)
!12336 = !DILocation(line: 747, column: 17, scope: !12330)
!12337 = !DILocation(line: 748, column: 13, scope: !12330)
!12338 = distinct !{!12338, !12273, !12339}
!12339 = !DILocation(line: 750, column: 5, scope: !12263)
!12340 = !DILocation(line: 751, column: 5, scope: !12263)
!12341 = !DILocation(line: 752, column: 1, scope: !12263)
!12342 = distinct !DISubprogram(name: "listfile", scope: !818, file: !818, line: 235, type: !12343, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !817, retainedNodes: !471)
!12343 = !DISubroutineType(types: !12344)
!12344 = !{!326, !12345, !385}
!12345 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !821)
!12346 = !DILocalVariable(name: "fi", arg: 1, scope: !12342, file: !818, line: 235, type: !12345)
!12347 = !DILocation(line: 235, column: 48, scope: !12342)
!12348 = !DILocalVariable(name: "name", arg: 2, scope: !12342, file: !818, line: 235, type: !385)
!12349 = !DILocation(line: 235, column: 64, scope: !12342)
!12350 = !DILocalVariable(name: "rval", scope: !12342, file: !818, line: 237, type: !326)
!12351 = !DILocation(line: 237, column: 9, scope: !12342)
!12352 = !DILocalVariable(name: "st", scope: !12342, file: !818, line: 238, type: !11935)
!12353 = !DILocation(line: 238, column: 17, scope: !12342)
!12354 = !DILocalVariable(name: "t", scope: !12342, file: !818, line: 239, type: !12355)
!12355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12356, size: 64)
!12356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !3132, line: 7, size: 448, elements: !12357)
!12357 = !{!12358, !12359, !12360, !12361, !12362, !12363, !12364, !12365, !12366, !12367, !12368}
!12358 = !DIDerivedType(tag: DW_TAG_member, name: "tm_sec", scope: !12356, file: !3132, line: 9, baseType: !326, size: 32)
!12359 = !DIDerivedType(tag: DW_TAG_member, name: "tm_min", scope: !12356, file: !3132, line: 10, baseType: !326, size: 32, offset: 32)
!12360 = !DIDerivedType(tag: DW_TAG_member, name: "tm_hour", scope: !12356, file: !3132, line: 11, baseType: !326, size: 32, offset: 64)
!12361 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mday", scope: !12356, file: !3132, line: 12, baseType: !326, size: 32, offset: 96)
!12362 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mon", scope: !12356, file: !3132, line: 13, baseType: !326, size: 32, offset: 128)
!12363 = !DIDerivedType(tag: DW_TAG_member, name: "tm_year", scope: !12356, file: !3132, line: 14, baseType: !326, size: 32, offset: 160)
!12364 = !DIDerivedType(tag: DW_TAG_member, name: "tm_wday", scope: !12356, file: !3132, line: 15, baseType: !326, size: 32, offset: 192)
!12365 = !DIDerivedType(tag: DW_TAG_member, name: "tm_yday", scope: !12356, file: !3132, line: 16, baseType: !326, size: 32, offset: 224)
!12366 = !DIDerivedType(tag: DW_TAG_member, name: "tm_isdst", scope: !12356, file: !3132, line: 17, baseType: !326, size: 32, offset: 256)
!12367 = !DIDerivedType(tag: DW_TAG_member, name: "tm_gmtoff", scope: !12356, file: !3132, line: 20, baseType: !334, size: 64, offset: 320)
!12368 = !DIDerivedType(tag: DW_TAG_member, name: "tm_zone", scope: !12356, file: !3132, line: 21, baseType: !385, size: 64, offset: 384)
!12369 = !DILocation(line: 239, column: 16, scope: !12342)
!12370 = !DILocalVariable(name: "suffix", scope: !12342, file: !818, line: 240, type: !12371)
!12371 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 16, elements: !798)
!12372 = !DILocation(line: 240, column: 10, scope: !12342)
!12373 = !DILocalVariable(name: "m", scope: !12342, file: !818, line: 241, type: !606)
!12374 = !DILocation(line: 241, column: 10, scope: !12342)
!12375 = !DILocalVariable(name: "format", scope: !12342, file: !818, line: 242, type: !385)
!12376 = !DILocation(line: 242, column: 17, scope: !12342)
!12377 = !DILocation(line: 244, column: 9, scope: !12378)
!12378 = distinct !DILexicalBlock(scope: !12342, file: !818, line: 244, column: 9)
!12379 = !DILocation(line: 244, column: 12, scope: !12378)
!12380 = !DILocation(line: 244, column: 9, scope: !12342)
!12381 = !DILocation(line: 245, column: 19, scope: !12382)
!12382 = distinct !DILexicalBlock(scope: !12383, file: !818, line: 245, column: 13)
!12383 = distinct !DILexicalBlock(scope: !12378, file: !818, line: 244, column: 21)
!12384 = !DILocation(line: 245, column: 13, scope: !12382)
!12385 = !DILocation(line: 245, column: 30, scope: !12382)
!12386 = !DILocation(line: 245, column: 13, scope: !12383)
!12387 = !DILocation(line: 246, column: 13, scope: !12388)
!12388 = distinct !DILexicalBlock(scope: !12382, file: !818, line: 245, column: 35)
!12389 = !DILocation(line: 248, column: 5, scope: !12383)
!12390 = !DILocation(line: 249, column: 22, scope: !12391)
!12391 = distinct !DILexicalBlock(scope: !12378, file: !818, line: 248, column: 12)
!12392 = !DILocation(line: 249, column: 26, scope: !12391)
!12393 = !DILocation(line: 249, column: 12, scope: !12391)
!12394 = !DILocation(line: 249, column: 20, scope: !12391)
!12395 = !DILocation(line: 250, column: 23, scope: !12391)
!12396 = !DILocation(line: 250, column: 27, scope: !12391)
!12397 = !DILocation(line: 250, column: 12, scope: !12391)
!12398 = !DILocation(line: 250, column: 21, scope: !12391)
!12399 = !DILocation(line: 251, column: 22, scope: !12391)
!12400 = !DILocation(line: 251, column: 26, scope: !12391)
!12401 = !DILocation(line: 251, column: 12, scope: !12391)
!12402 = !DILocation(line: 251, column: 20, scope: !12391)
!12403 = !DILocation(line: 252, column: 23, scope: !12391)
!12404 = !DILocation(line: 252, column: 27, scope: !12391)
!12405 = !DILocation(line: 252, column: 12, scope: !12391)
!12406 = !DILocation(line: 252, column: 21, scope: !12391)
!12407 = !DILocation(line: 253, column: 21, scope: !12391)
!12408 = !DILocation(line: 253, column: 25, scope: !12391)
!12409 = !DILocation(line: 253, column: 12, scope: !12391)
!12410 = !DILocation(line: 253, column: 19, scope: !12391)
!12411 = !DILocation(line: 254, column: 21, scope: !12391)
!12412 = !DILocation(line: 254, column: 25, scope: !12391)
!12413 = !DILocation(line: 254, column: 12, scope: !12391)
!12414 = !DILocation(line: 254, column: 19, scope: !12391)
!12415 = !DILocation(line: 255, column: 16, scope: !12391)
!12416 = !DILocation(line: 255, column: 14, scope: !12391)
!12417 = !DILocation(line: 267, column: 9, scope: !12418)
!12418 = distinct !DILexicalBlock(scope: !12342, file: !818, line: 267, column: 9)
!12419 = !DILocation(line: 267, column: 30, scope: !12418)
!12420 = !DILocation(line: 267, column: 35, scope: !12418)
!12421 = !DILocation(line: 269, column: 9, scope: !12418)
!12422 = !DILocation(line: 267, column: 9, scope: !12342)
!12423 = !DILocalVariable(name: "sts", scope: !12424, file: !818, line: 270, type: !11935)
!12424 = distinct !DILexicalBlock(scope: !12418, file: !818, line: 269, column: 30)
!12425 = !DILocation(line: 270, column: 21, scope: !12424)
!12426 = !DILocation(line: 272, column: 18, scope: !12427)
!12427 = distinct !DILexicalBlock(scope: !12424, file: !818, line: 272, column: 13)
!12428 = !DILocation(line: 272, column: 13, scope: !12427)
!12429 = !DILocation(line: 272, column: 30, scope: !12427)
!12430 = !DILocation(line: 272, column: 35, scope: !12427)
!12431 = !DILocation(line: 272, column: 39, scope: !12427)
!12432 = !DILocation(line: 272, column: 13, scope: !12424)
!12433 = !DILocation(line: 273, column: 18, scope: !12434)
!12434 = distinct !DILexicalBlock(scope: !12427, file: !818, line: 272, column: 61)
!12435 = !DILocation(line: 274, column: 9, scope: !12434)
!12436 = !DILocation(line: 275, column: 5, scope: !12424)
!12437 = !DILocation(line: 280, column: 34, scope: !12342)
!12438 = !DILocation(line: 280, column: 9, scope: !12342)
!12439 = !DILocation(line: 280, column: 7, scope: !12342)
!12440 = !DILocation(line: 282, column: 9, scope: !12441)
!12441 = distinct !DILexicalBlock(scope: !12342, file: !818, line: 282, column: 9)
!12442 = !DILocation(line: 282, column: 11, scope: !12441)
!12443 = !DILocation(line: 282, column: 9, scope: !12342)
!12444 = !DILocation(line: 283, column: 56, scope: !12445)
!12445 = distinct !DILexicalBlock(scope: !12441, file: !818, line: 282, column: 20)
!12446 = !DILocation(line: 283, column: 9, scope: !12445)
!12447 = !DILocation(line: 284, column: 9, scope: !12445)
!12448 = !DILocation(line: 286, column: 9, scope: !12449)
!12449 = distinct !DILexicalBlock(scope: !12342, file: !818, line: 286, column: 9)
!12450 = !DILocation(line: 286, column: 9, scope: !12342)
!12451 = !DILocation(line: 287, column: 13, scope: !12452)
!12452 = distinct !DILexicalBlock(scope: !12453, file: !818, line: 287, column: 13)
!12453 = distinct !DILexicalBlock(scope: !12449, file: !818, line: 286, column: 16)
!12454 = !DILocation(line: 287, column: 13, scope: !12453)
!12455 = !DILocation(line: 288, column: 13, scope: !12452)
!12456 = !DILocation(line: 288, column: 23, scope: !12452)
!12457 = !DILocation(line: 289, column: 18, scope: !12458)
!12458 = distinct !DILexicalBlock(scope: !12452, file: !818, line: 289, column: 18)
!12459 = !DILocation(line: 289, column: 18, scope: !12452)
!12460 = !DILocation(line: 290, column: 13, scope: !12461)
!12461 = distinct !DILexicalBlock(scope: !12458, file: !818, line: 289, column: 39)
!12462 = !DILocation(line: 290, column: 23, scope: !12461)
!12463 = !DILocation(line: 291, column: 18, scope: !12461)
!12464 = !DILocation(line: 292, column: 9, scope: !12461)
!12465 = !DILocation(line: 292, column: 23, scope: !12466)
!12466 = distinct !DILexicalBlock(scope: !12458, file: !818, line: 292, column: 20)
!12467 = !DILocation(line: 292, column: 31, scope: !12466)
!12468 = !DILocation(line: 292, column: 20, scope: !12458)
!12469 = !DILocation(line: 293, column: 13, scope: !12470)
!12470 = distinct !DILexicalBlock(scope: !12466, file: !818, line: 292, column: 41)
!12471 = !DILocation(line: 293, column: 23, scope: !12470)
!12472 = !DILocation(line: 294, column: 9, scope: !12470)
!12473 = !DILocation(line: 295, column: 5, scope: !12453)
!12474 = !DILocation(line: 296, column: 9, scope: !12475)
!12475 = distinct !DILexicalBlock(scope: !12342, file: !818, line: 296, column: 9)
!12476 = !DILocation(line: 296, column: 9, scope: !12342)
!12477 = !DILocation(line: 297, column: 17, scope: !12478)
!12478 = distinct !DILexicalBlock(scope: !12475, file: !818, line: 296, column: 16)
!12479 = !DILocation(line: 297, column: 9, scope: !12478)
!12480 = !DILocation(line: 298, column: 9, scope: !12478)
!12481 = !DILocation(line: 298, column: 37, scope: !12478)
!12482 = !DILocation(line: 299, column: 20, scope: !12478)
!12483 = !DILocation(line: 299, column: 28, scope: !12478)
!12484 = !DILocation(line: 299, column: 9, scope: !12478)
!12485 = !DILocation(line: 301, column: 13, scope: !12486)
!12486 = distinct !DILexicalBlock(scope: !12478, file: !818, line: 299, column: 38)
!12487 = !DILocation(line: 301, column: 18, scope: !12486)
!12488 = !DILocation(line: 302, column: 13, scope: !12486)
!12489 = !DILocation(line: 304, column: 13, scope: !12486)
!12490 = !DILocation(line: 304, column: 18, scope: !12486)
!12491 = !DILocation(line: 305, column: 13, scope: !12486)
!12492 = !DILocation(line: 307, column: 13, scope: !12486)
!12493 = !DILocation(line: 307, column: 18, scope: !12486)
!12494 = !DILocation(line: 308, column: 18, scope: !12486)
!12495 = !DILocation(line: 309, column: 13, scope: !12486)
!12496 = !DILocation(line: 311, column: 13, scope: !12497)
!12497 = distinct !DILexicalBlock(scope: !12478, file: !818, line: 311, column: 13)
!12498 = !DILocation(line: 311, column: 18, scope: !12497)
!12499 = !DILocation(line: 311, column: 13, scope: !12478)
!12500 = !DILocalVariable(name: "alloca_nameline", scope: !12501, file: !818, line: 312, type: !308)
!12501 = distinct !DILexicalBlock(scope: !12497, file: !818, line: 311, column: 26)
!12502 = !DILocation(line: 312, column: 19, scope: !12501)
!12503 = !DILocalVariable(name: "sizeof_nameline", scope: !12501, file: !818, line: 313, type: !425)
!12504 = !DILocation(line: 313, column: 26, scope: !12501)
!12505 = !DILocalVariable(name: "timeline", scope: !12501, file: !818, line: 314, type: !12506)
!12506 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 48, elements: !3388)
!12507 = !DILocation(line: 314, column: 18, scope: !12501)
!12508 = !DILocation(line: 316, column: 20, scope: !12509)
!12509 = distinct !DILexicalBlock(scope: !12501, file: !818, line: 316, column: 17)
!12510 = !DILocation(line: 316, column: 28, scope: !12509)
!12511 = !DILocation(line: 316, column: 17, scope: !12501)
!12512 = !DILocation(line: 317, column: 17, scope: !12513)
!12513 = distinct !DILexicalBlock(scope: !12509, file: !818, line: 316, column: 36)
!12514 = !DILocation(line: 317, column: 22, scope: !12513)
!12515 = !DILocation(line: 318, column: 13, scope: !12513)
!12516 = !DILocation(line: 319, column: 20, scope: !12517)
!12517 = distinct !DILexicalBlock(scope: !12501, file: !818, line: 319, column: 17)
!12518 = !DILocation(line: 319, column: 28, scope: !12517)
!12519 = !DILocation(line: 319, column: 17, scope: !12501)
!12520 = !DILocation(line: 320, column: 17, scope: !12521)
!12521 = distinct !DILexicalBlock(scope: !12517, file: !818, line: 319, column: 36)
!12522 = !DILocation(line: 320, column: 22, scope: !12521)
!12523 = !DILocation(line: 321, column: 13, scope: !12521)
!12524 = !DILocation(line: 322, column: 20, scope: !12525)
!12525 = distinct !DILexicalBlock(scope: !12501, file: !818, line: 322, column: 17)
!12526 = !DILocation(line: 322, column: 28, scope: !12525)
!12527 = !DILocation(line: 322, column: 17, scope: !12501)
!12528 = !DILocation(line: 323, column: 35, scope: !12529)
!12529 = distinct !DILexicalBlock(scope: !12525, file: !818, line: 322, column: 36)
!12530 = !DILocation(line: 323, column: 43, scope: !12529)
!12531 = !DILocation(line: 323, column: 32, scope: !12529)
!12532 = !DILocation(line: 323, column: 24, scope: !12529)
!12533 = !DILocation(line: 323, column: 17, scope: !12529)
!12534 = !DILocation(line: 323, column: 22, scope: !12529)
!12535 = !DILocation(line: 324, column: 13, scope: !12529)
!12536 = !DILocation(line: 324, column: 27, scope: !12537)
!12537 = distinct !DILexicalBlock(scope: !12525, file: !818, line: 324, column: 24)
!12538 = !DILocation(line: 324, column: 35, scope: !12537)
!12539 = !DILocation(line: 324, column: 24, scope: !12525)
!12540 = !DILocation(line: 325, column: 17, scope: !12541)
!12541 = distinct !DILexicalBlock(scope: !12537, file: !818, line: 324, column: 44)
!12542 = !DILocation(line: 325, column: 22, scope: !12541)
!12543 = !DILocation(line: 326, column: 13, scope: !12541)
!12544 = !DILocation(line: 327, column: 20, scope: !12545)
!12545 = distinct !DILexicalBlock(scope: !12501, file: !818, line: 327, column: 17)
!12546 = !DILocation(line: 327, column: 28, scope: !12545)
!12547 = !DILocation(line: 327, column: 17, scope: !12501)
!12548 = !DILocation(line: 328, column: 17, scope: !12549)
!12549 = distinct !DILexicalBlock(scope: !12545, file: !818, line: 327, column: 35)
!12550 = !DILocation(line: 328, column: 22, scope: !12549)
!12551 = !DILocation(line: 329, column: 13, scope: !12549)
!12552 = !DILocation(line: 330, column: 20, scope: !12553)
!12553 = distinct !DILexicalBlock(scope: !12501, file: !818, line: 330, column: 17)
!12554 = !DILocation(line: 330, column: 28, scope: !12553)
!12555 = !DILocation(line: 330, column: 17, scope: !12501)
!12556 = !DILocation(line: 331, column: 17, scope: !12557)
!12557 = distinct !DILexicalBlock(scope: !12553, file: !818, line: 330, column: 35)
!12558 = !DILocation(line: 331, column: 22, scope: !12557)
!12559 = !DILocation(line: 332, column: 13, scope: !12557)
!12560 = !DILocation(line: 333, column: 20, scope: !12561)
!12561 = distinct !DILexicalBlock(scope: !12501, file: !818, line: 333, column: 17)
!12562 = !DILocation(line: 333, column: 28, scope: !12561)
!12563 = !DILocation(line: 333, column: 17, scope: !12501)
!12564 = !DILocation(line: 334, column: 35, scope: !12565)
!12565 = distinct !DILexicalBlock(scope: !12561, file: !818, line: 333, column: 35)
!12566 = !DILocation(line: 334, column: 43, scope: !12565)
!12567 = !DILocation(line: 334, column: 32, scope: !12565)
!12568 = !DILocation(line: 334, column: 24, scope: !12565)
!12569 = !DILocation(line: 334, column: 17, scope: !12565)
!12570 = !DILocation(line: 334, column: 22, scope: !12565)
!12571 = !DILocation(line: 335, column: 13, scope: !12565)
!12572 = !DILocation(line: 335, column: 27, scope: !12573)
!12573 = distinct !DILexicalBlock(scope: !12561, file: !818, line: 335, column: 24)
!12574 = !DILocation(line: 335, column: 35, scope: !12573)
!12575 = !DILocation(line: 335, column: 24, scope: !12561)
!12576 = !DILocation(line: 336, column: 17, scope: !12577)
!12577 = distinct !DILexicalBlock(scope: !12573, file: !818, line: 335, column: 44)
!12578 = !DILocation(line: 336, column: 22, scope: !12577)
!12579 = !DILocation(line: 337, column: 13, scope: !12577)
!12580 = !DILocation(line: 338, column: 20, scope: !12581)
!12581 = distinct !DILexicalBlock(scope: !12501, file: !818, line: 338, column: 17)
!12582 = !DILocation(line: 338, column: 28, scope: !12581)
!12583 = !DILocation(line: 338, column: 17, scope: !12501)
!12584 = !DILocation(line: 339, column: 17, scope: !12585)
!12585 = distinct !DILexicalBlock(scope: !12581, file: !818, line: 338, column: 34)
!12586 = !DILocation(line: 339, column: 22, scope: !12585)
!12587 = !DILocation(line: 340, column: 13, scope: !12585)
!12588 = !DILocation(line: 341, column: 20, scope: !12589)
!12589 = distinct !DILexicalBlock(scope: !12501, file: !818, line: 341, column: 17)
!12590 = !DILocation(line: 341, column: 28, scope: !12589)
!12591 = !DILocation(line: 341, column: 17, scope: !12501)
!12592 = !DILocation(line: 342, column: 17, scope: !12593)
!12593 = distinct !DILexicalBlock(scope: !12589, file: !818, line: 341, column: 34)
!12594 = !DILocation(line: 342, column: 22, scope: !12593)
!12595 = !DILocation(line: 343, column: 13, scope: !12593)
!12596 = !DILocation(line: 344, column: 20, scope: !12597)
!12597 = distinct !DILexicalBlock(scope: !12501, file: !818, line: 344, column: 17)
!12598 = !DILocation(line: 344, column: 28, scope: !12597)
!12599 = !DILocation(line: 344, column: 17, scope: !12501)
!12600 = !DILocation(line: 345, column: 35, scope: !12601)
!12601 = distinct !DILexicalBlock(scope: !12597, file: !818, line: 344, column: 34)
!12602 = !DILocation(line: 345, column: 43, scope: !12601)
!12603 = !DILocation(line: 345, column: 32, scope: !12601)
!12604 = !DILocation(line: 345, column: 24, scope: !12601)
!12605 = !DILocation(line: 345, column: 17, scope: !12601)
!12606 = !DILocation(line: 345, column: 22, scope: !12601)
!12607 = !DILocation(line: 346, column: 13, scope: !12601)
!12608 = !DILocation(line: 346, column: 27, scope: !12609)
!12609 = distinct !DILexicalBlock(scope: !12597, file: !818, line: 346, column: 24)
!12610 = !DILocation(line: 346, column: 35, scope: !12609)
!12611 = !DILocation(line: 346, column: 24, scope: !12597)
!12612 = !DILocation(line: 347, column: 17, scope: !12613)
!12613 = distinct !DILexicalBlock(scope: !12609, file: !818, line: 346, column: 44)
!12614 = !DILocation(line: 347, column: 22, scope: !12613)
!12615 = !DILocation(line: 348, column: 13, scope: !12613)
!12616 = !DILocation(line: 349, column: 17, scope: !12617)
!12617 = distinct !DILexicalBlock(scope: !12501, file: !818, line: 349, column: 17)
!12618 = !DILocation(line: 349, column: 33, scope: !12617)
!12619 = !DILocation(line: 349, column: 28, scope: !12617)
!12620 = !DILocation(line: 349, column: 42, scope: !12617)
!12621 = !DILocation(line: 349, column: 17, scope: !12501)
!12622 = !DILocation(line: 350, column: 21, scope: !12623)
!12623 = distinct !DILexicalBlock(scope: !12624, file: !818, line: 350, column: 21)
!12624 = distinct !DILexicalBlock(scope: !12617, file: !818, line: 349, column: 64)
!12625 = !DILocation(line: 350, column: 21, scope: !12624)
!12626 = !DILocation(line: 352, column: 21, scope: !12627)
!12627 = distinct !DILexicalBlock(scope: !12623, file: !818, line: 351, column: 76)
!12628 = !DILocation(line: 354, column: 13, scope: !12624)
!12629 = !DILocation(line: 355, column: 21, scope: !12630)
!12630 = distinct !DILexicalBlock(scope: !12631, file: !818, line: 355, column: 21)
!12631 = distinct !DILexicalBlock(scope: !12617, file: !818, line: 354, column: 20)
!12632 = !DILocation(line: 355, column: 21, scope: !12631)
!12633 = !DILocation(line: 357, column: 21, scope: !12634)
!12634 = distinct !DILexicalBlock(scope: !12630, file: !818, line: 356, column: 80)
!12635 = !DILocation(line: 360, column: 36, scope: !12636)
!12636 = distinct !DILexicalBlock(scope: !12501, file: !818, line: 360, column: 17)
!12637 = !DILocation(line: 360, column: 34, scope: !12636)
!12638 = !DILocation(line: 360, column: 61, scope: !12636)
!12639 = !DILocation(line: 360, column: 17, scope: !12501)
!12640 = !DILocation(line: 361, column: 17, scope: !12641)
!12641 = distinct !DILexicalBlock(scope: !12636, file: !818, line: 360, column: 70)
!12642 = !DILocation(line: 363, column: 20, scope: !12643)
!12643 = distinct !DILexicalBlock(scope: !12501, file: !818, line: 363, column: 17)
!12644 = !DILocation(line: 363, column: 28, scope: !12643)
!12645 = !DILocation(line: 363, column: 17, scope: !12501)
!12646 = !DILocation(line: 364, column: 24, scope: !12647)
!12647 = distinct !DILexicalBlock(scope: !12643, file: !818, line: 363, column: 44)
!12648 = !DILocation(line: 365, column: 13, scope: !12647)
!12649 = !DILocation(line: 366, column: 24, scope: !12650)
!12650 = distinct !DILexicalBlock(scope: !12643, file: !818, line: 365, column: 20)
!12651 = !DILocation(line: 368, column: 17, scope: !12652)
!12652 = distinct !DILexicalBlock(scope: !12501, file: !818, line: 368, column: 17)
!12653 = !DILocation(line: 368, column: 17, scope: !12501)
!12654 = !DILocation(line: 377, column: 17, scope: !12655)
!12655 = distinct !DILexicalBlock(scope: !12652, file: !818, line: 376, column: 43)
!12656 = !DILocation(line: 377, column: 17, scope: !12657)
!12657 = distinct !DILexicalBlock(scope: !12655, file: !818, line: 377, column: 17)
!12658 = !DILocation(line: 378, column: 17, scope: !12655)
!12659 = !DILocation(line: 380, column: 17, scope: !12660)
!12660 = distinct !DILexicalBlock(scope: !12501, file: !818, line: 380, column: 17)
!12661 = !DILocation(line: 380, column: 17, scope: !12501)
!12662 = !DILocalVariable(name: "p", scope: !12663, file: !818, line: 381, type: !308)
!12663 = distinct !DILexicalBlock(scope: !12660, file: !818, line: 380, column: 38)
!12664 = !DILocation(line: 381, column: 23, scope: !12663)
!12665 = !DILocation(line: 381, column: 27, scope: !12663)
!12666 = !DILocation(line: 381, column: 52, scope: !12663)
!12667 = !DILocation(line: 381, column: 45, scope: !12663)
!12668 = !DILocation(line: 381, column: 43, scope: !12663)
!12669 = !DILocalVariable(name: "sx", scope: !12670, file: !818, line: 383, type: !383)
!12670 = distinct !DILexicalBlock(scope: !12663, file: !818, line: 382, column: 17)
!12671 = !DILocation(line: 383, column: 29, scope: !12670)
!12672 = !DILocation(line: 385, column: 40, scope: !12673)
!12673 = distinct !DILexicalBlock(scope: !12670, file: !818, line: 385, column: 25)
!12674 = !DILocation(line: 385, column: 46, scope: !12673)
!12675 = !DILocation(line: 385, column: 31, scope: !12673)
!12676 = !DILocation(line: 385, column: 29, scope: !12673)
!12677 = !DILocation(line: 385, column: 65, scope: !12673)
!12678 = !DILocation(line: 385, column: 25, scope: !12670)
!12679 = !DILocation(line: 386, column: 27, scope: !12680)
!12680 = distinct !DILexicalBlock(scope: !12673, file: !818, line: 385, column: 70)
!12681 = !DILocation(line: 386, column: 25, scope: !12680)
!12682 = !DILocation(line: 386, column: 31, scope: !12680)
!12683 = !DILocation(line: 387, column: 21, scope: !12680)
!12684 = !DILocation(line: 388, column: 32, scope: !12685)
!12685 = distinct !DILexicalBlock(scope: !12673, file: !818, line: 387, column: 28)
!12686 = !DILocation(line: 388, column: 37, scope: !12685)
!12687 = !DILocation(line: 388, column: 25, scope: !12685)
!12688 = !DILocation(line: 388, column: 30, scope: !12685)
!12689 = !DILocation(line: 389, column: 25, scope: !12685)
!12690 = !DILocation(line: 389, column: 30, scope: !12685)
!12691 = !DILocation(line: 392, column: 17, scope: !12663)
!12692 = !DILocation(line: 392, column: 27, scope: !12663)
!12693 = !DILocation(line: 393, column: 21, scope: !12694)
!12694 = distinct !DILexicalBlock(scope: !12663, file: !818, line: 393, column: 21)
!12695 = !DILocation(line: 393, column: 27, scope: !12694)
!12696 = !DILocation(line: 393, column: 35, scope: !12694)
!12697 = !DILocation(line: 393, column: 30, scope: !12694)
!12698 = !DILocation(line: 393, column: 46, scope: !12694)
!12699 = !DILocation(line: 393, column: 21, scope: !12663)
!12700 = !DILocation(line: 394, column: 25, scope: !12701)
!12701 = distinct !DILexicalBlock(scope: !12702, file: !818, line: 394, column: 25)
!12702 = distinct !DILexicalBlock(scope: !12694, file: !818, line: 393, column: 52)
!12703 = !DILocation(line: 394, column: 25, scope: !12702)
!12704 = !DILocation(line: 395, column: 25, scope: !12705)
!12705 = distinct !DILexicalBlock(scope: !12701, file: !818, line: 394, column: 46)
!12706 = !DILocation(line: 395, column: 35, scope: !12705)
!12707 = !DILocation(line: 396, column: 21, scope: !12705)
!12708 = !DILocation(line: 396, column: 32, scope: !12709)
!12709 = distinct !DILexicalBlock(scope: !12701, file: !818, line: 396, column: 32)
!12710 = !DILocation(line: 396, column: 32, scope: !12701)
!12711 = !DILocation(line: 397, column: 25, scope: !12712)
!12712 = distinct !DILexicalBlock(scope: !12709, file: !818, line: 396, column: 53)
!12713 = !DILocation(line: 397, column: 35, scope: !12712)
!12714 = !DILocation(line: 398, column: 21, scope: !12712)
!12715 = !DILocation(line: 398, column: 35, scope: !12716)
!12716 = distinct !DILexicalBlock(scope: !12709, file: !818, line: 398, column: 32)
!12717 = !DILocation(line: 398, column: 43, scope: !12716)
!12718 = !DILocation(line: 398, column: 32, scope: !12709)
!12719 = !DILocation(line: 399, column: 25, scope: !12720)
!12720 = distinct !DILexicalBlock(scope: !12716, file: !818, line: 398, column: 53)
!12721 = !DILocation(line: 399, column: 35, scope: !12720)
!12722 = !DILocation(line: 400, column: 21, scope: !12720)
!12723 = !DILocation(line: 401, column: 17, scope: !12702)
!12724 = !DILocation(line: 403, column: 21, scope: !12725)
!12725 = distinct !DILexicalBlock(scope: !12663, file: !818, line: 403, column: 21)
!12726 = !DILocation(line: 403, column: 21, scope: !12663)
!12727 = !DILocation(line: 407, column: 21, scope: !12728)
!12728 = distinct !DILexicalBlock(scope: !12725, file: !818, line: 406, column: 68)
!12729 = !DILocation(line: 407, column: 21, scope: !12730)
!12730 = distinct !DILexicalBlock(scope: !12728, file: !818, line: 407, column: 21)
!12731 = !DILocation(line: 408, column: 21, scope: !12728)
!12732 = !DILocation(line: 410, column: 13, scope: !12663)
!12733 = !DILocation(line: 411, column: 21, scope: !12501)
!12734 = !DILocation(line: 411, column: 38, scope: !12501)
!12735 = !DILocation(line: 411, column: 13, scope: !12501)
!12736 = !DILocation(line: 412, column: 13, scope: !12501)
!12737 = !DILocation(line: 412, column: 13, scope: !12738)
!12738 = distinct !DILexicalBlock(scope: !12501, file: !818, line: 412, column: 13)
!12739 = !DILocation(line: 413, column: 9, scope: !12501)
!12740 = !DILocation(line: 414, column: 5, scope: !12478)
!12741 = !DILocation(line: 415, column: 13, scope: !12742)
!12742 = distinct !DILexicalBlock(scope: !12743, file: !818, line: 415, column: 13)
!12743 = distinct !DILexicalBlock(scope: !12475, file: !818, line: 414, column: 12)
!12744 = !DILocation(line: 415, column: 33, scope: !12742)
!12745 = !DILocation(line: 416, column: 13, scope: !12742)
!12746 = !DILocation(line: 416, column: 33, scope: !12742)
!12747 = !DILocation(line: 416, column: 36, scope: !12742)
!12748 = !DILocation(line: 415, column: 13, scope: !12743)
!12749 = !DILocation(line: 417, column: 21, scope: !12750)
!12750 = distinct !DILexicalBlock(scope: !12742, file: !818, line: 416, column: 57)
!12751 = !DILocation(line: 417, column: 27, scope: !12750)
!12752 = !DILocation(line: 417, column: 13, scope: !12750)
!12753 = !DILocation(line: 418, column: 9, scope: !12750)
!12754 = !DILocation(line: 420, column: 12, scope: !12342)
!12755 = !DILocation(line: 420, column: 5, scope: !12342)
!12756 = !DILocation(line: 421, column: 1, scope: !12342)
!12757 = distinct !DISubprogram(name: "outputfiles", scope: !818, file: !818, line: 423, type: !12758, scopeLine: 424, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !817, retainedNodes: !471)
!12758 = !DISubroutineType(types: !12759)
!12759 = !{null, !326, !892}
!12760 = !DILocalVariable(name: "f", arg: 1, scope: !12757, file: !818, line: 423, type: !326)
!12761 = !DILocation(line: 423, column: 29, scope: !12757)
!12762 = !DILocalVariable(name: "tls_fd", arg: 2, scope: !12757, file: !818, line: 423, type: !892)
!12763 = !DILocation(line: 423, column: 45, scope: !12757)
!12764 = !DILocalVariable(name: "n", scope: !12757, file: !818, line: 425, type: !7)
!12765 = !DILocation(line: 425, column: 18, scope: !12757)
!12766 = !DILocalVariable(name: "p", scope: !12757, file: !818, line: 426, type: !876)
!12767 = !DILocation(line: 426, column: 22, scope: !12757)
!12768 = !DILocalVariable(name: "q", scope: !12757, file: !818, line: 427, type: !876)
!12769 = !DILocation(line: 427, column: 22, scope: !12757)
!12770 = !DILocation(line: 429, column: 10, scope: !12771)
!12771 = distinct !DILexicalBlock(scope: !12757, file: !818, line: 429, column: 9)
!12772 = !DILocation(line: 429, column: 9, scope: !12757)
!12773 = !DILocation(line: 430, column: 9, scope: !12774)
!12774 = distinct !DILexicalBlock(scope: !12771, file: !818, line: 429, column: 16)
!12775 = !DILocation(line: 432, column: 5, scope: !12757)
!12776 = !DILocation(line: 432, column: 11, scope: !12757)
!12777 = !DILocation(line: 432, column: 16, scope: !12757)
!12778 = !DILocation(line: 433, column: 10, scope: !12757)
!12779 = !DILocation(line: 434, column: 17, scope: !12757)
!12780 = !DILocation(line: 434, column: 26, scope: !12757)
!12781 = !DILocation(line: 434, column: 32, scope: !12757)
!12782 = !DILocation(line: 434, column: 14, scope: !12757)
!12783 = !DILocation(line: 435, column: 9, scope: !12784)
!12784 = distinct !DILexicalBlock(scope: !12757, file: !818, line: 435, column: 9)
!12785 = !DILocation(line: 435, column: 15, scope: !12784)
!12786 = !DILocation(line: 435, column: 20, scope: !12784)
!12787 = !DILocation(line: 435, column: 23, scope: !12784)
!12788 = !DILocation(line: 435, column: 29, scope: !12784)
!12789 = !DILocation(line: 435, column: 9, scope: !12757)
!12790 = !DILocation(line: 436, column: 18, scope: !12791)
!12791 = distinct !DILexicalBlock(scope: !12784, file: !818, line: 435, column: 35)
!12792 = !DILocation(line: 437, column: 5, scope: !12791)
!12793 = !DILocation(line: 439, column: 9, scope: !12757)
!12794 = !DILocation(line: 439, column: 7, scope: !12757)
!12795 = !DILocation(line: 440, column: 5, scope: !12757)
!12796 = !DILocation(line: 440, column: 8, scope: !12757)
!12797 = !DILocation(line: 440, column: 12, scope: !12757)
!12798 = !DILocation(line: 441, column: 9, scope: !12799)
!12799 = distinct !DILexicalBlock(scope: !12757, file: !818, line: 441, column: 9)
!12800 = !DILocation(line: 441, column: 18, scope: !12799)
!12801 = !DILocation(line: 441, column: 9, scope: !12757)
!12802 = !DILocation(line: 442, column: 13, scope: !12803)
!12803 = distinct !DILexicalBlock(scope: !12799, file: !818, line: 441, column: 25)
!12804 = !DILocation(line: 442, column: 11, scope: !12803)
!12805 = !DILocation(line: 443, column: 5, scope: !12803)
!12806 = !DILocation(line: 444, column: 14, scope: !12807)
!12807 = distinct !DILexicalBlock(scope: !12799, file: !818, line: 443, column: 12)
!12808 = !DILocation(line: 444, column: 33, scope: !12807)
!12809 = !DILocation(line: 444, column: 31, scope: !12807)
!12810 = !DILocation(line: 444, column: 24, scope: !12807)
!12811 = !DILocation(line: 444, column: 43, scope: !12807)
!12812 = !DILocation(line: 444, column: 58, scope: !12807)
!12813 = !DILocation(line: 444, column: 56, scope: !12807)
!12814 = !DILocation(line: 444, column: 49, scope: !12807)
!12815 = !DILocation(line: 444, column: 11, scope: !12807)
!12816 = !DILocation(line: 446, column: 5, scope: !12757)
!12817 = !DILocation(line: 446, column: 12, scope: !12757)
!12818 = !DILocation(line: 446, column: 14, scope: !12757)
!12819 = !DILocation(line: 446, column: 17, scope: !12757)
!12820 = !DILocation(line: 0, scope: !12757)
!12821 = !DILocation(line: 447, column: 13, scope: !12822)
!12822 = distinct !DILexicalBlock(scope: !12757, file: !818, line: 446, column: 20)
!12823 = !DILocation(line: 447, column: 16, scope: !12822)
!12824 = !DILocation(line: 447, column: 11, scope: !12822)
!12825 = !DILocation(line: 448, column: 13, scope: !12826)
!12826 = distinct !DILexicalBlock(scope: !12822, file: !818, line: 448, column: 13)
!12827 = !DILocation(line: 448, column: 15, scope: !12826)
!12828 = !DILocation(line: 448, column: 13, scope: !12822)
!12829 = !DILocation(line: 449, column: 13, scope: !12830)
!12830 = distinct !DILexicalBlock(scope: !12826, file: !818, line: 448, column: 24)
!12831 = !DILocation(line: 449, column: 16, scope: !12830)
!12832 = !DILocation(line: 449, column: 20, scope: !12830)
!12833 = !DILocation(line: 450, column: 9, scope: !12830)
!12834 = !DILocation(line: 451, column: 10, scope: !12822)
!12835 = distinct !{!12835, !12816, !12836}
!12836 = !DILocation(line: 452, column: 5, scope: !12757)
!12837 = !DILocation(line: 455, column: 9, scope: !12757)
!12838 = !DILocation(line: 455, column: 7, scope: !12757)
!12839 = !DILocation(line: 456, column: 5, scope: !12757)
!12840 = !DILocation(line: 456, column: 12, scope: !12757)
!12841 = !DILocation(line: 457, column: 18, scope: !12842)
!12842 = distinct !DILexicalBlock(scope: !12757, file: !818, line: 456, column: 15)
!12843 = !DILocation(line: 457, column: 21, scope: !12842)
!12844 = !DILocation(line: 457, column: 9, scope: !12842)
!12845 = !DILocation(line: 457, column: 12, scope: !12842)
!12846 = !DILocation(line: 457, column: 16, scope: !12842)
!12847 = !DILocation(line: 458, column: 20, scope: !12842)
!12848 = !DILocation(line: 458, column: 9, scope: !12842)
!12849 = !DILocation(line: 458, column: 12, scope: !12842)
!12850 = !DILocation(line: 458, column: 18, scope: !12842)
!12851 = !DILocation(line: 459, column: 13, scope: !12842)
!12852 = !DILocation(line: 459, column: 16, scope: !12842)
!12853 = !DILocation(line: 459, column: 11, scope: !12842)
!12854 = !DILocation(line: 460, column: 13, scope: !12842)
!12855 = !DILocation(line: 460, column: 16, scope: !12842)
!12856 = !DILocation(line: 460, column: 11, scope: !12842)
!12857 = distinct !{!12857, !12839, !12858}
!12858 = !DILocation(line: 461, column: 5, scope: !12757)
!12859 = !DILocation(line: 464, column: 5, scope: !12757)
!12860 = !DILocation(line: 464, column: 12, scope: !12757)
!12861 = !DILocation(line: 465, column: 9, scope: !12862)
!12862 = distinct !DILexicalBlock(scope: !12757, file: !818, line: 464, column: 15)
!12863 = !DILocation(line: 465, column: 12, scope: !12862)
!12864 = !DILocation(line: 465, column: 18, scope: !12862)
!12865 = !DILocation(line: 466, column: 13, scope: !12862)
!12866 = !DILocation(line: 466, column: 16, scope: !12862)
!12867 = !DILocation(line: 466, column: 11, scope: !12862)
!12868 = distinct !{!12868, !12859, !12869}
!12869 = !DILocation(line: 467, column: 5, scope: !12757)
!12870 = !DILocation(line: 470, column: 9, scope: !12757)
!12871 = !DILocation(line: 470, column: 7, scope: !12757)
!12872 = !DILocation(line: 471, column: 5, scope: !12757)
!12873 = !DILocation(line: 471, column: 12, scope: !12757)
!12874 = !DILocation(line: 471, column: 14, scope: !12757)
!12875 = !DILocation(line: 471, column: 17, scope: !12757)
!12876 = !DILocation(line: 471, column: 20, scope: !12757)
!12877 = !DILocation(line: 471, column: 25, scope: !12757)
!12878 = !DILocation(line: 471, column: 29, scope: !12757)
!12879 = !DILocation(line: 471, column: 32, scope: !12757)
!12880 = !DILocation(line: 471, column: 38, scope: !12757)
!12881 = !DILocation(line: 471, column: 28, scope: !12757)
!12882 = !DILocation(line: 472, column: 13, scope: !12883)
!12883 = distinct !DILexicalBlock(scope: !12757, file: !818, line: 471, column: 43)
!12884 = !DILocation(line: 472, column: 16, scope: !12883)
!12885 = !DILocation(line: 472, column: 11, scope: !12883)
!12886 = distinct !{!12886, !12872, !12887}
!12887 = !DILocation(line: 473, column: 5, scope: !12757)
!12888 = !DILocation(line: 474, column: 9, scope: !12889)
!12889 = distinct !DILexicalBlock(scope: !12757, file: !818, line: 474, column: 9)
!12890 = !DILocation(line: 474, column: 11, scope: !12889)
!12891 = !DILocation(line: 474, column: 14, scope: !12889)
!12892 = !DILocation(line: 474, column: 17, scope: !12889)
!12893 = !DILocation(line: 474, column: 9, scope: !12757)
!12894 = !DILocation(line: 475, column: 9, scope: !12895)
!12895 = distinct !DILexicalBlock(scope: !12889, file: !818, line: 474, column: 23)
!12896 = !DILocation(line: 475, column: 12, scope: !12895)
!12897 = !DILocation(line: 475, column: 17, scope: !12895)
!12898 = !DILocation(line: 476, column: 5, scope: !12895)
!12899 = !DILocation(line: 479, column: 9, scope: !12757)
!12900 = !DILocation(line: 479, column: 7, scope: !12757)
!12901 = !DILocation(line: 480, column: 5, scope: !12757)
!12902 = !DILocation(line: 480, column: 12, scope: !12757)
!12903 = !DILocation(line: 481, column: 13, scope: !12904)
!12904 = distinct !DILexicalBlock(scope: !12757, file: !818, line: 480, column: 15)
!12905 = !DILocation(line: 481, column: 11, scope: !12904)
!12906 = !DILocation(line: 482, column: 13, scope: !12904)
!12907 = !DILocation(line: 482, column: 16, scope: !12904)
!12908 = !DILocation(line: 482, column: 11, scope: !12904)
!12909 = !DILocation(line: 483, column: 9, scope: !12904)
!12910 = !DILocation(line: 483, column: 16, scope: !12904)
!12911 = !DILocalVariable(name: "pad", scope: !12912, file: !818, line: 484, type: !12506)
!12912 = distinct !DILexicalBlock(scope: !12904, file: !818, line: 483, column: 19)
!12913 = !DILocation(line: 484, column: 18, scope: !12912)
!12914 = !DILocalVariable(name: "tmp", scope: !12912, file: !818, line: 485, type: !308)
!12915 = !DILocation(line: 485, column: 19, scope: !12912)
!12916 = !DILocation(line: 485, column: 34, scope: !12912)
!12917 = !DILocation(line: 485, column: 25, scope: !12912)
!12918 = !DILocation(line: 487, column: 17, scope: !12919)
!12919 = distinct !DILexicalBlock(scope: !12912, file: !818, line: 487, column: 17)
!12920 = !DILocation(line: 487, column: 20, scope: !12919)
!12921 = !DILocation(line: 487, column: 17, scope: !12912)
!12922 = !DILocation(line: 488, column: 17, scope: !12923)
!12923 = distinct !DILexicalBlock(scope: !12919, file: !818, line: 487, column: 27)
!12924 = !DILocation(line: 489, column: 17, scope: !12923)
!12925 = !DILocation(line: 489, column: 39, scope: !12923)
!12926 = !DILocation(line: 490, column: 22, scope: !12923)
!12927 = !DILocation(line: 490, column: 31, scope: !12923)
!12928 = !DILocation(line: 490, column: 45, scope: !12923)
!12929 = !DILocation(line: 490, column: 48, scope: !12923)
!12930 = !DILocation(line: 490, column: 38, scope: !12923)
!12931 = !DILocation(line: 490, column: 36, scope: !12923)
!12932 = !DILocation(line: 490, column: 55, scope: !12923)
!12933 = !DILocation(line: 490, column: 17, scope: !12923)
!12934 = !DILocation(line: 490, column: 60, scope: !12923)
!12935 = !DILocation(line: 491, column: 13, scope: !12923)
!12936 = !DILocation(line: 492, column: 17, scope: !12937)
!12937 = distinct !DILexicalBlock(scope: !12919, file: !818, line: 491, column: 20)
!12938 = !DILocation(line: 492, column: 24, scope: !12937)
!12939 = !DILocation(line: 493, column: 17, scope: !12937)
!12940 = !DILocation(line: 493, column: 24, scope: !12937)
!12941 = !DILocation(line: 494, column: 17, scope: !12937)
!12942 = !DILocation(line: 494, column: 24, scope: !12937)
!12943 = !DILocation(line: 496, column: 19, scope: !12912)
!12944 = !DILocation(line: 496, column: 22, scope: !12912)
!12945 = !DILocation(line: 496, column: 30, scope: !12912)
!12946 = !DILocation(line: 496, column: 33, scope: !12912)
!12947 = !DILocation(line: 496, column: 13, scope: !12912)
!12948 = !DILocation(line: 497, column: 19, scope: !12912)
!12949 = !DILocation(line: 497, column: 22, scope: !12912)
!12950 = !DILocation(line: 497, column: 30, scope: !12912)
!12951 = !DILocation(line: 497, column: 13, scope: !12912)
!12952 = !DILocation(line: 498, column: 17, scope: !12912)
!12953 = !DILocation(line: 498, column: 20, scope: !12912)
!12954 = !DILocation(line: 498, column: 15, scope: !12912)
!12955 = !DILocation(line: 499, column: 18, scope: !12912)
!12956 = !DILocation(line: 499, column: 13, scope: !12912)
!12957 = !DILocation(line: 500, column: 17, scope: !12912)
!12958 = distinct !{!12958, !12909, !12959}
!12959 = !DILocation(line: 501, column: 9, scope: !12904)
!12960 = distinct !{!12960, !12901, !12961}
!12961 = !DILocation(line: 502, column: 5, scope: !12757)
!12962 = !DILocation(line: 505, column: 17, scope: !12757)
!12963 = !DILocation(line: 505, column: 10, scope: !12757)
!12964 = !DILocation(line: 506, column: 14, scope: !12757)
!12965 = !DILocation(line: 507, column: 15, scope: !12757)
!12966 = !DILocation(line: 508, column: 1, scope: !12757)
!12967 = !DILocalVariable(name: "f", arg: 1, scope: !889, file: !818, line: 19, type: !731)
!12968 = !DILocation(line: 19, column: 29, scope: !889)
!12969 = !DILocalVariable(name: "tls_fd", arg: 2, scope: !889, file: !818, line: 19, type: !892)
!12970 = !DILocation(line: 19, column: 45, scope: !889)
!12971 = !DILocalVariable(name: "s", arg: 3, scope: !889, file: !818, line: 19, type: !385)
!12972 = !DILocation(line: 19, column: 65, scope: !889)
!12973 = !DILocalVariable(name: "l", scope: !889, file: !818, line: 23, type: !304)
!12974 = !DILocation(line: 23, column: 12, scope: !889)
!12975 = !DILocation(line: 25, column: 9, scope: !12976)
!12976 = distinct !DILexicalBlock(scope: !889, file: !818, line: 25, column: 9)
!12977 = !DILocation(line: 25, column: 11, scope: !12976)
!12978 = !DILocation(line: 25, column: 9, scope: !889)
!12979 = !DILocation(line: 26, column: 13, scope: !12980)
!12980 = distinct !DILexicalBlock(scope: !12981, file: !818, line: 26, column: 13)
!12981 = distinct !DILexicalBlock(scope: !12976, file: !818, line: 25, column: 20)
!12982 = !DILocation(line: 26, column: 20, scope: !12980)
!12983 = !DILocation(line: 26, column: 13, scope: !12981)
!12984 = !DILocation(line: 36, column: 24, scope: !12985)
!12985 = distinct !DILexicalBlock(scope: !12986, file: !818, line: 35, column: 13)
!12986 = distinct !DILexicalBlock(scope: !12980, file: !818, line: 26, column: 35)
!12987 = !DILocation(line: 37, column: 32, scope: !12988)
!12988 = distinct !DILexicalBlock(scope: !12985, file: !818, line: 37, column: 21)
!12989 = !DILocation(line: 37, column: 43, scope: !12988)
!12990 = !DILocation(line: 37, column: 21, scope: !12988)
!12991 = !DILocation(line: 37, column: 68, scope: !12988)
!12992 = !DILocation(line: 37, column: 55, scope: !12988)
!12993 = !DILocation(line: 37, column: 21, scope: !12985)
!12994 = !DILocation(line: 38, column: 21, scope: !12995)
!12995 = distinct !DILexicalBlock(scope: !12988, file: !818, line: 37, column: 76)
!12996 = !DILocation(line: 41, column: 9, scope: !12986)
!12997 = !DILocation(line: 42, column: 16, scope: !12981)
!12998 = !DILocation(line: 43, column: 9, scope: !12981)
!12999 = !DILocation(line: 45, column: 21, scope: !13000)
!13000 = distinct !DILexicalBlock(scope: !889, file: !818, line: 45, column: 9)
!13001 = !DILocation(line: 45, column: 14, scope: !13000)
!13002 = !DILocation(line: 45, column: 12, scope: !13000)
!13003 = !DILocation(line: 45, column: 25, scope: !13000)
!13004 = !DILocation(line: 45, column: 9, scope: !889)
!13005 = !DILocation(line: 46, column: 9, scope: !13006)
!13006 = distinct !DILexicalBlock(scope: !13000, file: !818, line: 45, column: 41)
!13007 = !DILocation(line: 48, column: 9, scope: !13008)
!13008 = distinct !DILexicalBlock(scope: !889, file: !818, line: 48, column: 9)
!13009 = !DILocation(line: 48, column: 31, scope: !13008)
!13010 = !DILocation(line: 48, column: 29, scope: !13008)
!13011 = !DILocation(line: 48, column: 11, scope: !13008)
!13012 = !DILocation(line: 48, column: 9, scope: !889)
!13013 = !DILocation(line: 49, column: 25, scope: !13014)
!13014 = distinct !DILexicalBlock(scope: !13008, file: !818, line: 48, column: 40)
!13015 = !DILocation(line: 49, column: 23, scope: !13014)
!13016 = !DILocation(line: 49, column: 33, scope: !13014)
!13017 = !DILocation(line: 49, column: 36, scope: !13014)
!13018 = !DILocation(line: 49, column: 9, scope: !13014)
!13019 = !DILocation(line: 50, column: 19, scope: !13014)
!13020 = !DILocation(line: 50, column: 16, scope: !13014)
!13021 = !DILocation(line: 51, column: 9, scope: !13014)
!13022 = !DILocation(line: 53, column: 9, scope: !13023)
!13023 = distinct !DILexicalBlock(scope: !889, file: !818, line: 53, column: 9)
!13024 = !DILocation(line: 53, column: 16, scope: !13023)
!13025 = !DILocation(line: 53, column: 9, scope: !889)
!13026 = !DILocalVariable(name: "rest", scope: !13027, file: !818, line: 54, type: !425)
!13027 = distinct !DILexicalBlock(scope: !13023, file: !818, line: 53, column: 33)
!13028 = !DILocation(line: 54, column: 22, scope: !13027)
!13029 = !DILocation(line: 54, column: 45, scope: !13027)
!13030 = !DILocation(line: 54, column: 43, scope: !13027)
!13031 = !DILocation(line: 56, column: 25, scope: !13027)
!13032 = !DILocation(line: 56, column: 23, scope: !13027)
!13033 = !DILocation(line: 56, column: 33, scope: !13027)
!13034 = !DILocation(line: 56, column: 36, scope: !13027)
!13035 = !DILocation(line: 56, column: 9, scope: !13027)
!13036 = !DILocation(line: 57, column: 14, scope: !13027)
!13037 = !DILocation(line: 57, column: 11, scope: !13027)
!13038 = !DILocation(line: 58, column: 14, scope: !13027)
!13039 = !DILocation(line: 58, column: 11, scope: !13027)
!13040 = !DILocation(line: 59, column: 5, scope: !13027)
!13041 = !DILocation(line: 69, column: 24, scope: !13042)
!13042 = distinct !DILexicalBlock(scope: !13043, file: !818, line: 69, column: 13)
!13043 = distinct !DILexicalBlock(scope: !889, file: !818, line: 68, column: 5)
!13044 = !DILocation(line: 69, column: 13, scope: !13042)
!13045 = !DILocation(line: 69, column: 54, scope: !13042)
!13046 = !DILocation(line: 69, column: 13, scope: !13043)
!13047 = !DILocation(line: 71, column: 13, scope: !13048)
!13048 = distinct !DILexicalBlock(scope: !13042, file: !818, line: 70, column: 38)
!13049 = !DILocation(line: 87, column: 9, scope: !13050)
!13050 = distinct !DILexicalBlock(scope: !889, file: !818, line: 86, column: 5)
!13051 = !DILocation(line: 87, column: 16, scope: !13050)
!13052 = !DILocation(line: 87, column: 18, scope: !13050)
!13053 = !DILocation(line: 88, column: 28, scope: !13054)
!13054 = distinct !DILexicalBlock(scope: !13055, file: !818, line: 88, column: 17)
!13055 = distinct !DILexicalBlock(scope: !13050, file: !818, line: 87, column: 35)
!13056 = !DILocation(line: 88, column: 31, scope: !13054)
!13057 = !DILocation(line: 88, column: 17, scope: !13054)
!13058 = !DILocation(line: 88, column: 53, scope: !13054)
!13059 = !DILocation(line: 88, column: 17, scope: !13055)
!13060 = !DILocation(line: 90, column: 17, scope: !13061)
!13061 = distinct !DILexicalBlock(scope: !13054, file: !818, line: 89, column: 42)
!13062 = !DILocation(line: 92, column: 15, scope: !13055)
!13063 = !DILocation(line: 93, column: 15, scope: !13055)
!13064 = distinct !{!13064, !13049, !13065}
!13065 = !DILocation(line: 94, column: 9, scope: !13050)
!13066 = !DILocation(line: 96, column: 9, scope: !13067)
!13067 = distinct !DILexicalBlock(scope: !889, file: !818, line: 96, column: 9)
!13068 = !DILocation(line: 96, column: 11, scope: !13067)
!13069 = !DILocation(line: 96, column: 9, scope: !889)
!13070 = !DILocation(line: 97, column: 24, scope: !13071)
!13071 = distinct !DILexicalBlock(scope: !13067, file: !818, line: 96, column: 26)
!13072 = !DILocation(line: 97, column: 27, scope: !13071)
!13073 = !DILocation(line: 97, column: 9, scope: !13071)
!13074 = !DILocation(line: 98, column: 18, scope: !13071)
!13075 = !DILocation(line: 98, column: 16, scope: !13071)
!13076 = !DILocation(line: 99, column: 5, scope: !13071)
!13077 = !DILocation(line: 100, column: 1, scope: !889)
!13078 = distinct !DISubprogram(name: "listdir", scope: !818, file: !818, line: 657, type: !13079, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !817, retainedNodes: !471)
!13079 = !DISubroutineType(types: !13080)
!13080 = !{null, !7, !326, !892, !385}
!13081 = !DILocalVariable(name: "depth", arg: 1, scope: !13078, file: !818, line: 657, type: !7)
!13082 = !DILocation(line: 657, column: 34, scope: !13078)
!13083 = !DILocalVariable(name: "f", arg: 2, scope: !13078, file: !818, line: 657, type: !326)
!13084 = !DILocation(line: 657, column: 45, scope: !13078)
!13085 = !DILocalVariable(name: "tls_fd", arg: 3, scope: !13078, file: !818, line: 657, type: !892)
!13086 = !DILocation(line: 657, column: 61, scope: !13078)
!13087 = !DILocalVariable(name: "name", arg: 4, scope: !13078, file: !818, line: 658, type: !385)
!13088 = !DILocation(line: 658, column: 33, scope: !13078)
!13089 = !DILocalVariable(name: "dir", scope: !13078, file: !818, line: 660, type: !13090)
!13090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !823, size: 64)
!13091 = !DILocation(line: 660, column: 19, scope: !13078)
!13092 = !DILocalVariable(name: "names", scope: !13078, file: !818, line: 661, type: !308)
!13093 = !DILocation(line: 661, column: 11, scope: !13078)
!13094 = !DILocalVariable(name: "s", scope: !13078, file: !818, line: 662, type: !13090)
!13095 = !DILocation(line: 662, column: 19, scope: !13078)
!13096 = !DILocalVariable(name: "r", scope: !13078, file: !818, line: 663, type: !13090)
!13097 = !DILocation(line: 663, column: 19, scope: !13078)
!13098 = !DILocalVariable(name: "d", scope: !13078, file: !818, line: 664, type: !326)
!13099 = !DILocation(line: 664, column: 9, scope: !13078)
!13100 = !DILocation(line: 666, column: 9, scope: !13101)
!13101 = distinct !DILexicalBlock(scope: !13078, file: !818, line: 666, column: 9)
!13102 = !DILocation(line: 666, column: 18, scope: !13101)
!13103 = !DILocation(line: 666, column: 15, scope: !13101)
!13104 = !DILocation(line: 666, column: 31, scope: !13101)
!13105 = !DILocation(line: 666, column: 34, scope: !13101)
!13106 = !DILocation(line: 666, column: 45, scope: !13101)
!13107 = !DILocation(line: 666, column: 42, scope: !13101)
!13108 = !DILocation(line: 666, column: 9, scope: !13078)
!13109 = !DILocation(line: 667, column: 9, scope: !13110)
!13110 = distinct !DILexicalBlock(scope: !13101, file: !818, line: 666, column: 59)
!13111 = !DILocation(line: 669, column: 16, scope: !13112)
!13112 = distinct !DILexicalBlock(scope: !13078, file: !818, line: 669, column: 9)
!13113 = !DILocation(line: 669, column: 14, scope: !13112)
!13114 = !DILocation(line: 669, column: 34, scope: !13112)
!13115 = !DILocation(line: 669, column: 9, scope: !13078)
!13116 = !DILocation(line: 670, column: 43, scope: !13117)
!13117 = distinct !DILexicalBlock(scope: !13112, file: !818, line: 669, column: 43)
!13118 = !DILocation(line: 670, column: 9, scope: !13117)
!13119 = !DILocation(line: 671, column: 9, scope: !13117)
!13120 = !DILocation(line: 673, column: 9, scope: !13078)
!13121 = !DILocation(line: 673, column: 7, scope: !13078)
!13122 = !DILocation(line: 674, column: 5, scope: !13078)
!13123 = !DILocation(line: 674, column: 12, scope: !13078)
!13124 = !DILocation(line: 674, column: 15, scope: !13078)
!13125 = !DILocation(line: 674, column: 27, scope: !13078)
!13126 = !DILocation(line: 675, column: 11, scope: !13127)
!13127 = distinct !DILexicalBlock(scope: !13078, file: !818, line: 674, column: 43)
!13128 = !DILocation(line: 676, column: 13, scope: !13129)
!13129 = distinct !DILexicalBlock(scope: !13127, file: !818, line: 676, column: 13)
!13130 = !DILocation(line: 676, column: 27, scope: !13129)
!13131 = !DILocation(line: 676, column: 13, scope: !13127)
!13132 = !DILocation(line: 677, column: 26, scope: !13133)
!13133 = distinct !DILexicalBlock(scope: !13129, file: !818, line: 676, column: 35)
!13134 = !DILocation(line: 677, column: 17, scope: !13133)
!13135 = !DILocation(line: 677, column: 15, scope: !13133)
!13136 = !DILocation(line: 678, column: 9, scope: !13133)
!13137 = !DILocation(line: 678, column: 20, scope: !13138)
!13138 = distinct !DILexicalBlock(scope: !13129, file: !818, line: 678, column: 20)
!13139 = !DILocation(line: 678, column: 20, scope: !13129)
!13140 = !DILocation(line: 679, column: 17, scope: !13141)
!13141 = distinct !DILexicalBlock(scope: !13142, file: !818, line: 679, column: 17)
!13142 = distinct !DILexicalBlock(scope: !13138, file: !818, line: 678, column: 27)
!13143 = !DILocation(line: 679, column: 31, scope: !13141)
!13144 = !DILocation(line: 679, column: 36, scope: !13141)
!13145 = !DILocation(line: 680, column: 18, scope: !13141)
!13146 = !DILocation(line: 680, column: 32, scope: !13141)
!13147 = !DILocation(line: 680, column: 39, scope: !13141)
!13148 = !DILocation(line: 680, column: 42, scope: !13141)
!13149 = !DILocation(line: 680, column: 56, scope: !13141)
!13150 = !DILocation(line: 679, column: 17, scope: !13142)
!13151 = !DILocation(line: 681, column: 26, scope: !13152)
!13152 = distinct !DILexicalBlock(scope: !13141, file: !818, line: 680, column: 63)
!13153 = !DILocation(line: 681, column: 17, scope: !13152)
!13154 = !DILocation(line: 682, column: 13, scope: !13152)
!13155 = !DILocation(line: 683, column: 30, scope: !13156)
!13156 = distinct !DILexicalBlock(scope: !13141, file: !818, line: 682, column: 20)
!13157 = !DILocation(line: 683, column: 21, scope: !13156)
!13158 = !DILocation(line: 683, column: 19, scope: !13156)
!13159 = !DILocation(line: 685, column: 9, scope: !13142)
!13160 = !DILocation(line: 686, column: 14, scope: !13161)
!13161 = distinct !DILexicalBlock(scope: !13127, file: !818, line: 686, column: 13)
!13162 = !DILocation(line: 686, column: 13, scope: !13127)
!13163 = !DILocation(line: 687, column: 13, scope: !13164)
!13164 = distinct !DILexicalBlock(scope: !13161, file: !818, line: 686, column: 17)
!13165 = !DILocation(line: 687, column: 16, scope: !13164)
!13166 = !DILocation(line: 687, column: 28, scope: !13164)
!13167 = !DILocation(line: 688, column: 9, scope: !13164)
!13168 = !DILocation(line: 689, column: 10, scope: !13127)
!13169 = distinct !{!13169, !13122, !13170}
!13170 = !DILocation(line: 690, column: 5, scope: !13078)
!13171 = !DILocation(line: 691, column: 17, scope: !13078)
!13172 = !DILocation(line: 691, column: 20, scope: !13078)
!13173 = !DILocation(line: 691, column: 5, scope: !13078)
!13174 = !DILocation(line: 692, column: 9, scope: !13078)
!13175 = !DILocation(line: 692, column: 7, scope: !13078)
!13176 = !DILocation(line: 693, column: 5, scope: !13078)
!13177 = !DILocation(line: 693, column: 12, scope: !13078)
!13178 = !DILocation(line: 693, column: 18, scope: !13078)
!13179 = !DILocation(line: 693, column: 21, scope: !13078)
!13180 = !DILocation(line: 693, column: 26, scope: !13078)
!13181 = !DILocation(line: 693, column: 23, scope: !13078)
!13182 = !DILocation(line: 0, scope: !13078)
!13183 = !DILocation(line: 694, column: 13, scope: !13184)
!13184 = distinct !DILexicalBlock(scope: !13185, file: !818, line: 694, column: 13)
!13185 = distinct !DILexicalBlock(scope: !13078, file: !818, line: 693, column: 29)
!13186 = !DILocation(line: 694, column: 16, scope: !13184)
!13187 = !DILocation(line: 694, column: 28, scope: !13184)
!13188 = !DILocation(line: 694, column: 43, scope: !13184)
!13189 = !DILocation(line: 694, column: 53, scope: !13184)
!13190 = !DILocation(line: 694, column: 47, scope: !13184)
!13191 = !DILocation(line: 694, column: 13, scope: !13185)
!13192 = !DILocalVariable(name: "alloca_subdir", scope: !13193, file: !818, line: 695, type: !308)
!13193 = distinct !DILexicalBlock(scope: !13184, file: !818, line: 694, column: 66)
!13194 = !DILocation(line: 695, column: 19, scope: !13193)
!13195 = !DILocalVariable(name: "sizeof_subdir", scope: !13193, file: !818, line: 696, type: !425)
!13196 = !DILocation(line: 696, column: 26, scope: !13193)
!13197 = !DILocation(line: 698, column: 34, scope: !13198)
!13198 = distinct !DILexicalBlock(scope: !13193, file: !818, line: 698, column: 17)
!13199 = !DILocation(line: 698, column: 32, scope: !13198)
!13200 = !DILocation(line: 698, column: 57, scope: !13198)
!13201 = !DILocation(line: 698, column: 17, scope: !13193)
!13202 = !DILocation(line: 699, column: 17, scope: !13203)
!13203 = distinct !DILexicalBlock(scope: !13198, file: !818, line: 698, column: 66)
!13204 = !DILocation(line: 701, column: 17, scope: !13205)
!13205 = distinct !DILexicalBlock(scope: !13193, file: !818, line: 701, column: 17)
!13206 = !DILocation(line: 701, column: 17, scope: !13193)
!13207 = !DILocation(line: 703, column: 17, scope: !13208)
!13208 = distinct !DILexicalBlock(scope: !13205, file: !818, line: 702, column: 69)
!13209 = !DILocation(line: 705, column: 19, scope: !13193)
!13210 = !DILocation(line: 705, column: 22, scope: !13193)
!13211 = !DILocation(line: 705, column: 13, scope: !13193)
!13212 = !DILocation(line: 706, column: 19, scope: !13193)
!13213 = !DILocation(line: 706, column: 22, scope: !13193)
!13214 = !DILocation(line: 706, column: 30, scope: !13193)
!13215 = !DILocation(line: 706, column: 13, scope: !13193)
!13216 = !DILocation(line: 707, column: 19, scope: !13193)
!13217 = !DILocation(line: 707, column: 22, scope: !13193)
!13218 = !DILocation(line: 707, column: 13, scope: !13193)
!13219 = !DILocation(line: 708, column: 21, scope: !13193)
!13220 = !DILocation(line: 708, column: 27, scope: !13193)
!13221 = !DILocation(line: 708, column: 33, scope: !13193)
!13222 = !DILocation(line: 708, column: 36, scope: !13193)
!13223 = !DILocation(line: 708, column: 44, scope: !13193)
!13224 = !DILocation(line: 708, column: 13, scope: !13193)
!13225 = !DILabel(scope: !13193, name: "nolist", file: !818, line: 709)
!13226 = !DILocation(line: 709, column: 13, scope: !13193)
!13227 = !DILocation(line: 710, column: 13, scope: !13193)
!13228 = !DILocation(line: 710, column: 13, scope: !13229)
!13229 = distinct !DILexicalBlock(scope: !13193, file: !818, line: 710, column: 13)
!13230 = !DILocation(line: 711, column: 17, scope: !13231)
!13231 = distinct !DILexicalBlock(scope: !13193, file: !818, line: 711, column: 17)
!13232 = !DILocation(line: 711, column: 28, scope: !13231)
!13233 = !DILocation(line: 711, column: 25, scope: !13231)
!13234 = !DILocation(line: 711, column: 17, scope: !13193)
!13235 = !DILocation(line: 712, column: 17, scope: !13236)
!13236 = distinct !DILexicalBlock(scope: !13231, file: !818, line: 711, column: 42)
!13237 = !DILocation(line: 714, column: 17, scope: !13238)
!13238 = distinct !DILexicalBlock(scope: !13193, file: !818, line: 714, column: 17)
!13239 = !DILocation(line: 714, column: 17, scope: !13193)
!13240 = !DILocation(line: 715, column: 21, scope: !13241)
!13241 = distinct !DILexicalBlock(scope: !13242, file: !818, line: 715, column: 21)
!13242 = distinct !DILexicalBlock(scope: !13238, file: !818, line: 714, column: 30)
!13243 = !DILocation(line: 715, column: 31, scope: !13241)
!13244 = !DILocation(line: 715, column: 40, scope: !13241)
!13245 = !DILocation(line: 715, column: 34, scope: !13241)
!13246 = !DILocation(line: 715, column: 21, scope: !13242)
!13247 = !DILocation(line: 716, column: 61, scope: !13248)
!13248 = distinct !DILexicalBlock(scope: !13241, file: !818, line: 715, column: 47)
!13249 = !DILocation(line: 716, column: 52, scope: !13248)
!13250 = !DILocation(line: 716, column: 21, scope: !13248)
!13251 = !DILocation(line: 718, column: 13, scope: !13242)
!13252 = !DILocation(line: 719, column: 9, scope: !13193)
!13253 = !DILocation(line: 720, column: 10, scope: !13185)
!13254 = distinct !{!13254, !13176, !13255}
!13255 = !DILocation(line: 721, column: 5, scope: !13078)
!13256 = !DILabel(scope: !13078, name: "toomany", file: !818, line: 722)
!13257 = !DILocation(line: 722, column: 5, scope: !13078)
!13258 = !DILocation(line: 723, column: 10, scope: !13078)
!13259 = !DILocation(line: 723, column: 5, scope: !13078)
!13260 = !DILocation(line: 724, column: 10, scope: !13078)
!13261 = !DILocation(line: 724, column: 5, scope: !13078)
!13262 = !DILocation(line: 725, column: 11, scope: !13078)
!13263 = !DILocation(line: 726, column: 1, scope: !13078)
!13264 = distinct !DISubprogram(name: "sreaddir", scope: !818, file: !818, line: 555, type: !13265, scopeLine: 556, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !817, retainedNodes: !471)
!13265 = !DISubroutineType(types: !13266)
!13266 = !{!13090, !493}
!13267 = !DILocalVariable(name: "names_pnt", arg: 1, scope: !13264, file: !818, line: 555, type: !493)
!13268 = !DILocation(line: 555, column: 38, scope: !13264)
!13269 = !DILocalVariable(name: "st", scope: !13264, file: !818, line: 557, type: !11935)
!13270 = !DILocation(line: 557, column: 17, scope: !13264)
!13271 = !DILocalVariable(name: "d", scope: !13264, file: !818, line: 558, type: !13272)
!13272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13273, size: 64)
!13273 = !DIDerivedType(tag: DW_TAG_typedef, name: "DIR", file: !13274, line: 127, baseType: !13275)
!13274 = !DIFile(filename: "/usr/include/dirent.h", directory: "")
!13275 = !DICompositeType(tag: DW_TAG_structure_type, name: "__dirstream", file: !13274, line: 127, flags: DIFlagFwdDecl)
!13276 = !DILocation(line: 558, column: 10, scope: !13264)
!13277 = !DILocalVariable(name: "de", scope: !13264, file: !818, line: 559, type: !11966)
!13278 = !DILocation(line: 559, column: 20, scope: !13264)
!13279 = !DILocalVariable(name: "files_info", scope: !13264, file: !818, line: 560, type: !13090)
!13280 = !DILocation(line: 560, column: 19, scope: !13264)
!13281 = !DILocalVariable(name: "file_info", scope: !13264, file: !818, line: 561, type: !13090)
!13282 = !DILocation(line: 561, column: 19, scope: !13264)
!13283 = !DILocalVariable(name: "files_info_size", scope: !13264, file: !818, line: 562, type: !304)
!13284 = !DILocation(line: 562, column: 12, scope: !13264)
!13285 = !DILocalVariable(name: "files_info_counter", scope: !13264, file: !818, line: 563, type: !304)
!13286 = !DILocation(line: 563, column: 12, scope: !13264)
!13287 = !DILocalVariable(name: "names", scope: !13264, file: !818, line: 564, type: !308)
!13288 = !DILocation(line: 564, column: 11, scope: !13264)
!13289 = !DILocalVariable(name: "names_size", scope: !13264, file: !818, line: 565, type: !304)
!13290 = !DILocation(line: 565, column: 12, scope: !13264)
!13291 = !DILocalVariable(name: "names_counter", scope: !13264, file: !818, line: 566, type: !304)
!13292 = !DILocation(line: 566, column: 12, scope: !13264)
!13293 = !DILocalVariable(name: "name_len", scope: !13264, file: !818, line: 567, type: !304)
!13294 = !DILocation(line: 567, column: 12, scope: !13264)
!13295 = !DILocalVariable(name: "cmp_func", scope: !13264, file: !818, line: 568, type: !13296)
!13296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13297, size: 64)
!13297 = !DISubroutineType(types: !13298)
!13298 = !{!326, !13299, !13299}
!13299 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6560)
!13300 = !DILocation(line: 568, column: 11, scope: !13264)
!13301 = !DILocation(line: 570, column: 14, scope: !13302)
!13302 = distinct !DILexicalBlock(scope: !13264, file: !818, line: 570, column: 9)
!13303 = !DILocation(line: 570, column: 12, scope: !13302)
!13304 = !DILocation(line: 570, column: 28, scope: !13302)
!13305 = !DILocation(line: 570, column: 9, scope: !13264)
!13306 = !DILocation(line: 571, column: 9, scope: !13307)
!13307 = distinct !DILexicalBlock(scope: !13302, file: !818, line: 570, column: 37)
!13308 = !DILocation(line: 573, column: 18, scope: !13264)
!13309 = !DILocation(line: 573, column: 16, scope: !13264)
!13310 = !DILocation(line: 574, column: 25, scope: !13311)
!13311 = distinct !DILexicalBlock(scope: !13264, file: !818, line: 574, column: 9)
!13312 = !DILocation(line: 574, column: 18, scope: !13311)
!13313 = !DILocation(line: 574, column: 16, scope: !13311)
!13314 = !DILocation(line: 574, column: 38, scope: !13311)
!13315 = !DILocation(line: 574, column: 9, scope: !13264)
!13316 = !DILocation(line: 575, column: 18, scope: !13317)
!13317 = distinct !DILexicalBlock(scope: !13311, file: !818, line: 574, column: 47)
!13318 = !DILocation(line: 575, column: 9, scope: !13317)
!13319 = !DILocation(line: 576, column: 9, scope: !13317)
!13320 = !DILocation(line: 578, column: 23, scope: !13264)
!13321 = !DILocation(line: 578, column: 34, scope: !13264)
!13322 = !DILocation(line: 578, column: 21, scope: !13264)
!13323 = !DILocation(line: 579, column: 30, scope: !13324)
!13324 = distinct !DILexicalBlock(scope: !13264, file: !818, line: 579, column: 9)
!13325 = !DILocation(line: 579, column: 46, scope: !13324)
!13326 = !DILocation(line: 579, column: 23, scope: !13324)
!13327 = !DILocation(line: 579, column: 21, scope: !13324)
!13328 = !DILocation(line: 579, column: 69, scope: !13324)
!13329 = !DILocation(line: 579, column: 9, scope: !13264)
!13330 = !DILocation(line: 580, column: 18, scope: !13331)
!13331 = distinct !DILexicalBlock(scope: !13324, file: !818, line: 579, column: 78)
!13332 = !DILocation(line: 580, column: 9, scope: !13331)
!13333 = !DILocation(line: 581, column: 14, scope: !13331)
!13334 = !DILocation(line: 581, column: 9, scope: !13331)
!13335 = !DILocation(line: 582, column: 9, scope: !13331)
!13336 = !DILocation(line: 584, column: 5, scope: !13264)
!13337 = !DILocation(line: 584, column: 26, scope: !13264)
!13338 = !DILocation(line: 584, column: 18, scope: !13264)
!13339 = !DILocation(line: 584, column: 16, scope: !13264)
!13340 = !DILocation(line: 584, column: 30, scope: !13264)
!13341 = !DILocation(line: 585, column: 28, scope: !13342)
!13342 = distinct !DILexicalBlock(scope: !13343, file: !818, line: 585, column: 13)
!13343 = distinct !DILexicalBlock(scope: !13264, file: !818, line: 584, column: 39)
!13344 = !DILocation(line: 585, column: 32, scope: !13342)
!13345 = !DILocation(line: 585, column: 13, scope: !13342)
!13346 = !DILocation(line: 585, column: 40, scope: !13342)
!13347 = !DILocation(line: 585, column: 45, scope: !13342)
!13348 = !DILocation(line: 585, column: 54, scope: !13342)
!13349 = !DILocation(line: 585, column: 58, scope: !13342)
!13350 = !DILocation(line: 585, column: 48, scope: !13342)
!13351 = !DILocation(line: 585, column: 71, scope: !13342)
!13352 = !DILocation(line: 585, column: 13, scope: !13343)
!13353 = !DILocation(line: 586, column: 13, scope: !13354)
!13354 = distinct !DILexicalBlock(scope: !13342, file: !818, line: 585, column: 76)
!13355 = distinct !{!13355, !13336, !13356}
!13356 = !DILocation(line: 629, column: 5, scope: !13264)
!13357 = !DILocation(line: 588, column: 27, scope: !13343)
!13358 = !DILocation(line: 588, column: 31, scope: !13343)
!13359 = !DILocation(line: 588, column: 20, scope: !13343)
!13360 = !DILocation(line: 588, column: 39, scope: !13343)
!13361 = !DILocation(line: 588, column: 18, scope: !13343)
!13362 = !DILocation(line: 589, column: 9, scope: !13343)
!13363 = !DILocation(line: 589, column: 16, scope: !13343)
!13364 = !DILocation(line: 589, column: 32, scope: !13343)
!13365 = !DILocation(line: 589, column: 30, scope: !13343)
!13366 = !DILocation(line: 589, column: 44, scope: !13343)
!13367 = !DILocation(line: 589, column: 41, scope: !13343)
!13368 = !DILocalVariable(name: "new_names", scope: !13369, file: !818, line: 590, type: !308)
!13369 = distinct !DILexicalBlock(scope: !13343, file: !818, line: 589, column: 56)
!13370 = !DILocation(line: 590, column: 19, scope: !13369)
!13371 = !DILocation(line: 592, column: 17, scope: !13372)
!13372 = distinct !DILexicalBlock(scope: !13369, file: !818, line: 592, column: 17)
!13373 = !DILocation(line: 592, column: 29, scope: !13372)
!13374 = !DILocation(line: 592, column: 26, scope: !13372)
!13375 = !DILocation(line: 592, column: 17, scope: !13369)
!13376 = !DILocation(line: 593, column: 31, scope: !13377)
!13377 = distinct !DILexicalBlock(scope: !13372, file: !818, line: 592, column: 41)
!13378 = !DILocation(line: 593, column: 42, scope: !13377)
!13379 = !DILocation(line: 593, column: 40, scope: !13377)
!13380 = !DILocation(line: 593, column: 28, scope: !13377)
!13381 = !DILocation(line: 594, column: 13, scope: !13377)
!13382 = !DILocation(line: 595, column: 31, scope: !13383)
!13383 = distinct !DILexicalBlock(scope: !13372, file: !818, line: 594, column: 20)
!13384 = !DILocation(line: 595, column: 28, scope: !13383)
!13385 = !DILocation(line: 597, column: 38, scope: !13386)
!13386 = distinct !DILexicalBlock(scope: !13369, file: !818, line: 597, column: 17)
!13387 = !DILocation(line: 597, column: 45, scope: !13386)
!13388 = !DILocation(line: 597, column: 30, scope: !13386)
!13389 = !DILocation(line: 597, column: 28, scope: !13386)
!13390 = !DILocation(line: 597, column: 58, scope: !13386)
!13391 = !DILocation(line: 597, column: 17, scope: !13369)
!13392 = !DILocation(line: 597, column: 67, scope: !13386)
!13393 = !DILabel(scope: !13394, name: "nomem", file: !818, line: 598)
!13394 = distinct !DILexicalBlock(scope: !13386, file: !818, line: 597, column: 67)
!13395 = !DILocation(line: 598, column: 17, scope: !13394)
!13396 = !DILocation(line: 599, column: 26, scope: !13394)
!13397 = !DILocation(line: 599, column: 17, scope: !13394)
!13398 = !DILocation(line: 600, column: 22, scope: !13394)
!13399 = !DILocation(line: 600, column: 17, scope: !13394)
!13400 = !DILocation(line: 601, column: 22, scope: !13394)
!13401 = !DILocation(line: 601, column: 17, scope: !13394)
!13402 = !DILocation(line: 602, column: 17, scope: !13394)
!13403 = !DILocation(line: 604, column: 21, scope: !13369)
!13404 = !DILocation(line: 604, column: 19, scope: !13369)
!13405 = distinct !{!13405, !13362, !13406}
!13406 = !DILocation(line: 605, column: 9, scope: !13343)
!13407 = !DILocation(line: 606, column: 9, scope: !13343)
!13408 = !DILocation(line: 606, column: 17, scope: !13343)
!13409 = !DILocation(line: 606, column: 36, scope: !13343)
!13410 = !DILocation(line: 606, column: 54, scope: !13343)
!13411 = !DILocation(line: 606, column: 51, scope: !13343)
!13412 = !DILocalVariable(name: "new_files_info", scope: !13413, file: !818, line: 607, type: !13090)
!13413 = distinct !DILexicalBlock(scope: !13343, file: !818, line: 606, column: 71)
!13414 = !DILocation(line: 607, column: 27, scope: !13413)
!13415 = !DILocation(line: 609, column: 33, scope: !13413)
!13416 = !DILocation(line: 609, column: 44, scope: !13413)
!13417 = !DILocation(line: 609, column: 29, scope: !13413)
!13418 = !DILocation(line: 610, column: 43, scope: !13419)
!13419 = distinct !DILexicalBlock(scope: !13413, file: !818, line: 610, column: 17)
!13420 = !DILocation(line: 611, column: 43, scope: !13419)
!13421 = !DILocation(line: 611, column: 59, scope: !13419)
!13422 = !DILocation(line: 610, column: 35, scope: !13419)
!13423 = !DILocation(line: 610, column: 33, scope: !13419)
!13424 = !DILocation(line: 611, column: 82, scope: !13419)
!13425 = !DILocation(line: 610, column: 17, scope: !13413)
!13426 = !DILocation(line: 612, column: 17, scope: !13427)
!13427 = distinct !DILexicalBlock(scope: !13419, file: !818, line: 611, column: 91)
!13428 = !DILocation(line: 614, column: 26, scope: !13413)
!13429 = !DILocation(line: 614, column: 24, scope: !13413)
!13430 = distinct !{!13430, !13407, !13431}
!13431 = !DILocation(line: 615, column: 9, scope: !13343)
!13432 = !DILocation(line: 616, column: 17, scope: !13343)
!13433 = !DILocation(line: 616, column: 23, scope: !13343)
!13434 = !DILocation(line: 616, column: 39, scope: !13343)
!13435 = !DILocation(line: 616, column: 43, scope: !13343)
!13436 = !DILocation(line: 616, column: 9, scope: !13343)
!13437 = !DILocation(line: 616, column: 51, scope: !13343)
!13438 = !DILocation(line: 617, column: 9, scope: !13343)
!13439 = !DILocation(line: 617, column: 15, scope: !13343)
!13440 = !DILocation(line: 617, column: 31, scope: !13343)
!13441 = !DILocation(line: 617, column: 29, scope: !13343)
!13442 = !DILocation(line: 617, column: 40, scope: !13343)
!13443 = !DILocation(line: 617, column: 45, scope: !13343)
!13444 = !DILocation(line: 618, column: 22, scope: !13343)
!13445 = !DILocation(line: 618, column: 33, scope: !13343)
!13446 = !DILocation(line: 618, column: 19, scope: !13343)
!13447 = !DILocation(line: 619, column: 32, scope: !13343)
!13448 = !DILocation(line: 619, column: 9, scope: !13343)
!13449 = !DILocation(line: 619, column: 20, scope: !13343)
!13450 = !DILocation(line: 619, column: 30, scope: !13343)
!13451 = !DILocation(line: 620, column: 34, scope: !13343)
!13452 = !DILocation(line: 620, column: 9, scope: !13343)
!13453 = !DILocation(line: 620, column: 20, scope: !13343)
!13454 = !DILocation(line: 620, column: 32, scope: !13343)
!13455 = !DILocation(line: 621, column: 30, scope: !13343)
!13456 = !DILocation(line: 621, column: 9, scope: !13343)
!13457 = !DILocation(line: 621, column: 20, scope: !13343)
!13458 = !DILocation(line: 621, column: 25, scope: !13343)
!13459 = !DILocation(line: 622, column: 31, scope: !13343)
!13460 = !DILocation(line: 622, column: 9, scope: !13343)
!13461 = !DILocation(line: 622, column: 20, scope: !13343)
!13462 = !DILocation(line: 622, column: 26, scope: !13343)
!13463 = !DILocation(line: 623, column: 30, scope: !13343)
!13464 = !DILocation(line: 623, column: 9, scope: !13343)
!13465 = !DILocation(line: 623, column: 20, scope: !13343)
!13466 = !DILocation(line: 623, column: 25, scope: !13343)
!13467 = !DILocation(line: 624, column: 31, scope: !13343)
!13468 = !DILocation(line: 624, column: 9, scope: !13343)
!13469 = !DILocation(line: 624, column: 20, scope: !13343)
!13470 = !DILocation(line: 624, column: 26, scope: !13343)
!13471 = !DILocation(line: 625, column: 29, scope: !13343)
!13472 = !DILocation(line: 625, column: 9, scope: !13343)
!13473 = !DILocation(line: 625, column: 20, scope: !13343)
!13474 = !DILocation(line: 625, column: 24, scope: !13343)
!13475 = !DILocation(line: 626, column: 29, scope: !13343)
!13476 = !DILocation(line: 626, column: 9, scope: !13343)
!13477 = !DILocation(line: 626, column: 20, scope: !13343)
!13478 = !DILocation(line: 626, column: 24, scope: !13343)
!13479 = !DILocation(line: 627, column: 26, scope: !13343)
!13480 = !DILocation(line: 627, column: 23, scope: !13343)
!13481 = !DILocation(line: 628, column: 27, scope: !13343)
!13482 = !DILocation(line: 630, column: 14, scope: !13264)
!13483 = !DILocation(line: 630, column: 5, scope: !13264)
!13484 = !DILocation(line: 631, column: 5, scope: !13264)
!13485 = !DILocation(line: 631, column: 16, scope: !13264)
!13486 = !DILocation(line: 631, column: 36, scope: !13264)
!13487 = !DILocation(line: 631, column: 48, scope: !13264)
!13488 = !DILocation(line: 632, column: 18, scope: !13264)
!13489 = !DILocation(line: 632, column: 6, scope: !13264)
!13490 = !DILocation(line: 632, column: 16, scope: !13264)
!13491 = !DILocation(line: 634, column: 9, scope: !13492)
!13492 = distinct !DILexicalBlock(scope: !13264, file: !818, line: 634, column: 9)
!13493 = !DILocation(line: 634, column: 9, scope: !13264)
!13494 = !DILocation(line: 635, column: 13, scope: !13495)
!13495 = distinct !DILexicalBlock(scope: !13496, file: !818, line: 635, column: 13)
!13496 = distinct !DILexicalBlock(scope: !13492, file: !818, line: 634, column: 16)
!13497 = !DILocation(line: 635, column: 13, scope: !13496)
!13498 = !DILocation(line: 636, column: 22, scope: !13499)
!13499 = distinct !DILexicalBlock(scope: !13495, file: !818, line: 635, column: 20)
!13500 = !DILocation(line: 637, column: 9, scope: !13499)
!13501 = !DILocation(line: 638, column: 22, scope: !13502)
!13502 = distinct !DILexicalBlock(scope: !13495, file: !818, line: 637, column: 16)
!13503 = !DILocation(line: 640, column: 5, scope: !13496)
!13504 = !DILocation(line: 640, column: 16, scope: !13505)
!13505 = distinct !DILexicalBlock(scope: !13492, file: !818, line: 640, column: 16)
!13506 = !DILocation(line: 640, column: 16, scope: !13492)
!13507 = !DILocation(line: 641, column: 13, scope: !13508)
!13508 = distinct !DILexicalBlock(scope: !13509, file: !818, line: 641, column: 13)
!13509 = distinct !DILexicalBlock(scope: !13505, file: !818, line: 640, column: 23)
!13510 = !DILocation(line: 641, column: 13, scope: !13509)
!13511 = !DILocation(line: 642, column: 22, scope: !13512)
!13512 = distinct !DILexicalBlock(scope: !13508, file: !818, line: 641, column: 20)
!13513 = !DILocation(line: 643, column: 9, scope: !13512)
!13514 = !DILocation(line: 644, column: 22, scope: !13515)
!13515 = distinct !DILexicalBlock(scope: !13508, file: !818, line: 643, column: 16)
!13516 = !DILocation(line: 646, column: 5, scope: !13509)
!13517 = !DILocation(line: 646, column: 16, scope: !13518)
!13518 = distinct !DILexicalBlock(scope: !13505, file: !818, line: 646, column: 16)
!13519 = !DILocation(line: 646, column: 16, scope: !13505)
!13520 = !DILocation(line: 647, column: 18, scope: !13521)
!13521 = distinct !DILexicalBlock(scope: !13518, file: !818, line: 646, column: 23)
!13522 = !DILocation(line: 648, column: 5, scope: !13521)
!13523 = !DILocation(line: 649, column: 18, scope: !13524)
!13524 = distinct !DILexicalBlock(scope: !13518, file: !818, line: 648, column: 12)
!13525 = !DILocation(line: 651, column: 11, scope: !13264)
!13526 = !DILocation(line: 651, column: 23, scope: !13264)
!13527 = !DILocation(line: 651, column: 65, scope: !13264)
!13528 = !DILocation(line: 651, column: 5, scope: !13264)
!13529 = !DILocation(line: 653, column: 12, scope: !13264)
!13530 = !DILocation(line: 653, column: 5, scope: !13264)
!13531 = !DILocation(line: 654, column: 1, scope: !13264)
!13532 = distinct !DISubprogram(name: "cmp_rt", scope: !818, file: !818, line: 534, type: !13297, scopeLine: 535, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !817, retainedNodes: !471)
!13533 = !DILocalVariable(name: "a", arg: 1, scope: !13532, file: !818, line: 534, type: !13299)
!13534 = !DILocation(line: 534, column: 38, scope: !13532)
!13535 = !DILocalVariable(name: "b", arg: 2, scope: !13532, file: !818, line: 534, type: !13299)
!13536 = !DILocation(line: 534, column: 60, scope: !13532)
!13537 = !DILocation(line: 536, column: 18, scope: !13532)
!13538 = !DILocation(line: 536, column: 21, scope: !13532)
!13539 = !DILocation(line: 536, column: 12, scope: !13532)
!13540 = !DILocation(line: 536, column: 5, scope: !13532)
!13541 = distinct !DISubprogram(name: "cmp_t", scope: !818, file: !818, line: 523, type: !13297, scopeLine: 524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !817, retainedNodes: !471)
!13542 = !DILocalVariable(name: "a", arg: 1, scope: !13541, file: !818, line: 523, type: !13299)
!13543 = !DILocation(line: 523, column: 37, scope: !13541)
!13544 = !DILocalVariable(name: "b", arg: 2, scope: !13541, file: !818, line: 523, type: !13299)
!13545 = !DILocation(line: 523, column: 59, scope: !13541)
!13546 = !DILocation(line: 525, column: 33, scope: !13547)
!13547 = distinct !DILexicalBlock(scope: !13541, file: !818, line: 525, column: 9)
!13548 = !DILocation(line: 525, column: 10, scope: !13547)
!13549 = !DILocation(line: 525, column: 37, scope: !13547)
!13550 = !DILocation(line: 525, column: 69, scope: !13547)
!13551 = !DILocation(line: 525, column: 46, scope: !13547)
!13552 = !DILocation(line: 525, column: 73, scope: !13547)
!13553 = !DILocation(line: 525, column: 43, scope: !13547)
!13554 = !DILocation(line: 525, column: 9, scope: !13541)
!13555 = !DILocation(line: 526, column: 9, scope: !13556)
!13556 = distinct !DILexicalBlock(scope: !13547, file: !818, line: 525, column: 80)
!13557 = !DILocation(line: 528, column: 33, scope: !13558)
!13558 = distinct !DILexicalBlock(scope: !13541, file: !818, line: 528, column: 9)
!13559 = !DILocation(line: 528, column: 10, scope: !13558)
!13560 = !DILocation(line: 528, column: 37, scope: !13558)
!13561 = !DILocation(line: 528, column: 69, scope: !13558)
!13562 = !DILocation(line: 528, column: 46, scope: !13558)
!13563 = !DILocation(line: 528, column: 73, scope: !13558)
!13564 = !DILocation(line: 528, column: 43, scope: !13558)
!13565 = !DILocation(line: 528, column: 9, scope: !13541)
!13566 = !DILocation(line: 529, column: 9, scope: !13567)
!13567 = distinct !DILexicalBlock(scope: !13558, file: !818, line: 528, column: 80)
!13568 = !DILocation(line: 531, column: 5, scope: !13541)
!13569 = !DILocation(line: 532, column: 1, scope: !13541)
!13570 = distinct !DISubprogram(name: "cmp_rS", scope: !818, file: !818, line: 550, type: !13297, scopeLine: 551, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !817, retainedNodes: !471)
!13571 = !DILocalVariable(name: "a", arg: 1, scope: !13570, file: !818, line: 550, type: !13299)
!13572 = !DILocation(line: 550, column: 38, scope: !13570)
!13573 = !DILocalVariable(name: "b", arg: 2, scope: !13570, file: !818, line: 550, type: !13299)
!13574 = !DILocation(line: 550, column: 60, scope: !13570)
!13575 = !DILocation(line: 552, column: 18, scope: !13570)
!13576 = !DILocation(line: 552, column: 21, scope: !13570)
!13577 = !DILocation(line: 552, column: 12, scope: !13570)
!13578 = !DILocation(line: 552, column: 5, scope: !13570)
!13579 = distinct !DISubprogram(name: "cmp_S", scope: !818, file: !818, line: 539, type: !13297, scopeLine: 540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !817, retainedNodes: !471)
!13580 = !DILocalVariable(name: "a", arg: 1, scope: !13579, file: !818, line: 539, type: !13299)
!13581 = !DILocation(line: 539, column: 37, scope: !13579)
!13582 = !DILocalVariable(name: "b", arg: 2, scope: !13579, file: !818, line: 539, type: !13299)
!13583 = !DILocation(line: 539, column: 59, scope: !13579)
!13584 = !DILocation(line: 541, column: 33, scope: !13585)
!13585 = distinct !DILexicalBlock(scope: !13579, file: !818, line: 541, column: 9)
!13586 = !DILocation(line: 541, column: 10, scope: !13585)
!13587 = !DILocation(line: 541, column: 37, scope: !13585)
!13588 = !DILocation(line: 541, column: 68, scope: !13585)
!13589 = !DILocation(line: 541, column: 45, scope: !13585)
!13590 = !DILocation(line: 541, column: 72, scope: !13585)
!13591 = !DILocation(line: 541, column: 42, scope: !13585)
!13592 = !DILocation(line: 541, column: 9, scope: !13579)
!13593 = !DILocation(line: 542, column: 9, scope: !13594)
!13594 = distinct !DILexicalBlock(scope: !13585, file: !818, line: 541, column: 78)
!13595 = !DILocation(line: 544, column: 33, scope: !13596)
!13596 = distinct !DILexicalBlock(scope: !13579, file: !818, line: 544, column: 9)
!13597 = !DILocation(line: 544, column: 10, scope: !13596)
!13598 = !DILocation(line: 544, column: 37, scope: !13596)
!13599 = !DILocation(line: 544, column: 68, scope: !13596)
!13600 = !DILocation(line: 544, column: 45, scope: !13596)
!13601 = !DILocation(line: 544, column: 72, scope: !13596)
!13602 = !DILocation(line: 544, column: 42, scope: !13596)
!13603 = !DILocation(line: 544, column: 9, scope: !13579)
!13604 = !DILocation(line: 545, column: 9, scope: !13605)
!13605 = distinct !DILexicalBlock(scope: !13596, file: !818, line: 544, column: 78)
!13606 = !DILocation(line: 547, column: 5, scope: !13579)
!13607 = !DILocation(line: 548, column: 1, scope: !13579)
!13608 = distinct !DISubprogram(name: "cmp_r", scope: !818, file: !818, line: 517, type: !13297, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !817, retainedNodes: !471)
!13609 = !DILocalVariable(name: "a", arg: 1, scope: !13608, file: !818, line: 517, type: !13299)
!13610 = !DILocation(line: 517, column: 37, scope: !13608)
!13611 = !DILocalVariable(name: "b", arg: 2, scope: !13608, file: !818, line: 517, type: !13299)
!13612 = !DILocation(line: 517, column: 59, scope: !13608)
!13613 = !DILocation(line: 519, column: 19, scope: !13608)
!13614 = !DILocation(line: 520, column: 19, scope: !13608)
!13615 = !DILocation(line: 519, column: 12, scope: !13608)
!13616 = !DILocation(line: 519, column: 5, scope: !13608)
!13617 = distinct !DISubprogram(name: "cmp", scope: !818, file: !818, line: 511, type: !13297, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !817, retainedNodes: !471)
!13618 = !DILocalVariable(name: "a", arg: 1, scope: !13617, file: !818, line: 511, type: !13299)
!13619 = !DILocation(line: 511, column: 35, scope: !13617)
!13620 = !DILocalVariable(name: "b", arg: 2, scope: !13617, file: !818, line: 511, type: !13299)
!13621 = !DILocation(line: 511, column: 57, scope: !13617)
!13622 = !DILocation(line: 513, column: 19, scope: !13617)
!13623 = !DILocation(line: 514, column: 19, scope: !13617)
!13624 = !DILocation(line: 513, column: 12, scope: !13617)
!13625 = !DILocation(line: 513, column: 5, scope: !13617)
!13626 = distinct !DISubprogram(name: "addfile", scope: !818, file: !818, line: 203, type: !13627, scopeLine: 204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !817, retainedNodes: !471)
!13627 = !DISubroutineType(types: !13628)
!13628 = !{null, !385, !385}
!13629 = !DILocalVariable(name: "name", arg: 1, scope: !13626, file: !818, line: 203, type: !385)
!13630 = !DILocation(line: 203, column: 33, scope: !13626)
!13631 = !DILocalVariable(name: "suffix", arg: 2, scope: !13626, file: !818, line: 203, type: !385)
!13632 = !DILocation(line: 203, column: 51, scope: !13626)
!13633 = !DILocalVariable(name: "p", scope: !13626, file: !818, line: 205, type: !876)
!13634 = !DILocation(line: 205, column: 22, scope: !13626)
!13635 = !DILocalVariable(name: "l", scope: !13626, file: !818, line: 206, type: !7)
!13636 = !DILocation(line: 206, column: 18, scope: !13626)
!13637 = !DILocation(line: 208, column: 10, scope: !13638)
!13638 = distinct !DILexicalBlock(scope: !13626, file: !818, line: 208, column: 9)
!13639 = !DILocation(line: 208, column: 15, scope: !13638)
!13640 = !DILocation(line: 208, column: 19, scope: !13638)
!13641 = !DILocation(line: 208, column: 9, scope: !13626)
!13642 = !DILocation(line: 209, column: 9, scope: !13643)
!13643 = distinct !DILexicalBlock(scope: !13638, file: !818, line: 208, column: 27)
!13644 = !DILocation(line: 211, column: 9, scope: !13645)
!13645 = distinct !DILexicalBlock(scope: !13626, file: !818, line: 211, column: 9)
!13646 = !DILocation(line: 211, column: 20, scope: !13645)
!13647 = !DILocation(line: 211, column: 17, scope: !13645)
!13648 = !DILocation(line: 211, column: 9, scope: !13626)
!13649 = !DILocation(line: 212, column: 9, scope: !13650)
!13650 = distinct !DILexicalBlock(scope: !13645, file: !818, line: 211, column: 34)
!13651 = !DILocation(line: 214, column: 12, scope: !13626)
!13652 = !DILocation(line: 215, column: 32, scope: !13626)
!13653 = !DILocation(line: 215, column: 25, scope: !13626)
!13654 = !DILocation(line: 215, column: 47, scope: !13626)
!13655 = !DILocation(line: 215, column: 40, scope: !13626)
!13656 = !DILocation(line: 215, column: 38, scope: !13626)
!13657 = !DILocation(line: 215, column: 9, scope: !13626)
!13658 = !DILocation(line: 215, column: 7, scope: !13626)
!13659 = !DILocation(line: 216, column: 9, scope: !13660)
!13660 = distinct !DILexicalBlock(scope: !13626, file: !818, line: 216, column: 9)
!13661 = !DILocation(line: 216, column: 13, scope: !13660)
!13662 = !DILocation(line: 216, column: 11, scope: !13660)
!13663 = !DILocation(line: 216, column: 9, scope: !13626)
!13664 = !DILocation(line: 217, column: 20, scope: !13665)
!13665 = distinct !DILexicalBlock(scope: !13660, file: !818, line: 216, column: 23)
!13666 = !DILocation(line: 217, column: 18, scope: !13665)
!13667 = !DILocation(line: 218, column: 5, scope: !13665)
!13668 = !DILocation(line: 219, column: 55, scope: !13669)
!13669 = distinct !DILexicalBlock(scope: !13626, file: !818, line: 219, column: 9)
!13670 = !DILocation(line: 219, column: 53, scope: !13669)
!13671 = !DILocation(line: 219, column: 57, scope: !13669)
!13672 = !DILocation(line: 219, column: 14, scope: !13669)
!13673 = !DILocation(line: 219, column: 12, scope: !13669)
!13674 = !DILocation(line: 219, column: 64, scope: !13669)
!13675 = !DILocation(line: 219, column: 9, scope: !13626)
!13676 = !DILocation(line: 220, column: 9, scope: !13677)
!13677 = distinct !DILexicalBlock(scope: !13669, file: !818, line: 219, column: 73)
!13678 = !DILocation(line: 222, column: 9, scope: !13679)
!13679 = distinct !DILexicalBlock(scope: !13626, file: !818, line: 222, column: 9)
!13680 = !DILocation(line: 222, column: 9, scope: !13626)
!13681 = !DILocation(line: 223, column: 9, scope: !13682)
!13682 = distinct !DILexicalBlock(scope: !13679, file: !818, line: 222, column: 75)
!13683 = !DILocation(line: 225, column: 9, scope: !13684)
!13684 = distinct !DILexicalBlock(scope: !13626, file: !818, line: 225, column: 9)
!13685 = !DILocation(line: 225, column: 14, scope: !13684)
!13686 = !DILocation(line: 225, column: 9, scope: !13626)
!13687 = !DILocation(line: 226, column: 22, scope: !13688)
!13688 = distinct !DILexicalBlock(scope: !13684, file: !818, line: 225, column: 23)
!13689 = !DILocation(line: 226, column: 9, scope: !13688)
!13690 = !DILocation(line: 226, column: 15, scope: !13688)
!13691 = !DILocation(line: 226, column: 20, scope: !13688)
!13692 = !DILocation(line: 227, column: 5, scope: !13688)
!13693 = !DILocation(line: 228, column: 16, scope: !13694)
!13694 = distinct !DILexicalBlock(scope: !13684, file: !818, line: 227, column: 12)
!13695 = !DILocation(line: 228, column: 14, scope: !13694)
!13696 = !DILocation(line: 230, column: 12, scope: !13626)
!13697 = !DILocation(line: 230, column: 10, scope: !13626)
!13698 = !DILocation(line: 231, column: 14, scope: !13626)
!13699 = !DILocation(line: 232, column: 1, scope: !13626)
!13700 = distinct !DISubprogram(name: "donlst", scope: !818, file: !818, line: 964, type: !3536, scopeLine: 965, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !817, retainedNodes: !471)
!13701 = !DILocalVariable(name: "base", arg: 1, scope: !13700, file: !818, line: 964, type: !385)
!13702 = !DILocation(line: 964, column: 25, scope: !13700)
!13703 = !DILocalVariable(name: "line", scope: !13700, file: !818, line: 966, type: !13704)
!13704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 32792, elements: !13705)
!13705 = !{!13706}
!13706 = !DISubrange(count: 4099)
!13707 = !DILocation(line: 966, column: 20, scope: !13700)
!13708 = !DILocalVariable(name: "dir", scope: !13700, file: !818, line: 967, type: !13272)
!13709 = !DILocation(line: 967, column: 20, scope: !13700)
!13710 = !DILocalVariable(name: "tls_fd", scope: !13700, file: !818, line: 968, type: !303)
!13711 = !DILocation(line: 968, column: 20, scope: !13700)
!13712 = !DILocalVariable(name: "de", scope: !13700, file: !818, line: 969, type: !11966)
!13713 = !DILocation(line: 969, column: 20, scope: !13700)
!13714 = !DILocalVariable(name: "name_len", scope: !13700, file: !818, line: 970, type: !304)
!13715 = !DILocation(line: 970, column: 20, scope: !13700)
!13716 = !DILocalVariable(name: "matches", scope: !13700, file: !818, line: 971, type: !7)
!13717 = !DILocation(line: 971, column: 20, scope: !13700)
!13718 = !DILocalVariable(name: "c", scope: !13700, file: !818, line: 972, type: !326)
!13719 = !DILocation(line: 972, column: 20, scope: !13700)
!13720 = !DILocalVariable(name: "base_has_trailing_slash", scope: !13700, file: !818, line: 973, type: !326)
!13721 = !DILocation(line: 973, column: 20, scope: !13700)
!13722 = !DILocation(line: 975, column: 10, scope: !13723)
!13723 = distinct !DILexicalBlock(scope: !13700, file: !818, line: 975, column: 9)
!13724 = !DILocation(line: 975, column: 9, scope: !13723)
!13725 = !DILocation(line: 975, column: 15, scope: !13723)
!13726 = !DILocation(line: 975, column: 20, scope: !13723)
!13727 = !DILocation(line: 975, column: 29, scope: !13723)
!13728 = !DILocation(line: 975, column: 23, scope: !13723)
!13729 = !DILocation(line: 975, column: 35, scope: !13723)
!13730 = !DILocation(line: 975, column: 9, scope: !13700)
!13731 = !DILocation(line: 976, column: 18, scope: !13732)
!13732 = distinct !DILexicalBlock(scope: !13733, file: !818, line: 976, column: 13)
!13733 = distinct !DILexicalBlock(scope: !13723, file: !818, line: 975, column: 41)
!13734 = !DILocation(line: 976, column: 13, scope: !13732)
!13735 = !DILocation(line: 976, column: 21, scope: !13732)
!13736 = !DILocation(line: 976, column: 13, scope: !13733)
!13737 = !DILocation(line: 977, column: 13, scope: !13738)
!13738 = distinct !DILexicalBlock(scope: !13732, file: !818, line: 976, column: 29)
!13739 = !DILocation(line: 977, column: 21, scope: !13738)
!13740 = !DILocation(line: 977, column: 20, scope: !13738)
!13741 = distinct !{!13741, !13737, !13742}
!13742 = !DILocation(line: 977, column: 54, scope: !13738)
!13743 = !DILocation(line: 978, column: 13, scope: !13738)
!13744 = !DILocation(line: 978, column: 20, scope: !13738)
!13745 = distinct !{!13745, !13743, !13746}
!13746 = !DILocation(line: 978, column: 53, scope: !13738)
!13747 = !DILocation(line: 979, column: 18, scope: !13748)
!13748 = distinct !DILexicalBlock(scope: !13738, file: !818, line: 979, column: 17)
!13749 = !DILocation(line: 979, column: 17, scope: !13748)
!13750 = !DILocation(line: 979, column: 23, scope: !13748)
!13751 = !DILocation(line: 979, column: 28, scope: !13748)
!13752 = !DILocation(line: 979, column: 37, scope: !13748)
!13753 = !DILocation(line: 979, column: 31, scope: !13748)
!13754 = !DILocation(line: 979, column: 43, scope: !13748)
!13755 = !DILocation(line: 979, column: 17, scope: !13738)
!13756 = !DILocation(line: 980, column: 17, scope: !13757)
!13757 = distinct !DILexicalBlock(scope: !13748, file: !818, line: 979, column: 49)
!13758 = !DILocation(line: 981, column: 17, scope: !13757)
!13759 = !DILocation(line: 983, column: 9, scope: !13738)
!13760 = !DILocation(line: 984, column: 13, scope: !13761)
!13761 = distinct !DILexicalBlock(scope: !13732, file: !818, line: 983, column: 16)
!13762 = !DILocation(line: 985, column: 13, scope: !13761)
!13763 = !DILocation(line: 987, column: 5, scope: !13733)
!13764 = !DILocation(line: 988, column: 10, scope: !13765)
!13765 = distinct !DILexicalBlock(scope: !13700, file: !818, line: 988, column: 9)
!13766 = !DILocation(line: 988, column: 9, scope: !13765)
!13767 = !DILocation(line: 988, column: 15, scope: !13765)
!13768 = !DILocation(line: 988, column: 19, scope: !13765)
!13769 = !DILocation(line: 988, column: 22, scope: !13765)
!13770 = !DILocation(line: 988, column: 34, scope: !13765)
!13771 = !DILocation(line: 988, column: 27, scope: !13765)
!13772 = !DILocation(line: 988, column: 40, scope: !13765)
!13773 = !DILocation(line: 988, column: 46, scope: !13765)
!13774 = !DILocation(line: 988, column: 9, scope: !13700)
!13775 = !DILocation(line: 989, column: 33, scope: !13776)
!13776 = distinct !DILexicalBlock(scope: !13765, file: !818, line: 988, column: 54)
!13777 = !DILocation(line: 990, column: 5, scope: !13776)
!13778 = !DILocation(line: 991, column: 16, scope: !13779)
!13779 = distinct !DILexicalBlock(scope: !13700, file: !818, line: 991, column: 9)
!13780 = !DILocation(line: 991, column: 14, scope: !13779)
!13781 = !DILocation(line: 991, column: 30, scope: !13779)
!13782 = !DILocation(line: 991, column: 9, scope: !13700)
!13783 = !DILocation(line: 992, column: 9, scope: !13784)
!13784 = distinct !DILexicalBlock(scope: !13779, file: !818, line: 991, column: 39)
!13785 = !DILocation(line: 993, column: 9, scope: !13784)
!13786 = !DILocation(line: 995, column: 5, scope: !13700)
!13787 = !DILocation(line: 996, column: 14, scope: !13788)
!13788 = distinct !DILexicalBlock(scope: !13700, file: !818, line: 996, column: 9)
!13789 = !DILocation(line: 996, column: 12, scope: !13788)
!13790 = !DILocation(line: 996, column: 22, scope: !13788)
!13791 = !DILocation(line: 996, column: 9, scope: !13700)
!13792 = !DILocation(line: 997, column: 9, scope: !13793)
!13793 = distinct !DILexicalBlock(scope: !13788, file: !818, line: 996, column: 29)
!13794 = !DILocation(line: 999, column: 5, scope: !13700)
!13795 = !DILocation(line: 1006, column: 5, scope: !13700)
!13796 = !DILocation(line: 1006, column: 26, scope: !13700)
!13797 = !DILocation(line: 1006, column: 18, scope: !13700)
!13798 = !DILocation(line: 1006, column: 16, scope: !13700)
!13799 = !DILocation(line: 1006, column: 32, scope: !13700)
!13800 = !DILocation(line: 1007, column: 28, scope: !13801)
!13801 = distinct !DILexicalBlock(scope: !13802, file: !818, line: 1007, column: 13)
!13802 = distinct !DILexicalBlock(scope: !13700, file: !818, line: 1006, column: 41)
!13803 = !DILocation(line: 1007, column: 32, scope: !13801)
!13804 = !DILocation(line: 1007, column: 13, scope: !13801)
!13805 = !DILocation(line: 1007, column: 40, scope: !13801)
!13806 = !DILocation(line: 1007, column: 13, scope: !13802)
!13807 = !DILocation(line: 1008, column: 13, scope: !13808)
!13808 = distinct !DILexicalBlock(scope: !13801, file: !818, line: 1007, column: 46)
!13809 = distinct !{!13809, !13795, !13810}
!13810 = !DILocation(line: 1029, column: 5, scope: !13700)
!13811 = !DILocation(line: 1010, column: 27, scope: !13802)
!13812 = !DILocation(line: 1010, column: 31, scope: !13802)
!13813 = !DILocation(line: 1010, column: 20, scope: !13802)
!13814 = !DILocation(line: 1010, column: 18, scope: !13802)
!13815 = !DILocation(line: 1011, column: 13, scope: !13816)
!13816 = distinct !DILexicalBlock(scope: !13802, file: !818, line: 1011, column: 13)
!13817 = !DILocation(line: 1011, column: 22, scope: !13816)
!13818 = !DILocation(line: 1011, column: 13, scope: !13802)
!13819 = !DILocation(line: 1012, column: 13, scope: !13820)
!13820 = distinct !DILexicalBlock(scope: !13816, file: !818, line: 1011, column: 42)
!13821 = !DILocation(line: 1014, column: 9, scope: !13802)
!13822 = !DILocation(line: 1014, column: 22, scope: !13802)
!13823 = !DILocation(line: 1014, column: 26, scope: !13802)
!13824 = !DILocation(line: 1014, column: 34, scope: !13802)
!13825 = !DILocation(line: 1015, column: 14, scope: !13802)
!13826 = !DILocation(line: 1015, column: 9, scope: !13802)
!13827 = !DILocation(line: 1015, column: 24, scope: !13802)
!13828 = !DILocation(line: 1016, column: 14, scope: !13802)
!13829 = !DILocation(line: 1016, column: 23, scope: !13802)
!13830 = !DILocation(line: 1016, column: 9, scope: !13802)
!13831 = !DILocation(line: 1016, column: 28, scope: !13802)
!13832 = !DILocation(line: 1017, column: 14, scope: !13802)
!13833 = !DILocation(line: 1017, column: 23, scope: !13802)
!13834 = !DILocation(line: 1017, column: 9, scope: !13802)
!13835 = !DILocation(line: 1017, column: 28, scope: !13802)
!13836 = !DILocation(line: 1018, column: 14, scope: !13837)
!13837 = distinct !DILexicalBlock(scope: !13802, file: !818, line: 1018, column: 13)
!13838 = !DILocation(line: 1018, column: 13, scope: !13837)
!13839 = !DILocation(line: 1018, column: 13, scope: !13802)
!13840 = !DILocation(line: 1019, column: 19, scope: !13841)
!13841 = distinct !DILexicalBlock(scope: !13837, file: !818, line: 1018, column: 20)
!13842 = !DILocation(line: 1019, column: 22, scope: !13841)
!13843 = !DILocation(line: 1019, column: 30, scope: !13841)
!13844 = !DILocation(line: 1019, column: 13, scope: !13841)
!13845 = !DILocation(line: 1020, column: 17, scope: !13846)
!13846 = distinct !DILexicalBlock(scope: !13841, file: !818, line: 1020, column: 17)
!13847 = !DILocation(line: 1020, column: 41, scope: !13846)
!13848 = !DILocation(line: 1020, column: 17, scope: !13841)
!13849 = !DILocation(line: 1021, column: 23, scope: !13850)
!13850 = distinct !DILexicalBlock(scope: !13846, file: !818, line: 1020, column: 47)
!13851 = !DILocation(line: 1021, column: 26, scope: !13850)
!13852 = !DILocation(line: 1021, column: 17, scope: !13850)
!13853 = !DILocation(line: 1022, column: 13, scope: !13850)
!13854 = !DILocation(line: 1023, column: 9, scope: !13841)
!13855 = !DILocation(line: 1024, column: 15, scope: !13802)
!13856 = !DILocation(line: 1024, column: 18, scope: !13802)
!13857 = !DILocation(line: 1024, column: 26, scope: !13802)
!13858 = !DILocation(line: 1024, column: 9, scope: !13802)
!13859 = !DILocation(line: 1025, column: 16, scope: !13802)
!13860 = !DILocation(line: 1026, column: 13, scope: !13861)
!13861 = distinct !DILexicalBlock(scope: !13802, file: !818, line: 1026, column: 13)
!13862 = !DILocation(line: 1026, column: 24, scope: !13861)
!13863 = !DILocation(line: 1026, column: 21, scope: !13861)
!13864 = !DILocation(line: 1026, column: 13, scope: !13802)
!13865 = !DILocation(line: 1027, column: 13, scope: !13866)
!13866 = distinct !DILexicalBlock(scope: !13861, file: !818, line: 1026, column: 38)
!13867 = !DILocation(line: 1030, column: 14, scope: !13700)
!13868 = !DILocation(line: 1030, column: 5, scope: !13700)
!13869 = !DILocation(line: 1031, column: 11, scope: !13700)
!13870 = !DILocation(line: 1031, column: 14, scope: !13700)
!13871 = !DILocation(line: 1031, column: 5, scope: !13700)
!13872 = !DILocation(line: 1032, column: 5, scope: !13700)
!13873 = !DILocation(line: 1033, column: 9, scope: !13874)
!13874 = distinct !DILexicalBlock(scope: !13700, file: !818, line: 1033, column: 9)
!13875 = !DILocation(line: 1033, column: 20, scope: !13874)
!13876 = !DILocation(line: 1033, column: 17, scope: !13874)
!13877 = !DILocation(line: 1033, column: 9, scope: !13700)
!13878 = !DILocation(line: 1034, column: 41, scope: !13879)
!13879 = distinct !DILexicalBlock(scope: !13874, file: !818, line: 1033, column: 34)
!13880 = !DILocation(line: 1034, column: 9, scope: !13879)
!13881 = !DILocation(line: 1035, column: 5, scope: !13879)
!13882 = !DILocation(line: 1036, column: 39, scope: !13883)
!13883 = distinct !DILexicalBlock(scope: !13874, file: !818, line: 1035, column: 12)
!13884 = !DILocation(line: 1036, column: 9, scope: !13883)
!13885 = !DILabel(scope: !13700, name: "bye", file: !818, line: 1038)
!13886 = !DILocation(line: 1038, column: 1, scope: !13700)
!13887 = !DILocation(line: 1039, column: 9, scope: !13888)
!13888 = distinct !DILexicalBlock(scope: !13700, file: !818, line: 1039, column: 9)
!13889 = !DILocation(line: 1039, column: 19, scope: !13888)
!13890 = !DILocation(line: 1039, column: 9, scope: !13700)
!13891 = !DILocation(line: 1040, column: 49, scope: !13892)
!13892 = distinct !DILexicalBlock(scope: !13888, file: !818, line: 1039, column: 25)
!13893 = !DILocation(line: 1040, column: 40, scope: !13892)
!13894 = !DILocation(line: 1040, column: 9, scope: !13892)
!13895 = !DILocation(line: 1042, column: 1, scope: !13700)
!13896 = distinct !DISubprogram(name: "domlsd", scope: !818, file: !818, line: 1044, type: !3536, scopeLine: 1045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !817, retainedNodes: !471)
!13897 = !DILocalVariable(name: "base", arg: 1, scope: !13896, file: !818, line: 1044, type: !385)
!13898 = !DILocation(line: 1044, column: 25, scope: !13896)
!13899 = !DILocalVariable(name: "line", scope: !13896, file: !818, line: 1046, type: !606)
!13900 = !DILocation(line: 1046, column: 20, scope: !13896)
!13901 = !DILocalVariable(name: "dir", scope: !13896, file: !818, line: 1047, type: !13272)
!13902 = !DILocation(line: 1047, column: 20, scope: !13896)
!13903 = !DILocalVariable(name: "tls_fd", scope: !13896, file: !818, line: 1048, type: !303)
!13904 = !DILocation(line: 1048, column: 20, scope: !13896)
!13905 = !DILocalVariable(name: "de", scope: !13896, file: !818, line: 1049, type: !11966)
!13906 = !DILocation(line: 1049, column: 20, scope: !13896)
!13907 = !DILocalVariable(name: "matches", scope: !13896, file: !818, line: 1050, type: !7)
!13908 = !DILocation(line: 1050, column: 20, scope: !13896)
!13909 = !DILocalVariable(name: "c", scope: !13896, file: !818, line: 1051, type: !326)
!13910 = !DILocation(line: 1051, column: 20, scope: !13896)
!13911 = !DILocation(line: 1053, column: 10, scope: !13912)
!13912 = distinct !DILexicalBlock(scope: !13896, file: !818, line: 1053, column: 9)
!13913 = !DILocation(line: 1053, column: 9, scope: !13912)
!13914 = !DILocation(line: 1053, column: 15, scope: !13912)
!13915 = !DILocation(line: 1053, column: 20, scope: !13912)
!13916 = !DILocation(line: 1053, column: 29, scope: !13912)
!13917 = !DILocation(line: 1053, column: 23, scope: !13912)
!13918 = !DILocation(line: 1053, column: 35, scope: !13912)
!13919 = !DILocation(line: 1053, column: 9, scope: !13896)
!13920 = !DILocation(line: 1054, column: 18, scope: !13921)
!13921 = distinct !DILexicalBlock(scope: !13922, file: !818, line: 1054, column: 13)
!13922 = distinct !DILexicalBlock(scope: !13912, file: !818, line: 1053, column: 41)
!13923 = !DILocation(line: 1054, column: 13, scope: !13921)
!13924 = !DILocation(line: 1054, column: 21, scope: !13921)
!13925 = !DILocation(line: 1054, column: 13, scope: !13922)
!13926 = !DILocation(line: 1055, column: 13, scope: !13927)
!13927 = distinct !DILexicalBlock(scope: !13921, file: !818, line: 1054, column: 29)
!13928 = !DILocation(line: 1055, column: 21, scope: !13927)
!13929 = !DILocation(line: 1055, column: 20, scope: !13927)
!13930 = distinct !{!13930, !13926, !13931}
!13931 = !DILocation(line: 1055, column: 54, scope: !13927)
!13932 = !DILocation(line: 1056, column: 13, scope: !13927)
!13933 = !DILocation(line: 1056, column: 20, scope: !13927)
!13934 = distinct !{!13934, !13932, !13935}
!13935 = !DILocation(line: 1056, column: 53, scope: !13927)
!13936 = !DILocation(line: 1057, column: 18, scope: !13937)
!13937 = distinct !DILexicalBlock(scope: !13927, file: !818, line: 1057, column: 17)
!13938 = !DILocation(line: 1057, column: 17, scope: !13937)
!13939 = !DILocation(line: 1057, column: 23, scope: !13937)
!13940 = !DILocation(line: 1057, column: 28, scope: !13937)
!13941 = !DILocation(line: 1057, column: 37, scope: !13937)
!13942 = !DILocation(line: 1057, column: 31, scope: !13937)
!13943 = !DILocation(line: 1057, column: 43, scope: !13937)
!13944 = !DILocation(line: 1057, column: 17, scope: !13927)
!13945 = !DILocation(line: 1058, column: 17, scope: !13946)
!13946 = distinct !DILexicalBlock(scope: !13937, file: !818, line: 1057, column: 49)
!13947 = !DILocation(line: 1059, column: 17, scope: !13946)
!13948 = !DILocation(line: 1061, column: 9, scope: !13927)
!13949 = !DILocation(line: 1062, column: 13, scope: !13950)
!13950 = distinct !DILexicalBlock(scope: !13921, file: !818, line: 1061, column: 16)
!13951 = !DILocation(line: 1063, column: 13, scope: !13950)
!13952 = !DILocation(line: 1065, column: 5, scope: !13922)
!13953 = !DILocation(line: 1066, column: 16, scope: !13954)
!13954 = distinct !DILexicalBlock(scope: !13896, file: !818, line: 1066, column: 9)
!13955 = !DILocation(line: 1066, column: 14, scope: !13954)
!13956 = !DILocation(line: 1066, column: 30, scope: !13954)
!13957 = !DILocation(line: 1066, column: 9, scope: !13896)
!13958 = !DILocation(line: 1067, column: 9, scope: !13959)
!13959 = distinct !DILexicalBlock(scope: !13954, file: !818, line: 1066, column: 39)
!13960 = !DILocation(line: 1068, column: 9, scope: !13959)
!13961 = !DILocation(line: 1070, column: 5, scope: !13896)
!13962 = !DILocation(line: 1071, column: 14, scope: !13963)
!13963 = distinct !DILexicalBlock(scope: !13896, file: !818, line: 1071, column: 9)
!13964 = !DILocation(line: 1071, column: 12, scope: !13963)
!13965 = !DILocation(line: 1071, column: 22, scope: !13963)
!13966 = !DILocation(line: 1071, column: 9, scope: !13896)
!13967 = !DILocation(line: 1072, column: 9, scope: !13968)
!13968 = distinct !DILexicalBlock(scope: !13963, file: !818, line: 1071, column: 29)
!13969 = !DILocation(line: 1074, column: 5, scope: !13896)
!13970 = !DILocation(line: 1081, column: 5, scope: !13896)
!13971 = !DILocation(line: 1081, column: 26, scope: !13896)
!13972 = !DILocation(line: 1081, column: 18, scope: !13896)
!13973 = !DILocation(line: 1081, column: 16, scope: !13896)
!13974 = !DILocation(line: 1081, column: 32, scope: !13896)
!13975 = !DILocation(line: 1082, column: 28, scope: !13976)
!13976 = distinct !DILexicalBlock(scope: !13977, file: !818, line: 1082, column: 13)
!13977 = distinct !DILexicalBlock(scope: !13896, file: !818, line: 1081, column: 41)
!13978 = !DILocation(line: 1082, column: 32, scope: !13976)
!13979 = !DILocation(line: 1082, column: 13, scope: !13976)
!13980 = !DILocation(line: 1082, column: 40, scope: !13976)
!13981 = !DILocation(line: 1082, column: 45, scope: !13976)
!13982 = !DILocation(line: 1083, column: 26, scope: !13976)
!13983 = !DILocation(line: 1083, column: 30, scope: !13976)
!13984 = !DILocation(line: 1083, column: 38, scope: !13976)
!13985 = !DILocation(line: 1083, column: 13, scope: !13976)
!13986 = !DILocation(line: 1083, column: 61, scope: !13976)
!13987 = !DILocation(line: 1082, column: 13, scope: !13977)
!13988 = !DILocation(line: 1084, column: 13, scope: !13989)
!13989 = distinct !DILexicalBlock(scope: !13976, file: !818, line: 1083, column: 66)
!13990 = distinct !{!13990, !13970, !13991}
!13991 = !DILocation(line: 1092, column: 5, scope: !13896)
!13992 = !DILocation(line: 1086, column: 15, scope: !13977)
!13993 = !DILocation(line: 1086, column: 18, scope: !13977)
!13994 = !DILocation(line: 1086, column: 26, scope: !13977)
!13995 = !DILocation(line: 1086, column: 9, scope: !13977)
!13996 = !DILocation(line: 1087, column: 15, scope: !13977)
!13997 = !DILocation(line: 1087, column: 18, scope: !13977)
!13998 = !DILocation(line: 1087, column: 9, scope: !13977)
!13999 = !DILocation(line: 1088, column: 16, scope: !13977)
!14000 = !DILocation(line: 1089, column: 13, scope: !14001)
!14001 = distinct !DILexicalBlock(scope: !13977, file: !818, line: 1089, column: 13)
!14002 = !DILocation(line: 1089, column: 24, scope: !14001)
!14003 = !DILocation(line: 1089, column: 21, scope: !14001)
!14004 = !DILocation(line: 1089, column: 13, scope: !13977)
!14005 = !DILocation(line: 1090, column: 13, scope: !14006)
!14006 = distinct !DILexicalBlock(scope: !14001, file: !818, line: 1089, column: 38)
!14007 = !DILocation(line: 1093, column: 11, scope: !13896)
!14008 = !DILocation(line: 1093, column: 14, scope: !13896)
!14009 = !DILocation(line: 1093, column: 5, scope: !13896)
!14010 = !DILocation(line: 1094, column: 5, scope: !13896)
!14011 = !DILocation(line: 1095, column: 9, scope: !14012)
!14012 = distinct !DILexicalBlock(scope: !13896, file: !818, line: 1095, column: 9)
!14013 = !DILocation(line: 1095, column: 20, scope: !14012)
!14014 = !DILocation(line: 1095, column: 17, scope: !14012)
!14015 = !DILocation(line: 1095, column: 9, scope: !13896)
!14016 = !DILocation(line: 1096, column: 41, scope: !14017)
!14017 = distinct !DILexicalBlock(scope: !14012, file: !818, line: 1095, column: 34)
!14018 = !DILocation(line: 1096, column: 9, scope: !14017)
!14019 = !DILocation(line: 1097, column: 5, scope: !14017)
!14020 = !DILocation(line: 1098, column: 39, scope: !14021)
!14021 = distinct !DILexicalBlock(scope: !14012, file: !818, line: 1097, column: 12)
!14022 = !DILocation(line: 1098, column: 9, scope: !14021)
!14023 = !DILabel(scope: !13896, name: "bye", file: !818, line: 1100)
!14024 = !DILocation(line: 1100, column: 1, scope: !13896)
!14025 = !DILocation(line: 1101, column: 9, scope: !14026)
!14026 = distinct !DILexicalBlock(scope: !13896, file: !818, line: 1101, column: 9)
!14027 = !DILocation(line: 1101, column: 13, scope: !14026)
!14028 = !DILocation(line: 1101, column: 9, scope: !13896)
!14029 = !DILocation(line: 1102, column: 18, scope: !14030)
!14030 = distinct !DILexicalBlock(scope: !14026, file: !818, line: 1101, column: 22)
!14031 = !DILocation(line: 1102, column: 9, scope: !14030)
!14032 = !DILocation(line: 1103, column: 5, scope: !14030)
!14033 = !DILocation(line: 1104, column: 9, scope: !14034)
!14034 = distinct !DILexicalBlock(scope: !13896, file: !818, line: 1104, column: 9)
!14035 = !DILocation(line: 1104, column: 19, scope: !14034)
!14036 = !DILocation(line: 1104, column: 9, scope: !13896)
!14037 = !DILocation(line: 1105, column: 49, scope: !14038)
!14038 = distinct !DILexicalBlock(scope: !14034, file: !818, line: 1104, column: 25)
!14039 = !DILocation(line: 1105, column: 40, scope: !14038)
!14040 = !DILocation(line: 1105, column: 9, scope: !14038)
!14041 = !DILocation(line: 1107, column: 1, scope: !13896)
!14042 = distinct !DISubprogram(name: "safe_write", scope: !1011, file: !1011, line: 12, type: !14043, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1010, retainedNodes: !471)
!14043 = !DISubroutineType(types: !14044)
!14044 = !{!383, !731, !13299, !304, !731}
!14045 = !DILocalVariable(name: "fd", arg: 1, scope: !14042, file: !1011, line: 12, type: !731)
!14046 = !DILocation(line: 12, column: 22, scope: !14042)
!14047 = !DILocalVariable(name: "buf_", arg: 2, scope: !14042, file: !1011, line: 12, type: !13299)
!14048 = !DILocation(line: 12, column: 45, scope: !14042)
!14049 = !DILocalVariable(name: "count", arg: 3, scope: !14042, file: !1011, line: 12, type: !304)
!14050 = !DILocation(line: 12, column: 58, scope: !14042)
!14051 = !DILocalVariable(name: "timeout", arg: 4, scope: !14042, file: !1011, line: 13, type: !731)
!14052 = !DILocation(line: 13, column: 22, scope: !14042)
!14053 = !DILocalVariable(name: "pfd", scope: !14042, file: !1011, line: 15, type: !14054)
!14054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !1014, line: 36, size: 64, elements: !14055)
!14055 = !{!14056, !14057, !14058}
!14056 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !14054, file: !1014, line: 38, baseType: !326, size: 32)
!14057 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !14054, file: !1014, line: 39, baseType: !2062, size: 16, offset: 32)
!14058 = !DIDerivedType(tag: DW_TAG_member, name: "revents", scope: !14054, file: !1014, line: 40, baseType: !2062, size: 16, offset: 48)
!14059 = !DILocation(line: 15, column: 20, scope: !14042)
!14060 = !DILocalVariable(name: "buf", scope: !14042, file: !1011, line: 16, type: !385)
!14061 = !DILocation(line: 16, column: 20, scope: !14042)
!14062 = !DILocation(line: 16, column: 41, scope: !14042)
!14063 = !DILocalVariable(name: "written", scope: !14042, file: !1011, line: 17, type: !383)
!14064 = !DILocation(line: 17, column: 20, scope: !14042)
!14065 = !DILocation(line: 19, column: 14, scope: !14042)
!14066 = !DILocation(line: 19, column: 9, scope: !14042)
!14067 = !DILocation(line: 19, column: 12, scope: !14042)
!14068 = !DILocation(line: 20, column: 9, scope: !14042)
!14069 = !DILocation(line: 20, column: 16, scope: !14042)
!14070 = !DILocation(line: 22, column: 5, scope: !14042)
!14071 = !DILocation(line: 22, column: 12, scope: !14042)
!14072 = !DILocation(line: 22, column: 18, scope: !14042)
!14073 = !DILocation(line: 23, column: 9, scope: !14074)
!14074 = distinct !DILexicalBlock(scope: !14042, file: !1011, line: 22, column: 32)
!14075 = !DILocation(line: 23, column: 48, scope: !14074)
!14076 = !DILocation(line: 23, column: 53, scope: !14074)
!14077 = !DILocation(line: 23, column: 27, scope: !14074)
!14078 = !DILocation(line: 23, column: 25, scope: !14074)
!14079 = !DILocation(line: 23, column: 61, scope: !14074)
!14080 = !DILocation(line: 24, column: 17, scope: !14081)
!14081 = distinct !DILexicalBlock(scope: !14082, file: !1011, line: 24, column: 17)
!14082 = distinct !DILexicalBlock(scope: !14074, file: !1011, line: 23, column: 77)
!14083 = !DILocation(line: 24, column: 23, scope: !14081)
!14084 = !DILocation(line: 24, column: 17, scope: !14082)
!14085 = !DILocation(line: 25, column: 44, scope: !14086)
!14086 = distinct !DILexicalBlock(scope: !14087, file: !1011, line: 25, column: 21)
!14087 = distinct !DILexicalBlock(scope: !14081, file: !1011, line: 24, column: 34)
!14088 = !DILocation(line: 25, column: 21, scope: !14086)
!14089 = !DILocation(line: 25, column: 53, scope: !14086)
!14090 = !DILocation(line: 25, column: 21, scope: !14087)
!14091 = !DILocation(line: 26, column: 21, scope: !14092)
!14092 = distinct !DILexicalBlock(scope: !14086, file: !1011, line: 25, column: 59)
!14093 = !DILocation(line: 26, column: 27, scope: !14092)
!14094 = !DILocation(line: 27, column: 21, scope: !14092)
!14095 = !DILocation(line: 29, column: 13, scope: !14087)
!14096 = !DILocation(line: 29, column: 24, scope: !14097)
!14097 = distinct !DILexicalBlock(scope: !14081, file: !1011, line: 29, column: 24)
!14098 = !DILocation(line: 29, column: 30, scope: !14097)
!14099 = !DILocation(line: 29, column: 24, scope: !14081)
!14100 = !DILocation(line: 30, column: 17, scope: !14101)
!14101 = distinct !DILexicalBlock(scope: !14097, file: !1011, line: 29, column: 40)
!14102 = distinct !{!14102, !14073, !14103}
!14103 = !DILocation(line: 32, column: 9, scope: !14074)
!14104 = !DILocation(line: 33, column: 16, scope: !14074)
!14105 = !DILocation(line: 33, column: 13, scope: !14074)
!14106 = !DILocation(line: 34, column: 18, scope: !14074)
!14107 = !DILocation(line: 34, column: 15, scope: !14074)
!14108 = distinct !{!14108, !14070, !14109}
!14109 = !DILocation(line: 35, column: 5, scope: !14042)
!14110 = !DILabel(scope: !14042, name: "ret", file: !1011, line: 36)
!14111 = !DILocation(line: 36, column: 1, scope: !14042)
!14112 = !DILocation(line: 37, column: 23, scope: !14042)
!14113 = !DILocation(line: 37, column: 44, scope: !14042)
!14114 = !DILocation(line: 37, column: 27, scope: !14042)
!14115 = !DILocation(line: 37, column: 5, scope: !14042)
!14116 = distinct !DISubprogram(name: "safe_read", scope: !1011, file: !1011, line: 41, type: !14117, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1010, retainedNodes: !471)
!14117 = !DISubroutineType(types: !14118)
!14118 = !{!383, !731, !892, !304}
!14119 = !DILocalVariable(name: "fd", arg: 1, scope: !14116, file: !1011, line: 41, type: !731)
!14120 = !DILocation(line: 41, column: 21, scope: !14116)
!14121 = !DILocalVariable(name: "buf_", arg: 2, scope: !14116, file: !1011, line: 41, type: !892)
!14122 = !DILocation(line: 41, column: 38, scope: !14116)
!14123 = !DILocalVariable(name: "count", arg: 3, scope: !14116, file: !1011, line: 41, type: !304)
!14124 = !DILocation(line: 41, column: 51, scope: !14116)
!14125 = !DILocalVariable(name: "buf", scope: !14116, file: !1011, line: 43, type: !382)
!14126 = !DILocation(line: 43, column: 20, scope: !14116)
!14127 = !DILocation(line: 43, column: 44, scope: !14116)
!14128 = !DILocalVariable(name: "readnb", scope: !14116, file: !1011, line: 44, type: !383)
!14129 = !DILocation(line: 44, column: 20, scope: !14116)
!14130 = !DILocation(line: 46, column: 5, scope: !14116)
!14131 = !DILocation(line: 46, column: 12, scope: !14116)
!14132 = !DILocation(line: 46, column: 18, scope: !14116)
!14133 = !DILocation(line: 47, column: 9, scope: !14134)
!14134 = distinct !DILexicalBlock(scope: !14116, file: !1011, line: 46, column: 33)
!14135 = !DILocation(line: 47, column: 31, scope: !14134)
!14136 = !DILocation(line: 47, column: 35, scope: !14134)
!14137 = !DILocation(line: 47, column: 40, scope: !14134)
!14138 = !DILocation(line: 47, column: 26, scope: !14134)
!14139 = !DILocation(line: 47, column: 24, scope: !14134)
!14140 = !DILocation(line: 47, column: 48, scope: !14134)
!14141 = !DILocation(line: 47, column: 62, scope: !14134)
!14142 = !DILocation(line: 48, column: 16, scope: !14134)
!14143 = !DILocation(line: 48, column: 22, scope: !14134)
!14144 = !DILocation(line: 0, scope: !14134)
!14145 = distinct !{!14145, !14133, !14146}
!14146 = !DILocation(line: 48, column: 31, scope: !14134)
!14147 = !DILocation(line: 49, column: 13, scope: !14148)
!14148 = distinct !DILexicalBlock(scope: !14134, file: !1011, line: 49, column: 13)
!14149 = !DILocation(line: 49, column: 20, scope: !14148)
!14150 = !DILocation(line: 49, column: 13, scope: !14134)
!14151 = !DILocation(line: 50, column: 20, scope: !14152)
!14152 = distinct !DILexicalBlock(scope: !14148, file: !1011, line: 49, column: 35)
!14153 = !DILocation(line: 50, column: 13, scope: !14152)
!14154 = !DILocation(line: 52, column: 13, scope: !14155)
!14155 = distinct !DILexicalBlock(scope: !14134, file: !1011, line: 52, column: 13)
!14156 = !DILocation(line: 52, column: 20, scope: !14155)
!14157 = !DILocation(line: 52, column: 13, scope: !14134)
!14158 = !DILocation(line: 53, column: 13, scope: !14159)
!14159 = distinct !DILexicalBlock(scope: !14155, file: !1011, line: 52, column: 36)
!14160 = !DILocation(line: 55, column: 18, scope: !14134)
!14161 = !DILocation(line: 55, column: 15, scope: !14134)
!14162 = !DILocation(line: 56, column: 16, scope: !14134)
!14163 = !DILocation(line: 56, column: 13, scope: !14134)
!14164 = distinct !{!14164, !14130, !14165}
!14165 = !DILocation(line: 57, column: 5, scope: !14116)
!14166 = !DILocation(line: 59, column: 23, scope: !14116)
!14167 = !DILocation(line: 59, column: 47, scope: !14116)
!14168 = !DILocation(line: 59, column: 27, scope: !14116)
!14169 = !DILocation(line: 59, column: 5, scope: !14116)
!14170 = !DILocation(line: 60, column: 1, scope: !14116)
!14171 = distinct !DISubprogram(name: "safe_read_partial", scope: !1011, file: !1011, line: 63, type: !14172, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1010, retainedNodes: !471)
!14172 = !DISubroutineType(types: !14173)
!14173 = !{!383, !731, !892, !425}
!14174 = !DILocalVariable(name: "fd", arg: 1, scope: !14171, file: !1011, line: 63, type: !731)
!14175 = !DILocation(line: 63, column: 29, scope: !14171)
!14176 = !DILocalVariable(name: "buf_", arg: 2, scope: !14171, file: !1011, line: 63, type: !892)
!14177 = !DILocation(line: 63, column: 46, scope: !14171)
!14178 = !DILocalVariable(name: "max_count", arg: 3, scope: !14171, file: !1011, line: 63, type: !425)
!14179 = !DILocation(line: 63, column: 65, scope: !14171)
!14180 = !DILocalVariable(name: "buf", scope: !14171, file: !1011, line: 65, type: !14181)
!14181 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !382)
!14182 = !DILocation(line: 65, column: 27, scope: !14171)
!14183 = !DILocation(line: 65, column: 51, scope: !14171)
!14184 = !DILocalVariable(name: "readnb", scope: !14171, file: !1011, line: 66, type: !383)
!14185 = !DILocation(line: 66, column: 27, scope: !14171)
!14186 = !DILocation(line: 68, column: 5, scope: !14171)
!14187 = !DILocation(line: 68, column: 27, scope: !14171)
!14188 = !DILocation(line: 68, column: 31, scope: !14171)
!14189 = !DILocation(line: 68, column: 36, scope: !14171)
!14190 = !DILocation(line: 68, column: 22, scope: !14171)
!14191 = !DILocation(line: 68, column: 20, scope: !14171)
!14192 = !DILocation(line: 68, column: 48, scope: !14171)
!14193 = !DILocation(line: 68, column: 62, scope: !14171)
!14194 = !DILocation(line: 69, column: 12, scope: !14171)
!14195 = !DILocation(line: 69, column: 18, scope: !14171)
!14196 = !DILocation(line: 0, scope: !14171)
!14197 = distinct !{!14197, !14186, !14198}
!14198 = !DILocation(line: 69, column: 27, scope: !14171)
!14199 = !DILocation(line: 71, column: 12, scope: !14171)
!14200 = !DILocation(line: 71, column: 5, scope: !14171)
!14201 = distinct !DISubprogram(name: "sc_argv_free", scope: !1016, file: !1016, line: 523, type: !9960, scopeLine: 524, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1015, retainedNodes: !471)
!14202 = !DILocalVariable(name: "argc", arg: 1, scope: !14201, file: !1016, line: 523, type: !326)
!14203 = !DILocation(line: 523, column: 18, scope: !14201)
!14204 = !DILocalVariable(name: "argv", arg: 2, scope: !14201, file: !1016, line: 523, type: !493)
!14205 = !DILocation(line: 523, column: 30, scope: !14201)
!14206 = !DILocalVariable(name: "i", scope: !14201, file: !1016, line: 525, type: !326)
!14207 = !DILocation(line: 525, column: 9, scope: !14201)
!14208 = !DILocation(line: 527, column: 12, scope: !14209)
!14209 = distinct !DILexicalBlock(scope: !14201, file: !1016, line: 527, column: 5)
!14210 = !DILocation(line: 527, column: 10, scope: !14209)
!14211 = !DILocation(line: 527, column: 17, scope: !14212)
!14212 = distinct !DILexicalBlock(scope: !14209, file: !1016, line: 527, column: 5)
!14213 = !DILocation(line: 527, column: 21, scope: !14212)
!14214 = !DILocation(line: 527, column: 19, scope: !14212)
!14215 = !DILocation(line: 527, column: 5, scope: !14209)
!14216 = !DILocation(line: 528, column: 14, scope: !14217)
!14217 = distinct !DILexicalBlock(scope: !14212, file: !1016, line: 527, column: 32)
!14218 = !DILocation(line: 528, column: 19, scope: !14217)
!14219 = !DILocation(line: 528, column: 9, scope: !14217)
!14220 = !DILocation(line: 529, column: 5, scope: !14217)
!14221 = !DILocation(line: 527, column: 28, scope: !14212)
!14222 = !DILocation(line: 527, column: 5, scope: !14212)
!14223 = distinct !{!14223, !14215, !14224}
!14224 = !DILocation(line: 529, column: 5, scope: !14209)
!14225 = !DILocation(line: 530, column: 10, scope: !14201)
!14226 = !DILocation(line: 530, column: 5, scope: !14201)
!14227 = !DILocation(line: 531, column: 1, scope: !14201)
!14228 = distinct !DISubprogram(name: "sc_build_command_line_from_file", scope: !1016, file: !1016, line: 671, type: !14229, scopeLine: 676, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1015, retainedNodes: !471)
!14229 = !DISubroutineType(types: !14230)
!14230 = !{!326, !385, !14231, !14243, !304, !308, !789, !14250}
!14231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14232, size: 64)
!14232 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14233)
!14233 = !DIDerivedType(tag: DW_TAG_typedef, name: "SimpleConfConfig", file: !771, line: 24, baseType: !14234)
!14234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SimpleConfConfig_", file: !771, line: 21, size: 128, elements: !14235)
!14235 = !{!14236, !14237}
!14236 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !14234, file: !771, line: 22, baseType: !303, size: 64)
!14237 = !DIDerivedType(tag: DW_TAG_member, name: "special_handler", scope: !14234, file: !771, line: 23, baseType: !14238, size: 64, offset: 64)
!14238 = !DIDerivedType(tag: DW_TAG_typedef, name: "SimpleConfSpecialHandler", file: !771, line: 18, baseType: !14239)
!14239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14240, size: 64)
!14240 = !DISubroutineType(types: !14241)
!14241 = !{!14242, !1060, !385, !303}
!14242 = !DIDerivedType(tag: DW_TAG_typedef, name: "SimpleConfSpecialHandlerResult", file: !771, line: 16, baseType: !1018)
!14243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14244, size: 64)
!14244 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14245)
!14245 = !DIDerivedType(tag: DW_TAG_typedef, name: "SimpleConfEntry", file: !771, line: 9, baseType: !14246)
!14246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SimpleConfEntry_", file: !771, line: 6, size: 128, elements: !14247)
!14247 = !{!14248, !14249}
!14248 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !14246, file: !771, line: 7, baseType: !385, size: 64)
!14249 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !14246, file: !771, line: 8, baseType: !385, size: 64, offset: 64)
!14250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !493, size: 64)
!14251 = !DILocalVariable(name: "file_name", arg: 1, scope: !14228, file: !1016, line: 671, type: !385)
!14252 = !DILocation(line: 671, column: 45, scope: !14228)
!14253 = !DILocalVariable(name: "config", arg: 2, scope: !14228, file: !1016, line: 672, type: !14231)
!14254 = !DILocation(line: 672, column: 57, scope: !14228)
!14255 = !DILocalVariable(name: "entries", arg: 3, scope: !14228, file: !1016, line: 673, type: !14243)
!14256 = !DILocation(line: 673, column: 55, scope: !14228)
!14257 = !DILocalVariable(name: "entries_count", arg: 4, scope: !14228, file: !1016, line: 674, type: !304)
!14258 = !DILocation(line: 674, column: 40, scope: !14228)
!14259 = !DILocalVariable(name: "app_name", arg: 5, scope: !14228, file: !1016, line: 674, type: !308)
!14260 = !DILocation(line: 674, column: 61, scope: !14228)
!14261 = !DILocalVariable(name: "argc_p", arg: 6, scope: !14228, file: !1016, line: 675, type: !789)
!14262 = !DILocation(line: 675, column: 38, scope: !14228)
!14263 = !DILocalVariable(name: "argv_p", arg: 7, scope: !14228, file: !1016, line: 675, type: !14250)
!14264 = !DILocation(line: 675, column: 54, scope: !14228)
!14265 = !DILocalVariable(name: "argv", scope: !14228, file: !1016, line: 677, type: !493)
!14266 = !DILocation(line: 677, column: 12, scope: !14228)
!14267 = !DILocalVariable(name: "argc", scope: !14228, file: !1016, line: 678, type: !326)
!14268 = !DILocation(line: 678, column: 12, scope: !14228)
!14269 = !DILocation(line: 680, column: 6, scope: !14228)
!14270 = !DILocation(line: 680, column: 13, scope: !14228)
!14271 = !DILocation(line: 681, column: 6, scope: !14228)
!14272 = !DILocation(line: 681, column: 13, scope: !14228)
!14273 = !DILocation(line: 682, column: 17, scope: !14274)
!14274 = distinct !DILexicalBlock(scope: !14228, file: !1016, line: 682, column: 9)
!14275 = !DILocation(line: 682, column: 15, scope: !14274)
!14276 = !DILocation(line: 682, column: 39, scope: !14274)
!14277 = !DILocation(line: 682, column: 47, scope: !14274)
!14278 = !DILocation(line: 683, column: 28, scope: !14274)
!14279 = !DILocation(line: 683, column: 21, scope: !14274)
!14280 = !DILocation(line: 683, column: 19, scope: !14274)
!14281 = !DILocation(line: 683, column: 39, scope: !14274)
!14282 = !DILocation(line: 682, column: 9, scope: !14228)
!14283 = !DILocation(line: 684, column: 22, scope: !14284)
!14284 = distinct !DILexicalBlock(scope: !14274, file: !1016, line: 683, column: 48)
!14285 = !DILocation(line: 684, column: 28, scope: !14284)
!14286 = !DILocation(line: 684, column: 9, scope: !14284)
!14287 = !DILocation(line: 685, column: 9, scope: !14284)
!14288 = !DILocation(line: 687, column: 20, scope: !14228)
!14289 = !DILocation(line: 687, column: 5, scope: !14228)
!14290 = !DILocation(line: 687, column: 14, scope: !14228)
!14291 = !DILocation(line: 687, column: 18, scope: !14228)
!14292 = !DILocation(line: 688, column: 42, scope: !14293)
!14293 = distinct !DILexicalBlock(scope: !14228, file: !1016, line: 688, column: 9)
!14294 = !DILocation(line: 688, column: 53, scope: !14293)
!14295 = !DILocation(line: 689, column: 42, scope: !14293)
!14296 = !DILocation(line: 689, column: 51, scope: !14293)
!14297 = !DILocation(line: 688, column: 9, scope: !14293)
!14298 = !DILocation(line: 690, column: 60, scope: !14293)
!14299 = !DILocation(line: 688, column: 9, scope: !14228)
!14300 = !DILocation(line: 691, column: 22, scope: !14301)
!14301 = distinct !DILexicalBlock(scope: !14293, file: !1016, line: 690, column: 66)
!14302 = !DILocation(line: 691, column: 28, scope: !14301)
!14303 = !DILocation(line: 691, column: 9, scope: !14301)
!14304 = !DILocation(line: 692, column: 9, scope: !14301)
!14305 = !DILocation(line: 694, column: 15, scope: !14228)
!14306 = !DILocation(line: 694, column: 6, scope: !14228)
!14307 = !DILocation(line: 694, column: 13, scope: !14228)
!14308 = !DILocation(line: 695, column: 15, scope: !14228)
!14309 = !DILocation(line: 695, column: 6, scope: !14228)
!14310 = !DILocation(line: 695, column: 13, scope: !14228)
!14311 = !DILocation(line: 697, column: 5, scope: !14228)
!14312 = !DILocation(line: 698, column: 1, scope: !14228)
!14313 = distinct !DISubprogram(name: "append_to_command_line_from_file", scope: !1016, file: !1016, line: 534, type: !14314, scopeLine: 540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1015, retainedNodes: !471)
!14314 = !DISubroutineType(types: !14315)
!14315 = !{!326, !385, !14231, !14243, !304, !789, !14250, !7}
!14316 = !DILocalVariable(name: "file_name", arg: 1, scope: !14313, file: !1016, line: 534, type: !385)
!14317 = !DILocation(line: 534, column: 46, scope: !14313)
!14318 = !DILocalVariable(name: "config", arg: 2, scope: !14313, file: !1016, line: 535, type: !14231)
!14319 = !DILocation(line: 535, column: 58, scope: !14313)
!14320 = !DILocalVariable(name: "entries", arg: 3, scope: !14313, file: !1016, line: 536, type: !14243)
!14321 = !DILocation(line: 536, column: 56, scope: !14313)
!14322 = !DILocalVariable(name: "entries_count", arg: 4, scope: !14313, file: !1016, line: 537, type: !304)
!14323 = !DILocation(line: 537, column: 41, scope: !14313)
!14324 = !DILocalVariable(name: "argc_p", arg: 5, scope: !14313, file: !1016, line: 538, type: !789)
!14325 = !DILocation(line: 538, column: 39, scope: !14313)
!14326 = !DILocalVariable(name: "argv_p", arg: 6, scope: !14313, file: !1016, line: 538, type: !14250)
!14327 = !DILocation(line: 538, column: 55, scope: !14313)
!14328 = !DILocalVariable(name: "depth", arg: 7, scope: !14313, file: !1016, line: 539, type: !7)
!14329 = !DILocation(line: 539, column: 47, scope: !14313)
!14330 = !DILocalVariable(name: "line", scope: !14313, file: !1016, line: 541, type: !893)
!14331 = !DILocation(line: 541, column: 19, scope: !14313)
!14332 = !DILocalVariable(name: "fp", scope: !14313, file: !1016, line: 542, type: !14333)
!14333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14334, size: 64)
!14334 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2990, line: 7, baseType: !14335)
!14335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2992, line: 49, size: 1728, elements: !14336)
!14336 = !{!14337, !14338, !14339, !14340, !14341, !14342, !14343, !14344, !14345, !14346, !14347, !14348, !14349, !14350, !14352, !14353, !14354, !14355, !14356, !14357, !14358, !14359, !14360, !14361, !14362, !14363, !14364, !14365, !14366}
!14337 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !14335, file: !2992, line: 51, baseType: !326, size: 32)
!14338 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !14335, file: !2992, line: 54, baseType: !308, size: 64, offset: 64)
!14339 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !14335, file: !2992, line: 55, baseType: !308, size: 64, offset: 128)
!14340 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !14335, file: !2992, line: 56, baseType: !308, size: 64, offset: 192)
!14341 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !14335, file: !2992, line: 57, baseType: !308, size: 64, offset: 256)
!14342 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !14335, file: !2992, line: 58, baseType: !308, size: 64, offset: 320)
!14343 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !14335, file: !2992, line: 59, baseType: !308, size: 64, offset: 384)
!14344 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !14335, file: !2992, line: 60, baseType: !308, size: 64, offset: 448)
!14345 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !14335, file: !2992, line: 61, baseType: !308, size: 64, offset: 512)
!14346 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !14335, file: !2992, line: 64, baseType: !308, size: 64, offset: 576)
!14347 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !14335, file: !2992, line: 65, baseType: !308, size: 64, offset: 640)
!14348 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !14335, file: !2992, line: 66, baseType: !308, size: 64, offset: 704)
!14349 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !14335, file: !2992, line: 68, baseType: !3007, size: 64, offset: 768)
!14350 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !14335, file: !2992, line: 70, baseType: !14351, size: 64, offset: 832)
!14351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14335, size: 64)
!14352 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !14335, file: !2992, line: 72, baseType: !326, size: 32, offset: 896)
!14353 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !14335, file: !2992, line: 73, baseType: !326, size: 32, offset: 928)
!14354 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !14335, file: !2992, line: 74, baseType: !346, size: 64, offset: 960)
!14355 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !14335, file: !2992, line: 77, baseType: !321, size: 16, offset: 1024)
!14356 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !14335, file: !2992, line: 78, baseType: !396, size: 8, offset: 1040)
!14357 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !14335, file: !2992, line: 79, baseType: !356, size: 8, offset: 1048)
!14358 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !14335, file: !2992, line: 81, baseType: !3018, size: 64, offset: 1088)
!14359 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !14335, file: !2992, line: 89, baseType: !3021, size: 64, offset: 1152)
!14360 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !14335, file: !2992, line: 91, baseType: !3023, size: 64, offset: 1216)
!14361 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !14335, file: !2992, line: 92, baseType: !3026, size: 64, offset: 1280)
!14362 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !14335, file: !2992, line: 93, baseType: !14351, size: 64, offset: 1344)
!14363 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !14335, file: !2992, line: 94, baseType: !303, size: 64, offset: 1408)
!14364 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !14335, file: !2992, line: 95, baseType: !304, size: 64, offset: 1472)
!14365 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !14335, file: !2992, line: 96, baseType: !326, size: 32, offset: 1536)
!14366 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !14335, file: !2992, line: 98, baseType: !3033, size: 160, offset: 1568)
!14367 = !DILocation(line: 542, column: 19, scope: !14313)
!14368 = !DILocalVariable(name: "arg", scope: !14313, file: !1016, line: 543, type: !308)
!14369 = !DILocation(line: 543, column: 19, scope: !14313)
!14370 = !DILocalVariable(name: "argv_tmp", scope: !14313, file: !1016, line: 544, type: !493)
!14371 = !DILocation(line: 544, column: 19, scope: !14313)
!14372 = !DILocalVariable(name: "err", scope: !14313, file: !1016, line: 545, type: !385)
!14373 = !DILocation(line: 545, column: 19, scope: !14313)
!14374 = !DILocalVariable(name: "err_tmp", scope: !14313, file: !1016, line: 546, type: !385)
!14375 = !DILocation(line: 546, column: 19, scope: !14313)
!14376 = !DILocalVariable(name: "i", scope: !14313, file: !1016, line: 547, type: !304)
!14377 = !DILocation(line: 547, column: 19, scope: !14313)
!14378 = !DILocalVariable(name: "line_count", scope: !14313, file: !1016, line: 548, type: !7)
!14379 = !DILocation(line: 548, column: 19, scope: !14313)
!14380 = !DILocalVariable(name: "try_next", scope: !14313, file: !1016, line: 549, type: !326)
!14381 = !DILocation(line: 549, column: 19, scope: !14313)
!14382 = !DILocation(line: 551, column: 9, scope: !14383)
!14383 = distinct !DILexicalBlock(scope: !14313, file: !1016, line: 551, column: 9)
!14384 = !DILocation(line: 551, column: 15, scope: !14383)
!14385 = !DILocation(line: 551, column: 9, scope: !14313)
!14386 = !DILocation(line: 552, column: 17, scope: !14387)
!14387 = distinct !DILexicalBlock(scope: !14383, file: !1016, line: 551, column: 36)
!14388 = !DILocation(line: 552, column: 65, scope: !14387)
!14389 = !DILocation(line: 552, column: 9, scope: !14387)
!14390 = !DILocation(line: 553, column: 9, scope: !14387)
!14391 = !DILocation(line: 555, column: 21, scope: !14392)
!14392 = distinct !DILexicalBlock(scope: !14313, file: !1016, line: 555, column: 9)
!14393 = !DILocation(line: 555, column: 15, scope: !14392)
!14394 = !DILocation(line: 555, column: 13, scope: !14392)
!14395 = !DILocation(line: 555, column: 38, scope: !14392)
!14396 = !DILocation(line: 555, column: 9, scope: !14313)
!14397 = !DILocation(line: 556, column: 17, scope: !14398)
!14398 = distinct !DILexicalBlock(scope: !14392, file: !1016, line: 555, column: 47)
!14399 = !DILocation(line: 556, column: 54, scope: !14398)
!14400 = !DILocation(line: 556, column: 74, scope: !14398)
!14401 = !DILocation(line: 556, column: 65, scope: !14398)
!14402 = !DILocation(line: 556, column: 9, scope: !14398)
!14403 = !DILocation(line: 557, column: 9, scope: !14398)
!14404 = !DILocation(line: 559, column: 5, scope: !14313)
!14405 = !DILocation(line: 559, column: 18, scope: !14313)
!14406 = !DILocation(line: 559, column: 44, scope: !14313)
!14407 = !DILocation(line: 559, column: 12, scope: !14313)
!14408 = !DILocation(line: 559, column: 48, scope: !14313)
!14409 = !DILocation(line: 560, column: 15, scope: !14410)
!14410 = distinct !DILexicalBlock(scope: !14313, file: !1016, line: 559, column: 57)
!14411 = !DILocation(line: 560, column: 9, scope: !14410)
!14412 = !DILocation(line: 561, column: 19, scope: !14410)
!14413 = !DILocation(line: 562, column: 16, scope: !14414)
!14414 = distinct !DILexicalBlock(scope: !14410, file: !1016, line: 562, column: 9)
!14415 = !DILocation(line: 562, column: 14, scope: !14414)
!14416 = !DILocation(line: 562, column: 21, scope: !14417)
!14417 = distinct !DILexicalBlock(scope: !14414, file: !1016, line: 562, column: 9)
!14418 = !DILocation(line: 562, column: 25, scope: !14417)
!14419 = !DILocation(line: 562, column: 23, scope: !14417)
!14420 = !DILocation(line: 562, column: 9, scope: !14414)
!14421 = !DILocation(line: 563, column: 22, scope: !14422)
!14422 = distinct !DILexicalBlock(scope: !14417, file: !1016, line: 562, column: 45)
!14423 = !DILocation(line: 564, column: 32, scope: !14422)
!14424 = !DILocation(line: 564, column: 40, scope: !14422)
!14425 = !DILocation(line: 564, column: 44, scope: !14422)
!14426 = !DILocation(line: 564, column: 21, scope: !14422)
!14427 = !DILocation(line: 564, column: 13, scope: !14422)
!14428 = !DILocation(line: 566, column: 26, scope: !14429)
!14429 = distinct !DILexicalBlock(scope: !14422, file: !1016, line: 564, column: 67)
!14430 = !DILocation(line: 567, column: 17, scope: !14429)
!14431 = !DILocation(line: 569, column: 17, scope: !14429)
!14432 = !DILocation(line: 571, column: 24, scope: !14429)
!14433 = !DILocation(line: 571, column: 17, scope: !14429)
!14434 = !DILocation(line: 572, column: 17, scope: !14429)
!14435 = !DILocation(line: 574, column: 25, scope: !14429)
!14436 = !DILocation(line: 574, column: 55, scope: !14429)
!14437 = !DILocation(line: 574, column: 63, scope: !14429)
!14438 = !DILocation(line: 574, column: 66, scope: !14429)
!14439 = !DILocation(line: 574, column: 17, scope: !14429)
!14440 = !DILocation(line: 575, column: 17, scope: !14429)
!14441 = !DILocation(line: 577, column: 24, scope: !14429)
!14442 = !DILocation(line: 577, column: 17, scope: !14429)
!14443 = !DILocation(line: 578, column: 17, scope: !14429)
!14444 = !DILocation(line: 580, column: 23, scope: !14429)
!14445 = !DILocation(line: 580, column: 21, scope: !14429)
!14446 = !DILocation(line: 581, column: 17, scope: !14429)
!14447 = !DILocation(line: 583, column: 23, scope: !14448)
!14448 = distinct !DILexicalBlock(scope: !14429, file: !1016, line: 582, column: 38)
!14449 = !DILocation(line: 583, column: 21, scope: !14448)
!14450 = !DILocation(line: 584, column: 21, scope: !14451)
!14451 = distinct !DILexicalBlock(scope: !14448, file: !1016, line: 584, column: 21)
!14452 = !DILocation(line: 584, column: 25, scope: !14451)
!14453 = !DILocation(line: 584, column: 33, scope: !14451)
!14454 = !DILocation(line: 584, column: 37, scope: !14451)
!14455 = !DILocation(line: 584, column: 36, scope: !14451)
!14456 = !DILocation(line: 584, column: 41, scope: !14451)
!14457 = !DILocation(line: 584, column: 21, scope: !14448)
!14458 = !DILocation(line: 585, column: 29, scope: !14459)
!14459 = distinct !DILexicalBlock(scope: !14451, file: !1016, line: 584, column: 47)
!14460 = !DILocation(line: 586, column: 25, scope: !14459)
!14461 = !DILocation(line: 586, column: 36, scope: !14459)
!14462 = !DILocation(line: 586, column: 63, scope: !14459)
!14463 = !DILocation(line: 586, column: 69, scope: !14459)
!14464 = !DILocation(line: 586, column: 67, scope: !14459)
!14465 = !DILocation(line: 586, column: 74, scope: !14459)
!14466 = !DILocation(line: 586, column: 48, scope: !14459)
!14467 = !DILocation(line: 587, column: 25, scope: !14459)
!14468 = !DILocation(line: 587, column: 37, scope: !14459)
!14469 = !DILocation(line: 585, column: 21, scope: !14459)
!14470 = !DILocation(line: 588, column: 17, scope: !14459)
!14471 = !DILocation(line: 589, column: 29, scope: !14472)
!14472 = distinct !DILexicalBlock(scope: !14451, file: !1016, line: 588, column: 24)
!14473 = !DILocation(line: 590, column: 25, scope: !14472)
!14474 = !DILocation(line: 590, column: 36, scope: !14472)
!14475 = !DILocation(line: 590, column: 48, scope: !14472)
!14476 = !DILocation(line: 590, column: 60, scope: !14472)
!14477 = !DILocation(line: 589, column: 21, scope: !14472)
!14478 = !DILocation(line: 592, column: 24, scope: !14448)
!14479 = !DILocation(line: 592, column: 17, scope: !14448)
!14480 = !DILocation(line: 593, column: 17, scope: !14448)
!14481 = !DILocation(line: 596, column: 26, scope: !14429)
!14482 = !DILocation(line: 597, column: 21, scope: !14483)
!14483 = distinct !DILexicalBlock(scope: !14429, file: !1016, line: 597, column: 21)
!14484 = !DILocation(line: 597, column: 25, scope: !14483)
!14485 = !DILocation(line: 597, column: 33, scope: !14483)
!14486 = !DILocation(line: 597, column: 37, scope: !14483)
!14487 = !DILocation(line: 597, column: 36, scope: !14483)
!14488 = !DILocation(line: 597, column: 41, scope: !14483)
!14489 = !DILocation(line: 597, column: 21, scope: !14429)
!14490 = !DILocation(line: 598, column: 26, scope: !14491)
!14491 = distinct !DILexicalBlock(scope: !14483, file: !1016, line: 597, column: 47)
!14492 = !DILocation(line: 598, column: 21, scope: !14491)
!14493 = !DILocation(line: 599, column: 21, scope: !14491)
!14494 = !DILocation(line: 601, column: 22, scope: !14495)
!14495 = distinct !DILexicalBlock(scope: !14429, file: !1016, line: 601, column: 21)
!14496 = !DILocation(line: 601, column: 21, scope: !14495)
!14497 = !DILocation(line: 601, column: 29, scope: !14495)
!14498 = !DILocation(line: 601, column: 21, scope: !14429)
!14499 = !DILocation(line: 602, column: 21, scope: !14500)
!14500 = distinct !DILexicalBlock(scope: !14495, file: !1016, line: 601, column: 62)
!14501 = !DILocation(line: 604, column: 42, scope: !14502)
!14502 = distinct !DILexicalBlock(scope: !14429, file: !1016, line: 604, column: 21)
!14503 = !DILocation(line: 604, column: 41, scope: !14502)
!14504 = !DILocation(line: 605, column: 52, scope: !14502)
!14505 = !DILocation(line: 605, column: 51, scope: !14502)
!14506 = !DILocation(line: 605, column: 42, scope: !14502)
!14507 = !DILocation(line: 605, column: 59, scope: !14502)
!14508 = !DILocation(line: 604, column: 63, scope: !14502)
!14509 = !DILocation(line: 604, column: 33, scope: !14502)
!14510 = !DILocation(line: 604, column: 31, scope: !14502)
!14511 = !DILocation(line: 605, column: 66, scope: !14502)
!14512 = !DILocation(line: 604, column: 21, scope: !14429)
!14513 = !DILocation(line: 606, column: 26, scope: !14514)
!14514 = distinct !DILexicalBlock(scope: !14502, file: !1016, line: 605, column: 75)
!14515 = !DILocation(line: 606, column: 21, scope: !14514)
!14516 = !DILocation(line: 607, column: 28, scope: !14514)
!14517 = !DILocation(line: 607, column: 21, scope: !14514)
!14518 = !DILocation(line: 608, column: 21, scope: !14514)
!14519 = !DILocation(line: 610, column: 27, scope: !14429)
!14520 = !DILocation(line: 610, column: 18, scope: !14429)
!14521 = !DILocation(line: 610, column: 25, scope: !14429)
!14522 = !DILocation(line: 611, column: 42, scope: !14429)
!14523 = !DILocation(line: 611, column: 19, scope: !14429)
!14524 = !DILocation(line: 611, column: 18, scope: !14429)
!14525 = !DILocation(line: 611, column: 29, scope: !14429)
!14526 = !DILocation(line: 611, column: 36, scope: !14429)
!14527 = !DILocation(line: 611, column: 17, scope: !14429)
!14528 = !DILocation(line: 611, column: 40, scope: !14429)
!14529 = !DILocation(line: 612, column: 17, scope: !14429)
!14530 = !DILocalVariable(name: "output", scope: !14531, file: !1016, line: 614, type: !308)
!14531 = distinct !DILexicalBlock(scope: !14429, file: !1016, line: 613, column: 39)
!14532 = !DILocation(line: 614, column: 49, scope: !14531)
!14533 = !DILocalVariable(name: "special_result", scope: !14531, file: !1016, line: 615, type: !14242)
!14534 = !DILocation(line: 615, column: 49, scope: !14531)
!14535 = !DILocation(line: 617, column: 26, scope: !14531)
!14536 = !DILocation(line: 618, column: 21, scope: !14537)
!14537 = distinct !DILexicalBlock(scope: !14531, file: !1016, line: 618, column: 21)
!14538 = !DILocation(line: 618, column: 28, scope: !14537)
!14539 = !DILocation(line: 618, column: 36, scope: !14537)
!14540 = !DILocation(line: 618, column: 39, scope: !14537)
!14541 = !DILocation(line: 618, column: 47, scope: !14537)
!14542 = !DILocation(line: 618, column: 63, scope: !14537)
!14543 = !DILocation(line: 618, column: 21, scope: !14531)
!14544 = !DILocation(line: 619, column: 29, scope: !14545)
!14545 = distinct !DILexicalBlock(scope: !14537, file: !1016, line: 618, column: 72)
!14546 = !DILocation(line: 619, column: 21, scope: !14545)
!14547 = !DILocation(line: 620, column: 21, scope: !14545)
!14548 = !DILocation(line: 622, column: 34, scope: !14531)
!14549 = !DILocation(line: 622, column: 42, scope: !14531)
!14550 = !DILocation(line: 622, column: 77, scope: !14531)
!14551 = !DILocation(line: 623, column: 58, scope: !14531)
!14552 = !DILocation(line: 623, column: 66, scope: !14531)
!14553 = !DILocation(line: 622, column: 32, scope: !14531)
!14554 = !DILocation(line: 624, column: 21, scope: !14555)
!14555 = distinct !DILexicalBlock(scope: !14531, file: !1016, line: 624, column: 21)
!14556 = !DILocation(line: 624, column: 36, scope: !14555)
!14557 = !DILocation(line: 624, column: 21, scope: !14531)
!14558 = !DILocation(line: 625, column: 26, scope: !14559)
!14559 = distinct !DILexicalBlock(scope: !14555, file: !1016, line: 624, column: 71)
!14560 = !DILocation(line: 625, column: 21, scope: !14559)
!14561 = !DILocation(line: 626, column: 21, scope: !14559)
!14562 = !DILocation(line: 627, column: 28, scope: !14563)
!14563 = distinct !DILexicalBlock(scope: !14555, file: !1016, line: 627, column: 28)
!14564 = !DILocation(line: 627, column: 43, scope: !14563)
!14565 = !DILocation(line: 627, column: 28, scope: !14555)
!14566 = !DILocation(line: 628, column: 26, scope: !14567)
!14567 = distinct !DILexicalBlock(scope: !14563, file: !1016, line: 627, column: 79)
!14568 = !DILocation(line: 628, column: 21, scope: !14567)
!14569 = !DILocation(line: 629, column: 28, scope: !14567)
!14570 = !DILocation(line: 629, column: 21, scope: !14567)
!14571 = !DILocation(line: 630, column: 21, scope: !14567)
!14572 = !DILocation(line: 631, column: 28, scope: !14573)
!14573 = distinct !DILexicalBlock(scope: !14563, file: !1016, line: 631, column: 28)
!14574 = !DILocation(line: 631, column: 43, scope: !14573)
!14575 = !DILocation(line: 631, column: 28, scope: !14563)
!14576 = !DILocalVariable(name: "ret", scope: !14577, file: !1016, line: 632, type: !731)
!14577 = distinct !DILexicalBlock(scope: !14573, file: !1016, line: 631, column: 81)
!14578 = !DILocation(line: 632, column: 31, scope: !14577)
!14579 = !DILocation(line: 633, column: 41, scope: !14577)
!14580 = !DILocation(line: 633, column: 49, scope: !14577)
!14581 = !DILocation(line: 633, column: 57, scope: !14577)
!14582 = !DILocation(line: 633, column: 66, scope: !14577)
!14583 = !DILocation(line: 634, column: 26, scope: !14577)
!14584 = !DILocation(line: 634, column: 34, scope: !14577)
!14585 = !DILocation(line: 634, column: 42, scope: !14577)
!14586 = !DILocation(line: 634, column: 48, scope: !14577)
!14587 = !DILocation(line: 632, column: 37, scope: !14577)
!14588 = !DILocation(line: 635, column: 26, scope: !14577)
!14589 = !DILocation(line: 635, column: 21, scope: !14577)
!14590 = !DILocation(line: 636, column: 26, scope: !14577)
!14591 = !DILocation(line: 636, column: 21, scope: !14577)
!14592 = !DILocation(line: 637, column: 25, scope: !14593)
!14593 = distinct !DILexicalBlock(scope: !14577, file: !1016, line: 637, column: 25)
!14594 = !DILocation(line: 637, column: 29, scope: !14593)
!14595 = !DILocation(line: 637, column: 25, scope: !14577)
!14596 = !DILocation(line: 638, column: 32, scope: !14597)
!14597 = distinct !DILexicalBlock(scope: !14593, file: !1016, line: 637, column: 35)
!14598 = !DILocation(line: 638, column: 25, scope: !14597)
!14599 = !DILocation(line: 639, column: 25, scope: !14597)
!14600 = !DILocation(line: 641, column: 21, scope: !14577)
!14601 = !DILocation(line: 643, column: 17, scope: !14531)
!14602 = !DILocation(line: 646, column: 17, scope: !14429)
!14603 = !DILocation(line: 648, column: 17, scope: !14604)
!14604 = distinct !DILexicalBlock(scope: !14422, file: !1016, line: 648, column: 17)
!14605 = !DILocation(line: 648, column: 26, scope: !14604)
!14606 = !DILocation(line: 648, column: 17, scope: !14422)
!14607 = !DILocation(line: 649, column: 17, scope: !14608)
!14608 = distinct !DILexicalBlock(scope: !14604, file: !1016, line: 648, column: 32)
!14609 = !DILocation(line: 651, column: 9, scope: !14422)
!14610 = !DILocation(line: 562, column: 41, scope: !14417)
!14611 = !DILocation(line: 562, column: 9, scope: !14417)
!14612 = distinct !{!14612, !14420, !14613}
!14613 = !DILocation(line: 651, column: 9, scope: !14414)
!14614 = !DILocation(line: 652, column: 13, scope: !14615)
!14615 = distinct !DILexicalBlock(scope: !14410, file: !1016, line: 652, column: 13)
!14616 = !DILocation(line: 652, column: 22, scope: !14615)
!14617 = !DILocation(line: 652, column: 27, scope: !14615)
!14618 = !DILocation(line: 652, column: 30, scope: !14615)
!14619 = !DILocation(line: 652, column: 35, scope: !14615)
!14620 = !DILocation(line: 652, column: 32, scope: !14615)
!14621 = !DILocation(line: 652, column: 13, scope: !14410)
!14622 = !DILocation(line: 653, column: 17, scope: !14623)
!14623 = distinct !DILexicalBlock(scope: !14624, file: !1016, line: 653, column: 17)
!14624 = distinct !DILexicalBlock(scope: !14615, file: !1016, line: 652, column: 50)
!14625 = !DILocation(line: 653, column: 21, scope: !14623)
!14626 = !DILocation(line: 653, column: 29, scope: !14623)
!14627 = !DILocation(line: 653, column: 33, scope: !14623)
!14628 = !DILocation(line: 653, column: 32, scope: !14623)
!14629 = !DILocation(line: 653, column: 37, scope: !14623)
!14630 = !DILocation(line: 653, column: 17, scope: !14624)
!14631 = !DILocation(line: 654, column: 25, scope: !14632)
!14632 = distinct !DILexicalBlock(scope: !14623, file: !1016, line: 653, column: 43)
!14633 = !DILocation(line: 655, column: 21, scope: !14632)
!14634 = !DILocation(line: 655, column: 32, scope: !14632)
!14635 = !DILocation(line: 655, column: 59, scope: !14632)
!14636 = !DILocation(line: 655, column: 65, scope: !14632)
!14637 = !DILocation(line: 655, column: 63, scope: !14632)
!14638 = !DILocation(line: 655, column: 70, scope: !14632)
!14639 = !DILocation(line: 655, column: 44, scope: !14632)
!14640 = !DILocation(line: 656, column: 21, scope: !14632)
!14641 = !DILocation(line: 656, column: 33, scope: !14632)
!14642 = !DILocation(line: 654, column: 17, scope: !14632)
!14643 = !DILocation(line: 657, column: 13, scope: !14632)
!14644 = !DILocation(line: 658, column: 25, scope: !14645)
!14645 = distinct !DILexicalBlock(scope: !14623, file: !1016, line: 657, column: 20)
!14646 = !DILocation(line: 659, column: 21, scope: !14645)
!14647 = !DILocation(line: 659, column: 32, scope: !14645)
!14648 = !DILocation(line: 659, column: 44, scope: !14645)
!14649 = !DILocation(line: 659, column: 56, scope: !14645)
!14650 = !DILocation(line: 658, column: 17, scope: !14645)
!14651 = !DILocation(line: 661, column: 20, scope: !14624)
!14652 = !DILocation(line: 661, column: 13, scope: !14624)
!14653 = !DILocation(line: 662, column: 13, scope: !14624)
!14654 = distinct !{!14654, !14404, !14655}
!14655 = !DILocation(line: 664, column: 5, scope: !14313)
!14656 = !DILocation(line: 665, column: 19, scope: !14313)
!14657 = !DILocation(line: 665, column: 12, scope: !14313)
!14658 = !DILocation(line: 667, column: 5, scope: !14313)
!14659 = !DILocation(line: 668, column: 1, scope: !14313)
!14660 = distinct !DISubprogram(name: "chomp", scope: !1016, file: !1016, line: 501, type: !14661, scopeLine: 502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1015, retainedNodes: !471)
!14661 = !DISubroutineType(types: !14662)
!14662 = !{!308, !308}
!14663 = !DILocalVariable(name: "str", arg: 1, scope: !14660, file: !1016, line: 501, type: !308)
!14664 = !DILocation(line: 501, column: 13, scope: !14660)
!14665 = !DILocalVariable(name: "i", scope: !14660, file: !1016, line: 503, type: !304)
!14666 = !DILocation(line: 503, column: 12, scope: !14660)
!14667 = !DILocation(line: 503, column: 23, scope: !14660)
!14668 = !DILocation(line: 503, column: 16, scope: !14660)
!14669 = !DILocalVariable(name: "c", scope: !14660, file: !1016, line: 504, type: !326)
!14670 = !DILocation(line: 504, column: 12, scope: !14660)
!14671 = !DILocation(line: 506, column: 9, scope: !14672)
!14672 = distinct !DILexicalBlock(scope: !14660, file: !1016, line: 506, column: 9)
!14673 = !DILocation(line: 506, column: 11, scope: !14672)
!14674 = !DILocation(line: 506, column: 9, scope: !14660)
!14675 = !DILocation(line: 507, column: 16, scope: !14676)
!14676 = distinct !DILexicalBlock(scope: !14672, file: !1016, line: 506, column: 17)
!14677 = !DILocation(line: 507, column: 9, scope: !14676)
!14678 = !DILocation(line: 509, column: 5, scope: !14660)
!14679 = !DILocation(line: 510, column: 10, scope: !14680)
!14680 = distinct !DILexicalBlock(scope: !14660, file: !1016, line: 509, column: 8)
!14681 = !DILocation(line: 511, column: 29, scope: !14680)
!14682 = !DILocation(line: 511, column: 33, scope: !14680)
!14683 = !DILocation(line: 511, column: 13, scope: !14680)
!14684 = !DILocation(line: 511, column: 11, scope: !14680)
!14685 = !DILocation(line: 512, column: 13, scope: !14686)
!14686 = distinct !DILexicalBlock(scope: !14680, file: !1016, line: 512, column: 13)
!14687 = !DILocation(line: 512, column: 13, scope: !14680)
!14688 = !DILocation(line: 513, column: 13, scope: !14689)
!14689 = distinct !DILexicalBlock(scope: !14686, file: !1016, line: 512, column: 25)
!14690 = !DILocation(line: 513, column: 17, scope: !14689)
!14691 = !DILocation(line: 513, column: 20, scope: !14689)
!14692 = !DILocation(line: 514, column: 9, scope: !14689)
!14693 = !DILocation(line: 515, column: 13, scope: !14694)
!14694 = distinct !DILexicalBlock(scope: !14686, file: !1016, line: 514, column: 16)
!14695 = !DILocation(line: 517, column: 5, scope: !14680)
!14696 = !DILocation(line: 517, column: 14, scope: !14660)
!14697 = !DILocation(line: 517, column: 16, scope: !14660)
!14698 = distinct !{!14698, !14678, !14699}
!14699 = !DILocation(line: 517, column: 20, scope: !14660)
!14700 = !DILocation(line: 519, column: 12, scope: !14660)
!14701 = !DILocation(line: 519, column: 5, scope: !14660)
!14702 = !DILocation(line: 520, column: 1, scope: !14660)
!14703 = distinct !DISubprogram(name: "try_entry", scope: !1016, file: !1016, line: 129, type: !14704, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1015, retainedNodes: !471)
!14704 = !DISubroutineType(types: !14705)
!14705 = !{!14706, !14707, !385, !493, !751}
!14706 = !DIDerivedType(tag: DW_TAG_typedef, name: "EntryResult", file: !1016, line: 58, baseType: !1024)
!14707 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14243)
!14708 = !DILocalVariable(name: "entry", arg: 1, scope: !14703, file: !1016, line: 129, type: !14707)
!14709 = !DILocation(line: 129, column: 40, scope: !14703)
!14710 = !DILocalVariable(name: "line", arg: 2, scope: !14703, file: !1016, line: 129, type: !385)
!14711 = !DILocation(line: 129, column: 59, scope: !14703)
!14712 = !DILocalVariable(name: "arg_p", arg: 3, scope: !14703, file: !1016, line: 130, type: !493)
!14713 = !DILocation(line: 130, column: 18, scope: !14703)
!14714 = !DILocalVariable(name: "err_p", arg: 4, scope: !14703, file: !1016, line: 130, type: !751)
!14715 = !DILocation(line: 130, column: 38, scope: !14703)
!14716 = !DILocalVariable(name: "in_pnt", scope: !14703, file: !1016, line: 132, type: !385)
!14717 = !DILocation(line: 132, column: 17, scope: !14703)
!14718 = !DILocalVariable(name: "line_pnt", scope: !14703, file: !1016, line: 133, type: !385)
!14719 = !DILocation(line: 133, column: 17, scope: !14703)
!14720 = !DILocalVariable(name: "match_start", scope: !14703, file: !1016, line: 134, type: !385)
!14721 = !DILocation(line: 134, column: 17, scope: !14703)
!14722 = !DILocalVariable(name: "out_pnt", scope: !14703, file: !1016, line: 135, type: !385)
!14723 = !DILocation(line: 135, column: 17, scope: !14703)
!14724 = !DILocalVariable(name: "prop_name", scope: !14703, file: !1016, line: 136, type: !385)
!14725 = !DILocation(line: 136, column: 17, scope: !14703)
!14726 = !DILocalVariable(name: "wildcard_start", scope: !14703, file: !1016, line: 137, type: !385)
!14727 = !DILocation(line: 137, column: 17, scope: !14703)
!14728 = !DILocalVariable(name: "arg", scope: !14703, file: !1016, line: 138, type: !308)
!14729 = !DILocation(line: 138, column: 17, scope: !14703)
!14730 = !DILocalVariable(name: "matches", scope: !14703, file: !1016, line: 139, type: !14731)
!14731 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14732, size: 1280, elements: !734)
!14732 = !DIDerivedType(tag: DW_TAG_typedef, name: "Match", file: !1016, line: 45, baseType: !14733)
!14733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Match_", file: !1016, line: 42, size: 128, elements: !14734)
!14734 = !{!14735, !14736}
!14735 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !14733, file: !1016, line: 43, baseType: !385, size: 64)
!14736 = !DIDerivedType(tag: DW_TAG_member, name: "str_len", scope: !14733, file: !1016, line: 44, baseType: !304, size: 64, offset: 64)
!14737 = !DILocation(line: 139, column: 17, scope: !14703)
!14738 = !DILocalVariable(name: "arg_len", scope: !14703, file: !1016, line: 140, type: !304)
!14739 = !DILocation(line: 140, column: 17, scope: !14703)
!14740 = !DILocalVariable(name: "matches_len", scope: !14703, file: !1016, line: 141, type: !304)
!14741 = !DILocation(line: 141, column: 17, scope: !14703)
!14742 = !DILocalVariable(name: "wildcard_len", scope: !14703, file: !1016, line: 142, type: !304)
!14743 = !DILocation(line: 142, column: 17, scope: !14703)
!14744 = !DILocalVariable(name: "state", scope: !14703, file: !1016, line: 143, type: !14745)
!14745 = !DIDerivedType(tag: DW_TAG_typedef, name: "State", file: !1016, line: 40, baseType: !1036)
!14746 = !DILocation(line: 143, column: 17, scope: !14703)
!14747 = !DILocalVariable(name: "expect_char", scope: !14703, file: !1016, line: 144, type: !326)
!14748 = !DILocation(line: 144, column: 17, scope: !14703)
!14749 = !DILocalVariable(name: "is_boolean", scope: !14703, file: !1016, line: 145, type: !326)
!14750 = !DILocation(line: 145, column: 17, scope: !14703)
!14751 = !DILocalVariable(name: "is_enabled", scope: !14703, file: !1016, line: 146, type: !326)
!14752 = !DILocation(line: 146, column: 17, scope: !14703)
!14753 = !DILocalVariable(name: "is_special", scope: !14703, file: !1016, line: 147, type: !326)
!14754 = !DILocation(line: 147, column: 17, scope: !14703)
!14755 = !DILocalVariable(name: "c", scope: !14703, file: !1016, line: 148, type: !326)
!14756 = !DILocation(line: 148, column: 17, scope: !14703)
!14757 = !DILocalVariable(name: "d", scope: !14703, file: !1016, line: 149, type: !326)
!14758 = !DILocation(line: 149, column: 17, scope: !14703)
!14759 = !DILocation(line: 151, column: 6, scope: !14703)
!14760 = !DILocation(line: 151, column: 12, scope: !14703)
!14761 = !DILocation(line: 152, column: 6, scope: !14703)
!14762 = !DILocation(line: 152, column: 12, scope: !14703)
!14763 = !DILocation(line: 153, column: 26, scope: !14703)
!14764 = !DILocation(line: 153, column: 14, scope: !14703)
!14765 = !DILocation(line: 153, column: 12, scope: !14703)
!14766 = !DILocation(line: 154, column: 10, scope: !14767)
!14767 = distinct !DILexicalBlock(scope: !14703, file: !1016, line: 154, column: 9)
!14768 = !DILocation(line: 154, column: 9, scope: !14767)
!14769 = !DILocation(line: 154, column: 15, scope: !14767)
!14770 = !DILocation(line: 154, column: 20, scope: !14767)
!14771 = !DILocation(line: 154, column: 24, scope: !14767)
!14772 = !DILocation(line: 154, column: 23, scope: !14767)
!14773 = !DILocation(line: 154, column: 29, scope: !14767)
!14774 = !DILocation(line: 154, column: 9, scope: !14703)
!14775 = !DILocation(line: 155, column: 9, scope: !14776)
!14776 = distinct !DILexicalBlock(scope: !14767, file: !1016, line: 154, column: 37)
!14777 = !DILocation(line: 157, column: 19, scope: !14703)
!14778 = !DILocation(line: 157, column: 26, scope: !14703)
!14779 = !DILocation(line: 157, column: 17, scope: !14703)
!14780 = !DILocation(line: 158, column: 19, scope: !14703)
!14781 = !DILocation(line: 158, column: 17, scope: !14703)
!14782 = !DILocation(line: 159, column: 19, scope: !14703)
!14783 = !DILocation(line: 159, column: 17, scope: !14703)
!14784 = !DILocation(line: 160, column: 17, scope: !14703)
!14785 = !DILocation(line: 161, column: 17, scope: !14703)
!14786 = !DILocation(line: 162, column: 17, scope: !14703)
!14787 = !DILocation(line: 163, column: 17, scope: !14703)
!14788 = !DILocation(line: 164, column: 17, scope: !14703)
!14789 = !DILocation(line: 165, column: 17, scope: !14703)
!14790 = !DILocation(line: 166, column: 5, scope: !14703)
!14791 = !DILocation(line: 166, column: 13, scope: !14703)
!14792 = !DILocation(line: 166, column: 12, scope: !14703)
!14793 = !DILocation(line: 166, column: 20, scope: !14703)
!14794 = !DILocation(line: 166, column: 25, scope: !14703)
!14795 = !DILocation(line: 166, column: 29, scope: !14703)
!14796 = !DILocation(line: 166, column: 28, scope: !14703)
!14797 = !DILocation(line: 166, column: 38, scope: !14703)
!14798 = !DILocation(line: 167, column: 37, scope: !14799)
!14799 = distinct !DILexicalBlock(scope: !14703, file: !1016, line: 166, column: 44)
!14800 = !DILocation(line: 167, column: 13, scope: !14799)
!14801 = !DILocation(line: 167, column: 11, scope: !14799)
!14802 = !DILocation(line: 168, column: 37, scope: !14799)
!14803 = !DILocation(line: 168, column: 13, scope: !14799)
!14804 = !DILocation(line: 168, column: 11, scope: !14799)
!14805 = !DILocation(line: 169, column: 17, scope: !14799)
!14806 = !DILocation(line: 169, column: 9, scope: !14799)
!14807 = !DILocation(line: 171, column: 17, scope: !14808)
!14808 = distinct !DILexicalBlock(scope: !14809, file: !1016, line: 171, column: 17)
!14809 = distinct !DILexicalBlock(scope: !14799, file: !1016, line: 169, column: 24)
!14810 = !DILocation(line: 171, column: 17, scope: !14809)
!14811 = !DILocation(line: 172, column: 23, scope: !14812)
!14812 = distinct !DILexicalBlock(scope: !14808, file: !1016, line: 171, column: 29)
!14813 = !DILocation(line: 173, column: 23, scope: !14812)
!14814 = !DILocation(line: 174, column: 13, scope: !14812)
!14815 = !DILocation(line: 174, column: 24, scope: !14816)
!14816 = distinct !DILexicalBlock(scope: !14808, file: !1016, line: 174, column: 24)
!14817 = !DILocation(line: 174, column: 26, scope: !14816)
!14818 = !DILocation(line: 174, column: 33, scope: !14816)
!14819 = !DILocation(line: 174, column: 36, scope: !14816)
!14820 = !DILocation(line: 174, column: 47, scope: !14816)
!14821 = !DILocation(line: 174, column: 24, scope: !14808)
!14822 = !DILocation(line: 175, column: 28, scope: !14823)
!14823 = distinct !DILexicalBlock(scope: !14816, file: !1016, line: 174, column: 53)
!14824 = !DILocation(line: 176, column: 23, scope: !14823)
!14825 = !DILocation(line: 177, column: 13, scope: !14823)
!14826 = !DILocation(line: 177, column: 24, scope: !14827)
!14827 = distinct !DILexicalBlock(scope: !14816, file: !1016, line: 177, column: 24)
!14828 = !DILocation(line: 177, column: 26, scope: !14827)
!14829 = !DILocation(line: 177, column: 33, scope: !14827)
!14830 = !DILocation(line: 177, column: 36, scope: !14827)
!14831 = !DILocation(line: 177, column: 47, scope: !14827)
!14832 = !DILocation(line: 177, column: 24, scope: !14816)
!14833 = !DILocation(line: 178, column: 28, scope: !14834)
!14834 = distinct !DILexicalBlock(scope: !14827, file: !1016, line: 177, column: 53)
!14835 = !DILocation(line: 179, column: 23, scope: !14834)
!14836 = !DILocation(line: 180, column: 13, scope: !14834)
!14837 = !DILocation(line: 180, column: 24, scope: !14838)
!14838 = distinct !DILexicalBlock(scope: !14827, file: !1016, line: 180, column: 24)
!14839 = !DILocation(line: 180, column: 26, scope: !14838)
!14840 = !DILocation(line: 180, column: 31, scope: !14838)
!14841 = !DILocation(line: 180, column: 34, scope: !14838)
!14842 = !DILocation(line: 180, column: 36, scope: !14838)
!14843 = !DILocation(line: 180, column: 41, scope: !14838)
!14844 = !DILocation(line: 180, column: 52, scope: !14838)
!14845 = !DILocation(line: 180, column: 44, scope: !14838)
!14846 = !DILocation(line: 180, column: 66, scope: !14838)
!14847 = !DILocation(line: 180, column: 58, scope: !14838)
!14848 = !DILocation(line: 180, column: 55, scope: !14838)
!14849 = !DILocation(line: 180, column: 24, scope: !14827)
!14850 = !DILocation(line: 181, column: 23, scope: !14851)
!14851 = distinct !DILexicalBlock(scope: !14838, file: !1016, line: 180, column: 70)
!14852 = !DILocation(line: 182, column: 25, scope: !14851)
!14853 = !DILocation(line: 183, column: 13, scope: !14851)
!14854 = !DILocation(line: 184, column: 17, scope: !14855)
!14855 = distinct !DILexicalBlock(scope: !14838, file: !1016, line: 183, column: 20)
!14856 = !DILocation(line: 186, column: 13, scope: !14809)
!14857 = distinct !{!14857, !14790, !14858}
!14858 = !DILocation(line: 399, column: 5, scope: !14703)
!14859 = !DILocation(line: 188, column: 17, scope: !14860)
!14860 = distinct !DILexicalBlock(scope: !14809, file: !1016, line: 188, column: 17)
!14861 = !DILocation(line: 188, column: 19, scope: !14860)
!14862 = !DILocation(line: 188, column: 26, scope: !14860)
!14863 = !DILocation(line: 188, column: 29, scope: !14860)
!14864 = !DILocation(line: 188, column: 31, scope: !14860)
!14865 = !DILocation(line: 188, column: 17, scope: !14809)
!14866 = !DILocation(line: 189, column: 23, scope: !14867)
!14867 = distinct !DILexicalBlock(scope: !14860, file: !1016, line: 188, column: 39)
!14868 = !DILocation(line: 190, column: 25, scope: !14867)
!14869 = !DILocation(line: 191, column: 13, scope: !14867)
!14870 = !DILocation(line: 191, column: 24, scope: !14871)
!14871 = distinct !DILexicalBlock(scope: !14860, file: !1016, line: 191, column: 24)
!14872 = !DILocation(line: 191, column: 24, scope: !14860)
!14873 = !DILocation(line: 192, column: 23, scope: !14874)
!14874 = distinct !DILexicalBlock(scope: !14871, file: !1016, line: 191, column: 36)
!14875 = !DILocation(line: 193, column: 25, scope: !14874)
!14876 = !DILocation(line: 194, column: 13, scope: !14874)
!14877 = !DILocation(line: 195, column: 35, scope: !14878)
!14878 = distinct !DILexicalBlock(scope: !14871, file: !1016, line: 194, column: 20)
!14879 = !DILocation(line: 195, column: 42, scope: !14878)
!14880 = !DILocation(line: 195, column: 52, scope: !14878)
!14881 = !DILocation(line: 195, column: 24, scope: !14878)
!14882 = !DILocation(line: 195, column: 17, scope: !14878)
!14883 = !DILocation(line: 197, column: 13, scope: !14809)
!14884 = !DILocation(line: 199, column: 17, scope: !14885)
!14885 = distinct !DILexicalBlock(scope: !14809, file: !1016, line: 199, column: 17)
!14886 = !DILocation(line: 199, column: 19, scope: !14885)
!14887 = !DILocation(line: 199, column: 26, scope: !14885)
!14888 = !DILocation(line: 199, column: 29, scope: !14885)
!14889 = !DILocation(line: 199, column: 31, scope: !14885)
!14890 = !DILocation(line: 199, column: 17, scope: !14809)
!14891 = !DILocation(line: 200, column: 23, scope: !14892)
!14892 = distinct !DILexicalBlock(scope: !14885, file: !1016, line: 199, column: 39)
!14893 = !DILocation(line: 201, column: 25, scope: !14892)
!14894 = !DILocation(line: 202, column: 13, scope: !14892)
!14895 = !DILocation(line: 202, column: 24, scope: !14896)
!14896 = distinct !DILexicalBlock(scope: !14885, file: !1016, line: 202, column: 24)
!14897 = !DILocation(line: 202, column: 24, scope: !14885)
!14898 = !DILocation(line: 203, column: 25, scope: !14899)
!14899 = distinct !DILexicalBlock(scope: !14896, file: !1016, line: 202, column: 36)
!14900 = !DILocation(line: 204, column: 13, scope: !14899)
!14901 = !DILocation(line: 205, column: 23, scope: !14902)
!14902 = distinct !DILexicalBlock(scope: !14896, file: !1016, line: 204, column: 20)
!14903 = !DILocation(line: 207, column: 13, scope: !14809)
!14904 = !DILocation(line: 209, column: 17, scope: !14905)
!14905 = distinct !DILexicalBlock(scope: !14809, file: !1016, line: 209, column: 17)
!14906 = !DILocation(line: 209, column: 19, scope: !14905)
!14907 = !DILocation(line: 209, column: 26, scope: !14905)
!14908 = !DILocation(line: 209, column: 29, scope: !14905)
!14909 = !DILocation(line: 209, column: 31, scope: !14905)
!14910 = !DILocation(line: 209, column: 17, scope: !14809)
!14911 = !DILocation(line: 210, column: 35, scope: !14912)
!14912 = distinct !DILexicalBlock(scope: !14905, file: !1016, line: 209, column: 39)
!14913 = !DILocation(line: 210, column: 42, scope: !14912)
!14914 = !DILocation(line: 210, column: 52, scope: !14912)
!14915 = !DILocation(line: 210, column: 24, scope: !14912)
!14916 = !DILocation(line: 210, column: 17, scope: !14912)
!14917 = !DILocation(line: 211, column: 24, scope: !14918)
!14918 = distinct !DILexicalBlock(scope: !14905, file: !1016, line: 211, column: 24)
!14919 = !DILocation(line: 211, column: 24, scope: !14905)
!14920 = !DILocation(line: 212, column: 25, scope: !14921)
!14921 = distinct !DILexicalBlock(scope: !14918, file: !1016, line: 211, column: 36)
!14922 = !DILocation(line: 213, column: 13, scope: !14921)
!14923 = !DILocation(line: 214, column: 22, scope: !14924)
!14924 = distinct !DILexicalBlock(scope: !14925, file: !1016, line: 214, column: 21)
!14925 = distinct !DILexicalBlock(scope: !14918, file: !1016, line: 213, column: 20)
!14926 = !DILocation(line: 214, column: 21, scope: !14924)
!14927 = !DILocation(line: 214, column: 29, scope: !14924)
!14928 = !DILocation(line: 214, column: 34, scope: !14924)
!14929 = !DILocation(line: 214, column: 37, scope: !14924)
!14930 = !DILocation(line: 214, column: 47, scope: !14924)
!14931 = !DILocation(line: 214, column: 44, scope: !14924)
!14932 = !DILocation(line: 214, column: 21, scope: !14925)
!14933 = !DILocation(line: 215, column: 39, scope: !14934)
!14934 = distinct !DILexicalBlock(scope: !14924, file: !1016, line: 214, column: 58)
!14935 = !DILocation(line: 215, column: 46, scope: !14934)
!14936 = !DILocation(line: 215, column: 56, scope: !14934)
!14937 = !DILocation(line: 215, column: 28, scope: !14934)
!14938 = !DILocation(line: 215, column: 21, scope: !14934)
!14939 = !DILocation(line: 217, column: 34, scope: !14925)
!14940 = !DILocation(line: 217, column: 32, scope: !14925)
!14941 = !DILocation(line: 218, column: 23, scope: !14925)
!14942 = !DILocation(line: 220, column: 13, scope: !14809)
!14943 = !DILocation(line: 222, column: 17, scope: !14944)
!14944 = distinct !DILexicalBlock(scope: !14809, file: !1016, line: 222, column: 17)
!14945 = !DILocation(line: 222, column: 19, scope: !14944)
!14946 = !DILocation(line: 222, column: 17, scope: !14809)
!14947 = !DILocation(line: 223, column: 37, scope: !14948)
!14948 = distinct !DILexicalBlock(scope: !14944, file: !1016, line: 222, column: 25)
!14949 = !DILocation(line: 223, column: 44, scope: !14948)
!14950 = !DILocation(line: 223, column: 54, scope: !14948)
!14951 = !DILocation(line: 223, column: 24, scope: !14948)
!14952 = !DILocation(line: 223, column: 17, scope: !14948)
!14953 = !DILocation(line: 224, column: 24, scope: !14954)
!14954 = distinct !DILexicalBlock(scope: !14944, file: !1016, line: 224, column: 24)
!14955 = !DILocation(line: 224, column: 26, scope: !14954)
!14956 = !DILocation(line: 224, column: 24, scope: !14944)
!14957 = !DILocation(line: 225, column: 31, scope: !14958)
!14958 = distinct !DILexicalBlock(scope: !14954, file: !1016, line: 224, column: 34)
!14959 = !DILocation(line: 225, column: 29, scope: !14958)
!14960 = !DILocation(line: 226, column: 23, scope: !14958)
!14961 = !DILocation(line: 227, column: 13, scope: !14958)
!14962 = !DILocation(line: 227, column: 24, scope: !14963)
!14963 = distinct !DILexicalBlock(scope: !14954, file: !1016, line: 227, column: 24)
!14964 = !DILocation(line: 227, column: 26, scope: !14963)
!14965 = !DILocation(line: 227, column: 24, scope: !14954)
!14966 = !DILocation(line: 228, column: 21, scope: !14967)
!14967 = distinct !DILexicalBlock(scope: !14968, file: !1016, line: 228, column: 21)
!14968 = distinct !DILexicalBlock(scope: !14963, file: !1016, line: 227, column: 34)
!14969 = !DILocation(line: 228, column: 33, scope: !14967)
!14970 = !DILocation(line: 228, column: 41, scope: !14967)
!14971 = !DILocation(line: 229, column: 21, scope: !14967)
!14972 = !DILocation(line: 229, column: 33, scope: !14967)
!14973 = !DILocation(line: 229, column: 75, scope: !14967)
!14974 = !DILocation(line: 230, column: 36, scope: !14967)
!14975 = !DILocation(line: 230, column: 59, scope: !14967)
!14976 = !DILocation(line: 231, column: 36, scope: !14967)
!14977 = !DILocation(line: 230, column: 21, scope: !14967)
!14978 = !DILocation(line: 231, column: 46, scope: !14967)
!14979 = !DILocation(line: 228, column: 21, scope: !14968)
!14980 = !DILocation(line: 232, column: 41, scope: !14981)
!14981 = distinct !DILexicalBlock(scope: !14967, file: !1016, line: 231, column: 52)
!14982 = !DILocation(line: 232, column: 48, scope: !14981)
!14983 = !DILocation(line: 232, column: 54, scope: !14981)
!14984 = !DILocation(line: 232, column: 28, scope: !14981)
!14985 = !DILocation(line: 232, column: 21, scope: !14981)
!14986 = !DILocation(line: 234, column: 23, scope: !14968)
!14987 = !DILocation(line: 235, column: 13, scope: !14968)
!14988 = !DILocation(line: 235, column: 24, scope: !14989)
!14989 = distinct !DILexicalBlock(scope: !14963, file: !1016, line: 235, column: 24)
!14990 = !DILocation(line: 235, column: 24, scope: !14963)
!14991 = !DILocation(line: 236, column: 29, scope: !14992)
!14992 = distinct !DILexicalBlock(scope: !14989, file: !1016, line: 235, column: 58)
!14993 = !DILocation(line: 237, column: 23, scope: !14992)
!14994 = !DILocation(line: 238, column: 13, scope: !14992)
!14995 = !DILocation(line: 238, column: 24, scope: !14996)
!14996 = distinct !DILexicalBlock(scope: !14989, file: !1016, line: 238, column: 24)
!14997 = !DILocation(line: 238, column: 24, scope: !14989)
!14998 = !DILocation(line: 239, column: 29, scope: !14999)
!14999 = distinct !DILexicalBlock(scope: !14996, file: !1016, line: 238, column: 58)
!15000 = !DILocation(line: 240, column: 23, scope: !14999)
!15001 = !DILocation(line: 241, column: 13, scope: !14999)
!15002 = !DILocation(line: 241, column: 24, scope: !15003)
!15003 = distinct !DILexicalBlock(scope: !14996, file: !1016, line: 241, column: 24)
!15004 = !DILocation(line: 241, column: 24, scope: !14996)
!15005 = !DILocation(line: 242, column: 29, scope: !15006)
!15006 = distinct !DILexicalBlock(scope: !15003, file: !1016, line: 241, column: 59)
!15007 = !DILocation(line: 243, column: 23, scope: !15006)
!15008 = !DILocation(line: 244, column: 13, scope: !15006)
!15009 = !DILocation(line: 244, column: 24, scope: !15010)
!15010 = distinct !DILexicalBlock(scope: !15003, file: !1016, line: 244, column: 24)
!15011 = !DILocation(line: 244, column: 24, scope: !15003)
!15012 = !DILocation(line: 245, column: 29, scope: !15013)
!15013 = distinct !DILexicalBlock(scope: !15010, file: !1016, line: 244, column: 60)
!15014 = !DILocation(line: 246, column: 23, scope: !15013)
!15015 = !DILocation(line: 247, column: 13, scope: !15013)
!15016 = !DILocation(line: 247, column: 24, scope: !15017)
!15017 = distinct !DILexicalBlock(scope: !15010, file: !1016, line: 247, column: 24)
!15018 = !DILocation(line: 247, column: 24, scope: !15010)
!15019 = !DILocation(line: 248, column: 29, scope: !15020)
!15020 = distinct !DILexicalBlock(scope: !15017, file: !1016, line: 247, column: 60)
!15021 = !DILocation(line: 249, column: 23, scope: !15020)
!15022 = !DILocation(line: 250, column: 13, scope: !15020)
!15023 = !DILocation(line: 250, column: 24, scope: !15024)
!15024 = distinct !DILexicalBlock(scope: !15017, file: !1016, line: 250, column: 24)
!15025 = !DILocation(line: 250, column: 24, scope: !15017)
!15026 = !DILocation(line: 251, column: 29, scope: !15027)
!15027 = distinct !DILexicalBlock(scope: !15024, file: !1016, line: 250, column: 56)
!15028 = !DILocation(line: 252, column: 23, scope: !15027)
!15029 = !DILocation(line: 253, column: 13, scope: !15027)
!15030 = !DILocation(line: 253, column: 24, scope: !15031)
!15031 = distinct !DILexicalBlock(scope: !15024, file: !1016, line: 253, column: 24)
!15032 = !DILocation(line: 253, column: 24, scope: !15024)
!15033 = !DILocation(line: 254, column: 29, scope: !15034)
!15034 = distinct !DILexicalBlock(scope: !15031, file: !1016, line: 253, column: 57)
!15035 = !DILocation(line: 255, column: 23, scope: !15034)
!15036 = !DILocation(line: 256, column: 13, scope: !15034)
!15037 = !DILocation(line: 256, column: 24, scope: !15038)
!15038 = distinct !DILexicalBlock(scope: !15031, file: !1016, line: 256, column: 24)
!15039 = !DILocation(line: 256, column: 24, scope: !15031)
!15040 = !DILocation(line: 257, column: 21, scope: !15041)
!15041 = distinct !DILexicalBlock(scope: !15042, file: !1016, line: 257, column: 21)
!15042 = distinct !DILexicalBlock(scope: !15038, file: !1016, line: 256, column: 57)
!15043 = !DILocation(line: 257, column: 21, scope: !15042)
!15044 = !DILocation(line: 258, column: 21, scope: !15045)
!15045 = distinct !DILexicalBlock(scope: !15041, file: !1016, line: 257, column: 33)
!15046 = !DILocation(line: 260, column: 23, scope: !15042)
!15047 = !DILocation(line: 261, column: 13, scope: !15042)
!15048 = !DILocation(line: 261, column: 24, scope: !15049)
!15049 = distinct !DILexicalBlock(scope: !15038, file: !1016, line: 261, column: 24)
!15050 = !DILocation(line: 261, column: 26, scope: !15049)
!15051 = !DILocation(line: 261, column: 24, scope: !15038)
!15052 = !DILocation(line: 262, column: 17, scope: !15053)
!15053 = distinct !DILexicalBlock(scope: !15049, file: !1016, line: 261, column: 34)
!15054 = !DILocation(line: 263, column: 24, scope: !15055)
!15055 = distinct !DILexicalBlock(scope: !15049, file: !1016, line: 263, column: 24)
!15056 = !DILocation(line: 263, column: 24, scope: !15049)
!15057 = !DILocation(line: 264, column: 23, scope: !15058)
!15058 = distinct !DILexicalBlock(scope: !15055, file: !1016, line: 263, column: 36)
!15059 = !DILocation(line: 265, column: 29, scope: !15058)
!15060 = !DILocation(line: 266, column: 23, scope: !15058)
!15061 = !DILocation(line: 267, column: 13, scope: !15058)
!15062 = !DILocation(line: 267, column: 24, scope: !15063)
!15063 = distinct !DILexicalBlock(scope: !15055, file: !1016, line: 267, column: 24)
!15064 = !DILocation(line: 267, column: 24, scope: !15055)
!15065 = !DILocation(line: 268, column: 21, scope: !15066)
!15066 = distinct !DILexicalBlock(scope: !15067, file: !1016, line: 268, column: 21)
!15067 = distinct !DILexicalBlock(scope: !15063, file: !1016, line: 267, column: 36)
!15068 = !DILocation(line: 268, column: 26, scope: !15066)
!15069 = !DILocation(line: 268, column: 23, scope: !15066)
!15070 = !DILocation(line: 268, column: 21, scope: !15067)
!15071 = !DILocation(line: 269, column: 27, scope: !15072)
!15072 = distinct !DILexicalBlock(scope: !15066, file: !1016, line: 268, column: 29)
!15073 = !DILocation(line: 270, column: 29, scope: !15072)
!15074 = !DILocation(line: 271, column: 17, scope: !15072)
!15075 = !DILocation(line: 272, column: 41, scope: !15076)
!15076 = distinct !DILexicalBlock(scope: !15066, file: !1016, line: 271, column: 24)
!15077 = !DILocation(line: 272, column: 48, scope: !15076)
!15078 = !DILocation(line: 272, column: 58, scope: !15076)
!15079 = !DILocation(line: 272, column: 28, scope: !15076)
!15080 = !DILocation(line: 272, column: 21, scope: !15076)
!15081 = !DILocation(line: 274, column: 13, scope: !15067)
!15082 = !DILocation(line: 275, column: 37, scope: !15083)
!15083 = distinct !DILexicalBlock(scope: !15063, file: !1016, line: 274, column: 20)
!15084 = !DILocation(line: 275, column: 44, scope: !15083)
!15085 = !DILocation(line: 275, column: 54, scope: !15083)
!15086 = !DILocation(line: 275, column: 24, scope: !15083)
!15087 = !DILocation(line: 275, column: 17, scope: !15083)
!15088 = !DILocation(line: 277, column: 13, scope: !14809)
!15089 = !DILocation(line: 279, column: 17, scope: !15090)
!15090 = distinct !DILexicalBlock(scope: !14809, file: !1016, line: 279, column: 17)
!15091 = !DILocation(line: 279, column: 17, scope: !14809)
!15092 = !DILocation(line: 280, column: 29, scope: !15093)
!15093 = distinct !DILexicalBlock(scope: !15090, file: !1016, line: 279, column: 29)
!15094 = !DILocation(line: 281, column: 25, scope: !15093)
!15095 = !DILocation(line: 282, column: 13, scope: !15093)
!15096 = !DILocation(line: 283, column: 23, scope: !15097)
!15097 = distinct !DILexicalBlock(scope: !15090, file: !1016, line: 282, column: 20)
!15098 = !DILocation(line: 285, column: 13, scope: !14809)
!15099 = !DILocation(line: 287, column: 17, scope: !15100)
!15100 = distinct !DILexicalBlock(scope: !14809, file: !1016, line: 287, column: 17)
!15101 = !DILocation(line: 287, column: 17, scope: !14809)
!15102 = !DILocation(line: 288, column: 29, scope: !15103)
!15103 = distinct !DILexicalBlock(scope: !15100, file: !1016, line: 287, column: 29)
!15104 = !DILocation(line: 289, column: 25, scope: !15103)
!15105 = !DILocation(line: 290, column: 13, scope: !15103)
!15106 = !DILocation(line: 291, column: 23, scope: !15107)
!15107 = distinct !DILexicalBlock(scope: !15100, file: !1016, line: 290, column: 20)
!15108 = !DILocation(line: 293, column: 13, scope: !14809)
!15109 = !DILocation(line: 295, column: 17, scope: !15110)
!15110 = distinct !DILexicalBlock(scope: !14809, file: !1016, line: 295, column: 17)
!15111 = !DILocation(line: 295, column: 17, scope: !14809)
!15112 = !DILocation(line: 296, column: 29, scope: !15113)
!15113 = distinct !DILexicalBlock(scope: !15110, file: !1016, line: 295, column: 29)
!15114 = !DILocation(line: 297, column: 25, scope: !15113)
!15115 = !DILocation(line: 298, column: 13, scope: !15113)
!15116 = !DILocation(line: 299, column: 23, scope: !15117)
!15117 = distinct !DILexicalBlock(scope: !15110, file: !1016, line: 298, column: 20)
!15118 = !DILocation(line: 301, column: 13, scope: !14809)
!15119 = !DILocation(line: 303, column: 17, scope: !15120)
!15120 = distinct !DILexicalBlock(scope: !14809, file: !1016, line: 303, column: 17)
!15121 = !DILocation(line: 303, column: 17, scope: !14809)
!15122 = !DILocation(line: 304, column: 25, scope: !15123)
!15123 = distinct !DILexicalBlock(scope: !15120, file: !1016, line: 303, column: 30)
!15124 = !DILocation(line: 305, column: 13, scope: !15123)
!15125 = !DILocation(line: 306, column: 23, scope: !15126)
!15126 = distinct !DILexicalBlock(scope: !15120, file: !1016, line: 305, column: 20)
!15127 = !DILocation(line: 308, column: 13, scope: !14809)
!15128 = !DILocation(line: 310, column: 17, scope: !15129)
!15129 = distinct !DILexicalBlock(scope: !14809, file: !1016, line: 310, column: 17)
!15130 = !DILocation(line: 310, column: 17, scope: !14809)
!15131 = !DILocation(line: 311, column: 29, scope: !15132)
!15132 = distinct !DILexicalBlock(scope: !15129, file: !1016, line: 310, column: 29)
!15133 = !DILocation(line: 312, column: 25, scope: !15132)
!15134 = !DILocation(line: 313, column: 13, scope: !15132)
!15135 = !DILocation(line: 314, column: 23, scope: !15136)
!15136 = distinct !DILexicalBlock(scope: !15129, file: !1016, line: 313, column: 20)
!15137 = !DILocation(line: 316, column: 13, scope: !14809)
!15138 = !DILocation(line: 318, column: 17, scope: !15139)
!15139 = distinct !DILexicalBlock(scope: !14809, file: !1016, line: 318, column: 17)
!15140 = !DILocation(line: 318, column: 19, scope: !15139)
!15141 = !DILocation(line: 318, column: 17, scope: !14809)
!15142 = !DILocation(line: 319, column: 21, scope: !15143)
!15143 = distinct !DILexicalBlock(scope: !15144, file: !1016, line: 319, column: 21)
!15144 = distinct !DILexicalBlock(scope: !15139, file: !1016, line: 318, column: 27)
!15145 = !DILocation(line: 319, column: 36, scope: !15143)
!15146 = !DILocation(line: 319, column: 33, scope: !15143)
!15147 = !DILocation(line: 319, column: 21, scope: !15144)
!15148 = !DILocation(line: 320, column: 32, scope: !15149)
!15149 = distinct !DILexicalBlock(scope: !15143, file: !1016, line: 319, column: 46)
!15150 = !DILocation(line: 321, column: 17, scope: !15149)
!15151 = !DILocation(line: 321, column: 28, scope: !15152)
!15152 = distinct !DILexicalBlock(scope: !15143, file: !1016, line: 321, column: 28)
!15153 = !DILocation(line: 321, column: 40, scope: !15152)
!15154 = !DILocation(line: 321, column: 28, scope: !15143)
!15155 = !DILocation(line: 322, column: 21, scope: !15156)
!15156 = distinct !DILexicalBlock(scope: !15152, file: !1016, line: 321, column: 49)
!15157 = !DILocation(line: 324, column: 25, scope: !15144)
!15158 = !DILocation(line: 325, column: 23, scope: !15144)
!15159 = !DILocation(line: 326, column: 13, scope: !15144)
!15160 = !DILocation(line: 326, column: 24, scope: !15161)
!15161 = distinct !DILexicalBlock(scope: !15139, file: !1016, line: 326, column: 24)
!15162 = !DILocation(line: 326, column: 24, scope: !15139)
!15163 = !DILocation(line: 327, column: 29, scope: !15164)
!15164 = distinct !DILexicalBlock(scope: !15161, file: !1016, line: 326, column: 36)
!15165 = !DILocation(line: 328, column: 25, scope: !15164)
!15166 = !DILocation(line: 329, column: 23, scope: !15164)
!15167 = !DILocation(line: 330, column: 13, scope: !15164)
!15168 = !DILocation(line: 331, column: 23, scope: !15169)
!15169 = distinct !DILexicalBlock(scope: !15161, file: !1016, line: 330, column: 20)
!15170 = !DILocation(line: 333, column: 13, scope: !14809)
!15171 = !DILocation(line: 335, column: 17, scope: !15172)
!15172 = distinct !DILexicalBlock(scope: !14809, file: !1016, line: 335, column: 17)
!15173 = !DILocation(line: 335, column: 19, scope: !15172)
!15174 = !DILocation(line: 335, column: 17, scope: !14809)
!15175 = !DILocation(line: 336, column: 23, scope: !15176)
!15176 = distinct !DILexicalBlock(scope: !15172, file: !1016, line: 335, column: 27)
!15177 = !DILocation(line: 337, column: 13, scope: !15176)
!15178 = !DILocation(line: 337, column: 24, scope: !15179)
!15179 = distinct !DILexicalBlock(scope: !15172, file: !1016, line: 337, column: 24)
!15180 = !DILocation(line: 337, column: 24, scope: !15172)
!15181 = !DILocation(line: 338, column: 29, scope: !15182)
!15182 = distinct !DILexicalBlock(scope: !15179, file: !1016, line: 337, column: 36)
!15183 = !DILocation(line: 339, column: 25, scope: !15182)
!15184 = !DILocation(line: 340, column: 13, scope: !15182)
!15185 = !DILocation(line: 341, column: 35, scope: !15186)
!15186 = distinct !DILexicalBlock(scope: !15179, file: !1016, line: 340, column: 20)
!15187 = !DILocation(line: 341, column: 42, scope: !15186)
!15188 = !DILocation(line: 341, column: 52, scope: !15186)
!15189 = !DILocation(line: 341, column: 24, scope: !15186)
!15190 = !DILocation(line: 341, column: 17, scope: !15186)
!15191 = !DILocation(line: 343, column: 13, scope: !14809)
!15192 = !DILocation(line: 345, column: 17, scope: !15193)
!15193 = distinct !DILexicalBlock(scope: !14809, file: !1016, line: 345, column: 17)
!15194 = !DILocation(line: 345, column: 19, scope: !15193)
!15195 = !DILocation(line: 345, column: 17, scope: !14809)
!15196 = !DILocation(line: 346, column: 21, scope: !15197)
!15197 = distinct !DILexicalBlock(scope: !15198, file: !1016, line: 346, column: 21)
!15198 = distinct !DILexicalBlock(scope: !15193, file: !1016, line: 345, column: 27)
!15199 = !DILocation(line: 346, column: 33, scope: !15197)
!15200 = !DILocation(line: 346, column: 41, scope: !15197)
!15201 = !DILocation(line: 347, column: 21, scope: !15197)
!15202 = !DILocation(line: 347, column: 33, scope: !15197)
!15203 = !DILocation(line: 347, column: 75, scope: !15197)
!15204 = !DILocation(line: 348, column: 36, scope: !15197)
!15205 = !DILocation(line: 348, column: 59, scope: !15197)
!15206 = !DILocation(line: 349, column: 36, scope: !15197)
!15207 = !DILocation(line: 348, column: 21, scope: !15197)
!15208 = !DILocation(line: 349, column: 46, scope: !15197)
!15209 = !DILocation(line: 346, column: 21, scope: !15198)
!15210 = !DILocation(line: 350, column: 41, scope: !15211)
!15211 = distinct !DILexicalBlock(scope: !15197, file: !1016, line: 349, column: 52)
!15212 = !DILocation(line: 350, column: 48, scope: !15211)
!15213 = !DILocation(line: 350, column: 54, scope: !15211)
!15214 = !DILocation(line: 350, column: 28, scope: !15211)
!15215 = !DILocation(line: 350, column: 21, scope: !15211)
!15216 = !DILocation(line: 352, column: 29, scope: !15198)
!15217 = !DILocation(line: 353, column: 25, scope: !15198)
!15218 = !DILocation(line: 354, column: 23, scope: !15198)
!15219 = !DILocation(line: 355, column: 13, scope: !15198)
!15220 = !DILocation(line: 356, column: 19, scope: !14809)
!15221 = !DILocation(line: 357, column: 13, scope: !14809)
!15222 = !DILocation(line: 359, column: 17, scope: !15223)
!15223 = distinct !DILexicalBlock(scope: !14809, file: !1016, line: 359, column: 17)
!15224 = !DILocation(line: 359, column: 17, scope: !14809)
!15225 = !DILocation(line: 360, column: 29, scope: !15226)
!15226 = distinct !DILexicalBlock(scope: !15223, file: !1016, line: 359, column: 29)
!15227 = !DILocation(line: 361, column: 25, scope: !15226)
!15228 = !DILocation(line: 362, column: 13, scope: !15226)
!15229 = !DILocation(line: 363, column: 23, scope: !15230)
!15230 = distinct !DILexicalBlock(scope: !15223, file: !1016, line: 362, column: 20)
!15231 = !DILocation(line: 365, column: 13, scope: !14809)
!15232 = !DILocation(line: 367, column: 17, scope: !15233)
!15233 = distinct !DILexicalBlock(scope: !14809, file: !1016, line: 367, column: 17)
!15234 = !DILocation(line: 367, column: 17, scope: !14809)
!15235 = !DILocation(line: 368, column: 29, scope: !15236)
!15236 = distinct !DILexicalBlock(scope: !15233, file: !1016, line: 367, column: 29)
!15237 = !DILocation(line: 369, column: 25, scope: !15236)
!15238 = !DILocation(line: 370, column: 13, scope: !15236)
!15239 = !DILocation(line: 371, column: 23, scope: !15240)
!15240 = distinct !DILexicalBlock(scope: !15233, file: !1016, line: 370, column: 20)
!15241 = !DILocation(line: 373, column: 13, scope: !14809)
!15242 = !DILocation(line: 375, column: 17, scope: !15243)
!15243 = distinct !DILexicalBlock(scope: !14809, file: !1016, line: 375, column: 17)
!15244 = !DILocation(line: 375, column: 17, scope: !14809)
!15245 = !DILocation(line: 376, column: 29, scope: !15246)
!15246 = distinct !DILexicalBlock(scope: !15243, file: !1016, line: 375, column: 29)
!15247 = !DILocation(line: 377, column: 25, scope: !15246)
!15248 = !DILocation(line: 378, column: 13, scope: !15246)
!15249 = !DILocation(line: 379, column: 23, scope: !15250)
!15250 = distinct !DILexicalBlock(scope: !15243, file: !1016, line: 378, column: 20)
!15251 = !DILocation(line: 381, column: 13, scope: !14809)
!15252 = !DILocation(line: 383, column: 17, scope: !15253)
!15253 = distinct !DILexicalBlock(scope: !15254, file: !1016, line: 383, column: 17)
!15254 = distinct !DILexicalBlock(scope: !14809, file: !1016, line: 382, column: 35)
!15255 = !DILocation(line: 383, column: 49, scope: !15253)
!15256 = !DILocation(line: 383, column: 52, scope: !15253)
!15257 = !DILocation(line: 383, column: 82, scope: !15253)
!15258 = !DILocation(line: 384, column: 17, scope: !15253)
!15259 = !DILocation(line: 384, column: 49, scope: !15253)
!15260 = !DILocation(line: 384, column: 52, scope: !15253)
!15261 = !DILocation(line: 383, column: 17, scope: !15254)
!15262 = !DILocation(line: 385, column: 28, scope: !15263)
!15263 = distinct !DILexicalBlock(scope: !15253, file: !1016, line: 384, column: 82)
!15264 = !DILocation(line: 386, column: 28, scope: !15263)
!15265 = !DILocation(line: 387, column: 13, scope: !15263)
!15266 = !DILocation(line: 387, column: 24, scope: !15267)
!15267 = distinct !DILexicalBlock(scope: !15253, file: !1016, line: 387, column: 24)
!15268 = !DILocation(line: 387, column: 57, scope: !15267)
!15269 = !DILocation(line: 387, column: 60, scope: !15267)
!15270 = !DILocation(line: 387, column: 91, scope: !15267)
!15271 = !DILocation(line: 388, column: 24, scope: !15267)
!15272 = !DILocation(line: 388, column: 57, scope: !15267)
!15273 = !DILocation(line: 388, column: 60, scope: !15267)
!15274 = !DILocation(line: 387, column: 24, scope: !15253)
!15275 = !DILocation(line: 389, column: 28, scope: !15276)
!15276 = distinct !DILexicalBlock(scope: !15267, file: !1016, line: 388, column: 90)
!15277 = !DILocation(line: 390, column: 28, scope: !15276)
!15278 = !DILocation(line: 391, column: 13, scope: !15276)
!15279 = !DILocation(line: 392, column: 35, scope: !15280)
!15280 = distinct !DILexicalBlock(scope: !15267, file: !1016, line: 391, column: 20)
!15281 = !DILocation(line: 392, column: 42, scope: !15280)
!15282 = !DILocation(line: 392, column: 52, scope: !15280)
!15283 = !DILocation(line: 392, column: 24, scope: !15280)
!15284 = !DILocation(line: 392, column: 17, scope: !15280)
!15285 = !DILocation(line: 394, column: 13, scope: !15254)
!15286 = !DILocation(line: 397, column: 13, scope: !14809)
!15287 = !DILocation(line: 400, column: 13, scope: !14703)
!15288 = !DILocation(line: 400, column: 5, scope: !14703)
!15289 = !DILocation(line: 413, column: 9, scope: !15290)
!15290 = distinct !DILexicalBlock(scope: !14703, file: !1016, line: 400, column: 20)
!15291 = !DILocation(line: 415, column: 29, scope: !15290)
!15292 = !DILocation(line: 415, column: 36, scope: !15290)
!15293 = !DILocation(line: 415, column: 46, scope: !15290)
!15294 = !DILocation(line: 415, column: 16, scope: !15290)
!15295 = !DILocation(line: 415, column: 9, scope: !15290)
!15296 = !DILocation(line: 417, column: 9, scope: !15297)
!15297 = distinct !DILexicalBlock(scope: !14703, file: !1016, line: 417, column: 9)
!15298 = !DILocation(line: 417, column: 21, scope: !15297)
!15299 = !DILocation(line: 417, column: 9, scope: !14703)
!15300 = !DILocation(line: 418, column: 29, scope: !15301)
!15301 = distinct !DILexicalBlock(scope: !15297, file: !1016, line: 417, column: 27)
!15302 = !DILocation(line: 418, column: 36, scope: !15301)
!15303 = !DILocation(line: 418, column: 46, scope: !15301)
!15304 = !DILocation(line: 418, column: 16, scope: !15301)
!15305 = !DILocation(line: 418, column: 9, scope: !15301)
!15306 = !DILocation(line: 420, column: 10, scope: !15307)
!15307 = distinct !DILexicalBlock(scope: !14703, file: !1016, line: 420, column: 9)
!15308 = !DILocation(line: 420, column: 9, scope: !15307)
!15309 = !DILocation(line: 420, column: 17, scope: !15307)
!15310 = !DILocation(line: 420, column: 9, scope: !14703)
!15311 = !DILocation(line: 421, column: 13, scope: !15312)
!15312 = distinct !DILexicalBlock(scope: !15313, file: !1016, line: 421, column: 13)
!15313 = distinct !DILexicalBlock(scope: !15307, file: !1016, line: 420, column: 25)
!15314 = !DILocation(line: 421, column: 25, scope: !15312)
!15315 = !DILocation(line: 421, column: 33, scope: !15312)
!15316 = !DILocation(line: 422, column: 13, scope: !15312)
!15317 = !DILocation(line: 422, column: 25, scope: !15312)
!15318 = !DILocation(line: 422, column: 67, scope: !15312)
!15319 = !DILocation(line: 423, column: 28, scope: !15312)
!15320 = !DILocation(line: 423, column: 51, scope: !15312)
!15321 = !DILocation(line: 423, column: 64, scope: !15312)
!15322 = !DILocation(line: 423, column: 13, scope: !15312)
!15323 = !DILocation(line: 423, column: 74, scope: !15312)
!15324 = !DILocation(line: 421, column: 13, scope: !15313)
!15325 = !DILocation(line: 424, column: 13, scope: !15326)
!15326 = distinct !DILexicalBlock(scope: !15312, file: !1016, line: 423, column: 80)
!15327 = !DILocation(line: 426, column: 21, scope: !15313)
!15328 = !DILocation(line: 427, column: 5, scope: !15313)
!15329 = !DILocation(line: 428, column: 9, scope: !15330)
!15330 = distinct !DILexicalBlock(scope: !14703, file: !1016, line: 428, column: 9)
!15331 = !DILocation(line: 428, column: 20, scope: !15330)
!15332 = !DILocation(line: 428, column: 25, scope: !15330)
!15333 = !DILocation(line: 428, column: 28, scope: !15330)
!15334 = !DILocation(line: 428, column: 39, scope: !15330)
!15335 = !DILocation(line: 428, column: 9, scope: !14703)
!15336 = !DILocation(line: 429, column: 9, scope: !15337)
!15337 = distinct !DILexicalBlock(scope: !15330, file: !1016, line: 428, column: 45)
!15338 = !DILocation(line: 431, column: 9, scope: !15339)
!15339 = distinct !DILexicalBlock(scope: !14703, file: !1016, line: 431, column: 9)
!15340 = !DILocation(line: 431, column: 24, scope: !15339)
!15341 = !DILocation(line: 431, column: 9, scope: !14703)
!15342 = !DILocation(line: 432, column: 22, scope: !15343)
!15343 = distinct !DILexicalBlock(scope: !15339, file: !1016, line: 431, column: 33)
!15344 = !DILocation(line: 433, column: 5, scope: !15343)
!15345 = !DILocation(line: 434, column: 34, scope: !15346)
!15346 = distinct !DILexicalBlock(scope: !15339, file: !1016, line: 433, column: 12)
!15347 = !DILocation(line: 434, column: 45, scope: !15346)
!15348 = !DILocation(line: 434, column: 43, scope: !15346)
!15349 = !DILocation(line: 434, column: 22, scope: !15346)
!15350 = !DILocation(line: 436, column: 15, scope: !14703)
!15351 = !DILocation(line: 436, column: 22, scope: !14703)
!15352 = !DILocation(line: 436, column: 13, scope: !14703)
!15353 = !DILocation(line: 437, column: 16, scope: !15354)
!15354 = distinct !DILexicalBlock(scope: !14703, file: !1016, line: 437, column: 9)
!15355 = !DILocation(line: 437, column: 14, scope: !15354)
!15356 = !DILocation(line: 437, column: 47, scope: !15354)
!15357 = !DILocation(line: 437, column: 9, scope: !14703)
!15358 = !DILocation(line: 438, column: 9, scope: !15359)
!15359 = distinct !DILexicalBlock(scope: !15354, file: !1016, line: 437, column: 56)
!15360 = !DILocation(line: 440, column: 13, scope: !14703)
!15361 = !DILocation(line: 441, column: 13, scope: !14703)
!15362 = !DILocation(line: 442, column: 5, scope: !14703)
!15363 = !DILocation(line: 442, column: 12, scope: !14703)
!15364 = !DILocation(line: 442, column: 20, scope: !14703)
!15365 = !DILocation(line: 442, column: 40, scope: !14703)
!15366 = !DILocation(line: 442, column: 44, scope: !14703)
!15367 = !DILocation(line: 442, column: 43, scope: !14703)
!15368 = !DILocation(line: 442, column: 52, scope: !14703)
!15369 = !DILocation(line: 0, scope: !14703)
!15370 = !DILocation(line: 443, column: 37, scope: !15371)
!15371 = distinct !DILexicalBlock(scope: !14703, file: !1016, line: 442, column: 58)
!15372 = !DILocation(line: 443, column: 13, scope: !15371)
!15373 = !DILocation(line: 443, column: 11, scope: !15371)
!15374 = !DILocation(line: 444, column: 17, scope: !15371)
!15375 = !DILocation(line: 444, column: 9, scope: !15371)
!15376 = !DILocation(line: 446, column: 17, scope: !15377)
!15377 = distinct !DILexicalBlock(scope: !15378, file: !1016, line: 446, column: 17)
!15378 = distinct !DILexicalBlock(scope: !15371, file: !1016, line: 444, column: 24)
!15379 = !DILocation(line: 446, column: 19, scope: !15377)
!15380 = !DILocation(line: 446, column: 17, scope: !15378)
!15381 = !DILocation(line: 447, column: 24, scope: !15382)
!15382 = distinct !DILexicalBlock(scope: !15377, file: !1016, line: 446, column: 27)
!15383 = !DILocation(line: 448, column: 23, scope: !15382)
!15384 = !DILocation(line: 449, column: 13, scope: !15382)
!15385 = !DILocation(line: 450, column: 38, scope: !15386)
!15386 = distinct !DILexicalBlock(scope: !15377, file: !1016, line: 449, column: 20)
!15387 = !DILocation(line: 450, column: 32, scope: !15386)
!15388 = !DILocation(line: 450, column: 17, scope: !15386)
!15389 = !DILocation(line: 450, column: 21, scope: !15386)
!15390 = !DILocation(line: 450, column: 30, scope: !15386)
!15391 = !DILocation(line: 451, column: 24, scope: !15386)
!15392 = !DILocation(line: 452, column: 24, scope: !15386)
!15393 = !DILocation(line: 454, column: 13, scope: !15378)
!15394 = distinct !{!15394, !15362, !15395}
!15395 = !DILocation(line: 485, column: 5, scope: !14703)
!15396 = !DILocation(line: 456, column: 17, scope: !15397)
!15397 = distinct !DILexicalBlock(scope: !15378, file: !1016, line: 456, column: 17)
!15398 = !DILocation(line: 456, column: 19, scope: !15397)
!15399 = !DILocation(line: 456, column: 17, scope: !15378)
!15400 = !DILocalVariable(name: "i", scope: !15401, file: !1016, line: 457, type: !304)
!15401 = distinct !DILexicalBlock(scope: !15397, file: !1016, line: 456, column: 27)
!15402 = !DILocation(line: 457, column: 24, scope: !15401)
!15403 = !DILocation(line: 459, column: 17, scope: !15401)
!15404 = !DILocation(line: 459, column: 24, scope: !15401)
!15405 = !DILocation(line: 459, column: 32, scope: !15401)
!15406 = !DILocation(line: 459, column: 52, scope: !15401)
!15407 = !DILocation(line: 459, column: 55, scope: !15401)
!15408 = !DILocation(line: 459, column: 59, scope: !15401)
!15409 = !DILocation(line: 459, column: 57, scope: !15401)
!15410 = !DILocation(line: 0, scope: !15401)
!15411 = !DILocation(line: 460, column: 38, scope: !15412)
!15412 = distinct !DILexicalBlock(scope: !15401, file: !1016, line: 459, column: 73)
!15413 = !DILocation(line: 460, column: 54, scope: !15412)
!15414 = !DILocation(line: 460, column: 21, scope: !15412)
!15415 = !DILocation(line: 460, column: 32, scope: !15412)
!15416 = !DILocation(line: 460, column: 36, scope: !15412)
!15417 = distinct !{!15417, !15403, !15418}
!15418 = !DILocation(line: 461, column: 17, scope: !15401)
!15419 = !DILocation(line: 462, column: 24, scope: !15401)
!15420 = !DILocation(line: 463, column: 23, scope: !15401)
!15421 = !DILocation(line: 464, column: 13, scope: !15401)
!15422 = !DILocation(line: 464, column: 24, scope: !15423)
!15423 = distinct !DILexicalBlock(scope: !15397, file: !1016, line: 464, column: 24)
!15424 = !DILocation(line: 464, column: 26, scope: !15423)
!15425 = !DILocation(line: 464, column: 33, scope: !15423)
!15426 = !DILocation(line: 464, column: 36, scope: !15423)
!15427 = !DILocation(line: 464, column: 38, scope: !15423)
!15428 = !DILocation(line: 464, column: 24, scope: !15397)
!15429 = !DILocalVariable(name: "match_id", scope: !15430, file: !1016, line: 465, type: !304)
!15430 = distinct !DILexicalBlock(scope: !15423, file: !1016, line: 464, column: 46)
!15431 = !DILocation(line: 465, column: 24, scope: !15430)
!15432 = !DILocation(line: 465, column: 44, scope: !15430)
!15433 = !DILocation(line: 465, column: 46, scope: !15430)
!15434 = !DILocation(line: 465, column: 35, scope: !15430)
!15435 = !DILocalVariable(name: "i", scope: !15430, file: !1016, line: 466, type: !304)
!15436 = !DILocation(line: 466, column: 24, scope: !15430)
!15437 = !DILocation(line: 468, column: 21, scope: !15438)
!15438 = distinct !DILexicalBlock(scope: !15430, file: !1016, line: 468, column: 21)
!15439 = !DILocation(line: 468, column: 33, scope: !15438)
!15440 = !DILocation(line: 468, column: 30, scope: !15438)
!15441 = !DILocation(line: 468, column: 21, scope: !15430)
!15442 = !DILocation(line: 469, column: 21, scope: !15443)
!15443 = distinct !DILexicalBlock(scope: !15438, file: !1016, line: 468, column: 46)
!15444 = !DILocation(line: 471, column: 17, scope: !15430)
!15445 = !DILocation(line: 472, column: 21, scope: !15430)
!15446 = !DILocation(line: 472, column: 29, scope: !15430)
!15447 = !DILocation(line: 472, column: 49, scope: !15430)
!15448 = !DILocation(line: 472, column: 52, scope: !15430)
!15449 = !DILocation(line: 472, column: 64, scope: !15430)
!15450 = !DILocation(line: 472, column: 56, scope: !15430)
!15451 = !DILocation(line: 472, column: 74, scope: !15430)
!15452 = !DILocation(line: 472, column: 54, scope: !15430)
!15453 = !DILocation(line: 0, scope: !15430)
!15454 = !DILocation(line: 473, column: 46, scope: !15455)
!15455 = distinct !DILexicalBlock(scope: !15430, file: !1016, line: 472, column: 83)
!15456 = !DILocation(line: 473, column: 38, scope: !15455)
!15457 = !DILocation(line: 473, column: 56, scope: !15455)
!15458 = !DILocation(line: 473, column: 61, scope: !15455)
!15459 = !DILocation(line: 473, column: 21, scope: !15455)
!15460 = !DILocation(line: 473, column: 32, scope: !15455)
!15461 = !DILocation(line: 473, column: 36, scope: !15455)
!15462 = distinct !{!15462, !15444, !15463}
!15463 = !DILocation(line: 474, column: 17, scope: !15430)
!15464 = !DILocation(line: 475, column: 24, scope: !15430)
!15465 = !DILocation(line: 476, column: 23, scope: !15430)
!15466 = !DILocation(line: 477, column: 13, scope: !15430)
!15467 = !DILocation(line: 478, column: 22, scope: !15468)
!15468 = distinct !DILexicalBlock(scope: !15423, file: !1016, line: 477, column: 20)
!15469 = !DILocation(line: 478, column: 17, scope: !15468)
!15470 = !DILocation(line: 479, column: 17, scope: !15468)
!15471 = !DILocation(line: 481, column: 13, scope: !15378)
!15472 = !DILocation(line: 483, column: 13, scope: !15378)
!15473 = !DILocation(line: 486, column: 9, scope: !15474)
!15474 = distinct !DILexicalBlock(scope: !14703, file: !1016, line: 486, column: 9)
!15475 = !DILocation(line: 486, column: 17, scope: !15474)
!15476 = !DILocation(line: 486, column: 9, scope: !14703)
!15477 = !DILocation(line: 487, column: 14, scope: !15478)
!15478 = distinct !DILexicalBlock(scope: !15474, file: !1016, line: 486, column: 39)
!15479 = !DILocation(line: 487, column: 9, scope: !15478)
!15480 = !DILocation(line: 488, column: 9, scope: !15478)
!15481 = !DILocation(line: 488, column: 15, scope: !15478)
!15482 = !DILocation(line: 489, column: 9, scope: !15478)
!15483 = !DILocation(line: 491, column: 5, scope: !14703)
!15484 = !DILocation(line: 491, column: 9, scope: !14703)
!15485 = !DILocation(line: 491, column: 18, scope: !14703)
!15486 = !DILocation(line: 492, column: 20, scope: !14703)
!15487 = !DILocation(line: 492, column: 6, scope: !14703)
!15488 = !DILocation(line: 492, column: 18, scope: !14703)
!15489 = !DILocation(line: 494, column: 9, scope: !15490)
!15490 = distinct !DILexicalBlock(scope: !14703, file: !1016, line: 494, column: 9)
!15491 = !DILocation(line: 494, column: 9, scope: !14703)
!15492 = !DILocation(line: 495, column: 9, scope: !15493)
!15493 = distinct !DILexicalBlock(scope: !15490, file: !1016, line: 494, column: 21)
!15494 = !DILocation(line: 497, column: 5, scope: !14703)
!15495 = !DILocation(line: 498, column: 1, scope: !14703)
!15496 = distinct !DISubprogram(name: "skip_spaces", scope: !1016, file: !1016, line: 61, type: !15497, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1015, retainedNodes: !471)
!15497 = !DISubroutineType(types: !15498)
!15498 = !{!385, !385}
!15499 = !DILocalVariable(name: "str", arg: 1, scope: !15496, file: !1016, line: 61, type: !385)
!15500 = !DILocation(line: 61, column: 25, scope: !15496)
!15501 = !DILocation(line: 63, column: 5, scope: !15496)
!15502 = !DILocation(line: 63, column: 13, scope: !15496)
!15503 = !DILocation(line: 63, column: 12, scope: !15496)
!15504 = !DILocation(line: 63, column: 17, scope: !15496)
!15505 = !DILocation(line: 63, column: 22, scope: !15496)
!15506 = !DILocation(line: 63, column: 25, scope: !15496)
!15507 = !DILocation(line: 0, scope: !15496)
!15508 = !DILocation(line: 64, column: 12, scope: !15509)
!15509 = distinct !DILexicalBlock(scope: !15496, file: !1016, line: 63, column: 55)
!15510 = distinct !{!15510, !15501, !15511}
!15511 = !DILocation(line: 65, column: 5, scope: !15496)
!15512 = !DILocation(line: 66, column: 12, scope: !15496)
!15513 = !DILocation(line: 66, column: 5, scope: !15496)
!15514 = distinct !DISubprogram(name: "err_syntax", scope: !1016, file: !1016, line: 121, type: !15515, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1015, retainedNodes: !471)
!15515 = !DISubroutineType(types: !15516)
!15516 = !{!14706, !751, !385, !385}
!15517 = !DILocalVariable(name: "err_p", arg: 1, scope: !15514, file: !1016, line: 121, type: !751)
!15518 = !DILocation(line: 121, column: 25, scope: !15514)
!15519 = !DILocalVariable(name: "line_pnt", arg: 2, scope: !15514, file: !1016, line: 121, type: !385)
!15520 = !DILocation(line: 121, column: 44, scope: !15514)
!15521 = !DILocalVariable(name: "line", arg: 3, scope: !15514, file: !1016, line: 121, type: !385)
!15522 = !DILocation(line: 121, column: 66, scope: !15514)
!15523 = !DILocation(line: 123, column: 15, scope: !15514)
!15524 = !DILocation(line: 123, column: 14, scope: !15514)
!15525 = !DILocation(line: 123, column: 24, scope: !15514)
!15526 = !DILocation(line: 123, column: 31, scope: !15514)
!15527 = !DILocation(line: 123, column: 42, scope: !15514)
!15528 = !DILocation(line: 123, column: 6, scope: !15514)
!15529 = !DILocation(line: 123, column: 12, scope: !15514)
!15530 = !DILocation(line: 125, column: 5, scope: !15514)
!15531 = distinct !DISubprogram(name: "err_mismatch", scope: !1016, file: !1016, line: 113, type: !15515, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1015, retainedNodes: !471)
!15532 = !DILocalVariable(name: "err_p", arg: 1, scope: !15531, file: !1016, line: 113, type: !751)
!15533 = !DILocation(line: 113, column: 27, scope: !15531)
!15534 = !DILocalVariable(name: "line_pnt", arg: 2, scope: !15531, file: !1016, line: 113, type: !385)
!15535 = !DILocation(line: 113, column: 46, scope: !15531)
!15536 = !DILocalVariable(name: "line", arg: 3, scope: !15531, file: !1016, line: 113, type: !385)
!15537 = !DILocation(line: 113, column: 68, scope: !15531)
!15538 = !DILocation(line: 115, column: 15, scope: !15531)
!15539 = !DILocation(line: 115, column: 14, scope: !15531)
!15540 = !DILocation(line: 115, column: 24, scope: !15531)
!15541 = !DILocation(line: 115, column: 31, scope: !15531)
!15542 = !DILocation(line: 115, column: 42, scope: !15531)
!15543 = !DILocation(line: 115, column: 6, scope: !15531)
!15544 = !DILocation(line: 115, column: 12, scope: !15531)
!15545 = !DILocation(line: 117, column: 5, scope: !15531)
!15546 = distinct !DISubprogram(name: "add_to_matches", scope: !1016, file: !1016, line: 92, type: !15547, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1015, retainedNodes: !471)
!15547 = !DISubroutineType(types: !15548)
!15548 = !{!326, !15549, !15551, !385, !385}
!15549 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15550)
!15550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14732, size: 64)
!15551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !304, size: 64)
!15552 = !DILocalVariable(name: "matches", arg: 1, scope: !15546, file: !1016, line: 92, type: !15549)
!15553 = !DILocation(line: 92, column: 29, scope: !15546)
!15554 = !DILocalVariable(name: "matches_len", arg: 2, scope: !15546, file: !1016, line: 92, type: !15551)
!15555 = !DILocation(line: 92, column: 46, scope: !15546)
!15556 = !DILocalVariable(name: "start", arg: 3, scope: !15546, file: !1016, line: 93, type: !385)
!15557 = !DILocation(line: 93, column: 28, scope: !15546)
!15558 = !DILocalVariable(name: "end", arg: 4, scope: !15546, file: !1016, line: 93, type: !385)
!15559 = !DILocation(line: 93, column: 47, scope: !15546)
!15560 = !DILocalVariable(name: "len", scope: !15546, file: !1016, line: 95, type: !304)
!15561 = !DILocation(line: 95, column: 12, scope: !15546)
!15562 = !DILocation(line: 97, column: 25, scope: !15546)
!15563 = !DILocation(line: 97, column: 13, scope: !15546)
!15564 = !DILocation(line: 97, column: 11, scope: !15546)
!15565 = !DILocation(line: 98, column: 22, scope: !15546)
!15566 = !DILocation(line: 98, column: 28, scope: !15546)
!15567 = !DILocation(line: 98, column: 26, scope: !15546)
!15568 = !DILocation(line: 98, column: 11, scope: !15546)
!15569 = !DILocation(line: 99, column: 5, scope: !15546)
!15570 = !DILocation(line: 99, column: 12, scope: !15546)
!15571 = !DILocation(line: 99, column: 16, scope: !15546)
!15572 = !DILocation(line: 99, column: 20, scope: !15546)
!15573 = !DILocation(line: 99, column: 23, scope: !15546)
!15574 = !DILocation(line: 0, scope: !15546)
!15575 = !DILocation(line: 100, column: 12, scope: !15576)
!15576 = distinct !DILexicalBlock(scope: !15546, file: !1016, line: 99, column: 63)
!15577 = distinct !{!15577, !15569, !15578}
!15578 = !DILocation(line: 101, column: 5, scope: !15546)
!15579 = !DILocation(line: 102, column: 9, scope: !15580)
!15580 = distinct !DILexicalBlock(scope: !15546, file: !1016, line: 102, column: 9)
!15581 = !DILocation(line: 102, column: 13, scope: !15580)
!15582 = !DILocation(line: 102, column: 9, scope: !15546)
!15583 = !DILocation(line: 103, column: 9, scope: !15584)
!15584 = distinct !DILexicalBlock(scope: !15580, file: !1016, line: 102, column: 19)
!15585 = !DILocation(line: 105, column: 37, scope: !15546)
!15586 = !DILocation(line: 105, column: 5, scope: !15546)
!15587 = !DILocation(line: 105, column: 14, scope: !15546)
!15588 = !DILocation(line: 105, column: 13, scope: !15546)
!15589 = !DILocation(line: 105, column: 27, scope: !15546)
!15590 = !DILocation(line: 105, column: 35, scope: !15546)
!15591 = !DILocation(line: 106, column: 37, scope: !15546)
!15592 = !DILocation(line: 106, column: 5, scope: !15546)
!15593 = !DILocation(line: 106, column: 14, scope: !15546)
!15594 = !DILocation(line: 106, column: 13, scope: !15546)
!15595 = !DILocation(line: 106, column: 27, scope: !15546)
!15596 = !DILocation(line: 106, column: 35, scope: !15546)
!15597 = !DILocation(line: 107, column: 7, scope: !15546)
!15598 = !DILocation(line: 107, column: 19, scope: !15546)
!15599 = !DILocation(line: 109, column: 5, scope: !15546)
!15600 = !DILocation(line: 110, column: 1, scope: !15546)
!15601 = distinct !DISubprogram(name: "prefix_match", scope: !1016, file: !1016, line: 70, type: !15602, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1015, retainedNodes: !471)
!15602 = !DISubroutineType(types: !15603)
!15603 = !{!326, !751, !385}
!15604 = !DILocalVariable(name: "str", arg: 1, scope: !15601, file: !1016, line: 70, type: !751)
!15605 = !DILocation(line: 70, column: 27, scope: !15601)
!15606 = !DILocalVariable(name: "prefix", arg: 2, scope: !15601, file: !1016, line: 70, type: !385)
!15607 = !DILocation(line: 70, column: 44, scope: !15601)
!15608 = !DILocalVariable(name: "prefix_len", scope: !15601, file: !1016, line: 72, type: !304)
!15609 = !DILocation(line: 72, column: 12, scope: !15601)
!15610 = !DILocation(line: 72, column: 32, scope: !15601)
!15611 = !DILocation(line: 72, column: 25, scope: !15601)
!15612 = !DILocalVariable(name: "str_len", scope: !15601, file: !1016, line: 73, type: !304)
!15613 = !DILocation(line: 73, column: 12, scope: !15601)
!15614 = !DILocation(line: 73, column: 33, scope: !15601)
!15615 = !DILocation(line: 73, column: 32, scope: !15601)
!15616 = !DILocation(line: 73, column: 25, scope: !15601)
!15617 = !DILocalVariable(name: "i", scope: !15601, file: !1016, line: 74, type: !304)
!15618 = !DILocation(line: 74, column: 12, scope: !15601)
!15619 = !DILocalVariable(name: "x", scope: !15601, file: !1016, line: 75, type: !326)
!15620 = !DILocation(line: 75, column: 12, scope: !15601)
!15621 = !DILocation(line: 77, column: 9, scope: !15622)
!15622 = distinct !DILexicalBlock(scope: !15601, file: !1016, line: 77, column: 9)
!15623 = !DILocation(line: 77, column: 19, scope: !15622)
!15624 = !DILocation(line: 77, column: 17, scope: !15622)
!15625 = !DILocation(line: 77, column: 9, scope: !15601)
!15626 = !DILocation(line: 78, column: 9, scope: !15627)
!15627 = distinct !DILexicalBlock(scope: !15622, file: !1016, line: 77, column: 31)
!15628 = !DILocation(line: 80, column: 12, scope: !15629)
!15629 = distinct !DILexicalBlock(scope: !15601, file: !1016, line: 80, column: 5)
!15630 = !DILocation(line: 80, column: 10, scope: !15629)
!15631 = !DILocation(line: 80, column: 17, scope: !15632)
!15632 = distinct !DILexicalBlock(scope: !15629, file: !1016, line: 80, column: 5)
!15633 = !DILocation(line: 80, column: 21, scope: !15632)
!15634 = !DILocation(line: 80, column: 19, scope: !15632)
!15635 = !DILocation(line: 80, column: 5, scope: !15629)
!15636 = !DILocation(line: 81, column: 39, scope: !15637)
!15637 = distinct !DILexicalBlock(scope: !15632, file: !1016, line: 80, column: 38)
!15638 = !DILocation(line: 81, column: 38, scope: !15637)
!15639 = !DILocation(line: 81, column: 44, scope: !15637)
!15640 = !DILocation(line: 81, column: 37, scope: !15637)
!15641 = !DILocation(line: 81, column: 22, scope: !15637)
!15642 = !DILocation(line: 81, column: 14, scope: !15637)
!15643 = !DILocation(line: 82, column: 37, scope: !15637)
!15644 = !DILocation(line: 82, column: 44, scope: !15637)
!15645 = !DILocation(line: 82, column: 22, scope: !15637)
!15646 = !DILocation(line: 82, column: 14, scope: !15637)
!15647 = !DILocation(line: 81, column: 48, scope: !15637)
!15648 = !DILocation(line: 81, column: 11, scope: !15637)
!15649 = !DILocation(line: 83, column: 5, scope: !15637)
!15650 = !DILocation(line: 80, column: 34, scope: !15632)
!15651 = !DILocation(line: 80, column: 5, scope: !15632)
!15652 = distinct !{!15652, !15635, !15653}
!15653 = !DILocation(line: 83, column: 5, scope: !15629)
!15654 = !DILocation(line: 84, column: 9, scope: !15655)
!15655 = distinct !DILexicalBlock(scope: !15601, file: !1016, line: 84, column: 9)
!15656 = !DILocation(line: 84, column: 11, scope: !15655)
!15657 = !DILocation(line: 84, column: 9, scope: !15601)
!15658 = !DILocation(line: 85, column: 17, scope: !15659)
!15659 = distinct !DILexicalBlock(scope: !15655, file: !1016, line: 84, column: 17)
!15660 = !DILocation(line: 85, column: 10, scope: !15659)
!15661 = !DILocation(line: 85, column: 14, scope: !15659)
!15662 = !DILocation(line: 86, column: 9, scope: !15659)
!15663 = !DILocation(line: 88, column: 5, scope: !15601)
!15664 = !DILocation(line: 89, column: 1, scope: !15601)
!15665 = distinct !DISubprogram(name: "pure_strcmp", scope: !1064, file: !1064, line: 46, type: !15666, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1063, retainedNodes: !471)
!15666 = !DISubroutineType(types: !15667)
!15667 = !{!326, !529, !529}
!15668 = !DILocalVariable(name: "s1", arg: 1, scope: !15665, file: !1064, line: 46, type: !529)
!15669 = !DILocation(line: 46, column: 36, scope: !15665)
!15670 = !DILocalVariable(name: "s2", arg: 2, scope: !15665, file: !1064, line: 46, type: !529)
!15671 = !DILocation(line: 46, column: 59, scope: !15665)
!15672 = !DILocation(line: 48, column: 12, scope: !15665)
!15673 = !DILocation(line: 48, column: 5, scope: !15665)
!15674 = distinct !DISubprogram(name: "alt_arc4random_stir", scope: !901, file: !901, line: 138, type: !486, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !900, retainedNodes: !471)
!15675 = !DILocation(line: 140, column: 5, scope: !15674)
!15676 = !DILocation(line: 141, column: 5, scope: !15674)
!15677 = distinct !DISubprogram(name: "alt_arc4random_buf", scope: !901, file: !901, line: 157, type: !15678, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !900, retainedNodes: !471)
!15678 = !DISubroutineType(types: !15679)
!15679 = !{null, !303, !304}
!15680 = !DILocalVariable(name: "buffer", arg: 1, scope: !15677, file: !901, line: 157, type: !303)
!15681 = !DILocation(line: 157, column: 31, scope: !15677)
!15682 = !DILocalVariable(name: "len", arg: 2, scope: !15677, file: !901, line: 157, type: !304)
!15683 = !DILocation(line: 157, column: 46, scope: !15677)
!15684 = !DILocation(line: 159, column: 12, scope: !15677)
!15685 = !DILocation(line: 159, column: 23, scope: !15677)
!15686 = !DILocation(line: 159, column: 5, scope: !15677)
!15687 = !DILocation(line: 160, column: 5, scope: !15677)
!15688 = distinct !DISubprogram(name: "alt_arc4random", scope: !901, file: !901, line: 198, type: !15689, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !900, retainedNodes: !471)
!15689 = !DISubroutineType(types: !15690)
!15690 = !{!327}
!15691 = !DILocalVariable(name: "v", scope: !15688, file: !901, line: 200, type: !327)
!15692 = !DILocation(line: 200, column: 14, scope: !15688)
!15693 = !DILocation(line: 202, column: 24, scope: !15688)
!15694 = !DILocation(line: 202, column: 5, scope: !15688)
!15695 = !DILocation(line: 204, column: 12, scope: !15688)
!15696 = !DILocation(line: 204, column: 5, scope: !15688)
!15697 = distinct !DISubprogram(name: "alt_arc4random_uniform", scope: !901, file: !901, line: 207, type: !15698, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !900, retainedNodes: !471)
!15698 = !DISubroutineType(types: !15699)
!15699 = !{!327, !15700}
!15700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !327)
!15701 = !DILocalVariable(name: "upper_bound", arg: 1, scope: !15697, file: !901, line: 207, type: !15700)
!15702 = !DILocation(line: 207, column: 48, scope: !15697)
!15703 = !DILocalVariable(name: "min", scope: !15697, file: !901, line: 209, type: !327)
!15704 = !DILocation(line: 209, column: 14, scope: !15697)
!15705 = !DILocalVariable(name: "r", scope: !15697, file: !901, line: 210, type: !327)
!15706 = !DILocation(line: 210, column: 14, scope: !15697)
!15707 = !DILocation(line: 212, column: 9, scope: !15708)
!15708 = distinct !DILexicalBlock(scope: !15697, file: !901, line: 212, column: 9)
!15709 = !DILocation(line: 212, column: 21, scope: !15708)
!15710 = !DILocation(line: 212, column: 9, scope: !15697)
!15711 = !DILocation(line: 213, column: 9, scope: !15712)
!15712 = distinct !DILexicalBlock(scope: !15708, file: !901, line: 212, column: 27)
!15713 = !DILocation(line: 215, column: 18, scope: !15697)
!15714 = !DILocation(line: 215, column: 17, scope: !15697)
!15715 = !DILocation(line: 215, column: 15, scope: !15697)
!15716 = !DILocation(line: 215, column: 33, scope: !15697)
!15717 = !DILocation(line: 215, column: 31, scope: !15697)
!15718 = !DILocation(line: 215, column: 9, scope: !15697)
!15719 = !DILocation(line: 216, column: 5, scope: !15697)
!15720 = !DILocation(line: 217, column: 13, scope: !15721)
!15721 = distinct !DILexicalBlock(scope: !15697, file: !901, line: 216, column: 8)
!15722 = !DILocation(line: 217, column: 11, scope: !15721)
!15723 = !DILocation(line: 218, column: 5, scope: !15721)
!15724 = !DILocation(line: 218, column: 14, scope: !15697)
!15725 = !DILocation(line: 218, column: 18, scope: !15697)
!15726 = !DILocation(line: 218, column: 16, scope: !15697)
!15727 = distinct !{!15727, !15719, !15728}
!15728 = !DILocation(line: 218, column: 21, scope: !15697)
!15729 = !DILocation(line: 222, column: 12, scope: !15697)
!15730 = !DILocation(line: 222, column: 16, scope: !15697)
!15731 = !DILocation(line: 222, column: 14, scope: !15697)
!15732 = !DILocation(line: 222, column: 5, scope: !15697)
!15733 = !DILocation(line: 223, column: 1, scope: !15697)
!15734 = distinct !DISubprogram(name: "alt_arc4random_close", scope: !901, file: !901, line: 225, type: !9734, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !900, retainedNodes: !471)
!15735 = !DILocation(line: 227, column: 27, scope: !15734)
!15736 = !DILocation(line: 228, column: 5, scope: !15734)
!15737 = !DILocation(line: 229, column: 19, scope: !15738)
!15738 = distinct !DILexicalBlock(scope: !15734, file: !901, line: 229, column: 9)
!15739 = !DILocation(line: 229, column: 22, scope: !15738)
!15740 = !DILocation(line: 229, column: 9, scope: !15734)
!15741 = !DILocation(line: 230, column: 32, scope: !15742)
!15742 = distinct !DILexicalBlock(scope: !15738, file: !901, line: 229, column: 29)
!15743 = !DILocation(line: 230, column: 16, scope: !15742)
!15744 = !DILocation(line: 230, column: 9, scope: !15742)
!15745 = !DILocation(line: 232, column: 5, scope: !15734)
!15746 = !DILocation(line: 233, column: 1, scope: !15734)
!15747 = distinct !DISubprogram(name: "glob", scope: !1066, file: !1066, line: 226, type: !15748, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1065, retainedNodes: !471)
!15748 = !DISubroutineType(types: !15749)
!15749 = !{!326, !385, !326, !11957, !15750}
!15750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15751, size: 64)
!15751 = !DIDerivedType(tag: DW_TAG_typedef, name: "glob_t", file: !11922, line: 60, baseType: !15752)
!15752 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11922, line: 38, size: 768, elements: !15753)
!15753 = !{!15754, !15755, !15756, !15757, !15758, !15759, !15760, !15761, !15763, !15764, !15765, !15766, !15767, !15771}
!15754 = !DIDerivedType(tag: DW_TAG_member, name: "gl_maxfiles", scope: !15752, file: !11922, line: 39, baseType: !306, size: 64)
!15755 = !DIDerivedType(tag: DW_TAG_member, name: "gl_maxdepth", scope: !15752, file: !11922, line: 40, baseType: !326, size: 32, offset: 64)
!15756 = !DIDerivedType(tag: DW_TAG_member, name: "gl_pathc", scope: !15752, file: !11922, line: 41, baseType: !326, size: 32, offset: 96)
!15757 = !DIDerivedType(tag: DW_TAG_member, name: "gl_matchc", scope: !15752, file: !11922, line: 42, baseType: !326, size: 32, offset: 128)
!15758 = !DIDerivedType(tag: DW_TAG_member, name: "gl_offs", scope: !15752, file: !11922, line: 43, baseType: !326, size: 32, offset: 160)
!15759 = !DIDerivedType(tag: DW_TAG_member, name: "gl_flags", scope: !15752, file: !11922, line: 44, baseType: !326, size: 32, offset: 192)
!15760 = !DIDerivedType(tag: DW_TAG_member, name: "gl_pathv", scope: !15752, file: !11922, line: 45, baseType: !493, size: 64, offset: 256)
!15761 = !DIDerivedType(tag: DW_TAG_member, name: "gl_statv", scope: !15752, file: !11922, line: 46, baseType: !15762, size: 64, offset: 320)
!15762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 64)
!15763 = !DIDerivedType(tag: DW_TAG_member, name: "gl_errfunc", scope: !15752, file: !11922, line: 48, baseType: !11957, size: 64, offset: 384)
!15764 = !DIDerivedType(tag: DW_TAG_member, name: "gl_closedir", scope: !15752, file: !11922, line: 55, baseType: !11959, size: 64, offset: 448)
!15765 = !DIDerivedType(tag: DW_TAG_member, name: "gl_readdir", scope: !15752, file: !11922, line: 56, baseType: !1072, size: 64, offset: 512)
!15766 = !DIDerivedType(tag: DW_TAG_member, name: "gl_opendir", scope: !15752, file: !11922, line: 57, baseType: !11975, size: 64, offset: 576)
!15767 = !DIDerivedType(tag: DW_TAG_member, name: "gl_lstat", scope: !15752, file: !11922, line: 58, baseType: !15768, size: 64, offset: 640)
!15768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15769, size: 64)
!15769 = !DISubroutineType(types: !15770)
!15770 = !{!326, !385, !1093}
!15771 = !DIDerivedType(tag: DW_TAG_member, name: "gl_stat", scope: !15752, file: !11922, line: 59, baseType: !15768, size: 64, offset: 704)
!15772 = !DILocalVariable(name: "pattern", arg: 1, scope: !15747, file: !1066, line: 226, type: !385)
!15773 = !DILocation(line: 226, column: 18, scope: !15747)
!15774 = !DILocalVariable(name: "flags", arg: 2, scope: !15747, file: !1066, line: 226, type: !326)
!15775 = !DILocation(line: 226, column: 31, scope: !15747)
!15776 = !DILocalVariable(name: "errfunc", arg: 3, scope: !15747, file: !1066, line: 226, type: !11957)
!15777 = !DILocation(line: 226, column: 44, scope: !15747)
!15778 = !DILocalVariable(name: "pglob", arg: 4, scope: !15747, file: !1066, line: 227, type: !15750)
!15779 = !DILocation(line: 227, column: 15, scope: !15747)
!15780 = !DILocation(line: 229, column: 18, scope: !15747)
!15781 = !DILocation(line: 229, column: 27, scope: !15747)
!15782 = !DILocation(line: 229, column: 34, scope: !15747)
!15783 = !DILocation(line: 229, column: 43, scope: !15747)
!15784 = !DILocation(line: 229, column: 12, scope: !15747)
!15785 = !DILocation(line: 229, column: 5, scope: !15747)
!15786 = distinct !DISubprogram(name: "glob_", scope: !1066, file: !1066, line: 162, type: !15787, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1065, retainedNodes: !471)
!15787 = !DISubroutineType(types: !15788)
!15788 = !{!326, !385, !326, !11957, !15750, !306, !326}
!15789 = !DILocalVariable(name: "pattern", arg: 1, scope: !15786, file: !1066, line: 162, type: !385)
!15790 = !DILocation(line: 162, column: 19, scope: !15786)
!15791 = !DILocalVariable(name: "flags", arg: 2, scope: !15786, file: !1066, line: 162, type: !326)
!15792 = !DILocation(line: 162, column: 32, scope: !15786)
!15793 = !DILocalVariable(name: "errfunc", arg: 3, scope: !15786, file: !1066, line: 162, type: !11957)
!15794 = !DILocation(line: 162, column: 45, scope: !15786)
!15795 = !DILocalVariable(name: "pglob", arg: 4, scope: !15786, file: !1066, line: 163, type: !15750)
!15796 = !DILocation(line: 163, column: 15, scope: !15786)
!15797 = !DILocalVariable(name: "maxfiles", arg: 5, scope: !15786, file: !1066, line: 163, type: !306)
!15798 = !DILocation(line: 163, column: 36, scope: !15786)
!15799 = !DILocalVariable(name: "maxdepth", arg: 6, scope: !15786, file: !1066, line: 163, type: !326)
!15800 = !DILocation(line: 163, column: 50, scope: !15786)
!15801 = !DILocalVariable(name: "patnext", scope: !15786, file: !1066, line: 165, type: !1061)
!15802 = !DILocation(line: 165, column: 26, scope: !15786)
!15803 = !DILocalVariable(name: "c", scope: !15786, file: !1066, line: 166, type: !326)
!15804 = !DILocation(line: 166, column: 9, scope: !15786)
!15805 = !DILocalVariable(name: "bufnext", scope: !15786, file: !1066, line: 167, type: !1071)
!15806 = !DILocation(line: 167, column: 11, scope: !15786)
!15807 = !DILocalVariable(name: "bufend", scope: !15786, file: !1066, line: 167, type: !1071)
!15808 = !DILocation(line: 167, column: 21, scope: !15786)
!15809 = !DILocalVariable(name: "patbuf", scope: !15786, file: !1066, line: 167, type: !15810)
!15810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1070, size: 65536, elements: !742)
!15811 = !DILocation(line: 167, column: 29, scope: !15786)
!15812 = !DILocalVariable(name: "limit", scope: !15786, file: !1066, line: 168, type: !15813)
!15813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "glob_lim", file: !1066, line: 117, size: 192, elements: !15814)
!15814 = !{!15815, !15816, !15817}
!15815 = !DIDerivedType(tag: DW_TAG_member, name: "glim_malloc", scope: !15813, file: !1066, line: 118, baseType: !304, size: 64)
!15816 = !DIDerivedType(tag: DW_TAG_member, name: "glim_stat", scope: !15813, file: !1066, line: 119, baseType: !304, size: 64, offset: 64)
!15817 = !DIDerivedType(tag: DW_TAG_member, name: "glim_readdir", scope: !15813, file: !1066, line: 120, baseType: !304, size: 64, offset: 128)
!15818 = !DILocation(line: 168, column: 21, scope: !15786)
!15819 = !DILocation(line: 170, column: 10, scope: !15820)
!15820 = distinct !DILexicalBlock(scope: !15786, file: !1066, line: 170, column: 9)
!15821 = !DILocation(line: 170, column: 16, scope: !15820)
!15822 = !DILocation(line: 170, column: 30, scope: !15820)
!15823 = !DILocation(line: 170, column: 44, scope: !15820)
!15824 = !DILocation(line: 170, column: 59, scope: !15820)
!15825 = !DILocation(line: 170, column: 47, scope: !15820)
!15826 = !DILocation(line: 170, column: 68, scope: !15820)
!15827 = !DILocation(line: 170, column: 9, scope: !15786)
!15828 = !DILocation(line: 171, column: 9, scope: !15829)
!15829 = distinct !DILexicalBlock(scope: !15820, file: !1066, line: 170, column: 75)
!15830 = !DILocation(line: 173, column: 26, scope: !15786)
!15831 = !DILocation(line: 173, column: 5, scope: !15786)
!15832 = !DILocation(line: 173, column: 12, scope: !15786)
!15833 = !DILocation(line: 173, column: 24, scope: !15786)
!15834 = !DILocation(line: 174, column: 26, scope: !15786)
!15835 = !DILocation(line: 174, column: 5, scope: !15786)
!15836 = !DILocation(line: 174, column: 12, scope: !15786)
!15837 = !DILocation(line: 174, column: 24, scope: !15786)
!15838 = !DILocation(line: 175, column: 33, scope: !15786)
!15839 = !DILocation(line: 175, column: 13, scope: !15786)
!15840 = !DILocation(line: 176, column: 11, scope: !15841)
!15841 = distinct !DILexicalBlock(scope: !15786, file: !1066, line: 176, column: 9)
!15842 = !DILocation(line: 176, column: 17, scope: !15841)
!15843 = !DILocation(line: 176, column: 9, scope: !15786)
!15844 = !DILocation(line: 177, column: 9, scope: !15845)
!15845 = distinct !DILexicalBlock(scope: !15841, file: !1066, line: 176, column: 33)
!15846 = !DILocation(line: 177, column: 16, scope: !15845)
!15847 = !DILocation(line: 177, column: 25, scope: !15845)
!15848 = !DILocation(line: 178, column: 9, scope: !15845)
!15849 = !DILocation(line: 178, column: 16, scope: !15845)
!15850 = !DILocation(line: 178, column: 25, scope: !15845)
!15851 = !DILocation(line: 179, column: 9, scope: !15845)
!15852 = !DILocation(line: 179, column: 16, scope: !15845)
!15853 = !DILocation(line: 179, column: 25, scope: !15845)
!15854 = !DILocation(line: 180, column: 15, scope: !15855)
!15855 = distinct !DILexicalBlock(scope: !15845, file: !1066, line: 180, column: 13)
!15856 = !DILocation(line: 180, column: 21, scope: !15855)
!15857 = !DILocation(line: 180, column: 13, scope: !15845)
!15858 = !DILocation(line: 181, column: 13, scope: !15859)
!15859 = distinct !DILexicalBlock(scope: !15855, file: !1066, line: 180, column: 37)
!15860 = !DILocation(line: 181, column: 20, scope: !15859)
!15861 = !DILocation(line: 181, column: 28, scope: !15859)
!15862 = !DILocation(line: 182, column: 9, scope: !15859)
!15863 = !DILocation(line: 183, column: 5, scope: !15845)
!15864 = !DILocation(line: 184, column: 23, scope: !15786)
!15865 = !DILocation(line: 184, column: 29, scope: !15786)
!15866 = !DILocation(line: 184, column: 5, scope: !15786)
!15867 = !DILocation(line: 184, column: 12, scope: !15786)
!15868 = !DILocation(line: 184, column: 21, scope: !15786)
!15869 = !DILocation(line: 185, column: 25, scope: !15786)
!15870 = !DILocation(line: 185, column: 5, scope: !15786)
!15871 = !DILocation(line: 185, column: 12, scope: !15786)
!15872 = !DILocation(line: 185, column: 23, scope: !15786)
!15873 = !DILocation(line: 186, column: 5, scope: !15786)
!15874 = !DILocation(line: 186, column: 12, scope: !15786)
!15875 = !DILocation(line: 186, column: 22, scope: !15786)
!15876 = !DILocation(line: 188, column: 9, scope: !15877)
!15877 = distinct !DILexicalBlock(scope: !15786, file: !1066, line: 188, column: 9)
!15878 = !DILocation(line: 188, column: 16, scope: !15877)
!15879 = !DILocation(line: 188, column: 24, scope: !15877)
!15880 = !DILocation(line: 188, column: 28, scope: !15877)
!15881 = !DILocation(line: 188, column: 31, scope: !15877)
!15882 = !DILocation(line: 188, column: 38, scope: !15877)
!15883 = !DILocation(line: 188, column: 47, scope: !15877)
!15884 = !DILocation(line: 188, column: 51, scope: !15877)
!15885 = !DILocation(line: 189, column: 9, scope: !15877)
!15886 = !DILocation(line: 189, column: 16, scope: !15877)
!15887 = !DILocation(line: 189, column: 24, scope: !15877)
!15888 = !DILocation(line: 189, column: 35, scope: !15877)
!15889 = !DILocation(line: 189, column: 38, scope: !15877)
!15890 = !DILocation(line: 189, column: 45, scope: !15877)
!15891 = !DILocation(line: 189, column: 54, scope: !15877)
!15892 = !DILocation(line: 189, column: 65, scope: !15877)
!15893 = !DILocation(line: 190, column: 9, scope: !15877)
!15894 = !DILocation(line: 190, column: 16, scope: !15877)
!15895 = !DILocation(line: 190, column: 38, scope: !15877)
!15896 = !DILocation(line: 190, column: 45, scope: !15877)
!15897 = !DILocation(line: 190, column: 36, scope: !15877)
!15898 = !DILocation(line: 190, column: 53, scope: !15877)
!15899 = !DILocation(line: 190, column: 25, scope: !15877)
!15900 = !DILocation(line: 188, column: 9, scope: !15786)
!15901 = !DILocation(line: 191, column: 9, scope: !15902)
!15902 = distinct !DILexicalBlock(scope: !15877, file: !1066, line: 190, column: 58)
!15903 = !DILocation(line: 193, column: 16, scope: !15904)
!15904 = distinct !DILexicalBlock(scope: !15786, file: !1066, line: 193, column: 9)
!15905 = !DILocation(line: 193, column: 9, scope: !15904)
!15906 = !DILocation(line: 193, column: 25, scope: !15904)
!15907 = !DILocation(line: 193, column: 9, scope: !15786)
!15908 = !DILocation(line: 194, column: 9, scope: !15909)
!15909 = distinct !DILexicalBlock(scope: !15904, file: !1066, line: 193, column: 38)
!15910 = !DILocation(line: 196, column: 15, scope: !15786)
!15911 = !DILocation(line: 196, column: 13, scope: !15786)
!15912 = !DILocation(line: 197, column: 14, scope: !15786)
!15913 = !DILocation(line: 197, column: 22, scope: !15786)
!15914 = !DILocation(line: 197, column: 33, scope: !15786)
!15915 = !DILocation(line: 197, column: 12, scope: !15786)
!15916 = !DILocation(line: 198, column: 9, scope: !15917)
!15917 = distinct !DILexicalBlock(scope: !15786, file: !1066, line: 198, column: 9)
!15918 = !DILocation(line: 198, column: 15, scope: !15917)
!15919 = !DILocation(line: 198, column: 9, scope: !15786)
!15920 = !DILocation(line: 199, column: 9, scope: !15921)
!15921 = distinct !DILexicalBlock(scope: !15917, file: !1066, line: 198, column: 32)
!15922 = !DILocation(line: 199, column: 16, scope: !15921)
!15923 = !DILocation(line: 199, column: 26, scope: !15921)
!15924 = !DILocation(line: 199, column: 24, scope: !15921)
!15925 = !DILocation(line: 199, column: 33, scope: !15921)
!15926 = !DILocation(line: 199, column: 49, scope: !15921)
!15927 = !DILocation(line: 199, column: 41, scope: !15921)
!15928 = !DILocation(line: 199, column: 39, scope: !15921)
!15929 = !DILocation(line: 199, column: 53, scope: !15921)
!15930 = !DILocation(line: 0, scope: !15921)
!15931 = !DILocation(line: 200, column: 26, scope: !15932)
!15932 = distinct !DILexicalBlock(scope: !15921, file: !1066, line: 199, column: 61)
!15933 = !DILocation(line: 200, column: 21, scope: !15932)
!15934 = !DILocation(line: 200, column: 24, scope: !15932)
!15935 = distinct !{!15935, !15920, !15936}
!15936 = !DILocation(line: 201, column: 9, scope: !15921)
!15937 = !DILocation(line: 202, column: 5, scope: !15921)
!15938 = !DILocation(line: 204, column: 9, scope: !15939)
!15939 = distinct !DILexicalBlock(scope: !15917, file: !1066, line: 202, column: 12)
!15940 = !DILocation(line: 204, column: 16, scope: !15939)
!15941 = !DILocation(line: 204, column: 26, scope: !15939)
!15942 = !DILocation(line: 204, column: 24, scope: !15939)
!15943 = !DILocation(line: 204, column: 33, scope: !15939)
!15944 = !DILocation(line: 204, column: 49, scope: !15939)
!15945 = !DILocation(line: 204, column: 41, scope: !15939)
!15946 = !DILocation(line: 204, column: 39, scope: !15939)
!15947 = !DILocation(line: 204, column: 53, scope: !15939)
!15948 = !DILocation(line: 0, scope: !15939)
!15949 = !DILocation(line: 205, column: 17, scope: !15950)
!15950 = distinct !DILexicalBlock(scope: !15951, file: !1066, line: 205, column: 17)
!15951 = distinct !DILexicalBlock(scope: !15939, file: !1066, line: 204, column: 61)
!15952 = !DILocation(line: 205, column: 19, scope: !15950)
!15953 = !DILocation(line: 205, column: 17, scope: !15951)
!15954 = !DILocation(line: 206, column: 34, scope: !15955)
!15955 = distinct !DILexicalBlock(scope: !15956, file: !1066, line: 206, column: 21)
!15956 = distinct !DILexicalBlock(scope: !15950, file: !1066, line: 205, column: 29)
!15957 = !DILocation(line: 206, column: 26, scope: !15955)
!15958 = !DILocation(line: 206, column: 24, scope: !15955)
!15959 = !DILocation(line: 206, column: 38, scope: !15955)
!15960 = !DILocation(line: 206, column: 21, scope: !15956)
!15961 = !DILocation(line: 207, column: 23, scope: !15962)
!15962 = distinct !DILexicalBlock(scope: !15955, file: !1066, line: 206, column: 46)
!15963 = !DILocation(line: 208, column: 21, scope: !15962)
!15964 = !DILocation(line: 209, column: 17, scope: !15962)
!15965 = !DILocation(line: 210, column: 30, scope: !15956)
!15966 = !DILocation(line: 210, column: 32, scope: !15956)
!15967 = !DILocation(line: 210, column: 25, scope: !15956)
!15968 = !DILocation(line: 210, column: 28, scope: !15956)
!15969 = !DILocation(line: 211, column: 13, scope: !15956)
!15970 = !DILocation(line: 212, column: 30, scope: !15971)
!15971 = distinct !DILexicalBlock(scope: !15950, file: !1066, line: 211, column: 20)
!15972 = !DILocation(line: 212, column: 25, scope: !15971)
!15973 = !DILocation(line: 212, column: 28, scope: !15971)
!15974 = distinct !{!15974, !15938, !15975}
!15975 = !DILocation(line: 214, column: 9, scope: !15939)
!15976 = !DILocation(line: 216, column: 6, scope: !15786)
!15977 = !DILocation(line: 216, column: 14, scope: !15786)
!15978 = !DILocation(line: 218, column: 9, scope: !15979)
!15979 = distinct !DILexicalBlock(scope: !15786, file: !1066, line: 218, column: 9)
!15980 = !DILocation(line: 218, column: 15, scope: !15979)
!15981 = !DILocation(line: 218, column: 9, scope: !15786)
!15982 = !DILocation(line: 219, column: 25, scope: !15983)
!15983 = distinct !DILexicalBlock(scope: !15979, file: !1066, line: 218, column: 29)
!15984 = !DILocation(line: 219, column: 33, scope: !15983)
!15985 = !DILocation(line: 219, column: 16, scope: !15983)
!15986 = !DILocation(line: 219, column: 9, scope: !15983)
!15987 = !DILocation(line: 221, column: 22, scope: !15988)
!15988 = distinct !DILexicalBlock(scope: !15979, file: !1066, line: 220, column: 12)
!15989 = !DILocation(line: 221, column: 30, scope: !15988)
!15990 = !DILocation(line: 221, column: 16, scope: !15988)
!15991 = !DILocation(line: 221, column: 9, scope: !15988)
!15992 = !DILocation(line: 223, column: 1, scope: !15786)
!15993 = distinct !DISubprogram(name: "check_stars", scope: !1066, file: !1066, line: 148, type: !1512, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1065, retainedNodes: !471)
!15994 = !DILocalVariable(name: "pattern", arg: 1, scope: !15993, file: !1066, line: 148, type: !385)
!15995 = !DILocation(line: 148, column: 36, scope: !15993)
!15996 = !DILocalVariable(name: "stars", scope: !15993, file: !1066, line: 150, type: !304)
!15997 = !DILocation(line: 150, column: 12, scope: !15993)
!15998 = !DILocalVariable(name: "c", scope: !15993, file: !1066, line: 151, type: !326)
!15999 = !DILocation(line: 151, column: 12, scope: !15993)
!16000 = !DILocation(line: 153, column: 5, scope: !15993)
!16001 = !DILocation(line: 153, column: 25, scope: !15993)
!16002 = !DILocation(line: 153, column: 17, scope: !15993)
!16003 = !DILocation(line: 153, column: 15, scope: !15993)
!16004 = !DILocation(line: 153, column: 29, scope: !15993)
!16005 = !DILocation(line: 154, column: 13, scope: !16006)
!16006 = distinct !DILexicalBlock(scope: !16007, file: !1066, line: 154, column: 13)
!16007 = distinct !DILexicalBlock(scope: !15993, file: !1066, line: 153, column: 35)
!16008 = !DILocation(line: 154, column: 15, scope: !16006)
!16009 = !DILocation(line: 154, column: 22, scope: !16006)
!16010 = !DILocation(line: 154, column: 25, scope: !16006)
!16011 = !DILocation(line: 154, column: 33, scope: !16006)
!16012 = !DILocation(line: 154, column: 13, scope: !16007)
!16013 = !DILocation(line: 155, column: 13, scope: !16014)
!16014 = distinct !DILexicalBlock(scope: !16006, file: !1066, line: 154, column: 51)
!16015 = distinct !{!16015, !16000, !16016}
!16016 = !DILocation(line: 157, column: 5, scope: !15993)
!16017 = !DILocation(line: 158, column: 5, scope: !15993)
!16018 = !DILocation(line: 159, column: 1, scope: !15993)
!16019 = distinct !DISubprogram(name: "globexp1", scope: !1066, file: !1066, line: 246, type: !16020, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1065, retainedNodes: !471)
!16020 = !DISubroutineType(types: !16021)
!16021 = !{!326, !1068, !15750, !16022, !326}
!16022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15813, size: 64)
!16023 = !DILocalVariable(name: "pattern", arg: 1, scope: !16019, file: !1066, line: 246, type: !1068)
!16024 = !DILocation(line: 246, column: 22, scope: !16019)
!16025 = !DILocalVariable(name: "pglob", arg: 2, scope: !16019, file: !1066, line: 246, type: !15750)
!16026 = !DILocation(line: 246, column: 39, scope: !16019)
!16027 = !DILocalVariable(name: "limitp", arg: 3, scope: !16019, file: !1066, line: 246, type: !16022)
!16028 = !DILocation(line: 246, column: 63, scope: !16019)
!16029 = !DILocalVariable(name: "recursion", arg: 4, scope: !16019, file: !1066, line: 247, type: !326)
!16030 = !DILocation(line: 247, column: 14, scope: !16019)
!16031 = !DILocalVariable(name: "ptr", scope: !16019, file: !1066, line: 249, type: !1068)
!16032 = !DILocation(line: 249, column: 17, scope: !16019)
!16033 = !DILocation(line: 249, column: 23, scope: !16019)
!16034 = !DILocation(line: 251, column: 9, scope: !16035)
!16035 = distinct !DILexicalBlock(scope: !16019, file: !1066, line: 251, column: 9)
!16036 = !DILocation(line: 251, column: 16, scope: !16035)
!16037 = !DILocation(line: 251, column: 28, scope: !16035)
!16038 = !DILocation(line: 251, column: 32, scope: !16035)
!16039 = !DILocation(line: 251, column: 35, scope: !16035)
!16040 = !DILocation(line: 251, column: 47, scope: !16035)
!16041 = !DILocation(line: 251, column: 54, scope: !16035)
!16042 = !DILocation(line: 251, column: 45, scope: !16035)
!16043 = !DILocation(line: 251, column: 9, scope: !16019)
!16044 = !DILocation(line: 252, column: 9, scope: !16045)
!16045 = distinct !DILexicalBlock(scope: !16035, file: !1066, line: 251, column: 67)
!16046 = !DILocation(line: 252, column: 15, scope: !16045)
!16047 = !DILocation(line: 253, column: 9, scope: !16045)
!16048 = !DILocation(line: 256, column: 9, scope: !16049)
!16049 = distinct !DILexicalBlock(scope: !16019, file: !1066, line: 256, column: 9)
!16050 = !DILocation(line: 256, column: 20, scope: !16049)
!16051 = !DILocation(line: 256, column: 30, scope: !16049)
!16052 = !DILocation(line: 256, column: 33, scope: !16049)
!16053 = !DILocation(line: 256, column: 44, scope: !16049)
!16054 = !DILocation(line: 256, column: 54, scope: !16049)
!16055 = !DILocation(line: 256, column: 57, scope: !16049)
!16056 = !DILocation(line: 256, column: 68, scope: !16049)
!16057 = !DILocation(line: 256, column: 9, scope: !16019)
!16058 = !DILocation(line: 257, column: 22, scope: !16059)
!16059 = distinct !DILexicalBlock(scope: !16049, file: !1066, line: 256, column: 76)
!16060 = !DILocation(line: 257, column: 31, scope: !16059)
!16061 = !DILocation(line: 257, column: 38, scope: !16059)
!16062 = !DILocation(line: 257, column: 16, scope: !16059)
!16063 = !DILocation(line: 257, column: 9, scope: !16059)
!16064 = !DILocation(line: 259, column: 40, scope: !16065)
!16065 = distinct !DILexicalBlock(scope: !16019, file: !1066, line: 259, column: 9)
!16066 = !DILocation(line: 259, column: 31, scope: !16065)
!16067 = !DILocation(line: 259, column: 14, scope: !16065)
!16068 = !DILocation(line: 259, column: 54, scope: !16065)
!16069 = !DILocation(line: 259, column: 9, scope: !16019)
!16070 = !DILocation(line: 260, column: 25, scope: !16071)
!16071 = distinct !DILexicalBlock(scope: !16065, file: !1066, line: 259, column: 63)
!16072 = !DILocation(line: 260, column: 30, scope: !16071)
!16073 = !DILocation(line: 260, column: 39, scope: !16071)
!16074 = !DILocation(line: 260, column: 46, scope: !16071)
!16075 = !DILocation(line: 260, column: 54, scope: !16071)
!16076 = !DILocation(line: 260, column: 64, scope: !16071)
!16077 = !DILocation(line: 260, column: 16, scope: !16071)
!16078 = !DILocation(line: 260, column: 9, scope: !16071)
!16079 = !DILocation(line: 262, column: 18, scope: !16019)
!16080 = !DILocation(line: 262, column: 27, scope: !16019)
!16081 = !DILocation(line: 262, column: 34, scope: !16019)
!16082 = !DILocation(line: 262, column: 12, scope: !16019)
!16083 = !DILocation(line: 262, column: 5, scope: !16019)
!16084 = !DILocation(line: 263, column: 1, scope: !16019)
!16085 = distinct !DISubprogram(name: "glob0", scope: !1066, file: !1066, line: 377, type: !16086, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1065, retainedNodes: !471)
!16086 = !DISubroutineType(types: !16087)
!16087 = !{!326, !1068, !15750, !16022}
!16088 = !DILocalVariable(name: "pattern", arg: 1, scope: !16085, file: !1066, line: 377, type: !1068)
!16089 = !DILocation(line: 377, column: 19, scope: !16085)
!16090 = !DILocalVariable(name: "pglob", arg: 2, scope: !16085, file: !1066, line: 377, type: !15750)
!16091 = !DILocation(line: 377, column: 36, scope: !16085)
!16092 = !DILocalVariable(name: "limitp", arg: 3, scope: !16085, file: !1066, line: 377, type: !16022)
!16093 = !DILocation(line: 377, column: 60, scope: !16085)
!16094 = !DILocalVariable(name: "qpatnext", scope: !16085, file: !1066, line: 379, type: !1068)
!16095 = !DILocation(line: 379, column: 17, scope: !16085)
!16096 = !DILocalVariable(name: "c", scope: !16085, file: !1066, line: 380, type: !326)
!16097 = !DILocation(line: 380, column: 9, scope: !16085)
!16098 = !DILocalVariable(name: "err", scope: !16085, file: !1066, line: 380, type: !326)
!16099 = !DILocation(line: 380, column: 12, scope: !16085)
!16100 = !DILocalVariable(name: "oldpathc", scope: !16085, file: !1066, line: 380, type: !326)
!16101 = !DILocation(line: 380, column: 17, scope: !16085)
!16102 = !DILocalVariable(name: "bufnext", scope: !16085, file: !1066, line: 381, type: !1071)
!16103 = !DILocation(line: 381, column: 11, scope: !16085)
!16104 = !DILocalVariable(name: "patbuf", scope: !16085, file: !1066, line: 381, type: !15810)
!16105 = !DILocation(line: 381, column: 20, scope: !16085)
!16106 = !DILocation(line: 383, column: 16, scope: !16085)
!16107 = !DILocation(line: 383, column: 14, scope: !16085)
!16108 = !DILocation(line: 384, column: 16, scope: !16085)
!16109 = !DILocation(line: 384, column: 23, scope: !16085)
!16110 = !DILocation(line: 384, column: 14, scope: !16085)
!16111 = !DILocation(line: 385, column: 15, scope: !16085)
!16112 = !DILocation(line: 385, column: 13, scope: !16085)
!16113 = !DILocation(line: 388, column: 5, scope: !16085)
!16114 = !DILocation(line: 388, column: 26, scope: !16085)
!16115 = !DILocation(line: 388, column: 17, scope: !16085)
!16116 = !DILocation(line: 388, column: 15, scope: !16085)
!16117 = !DILocation(line: 388, column: 30, scope: !16085)
!16118 = !DILocation(line: 389, column: 17, scope: !16119)
!16119 = distinct !DILexicalBlock(scope: !16085, file: !1066, line: 388, column: 38)
!16120 = !DILocation(line: 389, column: 9, scope: !16119)
!16121 = !DILocation(line: 391, column: 18, scope: !16122)
!16122 = distinct !DILexicalBlock(scope: !16119, file: !1066, line: 389, column: 20)
!16123 = !DILocation(line: 391, column: 17, scope: !16122)
!16124 = !DILocation(line: 391, column: 15, scope: !16122)
!16125 = !DILocation(line: 392, column: 17, scope: !16126)
!16126 = distinct !DILexicalBlock(scope: !16122, file: !1066, line: 392, column: 17)
!16127 = !DILocation(line: 392, column: 19, scope: !16126)
!16128 = !DILocation(line: 392, column: 17, scope: !16122)
!16129 = !DILocation(line: 393, column: 17, scope: !16130)
!16130 = distinct !DILexicalBlock(scope: !16126, file: !1066, line: 392, column: 27)
!16131 = !DILocation(line: 394, column: 13, scope: !16130)
!16132 = !DILocation(line: 395, column: 18, scope: !16133)
!16133 = distinct !DILexicalBlock(scope: !16122, file: !1066, line: 395, column: 17)
!16134 = !DILocation(line: 395, column: 17, scope: !16133)
!16135 = !DILocation(line: 395, column: 27, scope: !16133)
!16136 = !DILocation(line: 395, column: 34, scope: !16133)
!16137 = !DILocation(line: 396, column: 26, scope: !16133)
!16138 = !DILocation(line: 396, column: 35, scope: !16133)
!16139 = !DILocation(line: 396, column: 17, scope: !16133)
!16140 = !DILocation(line: 396, column: 50, scope: !16133)
!16141 = !DILocation(line: 395, column: 17, scope: !16122)
!16142 = !DILocation(line: 397, column: 25, scope: !16143)
!16143 = distinct !DILexicalBlock(scope: !16133, file: !1066, line: 396, column: 59)
!16144 = !DILocation(line: 397, column: 28, scope: !16143)
!16145 = !DILocation(line: 398, column: 21, scope: !16146)
!16146 = distinct !DILexicalBlock(scope: !16143, file: !1066, line: 398, column: 21)
!16147 = !DILocation(line: 398, column: 23, scope: !16146)
!16148 = !DILocation(line: 398, column: 21, scope: !16143)
!16149 = !DILocation(line: 399, column: 21, scope: !16150)
!16150 = distinct !DILexicalBlock(scope: !16146, file: !1066, line: 398, column: 31)
!16151 = !DILocation(line: 400, column: 17, scope: !16150)
!16152 = !DILocation(line: 401, column: 17, scope: !16143)
!16153 = !DILocation(line: 403, column: 21, scope: !16122)
!16154 = !DILocation(line: 403, column: 24, scope: !16122)
!16155 = !DILocation(line: 404, column: 17, scope: !16156)
!16156 = distinct !DILexicalBlock(scope: !16122, file: !1066, line: 404, column: 17)
!16157 = !DILocation(line: 404, column: 19, scope: !16156)
!16158 = !DILocation(line: 404, column: 17, scope: !16122)
!16159 = !DILocation(line: 405, column: 25, scope: !16160)
!16160 = distinct !DILexicalBlock(scope: !16156, file: !1066, line: 404, column: 27)
!16161 = !DILocation(line: 405, column: 28, scope: !16160)
!16162 = !DILocation(line: 406, column: 13, scope: !16160)
!16163 = !DILocation(line: 407, column: 26, scope: !16122)
!16164 = !DILocation(line: 407, column: 17, scope: !16122)
!16165 = !DILocation(line: 407, column: 15, scope: !16122)
!16166 = !DILocation(line: 408, column: 13, scope: !16122)
!16167 = !DILocation(line: 409, column: 30, scope: !16168)
!16168 = distinct !DILexicalBlock(scope: !16122, file: !1066, line: 408, column: 16)
!16169 = !DILocation(line: 409, column: 25, scope: !16168)
!16170 = !DILocation(line: 409, column: 28, scope: !16168)
!16171 = !DILocation(line: 410, column: 22, scope: !16172)
!16172 = distinct !DILexicalBlock(scope: !16168, file: !1066, line: 410, column: 21)
!16173 = !DILocation(line: 410, column: 21, scope: !16172)
!16174 = !DILocation(line: 410, column: 31, scope: !16172)
!16175 = !DILocation(line: 410, column: 40, scope: !16172)
!16176 = !DILocation(line: 411, column: 26, scope: !16172)
!16177 = !DILocation(line: 411, column: 24, scope: !16172)
!16178 = !DILocation(line: 411, column: 39, scope: !16172)
!16179 = !DILocation(line: 410, column: 21, scope: !16168)
!16180 = !DILocation(line: 412, column: 29, scope: !16181)
!16181 = distinct !DILexicalBlock(scope: !16172, file: !1066, line: 411, column: 52)
!16182 = !DILocation(line: 412, column: 32, scope: !16181)
!16183 = !DILocation(line: 413, column: 34, scope: !16181)
!16184 = !DILocation(line: 413, column: 29, scope: !16181)
!16185 = !DILocation(line: 413, column: 32, scope: !16181)
!16186 = !DILocation(line: 414, column: 30, scope: !16181)
!16187 = !DILocation(line: 415, column: 17, scope: !16181)
!16188 = !DILocation(line: 416, column: 13, scope: !16168)
!16189 = !DILocation(line: 416, column: 36, scope: !16122)
!16190 = !DILocation(line: 416, column: 27, scope: !16122)
!16191 = !DILocation(line: 416, column: 25, scope: !16122)
!16192 = !DILocation(line: 416, column: 40, scope: !16122)
!16193 = distinct !{!16193, !16166, !16194}
!16194 = !DILocation(line: 416, column: 51, scope: !16122)
!16195 = !DILocation(line: 417, column: 13, scope: !16122)
!16196 = !DILocation(line: 417, column: 20, scope: !16122)
!16197 = !DILocation(line: 417, column: 29, scope: !16122)
!16198 = !DILocation(line: 418, column: 21, scope: !16122)
!16199 = !DILocation(line: 418, column: 24, scope: !16122)
!16200 = !DILocation(line: 419, column: 13, scope: !16122)
!16201 = !DILocation(line: 421, column: 13, scope: !16122)
!16202 = !DILocation(line: 421, column: 20, scope: !16122)
!16203 = !DILocation(line: 421, column: 29, scope: !16122)
!16204 = !DILocation(line: 422, column: 21, scope: !16122)
!16205 = !DILocation(line: 422, column: 24, scope: !16122)
!16206 = !DILocation(line: 423, column: 13, scope: !16122)
!16207 = !DILocation(line: 425, column: 13, scope: !16122)
!16208 = !DILocation(line: 425, column: 20, scope: !16122)
!16209 = !DILocation(line: 425, column: 29, scope: !16122)
!16210 = !DILocation(line: 429, column: 17, scope: !16211)
!16211 = distinct !DILexicalBlock(scope: !16122, file: !1066, line: 429, column: 17)
!16212 = !DILocation(line: 429, column: 28, scope: !16211)
!16213 = !DILocation(line: 429, column: 25, scope: !16211)
!16214 = !DILocation(line: 429, column: 35, scope: !16211)
!16215 = !DILocation(line: 429, column: 38, scope: !16211)
!16216 = !DILocation(line: 429, column: 50, scope: !16211)
!16217 = !DILocation(line: 429, column: 17, scope: !16122)
!16218 = !DILocation(line: 430, column: 25, scope: !16219)
!16219 = distinct !DILexicalBlock(scope: !16211, file: !1066, line: 429, column: 60)
!16220 = !DILocation(line: 430, column: 28, scope: !16219)
!16221 = !DILocation(line: 431, column: 13, scope: !16219)
!16222 = !DILocation(line: 432, column: 13, scope: !16122)
!16223 = !DILocation(line: 434, column: 26, scope: !16122)
!16224 = !DILocation(line: 434, column: 21, scope: !16122)
!16225 = !DILocation(line: 434, column: 24, scope: !16122)
!16226 = !DILocation(line: 435, column: 13, scope: !16122)
!16227 = distinct !{!16227, !16113, !16228}
!16228 = !DILocation(line: 437, column: 5, scope: !16085)
!16229 = !DILocation(line: 438, column: 6, scope: !16085)
!16230 = !DILocation(line: 438, column: 14, scope: !16085)
!16231 = !DILocation(line: 440, column: 22, scope: !16232)
!16232 = distinct !DILexicalBlock(scope: !16085, file: !1066, line: 440, column: 9)
!16233 = !DILocation(line: 440, column: 30, scope: !16232)
!16234 = !DILocation(line: 440, column: 36, scope: !16232)
!16235 = !DILocation(line: 440, column: 46, scope: !16232)
!16236 = !DILocation(line: 440, column: 51, scope: !16232)
!16237 = !DILocation(line: 440, column: 58, scope: !16232)
!16238 = !DILocation(line: 440, column: 16, scope: !16232)
!16239 = !DILocation(line: 440, column: 14, scope: !16232)
!16240 = !DILocation(line: 440, column: 70, scope: !16232)
!16241 = !DILocation(line: 440, column: 9, scope: !16085)
!16242 = !DILocation(line: 441, column: 16, scope: !16243)
!16243 = distinct !DILexicalBlock(scope: !16232, file: !1066, line: 440, column: 76)
!16244 = !DILocation(line: 441, column: 9, scope: !16243)
!16245 = !DILocation(line: 450, column: 9, scope: !16246)
!16246 = distinct !DILexicalBlock(scope: !16085, file: !1066, line: 450, column: 9)
!16247 = !DILocation(line: 450, column: 16, scope: !16246)
!16248 = !DILocation(line: 450, column: 28, scope: !16246)
!16249 = !DILocation(line: 450, column: 25, scope: !16246)
!16250 = !DILocation(line: 450, column: 9, scope: !16085)
!16251 = !DILocation(line: 451, column: 14, scope: !16252)
!16252 = distinct !DILexicalBlock(scope: !16253, file: !1066, line: 451, column: 13)
!16253 = distinct !DILexicalBlock(scope: !16246, file: !1066, line: 450, column: 38)
!16254 = !DILocation(line: 451, column: 21, scope: !16252)
!16255 = !DILocation(line: 451, column: 30, scope: !16252)
!16256 = !DILocation(line: 451, column: 46, scope: !16252)
!16257 = !DILocation(line: 452, column: 15, scope: !16252)
!16258 = !DILocation(line: 452, column: 22, scope: !16252)
!16259 = !DILocation(line: 452, column: 31, scope: !16252)
!16260 = !DILocation(line: 452, column: 47, scope: !16252)
!16261 = !DILocation(line: 453, column: 19, scope: !16252)
!16262 = !DILocation(line: 453, column: 26, scope: !16252)
!16263 = !DILocation(line: 453, column: 35, scope: !16252)
!16264 = !DILocation(line: 451, column: 13, scope: !16253)
!16265 = !DILocation(line: 454, column: 31, scope: !16266)
!16266 = distinct !DILexicalBlock(scope: !16252, file: !1066, line: 453, column: 53)
!16267 = !DILocation(line: 454, column: 40, scope: !16266)
!16268 = !DILocation(line: 454, column: 47, scope: !16266)
!16269 = !DILocation(line: 454, column: 20, scope: !16266)
!16270 = !DILocation(line: 454, column: 13, scope: !16266)
!16271 = !DILocation(line: 456, column: 13, scope: !16272)
!16272 = distinct !DILexicalBlock(scope: !16252, file: !1066, line: 455, column: 16)
!16273 = !DILocation(line: 459, column: 11, scope: !16274)
!16274 = distinct !DILexicalBlock(scope: !16085, file: !1066, line: 459, column: 9)
!16275 = !DILocation(line: 459, column: 18, scope: !16274)
!16276 = !DILocation(line: 459, column: 27, scope: !16274)
!16277 = !DILocation(line: 459, column: 9, scope: !16085)
!16278 = !DILocation(line: 460, column: 14, scope: !16279)
!16279 = distinct !DILexicalBlock(scope: !16280, file: !1066, line: 460, column: 13)
!16280 = distinct !DILexicalBlock(scope: !16274, file: !1066, line: 459, column: 43)
!16281 = !DILocation(line: 460, column: 21, scope: !16279)
!16282 = !DILocation(line: 460, column: 30, scope: !16279)
!16283 = !DILocation(line: 460, column: 13, scope: !16280)
!16284 = !DILocalVariable(name: "path_stat", scope: !16285, file: !1066, line: 462, type: !16286)
!16285 = distinct !DILexicalBlock(scope: !16279, file: !1066, line: 460, column: 48)
!16286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 64)
!16287 = !DILocation(line: 462, column: 36, scope: !16285)
!16288 = !DILocalVariable(name: "i", scope: !16285, file: !1066, line: 463, type: !326)
!16289 = !DILocation(line: 463, column: 17, scope: !16285)
!16290 = !DILocalVariable(name: "n", scope: !16285, file: !1066, line: 464, type: !326)
!16291 = !DILocation(line: 464, column: 17, scope: !16285)
!16292 = !DILocation(line: 464, column: 21, scope: !16285)
!16293 = !DILocation(line: 464, column: 28, scope: !16285)
!16294 = !DILocation(line: 464, column: 39, scope: !16285)
!16295 = !DILocation(line: 464, column: 37, scope: !16285)
!16296 = !DILocalVariable(name: "o", scope: !16285, file: !1066, line: 465, type: !326)
!16297 = !DILocation(line: 465, column: 17, scope: !16285)
!16298 = !DILocation(line: 465, column: 21, scope: !16285)
!16299 = !DILocation(line: 465, column: 28, scope: !16285)
!16300 = !DILocation(line: 465, column: 38, scope: !16285)
!16301 = !DILocation(line: 465, column: 36, scope: !16285)
!16302 = !DILocation(line: 467, column: 37, scope: !16303)
!16303 = distinct !DILexicalBlock(scope: !16285, file: !1066, line: 467, column: 17)
!16304 = !DILocation(line: 467, column: 30, scope: !16303)
!16305 = !DILocation(line: 467, column: 28, scope: !16303)
!16306 = !DILocation(line: 467, column: 61, scope: !16303)
!16307 = !DILocation(line: 467, column: 17, scope: !16285)
!16308 = !DILocation(line: 468, column: 17, scope: !16309)
!16309 = distinct !DILexicalBlock(scope: !16303, file: !1066, line: 467, column: 70)
!16310 = !DILocation(line: 470, column: 20, scope: !16311)
!16311 = distinct !DILexicalBlock(scope: !16285, file: !1066, line: 470, column: 13)
!16312 = !DILocation(line: 470, column: 18, scope: !16311)
!16313 = !DILocation(line: 470, column: 25, scope: !16314)
!16314 = distinct !DILexicalBlock(scope: !16311, file: !1066, line: 470, column: 13)
!16315 = !DILocation(line: 470, column: 29, scope: !16314)
!16316 = !DILocation(line: 470, column: 27, scope: !16314)
!16317 = !DILocation(line: 470, column: 13, scope: !16311)
!16318 = !DILocation(line: 471, column: 41, scope: !16319)
!16319 = distinct !DILexicalBlock(scope: !16314, file: !1066, line: 470, column: 37)
!16320 = !DILocation(line: 471, column: 48, scope: !16319)
!16321 = !DILocation(line: 471, column: 57, scope: !16319)
!16322 = !DILocation(line: 471, column: 61, scope: !16319)
!16323 = !DILocation(line: 471, column: 59, scope: !16319)
!16324 = !DILocation(line: 471, column: 17, scope: !16319)
!16325 = !DILocation(line: 471, column: 27, scope: !16319)
!16326 = !DILocation(line: 471, column: 30, scope: !16319)
!16327 = !DILocation(line: 471, column: 39, scope: !16319)
!16328 = !DILocation(line: 472, column: 41, scope: !16319)
!16329 = !DILocation(line: 472, column: 48, scope: !16319)
!16330 = !DILocation(line: 472, column: 57, scope: !16319)
!16331 = !DILocation(line: 472, column: 61, scope: !16319)
!16332 = !DILocation(line: 472, column: 59, scope: !16319)
!16333 = !DILocation(line: 472, column: 17, scope: !16319)
!16334 = !DILocation(line: 472, column: 27, scope: !16319)
!16335 = !DILocation(line: 472, column: 30, scope: !16319)
!16336 = !DILocation(line: 472, column: 39, scope: !16319)
!16337 = !DILocation(line: 473, column: 13, scope: !16319)
!16338 = !DILocation(line: 470, column: 33, scope: !16314)
!16339 = !DILocation(line: 470, column: 13, scope: !16314)
!16340 = distinct !{!16340, !16317, !16341}
!16341 = !DILocation(line: 473, column: 13, scope: !16311)
!16342 = !DILocation(line: 474, column: 19, scope: !16285)
!16343 = !DILocation(line: 474, column: 30, scope: !16285)
!16344 = !DILocation(line: 474, column: 13, scope: !16285)
!16345 = !DILocation(line: 475, column: 20, scope: !16346)
!16346 = distinct !DILexicalBlock(scope: !16285, file: !1066, line: 475, column: 13)
!16347 = !DILocation(line: 475, column: 18, scope: !16346)
!16348 = !DILocation(line: 475, column: 25, scope: !16349)
!16349 = distinct !DILexicalBlock(scope: !16346, file: !1066, line: 475, column: 13)
!16350 = !DILocation(line: 475, column: 29, scope: !16349)
!16351 = !DILocation(line: 475, column: 27, scope: !16349)
!16352 = !DILocation(line: 475, column: 13, scope: !16346)
!16353 = !DILocation(line: 476, column: 42, scope: !16354)
!16354 = distinct !DILexicalBlock(scope: !16349, file: !1066, line: 475, column: 37)
!16355 = !DILocation(line: 476, column: 52, scope: !16354)
!16356 = !DILocation(line: 476, column: 55, scope: !16354)
!16357 = !DILocation(line: 476, column: 17, scope: !16354)
!16358 = !DILocation(line: 476, column: 24, scope: !16354)
!16359 = !DILocation(line: 476, column: 33, scope: !16354)
!16360 = !DILocation(line: 476, column: 37, scope: !16354)
!16361 = !DILocation(line: 476, column: 35, scope: !16354)
!16362 = !DILocation(line: 476, column: 40, scope: !16354)
!16363 = !DILocation(line: 477, column: 42, scope: !16354)
!16364 = !DILocation(line: 477, column: 52, scope: !16354)
!16365 = !DILocation(line: 477, column: 55, scope: !16354)
!16366 = !DILocation(line: 477, column: 17, scope: !16354)
!16367 = !DILocation(line: 477, column: 24, scope: !16354)
!16368 = !DILocation(line: 477, column: 33, scope: !16354)
!16369 = !DILocation(line: 477, column: 37, scope: !16354)
!16370 = !DILocation(line: 477, column: 35, scope: !16354)
!16371 = !DILocation(line: 477, column: 40, scope: !16354)
!16372 = !DILocation(line: 478, column: 13, scope: !16354)
!16373 = !DILocation(line: 475, column: 33, scope: !16349)
!16374 = !DILocation(line: 475, column: 13, scope: !16349)
!16375 = distinct !{!16375, !16352, !16376}
!16376 = !DILocation(line: 478, column: 13, scope: !16346)
!16377 = !DILocation(line: 479, column: 18, scope: !16285)
!16378 = !DILocation(line: 479, column: 13, scope: !16285)
!16379 = !DILocation(line: 480, column: 9, scope: !16285)
!16380 = !DILocation(line: 481, column: 19, scope: !16381)
!16381 = distinct !DILexicalBlock(scope: !16279, file: !1066, line: 480, column: 16)
!16382 = !DILocation(line: 481, column: 26, scope: !16381)
!16383 = !DILocation(line: 481, column: 37, scope: !16381)
!16384 = !DILocation(line: 481, column: 44, scope: !16381)
!16385 = !DILocation(line: 481, column: 35, scope: !16381)
!16386 = !DILocation(line: 481, column: 54, scope: !16381)
!16387 = !DILocation(line: 481, column: 52, scope: !16381)
!16388 = !DILocation(line: 482, column: 19, scope: !16381)
!16389 = !DILocation(line: 482, column: 26, scope: !16381)
!16390 = !DILocation(line: 482, column: 37, scope: !16381)
!16391 = !DILocation(line: 482, column: 35, scope: !16381)
!16392 = !DILocation(line: 481, column: 13, scope: !16381)
!16393 = !DILocation(line: 485, column: 5, scope: !16280)
!16394 = !DILocation(line: 486, column: 5, scope: !16085)
!16395 = !DILocation(line: 487, column: 1, scope: !16085)
!16396 = distinct !DISubprogram(name: "g_strchr", scope: !1066, file: !1066, line: 944, type: !16397, scopeLine: 945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1065, retainedNodes: !471)
!16397 = !DISubroutineType(types: !16398)
!16398 = !{!1071, !1068, !326}
!16399 = !DILocalVariable(name: "str", arg: 1, scope: !16396, file: !1066, line: 944, type: !1068)
!16400 = !DILocation(line: 944, column: 22, scope: !16396)
!16401 = !DILocalVariable(name: "ch", arg: 2, scope: !16396, file: !1066, line: 944, type: !326)
!16402 = !DILocation(line: 944, column: 31, scope: !16396)
!16403 = !DILocation(line: 946, column: 5, scope: !16396)
!16404 = !DILocation(line: 947, column: 14, scope: !16405)
!16405 = distinct !DILexicalBlock(scope: !16406, file: !1066, line: 947, column: 13)
!16406 = distinct !DILexicalBlock(scope: !16396, file: !1066, line: 946, column: 8)
!16407 = !DILocation(line: 947, column: 13, scope: !16405)
!16408 = !DILocation(line: 947, column: 21, scope: !16405)
!16409 = !DILocation(line: 947, column: 18, scope: !16405)
!16410 = !DILocation(line: 947, column: 13, scope: !16406)
!16411 = !DILocation(line: 948, column: 28, scope: !16412)
!16412 = distinct !DILexicalBlock(scope: !16405, file: !1066, line: 947, column: 25)
!16413 = !DILocation(line: 948, column: 13, scope: !16412)
!16414 = !DILocation(line: 950, column: 5, scope: !16406)
!16415 = !DILocation(line: 950, column: 18, scope: !16396)
!16416 = !DILocation(line: 950, column: 14, scope: !16396)
!16417 = distinct !{!16417, !16403, !16418}
!16418 = !DILocation(line: 950, column: 20, scope: !16396)
!16419 = !DILocation(line: 951, column: 5, scope: !16396)
!16420 = !DILocation(line: 952, column: 1, scope: !16396)
!16421 = distinct !DISubprogram(name: "glob1", scope: !1066, file: !1066, line: 505, type: !16422, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1065, retainedNodes: !471)
!16422 = !DISubroutineType(types: !16423)
!16423 = !{!326, !1071, !1071, !15750, !16022, !326}
!16424 = !DILocalVariable(name: "pattern", arg: 1, scope: !16421, file: !1066, line: 505, type: !1071)
!16425 = !DILocation(line: 505, column: 13, scope: !16421)
!16426 = !DILocalVariable(name: "pattern_last", arg: 2, scope: !16421, file: !1066, line: 505, type: !1071)
!16427 = !DILocation(line: 505, column: 28, scope: !16421)
!16428 = !DILocalVariable(name: "pglob", arg: 3, scope: !16421, file: !1066, line: 505, type: !15750)
!16429 = !DILocation(line: 505, column: 50, scope: !16421)
!16430 = !DILocalVariable(name: "limitp", arg: 4, scope: !16421, file: !1066, line: 505, type: !16022)
!16431 = !DILocation(line: 505, column: 74, scope: !16421)
!16432 = !DILocalVariable(name: "recursion", arg: 5, scope: !16421, file: !1066, line: 506, type: !326)
!16433 = !DILocation(line: 506, column: 11, scope: !16421)
!16434 = !DILocalVariable(name: "pathbuf", scope: !16421, file: !1066, line: 508, type: !15810)
!16435 = !DILocation(line: 508, column: 10, scope: !16421)
!16436 = !DILocation(line: 511, column: 10, scope: !16437)
!16437 = distinct !DILexicalBlock(scope: !16421, file: !1066, line: 511, column: 9)
!16438 = !DILocation(line: 511, column: 9, scope: !16437)
!16439 = !DILocation(line: 511, column: 18, scope: !16437)
!16440 = !DILocation(line: 511, column: 9, scope: !16421)
!16441 = !DILocation(line: 512, column: 9, scope: !16442)
!16442 = distinct !DILexicalBlock(scope: !16437, file: !1066, line: 511, column: 26)
!16443 = !DILocation(line: 514, column: 18, scope: !16421)
!16444 = !DILocation(line: 514, column: 27, scope: !16421)
!16445 = !DILocation(line: 514, column: 35, scope: !16421)
!16446 = !DILocation(line: 514, column: 46, scope: !16421)
!16447 = !DILocation(line: 515, column: 18, scope: !16421)
!16448 = !DILocation(line: 515, column: 27, scope: !16421)
!16449 = !DILocation(line: 515, column: 35, scope: !16421)
!16450 = !DILocation(line: 515, column: 46, scope: !16421)
!16451 = !DILocation(line: 516, column: 18, scope: !16421)
!16452 = !DILocation(line: 516, column: 27, scope: !16421)
!16453 = !DILocation(line: 516, column: 41, scope: !16421)
!16454 = !DILocation(line: 516, column: 48, scope: !16421)
!16455 = !DILocation(line: 516, column: 56, scope: !16421)
!16456 = !DILocation(line: 514, column: 12, scope: !16421)
!16457 = !DILocation(line: 514, column: 5, scope: !16421)
!16458 = !DILocation(line: 517, column: 1, scope: !16421)
!16459 = distinct !DISubprogram(name: "globextend", scope: !1066, file: !1066, line: 706, type: !16460, scopeLine: 708, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1065, retainedNodes: !471)
!16460 = !DISubroutineType(types: !16461)
!16461 = !{!326, !1068, !15750, !16022, !1093}
!16462 = !DILocalVariable(name: "path", arg: 1, scope: !16459, file: !1066, line: 706, type: !1068)
!16463 = !DILocation(line: 706, column: 24, scope: !16459)
!16464 = !DILocalVariable(name: "pglob", arg: 2, scope: !16459, file: !1066, line: 706, type: !15750)
!16465 = !DILocation(line: 706, column: 38, scope: !16459)
!16466 = !DILocalVariable(name: "limitp", arg: 3, scope: !16459, file: !1066, line: 706, type: !16022)
!16467 = !DILocation(line: 706, column: 62, scope: !16459)
!16468 = !DILocalVariable(name: "sb", arg: 4, scope: !16459, file: !1066, line: 707, type: !1093)
!16469 = !DILocation(line: 707, column: 25, scope: !16459)
!16470 = !DILocalVariable(name: "pathv", scope: !16459, file: !1066, line: 709, type: !493)
!16471 = !DILocation(line: 709, column: 12, scope: !16459)
!16472 = !DILocalVariable(name: "i", scope: !16459, file: !1066, line: 710, type: !383)
!16473 = !DILocation(line: 710, column: 13, scope: !16459)
!16474 = !DILocalVariable(name: "newn", scope: !16459, file: !1066, line: 711, type: !304)
!16475 = !DILocation(line: 711, column: 12, scope: !16459)
!16476 = !DILocalVariable(name: "len", scope: !16459, file: !1066, line: 711, type: !304)
!16477 = !DILocation(line: 711, column: 18, scope: !16459)
!16478 = !DILocalVariable(name: "copy", scope: !16459, file: !1066, line: 712, type: !308)
!16479 = !DILocation(line: 712, column: 11, scope: !16459)
!16480 = !DILocalVariable(name: "p", scope: !16459, file: !1066, line: 713, type: !1068)
!16481 = !DILocation(line: 713, column: 17, scope: !16459)
!16482 = !DILocalVariable(name: "statv", scope: !16459, file: !1066, line: 714, type: !15762)
!16483 = !DILocation(line: 714, column: 19, scope: !16459)
!16484 = !DILocation(line: 716, column: 16, scope: !16459)
!16485 = !DILocation(line: 716, column: 23, scope: !16459)
!16486 = !DILocation(line: 716, column: 14, scope: !16459)
!16487 = !DILocation(line: 716, column: 34, scope: !16459)
!16488 = !DILocation(line: 716, column: 41, scope: !16459)
!16489 = !DILocation(line: 716, column: 32, scope: !16459)
!16490 = !DILocation(line: 716, column: 12, scope: !16459)
!16491 = !DILocation(line: 716, column: 10, scope: !16459)
!16492 = !DILocation(line: 717, column: 9, scope: !16493)
!16493 = distinct !DILexicalBlock(scope: !16459, file: !1066, line: 717, column: 9)
!16494 = !DILocation(line: 717, column: 16, scope: !16493)
!16495 = !DILocation(line: 717, column: 24, scope: !16493)
!16496 = !DILocation(line: 717, column: 35, scope: !16493)
!16497 = !DILocation(line: 718, column: 9, scope: !16493)
!16498 = !DILocation(line: 718, column: 16, scope: !16493)
!16499 = !DILocation(line: 718, column: 25, scope: !16493)
!16500 = !DILocation(line: 718, column: 36, scope: !16493)
!16501 = !DILocation(line: 719, column: 9, scope: !16493)
!16502 = !DILocation(line: 719, column: 14, scope: !16493)
!16503 = !DILocation(line: 719, column: 25, scope: !16493)
!16504 = !DILocation(line: 720, column: 38, scope: !16493)
!16505 = !DILocation(line: 720, column: 35, scope: !16493)
!16506 = !DILocation(line: 720, column: 43, scope: !16493)
!16507 = !DILocation(line: 721, column: 38, scope: !16493)
!16508 = !DILocation(line: 721, column: 35, scope: !16493)
!16509 = !DILocation(line: 717, column: 9, scope: !16459)
!16510 = !DILocation(line: 721, column: 44, scope: !16493)
!16511 = !DILabel(scope: !16512, name: "nospace", file: !1066, line: 722)
!16512 = distinct !DILexicalBlock(scope: !16493, file: !1066, line: 721, column: 44)
!16513 = !DILocation(line: 722, column: 1, scope: !16512)
!16514 = !DILocation(line: 723, column: 18, scope: !16515)
!16515 = distinct !DILexicalBlock(scope: !16512, file: !1066, line: 723, column: 9)
!16516 = !DILocation(line: 723, column: 25, scope: !16515)
!16517 = !DILocation(line: 723, column: 16, scope: !16515)
!16518 = !DILocation(line: 723, column: 14, scope: !16515)
!16519 = !DILocation(line: 723, column: 34, scope: !16520)
!16520 = distinct !DILexicalBlock(scope: !16515, file: !1066, line: 723, column: 9)
!16521 = !DILocation(line: 723, column: 48, scope: !16520)
!16522 = !DILocation(line: 723, column: 53, scope: !16520)
!16523 = !DILocation(line: 723, column: 36, scope: !16520)
!16524 = !DILocation(line: 723, column: 9, scope: !16515)
!16525 = !DILocation(line: 724, column: 17, scope: !16526)
!16526 = distinct !DILexicalBlock(scope: !16527, file: !1066, line: 724, column: 17)
!16527 = distinct !DILexicalBlock(scope: !16520, file: !1066, line: 723, column: 64)
!16528 = !DILocation(line: 724, column: 24, scope: !16526)
!16529 = !DILocation(line: 724, column: 33, scope: !16526)
!16530 = !DILocation(line: 724, column: 36, scope: !16526)
!16531 = !DILocation(line: 724, column: 43, scope: !16526)
!16532 = !DILocation(line: 724, column: 52, scope: !16526)
!16533 = !DILocation(line: 724, column: 17, scope: !16527)
!16534 = !DILocation(line: 725, column: 22, scope: !16535)
!16535 = distinct !DILexicalBlock(scope: !16526, file: !1066, line: 724, column: 56)
!16536 = !DILocation(line: 725, column: 29, scope: !16535)
!16537 = !DILocation(line: 725, column: 38, scope: !16535)
!16538 = !DILocation(line: 725, column: 17, scope: !16535)
!16539 = !DILocation(line: 726, column: 13, scope: !16535)
!16540 = !DILocation(line: 727, column: 18, scope: !16541)
!16541 = distinct !DILexicalBlock(scope: !16527, file: !1066, line: 727, column: 17)
!16542 = !DILocation(line: 727, column: 25, scope: !16541)
!16543 = !DILocation(line: 727, column: 34, scope: !16541)
!16544 = !DILocation(line: 727, column: 51, scope: !16541)
!16545 = !DILocation(line: 727, column: 56, scope: !16541)
!16546 = !DILocation(line: 728, column: 17, scope: !16541)
!16547 = !DILocation(line: 728, column: 24, scope: !16541)
!16548 = !DILocation(line: 728, column: 33, scope: !16541)
!16549 = !DILocation(line: 728, column: 36, scope: !16541)
!16550 = !DILocation(line: 728, column: 43, scope: !16541)
!16551 = !DILocation(line: 728, column: 52, scope: !16541)
!16552 = !DILocation(line: 727, column: 17, scope: !16527)
!16553 = !DILocation(line: 729, column: 22, scope: !16554)
!16554 = distinct !DILexicalBlock(scope: !16541, file: !1066, line: 728, column: 56)
!16555 = !DILocation(line: 729, column: 29, scope: !16554)
!16556 = !DILocation(line: 729, column: 38, scope: !16554)
!16557 = !DILocation(line: 729, column: 17, scope: !16554)
!16558 = !DILocation(line: 730, column: 13, scope: !16554)
!16559 = !DILocation(line: 731, column: 9, scope: !16527)
!16560 = !DILocation(line: 723, column: 60, scope: !16520)
!16561 = !DILocation(line: 723, column: 9, scope: !16520)
!16562 = distinct !{!16562, !16524, !16563}
!16563 = !DILocation(line: 731, column: 9, scope: !16515)
!16564 = !DILocation(line: 732, column: 14, scope: !16512)
!16565 = !DILocation(line: 732, column: 21, scope: !16512)
!16566 = !DILocation(line: 732, column: 9, scope: !16512)
!16567 = !DILocation(line: 733, column: 9, scope: !16512)
!16568 = !DILocation(line: 733, column: 16, scope: !16512)
!16569 = !DILocation(line: 733, column: 25, scope: !16512)
!16570 = !DILocation(line: 734, column: 14, scope: !16512)
!16571 = !DILocation(line: 734, column: 21, scope: !16512)
!16572 = !DILocation(line: 734, column: 9, scope: !16512)
!16573 = !DILocation(line: 735, column: 9, scope: !16512)
!16574 = !DILocation(line: 735, column: 16, scope: !16512)
!16575 = !DILocation(line: 735, column: 25, scope: !16512)
!16576 = !DILocation(line: 736, column: 9, scope: !16512)
!16577 = !DILocation(line: 739, column: 21, scope: !16459)
!16578 = !DILocation(line: 739, column: 28, scope: !16459)
!16579 = !DILocation(line: 739, column: 38, scope: !16459)
!16580 = !DILocation(line: 739, column: 43, scope: !16459)
!16581 = !DILocation(line: 739, column: 13, scope: !16459)
!16582 = !DILocation(line: 739, column: 11, scope: !16459)
!16583 = !DILocation(line: 740, column: 9, scope: !16584)
!16584 = distinct !DILexicalBlock(scope: !16459, file: !1066, line: 740, column: 9)
!16585 = !DILocation(line: 740, column: 15, scope: !16584)
!16586 = !DILocation(line: 740, column: 9, scope: !16459)
!16587 = !DILocation(line: 741, column: 9, scope: !16588)
!16588 = distinct !DILexicalBlock(scope: !16584, file: !1066, line: 740, column: 24)
!16589 = !DILocation(line: 743, column: 9, scope: !16590)
!16590 = distinct !DILexicalBlock(scope: !16459, file: !1066, line: 743, column: 9)
!16591 = !DILocation(line: 743, column: 16, scope: !16590)
!16592 = !DILocation(line: 743, column: 25, scope: !16590)
!16593 = !DILocation(line: 743, column: 33, scope: !16590)
!16594 = !DILocation(line: 743, column: 36, scope: !16590)
!16595 = !DILocation(line: 743, column: 43, scope: !16590)
!16596 = !DILocation(line: 743, column: 51, scope: !16590)
!16597 = !DILocation(line: 743, column: 9, scope: !16459)
!16598 = !DILocation(line: 745, column: 18, scope: !16599)
!16599 = distinct !DILexicalBlock(scope: !16590, file: !1066, line: 743, column: 56)
!16600 = !DILocation(line: 745, column: 25, scope: !16599)
!16601 = !DILocation(line: 745, column: 15, scope: !16599)
!16602 = !DILocation(line: 746, column: 18, scope: !16603)
!16603 = distinct !DILexicalBlock(scope: !16599, file: !1066, line: 746, column: 9)
!16604 = !DILocation(line: 746, column: 25, scope: !16603)
!16605 = !DILocation(line: 746, column: 16, scope: !16603)
!16606 = !DILocation(line: 746, column: 14, scope: !16603)
!16607 = !DILocation(line: 746, column: 34, scope: !16608)
!16608 = distinct !DILexicalBlock(scope: !16603, file: !1066, line: 746, column: 9)
!16609 = !DILocation(line: 746, column: 38, scope: !16608)
!16610 = !DILocation(line: 746, column: 9, scope: !16603)
!16611 = !DILocation(line: 747, column: 14, scope: !16612)
!16612 = distinct !DILexicalBlock(scope: !16608, file: !1066, line: 746, column: 46)
!16613 = !DILocation(line: 747, column: 22, scope: !16612)
!16614 = !DILocation(line: 746, column: 9, scope: !16608)
!16615 = distinct !{!16615, !16610, !16616}
!16616 = !DILocation(line: 748, column: 9, scope: !16603)
!16617 = !DILocation(line: 749, column: 5, scope: !16599)
!16618 = !DILocation(line: 750, column: 23, scope: !16459)
!16619 = !DILocation(line: 750, column: 5, scope: !16459)
!16620 = !DILocation(line: 750, column: 12, scope: !16459)
!16621 = !DILocation(line: 750, column: 21, scope: !16459)
!16622 = !DILocation(line: 752, column: 10, scope: !16623)
!16623 = distinct !DILexicalBlock(scope: !16459, file: !1066, line: 752, column: 9)
!16624 = !DILocation(line: 752, column: 17, scope: !16623)
!16625 = !DILocation(line: 752, column: 26, scope: !16623)
!16626 = !DILocation(line: 752, column: 43, scope: !16623)
!16627 = !DILocation(line: 752, column: 9, scope: !16459)
!16628 = !DILocation(line: 753, column: 25, scope: !16629)
!16629 = distinct !DILexicalBlock(scope: !16623, file: !1066, line: 752, column: 49)
!16630 = !DILocation(line: 753, column: 32, scope: !16629)
!16631 = !DILocation(line: 753, column: 42, scope: !16629)
!16632 = !DILocation(line: 753, column: 47, scope: !16629)
!16633 = !DILocation(line: 753, column: 17, scope: !16629)
!16634 = !DILocation(line: 753, column: 15, scope: !16629)
!16635 = !DILocation(line: 754, column: 13, scope: !16636)
!16636 = distinct !DILexicalBlock(scope: !16629, file: !1066, line: 754, column: 13)
!16637 = !DILocation(line: 754, column: 19, scope: !16636)
!16638 = !DILocation(line: 754, column: 13, scope: !16629)
!16639 = !DILocation(line: 755, column: 13, scope: !16640)
!16640 = distinct !DILexicalBlock(scope: !16636, file: !1066, line: 754, column: 28)
!16641 = !DILocation(line: 757, column: 13, scope: !16642)
!16642 = distinct !DILexicalBlock(scope: !16629, file: !1066, line: 757, column: 13)
!16643 = !DILocation(line: 757, column: 20, scope: !16642)
!16644 = !DILocation(line: 757, column: 29, scope: !16642)
!16645 = !DILocation(line: 757, column: 37, scope: !16642)
!16646 = !DILocation(line: 757, column: 40, scope: !16642)
!16647 = !DILocation(line: 757, column: 47, scope: !16642)
!16648 = !DILocation(line: 757, column: 55, scope: !16642)
!16649 = !DILocation(line: 757, column: 13, scope: !16629)
!16650 = !DILocation(line: 759, column: 22, scope: !16651)
!16651 = distinct !DILexicalBlock(scope: !16642, file: !1066, line: 757, column: 60)
!16652 = !DILocation(line: 759, column: 29, scope: !16651)
!16653 = !DILocation(line: 759, column: 19, scope: !16651)
!16654 = !DILocation(line: 760, column: 22, scope: !16655)
!16655 = distinct !DILexicalBlock(scope: !16651, file: !1066, line: 760, column: 13)
!16656 = !DILocation(line: 760, column: 29, scope: !16655)
!16657 = !DILocation(line: 760, column: 20, scope: !16655)
!16658 = !DILocation(line: 760, column: 18, scope: !16655)
!16659 = !DILocation(line: 760, column: 38, scope: !16660)
!16660 = distinct !DILexicalBlock(scope: !16655, file: !1066, line: 760, column: 13)
!16661 = !DILocation(line: 760, column: 42, scope: !16660)
!16662 = !DILocation(line: 760, column: 13, scope: !16655)
!16663 = !DILocation(line: 761, column: 18, scope: !16664)
!16664 = distinct !DILexicalBlock(scope: !16660, file: !1066, line: 760, column: 50)
!16665 = !DILocation(line: 761, column: 26, scope: !16664)
!16666 = !DILocation(line: 760, column: 13, scope: !16660)
!16667 = distinct !{!16667, !16662, !16668}
!16668 = !DILocation(line: 762, column: 13, scope: !16655)
!16669 = !DILocation(line: 763, column: 9, scope: !16651)
!16670 = !DILocation(line: 764, column: 27, scope: !16629)
!16671 = !DILocation(line: 764, column: 9, scope: !16629)
!16672 = !DILocation(line: 764, column: 16, scope: !16629)
!16673 = !DILocation(line: 764, column: 25, scope: !16629)
!16674 = !DILocation(line: 765, column: 13, scope: !16675)
!16675 = distinct !DILexicalBlock(scope: !16629, file: !1066, line: 765, column: 13)
!16676 = !DILocation(line: 765, column: 16, scope: !16675)
!16677 = !DILocation(line: 765, column: 13, scope: !16629)
!16678 = !DILocation(line: 766, column: 13, scope: !16679)
!16679 = distinct !DILexicalBlock(scope: !16675, file: !1066, line: 765, column: 25)
!16680 = !DILocation(line: 766, column: 19, scope: !16679)
!16681 = !DILocation(line: 766, column: 26, scope: !16679)
!16682 = !DILocation(line: 766, column: 36, scope: !16679)
!16683 = !DILocation(line: 766, column: 43, scope: !16679)
!16684 = !DILocation(line: 766, column: 34, scope: !16679)
!16685 = !DILocation(line: 766, column: 53, scope: !16679)
!16686 = !DILocation(line: 767, column: 9, scope: !16679)
!16687 = !DILocation(line: 768, column: 13, scope: !16688)
!16688 = distinct !DILexicalBlock(scope: !16675, file: !1066, line: 767, column: 16)
!16689 = !DILocation(line: 768, column: 21, scope: !16688)
!16690 = !DILocation(line: 768, column: 33, scope: !16688)
!16691 = !DILocation(line: 769, column: 17, scope: !16692)
!16692 = distinct !DILexicalBlock(scope: !16688, file: !1066, line: 769, column: 17)
!16693 = !DILocation(line: 769, column: 25, scope: !16692)
!16694 = !DILocation(line: 769, column: 37, scope: !16692)
!16695 = !DILocation(line: 769, column: 17, scope: !16688)
!16696 = !DILocation(line: 770, column: 17, scope: !16697)
!16697 = distinct !DILexicalBlock(scope: !16692, file: !1066, line: 769, column: 59)
!16698 = !DILocation(line: 770, column: 23, scope: !16697)
!16699 = !DILocation(line: 771, column: 17, scope: !16697)
!16700 = !DILocation(line: 774, column: 18, scope: !16701)
!16701 = distinct !DILexicalBlock(scope: !16688, file: !1066, line: 773, column: 17)
!16702 = !DILocation(line: 773, column: 18, scope: !16701)
!16703 = !DILocation(line: 773, column: 24, scope: !16701)
!16704 = !DILocation(line: 773, column: 31, scope: !16701)
!16705 = !DILocation(line: 773, column: 41, scope: !16701)
!16706 = !DILocation(line: 773, column: 48, scope: !16701)
!16707 = !DILocation(line: 773, column: 39, scope: !16701)
!16708 = !DILocation(line: 773, column: 58, scope: !16701)
!16709 = !DILocation(line: 774, column: 43, scope: !16701)
!16710 = !DILocation(line: 773, column: 17, scope: !16688)
!16711 = !DILocation(line: 775, column: 17, scope: !16712)
!16712 = distinct !DILexicalBlock(scope: !16701, file: !1066, line: 774, column: 52)
!16713 = !DILocation(line: 777, column: 20, scope: !16688)
!16714 = !DILocation(line: 777, column: 26, scope: !16688)
!16715 = !DILocation(line: 777, column: 33, scope: !16688)
!16716 = !DILocation(line: 777, column: 43, scope: !16688)
!16717 = !DILocation(line: 777, column: 50, scope: !16688)
!16718 = !DILocation(line: 777, column: 41, scope: !16688)
!16719 = !DILocation(line: 777, column: 13, scope: !16688)
!16720 = !DILocation(line: 777, column: 61, scope: !16688)
!16721 = !DILocation(line: 780, column: 9, scope: !16629)
!16722 = !DILocation(line: 780, column: 15, scope: !16629)
!16723 = !DILocation(line: 780, column: 22, scope: !16629)
!16724 = !DILocation(line: 780, column: 32, scope: !16629)
!16725 = !DILocation(line: 780, column: 39, scope: !16629)
!16726 = !DILocation(line: 780, column: 30, scope: !16629)
!16727 = !DILocation(line: 780, column: 48, scope: !16629)
!16728 = !DILocation(line: 780, column: 53, scope: !16629)
!16729 = !DILocation(line: 781, column: 5, scope: !16629)
!16730 = !DILocation(line: 783, column: 14, scope: !16731)
!16731 = distinct !DILexicalBlock(scope: !16459, file: !1066, line: 783, column: 5)
!16732 = !DILocation(line: 783, column: 12, scope: !16731)
!16733 = !DILocation(line: 783, column: 10, scope: !16731)
!16734 = !DILocation(line: 783, column: 22, scope: !16735)
!16735 = distinct !DILexicalBlock(scope: !16731, file: !1066, line: 783, column: 5)
!16736 = !DILocation(line: 783, column: 20, scope: !16735)
!16737 = !DILocation(line: 783, column: 5, scope: !16731)
!16738 = !DILocation(line: 783, column: 5, scope: !16735)
!16739 = distinct !{!16739, !16737, !16740}
!16740 = !DILocation(line: 784, column: 9, scope: !16731)
!16741 = !DILocation(line: 785, column: 20, scope: !16459)
!16742 = !DILocation(line: 785, column: 24, scope: !16459)
!16743 = !DILocation(line: 785, column: 22, scope: !16459)
!16744 = !DILocation(line: 785, column: 9, scope: !16459)
!16745 = !DILocation(line: 786, column: 28, scope: !16459)
!16746 = !DILocation(line: 786, column: 5, scope: !16459)
!16747 = !DILocation(line: 786, column: 13, scope: !16459)
!16748 = !DILocation(line: 786, column: 25, scope: !16459)
!16749 = !DILocation(line: 787, column: 24, scope: !16750)
!16750 = distinct !DILexicalBlock(scope: !16459, file: !1066, line: 787, column: 9)
!16751 = !DILocation(line: 787, column: 17, scope: !16750)
!16752 = !DILocation(line: 787, column: 15, scope: !16750)
!16753 = !DILocation(line: 787, column: 30, scope: !16750)
!16754 = !DILocation(line: 787, column: 9, scope: !16459)
!16755 = !DILocation(line: 788, column: 20, scope: !16756)
!16756 = distinct !DILexicalBlock(scope: !16757, file: !1066, line: 788, column: 13)
!16757 = distinct !DILexicalBlock(scope: !16750, file: !1066, line: 787, column: 39)
!16758 = !DILocation(line: 788, column: 26, scope: !16756)
!16759 = !DILocation(line: 788, column: 32, scope: !16756)
!16760 = !DILocation(line: 788, column: 13, scope: !16756)
!16761 = !DILocation(line: 788, column: 13, scope: !16757)
!16762 = !DILocation(line: 789, column: 18, scope: !16763)
!16763 = distinct !DILexicalBlock(scope: !16756, file: !1066, line: 788, column: 38)
!16764 = !DILocation(line: 789, column: 13, scope: !16763)
!16765 = !DILocation(line: 790, column: 13, scope: !16763)
!16766 = !DILocation(line: 792, column: 53, scope: !16757)
!16767 = !DILocation(line: 792, column: 9, scope: !16757)
!16768 = !DILocation(line: 792, column: 15, scope: !16757)
!16769 = !DILocation(line: 792, column: 22, scope: !16757)
!16770 = !DILocation(line: 792, column: 32, scope: !16757)
!16771 = !DILocation(line: 792, column: 39, scope: !16757)
!16772 = !DILocation(line: 792, column: 47, scope: !16757)
!16773 = !DILocation(line: 792, column: 30, scope: !16757)
!16774 = !DILocation(line: 792, column: 51, scope: !16757)
!16775 = !DILocation(line: 793, column: 5, scope: !16757)
!16776 = !DILocation(line: 794, column: 5, scope: !16459)
!16777 = !DILocation(line: 794, column: 11, scope: !16459)
!16778 = !DILocation(line: 794, column: 18, scope: !16459)
!16779 = !DILocation(line: 794, column: 28, scope: !16459)
!16780 = !DILocation(line: 794, column: 35, scope: !16459)
!16781 = !DILocation(line: 794, column: 26, scope: !16459)
!16782 = !DILocation(line: 794, column: 45, scope: !16459)
!16783 = !DILocation(line: 796, column: 10, scope: !16784)
!16784 = distinct !DILexicalBlock(scope: !16459, file: !1066, line: 796, column: 9)
!16785 = !DILocation(line: 796, column: 15, scope: !16784)
!16786 = !DILocation(line: 796, column: 35, scope: !16784)
!16787 = !DILocation(line: 796, column: 43, scope: !16784)
!16788 = !DILocation(line: 796, column: 33, scope: !16784)
!16789 = !DILocation(line: 796, column: 55, scope: !16784)
!16790 = !DILocation(line: 796, column: 9, scope: !16459)
!16791 = !DILocation(line: 797, column: 9, scope: !16792)
!16792 = distinct !DILexicalBlock(scope: !16784, file: !1066, line: 796, column: 76)
!16793 = !DILocation(line: 797, column: 15, scope: !16792)
!16794 = !DILocation(line: 798, column: 9, scope: !16792)
!16795 = !DILocation(line: 796, column: 57, scope: !16784)
!16796 = !DILabel(scope: !16459, name: "copy_error", file: !1066, line: 800)
!16797 = !DILocation(line: 800, column: 1, scope: !16459)
!16798 = !DILocation(line: 801, column: 12, scope: !16459)
!16799 = !DILocation(line: 801, column: 17, scope: !16459)
!16800 = !DILocation(line: 801, column: 5, scope: !16459)
!16801 = !DILocation(line: 802, column: 1, scope: !16459)
!16802 = distinct !DISubprogram(name: "compare_gps", scope: !1066, file: !1066, line: 496, type: !16803, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1065, retainedNodes: !471)
!16803 = !DISubroutineType(types: !16804)
!16804 = !{!326, !6560, !6560}
!16805 = !DILocalVariable(name: "_p", arg: 1, scope: !16802, file: !1066, line: 496, type: !6560)
!16806 = !DILocation(line: 496, column: 25, scope: !16802)
!16807 = !DILocalVariable(name: "_q", arg: 2, scope: !16802, file: !1066, line: 496, type: !6560)
!16808 = !DILocation(line: 496, column: 41, scope: !16802)
!16809 = !DILocalVariable(name: "p", scope: !16802, file: !1066, line: 498, type: !1087)
!16810 = !DILocation(line: 498, column: 34, scope: !16802)
!16811 = !DILocation(line: 498, column: 69, scope: !16802)
!16812 = !DILocation(line: 498, column: 38, scope: !16802)
!16813 = !DILocalVariable(name: "q", scope: !16802, file: !1066, line: 499, type: !1087)
!16814 = !DILocation(line: 499, column: 34, scope: !16802)
!16815 = !DILocation(line: 499, column: 69, scope: !16802)
!16816 = !DILocation(line: 499, column: 38, scope: !16802)
!16817 = !DILocation(line: 501, column: 19, scope: !16802)
!16818 = !DILocation(line: 501, column: 22, scope: !16802)
!16819 = !DILocation(line: 501, column: 32, scope: !16802)
!16820 = !DILocation(line: 501, column: 35, scope: !16802)
!16821 = !DILocation(line: 501, column: 12, scope: !16802)
!16822 = !DILocation(line: 501, column: 5, scope: !16802)
!16823 = distinct !DISubprogram(name: "compare", scope: !1066, file: !1066, line: 490, type: !16803, scopeLine: 491, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1065, retainedNodes: !471)
!16824 = !DILocalVariable(name: "p", arg: 1, scope: !16823, file: !1066, line: 490, type: !6560)
!16825 = !DILocation(line: 490, column: 21, scope: !16823)
!16826 = !DILocalVariable(name: "q", arg: 2, scope: !16823, file: !1066, line: 490, type: !6560)
!16827 = !DILocation(line: 490, column: 36, scope: !16823)
!16828 = !DILocation(line: 492, column: 29, scope: !16823)
!16829 = !DILocation(line: 492, column: 20, scope: !16823)
!16830 = !DILocation(line: 492, column: 19, scope: !16823)
!16831 = !DILocation(line: 492, column: 42, scope: !16823)
!16832 = !DILocation(line: 492, column: 33, scope: !16823)
!16833 = !DILocation(line: 492, column: 32, scope: !16823)
!16834 = !DILocation(line: 492, column: 12, scope: !16823)
!16835 = !DILocation(line: 492, column: 5, scope: !16823)
!16836 = distinct !DISubprogram(name: "g_Ctoc", scope: !1066, file: !1066, line: 955, type: !16837, scopeLine: 956, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1065, retainedNodes: !471)
!16837 = !DISubroutineType(types: !16838)
!16838 = !{!326, !1068, !308, !7}
!16839 = !DILocalVariable(name: "str", arg: 1, scope: !16836, file: !1066, line: 955, type: !1068)
!16840 = !DILocation(line: 955, column: 20, scope: !16836)
!16841 = !DILocalVariable(name: "buf", arg: 2, scope: !16836, file: !1066, line: 955, type: !308)
!16842 = !DILocation(line: 955, column: 31, scope: !16836)
!16843 = !DILocalVariable(name: "len", arg: 3, scope: !16836, file: !1066, line: 955, type: !7)
!16844 = !DILocation(line: 955, column: 49, scope: !16836)
!16845 = !DILocation(line: 957, column: 5, scope: !16836)
!16846 = !DILocation(line: 957, column: 15, scope: !16836)
!16847 = !DILocation(line: 958, column: 27, scope: !16848)
!16848 = distinct !DILexicalBlock(scope: !16849, file: !1066, line: 958, column: 13)
!16849 = distinct !DILexicalBlock(scope: !16836, file: !1066, line: 957, column: 19)
!16850 = !DILocation(line: 958, column: 23, scope: !16848)
!16851 = !DILocation(line: 958, column: 18, scope: !16848)
!16852 = !DILocation(line: 958, column: 21, scope: !16848)
!16853 = !DILocation(line: 958, column: 13, scope: !16848)
!16854 = !DILocation(line: 958, column: 31, scope: !16848)
!16855 = !DILocation(line: 958, column: 13, scope: !16849)
!16856 = !DILocation(line: 959, column: 13, scope: !16857)
!16857 = distinct !DILexicalBlock(scope: !16848, file: !1066, line: 958, column: 39)
!16858 = distinct !{!16858, !16845, !16859}
!16859 = !DILocation(line: 961, column: 5, scope: !16836)
!16860 = !DILocation(line: 962, column: 5, scope: !16836)
!16861 = !DILocation(line: 963, column: 1, scope: !16836)
!16862 = distinct !DISubprogram(name: "glob2", scope: !1066, file: !1066, line: 525, type: !16863, scopeLine: 528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1065, retainedNodes: !471)
!16863 = !DISubroutineType(types: !16864)
!16864 = !{!326, !1071, !1071, !1071, !1071, !1071, !1071, !15750, !16022, !326}
!16865 = !DILocalVariable(name: "pathbuf", arg: 1, scope: !16862, file: !1066, line: 525, type: !1071)
!16866 = !DILocation(line: 525, column: 13, scope: !16862)
!16867 = !DILocalVariable(name: "pathbuf_last", arg: 2, scope: !16862, file: !1066, line: 525, type: !1071)
!16868 = !DILocation(line: 525, column: 28, scope: !16862)
!16869 = !DILocalVariable(name: "pathend", arg: 3, scope: !16862, file: !1066, line: 525, type: !1071)
!16870 = !DILocation(line: 525, column: 48, scope: !16862)
!16871 = !DILocalVariable(name: "pathend_last", arg: 4, scope: !16862, file: !1066, line: 525, type: !1071)
!16872 = !DILocation(line: 525, column: 63, scope: !16862)
!16873 = !DILocalVariable(name: "pattern", arg: 5, scope: !16862, file: !1066, line: 526, type: !1071)
!16874 = !DILocation(line: 526, column: 13, scope: !16862)
!16875 = !DILocalVariable(name: "pattern_last", arg: 6, scope: !16862, file: !1066, line: 526, type: !1071)
!16876 = !DILocation(line: 526, column: 28, scope: !16862)
!16877 = !DILocalVariable(name: "pglob", arg: 7, scope: !16862, file: !1066, line: 526, type: !15750)
!16878 = !DILocation(line: 526, column: 50, scope: !16862)
!16879 = !DILocalVariable(name: "limitp", arg: 8, scope: !16862, file: !1066, line: 526, type: !16022)
!16880 = !DILocation(line: 526, column: 74, scope: !16862)
!16881 = !DILocalVariable(name: "recursion", arg: 9, scope: !16862, file: !1066, line: 527, type: !326)
!16882 = !DILocation(line: 527, column: 11, scope: !16862)
!16883 = !DILocalVariable(name: "sb", scope: !16862, file: !1066, line: 529, type: !1094)
!16884 = !DILocation(line: 529, column: 17, scope: !16862)
!16885 = !DILocalVariable(name: "p", scope: !16862, file: !1066, line: 530, type: !1071)
!16886 = !DILocation(line: 530, column: 11, scope: !16862)
!16887 = !DILocalVariable(name: "q", scope: !16862, file: !1066, line: 530, type: !1071)
!16888 = !DILocation(line: 530, column: 15, scope: !16862)
!16889 = !DILocalVariable(name: "anymeta", scope: !16862, file: !1066, line: 531, type: !326)
!16890 = !DILocation(line: 531, column: 9, scope: !16862)
!16891 = !DILocation(line: 537, column: 18, scope: !16892)
!16892 = distinct !DILexicalBlock(scope: !16862, file: !1066, line: 537, column: 5)
!16893 = !DILocation(line: 537, column: 10, scope: !16892)
!16894 = !DILocation(line: 538, column: 14, scope: !16895)
!16895 = distinct !DILexicalBlock(scope: !16896, file: !1066, line: 538, column: 13)
!16896 = distinct !DILexicalBlock(scope: !16897, file: !1066, line: 537, column: 25)
!16897 = distinct !DILexicalBlock(scope: !16892, file: !1066, line: 537, column: 5)
!16898 = !DILocation(line: 538, column: 13, scope: !16895)
!16899 = !DILocation(line: 538, column: 22, scope: !16895)
!16900 = !DILocation(line: 538, column: 13, scope: !16896)
!16901 = !DILocation(line: 539, column: 14, scope: !16902)
!16902 = distinct !DILexicalBlock(scope: !16895, file: !1066, line: 538, column: 30)
!16903 = !DILocation(line: 539, column: 22, scope: !16902)
!16904 = !DILocation(line: 540, column: 17, scope: !16905)
!16905 = distinct !DILexicalBlock(scope: !16902, file: !1066, line: 540, column: 17)
!16906 = !DILocation(line: 540, column: 25, scope: !16905)
!16907 = !DILocation(line: 540, column: 34, scope: !16905)
!16908 = !DILocation(line: 540, column: 40, scope: !16905)
!16909 = !DILocation(line: 540, column: 47, scope: !16905)
!16910 = !DILocation(line: 540, column: 37, scope: !16905)
!16911 = !DILocation(line: 540, column: 17, scope: !16902)
!16912 = !DILocation(line: 541, column: 17, scope: !16913)
!16913 = distinct !DILexicalBlock(scope: !16905, file: !1066, line: 540, column: 60)
!16914 = !DILocation(line: 541, column: 23, scope: !16913)
!16915 = !DILocation(line: 542, column: 25, scope: !16913)
!16916 = !DILocation(line: 542, column: 28, scope: !16913)
!16917 = !DILocation(line: 543, column: 18, scope: !16913)
!16918 = !DILocation(line: 543, column: 26, scope: !16913)
!16919 = !DILocation(line: 544, column: 17, scope: !16913)
!16920 = !DILocation(line: 546, column: 25, scope: !16921)
!16921 = distinct !DILexicalBlock(scope: !16902, file: !1066, line: 546, column: 17)
!16922 = !DILocation(line: 546, column: 39, scope: !16921)
!16923 = !DILocation(line: 546, column: 17, scope: !16921)
!16924 = !DILocation(line: 546, column: 17, scope: !16902)
!16925 = !DILocation(line: 547, column: 17, scope: !16926)
!16926 = distinct !DILexicalBlock(scope: !16921, file: !1066, line: 546, column: 47)
!16927 = !DILocation(line: 549, column: 19, scope: !16928)
!16928 = distinct !DILexicalBlock(scope: !16902, file: !1066, line: 549, column: 17)
!16929 = !DILocation(line: 549, column: 26, scope: !16928)
!16930 = !DILocation(line: 549, column: 35, scope: !16928)
!16931 = !DILocation(line: 549, column: 48, scope: !16928)
!16932 = !DILocation(line: 550, column: 18, scope: !16928)
!16933 = !DILocation(line: 550, column: 30, scope: !16928)
!16934 = !DILocation(line: 550, column: 38, scope: !16928)
!16935 = !DILocation(line: 551, column: 18, scope: !16928)
!16936 = !DILocation(line: 551, column: 38, scope: !16928)
!16937 = !DILocation(line: 552, column: 22, scope: !16928)
!16938 = !DILocation(line: 552, column: 42, scope: !16928)
!16939 = !DILocation(line: 553, column: 33, scope: !16928)
!16940 = !DILocation(line: 553, column: 47, scope: !16928)
!16941 = !DILocation(line: 553, column: 26, scope: !16928)
!16942 = !DILocation(line: 553, column: 54, scope: !16928)
!16943 = !DILocation(line: 553, column: 60, scope: !16928)
!16944 = !DILocation(line: 554, column: 25, scope: !16928)
!16945 = !DILocation(line: 549, column: 17, scope: !16902)
!16946 = !DILocation(line: 555, column: 21, scope: !16947)
!16947 = distinct !DILexicalBlock(scope: !16948, file: !1066, line: 555, column: 21)
!16948 = distinct !DILexicalBlock(scope: !16928, file: !1066, line: 554, column: 48)
!16949 = !DILocation(line: 555, column: 29, scope: !16947)
!16950 = !DILocation(line: 555, column: 35, scope: !16947)
!16951 = !DILocation(line: 555, column: 33, scope: !16947)
!16952 = !DILocation(line: 555, column: 21, scope: !16948)
!16953 = !DILocation(line: 556, column: 21, scope: !16954)
!16954 = distinct !DILexicalBlock(scope: !16947, file: !1066, line: 555, column: 49)
!16955 = !DILocation(line: 558, column: 25, scope: !16948)
!16956 = !DILocation(line: 558, column: 28, scope: !16948)
!16957 = !DILocation(line: 559, column: 18, scope: !16948)
!16958 = !DILocation(line: 559, column: 26, scope: !16948)
!16959 = !DILocation(line: 560, column: 13, scope: !16948)
!16960 = !DILocation(line: 561, column: 15, scope: !16902)
!16961 = !DILocation(line: 561, column: 22, scope: !16902)
!16962 = !DILocation(line: 561, column: 13, scope: !16902)
!16963 = !DILocation(line: 562, column: 31, scope: !16902)
!16964 = !DILocation(line: 562, column: 40, scope: !16902)
!16965 = !DILocation(line: 562, column: 47, scope: !16902)
!16966 = !DILocation(line: 562, column: 20, scope: !16902)
!16967 = !DILocation(line: 562, column: 13, scope: !16902)
!16968 = !DILocation(line: 566, column: 13, scope: !16896)
!16969 = !DILocation(line: 566, column: 11, scope: !16896)
!16970 = !DILocation(line: 567, column: 13, scope: !16896)
!16971 = !DILocation(line: 567, column: 11, scope: !16896)
!16972 = !DILocation(line: 568, column: 9, scope: !16896)
!16973 = !DILocation(line: 568, column: 17, scope: !16896)
!16974 = !DILocation(line: 568, column: 16, scope: !16896)
!16975 = !DILocation(line: 568, column: 19, scope: !16896)
!16976 = !DILocation(line: 568, column: 26, scope: !16896)
!16977 = !DILocation(line: 568, column: 30, scope: !16896)
!16978 = !DILocation(line: 568, column: 29, scope: !16896)
!16979 = !DILocation(line: 568, column: 32, scope: !16896)
!16980 = !DILocation(line: 0, scope: !16896)
!16981 = !DILocation(line: 569, column: 17, scope: !16982)
!16982 = distinct !DILexicalBlock(scope: !16983, file: !1066, line: 569, column: 17)
!16983 = distinct !DILexicalBlock(scope: !16896, file: !1066, line: 568, column: 40)
!16984 = !DILocation(line: 569, column: 17, scope: !16983)
!16985 = !DILocation(line: 570, column: 25, scope: !16986)
!16986 = distinct !DILexicalBlock(scope: !16982, file: !1066, line: 569, column: 29)
!16987 = !DILocation(line: 571, column: 13, scope: !16986)
!16988 = !DILocation(line: 572, column: 17, scope: !16989)
!16989 = distinct !DILexicalBlock(scope: !16983, file: !1066, line: 572, column: 17)
!16990 = !DILocation(line: 572, column: 19, scope: !16989)
!16991 = !DILocation(line: 572, column: 25, scope: !16989)
!16992 = !DILocation(line: 572, column: 23, scope: !16989)
!16993 = !DILocation(line: 572, column: 17, scope: !16983)
!16994 = !DILocation(line: 573, column: 17, scope: !16995)
!16995 = distinct !DILexicalBlock(scope: !16989, file: !1066, line: 572, column: 39)
!16996 = !DILocation(line: 575, column: 22, scope: !16983)
!16997 = !DILocation(line: 575, column: 20, scope: !16983)
!16998 = !DILocation(line: 575, column: 15, scope: !16983)
!16999 = !DILocation(line: 575, column: 18, scope: !16983)
!17000 = distinct !{!17000, !16972, !17001}
!17001 = !DILocation(line: 576, column: 9, scope: !16896)
!17002 = !DILocation(line: 578, column: 14, scope: !17003)
!17003 = distinct !DILexicalBlock(scope: !16896, file: !1066, line: 578, column: 13)
!17004 = !DILocation(line: 578, column: 13, scope: !16896)
!17005 = !DILocation(line: 579, column: 23, scope: !17006)
!17006 = distinct !DILexicalBlock(scope: !17003, file: !1066, line: 578, column: 23)
!17007 = !DILocation(line: 579, column: 21, scope: !17006)
!17008 = !DILocation(line: 580, column: 23, scope: !17006)
!17009 = !DILocation(line: 580, column: 21, scope: !17006)
!17010 = !DILocation(line: 581, column: 13, scope: !17006)
!17011 = !DILocation(line: 581, column: 21, scope: !17006)
!17012 = !DILocation(line: 581, column: 20, scope: !17006)
!17013 = !DILocation(line: 581, column: 29, scope: !17006)
!17014 = !DILocation(line: 582, column: 21, scope: !17015)
!17015 = distinct !DILexicalBlock(scope: !17016, file: !1066, line: 582, column: 21)
!17016 = distinct !DILexicalBlock(scope: !17006, file: !1066, line: 581, column: 37)
!17017 = !DILocation(line: 582, column: 29, scope: !17015)
!17018 = !DILocation(line: 582, column: 35, scope: !17015)
!17019 = !DILocation(line: 582, column: 33, scope: !17015)
!17020 = !DILocation(line: 582, column: 21, scope: !17016)
!17021 = !DILocation(line: 583, column: 21, scope: !17022)
!17022 = distinct !DILexicalBlock(scope: !17015, file: !1066, line: 582, column: 49)
!17023 = !DILocation(line: 585, column: 38, scope: !17016)
!17024 = !DILocation(line: 585, column: 30, scope: !17016)
!17025 = !DILocation(line: 585, column: 25, scope: !17016)
!17026 = !DILocation(line: 585, column: 28, scope: !17016)
!17027 = distinct !{!17027, !17010, !17028}
!17028 = !DILocation(line: 586, column: 13, scope: !17006)
!17029 = !DILocation(line: 587, column: 9, scope: !17006)
!17030 = !DILocation(line: 589, column: 26, scope: !17031)
!17031 = distinct !DILexicalBlock(scope: !17003, file: !1066, line: 587, column: 16)
!17032 = !DILocation(line: 589, column: 35, scope: !17031)
!17033 = !DILocation(line: 589, column: 49, scope: !17031)
!17034 = !DILocation(line: 590, column: 26, scope: !17031)
!17035 = !DILocation(line: 590, column: 40, scope: !17031)
!17036 = !DILocation(line: 590, column: 49, scope: !17031)
!17037 = !DILocation(line: 590, column: 52, scope: !17031)
!17038 = !DILocation(line: 591, column: 26, scope: !17031)
!17039 = !DILocation(line: 591, column: 33, scope: !17031)
!17040 = !DILocation(line: 591, column: 41, scope: !17031)
!17041 = !DILocation(line: 591, column: 51, scope: !17031)
!17042 = !DILocation(line: 589, column: 20, scope: !17031)
!17043 = !DILocation(line: 589, column: 13, scope: !17031)
!17044 = !DILocation(line: 537, column: 5, scope: !16897)
!17045 = distinct !{!17045, !17046, !17047}
!17046 = !DILocation(line: 537, column: 5, scope: !16892)
!17047 = !DILocation(line: 593, column: 5, scope: !16892)
!17048 = !DILocation(line: 595, column: 1, scope: !16862)
!17049 = distinct !DISubprogram(name: "g_lstat", scope: !1066, file: !1066, line: 916, type: !17050, scopeLine: 917, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1065, retainedNodes: !471)
!17050 = !DISubroutineType(types: !17051)
!17051 = !{!326, !1071, !1093, !15750}
!17052 = !DILocalVariable(name: "fn", arg: 1, scope: !17049, file: !1066, line: 916, type: !1071)
!17053 = !DILocation(line: 916, column: 15, scope: !17049)
!17054 = !DILocalVariable(name: "sb", arg: 2, scope: !17049, file: !1066, line: 916, type: !1093)
!17055 = !DILocation(line: 916, column: 32, scope: !17049)
!17056 = !DILocalVariable(name: "pglob", arg: 3, scope: !17049, file: !1066, line: 916, type: !15750)
!17057 = !DILocation(line: 916, column: 44, scope: !17049)
!17058 = !DILocalVariable(name: "buf", scope: !17049, file: !1066, line: 918, type: !741)
!17059 = !DILocation(line: 918, column: 10, scope: !17049)
!17060 = !DILocation(line: 920, column: 16, scope: !17061)
!17061 = distinct !DILexicalBlock(scope: !17049, file: !1066, line: 920, column: 9)
!17062 = !DILocation(line: 920, column: 20, scope: !17061)
!17063 = !DILocation(line: 920, column: 9, scope: !17061)
!17064 = !DILocation(line: 920, column: 9, scope: !17049)
!17065 = !DILocation(line: 921, column: 9, scope: !17066)
!17066 = distinct !DILexicalBlock(scope: !17061, file: !1066, line: 920, column: 39)
!17067 = !DILocation(line: 923, column: 9, scope: !17068)
!17068 = distinct !DILexicalBlock(scope: !17049, file: !1066, line: 923, column: 9)
!17069 = !DILocation(line: 923, column: 16, scope: !17068)
!17070 = !DILocation(line: 923, column: 25, scope: !17068)
!17071 = !DILocation(line: 923, column: 9, scope: !17049)
!17072 = !DILocation(line: 924, column: 18, scope: !17073)
!17073 = distinct !DILexicalBlock(scope: !17068, file: !1066, line: 923, column: 44)
!17074 = !DILocation(line: 924, column: 25, scope: !17073)
!17075 = !DILocation(line: 924, column: 35, scope: !17073)
!17076 = !DILocation(line: 924, column: 40, scope: !17073)
!17077 = !DILocation(line: 924, column: 16, scope: !17073)
!17078 = !DILocation(line: 924, column: 9, scope: !17073)
!17079 = !DILocation(line: 926, column: 18, scope: !17049)
!17080 = !DILocation(line: 926, column: 23, scope: !17049)
!17081 = !DILocation(line: 926, column: 12, scope: !17049)
!17082 = !DILocation(line: 926, column: 5, scope: !17049)
!17083 = !DILocation(line: 927, column: 1, scope: !17049)
!17084 = distinct !DISubprogram(name: "g_stat", scope: !1066, file: !1066, line: 930, type: !17050, scopeLine: 931, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1065, retainedNodes: !471)
!17085 = !DILocalVariable(name: "fn", arg: 1, scope: !17084, file: !1066, line: 930, type: !1071)
!17086 = !DILocation(line: 930, column: 14, scope: !17084)
!17087 = !DILocalVariable(name: "sb", arg: 2, scope: !17084, file: !1066, line: 930, type: !1093)
!17088 = !DILocation(line: 930, column: 31, scope: !17084)
!17089 = !DILocalVariable(name: "pglob", arg: 3, scope: !17084, file: !1066, line: 930, type: !15750)
!17090 = !DILocation(line: 930, column: 43, scope: !17084)
!17091 = !DILocalVariable(name: "buf", scope: !17084, file: !1066, line: 932, type: !741)
!17092 = !DILocation(line: 932, column: 10, scope: !17084)
!17093 = !DILocation(line: 934, column: 16, scope: !17094)
!17094 = distinct !DILexicalBlock(scope: !17084, file: !1066, line: 934, column: 9)
!17095 = !DILocation(line: 934, column: 20, scope: !17094)
!17096 = !DILocation(line: 934, column: 9, scope: !17094)
!17097 = !DILocation(line: 934, column: 9, scope: !17084)
!17098 = !DILocation(line: 935, column: 9, scope: !17099)
!17099 = distinct !DILexicalBlock(scope: !17094, file: !1066, line: 934, column: 39)
!17100 = !DILocation(line: 937, column: 9, scope: !17101)
!17101 = distinct !DILexicalBlock(scope: !17084, file: !1066, line: 937, column: 9)
!17102 = !DILocation(line: 937, column: 16, scope: !17101)
!17103 = !DILocation(line: 937, column: 25, scope: !17101)
!17104 = !DILocation(line: 937, column: 9, scope: !17084)
!17105 = !DILocation(line: 938, column: 18, scope: !17106)
!17106 = distinct !DILexicalBlock(scope: !17101, file: !1066, line: 937, column: 44)
!17107 = !DILocation(line: 938, column: 25, scope: !17106)
!17108 = !DILocation(line: 938, column: 34, scope: !17106)
!17109 = !DILocation(line: 938, column: 39, scope: !17106)
!17110 = !DILocation(line: 938, column: 16, scope: !17106)
!17111 = !DILocation(line: 938, column: 9, scope: !17106)
!17112 = !DILocation(line: 940, column: 17, scope: !17084)
!17113 = !DILocation(line: 940, column: 22, scope: !17084)
!17114 = !DILocation(line: 940, column: 12, scope: !17084)
!17115 = !DILocation(line: 940, column: 5, scope: !17084)
!17116 = !DILocation(line: 941, column: 1, scope: !17084)
!17117 = distinct !DISubprogram(name: "glob3", scope: !1066, file: !1066, line: 598, type: !17118, scopeLine: 601, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1065, retainedNodes: !471)
!17118 = !DISubroutineType(types: !17119)
!17119 = !{!326, !1071, !1071, !1071, !1071, !1071, !1071, !1071, !15750, !16022, !326}
!17120 = !DILocalVariable(name: "pathbuf", arg: 1, scope: !17117, file: !1066, line: 598, type: !1071)
!17121 = !DILocation(line: 598, column: 13, scope: !17117)
!17122 = !DILocalVariable(name: "pathbuf_last", arg: 2, scope: !17117, file: !1066, line: 598, type: !1071)
!17123 = !DILocation(line: 598, column: 28, scope: !17117)
!17124 = !DILocalVariable(name: "pathend", arg: 3, scope: !17117, file: !1066, line: 598, type: !1071)
!17125 = !DILocation(line: 598, column: 48, scope: !17117)
!17126 = !DILocalVariable(name: "pathend_last", arg: 4, scope: !17117, file: !1066, line: 598, type: !1071)
!17127 = !DILocation(line: 598, column: 63, scope: !17117)
!17128 = !DILocalVariable(name: "pattern", arg: 5, scope: !17117, file: !1066, line: 599, type: !1071)
!17129 = !DILocation(line: 599, column: 13, scope: !17117)
!17130 = !DILocalVariable(name: "restpattern", arg: 6, scope: !17117, file: !1066, line: 599, type: !1071)
!17131 = !DILocation(line: 599, column: 28, scope: !17117)
!17132 = !DILocalVariable(name: "restpattern_last", arg: 7, scope: !17117, file: !1066, line: 599, type: !1071)
!17133 = !DILocation(line: 599, column: 47, scope: !17117)
!17134 = !DILocalVariable(name: "pglob", arg: 8, scope: !17117, file: !1066, line: 599, type: !15750)
!17135 = !DILocation(line: 599, column: 73, scope: !17117)
!17136 = !DILocalVariable(name: "limitp", arg: 9, scope: !17117, file: !1066, line: 600, type: !16022)
!17137 = !DILocation(line: 600, column: 24, scope: !17117)
!17138 = !DILocalVariable(name: "recursion", arg: 10, scope: !17117, file: !1066, line: 600, type: !326)
!17139 = !DILocation(line: 600, column: 36, scope: !17117)
!17140 = !DILocalVariable(name: "dp", scope: !17117, file: !1066, line: 602, type: !1075)
!17141 = !DILocation(line: 602, column: 20, scope: !17117)
!17142 = !DILocalVariable(name: "dirp", scope: !17117, file: !1066, line: 603, type: !13272)
!17143 = !DILocation(line: 603, column: 10, scope: !17117)
!17144 = !DILocalVariable(name: "err", scope: !17117, file: !1066, line: 604, type: !326)
!17145 = !DILocation(line: 604, column: 9, scope: !17117)
!17146 = !DILocalVariable(name: "buf", scope: !17117, file: !1066, line: 605, type: !741)
!17147 = !DILocation(line: 605, column: 10, scope: !17117)
!17148 = !DILocalVariable(name: "readdirfunc", scope: !17117, file: !1066, line: 613, type: !1072)
!17149 = !DILocation(line: 613, column: 22, scope: !17117)
!17150 = !DILocation(line: 615, column: 9, scope: !17151)
!17151 = distinct !DILexicalBlock(scope: !17117, file: !1066, line: 615, column: 9)
!17152 = !DILocation(line: 615, column: 19, scope: !17151)
!17153 = !DILocation(line: 615, column: 17, scope: !17151)
!17154 = !DILocation(line: 615, column: 9, scope: !17117)
!17155 = !DILocation(line: 616, column: 9, scope: !17156)
!17156 = distinct !DILexicalBlock(scope: !17151, file: !1066, line: 615, column: 33)
!17157 = !DILocation(line: 618, column: 6, scope: !17117)
!17158 = !DILocation(line: 618, column: 14, scope: !17117)
!17159 = !DILocation(line: 619, column: 5, scope: !17117)
!17160 = !DILocation(line: 619, column: 11, scope: !17117)
!17161 = !DILocation(line: 621, column: 9, scope: !17162)
!17162 = distinct !DILexicalBlock(scope: !17117, file: !1066, line: 621, column: 9)
!17163 = !DILocation(line: 621, column: 22, scope: !17162)
!17164 = !DILocation(line: 621, column: 29, scope: !17162)
!17165 = !DILocation(line: 621, column: 19, scope: !17162)
!17166 = !DILocation(line: 621, column: 9, scope: !17117)
!17167 = !DILocation(line: 622, column: 9, scope: !17168)
!17168 = distinct !DILexicalBlock(scope: !17162, file: !1066, line: 621, column: 42)
!17169 = !DILocation(line: 624, column: 27, scope: !17170)
!17170 = distinct !DILexicalBlock(scope: !17117, file: !1066, line: 624, column: 9)
!17171 = !DILocation(line: 624, column: 36, scope: !17170)
!17172 = !DILocation(line: 624, column: 17, scope: !17170)
!17173 = !DILocation(line: 624, column: 15, scope: !17170)
!17174 = !DILocation(line: 624, column: 44, scope: !17170)
!17175 = !DILocation(line: 624, column: 9, scope: !17117)
!17176 = !DILocation(line: 626, column: 13, scope: !17177)
!17177 = distinct !DILexicalBlock(scope: !17178, file: !1066, line: 626, column: 13)
!17178 = distinct !DILexicalBlock(scope: !17170, file: !1066, line: 624, column: 53)
!17179 = !DILocation(line: 626, column: 20, scope: !17177)
!17180 = !DILocation(line: 626, column: 13, scope: !17178)
!17181 = !DILocation(line: 627, column: 24, scope: !17182)
!17182 = distinct !DILexicalBlock(scope: !17183, file: !1066, line: 627, column: 17)
!17183 = distinct !DILexicalBlock(scope: !17177, file: !1066, line: 626, column: 32)
!17184 = !DILocation(line: 627, column: 33, scope: !17182)
!17185 = !DILocation(line: 627, column: 17, scope: !17182)
!17186 = !DILocation(line: 627, column: 17, scope: !17183)
!17187 = !DILocation(line: 628, column: 17, scope: !17188)
!17188 = distinct !DILexicalBlock(scope: !17182, file: !1066, line: 627, column: 52)
!17189 = !DILocation(line: 630, column: 17, scope: !17190)
!17190 = distinct !DILexicalBlock(scope: !17183, file: !1066, line: 630, column: 17)
!17191 = !DILocation(line: 630, column: 24, scope: !17190)
!17192 = !DILocation(line: 630, column: 35, scope: !17190)
!17193 = !DILocation(line: 630, column: 40, scope: !17190)
!17194 = !DILocation(line: 630, column: 47, scope: !17190)
!17195 = !DILocation(line: 631, column: 17, scope: !17190)
!17196 = !DILocation(line: 631, column: 24, scope: !17190)
!17197 = !DILocation(line: 631, column: 33, scope: !17190)
!17198 = !DILocation(line: 630, column: 17, scope: !17183)
!17199 = !DILocation(line: 632, column: 17, scope: !17200)
!17200 = distinct !DILexicalBlock(scope: !17190, file: !1066, line: 631, column: 45)
!17201 = !DILocation(line: 634, column: 9, scope: !17183)
!17202 = !DILocation(line: 635, column: 9, scope: !17178)
!17203 = !DILocation(line: 638, column: 9, scope: !17117)
!17204 = !DILocation(line: 641, column: 9, scope: !17205)
!17205 = distinct !DILexicalBlock(scope: !17117, file: !1066, line: 641, column: 9)
!17206 = !DILocation(line: 641, column: 16, scope: !17205)
!17207 = !DILocation(line: 641, column: 25, scope: !17205)
!17208 = !DILocation(line: 641, column: 9, scope: !17117)
!17209 = !DILocation(line: 642, column: 23, scope: !17210)
!17210 = distinct !DILexicalBlock(scope: !17205, file: !1066, line: 641, column: 44)
!17211 = !DILocation(line: 642, column: 30, scope: !17210)
!17212 = !DILocation(line: 642, column: 21, scope: !17210)
!17213 = !DILocation(line: 643, column: 5, scope: !17210)
!17214 = !DILocation(line: 644, column: 21, scope: !17215)
!17215 = distinct !DILexicalBlock(scope: !17205, file: !1066, line: 643, column: 12)
!17216 = !DILocation(line: 646, column: 5, scope: !17117)
!17217 = !DILocation(line: 646, column: 20, scope: !17117)
!17218 = !DILocation(line: 646, column: 33, scope: !17117)
!17219 = !DILocation(line: 646, column: 18, scope: !17117)
!17220 = !DILocation(line: 646, column: 16, scope: !17117)
!17221 = !DILocalVariable(name: "sc", scope: !17222, file: !1066, line: 647, type: !382)
!17222 = distinct !DILexicalBlock(scope: !17117, file: !1066, line: 646, column: 41)
!17223 = !DILocation(line: 647, column: 24, scope: !17222)
!17224 = !DILocalVariable(name: "dc", scope: !17222, file: !1066, line: 648, type: !1071)
!17225 = !DILocation(line: 648, column: 15, scope: !17222)
!17226 = !DILocation(line: 650, column: 13, scope: !17227)
!17227 = distinct !DILexicalBlock(scope: !17222, file: !1066, line: 650, column: 13)
!17228 = !DILocation(line: 650, column: 21, scope: !17227)
!17229 = !DILocation(line: 650, column: 33, scope: !17227)
!17230 = !DILocation(line: 650, column: 39, scope: !17227)
!17231 = !DILocation(line: 650, column: 46, scope: !17227)
!17232 = !DILocation(line: 650, column: 36, scope: !17227)
!17233 = !DILocation(line: 650, column: 13, scope: !17222)
!17234 = !DILocation(line: 651, column: 13, scope: !17235)
!17235 = distinct !DILexicalBlock(scope: !17227, file: !1066, line: 650, column: 59)
!17236 = !DILocation(line: 651, column: 19, scope: !17235)
!17237 = !DILocation(line: 652, column: 21, scope: !17235)
!17238 = !DILocation(line: 652, column: 24, scope: !17235)
!17239 = !DILocation(line: 653, column: 14, scope: !17235)
!17240 = !DILocation(line: 653, column: 22, scope: !17235)
!17241 = !DILocation(line: 654, column: 17, scope: !17235)
!17242 = !DILocation(line: 655, column: 13, scope: !17235)
!17243 = !DILocation(line: 659, column: 13, scope: !17244)
!17244 = distinct !DILexicalBlock(scope: !17222, file: !1066, line: 659, column: 13)
!17245 = !DILocation(line: 659, column: 17, scope: !17244)
!17246 = !DILocation(line: 659, column: 27, scope: !17244)
!17247 = !DILocation(line: 659, column: 34, scope: !17244)
!17248 = !DILocation(line: 659, column: 38, scope: !17244)
!17249 = !DILocation(line: 659, column: 37, scope: !17244)
!17250 = !DILocation(line: 659, column: 46, scope: !17244)
!17251 = !DILocation(line: 659, column: 13, scope: !17222)
!17252 = !DILocation(line: 660, column: 13, scope: !17253)
!17253 = distinct !DILexicalBlock(scope: !17244, file: !1066, line: 659, column: 54)
!17254 = distinct !{!17254, !17216, !17255}
!17255 = !DILocation(line: 681, column: 5, scope: !17117)
!17256 = !DILocation(line: 662, column: 14, scope: !17222)
!17257 = !DILocation(line: 662, column: 12, scope: !17222)
!17258 = !DILocation(line: 663, column: 32, scope: !17222)
!17259 = !DILocation(line: 663, column: 36, scope: !17222)
!17260 = !DILocation(line: 663, column: 12, scope: !17222)
!17261 = !DILocation(line: 664, column: 9, scope: !17222)
!17262 = !DILocation(line: 664, column: 16, scope: !17222)
!17263 = !DILocation(line: 664, column: 21, scope: !17222)
!17264 = !DILocation(line: 664, column: 19, scope: !17222)
!17265 = !DILocation(line: 664, column: 34, scope: !17222)
!17266 = !DILocation(line: 664, column: 49, scope: !17222)
!17267 = !DILocation(line: 664, column: 46, scope: !17222)
!17268 = !DILocation(line: 664, column: 41, scope: !17222)
!17269 = !DILocation(line: 664, column: 44, scope: !17222)
!17270 = !DILocation(line: 664, column: 37, scope: !17222)
!17271 = !DILocation(line: 664, column: 53, scope: !17222)
!17272 = !DILocation(line: 0, scope: !17222)
!17273 = distinct !{!17273, !17261, !17274}
!17274 = !DILocation(line: 665, column: 13, scope: !17222)
!17275 = !DILocation(line: 666, column: 13, scope: !17276)
!17276 = distinct !DILexicalBlock(scope: !17222, file: !1066, line: 666, column: 13)
!17277 = !DILocation(line: 666, column: 19, scope: !17276)
!17278 = !DILocation(line: 666, column: 16, scope: !17276)
!17279 = !DILocation(line: 666, column: 13, scope: !17222)
!17280 = !DILocation(line: 667, column: 14, scope: !17281)
!17281 = distinct !DILexicalBlock(scope: !17276, file: !1066, line: 666, column: 33)
!17282 = !DILocation(line: 667, column: 17, scope: !17281)
!17283 = !DILocation(line: 668, column: 17, scope: !17281)
!17284 = !DILocation(line: 669, column: 13, scope: !17281)
!17285 = !DILocation(line: 672, column: 20, scope: !17286)
!17286 = distinct !DILexicalBlock(scope: !17222, file: !1066, line: 672, column: 13)
!17287 = !DILocation(line: 672, column: 29, scope: !17286)
!17288 = !DILocation(line: 672, column: 38, scope: !17286)
!17289 = !DILocation(line: 672, column: 51, scope: !17286)
!17290 = !DILocation(line: 672, column: 58, scope: !17286)
!17291 = !DILocation(line: 672, column: 14, scope: !17286)
!17292 = !DILocation(line: 672, column: 13, scope: !17222)
!17293 = !DILocation(line: 673, column: 14, scope: !17294)
!17294 = distinct !DILexicalBlock(scope: !17286, file: !1066, line: 672, column: 72)
!17295 = !DILocation(line: 673, column: 22, scope: !17294)
!17296 = !DILocation(line: 674, column: 13, scope: !17294)
!17297 = !DILocation(line: 676, column: 21, scope: !17222)
!17298 = !DILocation(line: 676, column: 30, scope: !17222)
!17299 = !DILocation(line: 676, column: 44, scope: !17222)
!17300 = !DILocation(line: 676, column: 50, scope: !17222)
!17301 = !DILocation(line: 677, column: 21, scope: !17222)
!17302 = !DILocation(line: 677, column: 34, scope: !17222)
!17303 = !DILocation(line: 677, column: 52, scope: !17222)
!17304 = !DILocation(line: 677, column: 59, scope: !17222)
!17305 = !DILocation(line: 677, column: 67, scope: !17222)
!17306 = !DILocation(line: 676, column: 15, scope: !17222)
!17307 = !DILocation(line: 676, column: 13, scope: !17222)
!17308 = !DILocation(line: 678, column: 13, scope: !17309)
!17309 = distinct !DILexicalBlock(scope: !17222, file: !1066, line: 678, column: 13)
!17310 = !DILocation(line: 678, column: 13, scope: !17222)
!17311 = !DILocation(line: 679, column: 13, scope: !17312)
!17312 = distinct !DILexicalBlock(scope: !17309, file: !1066, line: 678, column: 18)
!17313 = !DILocation(line: 683, column: 9, scope: !17314)
!17314 = distinct !DILexicalBlock(scope: !17117, file: !1066, line: 683, column: 9)
!17315 = !DILocation(line: 683, column: 16, scope: !17314)
!17316 = !DILocation(line: 683, column: 25, scope: !17314)
!17317 = !DILocation(line: 683, column: 9, scope: !17117)
!17318 = !DILocation(line: 684, column: 11, scope: !17319)
!17319 = distinct !DILexicalBlock(scope: !17314, file: !1066, line: 683, column: 44)
!17320 = !DILocation(line: 684, column: 18, scope: !17319)
!17321 = !DILocation(line: 684, column: 31, scope: !17319)
!17322 = !DILocation(line: 684, column: 9, scope: !17319)
!17323 = !DILocation(line: 685, column: 5, scope: !17319)
!17324 = !DILocation(line: 686, column: 18, scope: !17325)
!17325 = distinct !DILexicalBlock(scope: !17314, file: !1066, line: 685, column: 12)
!17326 = !DILocation(line: 686, column: 9, scope: !17325)
!17327 = !DILocation(line: 688, column: 12, scope: !17117)
!17328 = !DILocation(line: 688, column: 5, scope: !17117)
!17329 = !DILocation(line: 689, column: 1, scope: !17117)
!17330 = distinct !DISubprogram(name: "g_opendir", scope: !1066, file: !1066, line: 895, type: !17331, scopeLine: 896, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1065, retainedNodes: !471)
!17331 = !DISubroutineType(types: !17332)
!17332 = !{!13272, !1071, !15750}
!17333 = !DILocalVariable(name: "str", arg: 1, scope: !17330, file: !1066, line: 895, type: !1071)
!17334 = !DILocation(line: 895, column: 17, scope: !17330)
!17335 = !DILocalVariable(name: "pglob", arg: 2, scope: !17330, file: !1066, line: 895, type: !15750)
!17336 = !DILocation(line: 895, column: 30, scope: !17330)
!17337 = !DILocalVariable(name: "buf", scope: !17330, file: !1066, line: 897, type: !741)
!17338 = !DILocation(line: 897, column: 10, scope: !17330)
!17339 = !DILocation(line: 899, column: 11, scope: !17340)
!17340 = distinct !DILexicalBlock(scope: !17330, file: !1066, line: 899, column: 9)
!17341 = !DILocation(line: 899, column: 10, scope: !17340)
!17342 = !DILocation(line: 899, column: 9, scope: !17330)
!17343 = !DILocation(line: 900, column: 9, scope: !17344)
!17344 = distinct !DILexicalBlock(scope: !17340, file: !1066, line: 899, column: 16)
!17345 = !DILocation(line: 900, column: 16, scope: !17344)
!17346 = !DILocation(line: 901, column: 9, scope: !17344)
!17347 = !DILocation(line: 901, column: 16, scope: !17344)
!17348 = !DILocation(line: 902, column: 5, scope: !17344)
!17349 = !DILocation(line: 903, column: 20, scope: !17350)
!17350 = distinct !DILexicalBlock(scope: !17351, file: !1066, line: 903, column: 13)
!17351 = distinct !DILexicalBlock(scope: !17340, file: !1066, line: 902, column: 12)
!17352 = !DILocation(line: 903, column: 25, scope: !17350)
!17353 = !DILocation(line: 903, column: 13, scope: !17350)
!17354 = !DILocation(line: 903, column: 13, scope: !17351)
!17355 = !DILocation(line: 904, column: 13, scope: !17356)
!17356 = distinct !DILexicalBlock(scope: !17350, file: !1066, line: 903, column: 44)
!17357 = !DILocation(line: 908, column: 9, scope: !17358)
!17358 = distinct !DILexicalBlock(scope: !17330, file: !1066, line: 908, column: 9)
!17359 = !DILocation(line: 908, column: 16, scope: !17358)
!17360 = !DILocation(line: 908, column: 25, scope: !17358)
!17361 = !DILocation(line: 908, column: 9, scope: !17330)
!17362 = !DILocation(line: 909, column: 18, scope: !17363)
!17363 = distinct !DILexicalBlock(scope: !17358, file: !1066, line: 908, column: 44)
!17364 = !DILocation(line: 909, column: 25, scope: !17363)
!17365 = !DILocation(line: 909, column: 37, scope: !17363)
!17366 = !DILocation(line: 909, column: 16, scope: !17363)
!17367 = !DILocation(line: 909, column: 9, scope: !17363)
!17368 = !DILocation(line: 912, column: 20, scope: !17330)
!17369 = !DILocation(line: 912, column: 12, scope: !17330)
!17370 = !DILocation(line: 912, column: 5, scope: !17330)
!17371 = !DILocation(line: 913, column: 1, scope: !17330)
!17372 = distinct !DISubprogram(name: "match", scope: !1066, file: !1066, line: 809, type: !17373, scopeLine: 810, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1065, retainedNodes: !471)
!17373 = !DISubroutineType(types: !17374)
!17374 = !{!326, !1071, !1071, !1071, !326}
!17375 = !DILocalVariable(name: "name", arg: 1, scope: !17372, file: !1066, line: 809, type: !1071)
!17376 = !DILocation(line: 809, column: 13, scope: !17372)
!17377 = !DILocalVariable(name: "pat", arg: 2, scope: !17372, file: !1066, line: 809, type: !1071)
!17378 = !DILocation(line: 809, column: 25, scope: !17372)
!17379 = !DILocalVariable(name: "patend", arg: 3, scope: !17372, file: !1066, line: 809, type: !1071)
!17380 = !DILocation(line: 809, column: 36, scope: !17372)
!17381 = !DILocalVariable(name: "recur", arg: 4, scope: !17372, file: !1066, line: 809, type: !326)
!17382 = !DILocation(line: 809, column: 48, scope: !17372)
!17383 = !DILocalVariable(name: "ok", scope: !17372, file: !1066, line: 811, type: !326)
!17384 = !DILocation(line: 811, column: 9, scope: !17372)
!17385 = !DILocalVariable(name: "negate_range", scope: !17372, file: !1066, line: 811, type: !326)
!17386 = !DILocation(line: 811, column: 13, scope: !17372)
!17387 = !DILocalVariable(name: "c", scope: !17372, file: !1066, line: 812, type: !1070)
!17388 = !DILocation(line: 812, column: 10, scope: !17372)
!17389 = !DILocalVariable(name: "k", scope: !17372, file: !1066, line: 812, type: !1070)
!17390 = !DILocation(line: 812, column: 13, scope: !17372)
!17391 = !DILocation(line: 814, column: 14, scope: !17392)
!17392 = distinct !DILexicalBlock(scope: !17372, file: !1066, line: 814, column: 9)
!17393 = !DILocation(line: 814, column: 17, scope: !17392)
!17394 = !DILocation(line: 814, column: 9, scope: !17372)
!17395 = !DILocation(line: 815, column: 9, scope: !17396)
!17396 = distinct !DILexicalBlock(scope: !17392, file: !1066, line: 814, column: 23)
!17397 = !DILocation(line: 817, column: 5, scope: !17372)
!17398 = !DILocation(line: 817, column: 12, scope: !17372)
!17399 = !DILocation(line: 817, column: 18, scope: !17372)
!17400 = !DILocation(line: 817, column: 16, scope: !17372)
!17401 = !DILocation(line: 818, column: 17, scope: !17402)
!17402 = distinct !DILexicalBlock(scope: !17372, file: !1066, line: 817, column: 26)
!17403 = !DILocation(line: 818, column: 13, scope: !17402)
!17404 = !DILocation(line: 818, column: 11, scope: !17402)
!17405 = !DILocation(line: 819, column: 17, scope: !17402)
!17406 = !DILocation(line: 819, column: 19, scope: !17402)
!17407 = !DILocation(line: 819, column: 9, scope: !17402)
!17408 = !DILocation(line: 821, column: 13, scope: !17409)
!17409 = distinct !DILexicalBlock(scope: !17402, file: !1066, line: 819, column: 29)
!17410 = !DILocation(line: 821, column: 20, scope: !17409)
!17411 = !DILocation(line: 821, column: 26, scope: !17409)
!17412 = !DILocation(line: 821, column: 24, scope: !17409)
!17413 = !DILocation(line: 821, column: 33, scope: !17409)
!17414 = !DILocation(line: 821, column: 38, scope: !17409)
!17415 = !DILocation(line: 821, column: 37, scope: !17409)
!17416 = !DILocation(line: 821, column: 42, scope: !17409)
!17417 = !DILocation(line: 821, column: 52, scope: !17409)
!17418 = !DILocation(line: 0, scope: !17409)
!17419 = !DILocation(line: 822, column: 20, scope: !17420)
!17420 = distinct !DILexicalBlock(scope: !17409, file: !1066, line: 821, column: 62)
!17421 = distinct !{!17421, !17408, !17422}
!17422 = !DILocation(line: 823, column: 13, scope: !17409)
!17423 = !DILocation(line: 824, column: 17, scope: !17424)
!17424 = distinct !DILexicalBlock(scope: !17409, file: !1066, line: 824, column: 17)
!17425 = !DILocation(line: 824, column: 24, scope: !17424)
!17426 = !DILocation(line: 824, column: 21, scope: !17424)
!17427 = !DILocation(line: 824, column: 17, scope: !17409)
!17428 = !DILocation(line: 825, column: 17, scope: !17429)
!17429 = distinct !DILexicalBlock(scope: !17424, file: !1066, line: 824, column: 32)
!17430 = !DILocation(line: 827, column: 13, scope: !17409)
!17431 = !DILocation(line: 828, column: 27, scope: !17432)
!17432 = distinct !DILexicalBlock(scope: !17433, file: !1066, line: 828, column: 21)
!17433 = distinct !DILexicalBlock(scope: !17409, file: !1066, line: 827, column: 16)
!17434 = !DILocation(line: 828, column: 33, scope: !17432)
!17435 = !DILocation(line: 828, column: 38, scope: !17432)
!17436 = !DILocation(line: 828, column: 46, scope: !17432)
!17437 = !DILocation(line: 828, column: 21, scope: !17432)
!17438 = !DILocation(line: 828, column: 21, scope: !17433)
!17439 = !DILocation(line: 829, column: 21, scope: !17440)
!17440 = distinct !DILexicalBlock(scope: !17432, file: !1066, line: 828, column: 54)
!17441 = !DILocation(line: 831, column: 13, scope: !17433)
!17442 = !DILocation(line: 831, column: 27, scope: !17409)
!17443 = !DILocation(line: 831, column: 22, scope: !17409)
!17444 = !DILocation(line: 831, column: 30, scope: !17409)
!17445 = distinct !{!17445, !17430, !17446}
!17446 = !DILocation(line: 831, column: 36, scope: !17409)
!17447 = !DILocation(line: 832, column: 13, scope: !17409)
!17448 = !DILocation(line: 834, column: 22, scope: !17449)
!17449 = distinct !DILexicalBlock(scope: !17409, file: !1066, line: 834, column: 17)
!17450 = !DILocation(line: 834, column: 17, scope: !17449)
!17451 = !DILocation(line: 834, column: 25, scope: !17449)
!17452 = !DILocation(line: 834, column: 17, scope: !17409)
!17453 = !DILocation(line: 835, column: 17, scope: !17454)
!17454 = distinct !DILexicalBlock(scope: !17449, file: !1066, line: 834, column: 33)
!17455 = !DILocation(line: 837, column: 13, scope: !17409)
!17456 = !DILocation(line: 839, column: 16, scope: !17409)
!17457 = !DILocation(line: 840, column: 27, scope: !17458)
!17458 = distinct !DILexicalBlock(scope: !17409, file: !1066, line: 840, column: 17)
!17459 = !DILocation(line: 840, column: 22, scope: !17458)
!17460 = !DILocation(line: 840, column: 20, scope: !17458)
!17461 = !DILocation(line: 840, column: 17, scope: !17458)
!17462 = !DILocation(line: 840, column: 31, scope: !17458)
!17463 = !DILocation(line: 840, column: 17, scope: !17409)
!17464 = !DILocation(line: 841, column: 17, scope: !17465)
!17465 = distinct !DILexicalBlock(scope: !17458, file: !1066, line: 840, column: 39)
!17466 = !DILocation(line: 843, column: 36, scope: !17467)
!17467 = distinct !DILexicalBlock(scope: !17409, file: !1066, line: 843, column: 17)
!17468 = !DILocation(line: 843, column: 35, scope: !17467)
!17469 = !DILocation(line: 843, column: 40, scope: !17467)
!17470 = !DILocation(line: 843, column: 50, scope: !17467)
!17471 = !DILocation(line: 843, column: 31, scope: !17467)
!17472 = !DILocation(line: 843, column: 61, scope: !17467)
!17473 = !DILocation(line: 843, column: 17, scope: !17409)
!17474 = !DILocation(line: 844, column: 17, scope: !17475)
!17475 = distinct !DILexicalBlock(scope: !17467, file: !1066, line: 843, column: 69)
!17476 = !DILocation(line: 845, column: 13, scope: !17475)
!17477 = !DILocation(line: 846, column: 13, scope: !17409)
!17478 = !DILocation(line: 846, column: 30, scope: !17409)
!17479 = !DILocation(line: 846, column: 26, scope: !17409)
!17480 = !DILocation(line: 846, column: 24, scope: !17409)
!17481 = !DILocation(line: 846, column: 21, scope: !17409)
!17482 = !DILocation(line: 846, column: 34, scope: !17409)
!17483 = !DILocation(line: 846, column: 44, scope: !17409)
!17484 = !DILocation(line: 847, column: 23, scope: !17485)
!17485 = distinct !DILexicalBlock(scope: !17486, file: !1066, line: 847, column: 21)
!17486 = distinct !DILexicalBlock(scope: !17409, file: !1066, line: 846, column: 54)
!17487 = !DILocation(line: 847, column: 22, scope: !17485)
!17488 = !DILocation(line: 847, column: 27, scope: !17485)
!17489 = !DILocation(line: 847, column: 37, scope: !17485)
!17490 = !DILocation(line: 847, column: 21, scope: !17486)
!17491 = !DILocation(line: 848, column: 25, scope: !17492)
!17492 = distinct !DILexicalBlock(scope: !17493, file: !1066, line: 848, column: 25)
!17493 = distinct !DILexicalBlock(scope: !17485, file: !1066, line: 847, column: 47)
!17494 = !DILocation(line: 848, column: 30, scope: !17492)
!17495 = !DILocation(line: 848, column: 27, scope: !17492)
!17496 = !DILocation(line: 848, column: 32, scope: !17492)
!17497 = !DILocation(line: 848, column: 35, scope: !17492)
!17498 = !DILocation(line: 848, column: 40, scope: !17492)
!17499 = !DILocation(line: 848, column: 37, scope: !17492)
!17500 = !DILocation(line: 848, column: 25, scope: !17493)
!17501 = !DILocation(line: 849, column: 28, scope: !17502)
!17502 = distinct !DILexicalBlock(scope: !17492, file: !1066, line: 848, column: 48)
!17503 = !DILocation(line: 850, column: 21, scope: !17502)
!17504 = !DILocation(line: 851, column: 25, scope: !17493)
!17505 = !DILocation(line: 852, column: 17, scope: !17493)
!17506 = !DILocation(line: 852, column: 28, scope: !17507)
!17507 = distinct !DILexicalBlock(scope: !17485, file: !1066, line: 852, column: 28)
!17508 = !DILocation(line: 852, column: 33, scope: !17507)
!17509 = !DILocation(line: 852, column: 30, scope: !17507)
!17510 = !DILocation(line: 852, column: 28, scope: !17485)
!17511 = !DILocation(line: 853, column: 24, scope: !17512)
!17512 = distinct !DILexicalBlock(scope: !17507, file: !1066, line: 852, column: 36)
!17513 = !DILocation(line: 854, column: 17, scope: !17512)
!17514 = distinct !{!17514, !17477, !17515}
!17515 = !DILocation(line: 855, column: 13, scope: !17409)
!17516 = !DILocation(line: 856, column: 17, scope: !17517)
!17517 = distinct !DILexicalBlock(scope: !17409, file: !1066, line: 856, column: 17)
!17518 = !DILocation(line: 856, column: 23, scope: !17517)
!17519 = !DILocation(line: 856, column: 20, scope: !17517)
!17520 = !DILocation(line: 856, column: 17, scope: !17409)
!17521 = !DILocation(line: 857, column: 17, scope: !17522)
!17522 = distinct !DILexicalBlock(scope: !17517, file: !1066, line: 856, column: 37)
!17523 = !DILocation(line: 859, column: 13, scope: !17409)
!17524 = !DILocation(line: 861, column: 22, scope: !17525)
!17525 = distinct !DILexicalBlock(scope: !17409, file: !1066, line: 861, column: 17)
!17526 = !DILocation(line: 861, column: 17, scope: !17525)
!17527 = !DILocation(line: 861, column: 28, scope: !17525)
!17528 = !DILocation(line: 861, column: 25, scope: !17525)
!17529 = !DILocation(line: 861, column: 17, scope: !17409)
!17530 = !DILocation(line: 862, column: 17, scope: !17531)
!17531 = distinct !DILexicalBlock(scope: !17525, file: !1066, line: 861, column: 31)
!17532 = !DILocation(line: 864, column: 13, scope: !17409)
!17533 = distinct !{!17533, !17397, !17534}
!17534 = !DILocation(line: 866, column: 5, scope: !17372)
!17535 = !DILocation(line: 867, column: 13, scope: !17372)
!17536 = !DILocation(line: 867, column: 12, scope: !17372)
!17537 = !DILocation(line: 867, column: 18, scope: !17372)
!17538 = !DILocation(line: 867, column: 5, scope: !17372)
!17539 = !DILocation(line: 868, column: 1, scope: !17372)
!17540 = distinct !DISubprogram(name: "globexp2", scope: !1066, file: !1066, line: 271, type: !17541, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1065, retainedNodes: !471)
!17541 = !DISubroutineType(types: !17542)
!17542 = !{!326, !1068, !1068, !15750, !16022, !326}
!17543 = !DILocalVariable(name: "ptr", arg: 1, scope: !17540, file: !1066, line: 271, type: !1068)
!17544 = !DILocation(line: 271, column: 22, scope: !17540)
!17545 = !DILocalVariable(name: "pattern", arg: 2, scope: !17540, file: !1066, line: 271, type: !1068)
!17546 = !DILocation(line: 271, column: 39, scope: !17540)
!17547 = !DILocalVariable(name: "pglob", arg: 3, scope: !17540, file: !1066, line: 271, type: !15750)
!17548 = !DILocation(line: 271, column: 56, scope: !17540)
!17549 = !DILocalVariable(name: "limitp", arg: 4, scope: !17540, file: !1066, line: 272, type: !16022)
!17550 = !DILocation(line: 272, column: 27, scope: !17540)
!17551 = !DILocalVariable(name: "recursion", arg: 5, scope: !17540, file: !1066, line: 272, type: !326)
!17552 = !DILocation(line: 272, column: 39, scope: !17540)
!17553 = !DILocalVariable(name: "i", scope: !17540, file: !1066, line: 274, type: !326)
!17554 = !DILocation(line: 274, column: 17, scope: !17540)
!17555 = !DILocalVariable(name: "rv", scope: !17540, file: !1066, line: 274, type: !326)
!17556 = !DILocation(line: 274, column: 20, scope: !17540)
!17557 = !DILocalVariable(name: "lm", scope: !17540, file: !1066, line: 275, type: !1071)
!17558 = !DILocation(line: 275, column: 17, scope: !17540)
!17559 = !DILocalVariable(name: "ls", scope: !17540, file: !1066, line: 275, type: !1071)
!17560 = !DILocation(line: 275, column: 22, scope: !17540)
!17561 = !DILocalVariable(name: "pe", scope: !17540, file: !1066, line: 276, type: !1068)
!17562 = !DILocation(line: 276, column: 17, scope: !17540)
!17563 = !DILocalVariable(name: "pm", scope: !17540, file: !1066, line: 276, type: !1068)
!17564 = !DILocation(line: 276, column: 22, scope: !17540)
!17565 = !DILocalVariable(name: "pl", scope: !17540, file: !1066, line: 276, type: !1068)
!17566 = !DILocation(line: 276, column: 27, scope: !17540)
!17567 = !DILocalVariable(name: "patbuf", scope: !17540, file: !1066, line: 277, type: !15810)
!17568 = !DILocation(line: 277, column: 17, scope: !17540)
!17569 = !DILocation(line: 280, column: 15, scope: !17570)
!17570 = distinct !DILexicalBlock(scope: !17540, file: !1066, line: 280, column: 5)
!17571 = !DILocation(line: 280, column: 13, scope: !17570)
!17572 = !DILocation(line: 280, column: 28, scope: !17570)
!17573 = !DILocation(line: 280, column: 26, scope: !17570)
!17574 = !DILocation(line: 280, column: 10, scope: !17570)
!17575 = !DILocation(line: 280, column: 37, scope: !17576)
!17576 = distinct !DILexicalBlock(scope: !17570, file: !1066, line: 280, column: 5)
!17577 = !DILocation(line: 280, column: 43, scope: !17576)
!17578 = !DILocation(line: 280, column: 40, scope: !17576)
!17579 = !DILocation(line: 280, column: 5, scope: !17570)
!17580 = !DILocation(line: 280, column: 59, scope: !17576)
!17581 = !DILocation(line: 280, column: 56, scope: !17576)
!17582 = !DILocation(line: 280, column: 51, scope: !17576)
!17583 = !DILocation(line: 280, column: 54, scope: !17576)
!17584 = !DILocation(line: 280, column: 5, scope: !17576)
!17585 = distinct !{!17585, !17579, !17586}
!17586 = !DILocation(line: 281, column: 9, scope: !17570)
!17587 = !DILocation(line: 282, column: 6, scope: !17540)
!17588 = !DILocation(line: 282, column: 9, scope: !17540)
!17589 = !DILocation(line: 283, column: 10, scope: !17540)
!17590 = !DILocation(line: 283, column: 8, scope: !17540)
!17591 = !DILocation(line: 286, column: 12, scope: !17592)
!17592 = distinct !DILexicalBlock(scope: !17540, file: !1066, line: 286, column: 5)
!17593 = !DILocation(line: 286, column: 22, scope: !17592)
!17594 = !DILocation(line: 286, column: 20, scope: !17592)
!17595 = !DILocation(line: 286, column: 10, scope: !17592)
!17596 = !DILocation(line: 286, column: 30, scope: !17597)
!17597 = distinct !DILexicalBlock(scope: !17592, file: !1066, line: 286, column: 5)
!17598 = !DILocation(line: 286, column: 29, scope: !17597)
!17599 = !DILocation(line: 286, column: 5, scope: !17592)
!17600 = !DILocation(line: 287, column: 14, scope: !17601)
!17601 = distinct !DILexicalBlock(scope: !17602, file: !1066, line: 287, column: 13)
!17602 = distinct !DILexicalBlock(scope: !17597, file: !1066, line: 286, column: 40)
!17603 = !DILocation(line: 287, column: 13, scope: !17601)
!17604 = !DILocation(line: 287, column: 17, scope: !17601)
!17605 = !DILocation(line: 287, column: 13, scope: !17602)
!17606 = !DILocation(line: 289, column: 25, scope: !17607)
!17607 = distinct !DILexicalBlock(scope: !17608, file: !1066, line: 289, column: 13)
!17608 = distinct !DILexicalBlock(scope: !17601, file: !1066, line: 287, column: 30)
!17609 = !DILocation(line: 289, column: 21, scope: !17607)
!17610 = !DILocation(line: 289, column: 18, scope: !17607)
!17611 = !DILocation(line: 289, column: 30, scope: !17612)
!17612 = distinct !DILexicalBlock(scope: !17607, file: !1066, line: 289, column: 13)
!17613 = !DILocation(line: 289, column: 29, scope: !17612)
!17614 = !DILocation(line: 289, column: 33, scope: !17612)
!17615 = !DILocation(line: 289, column: 45, scope: !17612)
!17616 = !DILocation(line: 289, column: 49, scope: !17612)
!17617 = !DILocation(line: 289, column: 48, scope: !17612)
!17618 = !DILocation(line: 289, column: 52, scope: !17612)
!17619 = !DILocation(line: 0, scope: !17612)
!17620 = !DILocation(line: 289, column: 13, scope: !17607)
!17621 = !DILocation(line: 289, column: 62, scope: !17612)
!17622 = !DILocation(line: 289, column: 13, scope: !17612)
!17623 = distinct !{!17623, !17620, !17624}
!17624 = !DILocation(line: 290, column: 17, scope: !17607)
!17625 = !DILocation(line: 291, column: 18, scope: !17626)
!17626 = distinct !DILexicalBlock(scope: !17608, file: !1066, line: 291, column: 17)
!17627 = !DILocation(line: 291, column: 17, scope: !17626)
!17628 = !DILocation(line: 291, column: 21, scope: !17626)
!17629 = !DILocation(line: 291, column: 17, scope: !17608)
!17630 = !DILocation(line: 296, column: 22, scope: !17631)
!17631 = distinct !DILexicalBlock(scope: !17626, file: !1066, line: 291, column: 29)
!17632 = !DILocation(line: 296, column: 20, scope: !17631)
!17633 = !DILocation(line: 297, column: 13, scope: !17631)
!17634 = !DILocation(line: 298, column: 9, scope: !17608)
!17635 = !DILocation(line: 298, column: 21, scope: !17636)
!17636 = distinct !DILexicalBlock(scope: !17601, file: !1066, line: 298, column: 20)
!17637 = !DILocation(line: 298, column: 20, scope: !17636)
!17638 = !DILocation(line: 298, column: 24, scope: !17636)
!17639 = !DILocation(line: 298, column: 20, scope: !17601)
!17640 = !DILocation(line: 299, column: 14, scope: !17641)
!17641 = distinct !DILexicalBlock(scope: !17636, file: !1066, line: 298, column: 35)
!17642 = !DILocation(line: 300, column: 9, scope: !17641)
!17643 = !DILocation(line: 300, column: 21, scope: !17644)
!17644 = distinct !DILexicalBlock(scope: !17636, file: !1066, line: 300, column: 20)
!17645 = !DILocation(line: 300, column: 20, scope: !17644)
!17646 = !DILocation(line: 300, column: 24, scope: !17644)
!17647 = !DILocation(line: 300, column: 20, scope: !17636)
!17648 = !DILocation(line: 301, column: 17, scope: !17649)
!17649 = distinct !DILexicalBlock(scope: !17650, file: !1066, line: 301, column: 17)
!17650 = distinct !DILexicalBlock(scope: !17644, file: !1066, line: 300, column: 35)
!17651 = !DILocation(line: 301, column: 19, scope: !17649)
!17652 = !DILocation(line: 301, column: 17, scope: !17650)
!17653 = !DILocation(line: 302, column: 17, scope: !17654)
!17654 = distinct !DILexicalBlock(scope: !17649, file: !1066, line: 301, column: 25)
!17655 = !DILocation(line: 304, column: 14, scope: !17650)
!17656 = !DILocation(line: 305, column: 9, scope: !17650)
!17657 = !DILocation(line: 306, column: 5, scope: !17602)
!17658 = !DILocation(line: 286, column: 36, scope: !17597)
!17659 = !DILocation(line: 286, column: 5, scope: !17597)
!17660 = distinct !{!17660, !17599, !17661}
!17661 = !DILocation(line: 306, column: 5, scope: !17592)
!17662 = !DILocation(line: 309, column: 9, scope: !17663)
!17663 = distinct !DILexicalBlock(scope: !17540, file: !1066, line: 309, column: 9)
!17664 = !DILocation(line: 309, column: 11, scope: !17663)
!17665 = !DILocation(line: 309, column: 16, scope: !17663)
!17666 = !DILocation(line: 309, column: 20, scope: !17663)
!17667 = !DILocation(line: 309, column: 19, scope: !17663)
!17668 = !DILocation(line: 309, column: 23, scope: !17663)
!17669 = !DILocation(line: 309, column: 9, scope: !17540)
!17670 = !DILocation(line: 310, column: 22, scope: !17671)
!17671 = distinct !DILexicalBlock(scope: !17663, file: !1066, line: 309, column: 31)
!17672 = !DILocation(line: 310, column: 30, scope: !17671)
!17673 = !DILocation(line: 310, column: 37, scope: !17671)
!17674 = !DILocation(line: 310, column: 16, scope: !17671)
!17675 = !DILocation(line: 310, column: 9, scope: !17671)
!17676 = !DILocation(line: 312, column: 12, scope: !17677)
!17677 = distinct !DILexicalBlock(scope: !17540, file: !1066, line: 312, column: 5)
!17678 = !DILocation(line: 312, column: 27, scope: !17677)
!17679 = !DILocation(line: 312, column: 25, scope: !17677)
!17680 = !DILocation(line: 312, column: 20, scope: !17677)
!17681 = !DILocation(line: 312, column: 10, scope: !17677)
!17682 = !DILocation(line: 312, column: 32, scope: !17683)
!17683 = distinct !DILexicalBlock(scope: !17677, file: !1066, line: 312, column: 5)
!17684 = !DILocation(line: 312, column: 38, scope: !17683)
!17685 = !DILocation(line: 312, column: 35, scope: !17683)
!17686 = !DILocation(line: 312, column: 5, scope: !17677)
!17687 = !DILocation(line: 313, column: 18, scope: !17688)
!17688 = distinct !DILexicalBlock(scope: !17683, file: !1066, line: 312, column: 48)
!17689 = !DILocation(line: 313, column: 17, scope: !17688)
!17690 = !DILocation(line: 313, column: 9, scope: !17688)
!17691 = !DILocation(line: 316, column: 25, scope: !17692)
!17692 = distinct !DILexicalBlock(scope: !17693, file: !1066, line: 316, column: 13)
!17693 = distinct !DILexicalBlock(scope: !17688, file: !1066, line: 313, column: 22)
!17694 = !DILocation(line: 316, column: 21, scope: !17692)
!17695 = !DILocation(line: 316, column: 18, scope: !17692)
!17696 = !DILocation(line: 316, column: 30, scope: !17697)
!17697 = distinct !DILexicalBlock(scope: !17692, file: !1066, line: 316, column: 13)
!17698 = !DILocation(line: 316, column: 29, scope: !17697)
!17699 = !DILocation(line: 316, column: 33, scope: !17697)
!17700 = !DILocation(line: 316, column: 45, scope: !17697)
!17701 = !DILocation(line: 316, column: 49, scope: !17697)
!17702 = !DILocation(line: 316, column: 48, scope: !17697)
!17703 = !DILocation(line: 316, column: 52, scope: !17697)
!17704 = !DILocation(line: 0, scope: !17697)
!17705 = !DILocation(line: 316, column: 13, scope: !17692)
!17706 = !DILocation(line: 316, column: 62, scope: !17697)
!17707 = !DILocation(line: 316, column: 13, scope: !17697)
!17708 = distinct !{!17708, !17705, !17709}
!17709 = !DILocation(line: 317, column: 17, scope: !17692)
!17710 = !DILocation(line: 318, column: 18, scope: !17711)
!17711 = distinct !DILexicalBlock(scope: !17693, file: !1066, line: 318, column: 17)
!17712 = !DILocation(line: 318, column: 17, scope: !17711)
!17713 = !DILocation(line: 318, column: 21, scope: !17711)
!17714 = !DILocation(line: 318, column: 17, scope: !17693)
!17715 = !DILocation(line: 323, column: 22, scope: !17716)
!17716 = distinct !DILexicalBlock(scope: !17711, file: !1066, line: 318, column: 29)
!17717 = !DILocation(line: 323, column: 20, scope: !17716)
!17718 = !DILocation(line: 324, column: 13, scope: !17716)
!17719 = !DILocation(line: 325, column: 13, scope: !17693)
!17720 = !DILocation(line: 328, column: 14, scope: !17693)
!17721 = !DILocation(line: 329, column: 13, scope: !17693)
!17722 = !DILocation(line: 332, column: 17, scope: !17723)
!17723 = distinct !DILexicalBlock(scope: !17693, file: !1066, line: 332, column: 17)
!17724 = !DILocation(line: 332, column: 17, scope: !17693)
!17725 = !DILocation(line: 333, column: 18, scope: !17726)
!17726 = distinct !DILexicalBlock(scope: !17723, file: !1066, line: 332, column: 20)
!17727 = !DILocation(line: 334, column: 17, scope: !17726)
!17728 = !DILocation(line: 338, column: 17, scope: !17729)
!17729 = distinct !DILexicalBlock(scope: !17693, file: !1066, line: 338, column: 17)
!17730 = !DILocation(line: 338, column: 19, scope: !17729)
!17731 = !DILocation(line: 338, column: 23, scope: !17729)
!17732 = !DILocation(line: 338, column: 22, scope: !17729)
!17733 = !DILocation(line: 338, column: 26, scope: !17729)
!17734 = !DILocation(line: 338, column: 17, scope: !17693)
!17735 = !DILocation(line: 339, column: 17, scope: !17736)
!17736 = distinct !DILexicalBlock(scope: !17729, file: !1066, line: 338, column: 36)
!17737 = !DILocation(line: 342, column: 27, scope: !17738)
!17738 = distinct !DILexicalBlock(scope: !17739, file: !1066, line: 342, column: 17)
!17739 = distinct !DILexicalBlock(scope: !17729, file: !1066, line: 340, column: 20)
!17740 = !DILocation(line: 342, column: 25, scope: !17738)
!17741 = !DILocation(line: 342, column: 22, scope: !17738)
!17742 = !DILocation(line: 342, column: 32, scope: !17743)
!17743 = distinct !DILexicalBlock(scope: !17738, file: !1066, line: 342, column: 17)
!17744 = !DILocation(line: 342, column: 37, scope: !17743)
!17745 = !DILocation(line: 342, column: 35, scope: !17743)
!17746 = !DILocation(line: 342, column: 17, scope: !17738)
!17747 = !DILocation(line: 342, column: 53, scope: !17743)
!17748 = !DILocation(line: 342, column: 50, scope: !17743)
!17749 = !DILocation(line: 342, column: 45, scope: !17743)
!17750 = !DILocation(line: 342, column: 48, scope: !17743)
!17751 = !DILocation(line: 342, column: 17, scope: !17743)
!17752 = distinct !{!17752, !17746, !17753}
!17753 = !DILocation(line: 343, column: 21, scope: !17738)
!17754 = !DILocation(line: 349, column: 27, scope: !17755)
!17755 = distinct !DILexicalBlock(scope: !17739, file: !1066, line: 349, column: 17)
!17756 = !DILocation(line: 349, column: 30, scope: !17755)
!17757 = !DILocation(line: 349, column: 25, scope: !17755)
!17758 = !DILocation(line: 349, column: 22, scope: !17755)
!17759 = !DILocation(line: 349, column: 47, scope: !17760)
!17760 = distinct !DILexicalBlock(scope: !17755, file: !1066, line: 349, column: 17)
!17761 = !DILocation(line: 349, column: 44, scope: !17760)
!17762 = !DILocation(line: 349, column: 39, scope: !17760)
!17763 = !DILocation(line: 349, column: 42, scope: !17760)
!17764 = !DILocation(line: 349, column: 35, scope: !17760)
!17765 = !DILocation(line: 349, column: 51, scope: !17760)
!17766 = !DILocation(line: 349, column: 17, scope: !17755)
!17767 = !DILocation(line: 349, column: 17, scope: !17760)
!17768 = distinct !{!17768, !17766, !17769}
!17769 = !DILocation(line: 350, column: 21, scope: !17755)
!17770 = !DILocation(line: 353, column: 31, scope: !17739)
!17771 = !DILocation(line: 353, column: 39, scope: !17739)
!17772 = !DILocation(line: 353, column: 46, scope: !17739)
!17773 = !DILocation(line: 353, column: 54, scope: !17739)
!17774 = !DILocation(line: 353, column: 64, scope: !17739)
!17775 = !DILocation(line: 353, column: 22, scope: !17739)
!17776 = !DILocation(line: 353, column: 20, scope: !17739)
!17777 = !DILocation(line: 354, column: 21, scope: !17778)
!17778 = distinct !DILexicalBlock(scope: !17739, file: !1066, line: 354, column: 21)
!17779 = !DILocation(line: 354, column: 24, scope: !17778)
!17780 = !DILocation(line: 354, column: 27, scope: !17778)
!17781 = !DILocation(line: 354, column: 30, scope: !17778)
!17782 = !DILocation(line: 354, column: 21, scope: !17739)
!17783 = !DILocation(line: 355, column: 28, scope: !17784)
!17784 = distinct !DILexicalBlock(scope: !17778, file: !1066, line: 354, column: 47)
!17785 = !DILocation(line: 355, column: 21, scope: !17784)
!17786 = !DILocation(line: 358, column: 22, scope: !17739)
!17787 = !DILocation(line: 358, column: 25, scope: !17739)
!17788 = !DILocation(line: 358, column: 20, scope: !17739)
!17789 = !DILocation(line: 360, column: 13, scope: !17693)
!17790 = !DILocation(line: 363, column: 13, scope: !17693)
!17791 = !DILocation(line: 365, column: 5, scope: !17688)
!17792 = !DILocation(line: 312, column: 44, scope: !17683)
!17793 = !DILocation(line: 312, column: 5, scope: !17683)
!17794 = distinct !{!17794, !17686, !17795}
!17795 = !DILocation(line: 365, column: 5, scope: !17677)
!17796 = !DILocation(line: 366, column: 5, scope: !17540)
!17797 = !DILocation(line: 367, column: 1, scope: !17540)
!17798 = distinct !DISubprogram(name: "sglob", scope: !1066, file: !1066, line: 233, type: !17799, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1065, retainedNodes: !471)
!17799 = !DISubroutineType(types: !17800)
!17800 = !{!326, !308, !326, !11957, !15750, !306, !326}
!17801 = !DILocalVariable(name: "pattern", arg: 1, scope: !17798, file: !1066, line: 233, type: !308)
!17802 = !DILocation(line: 233, column: 13, scope: !17798)
!17803 = !DILocalVariable(name: "flags", arg: 2, scope: !17798, file: !1066, line: 233, type: !326)
!17804 = !DILocation(line: 233, column: 26, scope: !17798)
!17805 = !DILocalVariable(name: "errfunc", arg: 3, scope: !17798, file: !1066, line: 233, type: !11957)
!17806 = !DILocation(line: 233, column: 39, scope: !17798)
!17807 = !DILocalVariable(name: "pglob", arg: 4, scope: !17798, file: !1066, line: 234, type: !15750)
!17808 = !DILocation(line: 234, column: 16, scope: !17798)
!17809 = !DILocalVariable(name: "maxfiles", arg: 5, scope: !17798, file: !1066, line: 234, type: !306)
!17810 = !DILocation(line: 234, column: 37, scope: !17798)
!17811 = !DILocalVariable(name: "maxdepth", arg: 6, scope: !17798, file: !1066, line: 234, type: !326)
!17812 = !DILocation(line: 234, column: 51, scope: !17798)
!17813 = !DILocation(line: 236, column: 14, scope: !17798)
!17814 = !DILocation(line: 236, column: 5, scope: !17798)
!17815 = !DILocation(line: 237, column: 18, scope: !17798)
!17816 = !DILocation(line: 237, column: 27, scope: !17798)
!17817 = !DILocation(line: 237, column: 34, scope: !17798)
!17818 = !DILocation(line: 237, column: 43, scope: !17798)
!17819 = !DILocation(line: 237, column: 50, scope: !17798)
!17820 = !DILocation(line: 237, column: 60, scope: !17798)
!17821 = !DILocation(line: 237, column: 12, scope: !17798)
!17822 = !DILocation(line: 237, column: 5, scope: !17798)
!17823 = distinct !DISubprogram(name: "globfree", scope: !1066, file: !1066, line: 872, type: !17824, scopeLine: 873, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1065, retainedNodes: !471)
!17824 = !DISubroutineType(types: !17825)
!17825 = !{null, !15750}
!17826 = !DILocalVariable(name: "pglob", arg: 1, scope: !17823, file: !1066, line: 872, type: !15750)
!17827 = !DILocation(line: 872, column: 18, scope: !17823)
!17828 = !DILocalVariable(name: "i", scope: !17823, file: !1066, line: 874, type: !326)
!17829 = !DILocation(line: 874, column: 9, scope: !17823)
!17830 = !DILocalVariable(name: "pp", scope: !17823, file: !1066, line: 875, type: !493)
!17831 = !DILocation(line: 875, column: 12, scope: !17823)
!17832 = !DILocation(line: 877, column: 9, scope: !17833)
!17833 = distinct !DILexicalBlock(scope: !17823, file: !1066, line: 877, column: 9)
!17834 = !DILocation(line: 877, column: 16, scope: !17833)
!17835 = !DILocation(line: 877, column: 25, scope: !17833)
!17836 = !DILocation(line: 877, column: 9, scope: !17823)
!17837 = !DILocation(line: 878, column: 14, scope: !17838)
!17838 = distinct !DILexicalBlock(scope: !17833, file: !1066, line: 877, column: 34)
!17839 = !DILocation(line: 878, column: 21, scope: !17838)
!17840 = !DILocation(line: 878, column: 32, scope: !17838)
!17841 = !DILocation(line: 878, column: 39, scope: !17838)
!17842 = !DILocation(line: 878, column: 30, scope: !17838)
!17843 = !DILocation(line: 878, column: 12, scope: !17838)
!17844 = !DILocation(line: 879, column: 18, scope: !17845)
!17845 = distinct !DILexicalBlock(scope: !17838, file: !1066, line: 879, column: 9)
!17846 = !DILocation(line: 879, column: 25, scope: !17845)
!17847 = !DILocation(line: 879, column: 16, scope: !17845)
!17848 = !DILocation(line: 879, column: 14, scope: !17845)
!17849 = !DILocation(line: 879, column: 36, scope: !17850)
!17850 = distinct !DILexicalBlock(scope: !17845, file: !1066, line: 879, column: 9)
!17851 = !DILocation(line: 879, column: 9, scope: !17845)
!17852 = !DILocation(line: 880, column: 19, scope: !17853)
!17853 = distinct !DILexicalBlock(scope: !17850, file: !1066, line: 879, column: 46)
!17854 = !DILocation(line: 880, column: 18, scope: !17853)
!17855 = !DILocation(line: 880, column: 13, scope: !17853)
!17856 = !DILocation(line: 881, column: 9, scope: !17853)
!17857 = !DILocation(line: 879, column: 40, scope: !17850)
!17858 = !DILocation(line: 879, column: 9, scope: !17850)
!17859 = distinct !{!17859, !17851, !17860}
!17860 = !DILocation(line: 881, column: 9, scope: !17845)
!17861 = !DILocation(line: 882, column: 14, scope: !17838)
!17862 = !DILocation(line: 882, column: 21, scope: !17838)
!17863 = !DILocation(line: 882, column: 9, scope: !17838)
!17864 = !DILocation(line: 883, column: 9, scope: !17838)
!17865 = !DILocation(line: 883, column: 16, scope: !17838)
!17866 = !DILocation(line: 883, column: 25, scope: !17838)
!17867 = !DILocation(line: 884, column: 5, scope: !17838)
!17868 = !DILocation(line: 885, column: 9, scope: !17869)
!17869 = distinct !DILexicalBlock(scope: !17823, file: !1066, line: 885, column: 9)
!17870 = !DILocation(line: 885, column: 16, scope: !17869)
!17871 = !DILocation(line: 885, column: 25, scope: !17869)
!17872 = !DILocation(line: 885, column: 9, scope: !17823)
!17873 = !DILocation(line: 886, column: 16, scope: !17874)
!17874 = distinct !DILexicalBlock(scope: !17875, file: !1066, line: 886, column: 9)
!17875 = distinct !DILexicalBlock(scope: !17869, file: !1066, line: 885, column: 34)
!17876 = !DILocation(line: 886, column: 14, scope: !17874)
!17877 = !DILocation(line: 886, column: 21, scope: !17878)
!17878 = distinct !DILexicalBlock(scope: !17874, file: !1066, line: 886, column: 9)
!17879 = !DILocation(line: 886, column: 25, scope: !17878)
!17880 = !DILocation(line: 886, column: 32, scope: !17878)
!17881 = !DILocation(line: 886, column: 23, scope: !17878)
!17882 = !DILocation(line: 886, column: 9, scope: !17874)
!17883 = !DILocation(line: 887, column: 18, scope: !17884)
!17884 = distinct !DILexicalBlock(scope: !17878, file: !1066, line: 886, column: 47)
!17885 = !DILocation(line: 887, column: 25, scope: !17884)
!17886 = !DILocation(line: 887, column: 34, scope: !17884)
!17887 = !DILocation(line: 887, column: 13, scope: !17884)
!17888 = !DILocation(line: 888, column: 9, scope: !17884)
!17889 = !DILocation(line: 886, column: 43, scope: !17878)
!17890 = !DILocation(line: 886, column: 9, scope: !17878)
!17891 = distinct !{!17891, !17882, !17892}
!17892 = !DILocation(line: 888, column: 9, scope: !17874)
!17893 = !DILocation(line: 889, column: 14, scope: !17875)
!17894 = !DILocation(line: 889, column: 21, scope: !17875)
!17895 = !DILocation(line: 889, column: 9, scope: !17875)
!17896 = !DILocation(line: 890, column: 9, scope: !17875)
!17897 = !DILocation(line: 890, column: 16, scope: !17875)
!17898 = !DILocation(line: 890, column: 25, scope: !17875)
!17899 = !DILocation(line: 891, column: 5, scope: !17875)
!17900 = !DILocation(line: 892, column: 1, scope: !17823)
!17901 = distinct !DISubprogram(name: "daemons", scope: !1124, file: !1124, line: 89, type: !17902, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1123, retainedNodes: !471)
!17902 = !DISubroutineType(types: !17903)
!17903 = !{!7, !733}
!17904 = !DILocalVariable(name: "server_port", arg: 1, scope: !17901, file: !1124, line: 89, type: !733)
!17905 = !DILocation(line: 89, column: 38, scope: !17901)
!17906 = !DILocalVariable(name: "nbcnx", scope: !17901, file: !1124, line: 91, type: !7)
!17907 = !DILocation(line: 91, column: 18, scope: !17901)
!17908 = !DILocation(line: 93, column: 19, scope: !17901)
!17909 = !DILocation(line: 93, column: 13, scope: !17901)
!17910 = !DILocation(line: 93, column: 11, scope: !17901)
!17911 = !DILocation(line: 94, column: 20, scope: !17901)
!17912 = !DILocation(line: 94, column: 14, scope: !17901)
!17913 = !DILocation(line: 94, column: 11, scope: !17901)
!17914 = !DILocation(line: 96, column: 12, scope: !17901)
!17915 = !DILocation(line: 96, column: 5, scope: !17901)
!17916 = distinct !DISubprogram(name: "count", scope: !1124, file: !1124, line: 12, type: !17917, scopeLine: 13, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1123, retainedNodes: !471)
!17917 = !DISubroutineType(types: !17918)
!17918 = !{!7, !340, !529}
!17919 = !DILocalVariable(name: "server_port", arg: 1, scope: !17916, file: !1124, line: 12, type: !340)
!17920 = !DILocation(line: 12, column: 37, scope: !17916)
!17921 = !DILocalVariable(name: "file", arg: 2, scope: !17916, file: !1124, line: 12, type: !529)
!17922 = !DILocation(line: 12, column: 69, scope: !17916)
!17923 = !DILocalVariable(name: "f", scope: !17916, file: !1124, line: 14, type: !326)
!17924 = !DILocation(line: 14, column: 9, scope: !17916)
!17925 = !DILocalVariable(name: "r", scope: !17916, file: !1124, line: 15, type: !326)
!17926 = !DILocation(line: 15, column: 9, scope: !17916)
!17927 = !DILocalVariable(name: "c", scope: !17916, file: !1124, line: 16, type: !326)
!17928 = !DILocation(line: 16, column: 9, scope: !17916)
!17929 = !DILocalVariable(name: "b", scope: !17916, file: !1124, line: 17, type: !326)
!17930 = !DILocation(line: 17, column: 9, scope: !17916)
!17931 = !DILocalVariable(name: "e", scope: !17916, file: !1124, line: 18, type: !326)
!17932 = !DILocation(line: 18, column: 9, scope: !17916)
!17933 = !DILocalVariable(name: "d", scope: !17916, file: !1124, line: 19, type: !7)
!17934 = !DILocation(line: 19, column: 18, scope: !17916)
!17935 = !DILocalVariable(name: "buf", scope: !17916, file: !1124, line: 20, type: !17936)
!17936 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 16392, elements: !17937)
!17937 = !{!17938}
!17938 = !DISubrange(count: 2049)
!17939 = !DILocation(line: 20, column: 10, scope: !17916)
!17940 = !DILocation(line: 22, column: 19, scope: !17941)
!17941 = distinct !DILexicalBlock(scope: !17916, file: !1124, line: 22, column: 9)
!17942 = !DILocation(line: 22, column: 14, scope: !17941)
!17943 = !DILocation(line: 22, column: 12, scope: !17941)
!17944 = !DILocation(line: 22, column: 36, scope: !17941)
!17945 = !DILocation(line: 22, column: 9, scope: !17916)
!17946 = !DILocation(line: 23, column: 9, scope: !17947)
!17947 = distinct !DILexicalBlock(scope: !17941, file: !1124, line: 22, column: 43)
!17948 = !DILocation(line: 25, column: 5, scope: !17916)
!17949 = !DILocation(line: 25, column: 15, scope: !17916)
!17950 = !DILocation(line: 27, column: 5, scope: !17916)
!17951 = !DILocation(line: 28, column: 9, scope: !17952)
!17952 = distinct !DILexicalBlock(scope: !17953, file: !1124, line: 27, column: 14)
!17953 = distinct !DILexicalBlock(scope: !17954, file: !1124, line: 27, column: 5)
!17954 = distinct !DILexicalBlock(scope: !17916, file: !1124, line: 27, column: 5)
!17955 = !DILocation(line: 28, column: 32, scope: !17952)
!17956 = !DILocation(line: 28, column: 35, scope: !17952)
!17957 = !DILocation(line: 28, column: 41, scope: !17952)
!17958 = !DILocation(line: 28, column: 39, scope: !17952)
!17959 = !DILocation(line: 28, column: 62, scope: !17952)
!17960 = !DILocation(line: 28, column: 60, scope: !17952)
!17961 = !DILocation(line: 28, column: 44, scope: !17952)
!17962 = !DILocation(line: 28, column: 27, scope: !17952)
!17963 = !DILocation(line: 28, column: 21, scope: !17952)
!17964 = !DILocation(line: 28, column: 19, scope: !17952)
!17965 = !DILocation(line: 28, column: 16, scope: !17952)
!17966 = !DILocation(line: 29, column: 16, scope: !17952)
!17967 = !DILocation(line: 29, column: 30, scope: !17952)
!17968 = !DILocation(line: 29, column: 33, scope: !17952)
!17969 = !DILocation(line: 29, column: 39, scope: !17952)
!17970 = !DILocation(line: 0, scope: !17952)
!17971 = distinct !{!17971, !17951, !17972}
!17972 = !DILocation(line: 29, column: 48, scope: !17952)
!17973 = !DILocation(line: 30, column: 13, scope: !17974)
!17974 = distinct !DILexicalBlock(scope: !17952, file: !1124, line: 30, column: 13)
!17975 = !DILocation(line: 30, column: 15, scope: !17974)
!17976 = !DILocation(line: 30, column: 13, scope: !17952)
!17977 = !DILocation(line: 31, column: 13, scope: !17978)
!17978 = distinct !DILexicalBlock(scope: !17974, file: !1124, line: 30, column: 31)
!17979 = !DILocation(line: 33, column: 14, scope: !17952)
!17980 = !DILocation(line: 33, column: 11, scope: !17952)
!17981 = !DILocation(line: 39, column: 13, scope: !17952)
!17982 = !DILocation(line: 39, column: 11, scope: !17952)
!17983 = !DILocation(line: 40, column: 9, scope: !17952)
!17984 = !DILocation(line: 40, column: 16, scope: !17952)
!17985 = !DILocation(line: 40, column: 20, scope: !17952)
!17986 = !DILocation(line: 40, column: 18, scope: !17952)
!17987 = !DILocation(line: 40, column: 22, scope: !17952)
!17988 = !DILocation(line: 40, column: 29, scope: !17952)
!17989 = !DILocation(line: 40, column: 25, scope: !17952)
!17990 = !DILocation(line: 40, column: 32, scope: !17952)
!17991 = !DILocation(line: 41, column: 14, scope: !17992)
!17992 = distinct !DILexicalBlock(scope: !17952, file: !1124, line: 40, column: 41)
!17993 = distinct !{!17993, !17983, !17994}
!17994 = !DILocation(line: 42, column: 9, scope: !17952)
!17995 = !DILocation(line: 43, column: 9, scope: !17952)
!17996 = !DILocation(line: 43, column: 16, scope: !17952)
!17997 = !DILocation(line: 43, column: 20, scope: !17952)
!17998 = !DILocation(line: 43, column: 18, scope: !17952)
!17999 = !DILocation(line: 44, column: 18, scope: !18000)
!18000 = distinct !DILexicalBlock(scope: !17952, file: !1124, line: 43, column: 23)
!18001 = !DILocation(line: 44, column: 13, scope: !18000)
!18002 = !DILocation(line: 44, column: 22, scope: !18000)
!18003 = !DILocation(line: 45, column: 13, scope: !18000)
!18004 = !DILocation(line: 45, column: 20, scope: !18000)
!18005 = !DILocation(line: 45, column: 24, scope: !18000)
!18006 = !DILocation(line: 45, column: 22, scope: !18000)
!18007 = !DILocation(line: 45, column: 26, scope: !18000)
!18008 = !DILocation(line: 45, column: 33, scope: !18000)
!18009 = !DILocation(line: 45, column: 29, scope: !18000)
!18010 = !DILocation(line: 45, column: 36, scope: !18000)
!18011 = !DILocation(line: 45, column: 43, scope: !18000)
!18012 = !DILocation(line: 45, column: 50, scope: !18000)
!18013 = !DILocation(line: 45, column: 46, scope: !18000)
!18014 = !DILocation(line: 45, column: 53, scope: !18000)
!18015 = !DILocation(line: 0, scope: !18000)
!18016 = !DILocation(line: 46, column: 18, scope: !18017)
!18017 = distinct !DILexicalBlock(scope: !18000, file: !1124, line: 45, column: 62)
!18018 = distinct !{!18018, !18003, !18019}
!18019 = !DILocation(line: 47, column: 13, scope: !18000)
!18020 = !DILocation(line: 48, column: 17, scope: !18021)
!18021 = distinct !DILexicalBlock(scope: !18000, file: !1124, line: 48, column: 17)
!18022 = !DILocation(line: 48, column: 21, scope: !18021)
!18023 = !DILocation(line: 48, column: 19, scope: !18021)
!18024 = !DILocation(line: 48, column: 23, scope: !18021)
!18025 = !DILocation(line: 48, column: 30, scope: !18021)
!18026 = !DILocation(line: 48, column: 26, scope: !18021)
!18027 = !DILocation(line: 48, column: 33, scope: !18021)
!18028 = !DILocation(line: 48, column: 17, scope: !18000)
!18029 = !DILocation(line: 49, column: 18, scope: !18030)
!18030 = distinct !DILexicalBlock(scope: !18021, file: !1124, line: 48, column: 41)
!18031 = !DILocation(line: 50, column: 17, scope: !18030)
!18032 = !DILocation(line: 50, column: 24, scope: !18030)
!18033 = !DILocation(line: 50, column: 28, scope: !18030)
!18034 = !DILocation(line: 50, column: 26, scope: !18030)
!18035 = !DILocation(line: 50, column: 30, scope: !18030)
!18036 = !DILocation(line: 50, column: 37, scope: !18030)
!18037 = !DILocation(line: 50, column: 33, scope: !18030)
!18038 = !DILocation(line: 50, column: 40, scope: !18030)
!18039 = !DILocation(line: 0, scope: !18030)
!18040 = !DILocation(line: 51, column: 22, scope: !18041)
!18041 = distinct !DILexicalBlock(scope: !18030, file: !1124, line: 50, column: 48)
!18042 = distinct !{!18042, !18031, !18043}
!18043 = !DILocation(line: 52, column: 17, scope: !18030)
!18044 = !DILocation(line: 53, column: 18, scope: !18030)
!18045 = !DILocation(line: 54, column: 29, scope: !18046)
!18046 = distinct !DILexicalBlock(scope: !18030, file: !1124, line: 54, column: 21)
!18047 = !DILocation(line: 54, column: 35, scope: !18046)
!18048 = !DILocation(line: 54, column: 33, scope: !18046)
!18049 = !DILocation(line: 54, column: 21, scope: !18046)
!18050 = !DILocation(line: 55, column: 37, scope: !18046)
!18051 = !DILocation(line: 55, column: 21, scope: !18046)
!18052 = !DILocation(line: 54, column: 48, scope: !18046)
!18053 = !DILocation(line: 54, column: 21, scope: !18030)
!18054 = !DILocation(line: 56, column: 21, scope: !18055)
!18055 = distinct !DILexicalBlock(scope: !18046, file: !1124, line: 55, column: 50)
!18056 = !DILocation(line: 56, column: 28, scope: !18055)
!18057 = !DILocation(line: 56, column: 32, scope: !18055)
!18058 = !DILocation(line: 56, column: 30, scope: !18055)
!18059 = !DILocation(line: 56, column: 34, scope: !18055)
!18060 = !DILocation(line: 56, column: 41, scope: !18055)
!18061 = !DILocation(line: 56, column: 37, scope: !18055)
!18062 = !DILocation(line: 56, column: 44, scope: !18055)
!18063 = !DILocation(line: 0, scope: !18055)
!18064 = !DILocation(line: 57, column: 26, scope: !18065)
!18065 = distinct !DILexicalBlock(scope: !18055, file: !1124, line: 56, column: 52)
!18066 = distinct !{!18066, !18054, !18067}
!18067 = !DILocation(line: 58, column: 21, scope: !18055)
!18068 = !DILocation(line: 59, column: 29, scope: !18069)
!18069 = distinct !DILexicalBlock(scope: !18055, file: !1124, line: 59, column: 25)
!18070 = !DILocation(line: 59, column: 25, scope: !18069)
!18071 = !DILocation(line: 59, column: 32, scope: !18069)
!18072 = !DILocation(line: 59, column: 25, scope: !18055)
!18073 = !DILocation(line: 60, column: 26, scope: !18074)
!18074 = distinct !DILexicalBlock(scope: !18069, file: !1124, line: 59, column: 40)
!18075 = !DILocation(line: 61, column: 25, scope: !18074)
!18076 = !DILocation(line: 61, column: 32, scope: !18074)
!18077 = !DILocation(line: 61, column: 36, scope: !18074)
!18078 = !DILocation(line: 61, column: 34, scope: !18074)
!18079 = !DILocation(line: 61, column: 38, scope: !18074)
!18080 = !DILocation(line: 61, column: 45, scope: !18074)
!18081 = !DILocation(line: 61, column: 41, scope: !18074)
!18082 = !DILocation(line: 61, column: 48, scope: !18074)
!18083 = !DILocation(line: 0, scope: !18074)
!18084 = !DILocation(line: 62, column: 30, scope: !18085)
!18085 = distinct !DILexicalBlock(scope: !18074, file: !1124, line: 61, column: 56)
!18086 = distinct !{!18086, !18075, !18087}
!18087 = !DILocation(line: 63, column: 25, scope: !18074)
!18088 = !DILocation(line: 64, column: 33, scope: !18089)
!18089 = distinct !DILexicalBlock(scope: !18074, file: !1124, line: 64, column: 29)
!18090 = !DILocation(line: 64, column: 29, scope: !18089)
!18091 = !DILocation(line: 64, column: 36, scope: !18089)
!18092 = !DILocation(line: 64, column: 29, scope: !18074)
!18093 = !DILocation(line: 65, column: 30, scope: !18094)
!18094 = distinct !DILexicalBlock(scope: !18089, file: !1124, line: 64, column: 44)
!18095 = !DILocation(line: 66, column: 41, scope: !18096)
!18096 = distinct !DILexicalBlock(scope: !18094, file: !1124, line: 66, column: 33)
!18097 = !DILocation(line: 66, column: 47, scope: !18096)
!18098 = !DILocation(line: 66, column: 45, scope: !18096)
!18099 = !DILocation(line: 66, column: 33, scope: !18096)
!18100 = !DILocation(line: 66, column: 60, scope: !18096)
!18101 = !DILocation(line: 66, column: 33, scope: !18094)
!18102 = !DILocation(line: 67, column: 34, scope: !18103)
!18103 = distinct !DILexicalBlock(scope: !18096, file: !1124, line: 66, column: 78)
!18104 = !DILocation(line: 68, column: 29, scope: !18103)
!18105 = !DILocation(line: 69, column: 25, scope: !18094)
!18106 = !DILocation(line: 70, column: 21, scope: !18074)
!18107 = !DILocation(line: 71, column: 17, scope: !18055)
!18108 = !DILocation(line: 72, column: 13, scope: !18030)
!18109 = !DILocation(line: 73, column: 17, scope: !18000)
!18110 = !DILocation(line: 73, column: 15, scope: !18000)
!18111 = !DILocation(line: 74, column: 13, scope: !18000)
!18112 = !DILocation(line: 74, column: 20, scope: !18000)
!18113 = !DILocation(line: 74, column: 24, scope: !18000)
!18114 = !DILocation(line: 74, column: 22, scope: !18000)
!18115 = !DILocation(line: 74, column: 26, scope: !18000)
!18116 = !DILocation(line: 74, column: 33, scope: !18000)
!18117 = !DILocation(line: 74, column: 29, scope: !18000)
!18118 = !DILocation(line: 74, column: 36, scope: !18000)
!18119 = !DILocation(line: 75, column: 18, scope: !18120)
!18120 = distinct !DILexicalBlock(scope: !18000, file: !1124, line: 74, column: 45)
!18121 = distinct !{!18121, !18111, !18122}
!18122 = !DILocation(line: 76, column: 13, scope: !18000)
!18123 = distinct !{!18123, !17995, !18124}
!18124 = !DILocation(line: 77, column: 9, scope: !17952)
!18125 = !DILocation(line: 78, column: 13, scope: !18126)
!18126 = distinct !DILexicalBlock(scope: !17952, file: !1124, line: 78, column: 13)
!18127 = !DILocation(line: 78, column: 17, scope: !18126)
!18128 = !DILocation(line: 78, column: 15, scope: !18126)
!18129 = !DILocation(line: 78, column: 13, scope: !17952)
!18130 = !DILocation(line: 79, column: 20, scope: !18131)
!18131 = distinct !DILexicalBlock(scope: !18126, file: !1124, line: 78, column: 20)
!18132 = !DILocation(line: 79, column: 33, scope: !18131)
!18133 = !DILocation(line: 79, column: 39, scope: !18131)
!18134 = !DILocation(line: 79, column: 37, scope: !18131)
!18135 = !DILocation(line: 79, column: 52, scope: !18131)
!18136 = !DILocation(line: 79, column: 56, scope: !18131)
!18137 = !DILocation(line: 79, column: 54, scope: !18131)
!18138 = !DILocation(line: 79, column: 42, scope: !18131)
!18139 = !DILocation(line: 80, column: 9, scope: !18131)
!18140 = !DILocation(line: 81, column: 14, scope: !17952)
!18141 = !DILocation(line: 81, column: 11, scope: !17952)
!18142 = !DILocation(line: 82, column: 11, scope: !17952)
!18143 = !DILocation(line: 27, column: 5, scope: !17953)
!18144 = distinct !{!18144, !18145, !18146}
!18145 = !DILocation(line: 27, column: 5, scope: !17954)
!18146 = !DILocation(line: 83, column: 5, scope: !17954)
!18147 = !DILocation(line: 84, column: 11, scope: !17916)
!18148 = !DILocation(line: 84, column: 5, scope: !17916)
!18149 = !DILocation(line: 86, column: 12, scope: !17916)
!18150 = !DILocation(line: 86, column: 5, scope: !17916)
!18151 = !DILocation(line: 87, column: 1, scope: !17916)
!18152 = distinct !DISubprogram(name: "init_aliases", scope: !919, file: !919, line: 57, type: !9734, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !918, retainedNodes: !471)
!18153 = !DILocalVariable(name: "fp", scope: !18152, file: !919, line: 59, type: !18154)
!18154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18155, size: 64)
!18155 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2990, line: 7, baseType: !18156)
!18156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2992, line: 49, size: 1728, elements: !18157)
!18157 = !{!18158, !18159, !18160, !18161, !18162, !18163, !18164, !18165, !18166, !18167, !18168, !18169, !18170, !18171, !18173, !18174, !18175, !18176, !18177, !18178, !18179, !18180, !18181, !18182, !18183, !18184, !18185, !18186, !18187}
!18158 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !18156, file: !2992, line: 51, baseType: !326, size: 32)
!18159 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !18156, file: !2992, line: 54, baseType: !308, size: 64, offset: 64)
!18160 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !18156, file: !2992, line: 55, baseType: !308, size: 64, offset: 128)
!18161 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !18156, file: !2992, line: 56, baseType: !308, size: 64, offset: 192)
!18162 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !18156, file: !2992, line: 57, baseType: !308, size: 64, offset: 256)
!18163 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !18156, file: !2992, line: 58, baseType: !308, size: 64, offset: 320)
!18164 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !18156, file: !2992, line: 59, baseType: !308, size: 64, offset: 384)
!18165 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !18156, file: !2992, line: 60, baseType: !308, size: 64, offset: 448)
!18166 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !18156, file: !2992, line: 61, baseType: !308, size: 64, offset: 512)
!18167 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !18156, file: !2992, line: 64, baseType: !308, size: 64, offset: 576)
!18168 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !18156, file: !2992, line: 65, baseType: !308, size: 64, offset: 640)
!18169 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !18156, file: !2992, line: 66, baseType: !308, size: 64, offset: 704)
!18170 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !18156, file: !2992, line: 68, baseType: !3007, size: 64, offset: 768)
!18171 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !18156, file: !2992, line: 70, baseType: !18172, size: 64, offset: 832)
!18172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18156, size: 64)
!18173 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !18156, file: !2992, line: 72, baseType: !326, size: 32, offset: 896)
!18174 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !18156, file: !2992, line: 73, baseType: !326, size: 32, offset: 928)
!18175 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !18156, file: !2992, line: 74, baseType: !346, size: 64, offset: 960)
!18176 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !18156, file: !2992, line: 77, baseType: !321, size: 16, offset: 1024)
!18177 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !18156, file: !2992, line: 78, baseType: !396, size: 8, offset: 1040)
!18178 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !18156, file: !2992, line: 79, baseType: !356, size: 8, offset: 1048)
!18179 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !18156, file: !2992, line: 81, baseType: !3018, size: 64, offset: 1088)
!18180 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !18156, file: !2992, line: 89, baseType: !3021, size: 64, offset: 1152)
!18181 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !18156, file: !2992, line: 91, baseType: !3023, size: 64, offset: 1216)
!18182 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !18156, file: !2992, line: 92, baseType: !3026, size: 64, offset: 1280)
!18183 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !18156, file: !2992, line: 93, baseType: !18172, size: 64, offset: 1344)
!18184 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !18156, file: !2992, line: 94, baseType: !303, size: 64, offset: 1408)
!18185 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !18156, file: !2992, line: 95, baseType: !304, size: 64, offset: 1472)
!18186 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !18156, file: !2992, line: 96, baseType: !326, size: 32, offset: 1536)
!18187 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !18156, file: !2992, line: 98, baseType: !3033, size: 160, offset: 1568)
!18188 = !DILocation(line: 59, column: 11, scope: !18152)
!18189 = !DILocalVariable(name: "alias", scope: !18152, file: !919, line: 60, type: !18190)
!18190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 2056, elements: !18191)
!18191 = !{!18192}
!18192 = !DISubrange(count: 257)
!18193 = !DILocation(line: 60, column: 10, scope: !18152)
!18194 = !DILocalVariable(name: "dir", scope: !18152, file: !919, line: 61, type: !606)
!18195 = !DILocation(line: 61, column: 10, scope: !18152)
!18196 = !DILocation(line: 63, column: 15, scope: !18197)
!18197 = distinct !DILexicalBlock(scope: !18152, file: !919, line: 63, column: 9)
!18198 = !DILocation(line: 63, column: 13, scope: !18197)
!18199 = !DILocation(line: 63, column: 41, scope: !18197)
!18200 = !DILocation(line: 63, column: 9, scope: !18152)
!18201 = !DILocation(line: 64, column: 9, scope: !18202)
!18202 = distinct !DILexicalBlock(scope: !18197, file: !919, line: 63, column: 50)
!18203 = !DILocation(line: 66, column: 5, scope: !18152)
!18204 = !DILocation(line: 66, column: 18, scope: !18152)
!18205 = !DILocation(line: 66, column: 39, scope: !18152)
!18206 = !DILocation(line: 66, column: 12, scope: !18152)
!18207 = !DILocation(line: 66, column: 43, scope: !18152)
!18208 = !DILocation(line: 67, column: 13, scope: !18209)
!18209 = distinct !DILexicalBlock(scope: !18210, file: !919, line: 67, column: 13)
!18210 = distinct !DILexicalBlock(scope: !18152, file: !919, line: 66, column: 52)
!18211 = !DILocation(line: 67, column: 20, scope: !18209)
!18212 = !DILocation(line: 67, column: 27, scope: !18209)
!18213 = !DILocation(line: 67, column: 30, scope: !18209)
!18214 = !DILocation(line: 67, column: 37, scope: !18209)
!18215 = !DILocation(line: 67, column: 45, scope: !18209)
!18216 = !DILocation(line: 67, column: 48, scope: !18209)
!18217 = !DILocation(line: 67, column: 55, scope: !18209)
!18218 = !DILocation(line: 67, column: 13, scope: !18210)
!18219 = !DILocation(line: 68, column: 13, scope: !18220)
!18220 = distinct !DILexicalBlock(scope: !18209, file: !919, line: 67, column: 61)
!18221 = distinct !{!18221, !18203, !18222}
!18222 = !DILocation(line: 108, column: 5, scope: !18152)
!18223 = !DILocalVariable(name: "z", scope: !18224, file: !919, line: 71, type: !749)
!18224 = distinct !DILexicalBlock(scope: !18210, file: !919, line: 70, column: 9)
!18225 = !DILocation(line: 71, column: 26, scope: !18224)
!18226 = !DILocation(line: 71, column: 30, scope: !18224)
!18227 = !DILocation(line: 71, column: 45, scope: !18224)
!18228 = !DILocation(line: 71, column: 38, scope: !18224)
!18229 = !DILocation(line: 71, column: 36, scope: !18224)
!18230 = !DILocation(line: 71, column: 52, scope: !18224)
!18231 = !DILocation(line: 73, column: 18, scope: !18232)
!18232 = distinct !DILexicalBlock(scope: !18224, file: !919, line: 73, column: 17)
!18233 = !DILocation(line: 73, column: 17, scope: !18232)
!18234 = !DILocation(line: 73, column: 20, scope: !18232)
!18235 = !DILocation(line: 73, column: 17, scope: !18224)
!18236 = !DILocation(line: 74, column: 17, scope: !18237)
!18237 = distinct !DILexicalBlock(scope: !18232, file: !919, line: 73, column: 29)
!18238 = !DILocation(line: 76, column: 14, scope: !18224)
!18239 = !DILocation(line: 76, column: 16, scope: !18224)
!18240 = !DILocation(line: 78, column: 9, scope: !18210)
!18241 = !DILocation(line: 79, column: 23, scope: !18242)
!18242 = distinct !DILexicalBlock(scope: !18243, file: !919, line: 79, column: 17)
!18243 = distinct !DILexicalBlock(scope: !18210, file: !919, line: 78, column: 12)
!18244 = !DILocation(line: 79, column: 40, scope: !18242)
!18245 = !DILocation(line: 79, column: 17, scope: !18242)
!18246 = !DILocation(line: 79, column: 44, scope: !18242)
!18247 = !DILocation(line: 79, column: 52, scope: !18242)
!18248 = !DILocation(line: 79, column: 55, scope: !18242)
!18249 = !DILocation(line: 79, column: 60, scope: !18242)
!18250 = !DILocation(line: 79, column: 17, scope: !18243)
!18251 = !DILocation(line: 80, column: 17, scope: !18252)
!18252 = distinct !DILexicalBlock(scope: !18242, file: !919, line: 79, column: 66)
!18253 = !DILocalVariable(name: "z", scope: !18254, file: !919, line: 83, type: !749)
!18254 = distinct !DILexicalBlock(scope: !18243, file: !919, line: 82, column: 13)
!18255 = !DILocation(line: 83, column: 30, scope: !18254)
!18256 = !DILocation(line: 83, column: 34, scope: !18254)
!18257 = !DILocation(line: 83, column: 47, scope: !18254)
!18258 = !DILocation(line: 83, column: 40, scope: !18254)
!18259 = !DILocation(line: 83, column: 38, scope: !18254)
!18260 = !DILocation(line: 83, column: 52, scope: !18254)
!18261 = !DILocation(line: 85, column: 22, scope: !18262)
!18262 = distinct !DILexicalBlock(scope: !18254, file: !919, line: 85, column: 21)
!18263 = !DILocation(line: 85, column: 21, scope: !18262)
!18264 = !DILocation(line: 85, column: 24, scope: !18262)
!18265 = !DILocation(line: 85, column: 21, scope: !18254)
!18266 = !DILocation(line: 86, column: 22, scope: !18267)
!18267 = distinct !DILexicalBlock(scope: !18262, file: !919, line: 85, column: 33)
!18268 = !DILocation(line: 86, column: 24, scope: !18267)
!18269 = !DILocation(line: 87, column: 17, scope: !18267)
!18270 = !DILocation(line: 89, column: 9, scope: !18243)
!18271 = !DILocation(line: 89, column: 18, scope: !18210)
!18272 = !DILocation(line: 89, column: 23, scope: !18210)
!18273 = !DILocation(line: 89, column: 30, scope: !18210)
!18274 = !DILocation(line: 89, column: 33, scope: !18210)
!18275 = !DILocation(line: 89, column: 38, scope: !18210)
!18276 = distinct !{!18276, !18240, !18277}
!18277 = !DILocation(line: 89, column: 42, scope: !18210)
!18278 = !DILocation(line: 90, column: 13, scope: !18279)
!18279 = distinct !DILexicalBlock(scope: !18210, file: !919, line: 90, column: 13)
!18280 = !DILocation(line: 90, column: 18, scope: !18279)
!18281 = !DILocation(line: 90, column: 13, scope: !18210)
!18282 = !DILocation(line: 91, column: 32, scope: !18283)
!18283 = distinct !DILexicalBlock(scope: !18284, file: !919, line: 91, column: 17)
!18284 = distinct !DILexicalBlock(scope: !18279, file: !919, line: 90, column: 27)
!18285 = !DILocation(line: 91, column: 30, scope: !18283)
!18286 = !DILocation(line: 91, column: 23, scope: !18283)
!18287 = !DILocation(line: 91, column: 54, scope: !18283)
!18288 = !DILocation(line: 91, column: 62, scope: !18283)
!18289 = !DILocation(line: 92, column: 39, scope: !18283)
!18290 = !DILocation(line: 92, column: 32, scope: !18283)
!18291 = !DILocation(line: 92, column: 18, scope: !18283)
!18292 = !DILocation(line: 92, column: 24, scope: !18283)
!18293 = !DILocation(line: 92, column: 30, scope: !18283)
!18294 = !DILocation(line: 92, column: 47, scope: !18283)
!18295 = !DILocation(line: 92, column: 55, scope: !18283)
!18296 = !DILocation(line: 93, column: 37, scope: !18283)
!18297 = !DILocation(line: 93, column: 30, scope: !18283)
!18298 = !DILocation(line: 93, column: 18, scope: !18283)
!18299 = !DILocation(line: 93, column: 24, scope: !18283)
!18300 = !DILocation(line: 93, column: 28, scope: !18283)
!18301 = !DILocation(line: 93, column: 43, scope: !18283)
!18302 = !DILocation(line: 91, column: 17, scope: !18284)
!18303 = !DILocation(line: 94, column: 17, scope: !18304)
!18304 = distinct !DILexicalBlock(scope: !18283, file: !919, line: 93, column: 52)
!18305 = !DILocation(line: 96, column: 13, scope: !18284)
!18306 = !DILocation(line: 96, column: 19, scope: !18284)
!18307 = !DILocation(line: 96, column: 24, scope: !18284)
!18308 = !DILocation(line: 97, column: 9, scope: !18284)
!18309 = !DILocalVariable(name: "curr", scope: !18310, file: !919, line: 98, type: !924)
!18310 = distinct !DILexicalBlock(scope: !18279, file: !919, line: 97, column: 16)
!18311 = !DILocation(line: 98, column: 23, scope: !18310)
!18312 = !DILocation(line: 100, column: 25, scope: !18313)
!18313 = distinct !DILexicalBlock(scope: !18310, file: !919, line: 100, column: 17)
!18314 = !DILocation(line: 100, column: 23, scope: !18313)
!18315 = !DILocation(line: 100, column: 47, scope: !18313)
!18316 = !DILocation(line: 100, column: 55, scope: !18313)
!18317 = !DILocation(line: 101, column: 39, scope: !18313)
!18318 = !DILocation(line: 101, column: 32, scope: !18313)
!18319 = !DILocation(line: 101, column: 18, scope: !18313)
!18320 = !DILocation(line: 101, column: 24, scope: !18313)
!18321 = !DILocation(line: 101, column: 30, scope: !18313)
!18322 = !DILocation(line: 101, column: 47, scope: !18313)
!18323 = !DILocation(line: 101, column: 55, scope: !18313)
!18324 = !DILocation(line: 102, column: 37, scope: !18313)
!18325 = !DILocation(line: 102, column: 30, scope: !18313)
!18326 = !DILocation(line: 102, column: 18, scope: !18313)
!18327 = !DILocation(line: 102, column: 24, scope: !18313)
!18328 = !DILocation(line: 102, column: 28, scope: !18313)
!18329 = !DILocation(line: 102, column: 43, scope: !18313)
!18330 = !DILocation(line: 100, column: 17, scope: !18310)
!18331 = !DILocation(line: 103, column: 17, scope: !18332)
!18332 = distinct !DILexicalBlock(scope: !18313, file: !919, line: 102, column: 52)
!18333 = !DILocation(line: 105, column: 26, scope: !18310)
!18334 = !DILocation(line: 105, column: 13, scope: !18310)
!18335 = !DILocation(line: 105, column: 19, scope: !18310)
!18336 = !DILocation(line: 105, column: 24, scope: !18310)
!18337 = !DILocation(line: 106, column: 20, scope: !18310)
!18338 = !DILocation(line: 106, column: 18, scope: !18310)
!18339 = !DILocation(line: 109, column: 12, scope: !18152)
!18340 = !DILocation(line: 109, column: 5, scope: !18152)
!18341 = !DILocation(line: 110, column: 15, scope: !18152)
!18342 = !DILocation(line: 112, column: 5, scope: !18152)
!18343 = !DILabel(scope: !18152, name: "bad", file: !919, line: 114)
!18344 = !DILocation(line: 114, column: 5, scope: !18152)
!18345 = !DILocation(line: 115, column: 12, scope: !18152)
!18346 = !DILocation(line: 115, column: 5, scope: !18152)
!18347 = !DILocation(line: 116, column: 5, scope: !18152)
!18348 = !DILocation(line: 118, column: 5, scope: !18152)
!18349 = !DILocation(line: 119, column: 1, scope: !18152)
!18350 = distinct !DISubprogram(name: "lookup_alias", scope: !919, file: !919, line: 122, type: !1539, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !918, retainedNodes: !471)
!18351 = !DILocalVariable(name: "alias", arg: 1, scope: !18350, file: !919, line: 122, type: !385)
!18352 = !DILocation(line: 122, column: 32, scope: !18350)
!18353 = !DILocalVariable(name: "curr", scope: !18350, file: !919, line: 124, type: !18354)
!18354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18355, size: 64)
!18355 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !925)
!18356 = !DILocation(line: 124, column: 21, scope: !18350)
!18357 = !DILocation(line: 124, column: 28, scope: !18350)
!18358 = !DILocation(line: 126, column: 9, scope: !18359)
!18359 = distinct !DILexicalBlock(scope: !18350, file: !919, line: 126, column: 9)
!18360 = !DILocation(line: 126, column: 20, scope: !18359)
!18361 = !DILocation(line: 126, column: 9, scope: !18350)
!18362 = !DILocation(line: 127, column: 9, scope: !18363)
!18363 = distinct !DILexicalBlock(scope: !18359, file: !919, line: 126, column: 26)
!18364 = !DILocation(line: 129, column: 5, scope: !18350)
!18365 = !DILocation(line: 129, column: 12, scope: !18350)
!18366 = !DILocation(line: 129, column: 17, scope: !18350)
!18367 = !DILocation(line: 130, column: 20, scope: !18368)
!18368 = distinct !DILexicalBlock(scope: !18369, file: !919, line: 130, column: 13)
!18369 = distinct !DILexicalBlock(scope: !18350, file: !919, line: 129, column: 26)
!18370 = !DILocation(line: 130, column: 26, scope: !18368)
!18371 = !DILocation(line: 130, column: 33, scope: !18368)
!18372 = !DILocation(line: 130, column: 13, scope: !18368)
!18373 = !DILocation(line: 130, column: 40, scope: !18368)
!18374 = !DILocation(line: 130, column: 13, scope: !18369)
!18375 = !DILocation(line: 131, column: 20, scope: !18376)
!18376 = distinct !DILexicalBlock(scope: !18368, file: !919, line: 130, column: 46)
!18377 = !DILocation(line: 131, column: 26, scope: !18376)
!18378 = !DILocation(line: 131, column: 13, scope: !18376)
!18379 = !DILocation(line: 133, column: 16, scope: !18369)
!18380 = !DILocation(line: 133, column: 22, scope: !18369)
!18381 = !DILocation(line: 133, column: 14, scope: !18369)
!18382 = distinct !{!18382, !18364, !18383}
!18383 = !DILocation(line: 134, column: 5, scope: !18350)
!18384 = !DILocation(line: 135, column: 5, scope: !18350)
!18385 = !DILocation(line: 136, column: 1, scope: !18350)
!18386 = distinct !DISubprogram(name: "print_aliases", scope: !919, file: !919, line: 139, type: !486, scopeLine: 140, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !918, retainedNodes: !471)
!18387 = !DILocalVariable(name: "curr", scope: !18386, file: !919, line: 141, type: !18354)
!18388 = !DILocation(line: 141, column: 21, scope: !18386)
!18389 = !DILocation(line: 141, column: 28, scope: !18386)
!18390 = !DILocation(line: 143, column: 9, scope: !18391)
!18391 = distinct !DILexicalBlock(scope: !18386, file: !919, line: 143, column: 9)
!18392 = !DILocation(line: 143, column: 20, scope: !18391)
!18393 = !DILocation(line: 143, column: 9, scope: !18386)
!18394 = !DILocation(line: 144, column: 9, scope: !18395)
!18395 = distinct !DILexicalBlock(scope: !18391, file: !919, line: 143, column: 26)
!18396 = !DILocation(line: 146, column: 9, scope: !18395)
!18397 = !DILocation(line: 148, column: 5, scope: !18386)
!18398 = !DILocation(line: 149, column: 5, scope: !18386)
!18399 = !DILocation(line: 149, column: 12, scope: !18386)
!18400 = !DILocation(line: 149, column: 17, scope: !18386)
!18401 = !DILocalVariable(name: "line", scope: !18402, file: !919, line: 150, type: !18403)
!18402 = distinct !DILexicalBlock(scope: !18386, file: !919, line: 149, column: 26)
!18403 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 34840, elements: !18404)
!18404 = !{!18405}
!18405 = !DISubrange(count: 4355)
!18406 = !DILocation(line: 150, column: 14, scope: !18402)
!18407 = !DILocation(line: 152, column: 18, scope: !18402)
!18408 = !DILocation(line: 152, column: 47, scope: !18402)
!18409 = !DILocation(line: 152, column: 53, scope: !18402)
!18410 = !DILocation(line: 152, column: 60, scope: !18402)
!18411 = !DILocation(line: 152, column: 66, scope: !18402)
!18412 = !DILocation(line: 152, column: 9, scope: !18402)
!18413 = !DILocation(line: 153, column: 30, scope: !18402)
!18414 = !DILocation(line: 153, column: 9, scope: !18402)
!18415 = !DILocation(line: 154, column: 16, scope: !18402)
!18416 = !DILocation(line: 154, column: 22, scope: !18402)
!18417 = !DILocation(line: 154, column: 14, scope: !18402)
!18418 = distinct !{!18418, !18398, !18419}
!18419 = !DILocation(line: 155, column: 5, scope: !18386)
!18420 = !DILocation(line: 156, column: 5, scope: !18386)
!18421 = !DILocation(line: 157, column: 1, scope: !18386)
!18422 = distinct !DISubprogram(name: "iptrack_delete_pid", scope: !938, file: !938, line: 16, type: !18423, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !937, retainedNodes: !471)
!18423 = !DISubroutineType(types: !18424)
!18424 = !{null, !18425}
!18425 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !392)
!18426 = !DILocalVariable(name: "pid", arg: 1, scope: !18422, file: !938, line: 16, type: !18425)
!18427 = !DILocation(line: 16, column: 37, scope: !18422)
!18428 = !DILocalVariable(name: "c", scope: !18422, file: !938, line: 18, type: !7)
!18429 = !DILocation(line: 18, column: 18, scope: !18422)
!18430 = !DILocation(line: 20, column: 9, scope: !18431)
!18431 = distinct !DILexicalBlock(scope: !18422, file: !938, line: 20, column: 9)
!18432 = !DILocation(line: 20, column: 22, scope: !18431)
!18433 = !DILocation(line: 20, column: 9, scope: !18422)
!18434 = !DILocation(line: 21, column: 9, scope: !18435)
!18435 = distinct !DILexicalBlock(scope: !18431, file: !938, line: 20, column: 31)
!18436 = !DILocation(line: 23, column: 5, scope: !18422)
!18437 = !DILocation(line: 24, column: 13, scope: !18438)
!18438 = distinct !DILexicalBlock(scope: !18439, file: !938, line: 24, column: 13)
!18439 = distinct !DILexicalBlock(scope: !18422, file: !938, line: 23, column: 8)
!18440 = !DILocation(line: 24, column: 26, scope: !18438)
!18441 = !DILocation(line: 24, column: 29, scope: !18438)
!18442 = !DILocation(line: 24, column: 36, scope: !18438)
!18443 = !DILocation(line: 24, column: 33, scope: !18438)
!18444 = !DILocation(line: 24, column: 13, scope: !18439)
!18445 = !DILocation(line: 25, column: 13, scope: !18446)
!18446 = distinct !DILexicalBlock(scope: !18438, file: !938, line: 24, column: 41)
!18447 = !DILocation(line: 25, column: 26, scope: !18446)
!18448 = !DILocation(line: 25, column: 29, scope: !18446)
!18449 = !DILocation(line: 25, column: 33, scope: !18446)
!18450 = !DILocation(line: 26, column: 13, scope: !18446)
!18451 = !DILocation(line: 28, column: 10, scope: !18439)
!18452 = !DILocation(line: 29, column: 5, scope: !18439)
!18453 = !DILocation(line: 29, column: 14, scope: !18422)
!18454 = !DILocation(line: 29, column: 18, scope: !18422)
!18455 = !DILocation(line: 29, column: 16, scope: !18422)
!18456 = distinct !{!18456, !18436, !18457}
!18457 = !DILocation(line: 29, column: 26, scope: !18422)
!18458 = !DILocation(line: 30, column: 1, scope: !18422)
!18459 = distinct !DISubprogram(name: "iptrack_free", scope: !938, file: !938, line: 32, type: !486, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !937, retainedNodes: !471)
!18460 = !DILocation(line: 34, column: 10, scope: !18459)
!18461 = !DILocation(line: 34, column: 5, scope: !18459)
!18462 = !DILocation(line: 35, column: 18, scope: !18459)
!18463 = !DILocation(line: 36, column: 1, scope: !18459)
!18464 = distinct !DISubprogram(name: "iptrack_get", scope: !938, file: !938, line: 66, type: !18465, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !937, retainedNodes: !471)
!18465 = !DISubroutineType(types: !18466)
!18466 = !{!7, !18467}
!18467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !18468)
!18468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18469, size: 64)
!18469 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !957)
!18470 = !DILocalVariable(name: "ip", arg: 1, scope: !18464, file: !938, line: 66, type: !18467)
!18471 = !DILocation(line: 66, column: 64, scope: !18464)
!18472 = !DILocalVariable(name: "c", scope: !18464, file: !938, line: 68, type: !7)
!18473 = !DILocation(line: 68, column: 18, scope: !18464)
!18474 = !DILocalVariable(name: "nb", scope: !18464, file: !938, line: 69, type: !7)
!18475 = !DILocation(line: 69, column: 18, scope: !18464)
!18476 = !DILocation(line: 71, column: 9, scope: !18477)
!18477 = distinct !DILexicalBlock(scope: !18464, file: !938, line: 71, column: 9)
!18478 = !DILocation(line: 71, column: 22, scope: !18477)
!18479 = !DILocation(line: 71, column: 9, scope: !18464)
!18480 = !DILocation(line: 72, column: 9, scope: !18481)
!18481 = distinct !DILexicalBlock(scope: !18477, file: !938, line: 71, column: 31)
!18482 = !DILocation(line: 74, column: 5, scope: !18464)
!18483 = !DILocation(line: 75, column: 13, scope: !18484)
!18484 = distinct !DILexicalBlock(scope: !18485, file: !938, line: 75, column: 13)
!18485 = distinct !DILexicalBlock(scope: !18464, file: !938, line: 74, column: 8)
!18486 = !DILocation(line: 75, column: 26, scope: !18484)
!18487 = !DILocation(line: 75, column: 29, scope: !18484)
!18488 = !DILocation(line: 75, column: 33, scope: !18484)
!18489 = !DILocation(line: 75, column: 46, scope: !18484)
!18490 = !DILocation(line: 76, column: 13, scope: !18484)
!18491 = !DILocation(line: 76, column: 51, scope: !18484)
!18492 = !DILocation(line: 76, column: 48, scope: !18484)
!18493 = !DILocation(line: 75, column: 13, scope: !18485)
!18494 = !DILocation(line: 77, column: 17, scope: !18495)
!18495 = distinct !DILexicalBlock(scope: !18496, file: !938, line: 77, column: 17)
!18496 = distinct !DILexicalBlock(scope: !18484, file: !938, line: 76, column: 72)
!18497 = !DILocation(line: 77, column: 52, scope: !18495)
!18498 = !DILocation(line: 77, column: 63, scope: !18495)
!18499 = !DILocation(line: 78, column: 17, scope: !18495)
!18500 = !DILocation(line: 78, column: 63, scope: !18495)
!18501 = !DILocation(line: 78, column: 60, scope: !18495)
!18502 = !DILocation(line: 77, column: 17, scope: !18496)
!18503 = !DILocation(line: 79, column: 19, scope: !18504)
!18504 = distinct !DILexicalBlock(scope: !18495, file: !938, line: 78, column: 92)
!18505 = !DILocation(line: 80, column: 13, scope: !18504)
!18506 = !DILocation(line: 80, column: 24, scope: !18507)
!18507 = distinct !DILexicalBlock(scope: !18495, file: !938, line: 80, column: 24)
!18508 = !DILocation(line: 80, column: 59, scope: !18507)
!18509 = !DILocation(line: 80, column: 71, scope: !18507)
!18510 = !DILocalVariable(name: "__a", scope: !18511, file: !938, line: 81, type: !940)
!18511 = distinct !DILexicalBlock(scope: !18507, file: !938, line: 81, column: 24)
!18512 = !DILocation(line: 81, column: 24, scope: !18511)
!18513 = !DILocalVariable(name: "__b", scope: !18511, file: !938, line: 81, type: !940)
!18514 = !DILocation(line: 0, scope: !18511)
!18515 = !DILocation(line: 81, column: 24, scope: !18507)
!18516 = !DILocation(line: 80, column: 24, scope: !18495)
!18517 = !DILocation(line: 84, column: 19, scope: !18518)
!18518 = distinct !DILexicalBlock(scope: !18507, file: !938, line: 83, column: 60)
!18519 = !DILocation(line: 85, column: 13, scope: !18518)
!18520 = !DILocation(line: 86, column: 9, scope: !18496)
!18521 = !DILocation(line: 87, column: 10, scope: !18485)
!18522 = !DILocation(line: 88, column: 5, scope: !18485)
!18523 = !DILocation(line: 88, column: 14, scope: !18464)
!18524 = !DILocation(line: 88, column: 18, scope: !18464)
!18525 = !DILocation(line: 88, column: 16, scope: !18464)
!18526 = distinct !{!18526, !18482, !18527}
!18527 = !DILocation(line: 88, column: 26, scope: !18464)
!18528 = !DILocation(line: 90, column: 12, scope: !18464)
!18529 = !DILocation(line: 90, column: 5, scope: !18464)
!18530 = !DILocation(line: 91, column: 1, scope: !18464)
!18531 = distinct !DISubprogram(name: "iptrack_add", scope: !938, file: !938, line: 93, type: !18532, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !937, retainedNodes: !471)
!18532 = !DISubroutineType(types: !18533)
!18533 = !{null, !18467, !18425}
!18534 = !DILocalVariable(name: "ip", arg: 1, scope: !18531, file: !938, line: 93, type: !18467)
!18535 = !DILocation(line: 93, column: 56, scope: !18531)
!18536 = !DILocalVariable(name: "pid", arg: 2, scope: !18531, file: !938, line: 94, type: !18425)
!18537 = !DILocation(line: 94, column: 30, scope: !18531)
!18538 = !DILocalVariable(name: "c", scope: !18531, file: !938, line: 96, type: !7)
!18539 = !DILocation(line: 96, column: 18, scope: !18531)
!18540 = !DILocation(line: 98, column: 9, scope: !18541)
!18541 = distinct !DILexicalBlock(scope: !18531, file: !938, line: 98, column: 9)
!18542 = !DILocation(line: 98, column: 22, scope: !18541)
!18543 = !DILocation(line: 98, column: 9, scope: !18531)
!18544 = !DILocalVariable(name: "ci", scope: !18545, file: !938, line: 99, type: !7)
!18545 = distinct !DILexicalBlock(scope: !18541, file: !938, line: 98, column: 31)
!18546 = !DILocation(line: 99, column: 22, scope: !18545)
!18547 = !DILocation(line: 101, column: 36, scope: !18548)
!18548 = distinct !DILexicalBlock(scope: !18545, file: !938, line: 101, column: 13)
!18549 = !DILocation(line: 101, column: 45, scope: !18548)
!18550 = !DILocation(line: 101, column: 29, scope: !18548)
!18551 = !DILocation(line: 101, column: 27, scope: !18548)
!18552 = !DILocation(line: 101, column: 70, scope: !18548)
!18553 = !DILocation(line: 101, column: 13, scope: !18545)
!18554 = !DILocation(line: 102, column: 13, scope: !18555)
!18555 = distinct !DILexicalBlock(scope: !18548, file: !938, line: 101, column: 79)
!18556 = !DILocation(line: 104, column: 9, scope: !18545)
!18557 = !DILocation(line: 105, column: 13, scope: !18558)
!18558 = distinct !DILexicalBlock(scope: !18545, file: !938, line: 104, column: 12)
!18559 = !DILocation(line: 105, column: 26, scope: !18558)
!18560 = !DILocation(line: 105, column: 30, scope: !18558)
!18561 = !DILocation(line: 105, column: 34, scope: !18558)
!18562 = !DILocation(line: 106, column: 15, scope: !18558)
!18563 = !DILocation(line: 107, column: 9, scope: !18558)
!18564 = !DILocation(line: 107, column: 18, scope: !18545)
!18565 = !DILocation(line: 107, column: 23, scope: !18545)
!18566 = !DILocation(line: 107, column: 21, scope: !18545)
!18567 = distinct !{!18567, !18556, !18568}
!18568 = !DILocation(line: 107, column: 31, scope: !18545)
!18569 = !DILocation(line: 108, column: 5, scope: !18545)
!18570 = !DILocation(line: 109, column: 5, scope: !18531)
!18571 = !DILocation(line: 110, column: 13, scope: !18572)
!18572 = distinct !DILexicalBlock(scope: !18573, file: !938, line: 110, column: 13)
!18573 = distinct !DILexicalBlock(scope: !18531, file: !938, line: 109, column: 8)
!18574 = !DILocation(line: 110, column: 26, scope: !18572)
!18575 = !DILocation(line: 110, column: 29, scope: !18572)
!18576 = !DILocation(line: 110, column: 33, scope: !18572)
!18577 = !DILocation(line: 110, column: 13, scope: !18573)
!18578 = !DILocation(line: 110, column: 48, scope: !18572)
!18579 = !DILabel(scope: !18580, name: "force", file: !938, line: 111)
!18580 = distinct !DILexicalBlock(scope: !18572, file: !938, line: 110, column: 48)
!18581 = !DILocation(line: 111, column: 13, scope: !18580)
!18582 = !DILocation(line: 112, column: 35, scope: !18580)
!18583 = !DILocation(line: 112, column: 13, scope: !18580)
!18584 = !DILocation(line: 112, column: 26, scope: !18580)
!18585 = !DILocation(line: 112, column: 29, scope: !18580)
!18586 = !DILocation(line: 112, column: 33, scope: !18580)
!18587 = !DILocation(line: 113, column: 13, scope: !18580)
!18588 = !DILocation(line: 113, column: 26, scope: !18580)
!18589 = !DILocation(line: 113, column: 29, scope: !18580)
!18590 = !DILocation(line: 113, column: 35, scope: !18580)
!18591 = !DILocation(line: 113, column: 34, scope: !18580)
!18592 = !DILocation(line: 114, column: 13, scope: !18580)
!18593 = !DILocation(line: 116, column: 10, scope: !18573)
!18594 = !DILocation(line: 117, column: 5, scope: !18573)
!18595 = !DILocation(line: 117, column: 14, scope: !18531)
!18596 = !DILocation(line: 117, column: 18, scope: !18531)
!18597 = !DILocation(line: 117, column: 16, scope: !18531)
!18598 = distinct !{!18598, !18570, !18599}
!18599 = !DILocation(line: 117, column: 26, scope: !18531)
!18600 = !DILocation(line: 118, column: 34, scope: !18531)
!18601 = !DILocation(line: 118, column: 9, scope: !18531)
!18602 = !DILocation(line: 118, column: 7, scope: !18531)
!18603 = !DILocation(line: 119, column: 5, scope: !18531)
!18604 = !DILocation(line: 120, column: 1, scope: !18531)
!18605 = distinct !DISubprogram(name: "iptrack_find_ip_or_shift", scope: !938, file: !938, line: 38, type: !18465, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !937, retainedNodes: !471)
!18606 = !DILocalVariable(name: "ip", arg: 1, scope: !18605, file: !938, line: 39, type: !18467)
!18607 = !DILocation(line: 39, column: 44, scope: !18605)
!18608 = !DILocalVariable(name: "c", scope: !18605, file: !938, line: 41, type: !7)
!18609 = !DILocation(line: 41, column: 18, scope: !18605)
!18610 = !DILocation(line: 43, column: 5, scope: !18605)
!18611 = !DILocation(line: 44, column: 13, scope: !18612)
!18612 = distinct !DILexicalBlock(scope: !18613, file: !938, line: 44, column: 13)
!18613 = distinct !DILexicalBlock(scope: !18605, file: !938, line: 43, column: 8)
!18614 = !DILocation(line: 44, column: 26, scope: !18612)
!18615 = !DILocation(line: 44, column: 29, scope: !18612)
!18616 = !DILocation(line: 44, column: 33, scope: !18612)
!18617 = !DILocation(line: 44, column: 46, scope: !18612)
!18618 = !DILocation(line: 45, column: 13, scope: !18612)
!18619 = !DILocation(line: 45, column: 51, scope: !18612)
!18620 = !DILocation(line: 45, column: 48, scope: !18612)
!18621 = !DILocation(line: 44, column: 13, scope: !18613)
!18622 = !DILocation(line: 46, column: 17, scope: !18623)
!18623 = distinct !DILexicalBlock(scope: !18624, file: !938, line: 46, column: 17)
!18624 = distinct !DILexicalBlock(scope: !18612, file: !938, line: 45, column: 72)
!18625 = !DILocation(line: 46, column: 52, scope: !18623)
!18626 = !DILocation(line: 46, column: 63, scope: !18623)
!18627 = !DILocation(line: 47, column: 17, scope: !18623)
!18628 = !DILocation(line: 47, column: 63, scope: !18623)
!18629 = !DILocation(line: 47, column: 60, scope: !18623)
!18630 = !DILocation(line: 46, column: 17, scope: !18624)
!18631 = !DILocation(line: 48, column: 24, scope: !18632)
!18632 = distinct !DILexicalBlock(scope: !18623, file: !938, line: 47, column: 92)
!18633 = !DILocation(line: 48, column: 17, scope: !18632)
!18634 = !DILocation(line: 49, column: 24, scope: !18635)
!18635 = distinct !DILexicalBlock(scope: !18623, file: !938, line: 49, column: 24)
!18636 = !DILocation(line: 49, column: 59, scope: !18635)
!18637 = !DILocation(line: 49, column: 71, scope: !18635)
!18638 = !DILocalVariable(name: "__a", scope: !18639, file: !938, line: 50, type: !940)
!18639 = distinct !DILexicalBlock(scope: !18635, file: !938, line: 50, column: 24)
!18640 = !DILocation(line: 50, column: 24, scope: !18639)
!18641 = !DILocalVariable(name: "__b", scope: !18639, file: !938, line: 50, type: !940)
!18642 = !DILocation(line: 0, scope: !18639)
!18643 = !DILocation(line: 50, column: 24, scope: !18635)
!18644 = !DILocation(line: 49, column: 24, scope: !18623)
!18645 = !DILocation(line: 53, column: 24, scope: !18646)
!18646 = distinct !DILexicalBlock(scope: !18635, file: !938, line: 52, column: 60)
!18647 = !DILocation(line: 53, column: 17, scope: !18646)
!18648 = !DILocation(line: 55, column: 9, scope: !18624)
!18649 = !DILocation(line: 56, column: 10, scope: !18613)
!18650 = !DILocation(line: 57, column: 5, scope: !18613)
!18651 = !DILocation(line: 57, column: 14, scope: !18605)
!18652 = !DILocation(line: 57, column: 18, scope: !18605)
!18653 = !DILocation(line: 57, column: 16, scope: !18605)
!18654 = distinct !{!18654, !18610, !18655}
!18655 = !DILocation(line: 57, column: 26, scope: !18605)
!18656 = !DILocation(line: 58, column: 6, scope: !18605)
!18657 = !DILocation(line: 59, column: 9, scope: !18658)
!18658 = distinct !DILexicalBlock(scope: !18605, file: !938, line: 59, column: 9)
!18659 = !DILocation(line: 59, column: 11, scope: !18658)
!18660 = !DILocation(line: 59, column: 9, scope: !18605)
!18661 = !DILocation(line: 60, column: 19, scope: !18662)
!18662 = distinct !DILexicalBlock(scope: !18658, file: !938, line: 59, column: 18)
!18663 = !DILocation(line: 60, column: 9, scope: !18662)
!18664 = !DILocation(line: 60, column: 39, scope: !18662)
!18665 = !DILocation(line: 61, column: 44, scope: !18662)
!18666 = !DILocation(line: 61, column: 42, scope: !18662)
!18667 = !DILocation(line: 62, column: 5, scope: !18662)
!18668 = !DILocation(line: 63, column: 12, scope: !18605)
!18669 = !DILocation(line: 63, column: 5, scope: !18605)
!18670 = !DILocation(line: 64, column: 1, scope: !18605)
!18671 = distinct !DISubprogram(name: "sfgets", scope: !966, file: !966, line: 70, type: !9734, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !965, retainedNodes: !471)
!18672 = !DILocalVariable(name: "pfd", scope: !18671, file: !966, line: 72, type: !18673)
!18673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !1014, line: 36, size: 64, elements: !18674)
!18674 = !{!18675, !18676, !18677}
!18675 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !18673, file: !1014, line: 38, baseType: !326, size: 32)
!18676 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !18673, file: !1014, line: 39, baseType: !2062, size: 16, offset: 32)
!18677 = !DIDerivedType(tag: DW_TAG_member, name: "revents", scope: !18673, file: !1014, line: 40, baseType: !2062, size: 16, offset: 48)
!18678 = !DILocation(line: 72, column: 19, scope: !18671)
!18679 = !DILocalVariable(name: "pollret", scope: !18671, file: !966, line: 73, type: !326)
!18680 = !DILocation(line: 73, column: 9, scope: !18671)
!18681 = !DILocalVariable(name: "readnb", scope: !18671, file: !966, line: 74, type: !383)
!18682 = !DILocation(line: 74, column: 13, scope: !18671)
!18683 = !DILocalVariable(name: "seen_r", scope: !18671, file: !966, line: 75, type: !396)
!18684 = !DILocation(line: 75, column: 17, scope: !18671)
!18685 = !DILocation(line: 77, column: 9, scope: !18686)
!18686 = distinct !DILexicalBlock(scope: !18671, file: !966, line: 77, column: 9)
!18687 = !DILocation(line: 77, column: 17, scope: !18686)
!18688 = !DILocation(line: 77, column: 9, scope: !18671)
!18689 = !DILocation(line: 78, column: 20, scope: !18690)
!18690 = distinct !DILexicalBlock(scope: !18686, file: !966, line: 77, column: 32)
!18691 = !DILocation(line: 78, column: 17, scope: !18690)
!18692 = !DILocation(line: 79, column: 28, scope: !18690)
!18693 = !DILocation(line: 79, column: 26, scope: !18690)
!18694 = !DILocation(line: 79, column: 37, scope: !18690)
!18695 = !DILocation(line: 79, column: 9, scope: !18690)
!18696 = !DILocation(line: 80, column: 17, scope: !18690)
!18697 = !DILocation(line: 81, column: 5, scope: !18690)
!18698 = !DILocation(line: 82, column: 14, scope: !18671)
!18699 = !DILocation(line: 82, column: 9, scope: !18671)
!18700 = !DILocation(line: 82, column: 12, scope: !18671)
!18701 = !DILocation(line: 86, column: 9, scope: !18671)
!18702 = !DILocation(line: 86, column: 16, scope: !18671)
!18703 = !DILocation(line: 88, column: 5, scope: !18671)
!18704 = !DILocation(line: 88, column: 12, scope: !18671)
!18705 = !DILocation(line: 88, column: 22, scope: !18671)
!18706 = !DILocation(line: 88, column: 20, scope: !18671)
!18707 = !DILocation(line: 89, column: 13, scope: !18708)
!18708 = distinct !DILexicalBlock(scope: !18709, file: !966, line: 89, column: 13)
!18709 = distinct !DILexicalBlock(scope: !18671, file: !966, line: 88, column: 31)
!18710 = !DILocation(line: 89, column: 24, scope: !18708)
!18711 = !DILocation(line: 89, column: 21, scope: !18708)
!18712 = !DILocation(line: 89, column: 13, scope: !18709)
!18713 = !DILocation(line: 90, column: 17, scope: !18714)
!18714 = distinct !DILexicalBlock(scope: !18708, file: !966, line: 89, column: 33)
!18715 = !DILocation(line: 90, column: 25, scope: !18714)
!18716 = !DILocation(line: 91, column: 13, scope: !18714)
!18717 = !DILocation(line: 91, column: 46, scope: !18714)
!18718 = !DILocation(line: 91, column: 55, scope: !18714)
!18719 = !DILocation(line: 91, column: 31, scope: !18714)
!18720 = !DILocation(line: 91, column: 29, scope: !18714)
!18721 = !DILocation(line: 91, column: 66, scope: !18714)
!18722 = !DILocation(line: 91, column: 70, scope: !18714)
!18723 = !DILocation(line: 92, column: 20, scope: !18714)
!18724 = !DILocation(line: 92, column: 26, scope: !18714)
!18725 = !DILocation(line: 0, scope: !18714)
!18726 = distinct !{!18726, !18716, !18727}
!18727 = !DILocation(line: 92, column: 35, scope: !18714)
!18728 = !DILocation(line: 93, column: 17, scope: !18729)
!18729 = distinct !DILexicalBlock(scope: !18714, file: !966, line: 93, column: 17)
!18730 = !DILocation(line: 93, column: 25, scope: !18729)
!18731 = !DILocation(line: 93, column: 17, scope: !18714)
!18732 = !DILocation(line: 94, column: 17, scope: !18733)
!18733 = distinct !DILexicalBlock(scope: !18729, file: !966, line: 93, column: 31)
!18734 = !DILocation(line: 96, column: 17, scope: !18735)
!18735 = distinct !DILexicalBlock(scope: !18714, file: !966, line: 96, column: 17)
!18736 = !DILocation(line: 96, column: 25, scope: !18735)
!18737 = !DILocation(line: 96, column: 30, scope: !18735)
!18738 = !DILocation(line: 97, column: 22, scope: !18735)
!18739 = !DILocation(line: 97, column: 18, scope: !18735)
!18740 = !DILocation(line: 97, column: 30, scope: !18735)
!18741 = !DILocation(line: 97, column: 64, scope: !18735)
!18742 = !DILocation(line: 96, column: 17, scope: !18714)
!18743 = !DILocation(line: 98, column: 17, scope: !18744)
!18744 = distinct !DILexicalBlock(scope: !18735, file: !966, line: 97, column: 70)
!18745 = !DILocation(line: 100, column: 22, scope: !18746)
!18746 = distinct !DILexicalBlock(scope: !18714, file: !966, line: 100, column: 17)
!18747 = !DILocation(line: 100, column: 18, scope: !18746)
!18748 = !DILocation(line: 100, column: 30, scope: !18746)
!18749 = !DILocation(line: 100, column: 52, scope: !18746)
!18750 = !DILocation(line: 100, column: 17, scope: !18714)
!18751 = !DILocation(line: 101, column: 17, scope: !18752)
!18752 = distinct !DILexicalBlock(scope: !18746, file: !966, line: 100, column: 58)
!18753 = distinct !{!18753, !18703, !18754}
!18754 = !DILocation(line: 162, column: 5, scope: !18671)
!18755 = !DILocation(line: 103, column: 17, scope: !18756)
!18756 = distinct !DILexicalBlock(scope: !18714, file: !966, line: 103, column: 17)
!18757 = !DILocation(line: 103, column: 28, scope: !18756)
!18758 = !DILocation(line: 103, column: 25, scope: !18756)
!18759 = !DILocation(line: 103, column: 17, scope: !18714)
!18760 = !DILocation(line: 104, column: 17, scope: !18761)
!18761 = distinct !DILexicalBlock(scope: !18756, file: !966, line: 103, column: 37)
!18762 = !DILocation(line: 114, column: 17, scope: !18763)
!18763 = distinct !DILexicalBlock(scope: !18714, file: !966, line: 113, column: 13)
!18764 = !DILocation(line: 114, column: 39, scope: !18763)
!18765 = !DILocation(line: 114, column: 55, scope: !18763)
!18766 = !DILocation(line: 114, column: 53, scope: !18763)
!18767 = !DILocation(line: 115, column: 39, scope: !18763)
!18768 = !DILocation(line: 115, column: 49, scope: !18763)
!18769 = !DILocation(line: 115, column: 47, scope: !18763)
!18770 = !DILocation(line: 114, column: 34, scope: !18763)
!18771 = !DILocation(line: 114, column: 32, scope: !18763)
!18772 = !DILocation(line: 115, column: 59, scope: !18763)
!18773 = !DILocation(line: 115, column: 73, scope: !18763)
!18774 = !DILocation(line: 116, column: 24, scope: !18763)
!18775 = !DILocation(line: 116, column: 30, scope: !18763)
!18776 = !DILocation(line: 0, scope: !18763)
!18777 = distinct !{!18777, !18762, !18778}
!18778 = !DILocation(line: 116, column: 39, scope: !18763)
!18779 = !DILocation(line: 118, column: 17, scope: !18780)
!18780 = distinct !DILexicalBlock(scope: !18714, file: !966, line: 118, column: 17)
!18781 = !DILocation(line: 118, column: 24, scope: !18780)
!18782 = !DILocation(line: 118, column: 17, scope: !18714)
!18783 = !DILocation(line: 119, column: 17, scope: !18784)
!18784 = distinct !DILexicalBlock(scope: !18780, file: !966, line: 118, column: 40)
!18785 = !DILocation(line: 121, column: 24, scope: !18714)
!18786 = !DILocation(line: 121, column: 21, scope: !18714)
!18787 = !DILocation(line: 122, column: 17, scope: !18788)
!18788 = distinct !DILexicalBlock(scope: !18714, file: !966, line: 122, column: 17)
!18789 = !DILocation(line: 122, column: 27, scope: !18788)
!18790 = !DILocation(line: 122, column: 25, scope: !18788)
!18791 = !DILocation(line: 122, column: 17, scope: !18714)
!18792 = !DILocation(line: 123, column: 17, scope: !18793)
!18793 = distinct !DILexicalBlock(scope: !18788, file: !966, line: 122, column: 36)
!18794 = !DILocation(line: 125, column: 9, scope: !18714)
!18795 = !DILocation(line: 129, column: 21, scope: !18796)
!18796 = distinct !DILexicalBlock(scope: !18709, file: !966, line: 129, column: 17)
!18797 = !DILocation(line: 129, column: 17, scope: !18796)
!18798 = !DILocation(line: 129, column: 30, scope: !18796)
!18799 = !DILocation(line: 129, column: 17, scope: !18709)
!18800 = !DILocation(line: 131, column: 21, scope: !18801)
!18801 = distinct !DILexicalBlock(scope: !18802, file: !966, line: 131, column: 21)
!18802 = distinct !DILexicalBlock(scope: !18796, file: !966, line: 129, column: 39)
!18803 = !DILocation(line: 131, column: 28, scope: !18801)
!18804 = !DILocation(line: 131, column: 21, scope: !18802)
!18805 = !DILocation(line: 133, column: 25, scope: !18806)
!18806 = distinct !DILexicalBlock(scope: !18801, file: !966, line: 131, column: 34)
!18807 = !DILocation(line: 133, column: 33, scope: !18806)
!18808 = !DILocation(line: 133, column: 21, scope: !18806)
!18809 = !DILocation(line: 133, column: 39, scope: !18806)
!18810 = !DILocation(line: 135, column: 17, scope: !18806)
!18811 = !DILocation(line: 136, column: 25, scope: !18812)
!18812 = distinct !DILexicalBlock(scope: !18801, file: !966, line: 135, column: 24)
!18813 = !DILocation(line: 136, column: 21, scope: !18812)
!18814 = !DILocation(line: 136, column: 34, scope: !18812)
!18815 = !DILocation(line: 139, column: 21, scope: !18816)
!18816 = distinct !DILexicalBlock(scope: !18802, file: !966, line: 139, column: 21)
!18817 = !DILocation(line: 139, column: 34, scope: !18816)
!18818 = !DILocation(line: 139, column: 31, scope: !18816)
!18819 = !DILocation(line: 139, column: 21, scope: !18802)
!18820 = !DILocation(line: 140, column: 39, scope: !18821)
!18821 = distinct !DILexicalBlock(scope: !18816, file: !966, line: 139, column: 43)
!18822 = !DILocation(line: 140, column: 29, scope: !18821)
!18823 = !DILocation(line: 141, column: 17, scope: !18821)
!18824 = !DILocation(line: 142, column: 17, scope: !18802)
!18825 = !DILocation(line: 144, column: 20, scope: !18709)
!18826 = !DILocation(line: 148, column: 13, scope: !18827)
!18827 = distinct !DILexicalBlock(scope: !18709, file: !966, line: 148, column: 13)
!18828 = !DILocation(line: 148, column: 13, scope: !18709)
!18829 = !DILocation(line: 149, column: 21, scope: !18830)
!18830 = distinct !DILexicalBlock(scope: !18831, file: !966, line: 149, column: 17)
!18831 = distinct !DILexicalBlock(scope: !18827, file: !966, line: 148, column: 39)
!18832 = !DILocation(line: 149, column: 17, scope: !18830)
!18833 = !DILocation(line: 149, column: 30, scope: !18830)
!18834 = !DILocation(line: 149, column: 17, scope: !18831)
!18835 = !DILocation(line: 150, column: 24, scope: !18836)
!18836 = distinct !DILexicalBlock(scope: !18830, file: !966, line: 149, column: 39)
!18837 = !DILocation(line: 151, column: 13, scope: !18836)
!18838 = !DILocation(line: 158, column: 17, scope: !18831)
!18839 = !DILocation(line: 158, column: 13, scope: !18831)
!18840 = !DILocation(line: 158, column: 26, scope: !18831)
!18841 = !DILocation(line: 160, column: 9, scope: !18831)
!18842 = !DILocation(line: 161, column: 16, scope: !18709)
!18843 = !DILocation(line: 163, column: 5, scope: !18671)
!18844 = !DILocation(line: 166, column: 1, scope: !18671)
!18845 = distinct !DISubprogram(name: "parser", scope: !966, file: !966, line: 224, type: !486, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !965, retainedNodes: !471)
!18846 = !DILocalVariable(name: "arg", scope: !18845, file: !966, line: 226, type: !308)
!18847 = !DILocation(line: 226, column: 11, scope: !18845)
!18848 = !DILocalVariable(name: "sitearg", scope: !18845, file: !966, line: 228, type: !308)
!18849 = !DILocation(line: 228, column: 11, scope: !18845)
!18850 = !DILocalVariable(name: "n", scope: !18845, file: !966, line: 230, type: !304)
!18851 = !DILocation(line: 230, column: 12, scope: !18845)
!18852 = !DILocation(line: 236, column: 5, scope: !18845)
!18853 = !DILocation(line: 237, column: 16, scope: !18854)
!18854 = distinct !DILexicalBlock(scope: !18855, file: !966, line: 236, column: 14)
!18855 = distinct !DILexicalBlock(scope: !18856, file: !966, line: 236, column: 5)
!18856 = distinct !DILexicalBlock(scope: !18845, file: !966, line: 236, column: 5)
!18857 = !DILocation(line: 238, column: 13, scope: !18858)
!18858 = distinct !DILexicalBlock(scope: !18854, file: !966, line: 238, column: 13)
!18859 = !DILocation(line: 238, column: 32, scope: !18858)
!18860 = !DILocation(line: 238, column: 13, scope: !18854)
!18861 = !DILocation(line: 239, column: 32, scope: !18862)
!18862 = distinct !DILexicalBlock(scope: !18858, file: !966, line: 238, column: 38)
!18863 = !DILocation(line: 240, column: 13, scope: !18862)
!18864 = !DILocation(line: 249, column: 9, scope: !18862)
!18865 = !DILocation(line: 250, column: 9, scope: !18854)
!18866 = !DILocation(line: 252, column: 17, scope: !18854)
!18867 = !DILocation(line: 252, column: 9, scope: !18854)
!18868 = !DILocation(line: 257, column: 13, scope: !18869)
!18869 = distinct !DILexicalBlock(scope: !18854, file: !966, line: 252, column: 27)
!18870 = !DILocation(line: 260, column: 13, scope: !18869)
!18871 = !DILocation(line: 267, column: 11, scope: !18854)
!18872 = !DILocation(line: 268, column: 9, scope: !18854)
!18873 = !DILocation(line: 268, column: 17, scope: !18854)
!18874 = !DILocation(line: 268, column: 49, scope: !18854)
!18875 = !DILocation(line: 268, column: 56, scope: !18854)
!18876 = !DILocation(line: 268, column: 52, scope: !18854)
!18877 = !DILocation(line: 268, column: 59, scope: !18854)
!18878 = !DILocation(line: 268, column: 67, scope: !18854)
!18879 = !DILocation(line: 269, column: 16, scope: !18854)
!18880 = !DILocation(line: 269, column: 20, scope: !18854)
!18881 = !DILocation(line: 269, column: 18, scope: !18854)
!18882 = !DILocation(line: 0, scope: !18854)
!18883 = !DILocation(line: 270, column: 57, scope: !18884)
!18884 = distinct !DILexicalBlock(scope: !18854, file: !966, line: 269, column: 29)
!18885 = !DILocation(line: 270, column: 53, scope: !18884)
!18886 = !DILocation(line: 270, column: 37, scope: !18884)
!18887 = !DILocation(line: 270, column: 29, scope: !18884)
!18888 = !DILocation(line: 270, column: 22, scope: !18884)
!18889 = !DILocation(line: 270, column: 17, scope: !18884)
!18890 = !DILocation(line: 270, column: 13, scope: !18884)
!18891 = !DILocation(line: 270, column: 20, scope: !18884)
!18892 = !DILocation(line: 271, column: 14, scope: !18884)
!18893 = distinct !{!18893, !18872, !18894}
!18894 = !DILocation(line: 272, column: 9, scope: !18854)
!18895 = !DILocation(line: 273, column: 13, scope: !18896)
!18896 = distinct !DILexicalBlock(scope: !18854, file: !966, line: 273, column: 13)
!18897 = !DILocation(line: 273, column: 18, scope: !18896)
!18898 = !DILocation(line: 273, column: 15, scope: !18896)
!18899 = !DILocation(line: 273, column: 13, scope: !18854)
!18900 = !DILocation(line: 274, column: 13, scope: !18901)
!18901 = distinct !DILexicalBlock(scope: !18896, file: !966, line: 273, column: 27)
!18902 = !DILocation(line: 276, column: 13, scope: !18903)
!18903 = distinct !DILexicalBlock(scope: !18854, file: !966, line: 276, column: 13)
!18904 = !DILocation(line: 276, column: 15, scope: !18903)
!18905 = !DILocation(line: 276, column: 13, scope: !18854)
!18906 = !DILocation(line: 276, column: 31, scope: !18903)
!18907 = !DILabel(scope: !18908, name: "nop", file: !966, line: 277)
!18908 = distinct !DILexicalBlock(scope: !18903, file: !966, line: 276, column: 31)
!18909 = !DILocation(line: 277, column: 13, scope: !18908)
!18910 = !DILocation(line: 278, column: 13, scope: !18908)
!18911 = distinct !{!18911, !18912, !18913}
!18912 = !DILocation(line: 236, column: 5, scope: !18856)
!18913 = !DILocation(line: 818, column: 5, scope: !18856)
!18914 = !DILocation(line: 293, column: 17, scope: !18915)
!18915 = distinct !DILexicalBlock(scope: !18854, file: !966, line: 293, column: 13)
!18916 = !DILocation(line: 293, column: 13, scope: !18915)
!18917 = !DILocation(line: 293, column: 20, scope: !18915)
!18918 = !DILocation(line: 293, column: 13, scope: !18854)
!18919 = !DILocation(line: 294, column: 25, scope: !18920)
!18920 = distinct !DILexicalBlock(scope: !18915, file: !966, line: 293, column: 26)
!18921 = !DILocation(line: 294, column: 23, scope: !18920)
!18922 = !DILocation(line: 294, column: 17, scope: !18920)
!18923 = !DILocation(line: 295, column: 9, scope: !18920)
!18924 = !DILocation(line: 295, column: 20, scope: !18925)
!18925 = distinct !DILexicalBlock(scope: !18915, file: !966, line: 295, column: 20)
!18926 = !DILocation(line: 295, column: 20, scope: !18915)
!18927 = !DILocation(line: 296, column: 17, scope: !18928)
!18928 = distinct !DILexicalBlock(scope: !18925, file: !966, line: 295, column: 53)
!18929 = !DILocation(line: 296, column: 13, scope: !18928)
!18930 = !DILocation(line: 296, column: 20, scope: !18928)
!18931 = !DILocation(line: 297, column: 25, scope: !18928)
!18932 = !DILocation(line: 297, column: 23, scope: !18928)
!18933 = !DILocation(line: 297, column: 27, scope: !18928)
!18934 = !DILocation(line: 297, column: 17, scope: !18928)
!18935 = !DILocation(line: 298, column: 9, scope: !18928)
!18936 = !DILocation(line: 299, column: 13, scope: !18937)
!18937 = distinct !DILexicalBlock(scope: !18925, file: !966, line: 298, column: 16)
!18938 = !DILocation(line: 302, column: 13, scope: !18939)
!18939 = distinct !DILexicalBlock(scope: !18854, file: !966, line: 302, column: 13)
!18940 = !DILocation(line: 302, column: 21, scope: !18939)
!18941 = !DILocation(line: 302, column: 13, scope: !18854)
!18942 = !DILocation(line: 308, column: 25, scope: !18943)
!18943 = distinct !DILexicalBlock(scope: !18939, file: !966, line: 302, column: 27)
!18944 = !DILocation(line: 308, column: 47, scope: !18943)
!18945 = !DILocation(line: 307, column: 13, scope: !18943)
!18946 = !DILocation(line: 310, column: 9, scope: !18943)
!18947 = !DILocation(line: 320, column: 14, scope: !18948)
!18948 = distinct !DILexicalBlock(scope: !18854, file: !966, line: 320, column: 13)
!18949 = !DILocation(line: 320, column: 13, scope: !18854)
!18950 = !DILocation(line: 321, column: 13, scope: !18951)
!18951 = distinct !DILexicalBlock(scope: !18948, file: !966, line: 320, column: 35)
!18952 = !DILocation(line: 322, column: 13, scope: !18951)
!18953 = !DILocation(line: 323, column: 13, scope: !18951)
!18954 = !DILocation(line: 326, column: 14, scope: !18955)
!18955 = distinct !DILexicalBlock(scope: !18854, file: !966, line: 326, column: 13)
!18956 = !DILocation(line: 326, column: 13, scope: !18854)
!18957 = !DILocation(line: 332, column: 20, scope: !18958)
!18958 = distinct !DILexicalBlock(scope: !18955, file: !966, line: 326, column: 35)
!18959 = !DILocation(line: 332, column: 13, scope: !18958)
!18960 = !DILocation(line: 333, column: 9, scope: !18958)
!18961 = !DILocation(line: 333, column: 21, scope: !18962)
!18962 = distinct !DILexicalBlock(scope: !18955, file: !966, line: 333, column: 20)
!18963 = !DILocation(line: 333, column: 20, scope: !18955)
!18964 = !DILocation(line: 334, column: 13, scope: !18965)
!18965 = distinct !DILexicalBlock(scope: !18962, file: !966, line: 333, column: 42)
!18966 = !DILocation(line: 335, column: 9, scope: !18965)
!18967 = !DILocation(line: 335, column: 21, scope: !18968)
!18968 = distinct !DILexicalBlock(scope: !18962, file: !966, line: 335, column: 20)
!18969 = !DILocation(line: 335, column: 20, scope: !18962)
!18970 = !DILocation(line: 336, column: 17, scope: !18971)
!18971 = distinct !DILexicalBlock(scope: !18972, file: !966, line: 336, column: 17)
!18972 = distinct !DILexicalBlock(scope: !18968, file: !966, line: 335, column: 42)
!18973 = !DILocation(line: 336, column: 23, scope: !18971)
!18974 = !DILocation(line: 336, column: 17, scope: !18972)
!18975 = !DILocation(line: 337, column: 17, scope: !18976)
!18976 = distinct !DILexicalBlock(scope: !18971, file: !966, line: 336, column: 29)
!18977 = !DILocation(line: 338, column: 13, scope: !18976)
!18978 = !DILocation(line: 339, column: 20, scope: !18972)
!18979 = !DILocation(line: 339, column: 13, scope: !18972)
!18980 = !DILocation(line: 340, column: 9, scope: !18972)
!18981 = !DILocation(line: 340, column: 21, scope: !18982)
!18982 = distinct !DILexicalBlock(scope: !18968, file: !966, line: 340, column: 20)
!18983 = !DILocation(line: 340, column: 20, scope: !18968)
!18984 = !DILocation(line: 342, column: 45, scope: !18985)
!18985 = distinct !DILexicalBlock(scope: !18982, file: !966, line: 340, column: 42)
!18986 = !DILocation(line: 342, column: 54, scope: !18985)
!18987 = !DILocation(line: 342, column: 65, scope: !18985)
!18988 = !DILocation(line: 343, column: 45, scope: !18985)
!18989 = !DILocation(line: 343, column: 56, scope: !18985)
!18990 = !DILocation(line: 343, column: 67, scope: !18985)
!18991 = !DILocation(line: 341, column: 13, scope: !18985)
!18992 = !DILocation(line: 344, column: 13, scope: !18985)
!18993 = !DILocation(line: 345, column: 21, scope: !18994)
!18994 = distinct !DILexicalBlock(scope: !18982, file: !966, line: 345, column: 20)
!18995 = !DILocation(line: 345, column: 20, scope: !18982)
!18996 = !DILocation(line: 346, column: 13, scope: !18997)
!18997 = distinct !DILexicalBlock(scope: !18994, file: !966, line: 345, column: 42)
!18998 = !DILocation(line: 347, column: 13, scope: !18997)
!18999 = !DILocation(line: 348, column: 13, scope: !18997)
!19000 = !DILocation(line: 407, column: 21, scope: !19001)
!19001 = distinct !DILexicalBlock(scope: !18994, file: !966, line: 407, column: 20)
!19002 = !DILocation(line: 407, column: 41, scope: !19001)
!19003 = !DILocation(line: 407, column: 45, scope: !19001)
!19004 = !DILocation(line: 407, column: 20, scope: !18994)
!19005 = !DILocation(line: 408, column: 13, scope: !19006)
!19006 = distinct !DILexicalBlock(scope: !19001, file: !966, line: 407, column: 66)
!19007 = !DILocation(line: 409, column: 9, scope: !19006)
!19008 = !DILocation(line: 409, column: 21, scope: !19009)
!19009 = distinct !DILexicalBlock(scope: !19001, file: !966, line: 409, column: 20)
!19010 = !DILocation(line: 409, column: 20, scope: !19001)
!19011 = !DILocation(line: 410, column: 13, scope: !19012)
!19012 = distinct !DILexicalBlock(scope: !19009, file: !966, line: 409, column: 42)
!19013 = !DILocation(line: 411, column: 20, scope: !19012)
!19014 = !DILocation(line: 411, column: 13, scope: !19012)
!19015 = !DILocation(line: 412, column: 13, scope: !19012)
!19016 = !DILocation(line: 413, column: 21, scope: !19017)
!19017 = distinct !DILexicalBlock(scope: !19009, file: !966, line: 413, column: 20)
!19018 = !DILocation(line: 413, column: 20, scope: !19009)
!19019 = !DILocation(line: 414, column: 13, scope: !19020)
!19020 = distinct !DILexicalBlock(scope: !19017, file: !966, line: 413, column: 42)
!19021 = !DILocation(line: 415, column: 20, scope: !19020)
!19022 = !DILocation(line: 415, column: 13, scope: !19020)
!19023 = !DILocation(line: 416, column: 13, scope: !19020)
!19024 = !DILocation(line: 418, column: 21, scope: !19025)
!19025 = distinct !DILexicalBlock(scope: !19017, file: !966, line: 418, column: 20)
!19026 = !DILocation(line: 418, column: 20, scope: !19017)
!19027 = !DILocation(line: 419, column: 13, scope: !19028)
!19028 = distinct !DILexicalBlock(scope: !19025, file: !966, line: 418, column: 42)
!19029 = !DILocation(line: 420, column: 13, scope: !19028)
!19030 = !DILocation(line: 421, column: 21, scope: !19031)
!19031 = distinct !DILexicalBlock(scope: !19025, file: !966, line: 421, column: 20)
!19032 = !DILocation(line: 421, column: 20, scope: !19025)
!19033 = !DILocation(line: 422, column: 20, scope: !19034)
!19034 = distinct !DILexicalBlock(scope: !19031, file: !966, line: 421, column: 42)
!19035 = !DILocation(line: 422, column: 13, scope: !19034)
!19036 = !DILocation(line: 423, column: 13, scope: !19034)
!19037 = !DILocation(line: 425, column: 21, scope: !19038)
!19038 = distinct !DILexicalBlock(scope: !19031, file: !966, line: 425, column: 20)
!19039 = !DILocation(line: 425, column: 20, scope: !19031)
!19040 = !DILocation(line: 426, column: 20, scope: !19041)
!19041 = distinct !DILexicalBlock(scope: !19038, file: !966, line: 425, column: 42)
!19042 = !DILocation(line: 426, column: 13, scope: !19041)
!19043 = !DILocation(line: 427, column: 13, scope: !19041)
!19044 = !DILocation(line: 429, column: 21, scope: !19045)
!19045 = distinct !DILexicalBlock(scope: !19038, file: !966, line: 429, column: 20)
!19046 = !DILocation(line: 429, column: 44, scope: !19045)
!19047 = !DILocation(line: 430, column: 21, scope: !19045)
!19048 = !DILocation(line: 430, column: 43, scope: !19045)
!19049 = !DILocation(line: 431, column: 21, scope: !19045)
!19050 = !DILocation(line: 431, column: 40, scope: !19045)
!19051 = !DILocation(line: 432, column: 21, scope: !19045)
!19052 = !DILocation(line: 432, column: 41, scope: !19045)
!19053 = !DILocation(line: 433, column: 21, scope: !19045)
!19054 = !DILocation(line: 433, column: 44, scope: !19045)
!19055 = !DILocation(line: 434, column: 21, scope: !19045)
!19056 = !DILocation(line: 434, column: 41, scope: !19045)
!19057 = !DILocation(line: 435, column: 21, scope: !19045)
!19058 = !DILocation(line: 429, column: 20, scope: !19038)
!19059 = !DILocation(line: 436, column: 13, scope: !19060)
!19060 = distinct !DILexicalBlock(scope: !19045, file: !966, line: 435, column: 41)
!19061 = !DILocation(line: 437, column: 21, scope: !19062)
!19062 = distinct !DILexicalBlock(scope: !19045, file: !966, line: 437, column: 20)
!19063 = !DILocation(line: 437, column: 20, scope: !19045)
!19064 = !DILocation(line: 438, column: 13, scope: !19065)
!19065 = distinct !DILexicalBlock(scope: !19062, file: !966, line: 437, column: 42)
!19066 = !DILocation(line: 446, column: 20, scope: !19067)
!19067 = distinct !DILexicalBlock(scope: !19062, file: !966, line: 446, column: 20)
!19068 = !DILocation(line: 446, column: 29, scope: !19067)
!19069 = !DILocation(line: 446, column: 20, scope: !19062)
!19070 = !DILocation(line: 448, column: 13, scope: !19071)
!19071 = distinct !DILexicalBlock(scope: !19067, file: !966, line: 446, column: 35)
!19072 = !DILocation(line: 449, column: 13, scope: !19071)
!19073 = !DILocation(line: 451, column: 18, scope: !19074)
!19074 = distinct !DILexicalBlock(scope: !19075, file: !966, line: 451, column: 17)
!19075 = distinct !DILexicalBlock(scope: !19067, file: !966, line: 450, column: 16)
!19076 = !DILocation(line: 451, column: 37, scope: !19074)
!19077 = !DILocation(line: 451, column: 41, scope: !19074)
!19078 = !DILocation(line: 451, column: 17, scope: !19075)
!19079 = !DILocation(line: 452, column: 17, scope: !19080)
!19080 = distinct !DILexicalBlock(scope: !19074, file: !966, line: 451, column: 62)
!19081 = !DILocation(line: 453, column: 23, scope: !19080)
!19082 = !DILocation(line: 453, column: 17, scope: !19080)
!19083 = !DILocation(line: 454, column: 17, scope: !19080)
!19084 = !DILocation(line: 455, column: 25, scope: !19085)
!19085 = distinct !DILexicalBlock(scope: !19074, file: !966, line: 455, column: 24)
!19086 = !DILocation(line: 455, column: 24, scope: !19074)
!19087 = !DILocation(line: 456, column: 24, scope: !19088)
!19088 = distinct !DILexicalBlock(scope: !19085, file: !966, line: 455, column: 46)
!19089 = !DILocation(line: 456, column: 17, scope: !19088)
!19090 = !DILocation(line: 458, column: 13, scope: !19088)
!19091 = !DILocation(line: 458, column: 25, scope: !19092)
!19092 = distinct !DILexicalBlock(scope: !19085, file: !966, line: 458, column: 24)
!19093 = !DILocation(line: 458, column: 24, scope: !19085)
!19094 = !DILocation(line: 459, column: 24, scope: !19095)
!19095 = distinct !DILexicalBlock(scope: !19092, file: !966, line: 458, column: 46)
!19096 = !DILocation(line: 459, column: 17, scope: !19095)
!19097 = !DILocation(line: 460, column: 13, scope: !19095)
!19098 = !DILocation(line: 460, column: 25, scope: !19099)
!19099 = distinct !DILexicalBlock(scope: !19092, file: !966, line: 460, column: 24)
!19100 = !DILocation(line: 460, column: 45, scope: !19099)
!19101 = !DILocation(line: 461, column: 24, scope: !19099)
!19102 = !DILocation(line: 461, column: 41, scope: !19099)
!19103 = !DILocation(line: 461, column: 46, scope: !19099)
!19104 = !DILocation(line: 462, column: 24, scope: !19099)
!19105 = !DILocation(line: 462, column: 57, scope: !19099)
!19106 = !DILocation(line: 460, column: 24, scope: !19092)
!19107 = !DILocation(line: 463, column: 17, scope: !19108)
!19108 = distinct !DILexicalBlock(scope: !19099, file: !966, line: 462, column: 63)
!19109 = !DILocation(line: 464, column: 13, scope: !19108)
!19110 = !DILocation(line: 464, column: 25, scope: !19111)
!19111 = distinct !DILexicalBlock(scope: !19099, file: !966, line: 464, column: 24)
!19112 = !DILocation(line: 464, column: 24, scope: !19099)
!19113 = !DILocation(line: 465, column: 17, scope: !19114)
!19114 = distinct !DILexicalBlock(scope: !19111, file: !966, line: 464, column: 46)
!19115 = !DILocation(line: 467, column: 13, scope: !19114)
!19116 = !DILocation(line: 467, column: 24, scope: !19117)
!19117 = distinct !DILexicalBlock(scope: !19111, file: !966, line: 467, column: 24)
!19118 = !DILocation(line: 467, column: 41, scope: !19117)
!19119 = !DILocation(line: 467, column: 46, scope: !19117)
!19120 = !DILocation(line: 468, column: 26, scope: !19117)
!19121 = !DILocation(line: 468, column: 46, scope: !19117)
!19122 = !DILocation(line: 468, column: 50, scope: !19117)
!19123 = !DILocation(line: 467, column: 24, scope: !19111)
!19124 = !DILocation(line: 469, column: 17, scope: !19125)
!19125 = distinct !DILexicalBlock(scope: !19117, file: !966, line: 468, column: 72)
!19126 = !DILocation(line: 470, column: 13, scope: !19125)
!19127 = !DILocation(line: 470, column: 24, scope: !19128)
!19128 = distinct !DILexicalBlock(scope: !19117, file: !966, line: 470, column: 24)
!19129 = !DILocation(line: 470, column: 41, scope: !19128)
!19130 = !DILocation(line: 470, column: 46, scope: !19128)
!19131 = !DILocation(line: 471, column: 26, scope: !19128)
!19132 = !DILocation(line: 471, column: 46, scope: !19128)
!19133 = !DILocation(line: 472, column: 25, scope: !19128)
!19134 = !DILocation(line: 472, column: 46, scope: !19128)
!19135 = !DILocation(line: 472, column: 51, scope: !19128)
!19136 = !DILocation(line: 473, column: 25, scope: !19128)
!19137 = !DILocation(line: 473, column: 50, scope: !19128)
!19138 = !DILocation(line: 470, column: 24, scope: !19117)
!19139 = !DILocation(line: 474, column: 33, scope: !19140)
!19140 = distinct !DILexicalBlock(scope: !19141, file: !966, line: 474, column: 21)
!19141 = distinct !DILexicalBlock(scope: !19128, file: !966, line: 473, column: 65)
!19142 = !DILocation(line: 474, column: 22, scope: !19140)
!19143 = !DILocation(line: 474, column: 21, scope: !19141)
!19144 = !DILocation(line: 475, column: 30, scope: !19145)
!19145 = distinct !DILexicalBlock(scope: !19140, file: !966, line: 474, column: 46)
!19146 = !DILocation(line: 476, column: 21, scope: !19145)
!19147 = !DILocation(line: 477, column: 17, scope: !19145)
!19148 = !DILocation(line: 477, column: 36, scope: !19149)
!19149 = distinct !DILexicalBlock(scope: !19140, file: !966, line: 477, column: 28)
!19150 = !DILocation(line: 477, column: 29, scope: !19149)
!19151 = !DILocation(line: 477, column: 46, scope: !19149)
!19152 = !DILocation(line: 477, column: 50, scope: !19149)
!19153 = !DILocation(line: 477, column: 28, scope: !19140)
!19154 = !DILocation(line: 478, column: 21, scope: !19155)
!19155 = distinct !DILexicalBlock(scope: !19149, file: !966, line: 477, column: 59)
!19156 = !DILocation(line: 479, column: 17, scope: !19155)
!19157 = !DILocation(line: 480, column: 21, scope: !19158)
!19158 = distinct !DILexicalBlock(scope: !19149, file: !966, line: 479, column: 24)
!19159 = !DILocation(line: 483, column: 13, scope: !19141)
!19160 = !DILocation(line: 483, column: 25, scope: !19161)
!19161 = distinct !DILexicalBlock(scope: !19128, file: !966, line: 483, column: 24)
!19162 = !DILocation(line: 483, column: 24, scope: !19128)
!19163 = !DILocalVariable(name: "st", scope: !19164, file: !966, line: 484, type: !19165)
!19164 = distinct !DILexicalBlock(scope: !19161, file: !966, line: 483, column: 46)
!19165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !1095, line: 46, size: 1152, elements: !19166)
!19166 = !{!19167, !19168, !19169, !19170, !19171, !19172, !19173, !19174, !19175, !19176, !19177, !19178, !19183, !19184, !19185}
!19167 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !19165, file: !1095, line: 48, baseType: !478, size: 64)
!19168 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !19165, file: !1095, line: 53, baseType: !482, size: 64, offset: 64)
!19169 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !19165, file: !1095, line: 61, baseType: !833, size: 64, offset: 128)
!19170 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !19165, file: !1095, line: 62, baseType: !349, size: 32, offset: 192)
!19171 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !19165, file: !1095, line: 64, baseType: !339, size: 32, offset: 224)
!19172 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !19165, file: !1095, line: 65, baseType: !360, size: 32, offset: 256)
!19173 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !19165, file: !1095, line: 67, baseType: !326, size: 32, offset: 288)
!19174 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !19165, file: !1095, line: 69, baseType: !478, size: 64, offset: 320)
!19175 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !19165, file: !1095, line: 74, baseType: !346, size: 64, offset: 384)
!19176 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !19165, file: !1095, line: 78, baseType: !1107, size: 64, offset: 448)
!19177 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !19165, file: !1095, line: 80, baseType: !1109, size: 64, offset: 512)
!19178 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !19165, file: !1095, line: 91, baseType: !19179, size: 128, offset: 576)
!19179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !1112, line: 10, size: 128, elements: !19180)
!19180 = !{!19181, !19182}
!19181 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !19179, file: !1112, line: 12, baseType: !333, size: 64)
!19182 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !19179, file: !1112, line: 16, baseType: !1116, size: 64, offset: 64)
!19183 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !19165, file: !1095, line: 92, baseType: !19179, size: 128, offset: 704)
!19184 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !19165, file: !1095, line: 93, baseType: !19179, size: 128, offset: 832)
!19185 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !19165, file: !1095, line: 106, baseType: !1120, size: 192, offset: 960)
!19186 = !DILocation(line: 484, column: 29, scope: !19164)
!19187 = !DILocation(line: 486, column: 42, scope: !19188)
!19188 = distinct !DILexicalBlock(scope: !19164, file: !966, line: 486, column: 21)
!19189 = !DILocation(line: 486, column: 21, scope: !19188)
!19190 = !DILocation(line: 486, column: 68, scope: !19188)
!19191 = !DILocation(line: 486, column: 21, scope: !19164)
!19192 = !DILocation(line: 487, column: 25, scope: !19193)
!19193 = distinct !DILexicalBlock(scope: !19188, file: !966, line: 486, column: 74)
!19194 = !DILocation(line: 488, column: 26, scope: !19195)
!19195 = distinct !DILexicalBlock(scope: !19193, file: !966, line: 488, column: 25)
!19196 = !DILocation(line: 488, column: 25, scope: !19195)
!19197 = !DILocation(line: 488, column: 30, scope: !19195)
!19198 = !DILocation(line: 488, column: 35, scope: !19195)
!19199 = !DILocation(line: 488, column: 45, scope: !19195)
!19200 = !DILocation(line: 488, column: 38, scope: !19195)
!19201 = !DILocation(line: 488, column: 56, scope: !19195)
!19202 = !DILocation(line: 488, column: 61, scope: !19195)
!19203 = !DILocation(line: 489, column: 30, scope: !19195)
!19204 = !DILocation(line: 489, column: 25, scope: !19195)
!19205 = !DILocation(line: 489, column: 40, scope: !19195)
!19206 = !DILocation(line: 489, column: 45, scope: !19195)
!19207 = !DILocation(line: 489, column: 48, scope: !19195)
!19208 = !DILocation(line: 489, column: 68, scope: !19195)
!19209 = !DILocation(line: 488, column: 25, scope: !19193)
!19210 = !DILocation(line: 490, column: 25, scope: !19211)
!19211 = distinct !DILexicalBlock(scope: !19195, file: !966, line: 489, column: 74)
!19212 = !DILocation(line: 491, column: 25, scope: !19211)
!19213 = !DILocation(line: 493, column: 17, scope: !19193)
!19214 = !DILocation(line: 494, column: 17, scope: !19164)
!19215 = !DILocation(line: 495, column: 13, scope: !19164)
!19216 = !DILocation(line: 495, column: 24, scope: !19217)
!19217 = distinct !DILexicalBlock(scope: !19161, file: !966, line: 495, column: 24)
!19218 = !DILocation(line: 495, column: 41, scope: !19217)
!19219 = !DILocation(line: 495, column: 46, scope: !19217)
!19220 = !DILocation(line: 495, column: 50, scope: !19217)
!19221 = !DILocation(line: 495, column: 24, scope: !19161)
!19222 = !DILocation(line: 496, column: 17, scope: !19223)
!19223 = distinct !DILexicalBlock(scope: !19217, file: !966, line: 495, column: 71)
!19224 = !DILocation(line: 497, column: 13, scope: !19223)
!19225 = !DILocation(line: 497, column: 25, scope: !19226)
!19226 = distinct !DILexicalBlock(scope: !19217, file: !966, line: 497, column: 24)
!19227 = !DILocation(line: 497, column: 24, scope: !19217)
!19228 = !DILocation(line: 498, column: 22, scope: !19229)
!19229 = distinct !DILexicalBlock(scope: !19230, file: !966, line: 498, column: 21)
!19230 = distinct !DILexicalBlock(scope: !19226, file: !966, line: 497, column: 46)
!19231 = !DILocation(line: 498, column: 21, scope: !19229)
!19232 = !DILocation(line: 498, column: 26, scope: !19229)
!19233 = !DILocation(line: 498, column: 21, scope: !19230)
!19234 = !DILocation(line: 499, column: 21, scope: !19235)
!19235 = distinct !DILexicalBlock(scope: !19229, file: !966, line: 498, column: 32)
!19236 = !DILocation(line: 500, column: 17, scope: !19235)
!19237 = !DILocalVariable(name: "size", scope: !19238, file: !966, line: 501, type: !3330)
!19238 = distinct !DILexicalBlock(scope: !19229, file: !966, line: 500, column: 24)
!19239 = !DILocation(line: 501, column: 33, scope: !19238)
!19240 = !DILocation(line: 501, column: 57, scope: !19238)
!19241 = !DILocation(line: 501, column: 48, scope: !19238)
!19242 = !DILocation(line: 503, column: 25, scope: !19243)
!19243 = distinct !DILexicalBlock(scope: !19238, file: !966, line: 503, column: 25)
!19244 = !DILocation(line: 503, column: 30, scope: !19243)
!19245 = !DILocation(line: 503, column: 25, scope: !19238)
!19246 = !DILocation(line: 504, column: 25, scope: !19247)
!19247 = distinct !DILexicalBlock(scope: !19243, file: !966, line: 503, column: 43)
!19248 = !DILocation(line: 505, column: 21, scope: !19247)
!19249 = !DILocation(line: 506, column: 32, scope: !19250)
!19250 = distinct !DILexicalBlock(scope: !19243, file: !966, line: 505, column: 28)
!19251 = !DILocation(line: 506, column: 25, scope: !19250)
!19252 = !DILocation(line: 510, column: 13, scope: !19230)
!19253 = !DILocation(line: 510, column: 25, scope: !19254)
!19254 = distinct !DILexicalBlock(scope: !19226, file: !966, line: 510, column: 24)
!19255 = !DILocation(line: 510, column: 44, scope: !19254)
!19256 = !DILocation(line: 510, column: 48, scope: !19254)
!19257 = !DILocation(line: 510, column: 24, scope: !19226)
!19258 = !DILocation(line: 511, column: 17, scope: !19259)
!19259 = distinct !DILexicalBlock(scope: !19254, file: !966, line: 510, column: 69)
!19260 = !DILocation(line: 512, column: 17, scope: !19259)
!19261 = !DILocation(line: 513, column: 17, scope: !19259)
!19262 = !DILocation(line: 514, column: 25, scope: !19263)
!19263 = distinct !DILexicalBlock(scope: !19254, file: !966, line: 514, column: 24)
!19264 = !DILocation(line: 514, column: 45, scope: !19263)
!19265 = !DILocation(line: 514, column: 49, scope: !19263)
!19266 = !DILocation(line: 514, column: 24, scope: !19254)
!19267 = !DILocation(line: 515, column: 17, scope: !19268)
!19268 = distinct !DILexicalBlock(scope: !19263, file: !966, line: 514, column: 70)
!19269 = !DILocation(line: 516, column: 13, scope: !19268)
!19270 = !DILocation(line: 516, column: 25, scope: !19271)
!19271 = distinct !DILexicalBlock(scope: !19263, file: !966, line: 516, column: 24)
!19272 = !DILocation(line: 516, column: 24, scope: !19263)
!19273 = !DILocation(line: 517, column: 22, scope: !19274)
!19274 = distinct !DILexicalBlock(scope: !19275, file: !966, line: 517, column: 21)
!19275 = distinct !DILexicalBlock(scope: !19271, file: !966, line: 516, column: 46)
!19276 = !DILocation(line: 517, column: 21, scope: !19274)
!19277 = !DILocation(line: 517, column: 26, scope: !19274)
!19278 = !DILocation(line: 517, column: 21, scope: !19275)
!19279 = !DILocation(line: 526, column: 32, scope: !19280)
!19280 = distinct !DILexicalBlock(scope: !19281, file: !966, line: 525, column: 21)
!19281 = distinct !DILexicalBlock(scope: !19274, file: !966, line: 517, column: 32)
!19282 = !DILocation(line: 526, column: 25, scope: !19280)
!19283 = !DILocation(line: 528, column: 17, scope: !19281)
!19284 = !DILocation(line: 529, column: 21, scope: !19285)
!19285 = distinct !DILexicalBlock(scope: !19274, file: !966, line: 528, column: 24)
!19286 = !DILocation(line: 531, column: 13, scope: !19275)
!19287 = !DILocation(line: 531, column: 25, scope: !19288)
!19288 = distinct !DILexicalBlock(scope: !19271, file: !966, line: 531, column: 24)
!19289 = !DILocation(line: 531, column: 24, scope: !19271)
!19290 = !DILocation(line: 532, column: 17, scope: !19291)
!19291 = distinct !DILexicalBlock(scope: !19288, file: !966, line: 531, column: 46)
!19292 = !DILocation(line: 533, column: 22, scope: !19293)
!19293 = distinct !DILexicalBlock(scope: !19291, file: !966, line: 533, column: 21)
!19294 = !DILocation(line: 533, column: 21, scope: !19293)
!19295 = !DILocation(line: 533, column: 26, scope: !19293)
!19296 = !DILocation(line: 533, column: 21, scope: !19291)
!19297 = !DILocation(line: 534, column: 28, scope: !19298)
!19298 = distinct !DILexicalBlock(scope: !19293, file: !966, line: 533, column: 32)
!19299 = !DILocation(line: 534, column: 21, scope: !19298)
!19300 = !DILocation(line: 535, column: 17, scope: !19298)
!19301 = !DILocation(line: 536, column: 21, scope: !19302)
!19302 = distinct !DILexicalBlock(scope: !19293, file: !966, line: 535, column: 24)
!19303 = !DILocation(line: 537, column: 31, scope: !19302)
!19304 = !DILocation(line: 539, column: 17, scope: !19291)
!19305 = !DILocation(line: 540, column: 25, scope: !19306)
!19306 = distinct !DILexicalBlock(scope: !19288, file: !966, line: 540, column: 24)
!19307 = !DILocation(line: 540, column: 24, scope: !19288)
!19308 = !DILocation(line: 541, column: 22, scope: !19309)
!19309 = distinct !DILexicalBlock(scope: !19310, file: !966, line: 541, column: 21)
!19310 = distinct !DILexicalBlock(scope: !19306, file: !966, line: 540, column: 46)
!19311 = !DILocation(line: 541, column: 21, scope: !19309)
!19312 = !DILocation(line: 541, column: 26, scope: !19309)
!19313 = !DILocation(line: 541, column: 21, scope: !19310)
!19314 = !DILocation(line: 542, column: 28, scope: !19315)
!19315 = distinct !DILexicalBlock(scope: !19309, file: !966, line: 541, column: 32)
!19316 = !DILocation(line: 542, column: 21, scope: !19315)
!19317 = !DILocation(line: 543, column: 17, scope: !19315)
!19318 = !DILocation(line: 544, column: 21, scope: !19319)
!19319 = distinct !DILexicalBlock(scope: !19309, file: !966, line: 543, column: 24)
!19320 = !DILocation(line: 546, column: 13, scope: !19310)
!19321 = !DILocation(line: 546, column: 25, scope: !19322)
!19322 = distinct !DILexicalBlock(scope: !19306, file: !966, line: 546, column: 24)
!19323 = !DILocation(line: 546, column: 24, scope: !19306)
!19324 = !DILocation(line: 547, column: 38, scope: !19325)
!19325 = distinct !DILexicalBlock(scope: !19322, file: !966, line: 546, column: 46)
!19326 = !DILocation(line: 547, column: 23, scope: !19325)
!19327 = !DILocation(line: 547, column: 21, scope: !19325)
!19328 = !DILocation(line: 548, column: 22, scope: !19329)
!19329 = distinct !DILexicalBlock(scope: !19325, file: !966, line: 548, column: 21)
!19330 = !DILocation(line: 548, column: 21, scope: !19329)
!19331 = !DILocation(line: 548, column: 26, scope: !19329)
!19332 = !DILocation(line: 548, column: 21, scope: !19325)
!19333 = !DILocation(line: 556, column: 32, scope: !19334)
!19334 = distinct !DILexicalBlock(scope: !19335, file: !966, line: 555, column: 21)
!19335 = distinct !DILexicalBlock(scope: !19329, file: !966, line: 548, column: 32)
!19336 = !DILocation(line: 556, column: 40, scope: !19334)
!19337 = !DILocation(line: 556, column: 25, scope: !19334)
!19338 = !DILocation(line: 558, column: 17, scope: !19335)
!19339 = !DILocation(line: 559, column: 21, scope: !19340)
!19340 = distinct !DILexicalBlock(scope: !19329, file: !966, line: 558, column: 24)
!19341 = !DILocation(line: 561, column: 13, scope: !19325)
!19342 = !DILocation(line: 561, column: 25, scope: !19343)
!19343 = distinct !DILexicalBlock(scope: !19322, file: !966, line: 561, column: 24)
!19344 = !DILocation(line: 561, column: 24, scope: !19322)
!19345 = !DILocation(line: 562, column: 38, scope: !19346)
!19346 = distinct !DILexicalBlock(scope: !19343, file: !966, line: 561, column: 46)
!19347 = !DILocation(line: 562, column: 23, scope: !19346)
!19348 = !DILocation(line: 562, column: 21, scope: !19346)
!19349 = !DILocation(line: 563, column: 22, scope: !19350)
!19350 = distinct !DILexicalBlock(scope: !19346, file: !966, line: 563, column: 21)
!19351 = !DILocation(line: 563, column: 21, scope: !19350)
!19352 = !DILocation(line: 563, column: 26, scope: !19350)
!19353 = !DILocation(line: 563, column: 21, scope: !19346)
!19354 = !DILocation(line: 571, column: 32, scope: !19355)
!19355 = distinct !DILexicalBlock(scope: !19356, file: !966, line: 570, column: 21)
!19356 = distinct !DILexicalBlock(scope: !19350, file: !966, line: 563, column: 32)
!19357 = !DILocation(line: 571, column: 25, scope: !19355)
!19358 = !DILocation(line: 573, column: 17, scope: !19356)
!19359 = !DILocation(line: 574, column: 21, scope: !19360)
!19360 = distinct !DILexicalBlock(scope: !19350, file: !966, line: 573, column: 24)
!19361 = !DILocation(line: 577, column: 13, scope: !19346)
!19362 = !DILocation(line: 577, column: 25, scope: !19363)
!19363 = distinct !DILexicalBlock(scope: !19343, file: !966, line: 577, column: 24)
!19364 = !DILocation(line: 577, column: 24, scope: !19343)
!19365 = !DILocation(line: 585, column: 22, scope: !19366)
!19366 = distinct !DILexicalBlock(scope: !19367, file: !966, line: 584, column: 17)
!19367 = distinct !DILexicalBlock(scope: !19363, file: !966, line: 577, column: 46)
!19368 = !DILocation(line: 589, column: 13, scope: !19367)
!19369 = !DILocation(line: 589, column: 25, scope: !19370)
!19370 = distinct !DILexicalBlock(scope: !19363, file: !966, line: 589, column: 24)
!19371 = !DILocation(line: 589, column: 44, scope: !19370)
!19372 = !DILocation(line: 589, column: 48, scope: !19370)
!19373 = !DILocation(line: 589, column: 24, scope: !19363)
!19374 = !DILocation(line: 590, column: 38, scope: !19375)
!19375 = distinct !DILexicalBlock(scope: !19370, file: !966, line: 589, column: 69)
!19376 = !DILocation(line: 590, column: 23, scope: !19375)
!19377 = !DILocation(line: 590, column: 21, scope: !19375)
!19378 = !DILocation(line: 591, column: 22, scope: !19379)
!19379 = distinct !DILexicalBlock(scope: !19375, file: !966, line: 591, column: 21)
!19380 = !DILocation(line: 591, column: 21, scope: !19379)
!19381 = !DILocation(line: 591, column: 26, scope: !19379)
!19382 = !DILocation(line: 591, column: 21, scope: !19375)
!19383 = !DILocation(line: 592, column: 27, scope: !19384)
!19384 = distinct !DILexicalBlock(scope: !19379, file: !966, line: 591, column: 32)
!19385 = !DILocation(line: 592, column: 21, scope: !19384)
!19386 = !DILocation(line: 593, column: 17, scope: !19384)
!19387 = !DILocation(line: 594, column: 21, scope: !19388)
!19388 = distinct !DILexicalBlock(scope: !19379, file: !966, line: 593, column: 24)
!19389 = !DILocation(line: 596, column: 13, scope: !19375)
!19390 = !DILocation(line: 596, column: 25, scope: !19391)
!19391 = distinct !DILexicalBlock(scope: !19370, file: !966, line: 596, column: 24)
!19392 = !DILocation(line: 596, column: 44, scope: !19391)
!19393 = !DILocation(line: 596, column: 48, scope: !19391)
!19394 = !DILocation(line: 596, column: 24, scope: !19370)
!19395 = !DILocation(line: 597, column: 22, scope: !19396)
!19396 = distinct !DILexicalBlock(scope: !19397, file: !966, line: 597, column: 21)
!19397 = distinct !DILexicalBlock(scope: !19391, file: !966, line: 596, column: 69)
!19398 = !DILocation(line: 597, column: 21, scope: !19396)
!19399 = !DILocation(line: 597, column: 26, scope: !19396)
!19400 = !DILocation(line: 597, column: 21, scope: !19397)
!19401 = !DILocation(line: 598, column: 27, scope: !19402)
!19402 = distinct !DILexicalBlock(scope: !19396, file: !966, line: 597, column: 32)
!19403 = !DILocation(line: 598, column: 21, scope: !19402)
!19404 = !DILocation(line: 599, column: 17, scope: !19402)
!19405 = !DILocation(line: 600, column: 21, scope: !19406)
!19406 = distinct !DILexicalBlock(scope: !19396, file: !966, line: 599, column: 24)
!19407 = !DILocation(line: 604, column: 13, scope: !19397)
!19408 = !DILocation(line: 604, column: 25, scope: !19409)
!19409 = distinct !DILexicalBlock(scope: !19391, file: !966, line: 604, column: 24)
!19410 = !DILocation(line: 604, column: 24, scope: !19391)
!19411 = !DILocation(line: 605, column: 22, scope: !19412)
!19412 = distinct !DILexicalBlock(scope: !19413, file: !966, line: 605, column: 21)
!19413 = distinct !DILexicalBlock(scope: !19409, file: !966, line: 604, column: 46)
!19414 = !DILocation(line: 605, column: 21, scope: !19412)
!19415 = !DILocation(line: 605, column: 26, scope: !19412)
!19416 = !DILocation(line: 605, column: 21, scope: !19413)
!19417 = !DILocation(line: 606, column: 28, scope: !19418)
!19418 = distinct !DILexicalBlock(scope: !19412, file: !966, line: 605, column: 32)
!19419 = !DILocation(line: 606, column: 21, scope: !19418)
!19420 = !DILocation(line: 607, column: 17, scope: !19418)
!19421 = !DILocation(line: 608, column: 21, scope: !19422)
!19422 = distinct !DILexicalBlock(scope: !19412, file: !966, line: 607, column: 24)
!19423 = !DILocation(line: 611, column: 13, scope: !19413)
!19424 = !DILocation(line: 611, column: 25, scope: !19425)
!19425 = distinct !DILexicalBlock(scope: !19409, file: !966, line: 611, column: 24)
!19426 = !DILocation(line: 611, column: 24, scope: !19409)
!19427 = !DILocation(line: 619, column: 28, scope: !19428)
!19428 = distinct !DILexicalBlock(scope: !19429, file: !966, line: 618, column: 17)
!19429 = distinct !DILexicalBlock(scope: !19425, file: !966, line: 611, column: 46)
!19430 = !DILocation(line: 619, column: 21, scope: !19428)
!19431 = !DILocation(line: 621, column: 13, scope: !19429)
!19432 = !DILocation(line: 621, column: 25, scope: !19433)
!19433 = distinct !DILexicalBlock(scope: !19425, file: !966, line: 621, column: 24)
!19434 = !DILocation(line: 621, column: 24, scope: !19425)
!19435 = !DILocation(line: 629, column: 28, scope: !19436)
!19436 = distinct !DILexicalBlock(scope: !19437, file: !966, line: 628, column: 17)
!19437 = distinct !DILexicalBlock(scope: !19433, file: !966, line: 621, column: 46)
!19438 = !DILocation(line: 629, column: 21, scope: !19436)
!19439 = !DILocation(line: 632, column: 13, scope: !19437)
!19440 = !DILocation(line: 632, column: 25, scope: !19441)
!19441 = distinct !DILexicalBlock(scope: !19433, file: !966, line: 632, column: 24)
!19442 = !DILocation(line: 632, column: 24, scope: !19433)
!19443 = !DILocation(line: 633, column: 40, scope: !19444)
!19444 = distinct !DILexicalBlock(scope: !19441, file: !966, line: 632, column: 46)
!19445 = !DILocation(line: 633, column: 17, scope: !19444)
!19446 = !DILocation(line: 634, column: 13, scope: !19444)
!19447 = !DILocation(line: 634, column: 25, scope: !19448)
!19448 = distinct !DILexicalBlock(scope: !19441, file: !966, line: 634, column: 24)
!19449 = !DILocation(line: 634, column: 24, scope: !19441)
!19450 = !DILocation(line: 642, column: 29, scope: !19451)
!19451 = distinct !DILexicalBlock(scope: !19452, file: !966, line: 641, column: 17)
!19452 = distinct !DILexicalBlock(scope: !19448, file: !966, line: 634, column: 46)
!19453 = !DILocation(line: 642, column: 28, scope: !19451)
!19454 = !DILocation(line: 642, column: 33, scope: !19451)
!19455 = !DILocation(line: 642, column: 40, scope: !19451)
!19456 = !DILocation(line: 642, column: 21, scope: !19451)
!19457 = !DILocation(line: 644, column: 13, scope: !19452)
!19458 = !DILocation(line: 644, column: 25, scope: !19459)
!19459 = distinct !DILexicalBlock(scope: !19448, file: !966, line: 644, column: 24)
!19460 = !DILocation(line: 644, column: 24, scope: !19448)
!19461 = !DILocation(line: 652, column: 29, scope: !19462)
!19462 = distinct !DILexicalBlock(scope: !19463, file: !966, line: 651, column: 17)
!19463 = distinct !DILexicalBlock(scope: !19459, file: !966, line: 644, column: 46)
!19464 = !DILocation(line: 652, column: 28, scope: !19462)
!19465 = !DILocation(line: 652, column: 33, scope: !19462)
!19466 = !DILocation(line: 652, column: 40, scope: !19462)
!19467 = !DILocation(line: 652, column: 21, scope: !19462)
!19468 = !DILocation(line: 655, column: 13, scope: !19463)
!19469 = !DILocation(line: 655, column: 25, scope: !19470)
!19470 = distinct !DILexicalBlock(scope: !19459, file: !966, line: 655, column: 24)
!19471 = !DILocation(line: 655, column: 24, scope: !19459)
!19472 = !DILocation(line: 656, column: 17, scope: !19473)
!19473 = distinct !DILexicalBlock(scope: !19470, file: !966, line: 655, column: 46)
!19474 = !DILocation(line: 658, column: 13, scope: !19473)
!19475 = !DILocation(line: 658, column: 25, scope: !19476)
!19476 = distinct !DILexicalBlock(scope: !19470, file: !966, line: 658, column: 24)
!19477 = !DILocation(line: 658, column: 24, scope: !19470)
!19478 = !DILocation(line: 659, column: 32, scope: !19479)
!19479 = distinct !DILexicalBlock(scope: !19480, file: !966, line: 659, column: 21)
!19480 = distinct !DILexicalBlock(scope: !19476, file: !966, line: 658, column: 46)
!19481 = !DILocation(line: 659, column: 30, scope: !19479)
!19482 = !DILocation(line: 659, column: 37, scope: !19479)
!19483 = !DILocation(line: 659, column: 21, scope: !19480)
!19484 = !DILocation(line: 660, column: 21, scope: !19485)
!19485 = distinct !DILexicalBlock(scope: !19479, file: !966, line: 659, column: 46)
!19486 = !DILocation(line: 660, column: 29, scope: !19485)
!19487 = !DILocation(line: 660, column: 28, scope: !19485)
!19488 = !DILocation(line: 660, column: 37, scope: !19485)
!19489 = !DILocation(line: 660, column: 42, scope: !19485)
!19490 = !DILocation(line: 660, column: 46, scope: !19485)
!19491 = !DILocation(line: 660, column: 45, scope: !19485)
!19492 = !DILocation(line: 0, scope: !19485)
!19493 = !DILocation(line: 661, column: 32, scope: !19494)
!19494 = distinct !DILexicalBlock(scope: !19485, file: !966, line: 660, column: 81)
!19495 = distinct !{!19495, !19484, !19496}
!19496 = !DILocation(line: 662, column: 21, scope: !19485)
!19497 = !DILocation(line: 663, column: 26, scope: !19498)
!19498 = distinct !DILexicalBlock(scope: !19485, file: !966, line: 663, column: 25)
!19499 = !DILocation(line: 663, column: 25, scope: !19498)
!19500 = !DILocation(line: 663, column: 34, scope: !19498)
!19501 = !DILocation(line: 663, column: 25, scope: !19485)
!19502 = !DILocation(line: 664, column: 33, scope: !19503)
!19503 = distinct !DILexicalBlock(scope: !19498, file: !966, line: 663, column: 40)
!19504 = !DILocation(line: 664, column: 36, scope: !19503)
!19505 = !DILocation(line: 665, column: 21, scope: !19503)
!19506 = !DILocation(line: 666, column: 17, scope: !19485)
!19507 = !DILocation(line: 667, column: 33, scope: !19508)
!19508 = distinct !DILexicalBlock(scope: !19480, file: !966, line: 667, column: 21)
!19509 = !DILocation(line: 667, column: 22, scope: !19508)
!19510 = !DILocation(line: 667, column: 21, scope: !19480)
!19511 = !DILocation(line: 668, column: 25, scope: !19512)
!19512 = distinct !DILexicalBlock(scope: !19513, file: !966, line: 668, column: 25)
!19513 = distinct !DILexicalBlock(scope: !19508, file: !966, line: 667, column: 47)
!19514 = !DILocation(line: 668, column: 33, scope: !19512)
!19515 = !DILocation(line: 668, column: 41, scope: !19512)
!19516 = !DILocation(line: 668, column: 45, scope: !19512)
!19517 = !DILocation(line: 668, column: 44, scope: !19512)
!19518 = !DILocation(line: 668, column: 53, scope: !19512)
!19519 = !DILocation(line: 668, column: 25, scope: !19513)
!19520 = !DILocation(line: 669, column: 25, scope: !19521)
!19521 = distinct !DILexicalBlock(scope: !19512, file: !966, line: 668, column: 59)
!19522 = !DILocation(line: 670, column: 21, scope: !19521)
!19523 = !DILocalVariable(name: "i", scope: !19524, file: !966, line: 671, type: !306)
!19524 = distinct !DILexicalBlock(scope: !19512, file: !966, line: 670, column: 28)
!19525 = !DILocation(line: 671, column: 43, scope: !19524)
!19526 = !DILocation(line: 673, column: 37, scope: !19524)
!19527 = !DILocation(line: 673, column: 29, scope: !19524)
!19528 = !DILocation(line: 673, column: 27, scope: !19524)
!19529 = !DILocation(line: 674, column: 29, scope: !19530)
!19530 = distinct !DILexicalBlock(scope: !19524, file: !966, line: 674, column: 29)
!19531 = !DILocation(line: 674, column: 37, scope: !19530)
!19532 = !DILocation(line: 674, column: 41, scope: !19530)
!19533 = !DILocation(line: 674, column: 40, scope: !19530)
!19534 = !DILocation(line: 674, column: 29, scope: !19524)
!19535 = !DILocation(line: 675, column: 70, scope: !19530)
!19536 = !DILocation(line: 675, column: 29, scope: !19530)
!19537 = !DILocation(line: 676, column: 34, scope: !19538)
!19538 = distinct !DILexicalBlock(scope: !19530, file: !966, line: 676, column: 34)
!19539 = !DILocation(line: 676, column: 36, scope: !19538)
!19540 = !DILocation(line: 676, column: 34, scope: !19530)
!19541 = !DILocation(line: 677, column: 29, scope: !19538)
!19542 = !DILocation(line: 679, column: 40, scope: !19543)
!19543 = distinct !DILexicalBlock(scope: !19538, file: !966, line: 678, column: 30)
!19544 = !DILocation(line: 679, column: 38, scope: !19543)
!19545 = !DILocation(line: 680, column: 58, scope: !19543)
!19546 = !DILocation(line: 680, column: 29, scope: !19543)
!19547 = !DILocation(line: 681, column: 54, scope: !19543)
!19548 = !DILocation(line: 681, column: 45, scope: !19543)
!19549 = !DILocation(line: 681, column: 63, scope: !19543)
!19550 = !DILocation(line: 681, column: 43, scope: !19543)
!19551 = !DILocation(line: 684, column: 17, scope: !19513)
!19552 = !DILocation(line: 684, column: 40, scope: !19553)
!19553 = distinct !DILexicalBlock(scope: !19508, file: !966, line: 684, column: 28)
!19554 = !DILocation(line: 684, column: 29, scope: !19553)
!19555 = !DILocation(line: 684, column: 28, scope: !19508)
!19556 = !DILocation(line: 685, column: 21, scope: !19557)
!19557 = distinct !DILexicalBlock(scope: !19553, file: !966, line: 684, column: 54)
!19558 = !DILocation(line: 686, column: 17, scope: !19557)
!19559 = !DILocation(line: 686, column: 40, scope: !19560)
!19560 = distinct !DILexicalBlock(scope: !19553, file: !966, line: 686, column: 28)
!19561 = !DILocation(line: 686, column: 29, scope: !19560)
!19562 = !DILocation(line: 686, column: 28, scope: !19553)
!19563 = !DILocation(line: 686, column: 54, scope: !19560)
!19564 = !DILabel(scope: !19565, name: "help_site", file: !966, line: 687)
!19565 = distinct !DILexicalBlock(scope: !19560, file: !966, line: 686, column: 54)
!19566 = !DILocation(line: 687, column: 21, scope: !19565)
!19567 = !DILocation(line: 689, column: 21, scope: !19565)
!19568 = !DILocation(line: 694, column: 21, scope: !19565)
!19569 = !DILocation(line: 695, column: 17, scope: !19565)
!19570 = !DILocation(line: 695, column: 40, scope: !19571)
!19571 = distinct !DILexicalBlock(scope: !19560, file: !966, line: 695, column: 28)
!19572 = !DILocation(line: 695, column: 29, scope: !19571)
!19573 = !DILocation(line: 695, column: 28, scope: !19560)
!19574 = !DILocalVariable(name: "sitearg2", scope: !19575, file: !966, line: 696, type: !308)
!19575 = distinct !DILexicalBlock(scope: !19571, file: !966, line: 695, column: 55)
!19576 = !DILocation(line: 696, column: 27, scope: !19575)
!19577 = !DILocalVariable(name: "mode", scope: !19575, file: !966, line: 697, type: !348)
!19578 = !DILocation(line: 697, column: 28, scope: !19575)
!19579 = !DILocation(line: 697, column: 21, scope: !19575)
!19580 = !DILabel(scope: !19575, name: "parsechmod", file: !966, line: 699)
!19581 = !DILocation(line: 699, column: 21, scope: !19575)
!19582 = !DILocation(line: 700, column: 25, scope: !19583)
!19583 = distinct !DILexicalBlock(scope: !19575, file: !966, line: 700, column: 25)
!19584 = !DILocation(line: 700, column: 33, scope: !19583)
!19585 = !DILocation(line: 700, column: 41, scope: !19583)
!19586 = !DILocation(line: 700, column: 45, scope: !19583)
!19587 = !DILocation(line: 700, column: 44, scope: !19583)
!19588 = !DILocation(line: 700, column: 53, scope: !19583)
!19589 = !DILocation(line: 700, column: 25, scope: !19575)
!19590 = !DILocation(line: 701, column: 25, scope: !19591)
!19591 = distinct !DILexicalBlock(scope: !19583, file: !966, line: 700, column: 59)
!19592 = !DILocation(line: 702, column: 25, scope: !19591)
!19593 = !DILocation(line: 704, column: 32, scope: !19575)
!19594 = !DILocation(line: 704, column: 30, scope: !19575)
!19595 = !DILocation(line: 705, column: 21, scope: !19575)
!19596 = !DILocation(line: 705, column: 29, scope: !19575)
!19597 = !DILocation(line: 705, column: 28, scope: !19575)
!19598 = !DILocation(line: 705, column: 38, scope: !19575)
!19599 = !DILocation(line: 705, column: 43, scope: !19575)
!19600 = !DILocation(line: 705, column: 47, scope: !19575)
!19601 = !DILocation(line: 705, column: 46, scope: !19575)
!19602 = !DILocation(line: 0, scope: !19575)
!19603 = !DILocation(line: 706, column: 33, scope: !19604)
!19604 = distinct !DILexicalBlock(scope: !19575, file: !966, line: 705, column: 83)
!19605 = distinct !{!19605, !19595, !19606}
!19606 = !DILocation(line: 707, column: 21, scope: !19575)
!19607 = !DILocation(line: 708, column: 21, scope: !19575)
!19608 = !DILocation(line: 708, column: 29, scope: !19575)
!19609 = !DILocation(line: 708, column: 28, scope: !19575)
!19610 = !DILocation(line: 708, column: 38, scope: !19575)
!19611 = !DILocation(line: 708, column: 43, scope: !19575)
!19612 = !DILocation(line: 708, column: 46, scope: !19575)
!19613 = !DILocation(line: 709, column: 33, scope: !19614)
!19614 = distinct !DILexicalBlock(scope: !19575, file: !966, line: 708, column: 82)
!19615 = distinct !{!19615, !19607, !19616}
!19616 = !DILocation(line: 710, column: 21, scope: !19575)
!19617 = !DILocation(line: 711, column: 26, scope: !19618)
!19618 = distinct !DILexicalBlock(scope: !19575, file: !966, line: 711, column: 25)
!19619 = !DILocation(line: 711, column: 25, scope: !19618)
!19620 = !DILocation(line: 711, column: 35, scope: !19618)
!19621 = !DILocation(line: 711, column: 25, scope: !19575)
!19622 = !DILocation(line: 712, column: 25, scope: !19623)
!19623 = distinct !DILexicalBlock(scope: !19618, file: !966, line: 711, column: 41)
!19624 = !DILocation(line: 713, column: 25, scope: !19623)
!19625 = !DILocation(line: 715, column: 45, scope: !19575)
!19626 = !DILocation(line: 715, column: 37, scope: !19575)
!19627 = !DILocation(line: 715, column: 28, scope: !19575)
!19628 = !DILocation(line: 715, column: 26, scope: !19575)
!19629 = !DILocation(line: 716, column: 25, scope: !19630)
!19630 = distinct !DILexicalBlock(scope: !19575, file: !966, line: 716, column: 25)
!19631 = !DILocation(line: 716, column: 30, scope: !19630)
!19632 = !DILocation(line: 716, column: 25, scope: !19575)
!19633 = !DILocation(line: 717, column: 25, scope: !19634)
!19634 = distinct !DILexicalBlock(scope: !19630, file: !966, line: 716, column: 48)
!19635 = !DILocation(line: 718, column: 25, scope: !19634)
!19636 = !DILocation(line: 720, column: 29, scope: !19575)
!19637 = !DILocation(line: 720, column: 39, scope: !19575)
!19638 = !DILocation(line: 720, column: 21, scope: !19575)
!19639 = !DILabel(scope: !19575, name: "chmod_wayout", file: !966, line: 721)
!19640 = !DILocation(line: 721, column: 21, scope: !19575)
!19641 = !DILocation(line: 723, column: 17, scope: !19575)
!19642 = !DILocation(line: 723, column: 40, scope: !19643)
!19643 = distinct !DILexicalBlock(scope: !19571, file: !966, line: 723, column: 28)
!19644 = !DILocation(line: 723, column: 29, scope: !19643)
!19645 = !DILocation(line: 723, column: 28, scope: !19571)
!19646 = !DILocalVariable(name: "sitearg2", scope: !19647, file: !966, line: 724, type: !308)
!19647 = distinct !DILexicalBlock(scope: !19643, file: !966, line: 723, column: 55)
!19648 = !DILocation(line: 724, column: 27, scope: !19647)
!19649 = !DILocation(line: 726, column: 25, scope: !19650)
!19650 = distinct !DILexicalBlock(scope: !19647, file: !966, line: 726, column: 25)
!19651 = !DILocation(line: 726, column: 33, scope: !19650)
!19652 = !DILocation(line: 726, column: 41, scope: !19650)
!19653 = !DILocation(line: 726, column: 45, scope: !19650)
!19654 = !DILocation(line: 726, column: 44, scope: !19650)
!19655 = !DILocation(line: 726, column: 53, scope: !19650)
!19656 = !DILocation(line: 726, column: 25, scope: !19647)
!19657 = !DILocation(line: 727, column: 25, scope: !19658)
!19658 = distinct !DILexicalBlock(scope: !19650, file: !966, line: 726, column: 59)
!19659 = !DILocation(line: 728, column: 25, scope: !19658)
!19660 = !DILocation(line: 730, column: 45, scope: !19661)
!19661 = distinct !DILexicalBlock(scope: !19647, file: !966, line: 730, column: 25)
!19662 = !DILocation(line: 730, column: 37, scope: !19661)
!19663 = !DILocation(line: 730, column: 35, scope: !19661)
!19664 = !DILocation(line: 730, column: 60, scope: !19661)
!19665 = !DILocation(line: 730, column: 68, scope: !19661)
!19666 = !DILocation(line: 731, column: 25, scope: !19661)
!19667 = !DILocation(line: 731, column: 37, scope: !19661)
!19668 = !DILocation(line: 731, column: 34, scope: !19661)
!19669 = !DILocation(line: 730, column: 25, scope: !19647)
!19670 = !DILocation(line: 732, column: 25, scope: !19671)
!19671 = distinct !DILexicalBlock(scope: !19661, file: !966, line: 731, column: 46)
!19672 = !DILocation(line: 733, column: 25, scope: !19671)
!19673 = !DILocation(line: 735, column: 36, scope: !19674)
!19674 = distinct !DILexicalBlock(scope: !19647, file: !966, line: 735, column: 25)
!19675 = !DILocation(line: 735, column: 25, scope: !19674)
!19676 = !DILocation(line: 735, column: 54, scope: !19674)
!19677 = !DILocation(line: 735, column: 25, scope: !19647)
!19678 = !DILocation(line: 736, column: 48, scope: !19679)
!19679 = distinct !DILexicalBlock(scope: !19674, file: !966, line: 735, column: 60)
!19680 = !DILocation(line: 736, column: 25, scope: !19679)
!19681 = !DILocation(line: 737, column: 25, scope: !19679)
!19682 = !DILocation(line: 739, column: 30, scope: !19647)
!19683 = !DILocation(line: 739, column: 33, scope: !19647)
!19684 = !DILocation(line: 740, column: 45, scope: !19685)
!19685 = distinct !DILexicalBlock(scope: !19647, file: !966, line: 740, column: 25)
!19686 = !DILocation(line: 740, column: 37, scope: !19685)
!19687 = !DILocation(line: 740, column: 35, scope: !19685)
!19688 = !DILocation(line: 740, column: 60, scope: !19685)
!19689 = !DILocation(line: 740, column: 68, scope: !19685)
!19690 = !DILocation(line: 741, column: 25, scope: !19685)
!19691 = !DILocation(line: 741, column: 37, scope: !19685)
!19692 = !DILocation(line: 741, column: 34, scope: !19685)
!19693 = !DILocation(line: 740, column: 25, scope: !19647)
!19694 = !DILocation(line: 741, column: 46, scope: !19685)
!19695 = !DILabel(scope: !19696, name: "utime_no_arg", file: !966, line: 742)
!19696 = distinct !DILexicalBlock(scope: !19685, file: !966, line: 741, column: 46)
!19697 = !DILocation(line: 742, column: 25, scope: !19696)
!19698 = !DILocation(line: 743, column: 25, scope: !19696)
!19699 = !DILocation(line: 744, column: 25, scope: !19696)
!19700 = !DILocation(line: 746, column: 30, scope: !19647)
!19701 = !DILocation(line: 746, column: 33, scope: !19647)
!19702 = !DILocation(line: 747, column: 45, scope: !19703)
!19703 = distinct !DILexicalBlock(scope: !19647, file: !966, line: 747, column: 25)
!19704 = !DILocation(line: 747, column: 37, scope: !19703)
!19705 = !DILocation(line: 747, column: 35, scope: !19703)
!19706 = !DILocation(line: 747, column: 60, scope: !19703)
!19707 = !DILocation(line: 747, column: 68, scope: !19703)
!19708 = !DILocation(line: 748, column: 25, scope: !19703)
!19709 = !DILocation(line: 748, column: 37, scope: !19703)
!19710 = !DILocation(line: 748, column: 34, scope: !19703)
!19711 = !DILocation(line: 747, column: 25, scope: !19647)
!19712 = !DILocation(line: 749, column: 25, scope: !19713)
!19713 = distinct !DILexicalBlock(scope: !19703, file: !966, line: 748, column: 46)
!19714 = !DILocation(line: 751, column: 30, scope: !19647)
!19715 = !DILocation(line: 751, column: 33, scope: !19647)
!19716 = !DILocation(line: 752, column: 45, scope: !19717)
!19717 = distinct !DILexicalBlock(scope: !19647, file: !966, line: 752, column: 25)
!19718 = !DILocation(line: 752, column: 37, scope: !19717)
!19719 = !DILocation(line: 752, column: 35, scope: !19717)
!19720 = !DILocation(line: 752, column: 60, scope: !19717)
!19721 = !DILocation(line: 752, column: 68, scope: !19717)
!19722 = !DILocation(line: 753, column: 25, scope: !19717)
!19723 = !DILocation(line: 753, column: 37, scope: !19717)
!19724 = !DILocation(line: 753, column: 34, scope: !19717)
!19725 = !DILocation(line: 752, column: 25, scope: !19647)
!19726 = !DILocation(line: 754, column: 25, scope: !19727)
!19727 = distinct !DILexicalBlock(scope: !19717, file: !966, line: 753, column: 46)
!19728 = !DILocation(line: 756, column: 30, scope: !19647)
!19729 = !DILocation(line: 756, column: 33, scope: !19647)
!19730 = !DILocation(line: 757, column: 26, scope: !19731)
!19731 = distinct !DILexicalBlock(scope: !19647, file: !966, line: 757, column: 25)
!19732 = !DILocation(line: 757, column: 25, scope: !19731)
!19733 = !DILocation(line: 757, column: 35, scope: !19731)
!19734 = !DILocation(line: 757, column: 25, scope: !19647)
!19735 = !DILocation(line: 758, column: 25, scope: !19736)
!19736 = distinct !DILexicalBlock(scope: !19731, file: !966, line: 757, column: 41)
!19737 = !DILocation(line: 760, column: 29, scope: !19647)
!19738 = !DILocation(line: 760, column: 38, scope: !19647)
!19739 = !DILocation(line: 760, column: 21, scope: !19647)
!19740 = !DILabel(scope: !19647, name: "utime_wayout", file: !966, line: 761)
!19741 = !DILocation(line: 761, column: 21, scope: !19647)
!19742 = !DILocation(line: 764, column: 17, scope: !19647)
!19743 = !DILocation(line: 764, column: 40, scope: !19744)
!19744 = distinct !DILexicalBlock(scope: !19643, file: !966, line: 764, column: 28)
!19745 = !DILocation(line: 764, column: 29, scope: !19744)
!19746 = !DILocation(line: 764, column: 28, scope: !19643)
!19747 = !DILocation(line: 765, column: 25, scope: !19748)
!19748 = distinct !DILexicalBlock(scope: !19749, file: !966, line: 765, column: 25)
!19749 = distinct !DILexicalBlock(scope: !19744, file: !966, line: 764, column: 55)
!19750 = !DILocation(line: 765, column: 33, scope: !19748)
!19751 = !DILocation(line: 765, column: 41, scope: !19748)
!19752 = !DILocation(line: 765, column: 45, scope: !19748)
!19753 = !DILocation(line: 765, column: 44, scope: !19748)
!19754 = !DILocation(line: 765, column: 53, scope: !19748)
!19755 = !DILocation(line: 765, column: 25, scope: !19749)
!19756 = !DILocation(line: 766, column: 25, scope: !19757)
!19757 = distinct !DILexicalBlock(scope: !19748, file: !966, line: 765, column: 59)
!19758 = !DILocation(line: 767, column: 21, scope: !19757)
!19759 = !DILocalVariable(name: "alias", scope: !19760, file: !966, line: 768, type: !385)
!19760 = distinct !DILexicalBlock(scope: !19748, file: !966, line: 767, column: 28)
!19761 = !DILocation(line: 768, column: 37, scope: !19760)
!19762 = !DILocation(line: 770, column: 51, scope: !19763)
!19763 = distinct !DILexicalBlock(scope: !19760, file: !966, line: 770, column: 29)
!19764 = !DILocation(line: 770, column: 38, scope: !19763)
!19765 = !DILocation(line: 770, column: 36, scope: !19763)
!19766 = !DILocation(line: 770, column: 61, scope: !19763)
!19767 = !DILocation(line: 770, column: 29, scope: !19760)
!19768 = !DILocation(line: 771, column: 62, scope: !19769)
!19769 = distinct !DILexicalBlock(scope: !19763, file: !966, line: 770, column: 70)
!19770 = !DILocation(line: 771, column: 71, scope: !19769)
!19771 = !DILocation(line: 771, column: 29, scope: !19769)
!19772 = !DILocation(line: 772, column: 25, scope: !19769)
!19773 = !DILocation(line: 773, column: 64, scope: !19774)
!19774 = distinct !DILexicalBlock(scope: !19763, file: !966, line: 772, column: 32)
!19775 = !DILocation(line: 773, column: 29, scope: !19774)
!19776 = !DILocation(line: 777, column: 17, scope: !19749)
!19777 = !DILocation(line: 777, column: 29, scope: !19778)
!19778 = distinct !DILexicalBlock(scope: !19744, file: !966, line: 777, column: 28)
!19779 = !DILocation(line: 777, column: 28, scope: !19778)
!19780 = !DILocation(line: 777, column: 33, scope: !19778)
!19781 = !DILocation(line: 777, column: 28, scope: !19744)
!19782 = !DILocation(line: 778, column: 69, scope: !19783)
!19783 = distinct !DILexicalBlock(scope: !19778, file: !966, line: 777, column: 39)
!19784 = !DILocation(line: 778, column: 21, scope: !19783)
!19785 = !DILocation(line: 779, column: 17, scope: !19783)
!19786 = !DILocation(line: 780, column: 21, scope: !19787)
!19787 = distinct !DILexicalBlock(scope: !19778, file: !966, line: 779, column: 24)
!19788 = !DILocation(line: 783, column: 13, scope: !19480)
!19789 = !DILocation(line: 783, column: 25, scope: !19790)
!19790 = distinct !DILexicalBlock(scope: !19476, file: !966, line: 783, column: 24)
!19791 = !DILocation(line: 783, column: 24, scope: !19476)
!19792 = !DILocation(line: 784, column: 24, scope: !19793)
!19793 = distinct !DILexicalBlock(scope: !19790, file: !966, line: 783, column: 46)
!19794 = !DILocation(line: 784, column: 17, scope: !19793)
!19795 = !DILocation(line: 785, column: 13, scope: !19793)
!19796 = !DILocation(line: 785, column: 25, scope: !19797)
!19797 = distinct !DILexicalBlock(scope: !19790, file: !966, line: 785, column: 24)
!19798 = !DILocation(line: 785, column: 24, scope: !19790)
!19799 = !DILocation(line: 786, column: 24, scope: !19800)
!19800 = distinct !DILexicalBlock(scope: !19797, file: !966, line: 785, column: 46)
!19801 = !DILocation(line: 786, column: 17, scope: !19800)
!19802 = !DILocation(line: 788, column: 13, scope: !19800)
!19803 = !DILocation(line: 788, column: 25, scope: !19804)
!19804 = distinct !DILexicalBlock(scope: !19797, file: !966, line: 788, column: 24)
!19805 = !DILocation(line: 788, column: 24, scope: !19797)
!19806 = !DILocation(line: 789, column: 27, scope: !19807)
!19807 = distinct !DILexicalBlock(scope: !19804, file: !966, line: 788, column: 47)
!19808 = !DILocation(line: 789, column: 25, scope: !19807)
!19809 = !DILocation(line: 790, column: 17, scope: !19807)
!19810 = !DILocation(line: 792, column: 25, scope: !19811)
!19811 = distinct !DILexicalBlock(scope: !19804, file: !966, line: 792, column: 24)
!19812 = !DILocation(line: 792, column: 24, scope: !19804)
!19813 = !DILocation(line: 793, column: 22, scope: !19814)
!19814 = distinct !DILexicalBlock(scope: !19815, file: !966, line: 793, column: 21)
!19815 = distinct !DILexicalBlock(scope: !19811, file: !966, line: 792, column: 46)
!19816 = !DILocation(line: 793, column: 21, scope: !19814)
!19817 = !DILocation(line: 793, column: 26, scope: !19814)
!19818 = !DILocation(line: 793, column: 21, scope: !19815)
!19819 = !DILocation(line: 794, column: 28, scope: !19820)
!19820 = distinct !DILexicalBlock(scope: !19814, file: !966, line: 793, column: 32)
!19821 = !DILocation(line: 794, column: 21, scope: !19820)
!19822 = !DILocation(line: 795, column: 17, scope: !19820)
!19823 = !DILocation(line: 796, column: 21, scope: !19824)
!19824 = distinct !DILexicalBlock(scope: !19814, file: !966, line: 795, column: 24)
!19825 = !DILocation(line: 798, column: 13, scope: !19815)
!19826 = !DILocation(line: 798, column: 25, scope: !19827)
!19827 = distinct !DILexicalBlock(scope: !19811, file: !966, line: 798, column: 24)
!19828 = !DILocation(line: 798, column: 24, scope: !19811)
!19829 = !DILocation(line: 799, column: 38, scope: !19830)
!19830 = distinct !DILexicalBlock(scope: !19827, file: !966, line: 798, column: 46)
!19831 = !DILocation(line: 799, column: 23, scope: !19830)
!19832 = !DILocation(line: 799, column: 21, scope: !19830)
!19833 = !DILocation(line: 800, column: 22, scope: !19834)
!19834 = distinct !DILexicalBlock(scope: !19830, file: !966, line: 800, column: 21)
!19835 = !DILocation(line: 800, column: 21, scope: !19834)
!19836 = !DILocation(line: 800, column: 26, scope: !19834)
!19837 = !DILocation(line: 800, column: 21, scope: !19830)
!19838 = !DILocation(line: 801, column: 28, scope: !19839)
!19839 = distinct !DILexicalBlock(scope: !19834, file: !966, line: 800, column: 32)
!19840 = !DILocation(line: 801, column: 21, scope: !19839)
!19841 = !DILocation(line: 802, column: 17, scope: !19839)
!19842 = !DILocation(line: 803, column: 21, scope: !19843)
!19843 = distinct !DILexicalBlock(scope: !19834, file: !966, line: 802, column: 24)
!19844 = !DILocation(line: 805, column: 13, scope: !19830)
!19845 = !DILocation(line: 806, column: 17, scope: !19846)
!19846 = distinct !DILexicalBlock(scope: !19827, file: !966, line: 805, column: 20)
!19847 = !DILocation(line: 809, column: 18, scope: !18854)
!19848 = !DILocation(line: 809, column: 9, scope: !18854)
!19849 = !DILabel(scope: !18854, name: "wayout", file: !966, line: 810)
!19850 = !DILocation(line: 810, column: 9, scope: !18854)
!19851 = !DILocation(line: 236, column: 5, scope: !18855)
!19852 = !DILocation(line: 819, column: 1, scope: !18845)
!19853 = distinct !DISubprogram(name: "antiidle", scope: !966, file: !966, line: 19, type: !486, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !965, retainedNodes: !471)
!19854 = !DILocation(line: 21, column: 9, scope: !19855)
!19855 = distinct !DILexicalBlock(scope: !19853, file: !966, line: 21, column: 9)
!19856 = !DILocation(line: 21, column: 18, scope: !19855)
!19857 = !DILocation(line: 21, column: 9, scope: !19853)
!19858 = !DILocation(line: 22, column: 20, scope: !19859)
!19859 = distinct !DILexicalBlock(scope: !19855, file: !966, line: 21, column: 34)
!19860 = !DILocation(line: 22, column: 18, scope: !19859)
!19861 = !DILocation(line: 23, column: 5, scope: !19859)
!19862 = !DILocation(line: 24, column: 14, scope: !19863)
!19863 = distinct !DILexicalBlock(scope: !19864, file: !966, line: 24, column: 13)
!19864 = distinct !DILexicalBlock(scope: !19855, file: !966, line: 23, column: 12)
!19865 = !DILocation(line: 24, column: 27, scope: !19863)
!19866 = !DILocation(line: 24, column: 25, scope: !19863)
!19867 = !DILocation(line: 24, column: 48, scope: !19863)
!19868 = !DILocation(line: 24, column: 39, scope: !19863)
!19869 = !DILocation(line: 24, column: 37, scope: !19863)
!19870 = !DILocation(line: 24, column: 13, scope: !19864)
!19871 = !DILocation(line: 25, column: 66, scope: !19872)
!19872 = distinct !DILexicalBlock(scope: !19863, file: !966, line: 24, column: 63)
!19873 = !DILocation(line: 25, column: 50, scope: !19872)
!19874 = !DILocation(line: 25, column: 13, scope: !19872)
!19875 = !DILocation(line: 28, column: 1, scope: !19853)
!19876 = distinct !DISubprogram(name: "randomdelay", scope: !966, file: !966, line: 36, type: !486, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !965, retainedNodes: !471)
!19877 = !DILocation(line: 39, column: 1, scope: !19876)
!19878 = distinct !DISubprogram(name: "revealextraspc", scope: !966, file: !966, line: 173, type: !12264, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !965, retainedNodes: !471)
!19879 = !DILocalVariable(name: "s_", arg: 1, scope: !19878, file: !966, line: 173, type: !749)
!19880 = !DILocation(line: 173, column: 42, scope: !19878)
!19881 = !DILocalVariable(name: "s", scope: !19878, file: !966, line: 175, type: !382)
!19882 = !DILocation(line: 175, column: 20, scope: !19878)
!19883 = !DILocation(line: 175, column: 42, scope: !19878)
!19884 = !DILocalVariable(name: "sn", scope: !19878, file: !966, line: 176, type: !382)
!19885 = !DILocation(line: 176, column: 20, scope: !19878)
!19886 = !DILocation(line: 178, column: 9, scope: !19887)
!19887 = distinct !DILexicalBlock(scope: !19878, file: !966, line: 178, column: 9)
!19888 = !DILocation(line: 178, column: 11, scope: !19887)
!19889 = !DILocation(line: 178, column: 9, scope: !19878)
!19890 = !DILocation(line: 179, column: 16, scope: !19891)
!19891 = distinct !DILexicalBlock(scope: !19887, file: !966, line: 178, column: 20)
!19892 = !DILocation(line: 179, column: 9, scope: !19891)
!19893 = !DILocation(line: 181, column: 14, scope: !19878)
!19894 = !DILocation(line: 181, column: 5, scope: !19878)
!19895 = !DILocation(line: 182, column: 5, scope: !19878)
!19896 = !DILocation(line: 182, column: 13, scope: !19878)
!19897 = !DILocation(line: 182, column: 12, scope: !19878)
!19898 = !DILocation(line: 182, column: 15, scope: !19878)
!19899 = !DILocation(line: 182, column: 21, scope: !19878)
!19900 = !DILocation(line: 182, column: 24, scope: !19878)
!19901 = !DILocation(line: 0, scope: !19878)
!19902 = !DILocation(line: 183, column: 11, scope: !19903)
!19903 = distinct !DILexicalBlock(scope: !19878, file: !966, line: 182, column: 37)
!19904 = !DILocation(line: 183, column: 14, scope: !19903)
!19905 = distinct !{!19905, !19895, !19906}
!19906 = !DILocation(line: 184, column: 5, scope: !19878)
!19907 = !DILocation(line: 185, column: 10, scope: !19908)
!19908 = distinct !DILexicalBlock(scope: !19878, file: !966, line: 185, column: 9)
!19909 = !DILocation(line: 185, column: 9, scope: !19908)
!19910 = !DILocation(line: 185, column: 12, scope: !19908)
!19911 = !DILocation(line: 185, column: 9, scope: !19878)
!19912 = !DILocation(line: 186, column: 16, scope: !19913)
!19913 = distinct !DILexicalBlock(scope: !19908, file: !966, line: 185, column: 19)
!19914 = !DILocation(line: 186, column: 9, scope: !19913)
!19915 = !DILocation(line: 188, column: 10, scope: !19878)
!19916 = !DILocation(line: 188, column: 8, scope: !19878)
!19917 = !DILocation(line: 189, column: 5, scope: !19878)
!19918 = !DILocation(line: 190, column: 11, scope: !19919)
!19919 = distinct !DILexicalBlock(scope: !19878, file: !966, line: 189, column: 8)
!19920 = !DILocation(line: 191, column: 5, scope: !19919)
!19921 = !DILocation(line: 191, column: 15, scope: !19878)
!19922 = !DILocation(line: 191, column: 14, scope: !19878)
!19923 = !DILocation(line: 191, column: 18, scope: !19878)
!19924 = distinct !{!19924, !19917, !19925}
!19925 = !DILocation(line: 191, column: 23, scope: !19878)
!19926 = !DILocation(line: 192, column: 5, scope: !19878)
!19927 = !DILocation(line: 193, column: 11, scope: !19928)
!19928 = distinct !DILexicalBlock(scope: !19878, file: !966, line: 192, column: 8)
!19929 = !DILocation(line: 194, column: 14, scope: !19930)
!19930 = distinct !DILexicalBlock(scope: !19928, file: !966, line: 194, column: 13)
!19931 = !DILocation(line: 194, column: 13, scope: !19928)
!19932 = !DILocation(line: 195, column: 13, scope: !19933)
!19933 = distinct !DILexicalBlock(scope: !19930, file: !966, line: 194, column: 28)
!19934 = !DILocation(line: 197, column: 10, scope: !19928)
!19935 = !DILocation(line: 197, column: 13, scope: !19928)
!19936 = !DILocation(line: 198, column: 5, scope: !19928)
!19937 = !DILocation(line: 198, column: 14, scope: !19878)
!19938 = !DILocation(line: 198, column: 20, scope: !19878)
!19939 = !DILocation(line: 198, column: 17, scope: !19878)
!19940 = distinct !{!19940, !19926, !19941}
!19941 = !DILocation(line: 198, column: 21, scope: !19878)
!19942 = !DILocation(line: 200, column: 12, scope: !19878)
!19943 = !DILocation(line: 200, column: 5, scope: !19878)
!19944 = !DILocation(line: 201, column: 1, scope: !19878)
!19945 = distinct !DISubprogram(name: "parse_file_time_change", scope: !966, file: !966, line: 205, type: !469, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !965, retainedNodes: !471)
!19946 = !DILocalVariable(name: "arg", arg: 1, scope: !19945, file: !966, line: 205, type: !308)
!19947 = !DILocation(line: 205, column: 42, scope: !19945)
!19948 = !DILocalVariable(name: "name", scope: !19945, file: !966, line: 207, type: !308)
!19949 = !DILocation(line: 207, column: 11, scope: !19945)
!19950 = !DILocation(line: 209, column: 24, scope: !19951)
!19951 = distinct !DILexicalBlock(scope: !19945, file: !966, line: 209, column: 9)
!19952 = !DILocation(line: 209, column: 17, scope: !19951)
!19953 = !DILocation(line: 209, column: 15, scope: !19951)
!19954 = !DILocation(line: 209, column: 35, scope: !19951)
!19955 = !DILocation(line: 209, column: 9, scope: !19945)
!19956 = !DILocation(line: 210, column: 9, scope: !19957)
!19957 = distinct !DILexicalBlock(scope: !19951, file: !966, line: 209, column: 44)
!19958 = !DILocation(line: 211, column: 9, scope: !19957)
!19959 = !DILocation(line: 213, column: 5, scope: !19945)
!19960 = !DILocation(line: 213, column: 13, scope: !19945)
!19961 = !DILocation(line: 213, column: 12, scope: !19945)
!19962 = !DILocation(line: 213, column: 18, scope: !19945)
!19963 = !DILocation(line: 214, column: 13, scope: !19964)
!19964 = distinct !DILexicalBlock(scope: !19945, file: !966, line: 213, column: 26)
!19965 = distinct !{!19965, !19959, !19966}
!19966 = !DILocation(line: 215, column: 5, scope: !19945)
!19967 = !DILocation(line: 216, column: 10, scope: !19968)
!19968 = distinct !DILexicalBlock(scope: !19945, file: !966, line: 216, column: 9)
!19969 = !DILocation(line: 216, column: 9, scope: !19968)
!19970 = !DILocation(line: 216, column: 15, scope: !19968)
!19971 = !DILocation(line: 216, column: 9, scope: !19945)
!19972 = !DILocation(line: 217, column: 9, scope: !19973)
!19973 = distinct !DILexicalBlock(scope: !19968, file: !966, line: 216, column: 21)
!19974 = !DILocation(line: 218, column: 9, scope: !19973)
!19975 = !DILocation(line: 220, column: 13, scope: !19945)
!19976 = !DILocation(line: 220, column: 19, scope: !19945)
!19977 = !DILocation(line: 220, column: 5, scope: !19945)
!19978 = !DILocation(line: 221, column: 1, scope: !19945)
